// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const RESET = 57615
const PROPERTIES = 57616
const PARSER = 57617
const VISIBLE = 57618
const INVISIBLE = 57619
const BTREE = 57620
const HASH = 57621
const RTREE = 57622
const BSI = 57623
const ZONEMAP = 57624
const LEADING = 57625
const BOTH = 57626
const TRAILING = 57627
const UNKNOWN = 57628
const EXPIRE = 57629
const ACCOUNT = 57630
const UNLOCK = 57631
const DAY = 57632
const NEVER = 57633
const PUMP = 57634
const SECOND = 57635
const ASCII = 57636
const COALESCE = 57637
const COLLATION = 57638
const HOUR = 57639
const MICROSECOND = 57640
const MINUTE = 57641
const MONTH = 57642
const QUARTER = 57643
const REPEAT = 57644
const REVERSE = 57645
const ROW_COUNT = 57646
const WEEK = 57647
const REVOKE = 57648
const FUNCTION = 57649
const PRIVILEGES = 57650
const TABLESPACE = 57651
const EXECUTE = 57652
const SUPER = 57653
const GRANT = 57654
const OPTION = 57655
const REFERENCES = 57656
const REPLICATION = 57657
const SLAVE = 57658
const CLIENT = 57659
const USAGE = 57660
const RELOAD = 57661
const FILE = 57662
const TEMPORARY = 57663
const ROUTINE = 57664
const EVENT = 57665
const SHUTDOWN = 57666
const NULLX = 57667
const AUTO_INCREMENT = 57668
const APPROXNUM = 57669
const SIGNED = 57670
const UNSIGNED = 57671
const ZEROFILL = 57672
const ENGINES = 57673
const LOW_CARDINALITY = 57674
const ADMIN_NAME = 57675
const RANDOM = 57676
const SUSPEND = 57677
const ATTRIBUTE = 57678
const HISTORY = 57679
const REUSE = 57680
const CURRENT = 57681
const OPTIONAL = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const UNBOUNDED = 57685
const SECONDARY = 57686
const USER = 57687
const IDENTIFIED = 57688
const CIPHER = 57689
const ISSUER = 57690
const X509 = 57691
const SUBJECT = 57692
const SAN = 57693
const REQUIRE = 57694
const SSL = 57695
const NONE = 57696
const PASSWORD = 57697
const MAX_QUERIES_PER_HOUR = 57698
const MAX_UPDATES_PER_HOUR = 57699
const MAX_CONNECTIONS_PER_HOUR = 57700
const MAX_USER_CONNECTIONS = 57701
const FORMAT = 57702
const VERBOSE = 57703
const CONNECTION = 57704
const TRIGGERS = 57705
const PROFILES = 57706
const LOAD = 57707
const INFILE = 57708
const TERMINATED = 57709
const OPTIONALLY = 57710
const ENCLOSED = 57711
const ESCAPED = 57712
const STARTING = 57713
const LINES = 57714
const ROWS = 57715
const IMPORT = 57716
const MODUMP = 57717
const OVER = 57718
const PRECEDING = 57719
const FOLLOWING = 57720
const GROUPS = 57721
const DATABASES = 57722
const TABLES = 57723
const EXTENDED = 57724
const FULL = 57725
const PROCESSLIST = 57726
const FIELDS = 57727
const COLUMNS = 57728
const OPEN = 57729
const ERRORS = 57730
const WARNINGS = 57731
const INDEXES = 57732
const SCHEMAS = 57733
const NODE = 57734
const LOCKS = 57735
const NAMES = 57736
const GLOBAL = 57737
const SESSION = 57738
const ISOLATION = 57739
const LEVEL = 57740
const READ = 57741
const WRITE = 57742
const ONLY = 57743
const REPEATABLE = 57744
const COMMITTED = 57745
const UNCOMMITTED = 57746
const SERIALIZABLE = 57747
const LOCAL = 57748
const EVENTS = 57749
const PLUGINS = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_TIME = 57753
const LOCALTIME = 57754
const LOCALTIMESTAMP = 57755
const UTC_DATE = 57756
const UTC_TIME = 57757
const UTC_TIMESTAMP = 57758
const REPLACE = 57759
const CONVERT = 57760
const SEPARATOR = 57761
const TIMESTAMPDIFF = 57762
const CURRENT_DATE = 57763
const CURRENT_USER = 57764
const CURRENT_ROLE = 57765
const SECOND_MICROSECOND = 57766
const MINUTE_MICROSECOND = 57767
const MINUTE_SECOND = 57768
const HOUR_MICROSECOND = 57769
const HOUR_SECOND = 57770
const HOUR_MINUTE = 57771
const DAY_MICROSECOND = 57772
const DAY_SECOND = 57773
const DAY_MINUTE = 57774
const DAY_HOUR = 57775
const YEAR_MONTH = 57776
const SQL_TSI_HOUR = 57777
const SQL_TSI_DAY = 57778
const SQL_TSI_WEEK = 57779
const SQL_TSI_MONTH = 57780
const SQL_TSI_QUARTER = 57781
const SQL_TSI_YEAR = 57782
const SQL_TSI_SECOND = 57783
const SQL_TSI_MINUTE = 57784
const RECURSIVE = 57785
const CONFIG = 57786
const DRAINER = 57787
const MATCH = 57788
const AGAINST = 57789
const BOOLEAN = 57790
const LANGUAGE = 57791
const WITH = 57792
const QUERY = 57793
const EXPANSION = 57794
const ADDDATE = 57795
const BIT_AND = 57796
const BIT_OR = 57797
const BIT_XOR = 57798
const CAST = 57799
const COUNT = 57800
const APPROX_COUNT_DISTINCT = 57801
const APPROX_PERCENTILE = 57802
const CURDATE = 57803
const CURTIME = 57804
const DATE_ADD = 57805
const DATE_SUB = 57806
const EXTRACT = 57807
const GROUP_CONCAT = 57808
const MAX = 57809
const MID = 57810
const MIN = 57811
const NOW = 57812
const POSITION = 57813
const SESSION_USER = 57814
const STD = 57815
const STDDEV = 57816
const MEDIAN = 57817
const STDDEV_POP = 57818
const STDDEV_SAMP = 57819
const SUBDATE = 57820
const SUBSTR = 57821
const SUBSTRING = 57822
const SUM = 57823
const SYSDATE = 57824
const SYSTEM_USER = 57825
const TRANSLATE = 57826
const TRIM = 57827
const VARIANCE = 57828
const VAR_POP = 57829
const VAR_SAMP = 57830
const AVG = 57831
const ARROW = 57832
const ROW = 57833
const OUTFILE = 57834
const HEADER = 57835
const MAX_FILE_SIZE = 57836
const FORCE_QUOTE = 57837
const UNUSED = 57838
const BINDINGS = 57839
const DO = 57840
const DECLARE = 57841
const KILL = 57842

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8109

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 86,
	21, 513,
	-2, 494,
	-1, 92,
	211, 694,
	-2, 740,
	-1, 110,
	42, 353,
	211, 353,
	238, 360,
	239, 360,
	407, 353,
	-2, 381,
	-1, 472,
	67, 1106,
	-2, 1614,
	-1, 473,
	67, 1124,
	-2, 1585,
	-1, 478,
	67, 1125,
	-2, 1613,
	-1, 499,
	67, 1038,
	-2, 1661,
	-1, 500,
	67, 1039,
	-2, 1660,
	-1, 501,
	67, 1040,
	-2, 1650,
	-1, 502,
	67, 1625,
	-2, 1645,
	-1, 503,
	67, 1626,
	-2, 1646,
	-1, 504,
	67, 1627,
	-2, 1652,
	-1, 505,
	67, 1628,
	-2, 1635,
	-1, 506,
	67, 1629,
	-2, 1643,
	-1, 507,
	67, 1630,
	-2, 1653,
	-1, 508,
	67, 1631,
	-2, 1654,
	-1, 509,
	67, 1632,
	-2, 1659,
	-1, 510,
	67, 1633,
	-2, 1664,
	-1, 511,
	67, 1634,
	-2, 1665,
	-1, 513,
	67, 1103,
	-2, 1466,
	-1, 520,
	67, 1112,
	-2, 1492,
	-1, 524,
	67, 1116,
	-2, 1531,
	-1, 525,
	67, 1117,
	-2, 1609,
	-1, 533,
	67, 1127,
	-2, 1594,
	-1, 535,
	67, 1129,
	-2, 1604,
	-1, 547,
	67, 1019,
	-2, 1655,
	-1, 548,
	67, 1020,
	-2, 1656,
	-1, 549,
	67, 1021,
	-2, 1657,
	-1, 556,
	21, 514,
	-2, 477,
	-1, 604,
	402, 381,
	403, 381,
	-2, 354,
	-1, 646,
	103, 1466,
	114, 1466,
	133, 1466,
	-2, 1265,
	-1, 683,
	21, 514,
	-2, 477,
	-1, 782,
	21, 513,
	-2, 930,
	-1, 1089,
	67, 1172,
	-2, 1611,
	-1, 1090,
	67, 1173,
	-2, 1612,
	-1, 1246,
	1, 720,
	68, 720,
	518, 720,
	-2, 727,
	-1, 1363,
	133, 1275,
	-2, 1273,
	-1, 1365,
	133, 637,
	-2, 1270,
	-1, 1366,
	133, 638,
	-2, 1271,
	-1, 1660,
	1, 721,
	68, 721,
	518, 721,
	-2, 727,
	-1, 1714,
	21, 513,
	-2, 604,
	-1, 1880,
	65, 425,
	134, 425,
	-2, 835,
	-1, 2139,
	87, 727,
	129, 727,
	166, 727,
	169, 727,
	-2, 783,
	-1, 2141,
	272, 898,
	-2, 877,
	-1, 2171,
	65, 425,
	134, 425,
	-2, 836,
	-1, 2207,
	87, 727,
	129, 727,
	166, 727,
	169, 727,
	-2, 784,
	-1, 2235,
	272, 898,
	-2, 878,
	-1, 2642,
	68, 755,
	134, 755,
	-2, 727,
	-1, 2646,
	68, 755,
	134, 755,
	-2, 727,
	-1, 2660,
	68, 759,
	134, 759,
	-2, 727,
	-1, 2665,
	68, 760,
	134, 760,
	-2, 727,
}

const yyPrivate = 57344

const yyLast = 28591

var yyAct = [...]int{
	443, 2646, 1153, 2648, 2654, 2645, 2622, 423, 1069, 2274,
	2487, 425, 2611, 2568, 445, 2524, 2247, 2552, 2454, 2387,
	2458, 2553, 2434, 2193, 2203, 1644, 809, 1711, 1065, 1324,
	2273, 2133, 981, 2442, 470, 1707, 2290, 2272, 128, 128,
	557, 2257, 367, 30, 128, 362, 369, 1200, 1251, 369,
	935, 2191, 1883, 645, 1072, 2256, 2028, 1741, 1349, 2164,
	920, 1900, 131, 1706, 1312, 2037, 1282, 2145, 2032, 2152,
	1856, 374, 2236, 1290, 1775, 839, 2033, 380, 1342, 1550,
	2105, 1921, 2088, 2048, 552, 417, 909, 2045, 677, 2043,
	1667, 1546, 2026, 1774, 1979, 588, 1203, 422, 1210, 1360,
	1343, 1363, 1351, 922, 1350, 1224, 1305, 1934, 1285, 1545,
	1152, 127, 127, 1695, 1853, 649, 1899, 353, 552, 1264,
	1858, 1263, 1666, 652, 41, 365, 7, 128, 1242, 366,
	19, 363, 8, 3, 1816, 2211, 1547, 424, 1232, 1661,
	1253, 1283, 845, 364, 6, 1578, 1063, 426, 1309, 1003,
	85, 1653, 672, 1276, 1265, 355, 671, 1557, 1275, 647,
	1117, 1103, 1054, 1561, 607, 358, 30, 1632, 41, 458,
	86, 694, 434, 890, 1709, 1238, 1346, 1328, 1062, 637,
	1716, 418, 1241, 1271, 950, 587, 960, 673, 1068, 1123,
	554, 1122, 382, 16, 638, 936, 1002, 9, 973, 4,
	679, 118, 556, 1215, 121, 383, 600, 585, 1972, 1972,
	1777, 352, 368, 1564, 86, 123, 1554, 2303, 1742, 2132,
	1228, 2475, 1345, 555, 810, 122, 122, 122, 1143, 122,
	122, 37, 112, 93, 122, 122, 37, 112, 93, 565,
	2505, 2515, 2265, 351, 714, 122, 1021, 41, 1770, 7,
	1014, 907, 1762, 19, 962, 8, 122, 670, 37, 112,
	93, 372, 1018, 1951, 124, 1562, 1011, 6, 748, 932,
	650, 1551, 1844, 542, 1855, 541, 543, 544, 551, 545,
	546, 1944, 119, 1020, 119, 2541, 119, 1013, 722, 651,
	724, 119, 119, 86, 122, 747, 37, 112, 93, 1293,
	1294, 2539, 119, 941, 942, 963, 947, 1055, 948, 1059,
	617, 741, 939, 119, 117, 938, 941, 942, 725, 1039,
	1008, 105, 1267, 657, 656, 658, 1854, 1071, 566, 729,
	84, 730, 2299, 1058, 2556, 2557, 746, 2476, 2477, 1817,
	577, 2528, 2529, 2288, 2019, 70, 2380, 752, 753, 754,
	751, 119, 2020, 655, 2021, 128, 687, 2383, 2305, 732,
	2291, 2292, 2293, 2294, 2134, 686, 1074, 1757, 697, 688,
	1139, 369, 369, 1136, 128, 2457, 379, 1138, 1135, 1137,
	1141, 1142, 2117, 718, 2153, 1140, 2514, 1302, 1558, 1158,
	1298, 1306, 682, 684, 2057, 2059, 621, 1050, 2270, 2160,
	1690, 660, 1060, 1651, 720, 1861, 1629, 734, 558, 735,
	1199, 1198, 2049, 744, 745, 2364, 723, 726, 653, 113,
	114, 1057, 115, 116, 727, 1967, 413, 1767, 685, 414,
	1965, 784, 697, 2254, 743, 2367, 681, 737, 930, 717,
	719, 2053, 2267, 2566, 2054, 2055, 371, 705, 2298, 92,
	370, 120, 2358, 622, 2300, 709, 2396, 2517, 2518, 2056,
	2543, 579, 1073, 2639, 2555, 1081, 1084, 1085, 683, 110,
	2655, 576, 575, 2577, 2538, 654, 1082, 1568, 1570, 1571,
	2489, 728, 2584, 41, 41, 1563, 927, 92, 111, 120,
	2456, 68, 570, 2320, 2512, 2351, 739, 740, 2319, 2633,
	1867, 908, 733, 2485, 2486, 721, 2489, 110, 104, 103,
	416, 2614, 650, 415, 43, 1146, 1147, 1148, 1149, 1150,
	1151, 1144, 1145, 949, 1056, 690, 691, 648, 2495, 86,
	86, 651, 969, 2051, 2346, 2342, 738, 573, 699, 698,
	659, 968, 1869, 1870, 1871, 1872, 731, 707, 2419, 954,
	377, 2443, 2444, 2445, 2447, 2446, 2656, 568, 926, 736,
	2545, 2546, 934, 933, 925, 2623, 2308, 785, 786, 787,
	788, 2662, 106, 107, 108, 2650, 2128, 1552, 678, 650,
	1579, 706, 910, 702, 703, 1552, 618, 588, 1923, 1925,
	574, 378, 2378, 961, 887, 2121, 1971, 692, 782, 1763,
	1723, 755, 699, 698, 1552, 1555, 913, 78, 789, 1236,
	783, 109, 2041, 79, 569, 818, 1975, 1970, 791, 915,
	941, 942, 373, 1566, 940, 2615, 1981, 1980, 1875, 2038,
	2041, 2516, 714, 917, 931, 1927, 941, 942, 1720, 796,
	552, 552, 552, 964, 965, 985, 985, 582, 583, 584,
	937, 2478, 2479, 38, 1722, 1721, 911, 912, 38, 914,
	1565, 369, 1006, 1006, 1553, 620, 80, 2544, 619, 2455,
	1860, 966, 1296, 983, 983, 81, 36, 2060, 987, 578,
	1009, 1016, 94, 94, 94, 1083, 94, 94, 2050, 2266,
	1307, 94, 94, 2365, 1297, 1771, 2649, 1569, 989, 928,
	1719, 1037, 94, 1968, 820, 821, 944, 945, 1295, 2052,
	624, 713, 749, 94, 985, 2271, 985, 687, 38, 625,
	1012, 2596, 1864, 1865, 1019, 1743, 1070, 1301, 895, 951,
	1299, 951, 1254, 1022, 2042, 2661, 1863, 1051, 2347, 2348,
	1606, 1924, 1254, 1605, 1046, 2069, 628, 750, 2612, 2613,
	1876, 94, 2042, 892, 708, 2344, 1750, 2035, 714, 2343,
	648, 2036, 2039, 894, 2668, 1745, 2667, 556, 2420, 2422,
	2423, 2424, 2421, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 559, 952, 618, 1112, 1113,
	1032, 1033, 2140, 627, 919, 1121, 955, 630, 629, 82,
	83, 87, 2658, 1638, 1075, 1168, 2640, 1067, 943, 750,
	1762, 946, 1052, 2040, 1882, 1174, 41, 2635, 991, 2626,
	1704, 1732, 352, 2625, 1176, 41, 2600, 1180, 1181, 2314,
	750, 1045, 750, 1042, 976, 977, 978, 2570, 967, 552,
	2563, 979, 980, 1005, 1005, 1041, 1705, 86, 711, 1732,
	1705, 86, 1048, 990, 351, 1086, 1551, 1023, 1028, 1007,
	2085, 2558, 86, 2547, 2533, 2510, 620, 1881, 2659, 619,
	1643, 86, 1560, 1001, 663, 668, 669, 2509, 1036, 2508,
	1024, 2507, 712, 2636, 953, 1560, 1035, 1221, 1331, 1560,
	1610, 2497, 1560, 1542, 1655, 1044, 1206, 1207, 556, 1043,
	888, 1040, 1064, 2571, 680, 1061, 2369, 1167, 1642, 1154,
	1239, 1157, 985, 1053, 1214, 1246, 1169, 1111, 712, 588,
	1066, 2375, 1252, 2374, 1705, 985, 1175, 2369, 1177, 1732,
	2534, 2369, 1076, 1077, 1078, 1079, 1080, 2368, 1222, 1918,
	1588, 1245, 1840, 2369, 1205, 2369, 918, 2369, 1272, 1272,
	1105, 1277, 1838, 1836, 1225, 1115, 1277, 2498, 1834, 1239,
	985, 1292, 970, 1212, 1213, 752, 753, 754, 751, 1822,
	1270, 552, 2620, 985, 1119, 1120, 752, 753, 754, 751,
	1155, 752, 753, 754, 751, 1162, 1882, 2376, 1654, 1671,
	1244, 1156, 1779, 1760, 1237, 1239, 985, 2572, 1323, 128,
	128, 1754, 1247, 2369, 1752, 1705, 1333, 1329, 1841, 1587,
	128, 1747, 1178, 2174, 1168, 1168, 1353, 1318, 1839, 1835,
	1641, 1168, 1168, 767, 1835, 2000, 1670, 1639, 672, 1326,
	1258, 2159, 714, 1195, 2074, 750, 1274, 1261, 1262, 1339,
	665, 666, 667, 2070, 1936, 951, 1613, 1303, 1884, 1260,
	1252, 1765, 1764, 1365, 985, 1612, 1559, 923, 750, 1671,
	1266, 1255, 1756, 673, 1308, 1029, 1229, 1748, 1687, 1259,
	1753, 1226, 1325, 1325, 1322, 1230, 1964, 1748, 1233, 1223,
	1357, 1718, 1602, 1325, 1589, 1268, 1269, 1217, 1366, 1220,
	1541, 1962, 1671, 1638, 1336, 1025, 886, 1354, 1543, 794,
	1243, 700, 680, 1248, 1249, 1549, 972, 2609, 2597, 1573,
	1257, 1857, 750, 1256, 1278, 974, 1348, 1576, 1577, 626,
	1110, 750, 1560, 1348, 1160, 1159, 975, 1963, 1316, 1317,
	1291, 1030, 1273, 2499, 1279, 1108, 1109, 1107, 1118, 2086,
	1973, 1281, 1280, 952, 1751, 1725, 689, 680, 1243, 580,
	1304, 1785, 1118, 41, 1584, 1226, 1548, 1327, 1851, 754,
	751, 1226, 1226, 1319, 650, 752, 753, 754, 751, 2532,
	1320, 650, 958, 959, 1321, 1313, 1314, 1315, 752, 753,
	754, 751, 751, 651, 1064, 1337, 971, 1787, 1617, 1240,
	651, 2354, 1161, 2353, 2149, 1539, 1358, 1355, 1359, 86,
	1364, 2144, 1540, 1940, 994, 995, 996, 997, 998, 999,
	1000, 2644, 2430, 1179, 1186, 1544, 1182, 1183, 1184, 1185,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 768, 769,
	770, 771, 772, 773, 774, 767, 631, 128, 128, 1567,
	1810, 953, 2337, 1143, 2428, 2426, 1575, 1592, 128, 1668,
	2429, 770, 771, 772, 773, 774, 767, 650, 1277, 1794,
	1572, 1678, 623, 1172, 2629, 2594, 2632, 362, 2578, 1574,
	2467, 2436, 2414, 1173, 2416, 1277, 782, 1583, 2413, 2412,
	1105, 2409, 2427, 2425, 2403, 885, 882, 883, 884, 2400,
	1292, 1799, 672, 1798, 1797, 1795, 2399, 1581, 2268, 2156,
	1585, 758, 759, 760, 761, 762, 763, 764, 756, 2631,
	1647, 1649, 2415, 2058, 2017, 752, 753, 754, 751, 985,
	2157, 1664, 752, 753, 754, 751, 2016, 673, 1958, 1938,
	1006, 1637, 1292, 1636, 1677, 1736, 2269, 1738, 1635, 1631,
	1595, 1630, 1026, 1596, 905, 1600, 2044, 1730, 2565, 2549,
	1712, 1712, 1713, 1712, 1717, 1796, 1715, 413, 2158, 2435,
	414, 1611, 2660, 2204, 1614, 1615, 1616, 1681, 2530, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1634, 1627, 674,
	675, 676, 1662, 2493, 1993, 1139, 2492, 1683, 1136, 1685,
	1266, 2417, 1138, 1135, 1137, 1141, 1142, 2410, 1735, 1676,
	1140, 1656, 1679, 1680, 766, 765, 775, 776, 768, 769,
	770, 771, 772, 773, 774, 767, 1675, 2406, 2405, 2550,
	2404, 1682, 1684, 1608, 2500, 1686, 2366, 2339, 1688, 1992,
	2304, 2202, 1691, 2630, 2657, 2200, 1672, 2167, 2637, 2155,
	650, 752, 753, 754, 751, 2154, 2151, 1586, 2461, 818,
	2120, 752, 753, 754, 751, 1776, 2015, 1969, 1939, 1714,
	1645, 1646, 1726, 1727, 1728, 1930, 498, 497, 2062, 1733,
	752, 753, 754, 751, 1800, 1801, 1640, 1633, 1740, 1734,
	766, 765, 775, 776, 768, 769, 770, 771, 772, 773,
	774, 767, 1338, 1235, 1027, 1226, 1226, 1226, 819, 814,
	813, 1291, 1598, 752, 753, 754, 751, 795, 2386, 122,
	2168, 1005, 112, 93, 752, 753, 754, 751, 2139, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1146, 1147, 1148, 1149, 1150, 1151, 1144, 1145, 2130, 2129,
	2363, 2112, 1758, 2104, 2606, 2103, 2075, 1998, 1991, 2196,
	1983, 1978, 985, 1837, 985, 1597, 985, 1833, 1832, 1618,
	1609, 687, 752, 753, 754, 751, 119, 2357, 1607, 1604,
	1772, 752, 753, 754, 751, 2604, 1603, 752, 753, 754,
	751, 1601, 1768, 1594, 1591, 1590, 2195, 1171, 1170, 985,
	1803, 766, 765, 775, 776, 768, 769, 770, 771, 772,
	773, 774, 767, 1811, 122, 992, 2608, 985, 752, 753,
	754, 751, 2602, 2585, 2582, 2580, 1813, 983, 1781, 811,
	2466, 1802, 766, 765, 775, 776, 768, 769, 770, 771,
	772, 773, 774, 767, 2124, 983, 2452, 2440, 2437, 1812,
	766, 765, 775, 776, 768, 769, 770, 771, 772, 773,
	774, 767, 1996, 2432, 2392, 985, 752, 753, 754, 751,
	1995, 119, 1789, 1202, 2361, 1769, 1880, 2360, 2359, 2356,
	2350, 2335, 1886, 921, 752, 753, 754, 751, 1783, 2184,
	2182, 1761, 752, 753, 754, 751, 2162, 2150, 1895, 2002,
	1759, 1211, 1204, 687, 1292, 1292, 1292, 1292, 1766, 1877,
	1852, 1746, 1901, 1842, 1994, 687, 1292, 1724, 1850, 1669,
	1106, 119, 30, 1831, 1901, 1216, 1874, 1782, 1219, 1209,
	1208, 1780, 1049, 1015, 985, 889, 752, 753, 754, 751,
	1793, 837, 128, 128, 1830, 752, 753, 754, 751, 1878,
	1064, 836, 835, 834, 1917, 833, 832, 831, 1818, 1168,
	830, 1168, 1887, 1823, 1950, 829, 752, 753, 754, 751,
	828, 1897, 827, 985, 826, 825, 1786, 1916, 824, 823,
	822, 1712, 817, 816, 1804, 1805, 815, 812, 808, 1888,
	1808, 1809, 1847, 1866, 1956, 807, 805, 1892, 1879, 1893,
	1945, 804, 1814, 41, 803, 7, 1662, 1952, 1890, 19,
	1873, 8, 802, 1885, 1896, 1932, 1933, 801, 1894, 800,
	799, 1225, 1898, 6, 1915, 798, 1949, 1913, 1889, 1957,
	1226, 1914, 1891, 1845, 1846, 1233, 797, 793, 1947, 1926,
	556, 792, 1931, 1928, 1953, 1902, 1903, 1904, 1905, 86,
	716, 1961, 1984, 1243, 1674, 1986, 1941, 1988, 1937, 1966,
	1658, 1946, 1943, 687, 1960, 1948, 1954, 2047, 1955, 2089,
	2090, 704, 2031, 1291, 1291, 1291, 1291, 2590, 2588, 128,
	2554, 1974, 2092, 1868, 1731, 1291, 1341, 1580, 687, 1976,
	715, 2095, 1292, 1668, 2094, 2073, 1982, 2031, 1910, 1829,
	1907, 2077, 1985, 1911, 1906, 1989, 1990, 1987, 2047, 766,
	765, 775, 776, 768, 769, 770, 771, 772, 773, 774,
	767, 752, 753, 754, 751, 1849, 1828, 86, 560, 561,
	562, 563, 1908, 1912, 86, 1701, 1702, 1909, 1226, 2643,
	1755, 559, 2187, 1226, 2186, 2022, 2023, 1803, 752, 753,
	754, 751, 2063, 1749, 1663, 2064, 2065, 2066, 2071, 1196,
	2001, 69, 40, 39, 2003, 2004, 2005, 2006, 1999, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2068, 2185, 1977,
	2067, 128, 1744, 2072, 1645, 1646, 128, 1778, 125, 1773,
	993, 891, 2083, 2025, 1652, 2082, 2081, 2093, 710, 2100,
	2101, 2102, 1997, 348, 349, 350, 2306, 2110, 2080, 2024,
	1250, 2521, 2097, 1160, 1159, 766, 765, 775, 776, 768,
	769, 770, 771, 772, 773, 774, 767, 347, 2109, 903,
	904, 901, 902, 2113, 899, 900, 128, 897, 898, 2076,
	2114, 957, 956, 2078, 2079, 2143, 1827, 2115, 742, 2099,
	2084, 2116, 1538, 924, 2118, 893, 2603, 2119, 2483, 2122,
	2471, 1291, 2469, 2397, 2393, 2096, 1935, 559, 752, 753,
	754, 751, 2385, 2384, 2382, 985, 985, 2137, 2286, 2285,
	1292, 2171, 766, 765, 775, 776, 768, 769, 770, 771,
	772, 773, 774, 767, 2201, 2198, 687, 560, 561, 562,
	563, 2136, 2135, 983, 2165, 1901, 2107, 2163, 896, 2138,
	559, 2106, 2146, 1254, 2146, 1826, 2148, 2141, 1959, 2142,
	2189, 1593, 1168, 765, 775, 776, 768, 769, 770, 771,
	772, 773, 774, 767, 2147, 2178, 2173, 752, 753, 754,
	751, 1712, 2169, 2592, 2591, 2591, 2170, 701, 2592, 2352,
	2111, 687, 929, 2208, 48, 2258, 2260, 2179, 2258, 2258,
	2031, 2180, 2177, 775, 776, 768, 769, 770, 771, 772,
	773, 774, 767, 687, 1, 1234, 564, 2197, 1825, 1340,
	2190, 1919, 1920, 2098, 2194, 2123, 1922, 1556, 1689, 1650,
	2061, 916, 2125, 1252, 1824, 2283, 581, 2259, 1163, 2199,
	752, 753, 754, 751, 86, 906, 1034, 2233, 662, 2205,
	696, 2301, 1031, 2261, 2262, 695, 752, 753, 754, 751,
	2255, 2310, 2172, 1697, 1700, 1701, 1702, 1698, 2175, 1699,
	1703, 2176, 693, 2277, 2173, 1116, 1821, 460, 1344, 2280,
	2433, 2281, 2282, 2520, 1820, 2567, 2263, 2465, 1819, 1291,
	2523, 1047, 444, 2377, 985, 2018, 2287, 2338, 752, 753,
	754, 751, 2379, 1815, 2289, 128, 752, 753, 754, 751,
	752, 753, 754, 751, 2260, 2313, 1843, 2192, 1226, 1942,
	596, 2181, 2165, 492, 2183, 752, 753, 754, 751, 468,
	2311, 2312, 806, 2315, 2316, 2317, 2318, 1017, 2188, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2340, 2255, 2362, 1010, 664, 2336, 467,
	2278, 2279, 2161, 2398, 1807, 1862, 567, 661, 1806, 2373,
	597, 1628, 2370, 1784, 2131, 1197, 2381, 1218, 2355, 2372,
	1114, 1201, 2264, 2653, 2431, 2642, 752, 753, 754, 751,
	752, 753, 754, 751, 2621, 752, 753, 754, 751, 2394,
	2601, 2488, 752, 753, 754, 751, 2638, 687, 2537, 2411,
	687, 687, 687, 2583, 2297, 2295, 2296, 2576, 2484, 2395,
	687, 2307, 384, 1300, 550, 635, 2453, 2463, 385, 1673,
	2513, 2439, 571, 1657, 2401, 2402, 1712, 2438, 572, 1660,
	2407, 2408, 2448, 2481, 2441, 1659, 2460, 2449, 2450, 2451,
	2459, 1087, 985, 985, 757, 1104, 2126, 2470, 2474, 2472,
	2473, 2468, 2127, 1692, 790, 421, 1582, 433, 2482, 427,
	1859, 2248, 1929, 47, 2462, 46, 45, 44, 1332, 1361,
	983, 983, 462, 128, 2490, 2491, 1697, 1700, 1701, 1702,
	1698, 687, 1699, 1703, 130, 1362, 2480, 2302, 2525, 442,
	441, 440, 439, 687, 1696, 1694, 1693, 2371, 1287, 1286,
	1330, 2551, 2496, 2503, 2239, 2502, 2504, 2527, 2349, 2418,
	2345, 2341, 2494, 2207, 2206, 2234, 86, 2235, 2506, 2391,
	2241, 2526, 844, 840, 687, 842, 843, 2519, 2249, 841,
	2511, 1792, 1788, 2535, 2029, 2030, 2531, 2027, 2091, 2087,
	1352, 2242, 1231, 1848, 1288, 1284, 1325, 2237, 2276, 2540,
	2542, 553, 2252, 2253, 31, 5, 29, 28, 2238, 27,
	14, 2548, 15, 13, 1038, 12, 18, 26, 2559, 2560,
	2561, 2562, 25, 2569, 24, 2574, 23, 687, 77, 76,
	75, 74, 22, 11, 73, 2575, 1070, 2579, 72, 2581,
	71, 21, 2573, 2243, 20, 66, 67, 58, 57, 56,
	65, 64, 63, 595, 55, 54, 53, 52, 62, 2586,
	2391, 2589, 2527, 2599, 2587, 61, 60, 59, 51, 50,
	2593, 687, 49, 687, 91, 2564, 2526, 2598, 90, 2605,
	1070, 2607, 1070, 2610, 2595, 89, 88, 32, 33, 34,
	35, 101, 100, 102, 98, 2616, 96, 99, 2569, 687,
	2617, 97, 95, 42, 2624, 10, 17, 2628, 1070, 2501,
	2, 2634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2251, 0, 2034, 2641, 0, 0, 0, 0, 0, 0,
	2652, 0, 2651, 778, 0, 781, 0, 0, 0, 0,
	2663, 0, 2665, 0, 2664, 2666, 0, 2245, 0, 2652,
	779, 780, 777, 0, 766, 765, 775, 776, 768, 769,
	770, 771, 772, 773, 774, 767, 0, 0, 0, 2244,
	2246, 0, 0, 1477, 1519, 0, 0, 1466, 297, 1424,
	1479, 1397, 1413, 1487, 1414, 1415, 1452, 1376, 1434, 259,
	1411, 0, 0, 0, 2391, 0, 0, 1469, 1368, 1400,
	1401, 1370, 1407, 1371, 1398, 1426, 204, 1396, 1437, 229,
	1449, 1410, 1431, 1485, 0, 0, 289, 243, 0, 0,
	1429, 1471, 1432, 1457, 1423, 1453, 1384, 1445, 1480, 1412,
	0, 1450, 1481, 0, 0, 2254, 0, 674, 675, 676,
	0, 0, 0, 0, 185, 0, 0, 2240, 0, 0,
	1448, 1475, 1409, 2250, 188, 1478, 1430, 1451, 0, 2619,
	1369, 1446, 0, 1374, 1377, 1486, 1473, 1404, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 1433, 1454,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 1442, 0, 0, 0, 1379, 1375, 0, 1425,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 1518, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 0, 307,
	335, 197, 326, 1378, 318, 180, 1513, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 0,
	219, 267, 233, 268, 220, 245, 244, 246, 1497, 1498,
	1499, 1500, 1501, 346, 1509, 1510, 0, 1514, 1515, 1516,
	1383, 0, 1403, 1455, 0, 1367, 1464, 1472, 1422, 320,
	1474, 1419, 1418, 1504, 0, 1503, 293, 1505, 1506, 228,
	1470, 1399, 1408, 336, 1406, 279, 261, 1476, 1441, 1517,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 1502,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 1511, 0, 1512,
	332, 211, 169, 315, 0, 257, 0, 1467, 1372, 1382,
	1380, 1416, 1443, 1444, 253, 331, 1459, 1463, 1460, 1488,
	282, 0, 0, 0, 0, 0, 222, 263, 1461, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1373, 0, 290, 313, 325, 342, 345, 1520, 1521, 1522,
	173, 344, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 316,
	1417, 1390, 1428, 324, 1393, 1391, 1458, 1392, 1447, 340,
	247, 248, 249, 250, 214, 0, 190, 343, 272, 1438,
	1421, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1439, 1531,
	1532, 1533, 1534, 1535, 1395, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 1465, 1536, 1537, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 1389, 1394, 1388, 1435, 1436, 1482, 1483,
	1484, 1456, 1381, 1468, 0, 1385, 1387, 1386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1462, 297, 474,
	1440, 170, 0, 230, 1489, 271, 209, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 204, 0, 0, 229,
	0, 0, 0, 466, 0, 0, 289, 243, 0, 0,
	0, 0, 521, 529, 0, 1507, 1508, 328, 329, 330,
	314, 0, 201, 1530, 428, 0, 0, 459, 498, 497,
	446, 455, 0, 0, 185, 447, 0, 454, 448, 452,
	451, 449, 450, 0, 513, 0, 0, 0, 0, 0,
	0, 419, 432, 2388, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 475, 0, 431, 0, 0, 477, 456, 457,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 453, 473,
	478, 197, 535, 471, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 536,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 320,
	0, 0, 519, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 472, 0, 279, 261, 532, 420, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 517, 257, 0, 531, 512, 514,
	515, 518, 522, 523, 524, 525, 526, 528, 530, 534,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 2389, 0, 0, 0, 2390, 0, 533,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 476,
	247, 248, 249, 250, 520, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 542, 516, 541, 543, 544, 540, 545,
	546, 527, 438, 0, 481, 538, 537, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 0, 271, 209, 505, 485, 486,
	487, 437, 488, 483, 484, 506, 479, 502, 503, 461,
	464, 489, 501, 490, 504, 507, 508, 547, 548, 496,
	549, 493, 509, 500, 499, 491, 480, 510, 511, 465,
	463, 494, 495, 482, 297, 474, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 204, 0, 0, 229, 0, 0, 0, 466,
	0, 0, 289, 243, 0, 0, 0, 0, 521, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 0, 0, 459, 498, 497, 446, 455, 0, 0,
	185, 447, 0, 454, 448, 452, 451, 449, 450, 0,
	513, 0, 0, 0, 0, 0, 0, 419, 432, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 0, 0, 0, 0, 475, 0,
	431, 0, 0, 477, 456, 457, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 453, 473, 478, 197, 535, 471,
	318, 180, 0, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 536, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 320, 0, 0, 519, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 472,
	0, 279, 261, 532, 420, 0, 277, 231, 305, 269,
	311, 295, 319, 273, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 1165, 1164, 1166, 332, 211, 169, 315,
	517, 257, 0, 531, 512, 514, 515, 518, 522, 523,
	524, 525, 526, 528, 530, 534, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 476, 247, 248, 249, 250,
	520, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 254, 221, 287, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 236, 0, 0, 542,
	516, 541, 543, 544, 540, 545, 546, 527, 438, 0,
	481, 538, 537, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 505, 485, 486, 487, 437, 488, 483,
	484, 506, 479, 502, 503, 461, 464, 489, 501, 490,
	504, 507, 508, 547, 548, 496, 549, 493, 509, 500,
	499, 491, 480, 510, 511, 465, 463, 494, 495, 482,
	297, 474, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 204, 0,
	0, 229, 0, 0, 0, 466, 0, 0, 289, 243,
	0, 0, 0, 0, 521, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 0, 0, 459,
	498, 497, 446, 455, 0, 0, 185, 447, 0, 454,
	448, 452, 451, 449, 450, 0, 513, 0, 0, 0,
	0, 0, 0, 419, 432, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	0, 0, 0, 0, 475, 0, 431, 0, 0, 477,
	456, 457, 0, 0, 176, 294, 310, 186, 285, 323,
	191, 292, 181, 258, 281, 0, 0, 178, 308, 291,
	240, 223, 224, 177, 0, 276, 202, 215, 198, 256,
	453, 473, 478, 197, 535, 471, 318, 180, 0, 317,
	255, 304, 309, 241, 235, 179, 306, 239, 234, 227,
	206, 536, 219, 267, 233, 268, 220, 245, 244, 246,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 320, 0, 0, 519, 0, 0, 0, 293, 0,
	0, 228, 0, 0, 0, 472, 0, 279, 261, 532,
	420, 0, 277, 231, 305, 269, 311, 295, 319, 273,
	270, 171, 296, 200, 242, 182, 184, 196, 203, 205,
	207, 208, 251, 252, 264, 284, 298, 299, 300, 199,
	192, 278, 193, 217, 194, 172, 286, 195, 174, 265,
	303, 0, 213, 274, 238, 175, 237, 266, 302, 301,
	183, 327, 333, 334, 338, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 332, 211, 169, 315, 517, 257, 0, 531,
	512, 514, 515, 518, 522, 523, 524, 525, 526, 528,
	530, 534, 282, 0, 0, 0, 0, 0, 222, 263,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 313, 325, 342, 345, 0,
	0, 0, 173, 344, 0, 2389, 0, 0, 0, 2390,
	0, 533, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 476, 247, 248, 249, 250, 520, 0, 190, 343,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 210, 216,
	0, 218, 189, 262, 212, 322, 225, 0, 0, 0,
	254, 221, 287, 226, 232, 275, 321, 260, 280, 187,
	312, 288, 236, 0, 0, 542, 516, 541, 543, 544,
	540, 545, 546, 527, 438, 0, 481, 538, 537, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 230, 0, 271, 209, 505,
	485, 486, 487, 437, 488, 483, 484, 506, 479, 502,
	503, 461, 464, 489, 501, 490, 504, 507, 508, 547,
	548, 496, 549, 493, 509, 500, 499, 491, 480, 510,
	511, 465, 463, 494, 495, 482, 297, 474, 0, 328,
	329, 330, 314, 0, 201, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 204, 1227, 0, 229, 0, 0,
	0, 466, 0, 0, 289, 243, 0, 0, 0, 0,
	521, 529, 0, 0, 0, 0, 0, 0, 0, 1310,
	0, 0, 428, 0, 0, 459, 498, 497, 446, 455,
	0, 0, 185, 447, 0, 454, 448, 452, 451, 449,
	450, 0, 513, 0, 0, 0, 0, 0, 0, 419,
	432, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 0, 0, 0, 0,
	475, 0, 431, 0, 0, 1311, 456, 457, 0, 0,
	176, 294, 310, 186, 285, 323, 191, 292, 181, 258,
	281, 0, 0, 178, 308, 291, 240, 223, 224, 177,
	0, 276, 202, 215, 198, 256, 453, 473, 478, 197,
	535, 471, 318, 180, 0, 317, 255, 304, 309, 241,
	235, 179, 306, 239, 234, 227, 206, 536, 219, 267,
	233, 268, 220, 245, 244, 246, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 320, 0, 0,
	519, 0, 0, 0, 293, 0, 0, 228, 0, 0,
	0, 472, 0, 279, 261, 532, 420, 0, 277, 231,
	305, 269, 311, 295, 319, 273, 270, 171, 296, 200,
	242, 182, 184, 196, 203, 205, 207, 208, 251, 252,
	264, 284, 298, 299, 300, 199, 192, 278, 193, 217,
	194, 172, 286, 195, 174, 265, 303, 0, 213, 274,
	238, 175, 237, 266, 302, 301, 183, 327, 333, 334,
	338, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 332, 211,
	169, 315, 517, 257, 0, 531, 512, 514, 515, 518,
	522, 523, 524, 525, 526, 528, 530, 534, 282, 0,
	0, 0, 0, 0, 222, 263, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 313, 325, 342, 345, 0, 0, 0, 173, 344,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 476, 247, 248,
	249, 250, 520, 0, 190, 343, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 210, 216, 0, 218, 189, 262,
	212, 322, 225, 0, 0, 0, 254, 221, 287, 226,
	232, 275, 321, 260, 280, 187, 312, 288, 236, 0,
	0, 542, 516, 541, 543, 544, 540, 545, 546, 527,
	438, 0, 481, 538, 537, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 230, 0, 271, 209, 505, 485, 486, 487, 437,
	488, 483, 484, 506, 479, 502, 503, 461, 464, 489,
	501, 490, 504, 507, 508, 547, 548, 496, 549, 493,
	509, 500, 499, 491, 480, 510, 511, 465, 463, 494,
	495, 482, 122, 297, 474, 328, 329, 330, 314, 0,
	201, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 204, 0, 0, 229, 0, 0, 0, 466, 0,
	0, 289, 243, 0, 0, 0, 0, 521, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	0, 0, 459, 498, 497, 446, 455, 0, 0, 185,
	447, 0, 454, 448, 452, 451, 449, 450, 0, 513,
	0, 0, 0, 0, 0, 0, 419, 432, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 430, 0, 0, 0, 0, 475, 0, 431,
	0, 0, 477, 456, 457, 0, 0, 176, 294, 310,
	186, 285, 323, 191, 292, 181, 258, 281, 0, 0,
	178, 308, 291, 240, 223, 224, 177, 0, 276, 202,
	215, 198, 256, 453, 473, 478, 197, 535, 471, 318,
	180, 0, 317, 255, 304, 309, 241, 235, 179, 306,
	239, 234, 227, 206, 536, 219, 267, 233, 268, 220,
	245, 244, 246, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 320, 0, 0, 519, 0, 0,
	0, 293, 0, 0, 228, 0, 0, 0, 472, 0,
	279, 261, 532, 420, 0, 277, 231, 305, 269, 311,
	295, 319, 273, 270, 171, 296, 200, 242, 182, 184,
	196, 203, 205, 207, 208, 251, 252, 264, 284, 298,
	299, 300, 199, 192, 278, 193, 217, 194, 172, 286,
	195, 174, 265, 303, 0, 213, 274, 238, 175, 237,
	266, 302, 301, 183, 327, 333, 334, 338, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 332, 211, 169, 315, 517,
	257, 0, 531, 512, 514, 515, 518, 522, 523, 524,
	525, 526, 528, 530, 534, 282, 0, 0, 0, 0,
	0, 222, 263, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 313, 325,
	342, 345, 0, 0, 0, 173, 344, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 476, 247, 248, 249, 250, 520,
	0, 190, 343, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 210, 216, 0, 218, 189, 262, 212, 322, 225,
	0, 0, 0, 254, 221, 287, 226, 232, 275, 321,
	260, 280, 187, 312, 288, 236, 0, 0, 542, 516,
	541, 543, 544, 540, 545, 546, 527, 438, 0, 481,
	538, 537, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 230, 94,
	271, 209, 505, 485, 486, 487, 437, 488, 483, 484,
	506, 479, 502, 503, 461, 464, 489, 501, 490, 504,
	507, 508, 547, 548, 496, 549, 493, 509, 500, 499,
	491, 480, 510, 511, 465, 463, 494, 495, 482, 297,
	474, 0, 328, 329, 330, 314, 0, 201, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 0, 0, 204, 2618, 0,
	229, 0, 0, 0, 466, 0, 0, 289, 243, 0,
	0, 0, 0, 521, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 0, 0, 459, 498,
	497, 446, 455, 0, 0, 185, 447, 0, 454, 448,
	452, 451, 449, 450, 0, 513, 0, 0, 0, 0,
	0, 0, 419, 432, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 0,
	0, 0, 0, 475, 0, 431, 0, 0, 477, 456,
	457, 0, 0, 176, 294, 310, 186, 285, 323, 191,
	292, 181, 258, 281, 0, 0, 178, 308, 291, 240,
	223, 224, 177, 0, 276, 202, 215, 198, 256, 453,
	473, 478, 197, 535, 471, 318, 180, 0, 317, 255,
	304, 309, 241, 235, 179, 306, 239, 234, 227, 206,
	536, 219, 267, 233, 268, 220, 245, 244, 246, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	320, 0, 0, 519, 0, 0, 0, 293, 0, 0,
	228, 0, 0, 0, 472, 0, 279, 261, 532, 420,
	0, 277, 231, 305, 269, 311, 295, 319, 273, 270,
	171, 296, 200, 242, 182, 184, 196, 203, 205, 207,
	208, 251, 252, 264, 284, 298, 299, 300, 199, 192,
	278, 193, 217, 194, 172, 286, 195, 174, 265, 303,
	0, 213, 274, 238, 175, 237, 266, 302, 301, 183,
	327, 333, 334, 338, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 332, 211, 169, 315, 517, 257, 0, 531, 512,
	514, 515, 518, 522, 523, 524, 525, 526, 528, 530,
	534, 282, 0, 0, 0, 0, 0, 222, 263, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 313, 325, 342, 345, 0, 0,
	0, 173, 344, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	476, 247, 248, 249, 250, 520, 0, 190, 343, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 210, 216, 0,
	218, 189, 262, 212, 322, 225, 0, 0, 0, 254,
	221, 287, 226, 232, 275, 321, 260, 280, 187, 312,
	288, 236, 0, 0, 542, 516, 541, 543, 544, 540,
	545, 546, 527, 438, 0, 481, 538, 537, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 230, 0, 271, 209, 505, 485,
	486, 487, 437, 488, 483, 484, 506, 479, 502, 503,
	461, 464, 489, 501, 490, 504, 507, 508, 547, 548,
	496, 549, 493, 509, 500, 499, 491, 480, 510, 511,
	465, 463, 494, 495, 482, 297, 474, 0, 328, 329,
	330, 314, 0, 201, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 204, 1227, 0, 229, 0, 0, 0,
	466, 0, 0, 289, 243, 0, 0, 0, 0, 521,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 0, 0, 459, 498, 497, 446, 455, 0,
	0, 185, 447, 0, 454, 448, 452, 451, 449, 450,
	0, 513, 0, 0, 0, 0, 0, 0, 419, 432,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 0, 0, 0, 0, 475,
	0, 431, 0, 0, 477, 456, 457, 0, 0, 176,
	294, 310, 186, 285, 323, 191, 292, 181, 258, 281,
	0, 0, 178, 308, 291, 240, 223, 224, 177, 0,
	276, 202, 215, 198, 256, 453, 473, 478, 197, 535,
	471, 318, 180, 0, 317, 255, 304, 309, 241, 235,
	179, 306, 239, 234, 227, 206, 536, 219, 267, 233,
	268, 220, 245, 244, 246, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 320, 0, 0, 519,
	0, 0, 0, 293, 0, 0, 228, 0, 0, 0,
	472, 0, 279, 261, 532, 420, 0, 277, 231, 305,
	269, 311, 295, 319, 273, 270, 171, 296, 200, 242,
	182, 184, 196, 203, 205, 207, 208, 251, 252, 264,
	284, 298, 299, 300, 199, 192, 278, 193, 217, 194,
	172, 286, 195, 174, 265, 303, 0, 213, 274, 238,
	175, 237, 266, 302, 301, 183, 327, 333, 334, 338,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 332, 211, 169,
	315, 517, 257, 0, 531, 512, 514, 515, 518, 522,
	523, 524, 525, 526, 528, 530, 534, 282, 0, 0,
	0, 0, 0, 222, 263, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	313, 325, 342, 345, 0, 0, 0, 173, 344, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 476, 247, 248, 249,
	250, 520, 0, 190, 343, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 210, 216, 0, 218, 189, 262, 212,
	322, 225, 0, 0, 0, 254, 221, 287, 226, 232,
	275, 321, 260, 280, 187, 312, 288, 236, 0, 0,
	542, 516, 541, 543, 544, 540, 545, 546, 527, 438,
	0, 481, 538, 537, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	230, 0, 271, 209, 505, 485, 486, 487, 437, 488,
	483, 484, 506, 479, 502, 503, 461, 464, 489, 501,
	490, 504, 507, 508, 547, 548, 496, 549, 493, 509,
	500, 499, 491, 480, 510, 511, 465, 463, 494, 495,
	482, 297, 474, 0, 328, 329, 330, 314, 0, 201,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 466, 0, 0, 289,
	243, 0, 0, 0, 0, 521, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 0, 0,
	459, 498, 497, 446, 455, 0, 0, 185, 447, 0,
	454, 448, 452, 451, 449, 450, 0, 513, 0, 0,
	0, 0, 0, 0, 419, 432, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	430, 1004, 0, 0, 0, 475, 0, 431, 0, 0,
	477, 456, 457, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 453, 473, 478, 197, 535, 471, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 536, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 320, 0, 0, 519, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 472, 0, 279, 261,
	532, 420, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 517, 257, 0,
	531, 512, 514, 515, 518, 522, 523, 524, 525, 526,
	528, 530, 534, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 476, 247, 248, 249, 250, 520, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 542, 516, 541, 543,
	544, 540, 545, 546, 527, 438, 0, 481, 538, 537,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 0, 271, 209,
	505, 485, 486, 487, 437, 488, 483, 484, 506, 479,
	502, 503, 461, 464, 489, 501, 490, 504, 507, 508,
	547, 548, 496, 549, 493, 509, 500, 499, 491, 480,
	510, 511, 465, 463, 494, 495, 482, 0, 0, 0,
	328, 329, 330, 314, 0, 201, 297, 474, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 204, 0, 0, 229, 0, 0,
	0, 466, 0, 0, 289, 243, 0, 0, 0, 0,
	521, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 0, 0, 459, 498, 497, 446, 455,
	0, 0, 185, 447, 0, 454, 448, 452, 451, 449,
	450, 0, 513, 0, 0, 0, 0, 0, 0, 419,
	432, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 430, 0, 0, 0, 0,
	475, 0, 431, 0, 0, 477, 456, 457, 0, 0,
	176, 294, 310, 186, 285, 323, 191, 292, 181, 258,
	281, 0, 0, 178, 308, 291, 240, 223, 224, 177,
	0, 276, 202, 215, 198, 256, 453, 473, 478, 197,
	535, 471, 318, 180, 0, 317, 255, 304, 309, 241,
	235, 179, 306, 239, 234, 227, 206, 536, 219, 267,
	233, 268, 220, 245, 244, 246, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 320, 0, 0,
	519, 0, 0, 0, 293, 0, 0, 228, 0, 0,
	0, 472, 0, 279, 261, 532, 420, 0, 277, 231,
	305, 269, 311, 295, 319, 273, 270, 171, 296, 200,
	242, 182, 184, 196, 203, 205, 207, 208, 251, 252,
	264, 284, 298, 299, 300, 199, 192, 278, 193, 217,
	194, 172, 286, 195, 174, 265, 303, 0, 213, 274,
	238, 175, 237, 266, 302, 301, 183, 327, 333, 334,
	338, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 332, 211,
	169, 315, 517, 257, 0, 531, 512, 514, 515, 518,
	522, 523, 524, 525, 526, 528, 530, 534, 282, 0,
	0, 0, 0, 0, 222, 263, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 313, 325, 342, 345, 0, 0, 0, 173, 344,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 476, 247, 248,
	249, 250, 520, 0, 190, 343, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 210, 216, 0, 218, 189, 262,
	212, 322, 225, 0, 0, 0, 254, 221, 287, 226,
	232, 275, 321, 260, 280, 187, 312, 288, 236, 0,
	0, 542, 516, 541, 543, 544, 540, 545, 546, 527,
	438, 0, 481, 538, 537, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 230, 0, 271, 209, 505, 485, 486, 487, 437,
	488, 483, 484, 506, 479, 502, 503, 461, 464, 489,
	501, 490, 504, 507, 508, 547, 548, 496, 549, 493,
	509, 500, 499, 491, 480, 510, 511, 465, 463, 494,
	495, 482, 297, 474, 0, 328, 329, 330, 314, 0,
	201, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	204, 0, 0, 229, 0, 0, 0, 466, 0, 0,
	289, 243, 0, 0, 0, 0, 521, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 0,
	0, 459, 498, 497, 446, 455, 0, 0, 185, 447,
	0, 454, 448, 452, 451, 449, 450, 0, 513, 0,
	0, 0, 0, 0, 0, 419, 432, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 0, 0, 0, 0, 475, 0, 431, 0,
	0, 477, 456, 457, 0, 0, 176, 294, 310, 186,
	285, 323, 191, 292, 181, 258, 281, 0, 0, 178,
	308, 291, 240, 223, 224, 177, 0, 276, 202, 215,
	198, 256, 453, 473, 478, 197, 535, 471, 318, 180,
	0, 317, 255, 304, 309, 241, 235, 179, 306, 239,
	234, 227, 206, 536, 219, 267, 233, 268, 220, 245,
	244, 246, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 320, 0, 0, 519, 0, 0, 0,
	293, 0, 0, 228, 0, 0, 0, 472, 0, 279,
	261, 532, 420, 0, 277, 231, 305, 269, 311, 295,
	319, 273, 270, 171, 296, 200, 242, 182, 184, 196,
	203, 205, 207, 208, 251, 252, 264, 284, 298, 299,
	300, 199, 192, 278, 193, 217, 194, 172, 286, 195,
	174, 265, 303, 0, 213, 274, 238, 175, 237, 266,
	302, 301, 183, 327, 333, 334, 338, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 332, 211, 169, 315, 517, 257,
	0, 531, 512, 514, 515, 518, 522, 523, 524, 525,
	526, 528, 530, 534, 282, 0, 0, 0, 0, 0,
	222, 263, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 313, 325, 342,
	345, 0, 0, 0, 173, 344, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 476, 247, 248, 249, 250, 520, 0,
	190, 343, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	210, 216, 0, 218, 189, 262, 212, 322, 225, 0,
	0, 0, 254, 221, 287, 226, 232, 275, 321, 260,
	280, 187, 312, 288, 236, 0, 0, 542, 516, 541,
	543, 544, 540, 545, 546, 527, 438, 0, 481, 538,
	537, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 230, 0, 271,
	209, 505, 485, 486, 487, 437, 488, 483, 484, 506,
	479, 502, 503, 461, 464, 489, 501, 490, 504, 507,
	508, 547, 548, 496, 549, 493, 509, 500, 499, 491,
	480, 510, 511, 465, 463, 494, 495, 482, 297, 474,
	0, 328, 329, 330, 314, 0, 201, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 435, 0, 0, 0, 204, 0, 0, 229,
	0, 0, 0, 466, 0, 0, 289, 243, 0, 0,
	0, 0, 521, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 0, 0, 459, 498, 497,
	446, 455, 0, 0, 185, 447, 0, 454, 448, 452,
	451, 449, 450, 0, 513, 0, 0, 0, 0, 0,
	0, 0, 432, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 475, 0, 431, 0, 0, 477, 456, 457,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 453, 473,
	478, 197, 535, 471, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 536,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 320,
	0, 0, 519, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 472, 0, 279, 261, 532, 0, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	1089, 1090, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 517, 257, 0, 531, 512, 514,
	515, 518, 522, 523, 524, 525, 526, 528, 530, 534,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 0, 0, 0, 0, 0, 0, 533,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 476,
	247, 248, 249, 250, 520, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 542, 516, 541, 543, 544, 540, 545,
	546, 527, 438, 0, 481, 538, 537, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 0, 271, 209, 505, 485, 486,
	487, 437, 488, 483, 484, 506, 479, 502, 503, 461,
	464, 489, 501, 490, 504, 507, 508, 547, 548, 496,
	549, 493, 509, 500, 499, 491, 480, 510, 511, 465,
	463, 494, 495, 482, 297, 474, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 204, 0, 0, 229, 0, 0, 0, 466,
	0, 0, 289, 243, 0, 0, 0, 0, 521, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 459, 498, 497, 446, 455, 0, 0,
	185, 447, 0, 454, 448, 452, 451, 449, 450, 0,
	513, 0, 0, 0, 0, 0, 0, 419, 432, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 430, 0, 0, 0, 0, 475, 0,
	431, 0, 0, 477, 456, 457, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 453, 473, 478, 197, 535, 471,
	318, 180, 0, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 536, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 320, 0, 0, 519, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 472,
	0, 279, 261, 532, 420, 0, 277, 231, 305, 269,
	311, 295, 319, 273, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 332, 211, 169, 315,
	517, 257, 0, 531, 512, 514, 515, 518, 522, 523,
	524, 525, 526, 528, 530, 534, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 476, 247, 248, 249, 250,
	520, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 254, 221, 287, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 236, 0, 0, 542,
	516, 541, 543, 544, 540, 545, 546, 527, 438, 0,
	481, 538, 537, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 505, 485, 486, 487, 437, 488, 483,
	484, 506, 479, 502, 503, 461, 464, 489, 501, 490,
	504, 507, 508, 547, 548, 496, 549, 493, 509, 500,
	499, 491, 480, 510, 511, 465, 463, 494, 495, 482,
	297, 474, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 204, 0,
	0, 229, 0, 0, 0, 466, 0, 0, 289, 243,
	0, 0, 0, 0, 521, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 0, 0, 459,
	498, 497, 446, 455, 0, 0, 185, 447, 0, 454,
	448, 452, 451, 449, 450, 0, 513, 0, 0, 0,
	0, 0, 0, 0, 432, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 430,
	0, 0, 0, 0, 475, 0, 431, 0, 0, 477,
	456, 457, 0, 0, 176, 294, 310, 186, 285, 323,
	191, 292, 181, 258, 281, 0, 0, 178, 308, 291,
	240, 223, 224, 177, 0, 276, 202, 215, 198, 256,
	453, 473, 478, 197, 535, 471, 318, 180, 0, 317,
	255, 304, 309, 241, 235, 179, 306, 239, 234, 227,
	206, 536, 219, 267, 233, 268, 220, 245, 244, 246,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 320, 0, 0, 519, 0, 0, 0, 293, 0,
	0, 228, 0, 0, 0, 472, 0, 279, 261, 532,
	0, 0, 277, 231, 305, 269, 311, 295, 319, 273,
	270, 171, 296, 200, 242, 182, 184, 196, 203, 205,
	207, 208, 251, 252, 264, 284, 298, 299, 300, 199,
	192, 278, 193, 217, 194, 172, 286, 195, 174, 265,
	303, 0, 213, 274, 238, 175, 237, 266, 302, 301,
	183, 327, 333, 334, 338, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 332, 211, 169, 315, 517, 257, 0, 531,
	512, 514, 515, 518, 522, 523, 524, 525, 526, 528,
	530, 534, 282, 0, 0, 0, 0, 0, 222, 263,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 313, 325, 342, 345, 0,
	0, 0, 173, 344, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 476, 247, 248, 249, 250, 520, 0, 190, 343,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 210, 216,
	0, 218, 189, 262, 212, 322, 225, 0, 0, 0,
	254, 221, 287, 226, 232, 275, 321, 260, 280, 187,
	312, 288, 236, 0, 0, 542, 516, 541, 543, 544,
	540, 545, 546, 527, 438, 0, 481, 538, 537, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 230, 0, 271, 209, 505,
	485, 486, 487, 437, 488, 483, 484, 506, 479, 502,
	503, 461, 464, 489, 501, 490, 504, 507, 508, 547,
	548, 496, 549, 493, 509, 500, 499, 491, 480, 510,
	511, 465, 463, 494, 495, 482, 0, 0, 0, 328,
	329, 330, 314, 0, 201, 122, 297, 37, 112, 93,
	0, 0, 0, 0, 0, 0, 0, 259, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 289, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 294, 310, 186, 285, 323, 191, 292, 181, 258,
	281, 0, 0, 178, 308, 291, 240, 223, 224, 177,
	0, 276, 202, 215, 198, 256, 0, 307, 335, 197,
	326, 0, 318, 180, 0, 317, 255, 304, 309, 241,
	235, 179, 306, 239, 234, 227, 206, 0, 219, 267,
	233, 268, 220, 245, 244, 246, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 228, 0, 0,
	0, 336, 0, 279, 261, 0, 0, 0, 277, 231,
	305, 269, 311, 295, 319, 273, 270, 171, 296, 200,
	242, 182, 184, 196, 203, 205, 207, 208, 251, 252,
	264, 284, 298, 299, 300, 199, 192, 278, 193, 217,
	194, 172, 286, 195, 174, 265, 303, 0, 213, 274,
	238, 175, 237, 266, 302, 301, 183, 327, 333, 334,
	338, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 332, 211,
	169, 315, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 331, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 222, 263, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 313, 325, 342, 345, 0, 0, 0, 173, 344,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 340, 247, 248,
	249, 250, 357, 359, 190, 343, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 210, 216, 0, 218, 189, 262,
	212, 322, 225, 0, 0, 0, 254, 221, 287, 226,
	232, 275, 321, 260, 280, 187, 312, 288, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 38,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 230, 94, 271, 209, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 0, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 297, 0, 0, 328, 329, 330, 314, 0,
	201, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	289, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 2038,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 294, 310, 186,
	285, 323, 191, 292, 181, 258, 281, 0, 0, 178,
	308, 291, 240, 223, 224, 177, 0, 276, 202, 215,
	198, 256, 0, 307, 335, 197, 326, 0, 318, 180,
	0, 317, 255, 304, 309, 241, 235, 179, 306, 239,
	234, 227, 206, 0, 219, 267, 233, 268, 220, 245,
	244, 246, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 320, 0, 0, 0, 2035, 0, 2034,
	293, 2036, 2039, 228, 0, 0, 0, 336, 0, 279,
	261, 0, 0, 0, 277, 231, 305, 269, 311, 295,
	319, 273, 270, 171, 296, 200, 242, 182, 184, 196,
	203, 205, 207, 208, 251, 252, 264, 284, 298, 299,
	300, 199, 192, 278, 193, 217, 194, 172, 286, 195,
	174, 265, 303, 2040, 213, 274, 238, 175, 237, 266,
	302, 301, 183, 327, 333, 334, 338, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 332, 211, 169, 315, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 331,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	222, 263, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 313, 325, 342,
	345, 0, 0, 0, 173, 344, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 340, 247, 248, 249, 250, 214, 0,
	190, 343, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	210, 216, 0, 218, 189, 262, 212, 322, 225, 0,
	0, 0, 254, 221, 287, 226, 232, 275, 321, 260,
	280, 187, 312, 288, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 230, 0, 271,
	209, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 0, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 297, 0,
	0, 328, 329, 330, 314, 0, 201, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 204, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 289, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	1335, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 752, 753, 754,
	751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 0, 307,
	335, 197, 326, 0, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 0,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 336, 0, 279, 261, 0, 0, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 331, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 340,
	247, 248, 249, 250, 214, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 0, 271, 209, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 297, 0, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 634, 0, 229, 0, 0, 0, 0,
	0, 0, 289, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 642, 643, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 0, 307, 335, 197, 326, 620,
	318, 180, 619, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 0, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 336,
	0, 279, 261, 0, 0, 0, 277, 231, 305, 269,
	311, 295, 319, 632, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 332, 211, 169, 315,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 331, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 633, 316, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 636, 247, 248, 249, 250,
	214, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 644, 639, 640, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	122, 297, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 289,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 1356, 0,
	129, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 0, 307, 335, 197, 326, 0, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 0, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 336, 0, 279, 261,
	0, 0, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 331, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 340, 247, 248, 249, 250, 214, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 94, 271, 209,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 122, 297, 0,
	328, 329, 330, 314, 0, 201, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 289, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 1347, 0, 129, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 0, 307,
	335, 197, 326, 0, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 0,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 336, 0, 279, 261, 0, 0, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 331, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 340,
	247, 248, 249, 250, 214, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 94, 271, 209, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 297, 0, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 289, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 642, 643, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 0, 307, 335, 197, 326, 620,
	318, 180, 619, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 0, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 336,
	0, 279, 261, 0, 0, 0, 277, 231, 305, 269,
	311, 295, 319, 273, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 332, 211, 169, 315,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 331, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 340, 247, 248, 249, 250,
	214, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 644, 639, 640, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	122, 297, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 289,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 0, 307, 335, 197, 326, 0, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 0, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 336, 0, 279, 261,
	0, 0, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 331, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 340, 247, 248, 249, 250, 214, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 94, 271, 209,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 297, 0, 0,
	328, 329, 330, 314, 0, 201, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 988, 0, 229, 0,
	0, 0, 0, 0, 0, 289, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 986,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 176, 294, 310, 186, 285, 323, 191, 292, 181,
	258, 281, 0, 0, 178, 308, 291, 240, 223, 224,
	177, 0, 276, 202, 215, 198, 256, 0, 307, 335,
	197, 326, 0, 318, 180, 0, 317, 255, 304, 309,
	241, 235, 179, 306, 239, 234, 227, 206, 0, 219,
	267, 233, 268, 220, 245, 244, 246, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 228, 0,
	0, 0, 336, 0, 279, 261, 0, 0, 0, 277,
	231, 305, 269, 311, 295, 319, 273, 270, 171, 296,
	200, 242, 182, 184, 196, 203, 205, 207, 208, 251,
	252, 264, 284, 298, 299, 300, 199, 192, 278, 193,
	217, 194, 172, 286, 195, 174, 265, 303, 0, 213,
	274, 238, 175, 237, 266, 302, 301, 183, 327, 333,
	334, 338, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 332,
	211, 169, 315, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 331, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 222, 263, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 313, 325, 342, 345, 0, 0, 0, 173,
	344, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 340, 247,
	248, 249, 250, 214, 0, 190, 343, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 210, 216, 0, 218, 189,
	262, 212, 322, 225, 0, 0, 0, 254, 221, 287,
	226, 232, 275, 321, 260, 280, 187, 312, 288, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 230, 0, 271, 209, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 297, 0, 0, 328, 329, 330, 314,
	0, 201, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 982, 0, 229, 0, 0, 0, 0, 0,
	0, 289, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 986, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 176, 294, 310,
	186, 285, 323, 191, 292, 181, 258, 281, 0, 0,
	178, 308, 291, 240, 223, 224, 177, 0, 276, 202,
	215, 198, 256, 0, 307, 335, 197, 326, 0, 318,
	180, 0, 317, 255, 304, 309, 241, 235, 179, 306,
	239, 234, 227, 206, 0, 219, 267, 233, 268, 220,
	245, 244, 246, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 228, 0, 0, 0, 336, 0,
	279, 261, 0, 0, 0, 277, 231, 305, 269, 311,
	295, 319, 273, 270, 171, 296, 200, 242, 182, 184,
	196, 203, 205, 207, 208, 251, 252, 264, 284, 298,
	299, 300, 199, 192, 278, 193, 217, 194, 172, 286,
	195, 174, 265, 303, 0, 213, 274, 238, 175, 237,
	266, 302, 301, 183, 327, 333, 334, 338, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 332, 211, 169, 315, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	331, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 222, 263, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 313, 325,
	342, 345, 0, 0, 0, 173, 344, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 340, 247, 248, 249, 250, 214,
	0, 190, 343, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 210, 216, 0, 218, 189, 262, 212, 322, 225,
	0, 0, 0, 254, 221, 287, 226, 232, 275, 321,
	260, 280, 187, 312, 288, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 230, 0,
	271, 209, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 297,
	0, 0, 328, 329, 330, 314, 0, 201, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 289, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2522, 0, 129, 498,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 294, 310, 186, 285, 323, 191,
	292, 181, 258, 281, 0, 0, 178, 308, 291, 240,
	223, 224, 177, 0, 276, 202, 215, 198, 256, 0,
	307, 335, 197, 326, 0, 318, 180, 0, 317, 255,
	304, 309, 241, 235, 179, 306, 239, 234, 227, 206,
	0, 219, 267, 233, 268, 220, 245, 244, 246, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	228, 0, 0, 0, 336, 0, 279, 261, 0, 0,
	0, 277, 231, 305, 269, 311, 295, 319, 273, 270,
	171, 296, 200, 242, 182, 184, 196, 203, 205, 207,
	208, 251, 252, 264, 284, 298, 299, 300, 199, 192,
	278, 193, 217, 194, 172, 286, 195, 174, 265, 303,
	0, 213, 274, 238, 175, 237, 266, 302, 301, 183,
	327, 333, 334, 338, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 332, 211, 169, 315, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 331, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 222, 263, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 313, 325, 342, 345, 0, 0,
	0, 173, 344, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	340, 247, 248, 249, 250, 214, 0, 190, 343, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 210, 216, 0,
	218, 189, 262, 212, 322, 225, 0, 0, 0, 254,
	221, 287, 226, 232, 275, 321, 260, 280, 187, 312,
	288, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 230, 0, 271, 209, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 297, 0, 0, 328, 329,
	330, 314, 0, 201, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 289, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 986, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 0, 0, 176,
	294, 310, 186, 285, 323, 191, 292, 181, 258, 281,
	0, 0, 178, 308, 291, 240, 223, 224, 177, 0,
	276, 202, 215, 198, 256, 0, 307, 335, 197, 326,
	0, 318, 180, 0, 317, 255, 304, 309, 241, 235,
	179, 306, 239, 234, 227, 206, 0, 219, 267, 233,
	268, 220, 245, 244, 246, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 228, 0, 0, 0,
	336, 0, 279, 261, 0, 0, 0, 277, 231, 305,
	269, 311, 295, 319, 273, 270, 171, 296, 200, 242,
	182, 184, 196, 203, 205, 207, 208, 251, 252, 264,
	284, 298, 299, 300, 199, 192, 278, 193, 217, 194,
	172, 286, 195, 174, 265, 303, 0, 213, 274, 238,
	175, 237, 266, 302, 301, 183, 327, 333, 334, 338,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 332, 211, 169,
	315, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 331, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 222, 263, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	313, 325, 342, 345, 0, 0, 0, 173, 344, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 340, 247, 248, 249,
	250, 214, 0, 190, 343, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 210, 216, 0, 218, 189, 262, 212,
	322, 225, 0, 0, 0, 254, 221, 287, 226, 232,
	275, 321, 260, 280, 187, 312, 288, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	230, 0, 271, 209, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 297, 0, 0, 328, 329, 330, 314, 0, 201,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 289,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 986, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2166, 0, 0, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 0, 307, 335, 197, 326, 0, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 0, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 336, 0, 279, 261,
	0, 0, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 331, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 340, 247, 248, 249, 250, 214, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 0, 271, 209,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 297, 0, 0,
	328, 329, 330, 314, 0, 201, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 1729, 0, 229, 0,
	0, 0, 0, 0, 0, 289, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 986,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 294, 310, 186, 285, 323, 191, 292, 181,
	258, 281, 0, 0, 178, 308, 291, 240, 223, 224,
	177, 0, 276, 202, 215, 198, 256, 0, 307, 335,
	197, 326, 0, 318, 180, 0, 317, 255, 304, 309,
	241, 235, 179, 306, 239, 234, 227, 206, 0, 219,
	267, 233, 268, 220, 245, 244, 246, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 228, 0,
	0, 0, 336, 0, 279, 261, 0, 0, 0, 277,
	231, 305, 269, 311, 295, 319, 273, 270, 171, 296,
	200, 242, 182, 184, 196, 203, 205, 207, 208, 251,
	252, 264, 284, 298, 299, 300, 199, 192, 278, 193,
	217, 194, 172, 286, 195, 174, 265, 303, 0, 213,
	274, 238, 175, 237, 266, 302, 301, 183, 327, 333,
	334, 338, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 332,
	211, 169, 315, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 331, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 222, 263, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 313, 325, 342, 345, 0, 0, 0, 173,
	344, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 340, 247,
	248, 249, 250, 214, 0, 190, 343, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 210, 216, 0, 218, 189,
	262, 212, 322, 225, 0, 0, 0, 254, 221, 287,
	226, 232, 275, 321, 260, 280, 187, 312, 288, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 230, 0, 271, 209, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 297, 0, 0, 328, 329, 330, 314,
	0, 201, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 289, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2627, 0, 129, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 294, 310,
	186, 285, 323, 191, 292, 181, 258, 281, 0, 0,
	178, 308, 291, 240, 223, 224, 177, 0, 276, 202,
	215, 198, 256, 0, 307, 335, 197, 326, 0, 318,
	180, 0, 317, 255, 304, 309, 241, 235, 179, 306,
	239, 234, 227, 206, 0, 219, 267, 233, 268, 220,
	245, 244, 246, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 228, 0, 0, 0, 336, 0,
	279, 261, 0, 0, 0, 277, 231, 305, 269, 311,
	295, 319, 273, 270, 171, 296, 200, 242, 182, 184,
	196, 203, 205, 207, 208, 251, 252, 264, 284, 298,
	299, 300, 199, 192, 278, 193, 217, 194, 172, 286,
	195, 174, 265, 303, 0, 213, 274, 238, 175, 237,
	266, 302, 301, 183, 327, 333, 334, 338, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 332, 211, 169, 315, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	331, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 222, 263, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 313, 325,
	342, 345, 0, 0, 0, 173, 344, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 340, 247, 248, 249, 250, 214,
	0, 190, 343, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 210, 216, 0, 218, 189, 262, 212, 322, 225,
	0, 0, 0, 254, 221, 287, 226, 232, 275, 321,
	260, 280, 187, 312, 288, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 230, 0,
	271, 209, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 297,
	0, 0, 328, 329, 330, 314, 0, 201, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 289, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 498,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 294, 310, 186, 285, 323, 191,
	292, 181, 258, 281, 0, 0, 178, 308, 291, 240,
	223, 224, 177, 0, 276, 202, 215, 198, 256, 0,
	307, 335, 197, 326, 0, 318, 180, 0, 317, 255,
	304, 309, 241, 235, 179, 306, 239, 234, 227, 206,
	0, 219, 267, 233, 268, 220, 245, 244, 246, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	228, 0, 0, 0, 336, 0, 279, 261, 0, 0,
	0, 277, 231, 305, 269, 311, 295, 319, 273, 270,
	171, 296, 200, 242, 182, 184, 196, 203, 205, 207,
	208, 251, 252, 264, 284, 298, 299, 300, 199, 192,
	278, 193, 217, 194, 172, 286, 195, 174, 265, 303,
	0, 213, 274, 238, 175, 237, 266, 302, 301, 183,
	327, 333, 334, 338, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 332, 211, 169, 315, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 331, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 222, 263, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 313, 325, 342, 345, 0, 0,
	0, 173, 344, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	340, 247, 248, 249, 250, 214, 0, 190, 343, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 210, 216, 0,
	218, 189, 262, 212, 322, 225, 0, 0, 0, 254,
	221, 287, 226, 232, 275, 321, 260, 280, 187, 312,
	288, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 230, 0, 271, 209, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 297, 0, 0, 328, 329,
	330, 314, 0, 201, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 289, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2536, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	294, 310, 186, 285, 323, 191, 292, 181, 258, 281,
	0, 0, 178, 308, 291, 240, 223, 224, 177, 0,
	276, 202, 215, 198, 256, 0, 307, 335, 197, 326,
	0, 318, 180, 0, 317, 255, 304, 309, 241, 235,
	179, 306, 239, 234, 227, 206, 0, 219, 267, 233,
	268, 220, 245, 244, 246, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 228, 0, 0, 0,
	336, 0, 279, 261, 0, 0, 0, 277, 231, 305,
	269, 311, 295, 319, 273, 270, 171, 296, 200, 242,
	182, 184, 196, 203, 205, 207, 208, 251, 252, 264,
	284, 298, 299, 300, 199, 192, 278, 193, 217, 194,
	172, 286, 195, 174, 265, 303, 0, 213, 274, 238,
	175, 237, 266, 302, 301, 183, 327, 333, 334, 338,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 332, 211, 169,
	315, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 331, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 222, 263, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	313, 325, 342, 345, 0, 0, 0, 173, 344, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 340, 247, 248, 249,
	250, 214, 0, 190, 343, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 210, 216, 0, 218, 189, 262, 212,
	322, 225, 0, 0, 0, 254, 221, 287, 226, 232,
	275, 321, 260, 280, 187, 312, 288, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	230, 0, 271, 209, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 297, 0, 0, 328, 329, 330, 314, 0, 201,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 289,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2275, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 0, 307, 335, 197, 326, 0, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 0, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 336, 0, 279, 261,
	0, 0, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 331, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 340, 247, 248, 249, 250, 214, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 0, 271, 209,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 297, 0, 0,
	328, 329, 330, 314, 0, 201, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 289, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 294, 310, 186, 285, 323, 191, 292, 181,
	258, 281, 0, 0, 178, 308, 291, 240, 223, 224,
	177, 0, 276, 202, 215, 198, 256, 0, 307, 335,
	197, 326, 0, 318, 180, 0, 317, 255, 304, 309,
	241, 235, 179, 306, 239, 234, 227, 206, 0, 219,
	267, 233, 268, 220, 245, 244, 246, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 2464, 0, 0, 293, 0, 0, 228, 0,
	0, 0, 336, 0, 279, 261, 0, 0, 0, 277,
	231, 305, 269, 311, 295, 319, 273, 270, 171, 296,
	200, 242, 182, 184, 196, 203, 205, 207, 208, 251,
	252, 264, 284, 298, 299, 300, 199, 192, 278, 193,
	217, 194, 172, 286, 195, 174, 265, 303, 0, 213,
	274, 238, 175, 237, 266, 302, 301, 183, 327, 333,
	334, 338, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 332,
	211, 169, 315, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 331, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 222, 263, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 313, 325, 342, 345, 0, 0, 0, 173,
	344, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 340, 247,
	248, 249, 250, 214, 0, 190, 343, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 210, 216, 0, 218, 189,
	262, 212, 322, 225, 0, 0, 0, 254, 221, 287,
	226, 232, 275, 321, 260, 280, 187, 312, 288, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 230, 0, 271, 209, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 297, 0, 0, 328, 329, 330, 314,
	0, 201, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 289, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 294, 310,
	186, 285, 323, 191, 292, 181, 258, 281, 0, 0,
	178, 308, 291, 240, 223, 224, 177, 0, 276, 202,
	215, 198, 256, 0, 307, 335, 197, 326, 0, 318,
	180, 0, 317, 255, 304, 309, 241, 235, 179, 306,
	239, 234, 227, 206, 0, 219, 267, 233, 268, 220,
	245, 244, 246, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 2284, 0,
	0, 293, 0, 0, 228, 0, 0, 0, 336, 0,
	279, 261, 0, 0, 0, 277, 231, 305, 269, 311,
	295, 319, 273, 270, 171, 296, 200, 242, 182, 184,
	196, 203, 205, 207, 208, 251, 252, 264, 284, 298,
	299, 300, 199, 192, 278, 193, 217, 194, 172, 286,
	195, 174, 265, 303, 0, 213, 274, 238, 175, 237,
	266, 302, 301, 183, 327, 333, 334, 338, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 332, 211, 169, 315, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	331, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 222, 263, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 313, 325,
	342, 345, 0, 0, 0, 173, 344, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 340, 247, 248, 249, 250, 214,
	0, 190, 343, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 210, 216, 0, 218, 189, 262, 212, 322, 225,
	0, 0, 0, 254, 221, 287, 226, 232, 275, 321,
	260, 280, 187, 312, 288, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 230, 0,
	271, 209, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 297,
	0, 0, 328, 329, 330, 314, 0, 201, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 289, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 294, 310, 186, 285, 323, 191,
	292, 181, 258, 281, 0, 0, 178, 308, 291, 240,
	223, 224, 177, 0, 276, 202, 215, 198, 256, 0,
	307, 335, 197, 326, 0, 318, 180, 0, 317, 255,
	304, 309, 241, 235, 179, 306, 239, 234, 227, 206,
	0, 219, 267, 233, 268, 220, 245, 244, 246, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	228, 0, 0, 0, 336, 0, 279, 261, 0, 0,
	0, 277, 231, 305, 269, 311, 295, 319, 273, 270,
	171, 296, 200, 242, 182, 184, 196, 203, 205, 207,
	208, 251, 252, 264, 284, 298, 299, 300, 199, 192,
	278, 193, 217, 194, 172, 286, 195, 174, 265, 303,
	0, 213, 274, 238, 175, 237, 266, 302, 301, 183,
	327, 333, 334, 338, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 332, 211, 169, 315, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 331, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 222, 263, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 313, 325, 342, 345, 0, 0,
	0, 173, 344, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	340, 247, 248, 249, 250, 214, 0, 190, 343, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 210, 216, 0,
	218, 189, 262, 212, 322, 225, 0, 0, 0, 254,
	221, 287, 226, 232, 275, 321, 260, 280, 187, 312,
	288, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 230, 0, 271, 209, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 297, 0, 0, 328, 329,
	330, 314, 0, 201, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 289, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	294, 310, 186, 285, 323, 191, 292, 181, 258, 281,
	0, 0, 178, 308, 291, 240, 223, 224, 177, 0,
	276, 202, 215, 198, 256, 0, 307, 335, 197, 326,
	0, 318, 180, 0, 317, 255, 304, 309, 241, 235,
	179, 306, 239, 234, 227, 206, 0, 219, 267, 233,
	268, 220, 245, 244, 246, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 228, 0, 0, 0,
	336, 0, 279, 261, 0, 0, 0, 277, 231, 305,
	269, 311, 295, 319, 273, 270, 171, 296, 200, 242,
	182, 184, 196, 203, 205, 207, 208, 251, 252, 264,
	284, 298, 299, 300, 199, 192, 278, 193, 217, 194,
	172, 286, 195, 174, 265, 303, 0, 213, 274, 238,
	175, 237, 266, 302, 301, 183, 327, 333, 334, 338,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 332, 211, 169,
	315, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 331, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 222, 263, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	313, 325, 342, 345, 0, 0, 0, 173, 344, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 340, 247, 248, 249,
	250, 214, 0, 190, 343, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 210, 216, 0, 218, 189, 262, 212,
	322, 225, 0, 0, 0, 254, 221, 287, 226, 232,
	275, 321, 260, 280, 187, 312, 288, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	230, 0, 271, 209, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 297, 0, 0, 328, 329, 330, 314, 0, 201,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 289,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 294, 310, 186, 285,
	323, 191, 292, 181, 258, 281, 0, 0, 178, 308,
	291, 240, 223, 224, 177, 0, 276, 202, 215, 198,
	256, 0, 307, 335, 197, 326, 0, 318, 180, 0,
	317, 255, 304, 309, 241, 235, 179, 306, 239, 234,
	227, 206, 0, 219, 267, 233, 268, 220, 245, 244,
	246, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 228, 0, 0, 0, 336, 0, 279, 261,
	0, 0, 0, 277, 231, 305, 269, 311, 295, 319,
	273, 270, 171, 296, 200, 242, 182, 184, 196, 203,
	205, 207, 208, 251, 252, 264, 284, 298, 299, 300,
	199, 192, 278, 193, 217, 194, 172, 286, 195, 174,
	265, 303, 0, 213, 274, 238, 175, 237, 266, 302,
	301, 183, 327, 333, 334, 338, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 332, 211, 169, 315, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 331, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 222,
	263, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 313, 325, 342, 345,
	0, 0, 0, 173, 344, 0, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 340, 247, 248, 249, 250, 214, 0, 190,
	343, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 210,
	216, 0, 218, 189, 262, 212, 322, 225, 0, 0,
	0, 254, 221, 287, 226, 232, 275, 321, 260, 280,
	187, 312, 288, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 230, 0, 271, 209,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 0, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 297, 0, 0,
	328, 329, 330, 314, 0, 201, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 289, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 2046,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 294, 310, 186, 285, 323, 191, 292, 181,
	258, 281, 0, 0, 178, 308, 291, 240, 223, 224,
	177, 0, 276, 202, 215, 198, 256, 0, 307, 335,
	197, 326, 0, 318, 180, 0, 317, 255, 304, 309,
	241, 235, 179, 306, 239, 234, 227, 206, 0, 219,
	267, 233, 268, 220, 245, 244, 246, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 228, 0,
	0, 0, 336, 0, 279, 261, 0, 0, 0, 277,
	231, 305, 269, 311, 295, 319, 273, 270, 171, 296,
	200, 242, 182, 184, 196, 203, 205, 207, 208, 251,
	252, 264, 284, 298, 299, 300, 199, 192, 278, 193,
	217, 194, 172, 286, 195, 174, 265, 303, 0, 213,
	274, 238, 175, 237, 266, 302, 301, 183, 327, 333,
	334, 338, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 332,
	211, 169, 315, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 331, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 222, 263, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 313, 325, 342, 345, 0, 0, 0, 173,
	344, 0, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 340, 247,
	248, 249, 250, 214, 0, 190, 343, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 210, 216, 0, 218, 189,
	262, 212, 322, 225, 0, 0, 0, 254, 221, 287,
	226, 232, 275, 321, 260, 280, 187, 312, 288, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 230, 0, 271, 209, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 0, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 297, 0, 0, 328, 329, 330, 314,
	0, 201, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 289, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 986, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 294, 310,
	186, 285, 323, 191, 292, 181, 258, 281, 0, 0,
	178, 308, 291, 240, 223, 224, 177, 0, 276, 202,
	215, 198, 256, 0, 307, 335, 197, 326, 0, 318,
	180, 0, 317, 255, 304, 309, 241, 235, 179, 306,
	239, 234, 227, 206, 0, 219, 267, 233, 268, 220,
	245, 244, 246, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 228, 0, 0, 0, 336, 0,
	279, 261, 0, 0, 0, 277, 231, 305, 269, 311,
	295, 319, 273, 270, 171, 296, 200, 242, 182, 184,
	196, 203, 205, 207, 208, 251, 252, 264, 284, 298,
	299, 300, 199, 192, 278, 193, 217, 194, 172, 286,
	195, 174, 265, 303, 0, 213, 274, 238, 175, 237,
	266, 302, 301, 183, 327, 333, 334, 338, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 332, 211, 169, 315, 0,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	331, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 222, 263, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 313, 325,
	342, 345, 0, 0, 0, 173, 344, 0, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 340, 247, 248, 249, 250, 214,
	0, 190, 343, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 210, 216, 0, 218, 189, 262, 212, 322, 225,
	0, 0, 0, 254, 221, 287, 226, 232, 275, 321,
	260, 280, 187, 312, 288, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 230, 0,
	271, 209, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 0, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 297,
	0, 0, 328, 329, 330, 314, 0, 201, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 289, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 294, 310, 186, 285, 323, 191,
	292, 181, 258, 281, 0, 0, 178, 308, 291, 240,
	223, 224, 177, 0, 276, 202, 215, 198, 256, 0,
	307, 335, 197, 326, 0, 318, 180, 0, 317, 255,
	304, 309, 241, 235, 179, 306, 239, 234, 227, 206,
	0, 219, 267, 233, 268, 220, 245, 244, 246, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	228, 0, 0, 0, 336, 0, 279, 261, 0, 0,
	0, 277, 231, 305, 269, 311, 295, 319, 273, 270,
	171, 296, 200, 242, 182, 184, 196, 203, 205, 207,
	208, 251, 252, 264, 284, 298, 299, 300, 199, 192,
	278, 193, 217, 194, 172, 286, 195, 174, 265, 303,
	0, 213, 274, 238, 175, 237, 266, 302, 301, 183,
	327, 333, 334, 338, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 332, 211, 169, 315, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 331, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 222, 263, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 313, 325, 342, 345, 0, 0,
	0, 173, 344, 0, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	340, 247, 248, 249, 250, 214, 0, 190, 343, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 210, 216, 0,
	218, 189, 262, 212, 322, 225, 0, 0, 0, 254,
	221, 287, 226, 232, 275, 321, 260, 280, 187, 312,
	288, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 230, 0, 271, 209, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	0, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 297, 0, 0, 328, 329,
	330, 314, 0, 201, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 289, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 1737, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	294, 310, 186, 285, 323, 191, 292, 181, 258, 281,
	0, 0, 178, 308, 291, 240, 223, 224, 177, 0,
	276, 202, 215, 198, 256, 0, 307, 335, 197, 326,
	0, 318, 180, 0, 317, 255, 304, 309, 241, 235,
	179, 306, 239, 234, 227, 206, 0, 219, 267, 233,
	268, 220, 245, 244, 246, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 228, 0, 0, 0,
	336, 0, 279, 261, 0, 0, 0, 277, 231, 305,
	269, 311, 295, 319, 273, 270, 171, 296, 200, 242,
	182, 184, 196, 203, 205, 207, 208, 251, 252, 264,
	284, 298, 299, 300, 199, 192, 278, 193, 217, 194,
	172, 286, 195, 174, 265, 303, 0, 213, 274, 238,
	175, 237, 266, 302, 301, 183, 327, 333, 334, 338,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 332, 211, 169,
	315, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 331, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 222, 263, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	313, 325, 342, 345, 0, 0, 0, 173, 344, 0,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 340, 247, 248, 249,
	250, 214, 0, 190, 343, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 210, 216, 0, 218, 189, 262, 212,
	322, 225, 0, 0, 0, 254, 221, 287, 226, 232,
	275, 321, 260, 280, 187, 312, 288, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	230, 0, 271, 209, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 0, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 0, 0, 0, 328, 329, 330, 314, 297, 201,
	0, 0, 1665, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 289, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 0, 307,
	335, 197, 326, 0, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 0,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 336, 0, 279, 261, 0, 0, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 331, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 340,
	247, 248, 249, 250, 214, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 0, 271, 209, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 297, 0, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 289, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 0, 307, 335, 197, 326, 0,
	318, 180, 0, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 0, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 1648, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 336,
	0, 279, 261, 0, 0, 0, 277, 231, 305, 269,
	311, 295, 319, 273, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 332, 211, 169, 315,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 331, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 340, 247, 248, 249, 250,
	214, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 254, 221, 287, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	297, 0, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 289, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 294, 310, 186, 285, 323,
	191, 292, 181, 258, 281, 0, 0, 178, 308, 291,
	240, 223, 224, 177, 0, 276, 202, 215, 198, 256,
	0, 307, 335, 197, 326, 0, 318, 180, 0, 317,
	255, 304, 309, 241, 235, 179, 306, 239, 234, 227,
	206, 0, 219, 267, 233, 268, 220, 245, 244, 246,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 228, 0, 0, 0, 336, 0, 279, 261, 0,
	0, 0, 277, 231, 305, 269, 311, 295, 319, 273,
	270, 171, 296, 200, 242, 182, 184, 196, 203, 205,
	207, 208, 251, 252, 264, 284, 298, 299, 300, 199,
	192, 278, 193, 217, 194, 172, 286, 195, 174, 265,
	303, 0, 213, 274, 238, 175, 237, 266, 302, 301,
	183, 327, 333, 334, 338, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 332, 211, 169, 315, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 331, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 222, 263,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 313, 325, 342, 345, 0,
	0, 0, 173, 344, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 340, 247, 248, 249, 250, 214, 0, 190, 343,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 210, 216,
	0, 218, 189, 262, 212, 322, 225, 0, 0, 0,
	254, 221, 287, 226, 232, 275, 321, 260, 280, 187,
	312, 288, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 170, 0, 230, 0, 271, 209, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 0, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 297, 0, 0, 328,
	329, 330, 314, 0, 201, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 289, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 294, 310, 186, 285, 323, 191, 292, 181, 258,
	281, 0, 0, 178, 308, 291, 240, 223, 224, 177,
	0, 276, 202, 215, 198, 256, 0, 307, 335, 197,
	326, 0, 318, 180, 0, 317, 255, 304, 309, 241,
	235, 179, 306, 239, 234, 227, 206, 0, 219, 267,
	233, 268, 220, 245, 244, 246, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 228, 0, 0,
	0, 336, 0, 279, 261, 0, 0, 0, 277, 231,
	305, 269, 311, 295, 319, 375, 270, 171, 296, 200,
	242, 182, 184, 196, 203, 205, 207, 208, 251, 252,
	264, 284, 298, 299, 300, 199, 192, 278, 193, 217,
	194, 172, 286, 195, 174, 265, 303, 0, 213, 274,
	238, 175, 237, 266, 302, 301, 183, 327, 333, 334,
	338, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 332, 211,
	169, 315, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 331, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 222, 263, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 313, 325, 342, 345, 0, 0, 0, 173, 344,
	0, 0, 0, 0, 0, 0, 376, 316, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 340, 247, 248,
	249, 250, 214, 0, 190, 343, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 210, 216, 0, 218, 189, 262,
	212, 322, 225, 0, 0, 0, 254, 221, 287, 226,
	232, 275, 321, 260, 280, 187, 312, 288, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 230, 0, 271, 209, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 0, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 297, 0, 0, 328, 329, 330, 314, 0,
	201, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	289, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 294, 310, 186,
	285, 323, 191, 292, 181, 258, 281, 0, 0, 178,
	308, 291, 240, 223, 224, 177, 0, 276, 202, 215,
	198, 256, 0, 307, 335, 197, 326, 0, 318, 180,
	0, 317, 255, 304, 309, 241, 235, 179, 306, 239,
	234, 227, 206, 0, 219, 267, 233, 268, 220, 245,
	244, 246, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 320, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 228, 0, 0, 0, 336, 0, 279,
	261, 0, 0, 0, 277, 231, 305, 269, 311, 295,
	319, 273, 270, 171, 296, 200, 242, 182, 184, 196,
	203, 205, 207, 208, 251, 252, 264, 284, 298, 299,
	300, 199, 192, 278, 193, 217, 194, 172, 286, 195,
	174, 265, 303, 0, 213, 274, 238, 175, 237, 266,
	302, 301, 183, 327, 333, 334, 338, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 332, 211, 169, 315, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 331,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	222, 263, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 313, 325, 342,
	345, 0, 0, 0, 173, 344, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 340, 247, 248, 249, 250, 214, 0,
	190, 343, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	210, 216, 0, 218, 189, 262, 212, 322, 225, 0,
	0, 0, 254, 221, 287, 226, 232, 275, 321, 260,
	280, 187, 312, 288, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 230, 0, 271,
	209, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 0, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 297, 0,
	0, 328, 329, 330, 314, 0, 201, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 204, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 289, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 294, 310, 186, 285, 323, 191, 292,
	181, 258, 281, 0, 0, 178, 308, 291, 240, 223,
	224, 177, 0, 276, 202, 215, 198, 256, 0, 307,
	335, 197, 326, 0, 318, 180, 0, 317, 255, 304,
	309, 241, 235, 179, 306, 239, 234, 227, 206, 0,
	219, 267, 233, 268, 220, 245, 244, 246, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 228,
	0, 0, 0, 336, 0, 279, 261, 0, 0, 0,
	277, 231, 305, 269, 311, 295, 319, 273, 270, 171,
	296, 200, 242, 182, 184, 196, 203, 205, 207, 208,
	251, 252, 264, 284, 298, 299, 300, 199, 192, 278,
	193, 217, 194, 172, 286, 195, 174, 265, 303, 0,
	213, 274, 238, 175, 237, 266, 302, 301, 183, 327,
	333, 334, 338, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	332, 211, 169, 315, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 331, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 222, 263, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 313, 325, 342, 345, 0, 0, 0,
	173, 344, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 340,
	247, 248, 249, 250, 214, 0, 190, 343, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 210, 216, 0, 218,
	189, 262, 212, 322, 225, 0, 0, 0, 254, 221,
	287, 226, 232, 275, 321, 260, 280, 187, 312, 288,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 230, 0, 271, 209, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 0,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 297, 0, 0, 328, 329, 330,
	314, 0, 201, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 289, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 294,
	310, 186, 285, 323, 191, 292, 181, 258, 281, 0,
	0, 178, 308, 291, 240, 223, 224, 177, 0, 276,
	202, 215, 198, 256, 0, 307, 335, 197, 326, 0,
	318, 180, 0, 317, 255, 304, 309, 241, 235, 179,
	306, 239, 234, 227, 206, 0, 219, 267, 233, 268,
	220, 245, 244, 246, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 228, 0, 0, 0, 336,
	0, 279, 261, 0, 0, 0, 277, 231, 305, 269,
	311, 295, 319, 273, 270, 171, 296, 200, 242, 182,
	184, 196, 203, 205, 207, 208, 251, 252, 264, 284,
	298, 299, 300, 199, 192, 278, 193, 217, 194, 172,
	286, 195, 174, 265, 303, 0, 213, 274, 238, 175,
	237, 266, 302, 301, 183, 327, 333, 334, 338, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 332, 211, 169, 315,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 331, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 222, 263, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 313,
	325, 342, 345, 0, 0, 0, 173, 344, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 340, 247, 248, 249, 250,
	214, 0, 190, 343, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 210, 216, 0, 218, 189, 262, 212, 322,
	225, 0, 0, 0, 254, 221, 287, 226, 232, 275,
	321, 260, 280, 187, 312, 288, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 230,
	0, 271, 209, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 0, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	297, 0, 0, 328, 329, 330, 314, 0, 201, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 204, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 289, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	675, 676, 1710, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 294, 310, 186, 285, 323,
	191, 292, 181, 258, 281, 0, 0, 178, 308, 291,
	240, 223, 224, 177, 0, 276, 202, 215, 198, 256,
	0, 307, 335, 197, 326, 0, 318, 180, 0, 317,
	255, 304, 309, 241, 235, 179, 306, 239, 234, 227,
	206, 0, 219, 267, 233, 268, 220, 245, 244, 246,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 228, 0, 0, 0, 336, 0, 279, 261, 0,
	0, 0, 277, 231, 305, 269, 311, 295, 319, 273,
	270, 171, 296, 200, 242, 182, 184, 196, 203, 205,
	207, 208, 251, 252, 264, 284, 298, 299, 300, 199,
	192, 278, 193, 217, 194, 172, 286, 195, 174, 265,
	303, 0, 213, 274, 238, 175, 237, 266, 302, 301,
	183, 327, 333, 334, 338, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 332, 211, 169, 315, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 331, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 222, 263,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 313, 325, 342, 345, 0,
	0, 0, 173, 344, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 340, 247, 248, 249, 250, 214, 0, 190, 343,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 337, 210, 216,
	0, 218, 189, 262, 212, 322, 225, 259, 0, 0,
	254, 221, 287, 226, 232, 275, 321, 260, 280, 187,
	312, 288, 236, 0, 204, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 289, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 675, 676, 1710, 0,
	0, 0, 185, 170, 0, 230, 0, 271, 209, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 314, 0, 201, 0, 0, 0, 0, 0,
	176, 294, 310, 186, 285, 323, 191, 292, 181, 258,
	281, 0, 0, 178, 308, 291, 240, 223, 224, 177,
	0, 276, 202, 215, 198, 256, 0, 307, 335, 197,
	326, 0, 318, 180, 0, 317, 255, 304, 309, 241,
	235, 179, 306, 239, 234, 227, 206, 0, 219, 267,
	233, 268, 220, 245, 244, 246, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 228, 0, 0,
	0, 336, 0, 279, 261, 0, 0, 0, 277, 231,
	305, 269, 311, 295, 319, 273, 270, 171, 296, 200,
	242, 182, 184, 196, 203, 205, 207, 208, 251, 252,
	264, 284, 298, 299, 300, 199, 192, 278, 193, 217,
	194, 172, 286, 195, 174, 265, 303, 0, 213, 274,
	238, 175, 237, 266, 302, 301, 183, 327, 333, 334,
	338, 0, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 332, 211,
	169, 315, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 331, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 222, 263, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 313, 325, 342, 345, 0, 0, 0, 173, 344,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 340, 247, 248,
	249, 250, 214, 0, 190, 343, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 337, 210, 216, 0, 218, 189, 262,
	212, 322, 225, 259, 0, 0, 254, 221, 287, 226,
	232, 275, 321, 260, 280, 187, 312, 288, 236, 0,
	204, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	289, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 675, 676, 0, 0, 0, 0, 185, 170,
	0, 230, 0, 271, 209, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 314, 0,
	201, 0, 0, 0, 0, 0, 176, 294, 310, 186,
	285, 323, 191, 292, 181, 258, 281, 0, 0, 178,
	308, 291, 240, 223, 224, 177, 0, 276, 202, 215,
	198, 256, 0, 307, 335, 197, 326, 0, 318, 180,
	0, 317, 255, 304, 309, 241, 235, 179, 306, 239,
	234, 227, 206, 0, 219, 267, 233, 268, 220, 245,
	244, 246, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 228, 0, 0, 0, 336, 0, 279,
	261, 0, 0, 0, 277, 231, 305, 269, 311, 295,
	319, 273, 270, 171, 296, 200, 242, 182, 184, 196,
	203, 205, 207, 208, 251, 252, 264, 284, 298, 299,
	300, 199, 192, 278, 193, 217, 194, 172, 286, 195,
	174, 265, 303, 0, 213, 274, 238, 175, 237, 266,
	302, 301, 183, 327, 333, 334, 338, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 332, 211, 169, 315, 0, 257,
	860, 0, 0, 0, 0, 0, 0, 0, 253, 331,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	222, 263, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 313, 325, 342,
	345, 0, 0, 0, 173, 344, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 340, 247, 248, 249, 250, 214, 0,
	190, 343, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	210, 216, 0, 218, 189, 262, 212, 322, 225, 0,
	848, 0, 254, 221, 287, 226, 232, 275, 321, 260,
	280, 187, 312, 288, 236, 860, 0, 0, 868, 872,
	874, 876, 878, 879, 881, 0, 885, 882, 883, 884,
	590, 0, 863, 864, 865, 866, 846, 847, 869, 0,
	849, 0, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 861, 867, 0, 170, 0, 230, 0, 271,
	209, 871, 873, 875, 877, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	753, 754, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 862, 0, 0, 860,
	0, 328, 329, 330, 314, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 0, 0, 0, 838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 872, 874, 876, 878, 879, 881,
	0, 885, 882, 883, 884, 0, 0, 863, 864, 865,
	866, 846, 847, 869, 1143, 849, 0, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 861, 867, 0,
	620, 0, 0, 619, 0, 0, 871, 873, 875, 877,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	0, 0, 0, 0, 0, 0, 0, 605, 0, 0,
	0, 862, 0, 0, 591, 1790, 1791, 868, 872, 874,
	876, 878, 879, 881, 0, 885, 882, 883, 884, 0,
	0, 863, 864, 865, 866, 846, 847, 869, 0, 849,
	610, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 861, 867, 2231, 0, 0, 0, 0, 0, 0,
	871, 873, 875, 877, 880, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 862, 1139, 0, 0, 1136,
	0, 0, 0, 1138, 1135, 1137, 1141, 1142, 1663, 0,
	0, 1140, 0, 0, 2647, 0, 0, 589, 0, 0,
	0, 0, 0, 0, 2213, 0, 0, 0, 592, 613,
	0, 0, 0, 0, 0, 870, 2231, 0, 0, 0,
	0, 0, 0, 0, 0, 2213, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 609, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 2309, 604, 617, 0, 0, 2213, 601, 599,
	598, 0, 603, 593, 594, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 612,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1146, 1147, 1148, 1149, 1150, 1151, 1144, 1145, 395,
	870, 394, 401, 391, 0, 0, 0, 0, 2217, 0,
	0, 0, 0, 398, 399, 606, 400, 404, 0, 2221,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 2217,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 2210,
	2221, 0, 0, 2212, 2214, 2216, 0, 2218, 2219, 2220,
	2222, 2223, 2224, 2226, 2227, 2228, 2229, 0, 0, 413,
	2210, 0, 414, 0, 2212, 2214, 2216, 0, 2218, 2219,
	2220, 2222, 2223, 2224, 2226, 2227, 2228, 2229, 0, 0,
	0, 0, 0, 395, 870, 394, 401, 391, 2232, 0,
	0, 2217, 0, 0, 0, 0, 0, 398, 399, 0,
	400, 404, 2221, 0, 386, 0, 0, 0, 0, 2232,
	0, 0, 0, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 2210, 2230, 0, 0, 2212, 2214, 2216, 0,
	2218, 2219, 2220, 2222, 2223, 2224, 2226, 2227, 2228, 2229,
	2209, 0, 0, 413, 2230, 0, 414, 0, 0, 395,
	0, 394, 401, 391, 0, 0, 0, 0, 0, 0,
	0, 2209, 0, 398, 399, 0, 400, 404, 0, 2225,
	386, 2232, 0, 0, 0, 0, 2215, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2225, 0, 387, 389, 388, 0, 0, 2215, 0, 0,
	393, 0, 0, 0, 0, 0, 2230, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 2209, 0, 0, 390, 0, 0, 0,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2225, 0, 0, 0, 0, 0, 0, 2215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 389, 388, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 412, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 392, 396, 402, 0,
	403, 405, 0, 0, 406, 407, 408, 0, 0, 410,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 389, 388, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 412,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 396, 402, 0, 403, 405, 0, 0, 406, 407,
	408, 0, 0, 410, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 396, 402, 0,
	403, 405, 0, 0, 406, 407, 408, 0, 0, 410,
	411,
}

var yyPact = [...]int{
	284, -1000, -303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -163, 25487, 25487, -1000,
	-1000, 1499, -1000, 24991, 9605, 25983, 162, 158, 25983, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 412, -1000,
	24495, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, 28099,
	265, 262, 7611, 25983, -285, -1000, 2081, -140, -1000, -1000,
	-1000, -1000, 252, 447, 23999, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27664, 91, 447, 570, 582, 653, 653, 11093, 2081, 215,
	113, -1000, 843, 284, 27251, 346, 25983, -1000, 969, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 346, -1000, -1000,
	-1000, 2081, 2081, -1000, 25983, 25983, -10, 1043, -1000, 224,
	219, 225, 968, -1000, -1000, -1000, -1000, -1000, 2122, -1000,
	25983, 25983, 1796, 25983, -1000, 1287, 307, 28183, 1953, 784,
	498, 1816, -1000, -1000, 1773, -1000, 114, 78, 119, 197,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 99, -1000, 2012,
	-1000, -1000, 104, -1000, -1000, 80, -1000, -1000, -1000, -62,
	-1000, -1000, -1000, -1000, -1000, -155, -155, 613, 1075, 7611,
	-1000, 1198, -1000, 2559, -1000, -1000, -1000, -1000, 5122, 9099,
	9099, 9099, 9099, -1000, -1000, 1644, 7611, 1764, 1760, -1000,
	-1000, -1000, -1000, 966, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1434, 8603, -1000, 1759,
	1748, 1743, 1742, 1740, 1735, 1727, 1724, 1719, 1718, 1711,
	1552, 1710, 1427, 1426, 1709, 1706, 1705, 9099, 1425, 1552,
	1552, 1703, 1702, 1701, 1698, 1697, 1695, 1693, 1688, 1683,
	1680, 1679, 1678, 1676, 1675, 1674, 1664, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27645, -1000, 963, 766, -1000, 1658, 1943, 2024, 1594, 2078,
	1996, 1993, 1990, 1988, 1266, -1000, -1000, 41, 367, 367,
	367, 395, 367, 409, -1000, -1000, -1000, -1000, -1000, -1000,
	486, -1000, -1000, -1000, -1000, 812, 25983, -1000, 1606, 946,
	2020, 326, 320, 211, -1000, 946, 227, 324, 2024, 2024,
	-86, -90, 946, 946, -90, 96, -1000, -1000, -1000, 1128,
	311, 1128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2002,
	2001, 376, 376, 379, -1000, -162, -1000, -1000, 500, -1000,
	526, -1000, 1287, 301, 292, 828, 1083, -1000, 1012, 25983,
	25983, 25983, 1012, 1012, 14072, 13576, -1000, 2024, 1594, -1000,
	1537, 1912, 1594, 376, 376, 376, 376, 376, 376, 376,
	25983, 6610, 6610, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 282, -1000, -1000, -1000, -1000, -1000, 220, 1656, -1000,
	25983, 216, 2024, 1943, 2024, -1000, -1000, 962, 1264, 1421,
	-1000, -1000, 224, 997, -1000, 706, -1000, -1000, -1000, -1000,
	25983, 246, -1000, -1000, 1395, 1655, -1000, 366, 748, 898,
	-1000, 97, 28249, 21512, 1287, 21512, 25983, -1000, -1000, -1000,
	-1000, -1000, -1000, -71, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 79, -1000, 79,
	7611, 7611, 7611, 7611, 7611, -1000, 382, 8107, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9099, 9099, 9099, 9099, 9099,
	9099, 9099, 9099, 9099, 9099, 9099, 9099, 1643, 1024, 9099,
	9099, 9099, 1912, 2262, 821, -1000, -1000, -1000, -1000, -1000,
	1040, 1075, 7611, 7611, 25983, -1000, 27649, 7611, 7611, 1078,
	7611, 1972, 1972, 3633, 25983, 7611, -1000, 1520, 1519, -1000,
	-1000, 1195, 7611, -1000, -1000, 7611, 9099, 7611, -1000, -1000,
	-1000, -1000, 63, 1972, 7611, 7611, 1972, 1972, 1972, 1093,
	1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 25983, 1909,
	65, -1000, -1000, -1000, 1596, -1000, 1625, 1625, 1596, 1596,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1653,
	1652, -1000, -1000, 1624, 1624, 1624, 1596, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1648, 1648, 1651, 1648, 25983, 2024, -285, 6114,
	-1000, -289, 1943, 7611, -1000, -1000, 7611, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1420, 397, 367, -1000, 25983,
	1095, 21512, 1287, 1309, 25983, 367, 379, -1000, 25983, 812,
	1966, 25983, 2087, 9099, 21512, 1128, 946, -1000, 2087, 1128,
	-1000, -1000, -1000, 946, 946, -1000, -1000, -1000, -1000, 1128,
	1128, -1000, -1000, -76, 2087, 2087, -99, 25983, 25983, 367,
	25983, -1000, -1000, -1000, -1000, 25983, -1000, -1000, 25983, 21512,
	20024, -1000, -118, 567, 528, 551, -1000, -1000, 359, 356,
	12583, 318, 21512, 4625, -1000, -1000, 1012, 1012, 1012, 4625,
	4625, 888, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1943,
	-1000, -1000, -1000, -1000, 25983, 21512, 1287, 25983, 25983, 25983,
	27251, -1000, 873, -1000, -1000, 10597, 961, 873, 1419, 25983,
	1812, -286, -1000, 12087, 25983, 25983, -1000, -1000, -286, -1000,
	11590, 25983, 1943, -1000, 1943, 2687, -1000, 2019, -1000, 224,
	161, -1000, -1000, -1000, -1000, -1000, -1000, 957, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 759, -1000, 25983,
	-1000, -1000, 97, 21512, 1035, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 137, -1000, -1000, 145, -1000, 392, 25, 988,
	-1000, -1000, 51, 140, 427, 51, 1075, -1000, 1067, 1067,
	1089, -1000, 394, -1000, -1000, -1000, -1000, 1644, -1000, -1000,
	-1000, 2036, 1997, -1000, 1130, 1130, 897, 897, 897, 897,
	897, 1109, 1109, -1000, -1000, -1000, 5122, 1643, 9099, 9099,
	9099, 353, 1957, 1784, -1000, 7611, 1054, -1000, 7611, 1413,
	875, 951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1517, 613, 1516, 1232, 2096, 1515, 7611, -1000,
	-1000, 7611, 1487, 7115, -1000, -1000, -1000, 1513, 949, 1508,
	-1000, -1000, -1000, 1501, 675, 1500, 1289, 1492, 756, 7611,
	987, 978, 7611, 7611, 7611, 7611, 1491, 7611, 7611, 7611,
	7611, 7611, 7611, 7611, 7611, -1000, 7611, 59, -1000, -1000,
	-1000, -1000, 1263, -1000, 1261, -1000, -1000, -1000, 1404, 1404,
	-1000, 1260, -1000, -1000, -1000, -1000, 1255, -1000, -1000, 1253,
	-1000, -1000, -1000, -1000, 959, -1000, 1075, -1000, 1403, -1000,
	886, 736, -1000, 1424, -1000, -1000, 23503, 25983, 53, -1000,
	1949, 854, -1000, 25, 624, 1785, 1904, 25983, 23007, -1000,
	1642, 958, -1000, -1000, 7611, -1000, 1779, 25983, 2087, -1000,
	25983, 2087, 2087, 946, 27251, 1128, 25983, 1128, -1000, -1000,
	1128, -1000, 935, -1000, 25983, -1000, -1000, -1000, -1000, 50,
	854, 2383, 790, -1000, -1000, -1000, -1000, 26479, 26479, 13080,
	26479, -1000, 1014, -1000, -1000, 558, 493, 510, -1000, -1000,
	387, -1000, -1000, 624, -1000, -1000, -1000, 1640, 1042, -1000,
	-1000, 9099, -1000, 4625, 4625, 4625, -1000, -1000, 16056, -1000,
	-1000, 722, 624, 1810, 715, -1000, 715, -1000, 2087, 6610,
	-1000, 20024, -1000, -1000, 22504, -1000, 22008, 2087, -293, 687,
	-1000, 1933, 631, -1000, 1634, -1000, 943, 1897, -1000, 622,
	-1000, 1041, 936, -1000, 631, 933, 1884, 622, -1000, -1000,
	-1000, 929, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -12, -1000,
	-1000, 25983, 1395, 925, 1035, 676, -1000, 386, 919, 918,
	-1000, 21512, 98, 21512, -1000, 21512, -1000, -1000, 228, -1000,
	25983, 1941, -1000, -1000, -1000, 1382, -310, 1939, -1000, -1000,
	-1000, -1000, -1000, 924, -1000, 353, 1957, 1525, -1000, 9099,
	9099, 2255, 1050, -1000, 7611, 1088, 27530, 1129, 15064, 25983,
	-1000, -1000, 7611, 7611, -1000, 2250, 2246, -1000, 7611, 7611,
	1225, -1000, 25983, -1000, -1000, -1000, 15064, -1000, 9099, -1000,
	7611, 2185, -54, -54, 2170, 2166, 2158, 901, -54, 2116,
	2100, 2037, 1968, 1848, 1821, 1666, 1645, 1075, -1000, -1000,
	1490, 1489, 890, -1000, 885, 1485, 884, 874, 6114, -1000,
	-130, 7611, 7611, 7611, 1872, -1000, -1000, 1606, 1064, 1633,
	-78, 1008, -1000, 364, 21512, 260, -1000, 1809, 247, -1000,
	1904, -1000, 499, -1000, 1632, 25983, 852, -1000, 915, 284,
	-1000, 25983, 1075, -1000, 1287, 946, -1000, 2087, 771, -1000,
	-1000, 2087, -1000, 946, -1000, 946, 1128, 25983, -1000, -78,
	1008, 364, 25983, 20024, 20024, 20024, 20024, -1000, 1841, 1837,
	-1000, 1869, 1835, 1870, 25983, 20024, 1606, -1000, 26865, -1000,
	-1000, -1000, -1000, -1000, 1912, 871, 2160, 527, 7611, -1000,
	-1000, -1000, 490, 21512, 1392, 318, -1000, -1000, -1000, -1000,
	-1000, 25983, 25983, 2039, -1000, 712, -1000, -1000, 911, -1000,
	2039, -1000, 1251, 1385, 1114, -286, 6114, 235, 25983, -286,
	25983, 6114, -1000, 25983, 217, -286, 2687, 1250, -1000, -1000,
	-1000, 2093, 21512, 1287, 970, 1006, -1000, 100, -1000, 118,
	352, 1384, -1000, 407, 75, -1000, 1037, 1382, 406, -1000,
	-1000, 9099, -1000, -1000, -1000, -1000, 1075, 7611, 1483, -1000,
	474, 474, 1482, -1000, 1596, 1625, -1000, 1596, 1624, 1596,
	474, 474, 1480, -1000, 1361, 1636, -1000, -1000, 1592, 1584,
	7611, -1000, 1479, 1890, 891, -54, -1000, 1622, -1000, -54,
	-54, -54, -54, -1000, -54, -54, -54, -54, -54, -54,
	-54, -54, -1000, -1000, -1000, 1383, -1000, -1000, -1000, 1248,
	-1000, 1236, -1000, -45, -32, 1075, 1075, -1000, -1000, 1891,
	1965, 1948, 10101, 1269, -1000, -1000, 21016, -1000, 335, -1000,
	-1000, -1000, 401, 90, 1235, 317, -1000, 1398, 25983, -1000,
	-1000, -1000, -1000, -1000, 1008, 1008, 1008, 10101, 346, 680,
	910, 20024, 25983, -1000, 19528, 1478, -1000, 624, 2087, -1000,
	25983, -1000, 2087, 2087, 946, -1000, 1269, 21016, 335, 726,
	-1000, 1036, 1795, 1808, 1795, -1000, -1000, -1000, -1000, 1831,
	-1000, 1828, -1000, -1000, 726, -1000, -1000, -1000, -1000, -1000,
	527, -1000, 2016, 523, 523, 523, 1477, -1000, 676, 1475,
	-1000, -1000, -1000, -1000, 2083, 2076, 20520, 2083, -1000, -293,
	2127, -1000, 1473, 669, -286, -1000, -1000, 631, -1000, -1000,
	-1000, -286, -1000, 631, -1000, -1000, -1000, -1000, -1000, 1287,
	-1000, 110, -1000, -1000, -1000, -1000, -1000, -1000, 10, -1000,
	25983, -1000, 1382, 1377, 74, 25983, -1000, 1075, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7611, -1000, -1000, -1000, 1566, -1000, -1000,
	7611, -1000, 344, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1471, 1470, -291, -20,
	2072, 2071, -1000, -1000, 215, 25983, 1450, 658, -1000, -1000,
	-1000, 27729, 541, -1000, 25983, 1112, 523, 367, 523, 1105,
	1620, -1000, -1000, -1000, 1373, 21, -1000, -1000, -1000, 1372,
	1366, 1221, -1000, -1000, 1280, 899, 43, -1000, -1000, -1000,
	-1000, -1000, -1000, 1619, 15064, 15560, 1364, 1442, 26479, 20024,
	19528, 716, -1000, 880, -1000, -1000, -1000, 2087, -1000, -1000,
	2087, -1000, 21, -1000, 2038, 25983, 6114, -1000, -1000, 7611,
	1613, -1000, 7611, -1000, -1000, -1000, -1000, -1000, 1612, 1915,
	-1000, -1000, -1000, -1000, -1000, -1000, 7611, 7611, -1000, -1000,
	-1000, 25983, -1000, 631, 631, 624, -1000, -1000, -99, -1000,
	-1000, -1000, -99, 1518, -1000, 1481, 2038, -1000, 2065, -1000,
	-1000, -293, 1362, -1000, 2064, 1358, 1290, -1000, 1606, 27990,
	10101, 2424, -1000, -1000, 25983, 25983, -1000, 25983, 25983, 367,
	7611, -1000, -1000, 222, -1000, -1000, 135, -1000, -1000, 1258,
	358, -1000, 18040, -1000, -1000, -1000, -1000, -1000, 79, 2087,
	716, 880, -1000, -1000, 913, -1000, -1000, -1000, 2024, -1000,
	-1000, 1075, 25983, 1075, 19032, -1000, 2049, 2048, 1075, 613,
	622, -1000, -46, -24, -1000, -1000, -1000, 58, 7611, -295,
	-1000, 1357, -28, -1000, -1000, 1962, 334, 27928, -1000, 1008,
	1008, 700, 1008, 1008, 1008, 1008, 249, 244, 1008, 1008,
	1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
	1008, 1008, 1604, -1000, -1000, 2424, -1000, -1000, 1159, 9099,
	-1000, -1000, 1354, 15560, 495, 494, 1603, -1000, 223, 2126,
	-1000, 1104, 1102, -1000, 25983, -1000, 1602, 1502, 170, 1601,
	-1000, 1600, 1597, 25983, 1472, 342, 1353, -1000, -1000, 128,
	-1000, -1000, 869, -1000, 1596, 7611, -1000, -99, 2038, -1000,
	-1000, 855, 853, -1000, -1000, -1000, -1000, 378, -42, -24,
	-1000, 2044, -29, 2043, 2042, 1440, -1000, 3137, -1000, -1000,
	-1000, 613, -1000, 1587, -1000, 2034, 215, 175, 2033, 27990,
	-1000, 1218, 1211, 1008, 1008, 1206, 1347, 1345, 1344, 1008,
	1008, 1203, 1324, 26865, 1201, 1200, 1194, 1234, 1318, 508,
	1205, 1204, 1172, 25983, 1586, 1286, -1000, -1000, 1957, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1193, 1571, -153, -1000, -1000, 1570, 18040, 256, 256, 18040,
	18040, 18040, 1569, 396, -1000, 3, -1000, -1000, -1000, 18040,
	1938, 1380, -1000, 2024, -1000, -1000, 18536, 1553, 1192, -20,
	2032, -1000, 1290, 2030, 1290, 1290, -1000, -1000, 4129, -287,
	-57, 257, 25983, 1290, -1000, -1000, 2028, 229, -1000, -1000,
	-1000, 15064, 15064, -1000, -1000, -1000, -1000, 1313, 1310, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 285, 25983, 823, -1000, 1030, 1356, 7611, 1552, -223,
	18040, 813, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 811,
	809, 797, 18040, -1000, -1000, -1000, 221, -1000, 164, -1000,
	-1000, 1938, -1000, -1000, -1000, 1971, 14568, -48, -1000, 1295,
	-1000, 1290, -1000, -1000, 1076, -1000, -1000, -1000, -1000, -1000,
	796, -1000, -1000, 17544, 196, 234, 218, -1000, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, 316, 795, -1000, 1286, 1276,
	-1000, 1351, -1000, 1806, -1000, 64, 793, -1000, -1000, -1000,
	-1000, 772, -1000, -1000, 1008, 1275, 151, -1000, -1000, -1000,
	-1000, 25983, -1000, 769, -1000, -1000, -1000, 864, -1000, -1000,
	-1000, -1000, 4129, -1000, 25983, -1000, 25983, 194, 1190, 9099,
	1548, 9099, 1547, 206, 1546, -1000, -1000, -1000, -1000, -1000,
	396, -1000, 1804, 1803, 2120, -1000, -1000, -1000, -1000, 164,
	164, 164, 164, 102, 1187, -1000, 1309, 587, -1000, 1005,
	-1000, 17048, 25983, -1000, -1000, 758, 1545, 2026, -1000, 1507,
	25983, 1476, 25983, 1539, 1004, 9099, -1000, -1000, 2125, -1000,
	2121, 481, 481, -1000, -1000, -1000, 25983, 5618, -1000, 839,
	-1000, -1000, 333, 203, -1000, 755, -1000, 751, 16552, 1186,
	1365, -1000, -1000, -1000, 1226, 230, -1000, -1000, -1000, 1075,
	25983, 749, -1000, 1368, 183, -1000, -1000, -1000, 738, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 333, 1883, -1000, 1133,
	-1000, -1000, 27907, 462, -1000, -1000, 27907, 191, -1000, 321,
	1367, -1000, -1000, 734, -1000, 1292, 504, 7611, -1000, 191,
	27990, -1000, 7611, 698, -1000, 27990, 696, -1000, -1000,
}

var yyPgo = [...]int{
	0, 133, 2620, 199, 143, 131, 197, 2616, 2615, 1953,
	1952, 2613, 2612, 2611, 2607, 2606, 2604, 2603, 2602, 2601,
	2600, 2599, 2598, 2597, 2596, 2595, 2588, 2584, 193, 2582,
	2579, 2578, 2577, 2576, 2575, 2568, 2567, 2566, 2565, 2564,
	2563, 2562, 2561, 2560, 2559, 2558, 2557, 2556, 2555, 129,
	2554, 1951, 2551, 2550, 2548, 2544, 2543, 165, 2542, 2541,
	2540, 2539, 2538, 2536, 2534, 2532, 2527, 2526, 2525, 2524,
	2523, 2522, 2520, 125, 2519, 2517, 2516, 2515, 2514, 2511,
	190, 173, 54, 2508, 51, 42, 150, 201, 169, 204,
	196, 149, 122, 66, 2505, 1978, 2504, 141, 180, 108,
	25, 2503, 138, 2502, 115, 40, 50, 195, 102, 48,
	60, 88, 2500, 176, 82, 2499, 2498, 92, 2497, 56,
	2495, 76, 73, 90, 29, 2494, 2492, 2491, 75, 2489,
	2486, 2485, 2483, 142, 2482, 94, 72, 2480, 2477, 2475,
	2474, 2473, 32, 2472, 59, 2471, 2470, 2469, 2468, 57,
	2466, 2463, 12, 17, 21, 2461, 16, 3, 2460, 177,
	140, 80, 107, 2459, 408, 2458, 2456, 2455, 113, 2454,
	389, 2452, 2451, 2450, 2449, 9, 2448, 167, 2447, 2446,
	74, 93, 2445, 53, 153, 158, 2444, 2432, 101, 62,
	70, 99, 2429, 2428, 63, 174, 27, 28, 0, 156,
	35, 2427, 2426, 2425, 212, 2423, 155, 154, 183, 103,
	206, 121, 2422, 2421, 68, 2420, 120, 2419, 97, 7,
	2417, 137, 2416, 181, 145, 2415, 161, 2414, 110, 2,
	100, 2412, 2406, 26, 224, 2405, 2404, 2401, 139, 2395,
	2389, 86, 135, 2388, 2383, 2382, 37, 2381, 30, 20,
	2380, 77, 2379, 205, 2378, 188, 91, 146, 128, 109,
	178, 182, 61, 116, 1119, 106, 79, 18, 2376, 179,
	2375, 194, 198, 2374, 148, 2373, 192, 376, 162, 2372,
	136, 8, 2371, 2369, 2368, 10, 2367, 134, 2366, 2365,
	19, 2364, 23, 2363, 2358, 2356, 2351, 6, 2350, 2344,
	2335, 1, 4, 2333, 5, 172, 47, 96, 2331, 98,
	203, 2327, 2325, 2324, 2321, 2320, 550, 2317, 2316, 2315,
	2312, 2309, 2307, 2306, 2287, 78, 34, 2282, 2279, 2273,
	2270, 64, 105, 2269, 295, 163, 2267, 36, 2266, 2254,
	24, 2252, 31, 2246, 2245, 2243, 14, 147, 2242, 2241,
	15, 2240, 2237, 11, 13, 2235, 2233, 55, 2232, 41,
	33, 67, 65, 2230, 22, 58, 104, 2228, 2227, 191,
	189, 160, 2225, 123, 185, 207, 2222, 171, 2205, 2202,
	2200, 2198, 2196, 2195, 2188, 1149, 2186, 2181, 186, 52,
	175, 87, 2180, 2179, 2178, 69, 114, 89, 83, 157,
	2177, 151, 2176, 2173, 81, 2172, 2171, 2169, 2166, 2165,
	2164, 2144, 184, 119, 2142,
}

//line mysql_sql.y:8109
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 410, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 78, 408, 408, 408, 409, 409, 77,
	77, 66, 65, 356, 356, 355, 355, 354, 354, 353,
	353, 353, 352, 352, 352, 351, 351, 350, 350, 349,
	349, 347, 347, 348, 346, 345, 345, 345, 343, 343,
	341, 341, 342, 342, 336, 336, 339, 339, 337, 337,
	337, 337, 340, 335, 335, 335, 334, 334, 64, 64,
	64, 266, 266, 63, 63, 280, 280, 280, 280, 280,
	278, 278, 278, 278, 278, 278, 277, 277, 276, 276,
	281, 281, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 58, 58, 58, 58, 61, 61, 61, 62,
	275, 275, 275, 59, 60, 60, 265, 265, 270, 270,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 274, 274, 274, 272, 272, 271, 271, 273,
	273, 52, 52, 52, 55, 54, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 53, 53, 53, 53, 53,
	53, 50, 50, 50, 50, 50, 49, 49, 51, 51,
	263, 263, 262, 69, 69, 69, 69, 69, 69, 69,
	68, 68, 71, 71, 70, 72, 57, 57, 57, 57,
	57, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	380, 380, 380, 382, 382, 202, 203, 411, 205, 201,
	201, 201, 376, 376, 377, 378, 379, 379, 379, 67,
	7, 7, 47, 394, 394, 48, 401, 401, 316, 316,
	216, 216, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 319, 320,
	212, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 35, 34,
	34, 252, 252, 33, 412, 412, 185, 185, 41, 42,
	43, 32, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 330, 330, 414, 414, 414, 44, 45,
	315, 315, 315, 39, 38, 37, 36, 36, 31, 31,
	30, 30, 209, 209, 211, 211, 207, 413, 413, 292,
	292, 210, 210, 29, 29, 29, 208, 208, 184, 206,
	206, 206, 8, 8, 6, 11, 11, 11, 11, 11,
	11, 11, 11, 17, 19, 260, 260, 257, 18, 14,
	13, 16, 12, 15, 5, 5, 5, 5, 9, 9,
	10, 92, 92, 123, 123, 389, 389, 385, 385, 386,
	386, 386, 387, 387, 388, 388, 73, 324, 324, 324,
	324, 324, 324, 4, 323, 323, 323, 323, 323, 323,
	407, 407, 365, 365, 365, 366, 113, 113, 108, 108,
	325, 325, 230, 367, 367, 333, 333, 332, 332, 331,
	331, 111, 111, 112, 112, 95, 95, 81, 81, 338,
	338, 338, 338, 344, 344, 313, 313, 149, 149, 178,
	178, 179, 179, 85, 85, 86, 86, 86, 86, 86,
	86, 373, 373, 375, 375, 374, 110, 110, 106, 106,
	107, 107, 107, 105, 105, 104, 103, 103, 102, 100,
	100, 100, 101, 101, 101, 88, 88, 87, 87, 87,
	87, 87, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 89, 89, 381, 381, 381, 317,
	317, 317, 322, 322, 161, 161, 162, 162, 160, 160,
	90, 90, 91, 91, 91, 91, 159, 159, 158, 93,
	93, 99, 98, 98, 94, 94, 94, 94, 169, 169,
	168, 168, 168, 168, 76, 79, 79, 80, 116, 116,
	167, 166, 166, 166, 115, 115, 114, 114, 109, 109,
	97, 97, 97, 97, 165, 96, 163, 406, 406, 405,
	405, 404, 402, 402, 402, 403, 403, 403, 403, 358,
	358, 358, 358, 358, 194, 194, 194, 200, 200, 193,
	193, 193, 193, 193, 204, 199, 199, 195, 195, 196,
	196, 196, 3, 3, 3, 3, 23, 23, 23, 23,
	27, 27, 383, 383, 20, 390, 393, 391, 391, 395,
	395, 395, 396, 396, 396, 397, 397, 21, 392, 398,
	398, 398, 261, 261, 258, 259, 259, 256, 255, 255,
	255, 400, 400, 399, 399, 399, 197, 197, 22, 251,
	251, 253, 254, 254, 245, 245, 245, 245, 26, 249,
	249, 250, 250, 250, 250, 250, 246, 246, 248, 248,
	244, 244, 244, 244, 244, 25, 243, 243, 241, 241,
	239, 239, 240, 240, 238, 238, 238, 242, 242, 24,
	24, 83, 82, 82, 82, 181, 181, 180, 180, 84,
	318, 318, 282, 282, 283, 283, 283, 286, 286, 298,
	298, 299, 299, 297, 297, 304, 304, 303, 303, 302,
	302, 301, 301, 300, 300, 300, 300, 295, 295, 294,
	294, 284, 284, 284, 284, 284, 285, 285, 285, 293,
	293, 296, 296, 140, 140, 141, 141, 141, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 363, 363, 364,
	143, 143, 143, 147, 147, 147, 147, 147, 147, 142,
	142, 144, 144, 124, 124, 122, 122, 117, 117, 118,
	118, 119, 119, 120, 120, 121, 121, 121, 121, 121,
	121, 268, 268, 361, 361, 362, 362, 357, 357, 357,
	360, 360, 360, 360, 360, 359, 359, 125, 176, 176,
	176, 198, 198, 198, 175, 175, 175, 139, 139, 138,
	138, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 267, 267, 213, 213,
	214, 214, 156, 155, 155, 155, 155, 155, 153, 154,
	152, 152, 152, 152, 152, 151, 151, 150, 150, 150,
	247, 247, 148, 148, 146, 146, 146, 145, 145, 145,
	305, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 222, 222, 227, 227, 372, 372,
	371, 126, 126, 126, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 135, 135, 135, 290, 290, 290, 290,
	290, 291, 291, 291, 288, 288, 289, 289, 231, 232,
	232, 287, 287, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 329,
	329, 329, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 384, 384, 384, 368, 368,
	368, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	173, 173, 173, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 233, 233, 234, 234,
	326, 326, 326, 326, 326, 326, 327, 327, 328, 328,
	328, 328, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 220, 170, 170, 170, 235, 228, 228, 229, 229,
	223, 223, 223, 223, 223, 223, 223, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 224, 224, 226,
	226, 237, 237, 237, 236, 236, 236, 236, 236, 236,
	236, 137, 137, 137, 137, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 128, 128, 128, 128,
	132, 132, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 133, 133, 133, 133,
	131, 131, 131, 131, 131, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 74, 75, 75, 130, 177, 177, 306, 306, 309,
	309, 307, 307, 308, 310, 310, 310, 311, 311, 311,
	312, 312, 312, 314, 314, 183, 183, 183, 190, 190,
	182, 182, 191, 191, 192, 192, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 4, 0, 1, 1, 0, 1, 6,
	8, 9, 9, 0, 2, 1, 3, 3, 3, 1,
	3, 5, 0, 2, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 0, 3, 3, 0, 3,
	0, 3, 0, 3, 0, 2, 1, 2, 3, 4,
	3, 3, 1, 0, 1, 1, 0, 1, 8, 5,
	7, 0, 3, 8, 5, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 4,
	1, 3, 1, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 2, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 6,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 3, 3, 2, 4, 4, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 2, 2, 0, 1, 4, 2,
	4, 1, 5, 3, 2, 1, 2, 2, 4, 4,
	5, 2, 1, 3, 4, 4, 1, 2, 9, 7,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 11, 0, 1, 7, 1, 4, 1, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	0, 1, 0, 6, 0, 3, 5, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 6, 6, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 6, 1,
	1, 1, 4, 4, 6, 8, 6, 4, 5, 5,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 2, 0, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 1, 1, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -410, -2, -1, -3, -77, -4, -73, -5, -6,
	-8, -56, -68, -70, -72, -71, -28, -7, -67, -49,
	-50, -52, -58, -63, -64, -65, -66, -74, -75, -76,
	-85, -78, -23, -22, -21, -20, 392, 12, 434, -9,
	-10, -373, -11, 230, -201, -202, -203, -205, -411, -29,
	-30, -31, -36, -37, -38, -39, -44, -45, -46, -32,
	-33, -34, -35, -41, -42, -43, -48, -47, 207, -51,
	61, -53, -54, -55, -59, -60, -61, -62, 323, 329,
	382, 391, 515, 516, 46, -86, -88, 517, -24, -25,
	-26, -27, 203, 14, 467, -12, -15, -13, -16, -14,
	-18, -19, -17, 225, 224, 37, 288, 289, 290, 327,
	223, 204, 13, 135, 136, 138, 139, 30, -87, 67,
	205, -89, 10, 518, 427, -95, 38, -122, -198, 70,
	-186, -189, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 437, 305,
	464, 242, 266, 353, 269, 276, 135, 154, 148, 176,
	168, 143, 246, 281, 247, 77, 138, 420, 87, 403,
	379, 141, 261, 263, 265, 268, 248, 164, 159, 260,
	244, 515, 157, 249, 39, 250, 181, 251, 252, 469,
	399, 304, 405, 273, 377, 158, 400, 264, 402, 183,
	187, 412, 329, 152, 153, 407, 414, 180, 222, 42,
	466, 234, 415, 185, 179, 175, 423, 277, 275, 178,
	151, 174, 245, 50, 189, 188, 190, 373, 374, 375,
	376, 253, 254, 317, 411, 171, 160, 308, 144, 22,
	418, 229, 404, 330, 255, 270, 278, 184, 186, 236,
	241, 468, 381, 240, 274, 416, 156, 233, 262, 228,
	419, 145, 323, 332, 256, 139, 267, 413, 422, 49,
	345, 150, 142, 219, 136, 238, 243, 11, 257, 258,
	259, 280, 279, 271, 172, 235, 177, 162, 149, 173,
	137, 237, 421, 346, 513, 306, 362, 170, 167, 239,
	212, 417, 406, 140, 366, 347, 165, 282, 510, 511,
	512, 318, 303, 283, 284, 163, 226, 398, 285, 287,
	372, 296, 348, 380, 354, 349, 196, -95, -51, -10,
	-9, -87, -88, -122, 210, -206, 23, 377, -57, 378,
	207, 67, -198, -5, -4, -73, -49, -85, -204, -198,
	288, 288, -204, 210, -198, 240, 361, -316, 215, -277,
	-251, 241, -276, -253, -279, -254, 31, 203, 205, 204,
	237, 14, 327, 211, 12, 10, 328, 223, 24, 25,
	27, 13, 329, 331, 28, 332, 335, 336, 337, 41,
	340, 341, 230, 70, 73, 248, 248, -229, -223, 94,
	231, -225, -218, -219, -221, -353, -347, -217, 67, 119,
	120, 127, 95, -220, -305, 35, 97, 474, 435, -171,
	-172, -173, -174, -198, -348, -346, 73, 78, 81, 84,
	85, 83, 82, 161, 80, 74, 131, 132, -88, 70,
	-368, 482, -187, 503, 483, 502, 46, -321, -328, 209,
	-326, 166, 226, 162, 12, 125, 372, 130, 163, 479,
	499, 437, 506, 476, 477, 471, 472, 473, 475, 484,
	486, 498, -329, 494, 504, 505, 492, 72, 71, 497,
	496, 485, 480, 481, 487, 470, 478, 488, 489, 495,
	500, 501, 311, 87, 312, 313, 427, 307, 314, 215,
	377, 55, 315, 316, 317, 318, 319, 434, 320, 56,
	321, 310, 230, 362, 322, 165, 182, 439, 438, 440,
	431, 428, 426, 429, 430, 432, 433, 490, 491, 493,
	-273, -271, -198, -79, -80, 508, -104, -105, -164, 19,
	6, 7, 8, 9, -408, 379, 468, -318, 305, 362,
	240, -245, -243, 285, 338, 220, 219, 88, 427, 209,
	-385, -386, 200, 201, 202, -375, 460, -374, -198, 313,
	26, 210, 324, 409, 410, -40, -330, -315, 406, 405,
	-210, 404, 397, 408, 399, 203, 461, -183, 348, 380,
	236, 424, 425, 325, 381, 412, 413, 400, 87, 169,
	166, 305, 362, -385, 140, 137, -264, 140, 93, 145,
	144, -264, 240, 361, 40, -270, 372, -269, -271, 412,
	413, 423, 71, 72, 411, -183, 87, -105, -164, -104,
	-86, -88, -373, 305, 362, 240, 211, 210, 212, 427,
	288, -317, -381, 31, -322, 197, 198, 199, 32, 33,
	-1, -199, -196, -189, 70, 71, 72, -111, 232, -122,
	133, -111, -105, -104, -105, -122, -175, -198, 379, 103,
	-57, -57, 378, -376, -377, -378, -380, 207, 378, 377,
	133, 15, -204, -204, 65, -122, -253, 240, -277, -251,
	35, 64, 134, 213, 134, 64, 67, 325, 305, 362,
	326, 427, 210, 338, 212, 240, 339, 305, 362, 210,
	212, 427, 240, 305, 210, 212, 362, 240, 339, 397,
	398, 212, 26, 330, 333, 334, 398, -334, 423, -334,
	134, 93, 90, 91, 92, -223, 110, -236, 103, 104,
	105, 106, 107, 108, 109, 116, 115, 126, 119, 120,
	121, 122, 123, 124, 125, 117, 118, 113, 94, 111,
	112, 96, -88, -223, -229, -221, -221, -221, -221, -305,
	-227, -223, 67, 67, 133, 73, -223, 67, 67, 67,
	67, 67, 67, 67, 67, 67, -327, 67, 67, -233,
	-234, 67, 67, 73, 73, 67, 67, 67, -221, 73,
	-234, -234, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 134, -128,
	-132, -129, -131, -130, -134, -133, 166, 167, 130, 170,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	30, 182, 226, 162, 163, 164, 165, 183, 148, 168,
	465, 191, 149, 192, 150, 193, 151, 194, 152, 153,
	195, 154, 157, 158, 159, 156, 133, -105, 134, 67,
	-81, 38, -107, 21, -89, -88, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 78, -383, 210, 460, -241,
	215, -241, -241, 211, -241, 210, -387, 147, 134, -375,
	-110, 67, -209, 111, 23, 238, 238, 275, -209, -414,
	211, 407, 42, 239, 238, -106, -107, -106, 401, 398,
	-292, 402, 403, -210, -209, -209, -210, 210, 212, 427,
	-412, -413, 15, 113, 238, -412, 30, 30, -316, -316,
	-388, 214, 416, 467, 143, 144, 145, -253, 240, 240,
	134, 103, 23, -272, 103, 114, -271, -271, -271, -272,
	-272, -142, 40, -197, 130, -198, 73, -142, 40, -106,
	-89, -88, 68, 68, -316, -316, -316, -316, -316, -316,
	-316, -204, -90, -91, 121, -223, -198, -90, 38, 398,
	-323, 46, -85, 67, 30, 67, -198, -324, 46, -85,
	67, 30, -106, -81, -107, 133, 78, 73, -57, 68,
	134, -379, 84, 85, -382, 180, 172, -198, -69, 73,
	-3, -4, -5, -6, -28, -49, -85, -349, -347, 67,
	31, 371, 64, 15, -278, 210, 427, 324, 236, 212,
	305, -276, -260, -257, -255, -197, -253, -256, -255, -281,
	-175, 398, -82, 383, 287, -82, -223, -223, -223, -223,
	-223, 83, 94, 303, 84, 85, -218, -237, 31, 283,
	284, -219, -219, -219, -219, -219, -219, -219, -219, -219,
	-219, -219, -219, -226, -235, -305, 67, 113, 111, 112,
	96, -221, -219, -219, 68, 134, -372, -371, 98, -223,
	-223, -198, -369, -370, 441, 442, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 315, 310, 316, 314, 307,
	322, 317, 318, 165, 458, 459, 452, 453, 454, 455,
	456, 457, -228, -229, -228, -223, -369, -228, -170, 32,
	31, -170, -223, -384, 301, 300, 302, -108, -198, -228,
	68, 68, 68, 78, -229, -228, -219, -228, -370, -170,
	-229, -229, -170, -170, -170, -170, 121, -170, -170, -170,
	-170, -170, -170, -170, -170, -271, 40, -312, 346, 345,
	-306, -308, 67, -307, 67, -307, -306, -306, 67, 67,
	-309, 67, -309, -309, -306, -310, 67, -310, -311, 67,
	-310, -198, -106, -80, -332, -331, -223, 40, 509, -81,
	-223, -103, -102, -223, -409, 73, 212, -241, -390, -198,
	94, -261, -258, -255, -251, -196, -198, -241, -388, -374,
	34, -109, -198, -160, 16, -221, -255, -412, -209, -160,
	-413, -209, -209, -211, -413, -207, -413, 398, -160, -160,
	-292, -208, -198, -208, -241, -185, -184, -198, -185, -390,
	-261, -98, -93, -97, -94, -99, -163, -165, -96, 67,
	-122, -88, -198, 417, 418, 141, 144, 143, 31, 371,
	-275, 371, 31, -251, -269, -265, 73, 372, -256, -274,
	64, 130, -331, -272, -272, -272, -274, -274, 129, -81,
	-390, -260, -251, -198, -124, -122, -124, -199, -159, 134,
	-158, 15, -193, -198, 34, 73, 133, -159, 73, -124,
	-407, 64, -325, -230, -367, 508, -113, 68, -108, -365,
	-366, -108, -112, -198, -325, -113, 68, -365, -81, -81,
	-191, -192, -182, -188, -195, -196, -189, 208, 31, 93,
	34, 36, 311, 343, 96, 130, 20, 97, 166, 129,
	313, 435, 312, 203, 59, 438, 440, 439, 428, 426,
	364, 368, 370, 367, 427, 397, 40, 14, 37, 224,
	32, 33, 123, 205, 100, 101, 227, 35, 225, 85,
	44, 23, 62, 15, 17, 18, 314, 363, 215, 214,
	113, 383, 211, 57, 12, 132, 38, 110, 365, 53,
	89, 45, 55, 111, 21, 429, 430, 41, 382, 391,
	463, 231, 125, 315, 316, 60, 94, 371, 83, 43,
	64, 90, 19, 58, 112, 206, 434, 56, 369, 319,
	321, 331, 460, 320, 209, 408, 10, 310, 436, 30,
	223, 54, 210, 99, 213, 84, 230, 6, 88, 13,
	61, 65, 431, 432, 433, 46, 98, 16, 322, 467,
	384, 385, 386, 387, 388, 389, 390, 191, 192, 193,
	194, 195, 272, 218, 216, 220, 221, 508, 509, 197,
	198, 300, 302, 169, 200, 201, 202, 232, 147, 7,
	350, 351, 352, 355, 356, 357, 358, 359, 360, 361,
	516, 392, 393, 394, 395, 396, 409, 410, 23, -57,
	-377, 133, 134, -109, -278, -259, -256, -280, 121, 70,
	-266, 134, 467, 519, 71, 213, -400, -399, 363, 68,
	134, -335, 214, 434, 73, 520, 196, -335, 83, 303,
	84, 85, -305, -229, -226, -221, -219, -219, -224, 227,
	93, -223, -222, -371, 100, -223, 34, 134, 65, 133,
	68, 68, 15, 15, 68, -223, -223, 68, 15, 15,
	-223, 68, 133, 68, 68, 68, 65, 68, 134, 68,
	134, -223, 68, 68, -223, -223, -223, -229, 68, -223,
	-223, -223, -223, -223, -223, -223, -223, -223, -314, 347,
	78, 78, -177, 73, -177, 78, 78, 78, 134, 68,
	73, 134, 22, 134, -100, 36, 37, -122, 215, -122,
	-393, 350, 35, -401, 134, 40, -399, -244, 65, -239,
	-240, -238, -242, 40, -122, 15, -92, -123, -198, 67,
	68, 134, -223, -252, 65, -185, -160, -122, -198, -160,
	-160, -209, -199, -211, -206, -211, -207, 133, -184, -394,
	350, -401, 30, -166, -167, -168, -169, 53, 57, 59,
	54, 55, 56, 60, 30, 134, -194, -200, 34, -195,
	73, -196, -189, -194, -88, -93, -98, -194, 67, 142,
	145, 145, 144, 213, 67, 103, -274, -274, -274, 40,
	-197, 64, 134, -160, -91, -93, -198, 73, -198, 121,
	-160, -149, 511, 38, 39, 134, 67, 68, 134, 46,
	134, 103, 68, 134, 68, 46, 133, 379, -198, -347,
	68, -280, 134, 213, 133, 133, -257, 329, -197, -259,
	20, 467, -175, 38, -181, -180, 73, 520, 38, 68,
	-224, 93, -221, -218, 68, 101, -223, 99, -126, -128,
	345, 346, -127, -133, 130, 166, 226, 165, 164, 162,
	345, 346, -142, -198, -223, -223, 68, 68, -223, -223,
	15, -198, -142, -219, -223, 68, -287, 393, -287, 68,
	68, 68, 68, -287, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 134, 68, 68, 68, 134,
	68, 134, -331, -338, 402, -223, -223, -102, -101, 43,
	-110, 94, 67, -396, 404, 352, -190, 103, -216, -215,
	306, 41, -319, 372, 358, 359, -258, 240, 64, 295,
	296, 297, 298, -238, -183, 129, 251, 67, -122, -92,
	-198, 15, 134, -389, 133, -1, -198, -251, -209, -160,
	-413, -160, -209, -209, -211, -198, -396, -190, -216, -263,
	-262, -175, -97, -97, -97, -97, 53, 53, 53, 58,
	53, 58, 53, -168, -263, -99, -110, -200, 68, -406,
	-405, -404, -402, 61, 214, 62, -228, 145, -259, -212,
	73, -265, -122, -122, -162, 17, 133, -162, 78, 73,
	89, -230, -333, -332, 46, -85, -108, -325, -366, -331,
	-198, 46, -85, -325, -191, -188, -196, -189, 78, 15,
	-256, -251, 121, 121, 70, 330, -266, 73, 351, 73,
	210, 521, 134, 103, -181, 210, -218, -223, 68, -135,
	153, 152, -135, 68, -306, -307, -306, -309, -306, -135,
	-135, 68, 68, 23, 68, 68, 68, -223, 68, 68,
	134, -287, 67, -287, -287, -287, -287, -287, -287, -287,
	-287, -287, -287, -287, -287, 73, 78, 78, -344, 389,
	384, 386, 44, 45, 34, 35, -117, -118, -119, -125,
	-120, -175, -214, -121, 218, 216, 220, -362, 88, 221,
	272, 89, 211, -397, 77, -391, 73, -198, -398, 77,
	353, 132, 308, 40, 354, 355, 369, 304, 78, 78,
	360, -392, 70, -122, -190, -190, -190, -117, -111, 65,
	133, -93, -123, -198, 121, 68, -160, -198, -160, -160,
	-209, -397, -391, -398, -160, 134, 103, -115, -114, 64,
	65, -116, 64, -114, 53, 53, -160, -404, -403, 23,
	-362, -362, -362, 68, 68, -161, 18, 20, 121, -161,
	-149, 13, 68, -325, -325, -251, -266, 372, -122, -180,
	73, 521, -122, -223, 68, -223, -232, -231, 232, 68,
	68, -313, 510, -342, 384, 20, 20, -85, -122, 68,
	134, -128, -121, -198, 89, -361, -362, -241, -361, 89,
	67, 73, -395, 363, 73, 73, 78, 40, 78, 132,
	356, -320, 67, -142, -144, -197, 130, 73, 68, -194,
	-93, -198, -160, -389, 133, -160, -160, -395, -105, -262,
	-331, -223, 67, -223, 67, 53, 19, 17, -223, -229,
	-365, -84, -336, -292, -84, 68, 68, -105, 20, -149,
	73, 20, 73, -340, 73, -110, -140, -141, -157, 343,
	242, -242, 246, 77, 247, 379, 248, 211, 250, 251,
	252, 222, 253, 254, 255, 372, 256, 257, 258, 259,
	326, 6, 291, -119, -139, -138, -136, 83, 94, 40,
	343, -137, 77, 129, 265, 243, 266, -156, -213, 64,
	349, 216, 88, 89, 331, -214, -357, -359, -198, -359,
	-198, -357, -357, -241, -223, 20, 467, 307, 40, 78,
	40, 357, -246, -248, -175, 67, -83, -82, -160, -160,
	-106, -109, -358, -198, 216, 20, 20, -343, 389, -339,
	-337, 384, 385, 386, 387, -289, -288, -291, 390, 274,
	396, -229, -178, 512, 73, 386, 34, -282, 232, 134,
	-157, -190, -190, -183, 129, -190, -190, -190, -190, 249,
	249, -190, -190, -190, -190, -190, -190, -190, -190, -190,
	-190, -190, -190, -190, -190, 67, -136, 83, -219, 73,
	-144, -145, 40, 264, 260, -146, 40, 244, 245, -148,
	67, 272, 13, 89, 89, -122, 67, 65, 282, 67,
	67, 67, -359, 68, 73, 351, 73, 307, 68, 134,
	-306, -223, -84, -105, 68, 68, 134, -345, 214, -341,
	388, -337, 20, 386, 20, 20, 68, -290, 96, 356,
	360, -223, 67, 20, -85, -283, 281, 20, -157, 78,
	78, -190, -190, 78, 73, 73, 73, -190, -190, 78,
	73, -200, 78, 78, 78, 78, 40, 73, -147, 40,
	260, 264, 261, 262, 263, 78, 40, 78, 40, 78,
	40, -198, 67, -363, -364, 73, 78, 67, -326, -247,
	67, -246, -360, 295, 296, 297, 299, 298, -360, -246,
	-246, -246, 67, -268, -267, 273, 94, 372, -249, -248,
	-100, 68, -106, -198, 216, -352, 67, 78, -342, 20,
	-340, 20, -340, -340, -290, 508, 394, 395, 394, 395,
	-179, -198, -340, 20, -284, 274, 275, -285, -296, 277,
	-142, -142, 73, 73, -143, 243, -124, 68, 134, 103,
	68, -223, -233, -151, -150, 463, -246, 68, 68, 68,
	68, -246, 273, -250, 222, 77, 467, 293, 294, -100,
	-356, 30, 68, -351, -350, -176, -346, -198, 389, 390,
	73, -340, 93, 68, 134, -175, 67, -294, 278, 67,
	-292, 67, -292, 89, 296, 244, 245, 68, -364, 73,
	68, -155, -153, -154, 64, 400, 270, 271, 68, -249,
	-249, -249, -249, 68, -190, 73, 292, -355, -354, -353,
	68, 134, 133, -290, -198, -281, -286, 279, 78, -219,
	67, -219, 67, -293, 276, 67, -267, -154, 64, -153,
	64, 14, 13, -156, 78, -196, 134, 103, -350, -198,
	68, -298, 67, 20, 68, -281, 68, -281, 67, 103,
	-219, -152, 267, 268, 30, 144, -152, -354, 40, -223,
	133, -299, -297, 232, -285, 68, 68, 68, -281, 78,
	68, 83, 40, 269, -198, 68, 134, 70, -295, 280,
	68, -297, -300, 46, 78, -304, -301, 67, -157, 234,
	113, -304, -157, -303, -302, 279, 235, 67, 68, 134,
	70, 231, 67, -229, -302, -301, -229, 68, 68,
}

var yyDef = [...]int{
	32, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 642, 643, 644, 645, 0, 0, 0, 414,
	415, 0, 394, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 326, 327, 280, 281, 0, 226,
	222, 201, 202, 203, 162, 163, 164, 165, 288, 0,
	0, 0, 0, 0, 0, 493, -2, 34, 646, 647,
	648, 649, -2, 427, 0, 395, 396, 397, 398, 399,
	400, 401, 402, 269, 270, 271, 265, 266, 268, 267,
	-2, 0, 427, 215, 0, 206, 206, 0, 513, 0,
	0, 527, 549, 32, 0, 471, 0, 476, 835, 871,
	872, 873, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 471, 227, 416,
	417, 513, 513, 392, 0, 251, 0, 1492, 255, 0,
	0, 0, 389, 246, 247, 248, 249, 250, 0, 634,
	0, 0, 242, 0, 221, 1551, 0, 0, 0, 0,
	0, 0, 106, 689, 108, 691, 112, 119, 0, 0,
	124, 125, 128, 129, 130, 131, 132, 0, 136, 0,
	138, 141, 0, 143, 144, 0, 147, 148, 149, 0,
	159, 160, 161, 692, 693, 86, 86, 1241, 1138, 0,
	1145, 1146, 1157, 1166, 943, 944, 945, 946, 0, 0,
	0, 0, 0, 953, 954, 0, 966, 1639, 0, 960,
	961, 962, 963, 49, 61, 62, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 0, 1111, 930, 871,
	0, 1647, 0, 1667, 1648, 1666, 0, 0, 1096, 0,
	1086, 0, -2, -2, 0, 0, 1618, 0, -2, 1644,
	1663, 1671, 1670, 1641, 1642, 1636, 1637, 1638, 1640, 1649,
	1651, 1662, 0, 1658, 1668, 1669, 0, 63, 64, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1102, -2, 1104, 1105, 1107, 1108, 1109, 1110,
	-2, 1113, 1114, 1115, -2, -2, 1118, 1119, 1120, 1121,
	1122, 1123, 1126, -2, 1128, -2, 1130, 1098, 1099, 1100,
	1101, 1090, 1091, 1092, 1093, 1094, 1095, -2, -2, -2,
	0, 199, 197, 513, 585, 0, -2, 0, 0, 0,
	532, 535, 538, 541, 0, 35, 36, 652, 718, 718,
	718, 0, 718, 0, 741, 695, 696, 697, 716, 717,
	432, 428, 429, 430, 431, 501, 0, 503, 506, 372,
	329, 0, 0, 0, 340, 372, 0, 0, 508, 508,
	0, 381, 372, 372, -2, 0, 342, 343, 344, 334,
	0, 334, 348, 349, 350, 361, 362, 382, 1265, 0,
	0, 288, 288, 434, 216, 217, 205, 207, 0, 211,
	0, 204, 1551, 0, 0, 173, 1618, 178, 0, 1499,
	1565, 1514, 0, 0, 1532, 0, -2, 508, 0, 514,
	0, 513, 0, 288, 288, 288, 288, 288, 288, 288,
	0, 0, 0, 550, 551, 546, 547, 548, 552, 553,
	3, 0, 635, 636, 639, 640, 641, 0, 0, 475,
	0, 0, 508, -2, 0, 393, 252, 874, 0, 0,
	256, 257, 0, 0, 272, 0, 275, 260, 261, 262,
	0, 0, 244, 245, 0, 0, 223, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 116, 113, 120,
	123, 133, 140, 0, 152, 154, 157, 114, 121, 126,
	127, 134, 155, 115, 117, 118, 122, 156, 158, 135,
	139, 153, 137, 142, 145, 146, 151, 0, 87, 0,
	0, 0, 0, 0, 0, 1144, 0, 0, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1138, 0, 949, 950, 951, 952, 955,
	0, 967, 0, 0, 0, 1195, 0, 1136, 1136, 0,
	1136, 1132, 1132, 0, 0, 1136, 1074, 0, 0, 1076,
	1087, 0, 0, 1079, 1080, 1136, 0, 1136, 1084, 1085,
	1070, 1071, 0, 1132, 0, 0, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 0, 1242,
	1260, 1197, 1198, 1199, 1247, 1201, 1251, 1251, 1247, 1247,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 0,
	0, 1240, 1220, 1249, 1249, 1249, 1247, 1244, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1254, 1254, 1257, 1254, 0, 508, 0, 0,
	496, 0, 477, 0, 529, 531, 0, 533, 534, 536,
	537, 539, 540, 542, 543, 37, 0, 718, 653, 0,
	0, 0, 0, 0, 0, 718, 434, 433, 0, 502,
	0, 0, 558, 0, 0, 334, 372, 339, 558, 0,
	355, 356, 357, 372, 372, 363, 509, 364, 365, 374,
	0, 379, 380, 0, 558, 558, 0, 0, 0, 718,
	336, 335, 377, 378, 346, 336, 1266, 1267, 0, 0,
	0, 435, 0, 0, 209, 0, 214, 166, 0, 0,
	0, 0, 0, 0, 195, 196, 0, 0, 0, 0,
	0, 186, 189, 829, 830, 686, 687, 190, 191, 477,
	528, 530, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 413, 566, 560, 562, 629, 49, 566, 0, 0,
	450, 463, 445, 0, 452, 0, 836, 436, 463, 438,
	0, 452, 477, 499, 477, 0, 253, 0, 258, 0,
	0, 274, 276, 277, 278, 263, 264, 390, 240, 241,
	233, 234, 235, 236, 237, 238, 239, 243, 59, 0,
	224, 225, 0, 0, 0, 100, 101, 102, 103, 104,
	105, 107, 91, 405, 407, 678, 690, 0, 681, 0,
	110, 150, 83, 0, 0, 83, 1139, 1140, 1141, 1142,
	1143, 1147, 0, 1149, 1151, 1153, 1155, 0, 1171, -2,
	-2, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 1158, 1169, 1170, 0, 0, 0, 0,
	0, 1167, 1162, 0, 947, 0, 964, 968, 0, 0,
	0, 50, 1131, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 0, 1137, 0, 1138, 0, 0, 0, 1133,
	1134, 0, 0, 0, 1035, 1036, 1037, 0, 458, 0,
	1097, 1075, 1088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 1263, 1261, 1262,
	1200, 1248, 0, 1225, 0, 1226, 1227, 1228, 0, 0,
	1221, 0, 1222, 1223, 1224, 1216, 0, 1217, 1218, 0,
	1219, 198, 584, 586, 0, 467, 469, 470, 0, 497,
	510, 515, 516, 519, 33, 38, 0, 0, 0, 655,
	0, 286, 672, 0, 688, 710, -2, 0, 0, 504,
	0, 0, 598, 328, 0, 373, 331, 336, 558, 341,
	0, 558, 558, 372, 0, 374, 0, 374, 368, 369,
	0, 383, 386, 384, 0, 345, 337, 388, 347, 283,
	286, 571, 0, 572, 573, 569, 600, 624, 624, 0,
	624, 604, 835, 218, 219, 0, 0, 213, 167, 168,
	0, 170, 171, 172, 179, 174, 176, 0, 0, 180,
	192, 193, 194, 0, 0, 0, 184, 185, 0, 495,
	403, 404, 408, 0, 410, 833, 411, 412, 558, 0,
	567, 0, 563, 630, 0, 632, 0, 558, 487, 0,
	443, 0, 444, 460, 0, 464, 0, 0, 456, 449,
	453, 0, 0, 473, 437, 0, 0, 442, 498, 500,
	875, 0, 1272, -2, 1274, -2, -2, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 0, 259,
	273, 0, 0, 0, 0, 94, 675, 0, 95, 99,
	89, 0, 0, 0, 680, 0, 677, 682, 0, 109,
	0, 0, 84, 85, 732, 737, 0, 0, 1148, 1150,
	1152, 1154, 1156, 0, 1159, 1167, 1163, 0, 1160, 0,
	0, 1139, 0, 969, 0, 0, 0, 0, 0, 0,
	1022, 1023, 0, 0, 1027, 0, 0, 1030, 0, 0,
	0, 1034, 0, 1073, 1089, 1077, 0, 1081, 0, 1083,
	0, 0, 1001, 1001, 0, 0, 0, 0, 1001, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 1196, 1264,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 587,
	479, 0, 0, 0, 522, 520, 521, 506, 0, 0,
	662, 1268, 719, 290, 0, 0, 674, 0, 0, 715,
	-2, 722, 0, 728, 0, 0, 0, 421, 425, 32,
	507, 0, 559, 330, 0, 372, 338, 558, 835, 358,
	359, 558, 375, 372, 376, 372, 374, 0, 385, 662,
	1268, 290, 0, 0, 0, 0, 0, 591, 0, 0,
	590, 0, 0, 0, 0, 0, 506, 625, 0, 627,
	628, 637, 638, 602, -2, 0, 571, 607, 1136, 220,
	208, 210, 0, 0, 0, 0, 181, 182, 183, 187,
	188, 0, 0, 556, 561, 568, 631, 633, 50, 564,
	556, 39, 0, 0, 0, 463, 465, 0, 0, 463,
	0, 0, 472, 0, 0, 463, 0, 0, 391, 60,
	279, 0, 0, 0, 0, 0, 406, 0, 679, 91,
	0, 0, 111, 0, 0, 735, 0, 737, 0, 1135,
	1161, 0, 1168, 1164, 948, 956, 965, 0, 0, 971,
	983, 983, 0, 974, 1247, 1251, 977, 1247, 1249, 1247,
	983, 983, 0, 51, 0, 0, 1028, 1029, 0, 0,
	0, 459, 0, 0, 0, 1001, 1004, 0, 1005, 1001,
	1001, 1001, 1001, 1010, 1001, 1001, 1001, 1001, 1001, 1001,
	1001, 1001, 1253, 1252, 1238, 0, 1239, 1250, 1255, 0,
	1258, 0, 468, 483, 0, 511, 512, 517, 518, 0,
	0, 0, 837, 665, 663, 664, 0, 1269, 669, 291,
	292, 293, 294, 0, 0, 0, 673, 0, 0, 711,
	712, 713, 714, 723, 1268, 1268, 1268, 837, 471, 0,
	-2, 0, 0, 423, 0, 0, 599, 332, 558, 351,
	0, 366, 558, 558, 372, 387, 665, 0, 669, 558,
	230, 0, 594, 588, 0, 577, 592, 593, 580, 0,
	582, 0, 578, 579, 558, 570, 601, 626, 603, 606,
	608, 609, 615, 0, 0, 0, 0, 212, 169, 0,
	310, 175, 409, 834, 554, 0, 0, 554, 488, 487,
	0, 461, 0, 466, 463, 448, 457, 447, 454, 455,
	474, 463, 441, 440, 876, 1273, 1270, 1271, 254, 0,
	676, 91, 96, 97, 98, 92, 90, 683, 0, 685,
	0, 733, 737, 0, 0, 0, 1165, 970, 957, 972,
	984, 985, 973, 958, 975, 976, 978, 979, 980, 981,
	982, 959, 1024, 0, 1026, 1031, 1032, 0, 1078, 1082,
	0, 1003, 999, 1006, 1007, 1008, 1009, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1246, 0, 0, 485, 72,
	0, 0, 523, 524, 0, 0, 0, 838, 839, 841,
	842, 0, 0, 844, 900, 0, 853, 718, 853, 0,
	0, 855, 856, 654, 0, 0, 657, 658, 667, 0,
	0, 0, 296, 297, 0, 0, 0, 309, 305, 306,
	307, 287, 668, 0, 0, 0, 0, 0, 624, 0,
	0, 558, 422, 425, 426, 505, 333, 558, 370, 367,
	558, 282, 0, 285, 513, 0, 0, 574, 595, 0,
	0, 575, 0, 576, 581, 583, 229, 610, 0, 0,
	612, 613, 614, 605, 177, 544, 0, 0, 565, 545,
	40, 452, 462, 446, 439, 93, 88, 684, 74, 736,
	738, 734, 74, 0, 1033, 0, 513, 1000, 0, 1256,
	1259, 487, 0, 484, 0, 0, 0, 650, 506, -2,
	0, -2, 843, 901, 865, 865, 854, 865, 865, 718,
	0, 666, 656, 0, 670, 671, 0, 298, 299, 0,
	302, 308, 0, 724, 725, 831, 832, 726, 0, 558,
	558, -2, 419, 424, 0, 352, 371, 284, 508, 231,
	232, 596, 0, 589, 619, 616, 0, 0, 555, 557,
	451, 42, 68, 0, 41, 1025, 1072, 996, 0, 489,
	486, 0, 480, 482, 82, 0, 742, -2, 785, 1268,
	1268, 0, 1268, 1268, 1268, 1268, 0, 0, 1268, 1268,
	1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268, 1268,
	1268, 1268, 0, 840, 867, -2, 879, 881, 0, 0,
	884, 885, 0, 0, 0, 0, 922, 891, 0, 0,
	895, 0, 1183, 1184, 0, 899, 0, 857, 866, 0,
	866, 0, 0, 865, 0, 0, 0, 295, 300, 0,
	303, 304, 0, 706, 1247, 0, 730, 74, 513, 420,
	228, 0, 0, 620, 622, 617, 618, 65, 70, 75,
	76, 0, 0, 0, 0, 0, 997, 0, 991, 992,
	993, 998, 478, 0, 73, 0, 0, 744, 0, 727,
	787, 0, 0, 1268, 1268, 0, 0, 0, 0, 1268,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 880, 882, 883, 886,
	887, 888, 927, 928, 929, 889, 924, 925, 926, 890,
	0, 0, 0, 1181, 1182, 920, 0, 0, 0, 0,
	0, 0, 0, 851, 659, 0, 661, 301, 699, 0,
	519, 0, 731, 508, 597, 611, 0, 52, 0, 72,
	0, 77, 0, 0, 0, 0, 1002, 994, 0, 0,
	0, 0, 0, 0, 651, 729, 0, 781, 786, 788,
	789, 0, 0, 792, 793, 794, 795, 0, 0, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 823,
	824, 825, 826, 827, 828, 808, 809, 810, 811, 812,
	813, 820, 0, 0, 817, 0, 0, 0, 1086, 915,
	0, 0, 858, 860, 861, 862, 863, 864, 859, 0,
	0, 0, 0, 850, 852, 896, 0, 660, 698, 707,
	708, 519, 418, 621, 623, 43, 0, 0, 69, 0,
	78, 0, 80, 81, 0, 986, 987, 989, 988, 990,
	0, 491, 481, 0, 769, 0, 0, 775, 0, 782,
	790, 791, 796, 797, 814, 0, 0, 816, 0, 0,
	923, 0, 894, 903, 916, 0, 0, 699, 699, 699,
	699, 0, 897, 700, 1268, 0, 0, 704, 705, 709,
	739, 0, 53, 0, 55, 57, 58, 868, 66, 67,
	71, 79, 0, 490, 0, 745, 0, 747, 0, 0,
	0, 0, 0, 779, 0, 821, 822, 815, 818, 819,
	892, 902, 904, 905, 0, 917, 918, 919, 921, 845,
	846, 847, 848, 0, 0, 702, 0, 44, 45, 0,
	54, 0, 0, 995, 492, 0, 749, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 893, 906, 0, 907,
	0, 0, 0, 849, 701, 703, 0, 0, 56, 869,
	746, 743, 0, 781, 771, 0, 773, 0, 0, 0,
	0, 908, 910, 911, 0, 0, 909, 46, 47, 48,
	0, 0, 751, 0, 767, 772, 774, 776, 0, 780,
	778, 912, 914, 913, 870, 750, 0, 763, 748, 0,
	777, 752, -2, 0, 768, 753, -2, 0, 761, 0,
	0, 754, 762, 0, 757, 0, 0, 0, 756, 0,
	-2, 764, 0, 0, 758, -2, 0, 766, 765,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 518,
	104, 103, 105, 3, 519, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 520, 115, 521, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:643
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:648
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:654
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:674
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:680
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:687
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:695
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:701
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:710
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:718
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:743
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:758
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:764
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:768
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:774
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:790
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:794
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:798
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:811
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:817
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:826
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:837
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:847
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:851
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:857
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:861
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:867
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:891
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:910
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:914
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:918
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:935
		{
			yyVAL.str = ""
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:939
		{
			yyVAL.str = yyDollar[3].str
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:944
		{
			yyVAL.str = "\n"
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:948
		{
			yyVAL.str = yyDollar[3].str
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:957
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:981
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:985
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:997
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1015
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1032
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1059
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1063
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1078
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1091
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1129
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1142
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1174
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1218
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1222
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1228
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1235
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1244
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1248
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1262
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1266
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1270
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1274
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1278
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1306
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1310
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1485
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1515
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1519
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1535
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1546
		{
			yyVAL.str = yyDollar[3].str
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1552
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1556
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1587
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1595
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1618
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1663
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1677
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1704
		{
			yyVAL.str = yyDollar[1].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1711
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1717
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1721
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1738
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1781
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1785
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1789
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1793
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1803
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1809
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1864
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1879
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1885
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1917
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1939
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1961
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1991
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2036
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2048
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2053
		{
			yyVAL.str = "true"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2054
		{
			yyVAL.str = "false"
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2055
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2071
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2082
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2088
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2119
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2123
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2132
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2148
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2164
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2176
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2184
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2188
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2214
		{
			yyVAL.item = nil
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.item = nil
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2247
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2265
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2276
		{
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2280
		{
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2360
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2370
		{
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2372
		{
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2408
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2476
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2493
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2498
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2502
		{
			yyVAL.str = yyDollar[2].str
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2508
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2521
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2525
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2546
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2550
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2559
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2577
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2596
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2614
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2618
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2633
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2670
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2678
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2683
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2690
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2719
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2734
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2740
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2745
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2752
		{
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2754
		{
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2757
		{
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2766
		{
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2770
		{
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2775
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2784
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2797
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2805
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2812
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2819
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2839
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2849
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2862
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2870
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2884
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2907
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2930
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2934
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2949
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2953
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2959
		{
			yyVAL.str = yyDollar[1].str
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2963
		{
			yyVAL.str = yyDollar[3].str
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2969
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2973
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2979
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2984
		{
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2995
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2999
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3015
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3021
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3025
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3031
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3035
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3071
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3089
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3114
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3125
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3138
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3142
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3147
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3151
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3158
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3163
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3176
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3184
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3202
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3218
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3222
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3240
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3249
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3272
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3278
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3284
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3288
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3299
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3303
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3307
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3312
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3316
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3320
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3336
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3370
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3382
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3398
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3407
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3431
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3518
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3540
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3555
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3559
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3565
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3569
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3573
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3582
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3590
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3604
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3622
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3637
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3665
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3669
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3679
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3683
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3687
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3691
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3707
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3711
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3717
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3733
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3739
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3743
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3747
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3757
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3773
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3777
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3783
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3797
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3810
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3816
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3822
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3853
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3857
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3863
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3873
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3877
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3881
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3886
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3890
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3894
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3898
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3907
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3911
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3915
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3919
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3924
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3928
		{
			yyVAL.str = yyDollar[1].str
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3932
		{
			yyVAL.str = yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3941
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3945
		{
			yyVAL.str = yyDollar[1].str
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3949
		{
			yyVAL.str = yyDollar[2].str
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3957
		{
			yyVAL.str = yyDollar[2].str
		}
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3991
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4001
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4012
		{
		}
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4029
		{
			yyVAL.str = yyDollar[1].str
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4035
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4045
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4062
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4068
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4076
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4082
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4089
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4097
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4103
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4124
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4129
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4135
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4143
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4249
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4253
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4269
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4273
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4306
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4338
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4347
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4351
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4374
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4392
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4415
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4437
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4441
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4445
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4449
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4459
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4463
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4469
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4474
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4483
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4487
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4491
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4495
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4501
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4519
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4528
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4534
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4538
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4544
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4552
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4557
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4561
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4579
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4590
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4620
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4624
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4629
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4633
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4664
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4696
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4709
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4715
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4719
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4734
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4748
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4754
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4758
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4771
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4780
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4784
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4793
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4798
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4807
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4811
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4821
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4825
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4836
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4844
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4852
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4860
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4900
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4904
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4922
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4928
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4932
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4936
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4942
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4946
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4950
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4966
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4998
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5006
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5022
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5026
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5034
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5038
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5042
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5050
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5054
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5061
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5065
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5076
		{
			yyVAL.str = ""
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5080
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5084
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5094
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5102
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5106
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5110
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5124
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5128
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5137
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5142
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5169
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5175
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5185
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5191
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5200
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5209
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5232
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5241
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5251
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5259
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5265
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5269
		{
			yyVAL.str = yyDollar[1].str
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5279
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5285
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5291
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5305
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5318
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5322
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5341
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5345
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5354
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5360
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5364
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5374
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5386
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5394
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5410
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5450
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5460
		{
			yyVAL.str = ""
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5464
		{
			yyVAL.str = yyDollar[2].str
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5482
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5489
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5519
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5525
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5543
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5576
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5581
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5585
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5601
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5607
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5611
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5615
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5619
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5623
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5627
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5631
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5635
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5651
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5655
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5661
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5665
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5669
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5673
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5681
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5701
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5705
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5726
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5735
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5739
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5743
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5756
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5765
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5771
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5775
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5781
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5791
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5877
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5892
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5907
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5939
		{
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5945
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5949
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5953
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5963
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5971
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5975
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5979
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5985
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6005
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6012
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6021
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6030
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6040
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6050
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6078
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6098
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6178
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6188
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6205
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6229
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6246
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6254
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6297
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6306
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6328
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6388
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6398
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6406
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6413
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6432
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6440
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6451
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6460
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6469
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6477
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6487
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6495
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6503
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6517
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6527
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6546
		{
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6548
		{
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6622
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6628
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6632
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6663
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6673
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6681
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6685
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6689
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6693
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6697
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6701
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6705
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6725
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6737
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6741
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6755
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6761
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6765
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6772
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6776
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6820
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6824
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6828
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6838
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6851
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6864
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6868
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6872
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6876
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6901
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6912
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6917
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6935
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6947
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6959
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7011
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7024
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7037
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7050
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7063
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7076
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7089
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7104
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7127
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7161
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7238
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7258
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7278
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7298
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7340
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7353
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7366
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7378
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7402
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7414
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7426
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7438
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7450
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7462
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7474
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7500
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7515
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7523
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7532
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7542
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7565
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7570
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7576
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7583
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7587
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7592
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7596
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7615
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7645
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7654
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7662
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7668
		{
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7680
		{
			yyVAL.str = ""
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7684
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

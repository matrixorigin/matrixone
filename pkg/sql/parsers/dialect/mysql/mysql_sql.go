// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const CONNECTORS = 57845
const DAEMON = 57846
const PAUSE = 57847
const CANCEL = 57848
const TASK = 57849
const RESUME = 57850
const MATCH = 57851
const AGAINST = 57852
const BOOLEAN = 57853
const LANGUAGE = 57854
const WITH = 57855
const QUERY = 57856
const EXPANSION = 57857
const WITHOUT = 57858
const VALIDATION = 57859
const ADDDATE = 57860
const BIT_AND = 57861
const BIT_OR = 57862
const BIT_XOR = 57863
const CAST = 57864
const COUNT = 57865
const APPROX_COUNT = 57866
const APPROX_COUNT_DISTINCT = 57867
const APPROX_PERCENTILE = 57868
const CURDATE = 57869
const CURTIME = 57870
const DATE_ADD = 57871
const DATE_SUB = 57872
const EXTRACT = 57873
const GROUP_CONCAT = 57874
const MAX = 57875
const MID = 57876
const MIN = 57877
const NOW = 57878
const POSITION = 57879
const SESSION_USER = 57880
const STD = 57881
const STDDEV = 57882
const MEDIAN = 57883
const STDDEV_POP = 57884
const STDDEV_SAMP = 57885
const SUBDATE = 57886
const SUBSTR = 57887
const SUBSTRING = 57888
const SUM = 57889
const SYSDATE = 57890
const SYSTEM_USER = 57891
const TRANSLATE = 57892
const TRIM = 57893
const VARIANCE = 57894
const VAR_POP = 57895
const VAR_SAMP = 57896
const AVG = 57897
const RANK = 57898
const ROW_NUMBER = 57899
const DENSE_RANK = 57900
const BIT_CAST = 57901
const NEXTVAL = 57902
const SETVAL = 57903
const CURRVAL = 57904
const LASTVAL = 57905
const ARROW = 57906
const ROW = 57907
const OUTFILE = 57908
const HEADER = 57909
const MAX_FILE_SIZE = 57910
const FORCE_QUOTE = 57911
const PARALLEL = 57912
const UNUSED = 57913
const BINDINGS = 57914
const DO = 57915
const DECLARE = 57916
const LOOP = 57917
const WHILE = 57918
const LEAVE = 57919
const ITERATE = 57920
const UNTIL = 57921
const CALL = 57922
const SPBEGIN = 57923
const BACKEND = 57924
const SERVERS = 57925
const KILL = 57926
const BACKUP = 57927
const FILESYSTEM = 57928
const QUERY_RESULT = 57929

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10517

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	21, 702,
	-2, 683,
	-1, 137,
	235, 1048,
	237, 961,
	-2, 1006,
	-1, 161,
	42, 520,
	237, 520,
	264, 527,
	265, 527,
	454, 520,
	-2, 553,
	-1, 200,
	608, 1769,
	-2, 435,
	-1, 546,
	316, 133,
	427, 133,
	428, 133,
	-2, 1677,
	-1, 610,
	81, 1469,
	-2, 1824,
	-1, 611,
	81, 1487,
	-2, 1795,
	-1, 615,
	81, 1488,
	-2, 1823,
	-1, 641,
	81, 1399,
	-2, 1892,
	-1, 642,
	81, 1400,
	-2, 1891,
	-1, 643,
	81, 1401,
	-2, 1881,
	-1, 644,
	81, 1855,
	-2, 1876,
	-1, 645,
	81, 1856,
	-2, 1877,
	-1, 646,
	81, 1857,
	-2, 1883,
	-1, 647,
	81, 1858,
	-2, 1865,
	-1, 648,
	81, 1859,
	-2, 1874,
	-1, 649,
	81, 1860,
	-2, 1884,
	-1, 650,
	81, 1861,
	-2, 1885,
	-1, 651,
	81, 1862,
	-2, 1890,
	-1, 652,
	81, 1863,
	-2, 1895,
	-1, 653,
	81, 1864,
	-2, 1896,
	-1, 655,
	81, 1466,
	-2, 1663,
	-1, 659,
	81, 1471,
	-2, 1678,
	-1, 662,
	81, 1475,
	-2, 1696,
	-1, 666,
	81, 1479,
	-2, 1738,
	-1, 667,
	81, 1480,
	-2, 1819,
	-1, 675,
	81, 1490,
	-2, 1804,
	-1, 676,
	81, 1491,
	-2, 1848,
	-1, 677,
	81, 1492,
	-2, 1814,
	-1, 678,
	81, 1493,
	-2, 1838,
	-1, 689,
	81, 1377,
	-2, 1886,
	-1, 690,
	81, 1378,
	-2, 1887,
	-1, 691,
	81, 1379,
	-2, 1888,
	-1, 695,
	21, 703,
	-2, 666,
	-1, 775,
	449, 553,
	450, 553,
	-2, 521,
	-1, 821,
	122, 1663,
	133, 1663,
	153, 1663,
	-2, 1637,
	-1, 931,
	21, 703,
	-2, 666,
	-1, 1031,
	21, 702,
	-2, 1274,
	-1, 1411,
	81, 1537,
	-2, 1821,
	-1, 1412,
	81, 1538,
	-2, 1822,
	-1, 1551,
	82, 852,
	-2, 858,
	-1, 1940,
	82, 1623,
	154, 1623,
	-2, 1806,
	-1, 1941,
	82, 1623,
	154, 1623,
	-2, 1805,
	-1, 1942,
	82, 1599,
	154, 1599,
	-2, 1792,
	-1, 1943,
	82, 1600,
	154, 1600,
	-2, 1797,
	-1, 1944,
	82, 1601,
	154, 1601,
	-2, 1726,
	-1, 1945,
	82, 1602,
	154, 1602,
	-2, 1720,
	-1, 1946,
	82, 1603,
	154, 1603,
	-2, 1653,
	-1, 1947,
	82, 1604,
	154, 1604,
	-2, 1794,
	-1, 1948,
	82, 1605,
	154, 1605,
	-2, 1724,
	-1, 1949,
	82, 1606,
	154, 1606,
	-2, 1719,
	-1, 1950,
	82, 1607,
	154, 1607,
	-2, 1710,
	-1, 1951,
	82, 1623,
	154, 1623,
	-2, 1711,
	-1, 1952,
	82, 1623,
	154, 1623,
	-2, 1712,
	-1, 1954,
	82, 1612,
	154, 1612,
	-2, 1838,
	-1, 1955,
	82, 1590,
	154, 1590,
	-2, 1824,
	-1, 1956,
	82, 1621,
	154, 1621,
	-2, 1795,
	-1, 1957,
	82, 1621,
	154, 1621,
	-2, 1823,
	-1, 1958,
	82, 1621,
	154, 1621,
	-2, 1679,
	-1, 1959,
	82, 1619,
	154, 1619,
	-2, 1814,
	-1, 1960,
	82, 1616,
	154, 1616,
	-2, 1701,
	-1, 1961,
	81, 1571,
	82, 1571,
	154, 1571,
	385, 1571,
	386, 1571,
	387, 1571,
	-2, 1652,
	-1, 1962,
	81, 1572,
	82, 1572,
	154, 1572,
	385, 1572,
	386, 1572,
	387, 1572,
	-2, 1654,
	-1, 1963,
	81, 1575,
	82, 1575,
	154, 1575,
	385, 1575,
	386, 1575,
	387, 1575,
	-2, 1796,
	-1, 1964,
	81, 1577,
	82, 1577,
	154, 1577,
	385, 1577,
	386, 1577,
	387, 1577,
	-2, 1778,
	-1, 1965,
	81, 1579,
	82, 1579,
	154, 1579,
	385, 1579,
	386, 1579,
	387, 1579,
	-2, 1725,
	-1, 1966,
	81, 1581,
	82, 1581,
	154, 1581,
	385, 1581,
	386, 1581,
	387, 1581,
	-2, 1706,
	-1, 1967,
	81, 1582,
	82, 1582,
	154, 1582,
	385, 1582,
	386, 1582,
	387, 1582,
	-2, 1707,
	-1, 1968,
	81, 1584,
	82, 1584,
	154, 1584,
	385, 1584,
	386, 1584,
	387, 1584,
	-2, 1651,
	-1, 1969,
	82, 1626,
	154, 1626,
	385, 1626,
	386, 1626,
	387, 1626,
	-2, 1684,
	-1, 1970,
	82, 1626,
	154, 1626,
	385, 1626,
	386, 1626,
	387, 1626,
	-2, 1697,
	-1, 1971,
	82, 1629,
	154, 1629,
	385, 1629,
	386, 1629,
	387, 1629,
	-2, 1680,
	-1, 1972,
	82, 1629,
	154, 1629,
	385, 1629,
	386, 1629,
	387, 1629,
	-2, 1741,
	-1, 1973,
	82, 1626,
	154, 1626,
	385, 1626,
	386, 1626,
	387, 1626,
	-2, 1762,
	-1, 1991,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	277, 996,
	-2, 989,
	-1, 2130,
	21, 702,
	-2, 796,
	-1, 2332,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	277, 996,
	-2, 990,
	-1, 2345,
	79, 612,
	154, 612,
	-2, 1161,
	-1, 2686,
	191, 996,
	301, 1242,
	-2, 1214,
	-1, 2828,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1104,
	-1, 2830,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1104,
	-1, 2840,
	79, 612,
	154, 612,
	-2, 1162,
	-1, 2849,
	191, 996,
	301, 1242,
	-2, 1215,
	-1, 2979,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1105,
	-1, 3351,
	82, 1066,
	154, 1066,
	-2, 996,
	-1, 3355,
	82, 1066,
	154, 1066,
	-2, 996,
	-1, 3369,
	82, 1070,
	154, 1070,
	-2, 996,
	-1, 3374,
	82, 1071,
	154, 1071,
	-2, 996,
}

const yyPrivate = 57344

const yyLast = 38995

var yyAct = [...]int{
	577, 1632, 3355, 3354, 3363, 3334, 191, 1391, 3226, 555,
	557, 3287, 579, 550, 3252, 3305, 3234, 2704, 3235, 2929,
	2924, 3144, 3020, 2863, 565, 3158, 1915, 3135, 1244, 2767,
	1184, 2967, 3162, 2966, 1064, 2964, 2768, 3055, 607, 3093,
	459, 2927, 1329, 696, 1319, 559, 820, 2304, 2799, 3045,
	469, 3145, 474, 474, 2366, 3147, 1585, 2815, 474, 490,
	499, 2978, 2971, 499, 2850, 1394, 1587, 2657, 2618, 2943,
	2985, 2981, 2032, 1721, 2463, 1718, 2919, 2464, 2646, 2462,
	2804, 2446, 2348, 2386, 2701, 2690, 176, 2831, 2124, 2456,
	2765, 2683, 1686, 1819, 1694, 2616, 1788, 2753, 2485, 2736,
	2459, 2323, 2627, 2035, 504, 2630, 2625, 510, 2689, 2001,
	2619, 925, 1936, 2333, 548, 1736, 2663, 2108, 1928, 1919,
	2522, 1237, 1797, 554, 1815, 1796, 1531, 1387, 1789, 2172,
	2505, 1762, 1714, 2560, 1689, 1918, 2125, 1315, 1938, 826,
	751, 1157, 2113, 1814, 2312, 2307, 473, 473, 1328, 55,
	2033, 1624, 481, 1614, 1136, 2368, 2340, 549, 187, 8,
	6, 1687, 186, 7, 1562, 459, 1539, 2000, 556, 2235,
	1193, 877, 1816, 1385, 1323, 1320, 2189, 2152, 1848, 558,
	1282, 1253, 814, 1934, 1982, 1223, 2621, 1390, 2028, 1826,
	1597, 191, 1425, 191, 2265, 868, 869, 547, 2620, 1308,
	1596, 1441, 862, 863, 116, 2266, 35, 867, 783, 1376,
	566, 824, 1173, 1289, 26, 1792, 15, 942, 1795, 1752,
	1384, 468, 458, 1192, 813, 2132, 1159, 1222, 1778, 1561,
	693, 483, 1448, 13, 750, 1220, 36, 23, 14, 1447,
	32, 16, 513, 177, 10, 549, 728, 1185, 512, 486,
	1281, 1103, 167, 732, 498, 1169, 1129, 695, 748, 1823,
	3087, 173, 770, 865, 2818, 1065, 2291, 2291, 1833, 2224,
	2291, 2760, 2178, 495, 2176, 491, 2175, 864, 2173, 866,
	1544, 1296, 1292, 860, 861, 861, 175, 1120, 470, 1205,
	861, 2917, 493, 1294, 2518, 496, 2516, 494, 1767, 492,
	2062, 3051, 1000, 1001, 1002, 999, 3046, 2920, 479, 2766,
	2853, 1000, 1001, 1002, 999, 1535, 3149, 502, 830, 1791,
	694, 1059, 2070, 963, 704, 3104, 174, 174, 51, 163,
	138, 2210, 174, 2953, 8, 174, 859, 3217, 7, 174,
	51, 163, 138, 174, 1343, 174, 2303, 2305, 2865, 2218,
	1336, 2944, 174, 1993, 174, 1121, 174, 51, 163, 138,
	2942, 2856, 3181, 1820, 1263, 1262, 1261, 833, 831, 3105,
	832, 2851, 1133, 827, 1340, 829, 2873, 2874, 1557, 508,
	1333, 509, 2852, 115, 2584, 1831, 1482, 849, 1986, 1149,
	2150, 2537, 997, 2530, 2491, 1342, 168, 1731, 802, 2151,
	115, 1335, 3076, 684, 168, 683, 685, 686, 168, 687,
	688, 697, 168, 1698, 168, 971, 1122, 1201, 973, 2857,
	1202, 168, 2190, 168, 2138, 168, 792, 2137, 1699, 1700,
	2139, 1361, 705, 2492, 2493, 1545, 1546, 2309, 1000, 1001,
	1002, 999, 1224, 990, 1226, 978, 974, 2310, 979, 1188,
	1190, 1191, 1610, 1187, 1190, 1191, 3238, 3239, 1393, 995,
	823, 1181, 2938, 1377, 822, 3152, 1381, 3152, 3212, 3151,
	3211, 3150, 3210, 474, 3151, 3150, 981, 1906, 2769, 3256,
	3257, 3053, 3137, 474, 935, 3056, 3057, 3058, 3059, 2523,
	1380, 3137, 3140, 3049, 3216, 2308, 2205, 2524, 2769, 2525,
	936, 499, 499, 1835, 474, 1397, 1204, 3155, 2778, 2805,
	945, 2812, 2872, 1827, 2036, 2631, 3270, 1468, 1705, 3268,
	1372, 967, 2402, 930, 932, 739, 1295, 1293, 844, 839,
	834, 838, 842, 1715, 2958, 2639, 1775, 2102, 934, 2861,
	798, 796, 1980, 797, 2294, 3214, 969, 1302, 1301, 993,
	994, 976, 2215, 2641, 945, 2875, 847, 2548, 972, 975,
	837, 2858, 2862, 2860, 2859, 1003, 992, 927, 2068, 1382,
	1709, 137, 966, 172, 1032, 3219, 3220, 933, 2315, 825,
	2918, 2517, 1041, 2450, 968, 3082, 2105, 929, 2104, 2550,
	2636, 2637, 1379, 161, 2937, 3085, 871, 2955, 954, 2867,
	2868, 2939, 2635, 1033, 3237, 1048, 2638, 2109, 3263, 935,
	3068, 845, 2655, 3069, 977, 958, 1396, 1395, 848, 3109,
	931, 2702, 2703, 543, 3101, 2664, 545, 2341, 3063, 803,
	2887, 544, 1832, 3173, 3168, 835, 501, 983, 500, 830,
	984, 2875, 1729, 1730, 2455, 2880, 799, 3163, 988, 989,
	1135, 1134, 1214, 2854, 1068, 1988, 1179, 3348, 846, 2866,
	970, 3364, 1203, 1069, 3296, 3267, 3071, 3228, 986, 3303,
	1119, 1403, 1406, 1407, 1464, 1837, 1839, 1840, 3272, 1168,
	1461, 2890, 1404, 3154, 1463, 1460, 1462, 1466, 1467, 3011,
	980, 3328, 1465, 2079, 827, 3000, 829, 3070, 836, 1821,
	947, 946, 495, 495, 491, 491, 2706, 1821, 1378, 801,
	830, 2078, 3006, 3086, 2633, 2930, 1127, 469, 1130, 2781,
	2554, 493, 493, 2290, 496, 496, 494, 494, 492, 492,
	1035, 1036, 1037, 1038, 949, 2321, 1100, 938, 939, 1821,
	2051, 497, 1233, 982, 947, 946, 2031, 2053, 955, 940,
	751, 3224, 3225, 497, 3228, 951, 952, 861, 861, 3103,
	861, 1232, 2154, 861, 3335, 827, 956, 829, 861, 861,
	2327, 2328, 2329, 2330, 843, 3110, 3218, 1166, 1039, 1165,
	3102, 987, 3308, 1822, 2174, 800, 1164, 1834, 2871, 3365,
	1189, 2099, 2100, 1297, 3371, 2305, 1183, 1182, 3359, 474,
	1186, 1216, 52, 3094, 2052, 926, 985, 459, 459, 2601,
	2832, 840, 1849, 841, 52, 2031, 459, 459, 2632, 3077,
	1248, 1248, 694, 474, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1471, 1472, 1473, 1474, 1475,
	1476, 1469, 1470, 2954, 139, 139, 499, 1130, 469, 1250,
	139, 1285, 1285, 139, 2870, 1255, 2915, 139, 2642, 2219,
	1716, 139, 191, 139, 1284, 1284, 169, 170, 2048, 171,
	139, 459, 139, 1180, 139, 1137, 1138, 1139, 1140, 1141,
	2314, 1143, 1077, 1078, 1190, 1191, 1148, 1190, 1191, 957,
	3083, 825, 2959, 1212, 2551, 2403, 2705, 2404, 2405, 508,
	1706, 3134, 1373, 3273, 2502, 2503, 2698, 2634, 1221, 1405,
	2211, 3064, 2142, 1838, 2038, 3065, 2066, 1254, 3309, 2702,
	2703, 1303, 1327, 741, 1330, 742, 3358, 1824, 1142, 1338,
	2038, 2041, 1170, 1174, 1174, 1174, 2318, 2319, 1128, 1242,
	1243, 3002, 3007, 3008, 1105, 3001, 2041, 1246, 1246, 1359,
	2553, 2317, 1708, 2487, 2489, 1147, 1170, 1170, 963, 1107,
	1146, 1344, 1145, 1248, 503, 1248, 935, 2611, 695, 1836,
	3370, 3013, 1132, 2699, 2400, 1154, 1175, 1176, 2293, 2430,
	1162, 745, 746, 747, 1922, 1167, 2562, 2561, 1125, 1228,
	1230, 1215, 1177, 3021, 3022, 3023, 3025, 3024, 1240, 1241,
	1195, 1196, 1548, 1198, 1199, 1200, 2421, 2422, 1156, 1924,
	1923, 1549, 1398, 1399, 1400, 1401, 1402, 1123, 1124, 1921,
	1392, 793, 743, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1194, 1317, 1318, 1197, 1436,
	1437, 1206, 1207, 962, 1547, 707, 1446, 2091, 3306, 3307,
	2037, 1231, 708, 1298, 2986, 2039, 1443, 1444, 1445, 1881,
	1495, 2042, 1880, 3377, 1479, 2653, 2037, 2031, 2036, 1277,
	2034, 2039, 1489, 2047, 3311, 830, 2042, 2045, 1306, 830,
	1309, 1310, 3376, 479, 1504, 2669, 1269, 1256, 1931, 1389,
	998, 1311, 1312, 1322, 1325, 2733, 1326, 1485, 1486, 1487,
	1275, 963, 1286, 1276, 795, 1287, 1131, 794, 1588, 2040,
	1501, 1932, 1933, 1502, 2192, 2729, 1533, 3367, 2488, 3349,
	1537, 1588, 2796, 1540, 1374, 2040, 1511, 1512, 2420, 1408,
	2122, 1529, 3344, 1370, 998, 998, 2780, 1559, 1909, 1248,
	1564, 1565, 2210, 1567, 1568, 474, 1354, 1355, 2708, 474,
	1386, 3338, 1248, 2123, 998, 495, 751, 491, 3337, 1586,
	2347, 2299, 1334, 2296, 1248, 1367, 1341, 1364, 3315, 793,
	1216, 695, 2700, 740, 493, 490, 1532, 496, 3289, 494,
	1346, 492, 1494, 1345, 1363, 2346, 804, 1368, 1366, 3368,
	1350, 1829, 1365, 2654, 1609, 1362, 1434, 1435, 1477, 1478,
	961, 1481, 1615, 1615, 3345, 1216, 1388, 1216, 1216, 1496,
	1383, 474, 474, 2065, 1559, 1559, 1558, 1613, 1248, 1683,
	1684, 1696, 1503, 1829, 1505, 2431, 2433, 2434, 2435, 2432,
	1829, 852, 857, 858, 2197, 459, 1427, 1248, 1358, 1569,
	1829, 2154, 698, 1573, 1602, 2123, 1357, 1860, 3246, 1566,
	3290, 1533, 795, 3240, 2123, 794, 1533, 1533, 2733, 1608,
	711, 3191, 1611, 1612, 1820, 474, 1559, 1248, 3128, 1741,
	3127, 474, 474, 474, 1746, 1747, 1000, 1001, 1002, 999,
	1750, 1751, 1697, 3123, 1634, 1757, 1554, 698, 1555, 1556,
	1984, 1480, 191, 1678, 1679, 191, 191, 3122, 191, 3121,
	1570, 1571, 1572, 1755, 1765, 1621, 1622, 1768, 3120, 2026,
	1771, 710, 1506, 1773, 3068, 713, 712, 3069, 1724, 1725,
	3247, 1914, 1859, 2347, 3089, 3090, 1563, 1885, 1913, 1589,
	1590, 2948, 1530, 3090, 1811, 1170, 1495, 1495, 1799, 1578,
	3129, 1710, 2005, 1495, 1495, 1738, 2894, 2824, 1806, 1603,
	1702, 1591, 1704, 1375, 2811, 3090, 1616, 1536, 1617, 1737,
	1174, 1717, 1722, 1723, 2717, 1737, 1737, 1737, 2482, 3090,
	3071, 3090, 1586, 2272, 960, 1740, 1248, 1818, 1766, 1171,
	3090, 1769, 1770, 1727, 1772, 998, 1743, 1744, 1745, 1582,
	1583, 2264, 1594, 1595, 2225, 1618, 3090, 1598, 1155, 1600,
	1601, 3070, 1607, 2949, 1983, 1563, 1599, 1619, 1620, 1604,
	1605, 1439, 1606, 1234, 1000, 1001, 1002, 999, 2154, 2825,
	1593, 854, 855, 856, 1000, 1001, 1002, 999, 1812, 2208,
	1101, 2201, 3332, 2199, 3291, 1015, 2718, 1800, 2843, 3034,
	2123, 1753, 1846, 1847, 2892, 998, 1685, 1682, 2194, 2187,
	961, 2185, 2183, 1852, 1386, 1701, 1856, 1703, 1794, 1711,
	1912, 2670, 1726, 998, 2507, 1794, 998, 1507, 1508, 1509,
	2582, 1842, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 2349, 830, 2213, 1739, 2181, 2004,
	3324, 963, 830, 1910, 2212, 1172, 1867, 1891, 2204, 580,
	590, 2005, 1763, 2195, 1874, 2200, 1761, 1732, 581, 1890,
	589, 582, 586, 585, 583, 584, 928, 1879, 2021, 1870,
	2195, 2188, 1887, 2186, 2182, 1869, 1876, 1892, 1893, 1894,
	1861, 1868, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	827, 1828, 829, 1780, 1351, 2134, 1810, 827, 1760, 829,
	1886, 548, 1888, 935, 1974, 474, 474, 474, 1801, 1895,
	2182, 2005, 1803, 587, 3169, 1909, 495, 1553, 491, 998,
	1809, 474, 474, 474, 1347, 1045, 948, 928, 830, 923,
	2674, 998, 921, 2002, 1813, 493, 1484, 1483, 496, 998,
	494, 998, 492, 2009, 1216, 588, 1804, 998, 1805, 1844,
	1845, 1808, 2006, 998, 2014, 1484, 1483, 1939, 3170, 2987,
	2835, 2833, 2545, 1829, 1850, 3064, 1352, 928, 1216, 3146,
	1841, 2665, 1843, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1015, 1236, 2058, 827, 1160, 829, 709, 2173, 1161, 1171,
	1427, 1238, 1854, 1018, 1019, 1020, 1021, 1022, 1015, 1975,
	1976, 1977, 1239, 2988, 2836, 2834, 3312, 1433, 2063, 3088,
	3060, 2011, 2012, 3004, 3003, 1994, 1995, 1996, 2817, 2734,
	2727, 2015, 2016, 1430, 1432, 1429, 2722, 1431, 2719, 2648,
	2452, 2064, 1023, 1024, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1015, 2127, 2127, 1696, 2127, 1517, 2666, 2013, 507,
	1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1015, 1978, 459, 459, 1510, 1533, 2325, 1533, 1883,
	2292, 935, 2223, 1764, 2198, 2144, 1151, 1248, 474, 1150,
	1235, 937, 1905, 1907, 1908, 2758, 1533, 1533, 2232, 2167,
	1442, 2667, 1855, 474, 1442, 2509, 592, 117, 1925, 935,
	469, 1560, 117, 1985, 1285, 1172, 1696, 1002, 999, 2162,
	714, 2164, 3209, 999, 2025, 191, 1068, 1284, 1000, 1001,
	1002, 999, 1290, 3016, 1764, 1069, 3015, 2526, 2140, 2761,
	2141, 2129, 2392, 2133, 1174, 2391, 2131, 2374, 3327, 1000,
	1001, 1002, 999, 2372, 2010, 2961, 2962, 2995, 2145, 2146,
	2177, 2956, 480, 1939, 1047, 117, 1499, 3353, 2022, 3341,
	3297, 2206, 2030, 2324, 1818, 2043, 2044, 1046, 2049, 2159,
	1500, 1248, 1254, 1248, 2029, 1248, 2020, 3292, 2166, 2809,
	935, 2018, 2442, 2017, 2019, 2440, 2438, 1737, 1000, 1001,
	1002, 999, 3230, 830, 2816, 3200, 3171, 2759, 2161, 3326,
	3113, 2168, 3106, 3047, 2148, 2990, 2989, 2957, 2156, 2837,
	2808, 1248, 2251, 1000, 1001, 1002, 999, 2106, 2427, 2233,
	2640, 2541, 2234, 1000, 1001, 1002, 999, 2258, 2252, 2253,
	2521, 1290, 1248, 2135, 2220, 2810, 2255, 2256, 2441, 2250,
	2520, 2439, 2437, 2260, 2425, 1228, 1230, 2424, 827, 2261,
	829, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1004, 2149,
	2259, 1000, 1001, 1002, 999, 828, 1000, 1001, 1002, 999,
	2169, 2257, 117, 1533, 2426, 1291, 2285, 2286, 1540, 2423,
	2262, 935, 2157, 2415, 2160, 2409, 2408, 117, 2407, 117,
	2069, 2406, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 1783,
	2216, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 1782, 2092, 2093, 2094, 2095, 2096, 2217, 2097,
	2222, 2158, 1781, 1777, 1776, 2230, 1735, 1734, 1733, 474,
	2575, 1348, 2203, 2283, 1248, 2297, 2209, 2322, 1246, 1118,
	2457, 2207, 2626, 1559, 2214, 3262, 2236, 2236, 2925, 3258,
	2345, 3213, 1916, 1917, 2242, 3157, 2351, 2965, 1386, 1246,
	3143, 3132, 3117, 1000, 1001, 1002, 999, 543, 2229, 3112,
	545, 3111, 2360, 2226, 2227, 544, 3084, 1872, 2239, 935,
	3048, 2241, 920, 916, 917, 918, 919, 2371, 2247, 2574,
	2246, 2245, 2243, 2997, 935, 935, 935, 1615, 2974, 2960,
	935, 2923, 2382, 2383, 2384, 935, 2921, 2388, 2389, 2901,
	2390, 2898, 2896, 2334, 2447, 1000, 1001, 1002, 999, 2807,
	2806, 2803, 2335, 2306, 1000, 1001, 1002, 999, 2300, 2786,
	2354, 2287, 2728, 2127, 2356, 2267, 2268, 2724, 2284, 2715,
	2714, 2273, 2649, 1871, 2343, 1317, 1318, 2443, 1634, 2377,
	2378, 2608, 3231, 2607, 2381, 459, 2244, 3161, 2606, 2387,
	1559, 935, 1696, 1696, 1696, 1696, 2352, 2301, 2302, 1000,
	1001, 1002, 999, 935, 1696, 1920, 2555, 2127, 1000, 1001,
	1002, 999, 2932, 1000, 1001, 1002, 999, 2342, 2369, 2365,
	2552, 1310, 2369, 1248, 2519, 2496, 1322, 1325, 2320, 1326,
	2436, 1311, 1312, 2428, 2376, 474, 474, 2418, 1000, 1001,
	1002, 999, 8, 2362, 2350, 2465, 7, 2344, 3342, 2416,
	191, 1563, 2412, 3178, 2411, 191, 2410, 2465, 2364, 1911,
	2361, 640, 639, 2367, 1785, 2355, 1779, 2513, 1543, 2515,
	2370, 1542, 1349, 1076, 2373, 1072, 1495, 2478, 1495, 1071,
	2380, 2536, 924, 706, 3174, 2540, 3061, 1533, 2952, 2830,
	2829, 1248, 1533, 2828, 2547, 1000, 1001, 1002, 999, 2417,
	2795, 1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1015, 2785, 117, 117, 828, 2353, 2773, 2248,
	2249, 2764, 2763, 2752, 2359, 2357, 2358, 2448, 2558, 2499,
	2500, 2453, 699, 700, 701, 702, 2510, 698, 2479, 2751,
	2675, 2514, 2580, 2481, 2477, 2573, 2480, 1532, 2565, 1864,
	695, 2579, 2535, 2466, 2467, 2468, 2469, 2497, 2564, 2559,
	2504, 2311, 2298, 2490, 2295, 2184, 2494, 2451, 2931, 2180,
	2568, 2179, 2570, 2533, 1896, 1889, 1884, 2508, 1882, 2539,
	935, 2512, 2511, 2884, 935, 1878, 174, 1031, 163, 138,
	1877, 2549, 2629, 1875, 1000, 1001, 1002, 999, 2532, 2544,
	2529, 2527, 2644, 2534, 1866, 1863, 1862, 474, 1259, 1000,
	1001, 1002, 999, 1858, 1784, 2543, 1528, 2658, 935, 935,
	935, 1527, 1526, 1498, 830, 1497, 1488, 1696, 2002, 1260,
	2673, 830, 2557, 174, 1939, 1258, 2677, 3366, 3190, 2783,
	2556, 1000, 1001, 1002, 999, 2398, 2399, 2578, 3323, 2688,
	3317, 2691, 2563, 2691, 2691, 168, 3304, 3301, 935, 2413,
	2414, 2652, 2571, 2572, 2569, 1000, 1001, 1002, 999, 2695,
	2577, 3299, 2710, 1000, 1001, 1002, 999, 3199, 1066, 1248,
	1248, 3130, 2707, 2449, 2334, 2602, 3119, 1000, 1001, 1002,
	999, 2605, 2612, 3114, 2709, 2609, 1000, 1001, 1002, 999,
	2676, 2650, 168, 1305, 2678, 2679, 3029, 2711, 2712, 3014,
	3010, 2531, 2909, 2660, 2661, 2662, 2610, 2907, 2538, 2671,
	2645, 2882, 2566, 2567, 1108, 474, 2651, 2881, 2878, 2877,
	2629, 2819, 2624, 2623, 2687, 2668, 1316, 2672, 2585, 2586,
	1307, 1559, 1559, 2576, 2587, 2588, 2589, 2590, 2696, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 1158, 2681, 2444,
	2375, 2692, 2693, 2281, 2339, 2338, 2337, 2336, 2697, 1000,
	1001, 1002, 999, 2280, 1321, 1324, 1210, 1211, 1313, 1213,
	2282, 1217, 1218, 1219, 2193, 2686, 2143, 2098, 2251, 1000,
	1001, 1002, 999, 830, 2003, 1428, 168, 2762, 1748, 1000,
	1001, 1002, 999, 1552, 1551, 1371, 1246, 1246, 1337, 2694,
	2732, 1314, 1102, 1099, 1264, 1265, 1266, 1267, 1268, 1737,
	1270, 1271, 1272, 1273, 1274, 2744, 1098, 1097, 1279, 1280,
	1096, 1095, 2721, 2279, 474, 2720, 2726, 3321, 1094, 2725,
	2716, 2730, 2731, 1093, 1092, 1091, 1090, 1089, 2741, 1088,
	1857, 1087, 1257, 2723, 3278, 2278, 1086, 480, 1085, 1000,
	1001, 1002, 999, 2745, 1084, 1083, 2680, 1082, 1081, 2782,
	1080, 2748, 2749, 2750, 1079, 1075, 2784, 1074, 1073, 1070,
	2682, 1000, 1001, 1002, 999, 1063, 2757, 1062, 117, 1060,
	1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1015, 1059, 1058, 2800, 935, 2277, 2774, 1057, 1056,
	1055, 1054, 1053, 1052, 2775, 2276, 1051, 1050, 2777, 2275,
	1049, 1044, 1043, 2787, 1000, 1001, 1002, 999, 2779, 1042,
	2776, 2274, 1000, 1001, 1002, 999, 2823, 965, 922, 2792,
	3188, 1000, 1001, 1002, 999, 1000, 1001, 1002, 999, 2127,
	1696, 2840, 117, 3186, 2271, 3184, 117, 1000, 1001, 1002,
	999, 2737, 2738, 2879, 2270, 2008, 935, 117, 1990, 2269,
	953, 3276, 2743, 2789, 3236, 2688, 2263, 117, 2740, 935,
	1000, 1001, 1002, 999, 2326, 2155, 1787, 964, 2742, 935,
	1000, 1001, 1002, 999, 1248, 1000, 1001, 1002, 999, 2471,
	2802, 2474, 1000, 1001, 1002, 999, 2475, 2472, 2470, 2911,
	1559, 3352, 2473, 2202, 935, 2814, 2912, 1533, 2841, 2196,
	2847, 1152, 2893, 2476, 2844, 2119, 2120, 2845, 1533, 2647,
	2791, 2906, 2289, 2886, 2908, 2067, 2842, 2838, 2869, 2876,
	191, 2889, 2839, 2387, 830, 830, 1670, 2254, 2913, 2846,
	1580, 1581, 830, 935, 2613, 471, 2903, 1575, 1576, 1577,
	2883, 2684, 102, 2685, 2888, 2910, 2231, 1299, 2465, 2885,
	1438, 2191, 2891, 1000, 1001, 1002, 999, 935, 2914, 2899,
	2895, 54, 2897, 2221, 53, 2900, 2603, 2604, 2905, 2902,
	1104, 2904, 1000, 1001, 1002, 999, 1000, 1001, 1002, 999,
	935, 1248, 1248, 1916, 1917, 1981, 2658, 2465, 475, 1331,
	2980, 2940, 2980, 2115, 2118, 2119, 2120, 2116, 476, 2117,
	2121, 1246, 1749, 2946, 959, 3153, 2916, 2926, 2622, 2970,
	2615, 2793, 2794, 2614, 2363, 3249, 2024, 477, 1248, 2797,
	478, 2394, 1998, 2996, 2945, 2947, 2941, 1584, 2395, 2396,
	2397, 1550, 2976, 2977, 2968, 3116, 474, 2713, 935, 935,
	1484, 1483, 935, 935, 1116, 1117, 2107, 2110, 991, 1114,
	1115, 2103, 2984, 2975, 1681, 2983, 2747, 3032, 1112, 1113,
	1110, 1111, 3031, 3026, 1209, 2991, 2992, 1208, 1586, 2153,
	3039, 3018, 3019, 1807, 2994, 3027, 3028, 2993, 3043, 3044,
	2998, 2869, 2876, 2842, 2115, 2118, 2119, 2120, 2116, 1163,
	2117, 2121, 2968, 2968, 3036, 1144, 2968, 2968, 1106, 3318,
	3222, 3206, 3204, 3074, 3164, 3142, 3141, 3139, 1246, 2972,
	2800, 3131, 3042, 2820, 2821, 2822, 3041, 2922, 3035, 2826,
	2827, 3067, 2788, 2771, 3037, 2770, 2755, 1695, 2054, 1742,
	3017, 1109, 2754, 2506, 1588, 3280, 3279, 2228, 2542, 1992,
	2933, 3096, 1865, 3092, 3279, 2972, 950, 3280, 3062, 3012,
	2772, 3072, 3066, 2498, 698, 1178, 3079, 3080, 3078, 62,
	3081, 1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1015, 3091, 699, 700, 701, 702, 2, 698,
	178, 3, 1225, 2136, 3099, 3098, 1728, 1252, 3097, 1,
	935, 1541, 703, 2483, 1248, 3107, 2484, 2746, 117, 2486,
	1825, 117, 117, 2454, 117, 2101, 1979, 2643, 1153, 744,
	3319, 3115, 1490, 1356, 851, 944, 1353, 943, 941, 1440,
	594, 1790, 3125, 3124, 2445, 2419, 3038, 3248, 3286, 3198,
	3251, 1369, 1468, 578, 3133, 3052, 3202, 3054, 2928, 1830,
	996, 2528, 828, 766, 2968, 1048, 631, 605, 3148, 828,
	3136, 935, 3138, 1061, 1339, 1332, 2583, 3165, 117, 853,
	604, 2950, 2951, 1014, 1013, 1023, 1024, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1015, 2813, 2316, 2501, 3160, 3100,
	935, 850, 3159, 3156, 767, 1774, 3050, 1248, 3175, 1300,
	3193, 3196, 3167, 1304, 2023, 3108, 3362, 3351, 3172, 3333,
	3316, 3227, 3347, 3266, 3302, 2968, 3183, 3185, 3187, 3189,
	3176, 2936, 3197, 3182, 2934, 3192, 2935, 3295, 3223, 514,
	3205, 1246, 3207, 3208, 3203, 3201, 1707, 1248, 457, 811,
	3030, 1468, 1786, 515, 2968, 1031, 2007, 3215, 3232, 3118,
	725, 1989, 726, 719, 2332, 2331, 1409, 1005, 3221, 1426,
	2599, 2600, 1040, 3033, 553, 3229, 1853, 2313, 2864, 2495,
	3255, 61, 60, 59, 58, 1756, 199, 3241, 596, 3242,
	198, 3243, 3254, 3244, 2963, 3245, 3195, 3253, 576, 575,
	574, 573, 572, 935, 2114, 2112, 2111, 3259, 1691, 1464,
	1690, 3260, 1754, 2656, 3148, 1461, 2385, 2379, 2050, 1463,
	1460, 1462, 1466, 1467, 3269, 3271, 2055, 1465, 3285, 3274,
	1623, 3233, 3277, 3275, 1246, 3179, 3180, 3009, 2429, 1574,
	3288, 2046, 1640, 2401, 3293, 1637, 935, 3281, 3282, 3283,
	3284, 1636, 2393, 3294, 3005, 2999, 1667, 3264, 3298, 2798,
	3300, 2979, 2848, 2849, 2855, 1997, 876, 872, 874, 875,
	873, 3255, 3314, 2240, 1246, 2027, 3310, 2617, 1930, 1929,
	935, 1927, 935, 3254, 1926, 3313, 1126, 3320, 3073, 3322,
	2790, 1937, 1935, 2739, 3325, 2735, 1798, 1538, 2288, 1692,
	1392, 1688, 3288, 3329, 935, 1991, 3331, 3336, 1464, 3075,
	1579, 3340, 718, 3343, 1461, 3126, 3346, 1987, 1463, 1460,
	1462, 1466, 1467, 99, 152, 48, 1465, 89, 88, 98,
	150, 3350, 47, 3357, 1392, 183, 1392, 3361, 182, 3360,
	185, 184, 181, 2170, 2171, 3369, 180, 1288, 179, 2982,
	692, 3357, 3374, 3373, 38, 37, 3361, 33, 1392, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1471, 1472, 1473, 1474, 1475, 1476, 1469, 1470, 3166, 2581,
	1026, 12, 1030, 11, 34, 21, 22, 20, 1360, 3372,
	19, 25, 31, 30, 3375, 110, 109, 3177, 1027, 1029,
	1025, 29, 1028, 1014, 1013, 1023, 1024, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1015, 108, 107, 106, 105, 104,
	2130, 1851, 28, 18, 42, 41, 40, 9, 97, 95,
	27, 96, 1014, 1013, 1023, 1024, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1015, 93, 1014, 1013, 1023, 1024, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1015, 1014, 1013, 1023,
	1024, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 1471,
	1472, 1473, 1474, 1475, 1476, 1469, 1470, 94, 92, 90,
	73, 72, 1695, 71, 86, 85, 84, 83, 82, 81,
	79, 117, 80, 765, 70, 69, 68, 3261, 1013, 1023,
	1024, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1015, 67,
	66, 91, 348, 77, 87, 78, 76, 75, 74, 65,
	64, 63, 136, 135, 134, 133, 132, 130, 131, 291,
	129, 128, 318, 127, 126, 125, 124, 43, 44, 45,
	46, 146, 145, 147, 149, 452, 151, 453, 148, 153,
	143, 141, 144, 379, 332, 142, 140, 56, 100, 17,
	24, 4, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1067, 0, 0, 196, 0, 0, 580, 590, 0,
	0, 266, 197, 454, 0, 455, 581, 0, 589, 582,
	586, 585, 583, 584, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 587, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 588, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	117, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 1695, 1695,
	1695, 1695, 0, 0, 0, 0, 0, 342, 422, 0,
	1695, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 117, 0, 415, 0,
	0, 117, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 0, 0, 247, 242, 243, 244,
	245, 0, 0, 1695, 419, 420, 421, 442, 405, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 894,
	117, 0, 467, 456, 0, 0, 880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 906, 908, 910,
	912, 913, 915, 0, 920, 916, 917, 918, 919, 0,
	897, 898, 899, 900, 878, 879, 903, 0, 881, 0,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 893,
	895, 891, 892, 901, 0, 0, 0, 0, 0, 0,
	0, 905, 907, 909, 911, 914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 880,
	0, 0, 0, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 902,
	906, 908, 910, 912, 913, 915, 0, 920, 916, 917,
	918, 919, 0, 897, 898, 899, 900, 878, 879, 903,
	0, 881, 0, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 893, 895, 891, 892, 901, 0, 0, 0,
	0, 0, 612, 0, 905, 907, 909, 911, 914, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 2237, 2238, 0, 0, 0, 0, 0, 0, 0,
	560, 117, 117, 593, 640, 639, 580, 590, 0, 117,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 904, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 904, 0, 0,
	0, 432, 0, 0, 0, 1492, 1491, 1493, 423, 298,
	248, 249, 466, 659, 346, 0, 0, 0, 0, 673,
	654, 656, 657, 660, 664, 665, 666, 667, 668, 670,
	672, 676, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 614, 0, 0, 336, 337, 338, 339,
	662, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 684, 658,
	683, 685, 686, 682, 687, 688, 669, 571, 0, 618,
	680, 679, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 647, 624, 625, 626, 569, 627,
	621, 622, 623, 648, 616, 644, 645, 595, 619, 628,
	643, 629, 646, 649, 650, 689, 690, 635, 691, 632,
	651, 642, 641, 630, 617, 652, 653, 602, 597, 633,
	634, 620, 636, 637, 638, 570, 598, 599, 600, 601,
	0, 612, 0, 419, 420, 421, 442, 405, 0, 461,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 567, 0, 0, 0, 291, 1534, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 453, 0, 0, 603, 0,
	0, 379, 332, 0, 0, 0, 0, 663, 671, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 560,
	0, 0, 593, 640, 639, 580, 590, 0, 0, 266,
	197, 454, 0, 455, 581, 0, 589, 582, 586, 585,
	583, 584, 0, 655, 0, 0, 0, 0, 0, 0,
	551, 564, 0, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 562, 0,
	0, 0, 0, 613, 0, 563, 0, 0, 1720, 587,
	591, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 588, 611, 615, 285, 677, 609, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 678, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 411, 0, 0, 661,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	610, 0, 369, 350, 674, 552, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 659, 346, 0, 0, 0, 0, 673, 654,
	656, 657, 660, 664, 665, 666, 667, 668, 670, 672,
	676, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 614, 0, 0, 336, 337, 338, 339, 662,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 684, 658, 683,
	685, 686, 682, 687, 688, 669, 571, 0, 618, 680,
	679, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 647, 624, 625, 626, 569, 627, 621,
	622, 623, 648, 616, 644, 645, 595, 619, 628, 643,
	629, 646, 649, 650, 689, 690, 635, 691, 632, 651,
	642, 641, 630, 617, 652, 653, 602, 597, 633, 634,
	620, 636, 637, 638, 570, 598, 599, 600, 601, 174,
	612, 0, 419, 420, 421, 442, 405, 0, 461, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 567, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 1034, 0, 0,
	379, 332, 0, 0, 0, 0, 663, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 0, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 139, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 567, 0, 0, 0, 291, 3330, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 551, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 552, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	659, 346, 0, 0, 0, 0, 673, 654, 656, 657,
	660, 664, 665, 666, 667, 668, 670, 672, 676, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	614, 0, 0, 336, 337, 338, 339, 662, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 684, 658, 683, 685, 686,
	682, 687, 688, 669, 571, 0, 618, 680, 679, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 647, 624, 625, 626, 569, 627, 621, 622, 623,
	648, 616, 644, 645, 595, 619, 628, 643, 629, 646,
	649, 650, 689, 690, 635, 691, 632, 651, 642, 641,
	630, 617, 652, 653, 602, 597, 633, 634, 620, 636,
	637, 638, 570, 598, 599, 600, 601, 0, 612, 0,
	419, 420, 421, 442, 405, 0, 461, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	567, 0, 0, 0, 291, 1534, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 453, 0, 0, 603, 0, 0, 379, 332,
	0, 0, 0, 0, 663, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 593,
	640, 639, 580, 590, 0, 0, 266, 197, 454, 0,
	455, 581, 0, 589, 582, 586, 585, 583, 584, 0,
	655, 0, 0, 0, 0, 0, 0, 551, 564, 0,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 561, 562, 0, 0, 0, 0,
	613, 0, 563, 0, 0, 608, 587, 591, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 588, 611,
	615, 285, 677, 609, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 678,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 0, 0, 411, 0, 0, 661, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 610, 0, 369,
	350, 674, 552, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 659,
	346, 0, 0, 0, 0, 673, 654, 656, 657, 660,
	664, 665, 666, 667, 668, 670, 672, 676, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 675,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 614,
	0, 0, 336, 337, 338, 339, 662, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 684, 658, 683, 685, 686, 682,
	687, 688, 669, 571, 0, 618, 680, 679, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	647, 624, 625, 626, 569, 627, 621, 622, 623, 648,
	616, 644, 645, 595, 619, 628, 643, 629, 646, 649,
	650, 689, 690, 635, 691, 632, 651, 642, 641, 630,
	617, 652, 653, 602, 597, 633, 634, 620, 636, 637,
	638, 570, 598, 599, 600, 601, 0, 612, 0, 419,
	420, 421, 442, 405, 0, 461, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 567,
	0, 0, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 453, 0, 0, 603, 0, 0, 379, 332, 0,
	0, 0, 0, 663, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 593, 640,
	639, 580, 590, 0, 0, 266, 197, 454, 0, 455,
	581, 0, 589, 582, 586, 585, 583, 584, 0, 655,
	0, 0, 0, 0, 0, 0, 551, 564, 0, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 562, 1283, 0, 0, 0, 613,
	0, 563, 0, 0, 608, 587, 591, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 588, 611, 615,
	285, 677, 609, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 678, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 0,
	0, 0, 411, 0, 0, 661, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 610, 0, 369, 350,
	674, 552, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 659, 346,
	0, 0, 0, 0, 673, 654, 656, 657, 660, 664,
	665, 666, 667, 668, 670, 672, 676, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 675, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 614, 0,
	0, 336, 337, 338, 339, 662, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 684, 658, 683, 685, 686, 682, 687,
	688, 669, 571, 0, 618, 680, 679, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 647,
	624, 625, 626, 569, 627, 621, 622, 623, 648, 616,
	644, 645, 595, 619, 628, 643, 629, 646, 649, 650,
	689, 690, 635, 691, 632, 651, 642, 641, 630, 617,
	652, 653, 602, 597, 633, 634, 620, 636, 637, 638,
	570, 598, 599, 600, 601, 0, 0, 0, 419, 420,
	421, 442, 405, 612, 461, 0, 1873, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 467, 456, 0, 0,
	0, 0, 0, 0, 0, 567, 0, 0, 0, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 453, 0, 0,
	603, 0, 0, 379, 332, 0, 0, 0, 0, 663,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 593, 640, 639, 580, 590, 0,
	0, 266, 197, 454, 0, 455, 581, 0, 589, 582,
	586, 585, 583, 584, 0, 655, 0, 0, 0, 0,
	0, 0, 551, 564, 0, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	562, 0, 0, 0, 0, 613, 0, 563, 0, 0,
	608, 587, 591, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 588, 611, 615, 285, 677, 609, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 678, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 0, 0, 0, 411, 0,
	0, 661, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 610, 0, 369, 350, 674, 552, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 659, 346, 0, 0, 0, 0,
	673, 654, 656, 657, 660, 664, 665, 666, 667, 668,
	670, 672, 676, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 614, 0, 0, 336, 337, 338,
	339, 662, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 684,
	658, 683, 685, 686, 682, 687, 688, 669, 571, 0,
	618, 680, 679, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 647, 624, 625, 626, 569,
	627, 621, 622, 623, 648, 616, 644, 645, 595, 619,
	628, 643, 629, 646, 649, 650, 689, 690, 635, 691,
	632, 651, 642, 641, 630, 617, 652, 653, 602, 597,
	633, 634, 620, 636, 637, 638, 570, 598, 599, 600,
	601, 0, 612, 0, 419, 420, 421, 442, 405, 0,
	461, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 567, 0, 0, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 603,
	0, 0, 379, 332, 0, 0, 0, 0, 663, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 593, 640, 639, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 655, 0, 0, 0, 0, 0,
	0, 551, 564, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 562,
	0, 0, 0, 0, 613, 0, 563, 0, 0, 608,
	587, 591, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 611, 615, 285, 677, 609, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 678, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 411, 0, 0,
	661, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 610, 0, 369, 350, 674, 552, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 659, 346, 0, 0, 0, 0, 673,
	654, 656, 657, 660, 664, 665, 666, 667, 668, 670,
	672, 676, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 614, 0, 0, 336, 337, 338, 339,
	662, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 684, 658,
	683, 685, 686, 682, 687, 688, 669, 571, 0, 618,
	680, 679, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 647, 624, 625, 626, 569, 627,
	621, 622, 623, 648, 616, 644, 645, 595, 619, 628,
	643, 629, 646, 649, 650, 689, 690, 635, 691, 632,
	651, 642, 641, 630, 617, 652, 653, 602, 597, 633,
	634, 620, 636, 637, 638, 570, 598, 599, 600, 601,
	0, 612, 0, 419, 420, 421, 442, 405, 0, 461,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 467, 456, 567, 0, 0, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 453, 0, 0, 603, 0,
	0, 379, 332, 0, 0, 0, 0, 663, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 593, 640, 639, 580, 590, 0, 0, 266,
	197, 454, 0, 455, 581, 0, 589, 582, 586, 585,
	583, 584, 0, 655, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 562, 0,
	0, 0, 0, 613, 0, 563, 0, 0, 608, 587,
	591, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 588, 611, 615, 285, 677, 609, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 678, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 411, 0, 0, 661,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	610, 0, 369, 350, 674, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	1411, 1412, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 659, 346, 0, 0, 0, 0, 673, 654,
	656, 657, 660, 664, 665, 666, 667, 668, 670, 672,
	676, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 614, 0, 0, 336, 337, 338, 339, 662,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 684, 658, 683,
	685, 686, 682, 687, 688, 669, 571, 0, 618, 680,
	679, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 647, 624, 625, 626, 569, 627, 621,
	622, 623, 648, 616, 644, 645, 595, 619, 628, 643,
	629, 646, 649, 650, 689, 690, 635, 691, 632, 651,
	642, 641, 630, 617, 652, 653, 602, 597, 633, 634,
	620, 636, 637, 638, 570, 598, 599, 600, 601, 0,
	612, 0, 419, 420, 421, 442, 405, 0, 461, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 567, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 603, 0, 0,
	379, 332, 0, 0, 0, 0, 663, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 0, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 612,
	0, 419, 420, 421, 442, 405, 0, 461, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 567, 0, 0, 0, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 603, 0, 0, 379,
	332, 0, 0, 0, 0, 663, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	593, 640, 639, 580, 590, 0, 0, 266, 197, 454,
	0, 455, 581, 0, 589, 582, 586, 585, 583, 584,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 562, 0, 0, 0,
	0, 613, 0, 563, 0, 0, 608, 587, 591, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 588,
	611, 615, 285, 677, 609, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	678, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 411, 0, 0, 661, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 610, 0,
	369, 350, 674, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	659, 346, 0, 0, 0, 0, 673, 654, 656, 657,
	660, 664, 665, 666, 667, 668, 670, 672, 676, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	614, 0, 0, 336, 337, 338, 339, 662, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 684, 658, 683, 685, 686,
	682, 687, 688, 669, 571, 0, 618, 680, 679, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 647, 624, 625, 626, 569, 627, 621, 622, 623,
	648, 616, 644, 645, 595, 619, 628, 643, 629, 646,
	649, 650, 689, 690, 635, 691, 632, 651, 642, 641,
	630, 617, 652, 653, 602, 597, 633, 634, 620, 636,
	637, 638, 570, 598, 599, 600, 601, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 174, 51, 163,
	138, 0, 0, 0, 0, 0, 0, 348, 467, 456,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 156, 0, 291, 0, 165, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 453, 0, 0, 115, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 168, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 137, 162, 172, 0, 101, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 189, 0, 0, 0,
	383, 0, 0, 317, 161, 155, 154, 427, 0, 369,
	350, 57, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 157, 158, 159, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 406, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 192, 0, 0, 451, 200, 0,
	0, 0, 160, 0, 201, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 361, 261, 394,
	372, 0, 250, 0, 319, 139, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 202, 39, 190, 193, 195,
	194, 0, 49, 5, 0, 0, 118, 203, 456, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 348,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 485, 487,
	271, 434, 362, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 139, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 894,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 880,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 1961,
	1963, 1964, 1965, 1966, 1967, 1968, 0, 1973, 1969, 1970,
	1971, 1972, 0, 1956, 1957, 1958, 1959, 878, 1940, 1962,
	0, 1941, 344, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1953, 1954, 1951, 1952, 1960, 356, 322, 357,
	307, 334, 333, 335, 905, 907, 909, 911, 914, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 1955, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 904, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 2038, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2042, 411,
	0, 0, 0, 2037, 0, 2036, 383, 2034, 2039, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 2040, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 0, 0, 247, 242, 243,
	244, 245, 348, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 0, 0, 1758, 0, 0, 0, 0, 291,
	0, 0, 318, 467, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1759, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1000, 1001,
	1002, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 810, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 817, 818, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 805, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	795, 409, 260, 794, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 808, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 809, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 812, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 819, 806, 815, 807, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2056, 411, 0, 0, 0, 2061, 2059, 0, 383,
	0, 2060, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 174, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 115, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 1802, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 139, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 0, 247,
	242, 243, 244, 245, 174, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 453,
	0, 0, 115, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 1793, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 139, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 174, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 0,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 453, 0,
	0, 115, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 139, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 817, 818,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 795, 409, 260, 794, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 819, 1712, 815, 1713,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 2458, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 2461, 0, 0, 2460, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 1251, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1249, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 1245,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1249, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3250, 0, 196, 640, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1249, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1249, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2973, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	0, 247, 242, 243, 244, 245, 348, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 0, 0, 2126, 0,
	0, 0, 0, 291, 0, 0, 318, 467, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 2128, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 2147, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1249, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3339, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 640, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3265, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 3194, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2969, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 2801, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 3040, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2659,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1693, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 2628, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1249, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 2128, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 2163,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 1999, 247, 242,
	243, 244, 245, 348, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 318, 467, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 1680, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1249, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 1592, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 1278, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 505, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 506, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 348, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 472, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 1229,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 1227, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 546, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 793, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 174, 51, 163, 138, 0,
	0, 795, 0, 0, 794, 0, 467, 456, 174, 51,
	163, 138, 0, 164, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 165, 0, 164, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 165, 0, 0,
	779, 0, 0, 115, 0, 0, 0, 0, 755, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 103, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 103, 0, 0, 0, 757, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 524, 531, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 529, 0, 530,
	534, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 778, 777,
	120, 121, 0, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 121, 776, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 756, 788, 545,
	0, 0, 0, 0, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 784, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 162, 172, 0, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 162, 172, 0, 101, 0, 0,
	0, 894, 161, 155, 154, 0, 0, 785, 789, 57,
	0, 0, 0, 0, 0, 161, 155, 154, 0, 0,
	0, 0, 57, 0, 0, 0, 773, 0, 771, 775,
	792, 0, 1668, 0, 772, 769, 768, 1630, 774, 759,
	760, 758, 761, 762, 763, 764, 0, 790, 0, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	786, 787, 0, 0, 0, 0, 1670, 1639, 0, 0,
	157, 158, 159, 0, 0, 0, 1671, 1672, 0, 0,
	0, 0, 0, 157, 158, 159, 0, 0, 0, 517,
	519, 518, 0, 0, 0, 0, 166, 782, 0, 523,
	0, 0, 1638, 781, 0, 0, 0, 0, 0, 166,
	0, 527, 0, 0, 0, 0, 111, 1645, 542, 0,
	160, 880, 112, 0, 0, 520, 0, 0, 0, 111,
	0, 0, 0, 160, 0, 112, 0, 0, 0, 0,
	0, 902, 906, 908, 910, 912, 913, 915, 0, 920,
	916, 917, 918, 919, 0, 897, 898, 899, 900, 878,
	879, 903, 0, 881, 0, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 893, 895, 891, 892, 901, 113,
	0, 0, 780, 0, 1661, 0, 905, 907, 909, 911,
	914, 50, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 741, 0, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 896, 0, 0, 0, 0, 0, 522,
	526, 532, 0, 533, 535, 0, 0, 536, 537, 538,
	52, 0, 540, 541, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 1629, 1631, 1628, 736, 1625, 733,
	0, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 169, 170, 0, 171, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 169, 170,
	0, 171, 0, 0, 1643, 1677, 139, 0, 1644, 1646,
	1648, 1668, 1650, 1651, 1652, 1656, 1657, 1658, 1660, 1663,
	1664, 1665, 0, 0, 0, 0, 0, 0, 0, 1653,
	1662, 1654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 1670, 0, 0, 0, 1668,
	0, 0, 0, 114, 39, 0, 0, 0, 0, 0,
	49, 5, 0, 1669, 118, 119, 114, 39, 0, 0,
	0, 0, 0, 49, 0, 0, 0, 118, 119, 0,
	0, 0, 0, 1670, 1626, 1627, 3356, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 1645, 731, 0, 0,
	0, 0, 1666, 0, 0, 0, 735, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1642,
	0, 0, 0, 716, 0, 0, 1641, 724, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 1661, 0, 0, 740, 0, 0, 0,
	0, 730, 1674, 1673, 0, 729, 525, 524, 531, 521,
	0, 715, 0, 0, 0, 722, 0, 0, 528, 529,
	0, 530, 534, 0, 0, 516, 0, 3095, 0, 0,
	0, 1661, 720, 0, 0, 539, 0, 1668, 0, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1635, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 739,
	0, 1670, 1649, 0, 0, 0, 0, 0, 543, 0,
	0, 545, 0, 1655, 0, 0, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 1676, 0, 0, 1675,
	0, 0, 0, 1643, 1677, 0, 0, 1644, 1646, 1648,
	1649, 1650, 1651, 1652, 1656, 1657, 1658, 1660, 1663, 1664,
	1665, 1655, 1645, 0, 0, 0, 0, 0, 1653, 1662,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1677, 0, 0, 1644, 1646, 1648, 0, 1650,
	1651, 1652, 1656, 1657, 1658, 1660, 1663, 1664, 1665, 0,
	0, 0, 1669, 0, 0, 0, 1653, 1662, 1654, 0,
	0, 737, 0, 0, 0, 525, 524, 531, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 1661,
	530, 534, 0, 0, 516, 0, 0, 0, 0, 0,
	1669, 1666, 0, 0, 539, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	0, 517, 519, 518, 0, 1641, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 527, 0, 0, 0, 0, 0, 1659,
	542, 0, 0, 0, 0, 0, 1642, 520, 1647, 0,
	0, 511, 0, 1641, 0, 0, 0, 0, 1649, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 1643,
	1677, 0, 0, 1644, 1646, 1648, 0, 1650, 1651, 1652,
	1656, 1657, 1658, 1660, 1663, 1664, 1665, 0, 0, 0,
	0, 0, 0, 0, 1653, 1662, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 522, 526, 532, 0, 533, 535, 0, 0, 536,
	537, 538, 0, 0, 540, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 519, 518, 0, 0, 0, 0, 1666, 0, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 1642, 0, 0, 0, 0, 542,
	0, 1641, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 526, 532, 0, 533, 535, 0, 0, 536, 537,
	538, 0, 0, 540, 541,
}

var yyPact = [...]int{
	37743, -1000, -1000, -1000, -319, 10555, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35508,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35508,
	-316, 34956, 34956, -1000, -1000, 2294, -1000, 34403, 11147, 35508,
	321, 319, 35508, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 729, -1000, 33851, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 658, 38444, 37164, 8269, -262, -1000, 3008, -99, 2116,
	883, 893, 1149, 1149, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38141, 757, 33299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37573, 305, 757, 13362, 20, 16, 3008, 340, -153,
	-151, -154, 294, -1000, 1200, 37756, 164, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8269, 8269,
	10555, -345, 10555, 8269, 35508, 35508, -1000, -1000, -1000, -1000,
	658, 38444, 8269, 2116, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -151, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -153, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -154, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4079, -1000, 1429,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2577, 1426,
	2115, 547, 35508, -1000, 1424, 547, -1000, -1000, -1000, 3008,
	3008, -1000, 35508, 35508, 77, 1609, -1000, 315, 327, 323,
	1423, -1000, -1000, -1000, -1000, -1000, -1000, 460, 2970, -1000,
	35508, 35508, 2611, 35508, -1000, 1933, 500, 37852, 2809, 1296,
	804, 2629, -1000, -1000, 2576, -1000, 207, 180, 210, 402,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 205, -1000, 2862,
	-1000, -1000, 196, -1000, -1000, 176, -1000, -1000, -1000, 15,
	-1000, -1000, -1000, -1000, -1000, -1000, -84, -1000, -1000, 936,
	2107, 8269, -1000, 1779, -1000, 3288, -1000, -1000, -1000, -1000,
	5417, 9976, 9976, 9976, 9976, -1000, -1000, 2435, 8269, 2568,
	2561, 2560, -1000, -1000, -1000, -1000, -1000, 1422, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1717, -1000, -1000,
	-1000, 9407, -1000, 2559, 2556, 2555, 2552, 2551, 2550, 2549,
	2548, 2547, 2542, 2541, 2528, 2526, 2524, 2317, 3510, 2518,
	2112, 2108, 2517, 2516, 2514, 2106, 2317, 2317, 2513, 2509,
	2507, 2506, 2504, 2503, 2497, 2495, 2490, 2488, 2486, 2485,
	2484, 2483, 2482, 2477, 2470, 2469, 2466, 2465, 2452, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1276, -1000, 2451, 2772, 2917, 2341, 2951, 2869,
	2867, 2858, 2853, 1893, -1000, -1000, 67, -1000, -114, -1000,
	-1000, 852, -1000, 821, -1000, 35508, 35508, 35508, 868, 134,
	634, 634, 634, 634, 634, 691, 634, 2912, 727, 725,
	720, 634, -1000, -98, -1000, -1000, -1000, -1000, -1000, -1000,
	1607, 1604, 2683, 806, -1000, -1000, -1000, -1000, 1244, 35508,
	-1000, 2396, 1504, 1504, 2906, 522, 515, 513, 1504, 375,
	-1000, 1623, 1623, 1623, 1623, 1504, 419, 532, 2917, 2917,
	5, 1623, -21, 1504, 1504, -21, 1504, 1504, 1504, 182,
	-311, -1000, -1000, -1000, -1000, 1623, 1623, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2877, 2874, 658, 658, 35508, 138,
	35508, 658, 658, 658, 668, -25, 36612, 36060, 1933, 495,
	476, 1259, 1608, -1000, 1519, 35508, 35508, 1519, 1519, 17829,
	17277, -1000, 35508, -1000, 2917, 2341, -1000, 2273, 2246, 2267,
	2341, -158, -159, -160, 658, 658, 658, 658, 658, 147,
	658, 658, 658, 658, 658, 35508, 35508, 32747, 658, 658,
	7124, 7124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10555, 1765, 1808, 163, -66, -315, 203, -1000, -1000,
	35508, 2747, 162, -1000, -1000, -1000, 2342, -1000, 2379, 2379,
	2379, 2379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2379, 2379, 2417, 2450, -1000, -1000, 2375, 2375, 2375,
	2342, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2413, 2413, 2414, 2414,
	2413, 35508, 8269, 35508, 2791, 320, 2447, -1000, 35508, 314,
	2917, 2772, 2917, -1000, -1000, 1421, 1885, 2105, -1000, -1000,
	315, 1462, -1000, 1044, -1000, -1000, -1000, -1000, 35508, -84,
	344, -1000, -1000, 2096, 2444, -1000, 489, 1046, 1337, -1000,
	228, 38613, 28324, 1933, 28324, 35508, -1000, -1000, -1000, -1000,
	-1000, -1000, 14, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 189, -1000, 8269, 8269,
	8269, 8269, 8269, -1000, 570, 8838, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9976, 9976, 9976, 9976, 9976, 9976, 9976,
	9976, 9976, 9976, 9976, 9976, 2434, 1543, 9976, 9976, 9976,
	9976, 2246, 2708, 1257, 240, -1000, -1000, -1000, -1000, -1000,
	1628, 2107, 8269, 8269, 8269, 35508, -1000, -1000, 330, 8269,
	8269, 2885, 8269, 2849, 8269, 8269, 8269, 2264, 4279, 35508,
	8269, -1000, 2263, 2261, -1000, -1000, 1724, 8269, -1000, -1000,
	8269, -1000, -1000, 8269, 9976, 8269, -1000, -1000, -1000, 2984,
	2849, 2849, 1574, 8269, 8269, 2849, 2849, 2849, 1555, 2849,
	2849, 2849, 2849, 2849, 2849, 2849, 2849, 2260, 2259, 2254,
	2917, -262, 6555, -1000, -268, 2772, 8269, -1000, -1000, 8269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2104, 2101,
	-326, -35, 881, 836, 846, -1000, 2837, -1000, 2443, 2442,
	1414, 634, -1000, 634, 634, -139, 35508, 1639, 28324, 35508,
	35508, 1933, 35508, 35508, 35508, 634, 634, 634, 35508, -1000,
	2725, 28324, 2715, 668, -1000, 35508, 1244, 2833, 35508, 2957,
	9976, 9976, -1000, 32195, 1623, 1504, 1504, -1000, -1000, 35508,
	-1000, -1000, -1000, 1623, 35508, 1623, 1623, 2957, 1623, -1000,
	-1000, -1000, 1504, 1504, -1000, -1000, -1000, -1000, 1623, 1623,
	-1000, -1000, 2957, 35508, 8, 2957, 2957, 1, -1000, -1000,
	-1000, 35508, 35508, 634, 35508, -1000, 35508, 35508, -1000, -1000,
	35508, 35508, 38016, 35508, 31643, 2864, -1000, 28324, 35508, 35508,
	26116, -1000, 1128, -1000, -55, -1000, -42, -25, 1519, -25,
	1519, -1000, 487, 539, 16173, 446, 28324, 4848, -1000, -1000,
	1519, 1519, 4848, 4848, 1313, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1229, -1000, 173, 2772, -1000, -1000, -1000, -1000,
	-1000, 1882, 1881, 1880, 35508, 35508, 28324, 1933, 35508, 658,
	35508, 35508, 35508, 35508, 35508, -1000, 2437, -1000, 2807, 35508,
	35508, 1287, -1000, -1000, 12810, 1395, 1287, -1000, 1656, -1000,
	8269, 10555, -294, 8269, 10555, 10555, 8269, 10555, -1000, 8269,
	149, -1000, -1000, -1000, -1000, 1878, -1000, 1877, -1000, -1000,
	-1000, -1000, -1000, 2099, 2099, -1000, 1876, -1000, -1000, -1000,
	-1000, 1866, -1000, -1000, 1853, -1000, -1000, -1000, 2252, 936,
	-1000, 2097, 2628, -263, -1000, 15052, 35508, 35508, -1000, -1000,
	-263, -1000, 14483, 35508, 2772, -1000, 2772, 35508, -1000, 2890,
	-1000, 315, 279, -1000, -1000, -1000, -1000, -1000, -1000, 1393,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1180,
	-1000, 35508, -1000, -1000, 228, 28324, 29428, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 209, -1000, -1000, 174, -1000, 688,
	108, 1459, -1000, -1000, 145, 181, 82, 749, 2107, -1000,
	1647, 1647, 1652, -1000, 574, -1000, -1000, -1000, -1000, 2435,
	-1000, -1000, -1000, 1545, 3382, -1000, 1502, 1502, 1289, 1289,
	1289, 1289, 1289, 1484, 1484, -1000, -1000, -1000, 5417, 2434,
	9976, 9976, 9976, 9976, 559, 559, 3342, 3330, -1000, 8269,
	1624, -1000, 8269, 2536, 2299, 1168, 1377, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2244, 2243, 2253,
	2966, 2242, 8269, -1000, -1000, 1449, 1443, 1437, -1000, 2011,
	7700, -1000, -1000, -1000, 2231, 1373, 2228, -1000, -1000, -1000,
	2223, 1435, 980, 2216, 1565, 2214, 1173, 8269, 8269, 8269,
	2213, 1427, 1415, 8269, 8269, 8269, 8269, 2212, 8269, 8269,
	8269, 8269, 8269, 8269, 8269, 8269, 38, 38, 38, -1000,
	-1000, 1411, -1000, 2107, -1000, 2092, -1000, 1306, 1167, -1000,
	1966, -1000, -1000, -1000, 2038, -1000, -1000, 855, 817, 843,
	35508, 956, 11699, 35508, 35508, 35508, 35508, 634, 151, -1000,
	2790, 1250, -1000, 108, -92, 339, 947, 2609, 2963, -177,
	35508, 35508, 35508, 2828, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 31091, -1000, 2433, 1407, -1000, -1000, 8269, -1000,
	-1000, 2606, 35508, 35508, 2957, 2957, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35508, 2957, 2957, 1504, 1623, -1000, -1000,
	1623, -1000, -1000, 1623, -1000, 1365, -1000, 35508, -1000, -1000,
	-1000, 2822, 2396, 1155, -1000, 824, 572, 572, 834, 503,
	2948, 13914, -1000, 1536, 1064, 677, 2713, 202, -1000, 1536,
	-212, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 436, 418,
	1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536, 1536,
	1536, 888, 1536, 1536, 1536, 1536, 1536, -1000, 1536, 2426,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 521, 146, 2861,
	241, 239, 1250, 2856, 266, 2857, 1100, -1000, -1000, -1000,
	-1000, 20044, 20044, 15621, 20044, -1000, 1464, -25, -45, -1000,
	-1000, 1128, 4848, 1128, 4848, -1000, -1000, 673, -1000, -1000,
	947, -1000, 35508, 35508, -1000, -1000, 2425, 1603, -1000, -1000,
	3510, -1000, 4848, 4848, -1000, -1000, 20596, 35508, -1000, -86,
	-1000, -71, 2886, -1000, -1000, -1000, 1087, -1000, -1000, 1110,
	947, 2627, 35508, 1087, 1087, 1087, -1000, -1000, 11699, 35508,
	-1000, -1000, 2957, 7124, -1000, 26116, -1000, -1000, 30532, -1000,
	29980, 2957, 1620, -1000, 10555, 1803, 158, -1000, 194, -320,
	155, 1681, 153, 2107, -1000, -1000, 2209, 2207, 1406, -1000,
	1370, 2203, 1369, 1367, -1000, -27, -1000, 2752, 960, -1000,
	2423, -1000, 1366, 2679, -1000, 1080, -1000, 1602, 1351, -1000,
	960, 1349, 2673, 1080, 2886, -1000, 1345, 73, -1000, -1000,
	35508, 2096, 1347, 29428, 988, -1000, 671, 1341, 1333, -1000,
	28324, 183, 28324, -1000, 28324, -1000, -1000, 329, -1000, 35508,
	2765, -1000, -1000, -1000, 2038, 1600, -337, -1000, -1000, -1000,
	-1000, -1000, 1312, -1000, 559, 559, 3342, 2866, -1000, 9976,
	-1000, 9976, 2704, 1619, -1000, 8269, 1755, 3966, 3966, 1854,
	18933, 35508, -1000, -1000, 8269, 8269, -1000, 2685, -1000, -1000,
	-1000, -1000, 8269, 8269, 1905, -1000, 35508, -1000, -1000, -1000,
	-1000, 18933, -1000, 9976, -1000, 8269, 1231, 2614, 1309, 38,
	38, 38, 2607, 2602, 2592, 1291, 38, 2569, 2557, 2553,
	2544, 2493, 2471, 2411, 2401, -1000, 2419, -1000, -1000, 6555,
	-1000, -27, 8269, 8269, 8269, 2709, -1000, -1000, 116, -1000,
	1598, -1000, -1000, -1000, 811, 167, 2202, 1009, -1000, -1000,
	35508, -1000, -1000, -1000, 2200, 1007, -1000, -1000, -1000, 37961,
	2379, 2379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2379, 2379, 2417, -1000, -1000, 2375, 2375, 2375, 2342,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2413,
	2413, 2414, 2414, 2413, -1000, 2396, 2396, 265, 35508, 44,
	1536, -1000, 537, 28324, 469, -1000, 35508, 1719, 1595, 2626,
	439, 2726, 35508, 2406, 2405, 2404, 2403, 306, 37961, 35508,
	1169, -1000, 1331, 37756, -1000, 35508, 2107, -1000, 1933, -1000,
	1504, -1000, -1000, 2957, 1363, -1000, -1000, 2957, 1504, 1504,
	1623, 35508, -1000, 306, 37961, 2820, 38016, -1000, 35508, -1000,
	-1000, -1000, 808, -1000, 839, 634, 35508, 1686, 839, 1680,
	2399, -1000, -1000, 35508, 35508, 35508, 35508, -1000, -1000, 35508,
	-1000, 35508, 35508, 35508, 35508, -1000, 35508, 35508, -1000, 35508,
	1678, 1675, 2821, -1000, 1536, 1536, 783, -1000, -1000, 482,
	-1000, 1845, 1842, 1840, 1839, 2089, 2087, 2085, 1536, 1536,
	1837, 2082, 28876, 2070, 962, 1833, 1801, 1798, 1828, 2066,
	939, -1000, 2063, 1796, 1795, 1792, 35508, 2398, 1977, -1000,
	-1000, 44, 1536, 236, 35508, 1558, 537, 328, 1899, 16725,
	35508, 26116, 26116, 26116, 26116, -1000, 2661, 2652, -1000, 2660,
	2654, 2676, 35508, 26116, 2396, -1000, 28876, -1000, -1000, -1000,
	2246, 1286, 2766, 878, 8269, -1000, -1000, -75, -40, -1000,
	-1000, -1000, 28324, 2058, 446, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2979, 35508, 35508, 608, 2198, -1000, 2955,
	-1000, 999, -1000, -1000, 1311, -1000, 2955, 1630, -321, 10555,
	1605, 1517, -1000, 8269, 10555, 8269, -296, 222, -299, -1000,
	-1000, -1000, 2057, -1000, -1000, -1000, 1794, -1000, 1784, 55,
	68, 1670, -263, 6555, 333, 35508, -263, 35508, 6555, -1000,
	35508, 331, -263, -1000, 35508, 1775, -1000, -1000, -1000, 2962,
	28324, 1933, 1471, 27772, -1000, 187, -1000, 177, 502, 2053,
	-1000, 715, 113, 2039, 2038, -1000, -1000, -1000, 9976, -1000,
	-1000, -1000, -1000, 2107, 8269, 2197, -1000, 812, 812, 2196,
	2186, -1000, 2379, 2379, -1000, 2342, 2375, 2342, 812, 812,
	2183, -1000, 1957, 2381, -1000, 2308, 2285, 8269, -1000, 2180,
	3317, 1316, -105, 38, 38, -1000, -1000, -1000, -1000, 38,
	38, 38, 38, -1000, 38, 38, 38, 38, 38, 38,
	38, 38, 551, -1000, 55, 2107, 2107, -1000, -1000, 2762,
	-1000, 2038, 2021, -1000, 2016, 2014, 956, 37961, 734, 11699,
	2734, 2819, 2816, 12251, 2814, 2372, 2371, 1901, -1000, -1000,
	-1000, 27220, 424, -1000, -1000, -1000, 562, 195, 1774, 457,
	-1000, 35508, 266, 2698, 1557, 2005, 35508, -1000, -1000, -1000,
	-1000, -1000, 2726, -1000, 916, 288, 25012, 12251, 12251, 12251,
	302, 1601, -1000, 547, 1006, 1308, 26116, 35508, -1000, 25564,
	2178, -1000, 947, 2957, -1000, 35508, -1000, 2957, 2957, 1504,
	-1000, 302, -1000, 342, -1000, 2737, 37961, -1000, 35508, -1000,
	35508, -1000, 35508, 35508, 634, 8269, 2737, 35508, 667, -1000,
	-1000, 943, 292, 594, 594, 994, -1000, 2787, -1000, -1000,
	-1000, 35508, -1000, -1000, -1000, -1000, -1000, -1000, 18933, 18933,
	2847, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2003, 2002, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35508, 1282, -1000, 1556, 1901, 27220,
	1554, 1519, 2000, 424, 1719, 1548, -1000, 1995, -1000, 961,
	35508, 35508, -1000, 1104, -1000, 1547, 2603, 2620, 2603, -1000,
	-1000, -1000, -1000, 2641, -1000, 2625, -1000, -1000, 1104, -1000,
	-1000, -1000, -1000, -1000, 878, -1000, 2873, 839, 839, 839,
	2177, -1000, -1000, -1000, 988, 2161, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2953, 2946, 26668, 2953, -1000,
	-321, 1616, -1000, 1730, 152, 1660, 35508, -1000, -1000, -1000,
	2160, 2159, -275, 69, 2945, 2943, 2976, -1000, 2156, 984,
	-263, -1000, -1000, 960, -1000, -1000, -1000, -263, -1000, 960,
	-1000, -1000, 1933, -1000, 169, -1000, -1000, -1000, -1000, -1000,
	-1000, 94, -1000, 35508, -1000, 982, 112, -1000, 2107, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8269, -1000, -1000, -1000, 2277,
	-1000, -1000, 8269, 2151, 1992, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2983,
	-1000, 2942, -275, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37961, -1000, 1412, 342, 342, 2138, 968, -1000, -1000,
	-1000, -1000, 342, 23908, 12251, -1000, 1984, 104, -1000, -1000,
	-1000, 1983, 1982, 1764, -1000, -1000, 1789, 1202, 114, -1000,
	-1000, -1000, -1000, -1000, -1000, 1899, 1753, 1546, -342, -1000,
	2370, -1000, 1536, 1536, 1536, 35508, 1265, -1000, 1536, 1536,
	2131, 2128, 2127, 553, 1515, 1514, -1000, 1763, 20044, 26116,
	25564, 1091, -1000, 1285, -1000, -1000, -1000, 2957, -1000, -1000,
	2957, 553, -1000, -1000, -1000, 35508, 270, 2368, -1000, 2367,
	2604, 334, 2366, 2360, 35508, 2221, -1000, 2737, 35508, 590,
	2721, -1000, -1000, -1000, -1000, -1000, 379, -1000, 35508, -1000,
	-1000, 1295, -1000, 18933, -1000, -1000, 1264, -1000, 1977, 1975,
	-1000, 104, 1974, 4848, -1000, -1000, 2698, 1972, -1000, 35508,
	961, 961, 2983, 35508, 6555, -1000, -1000, 8269, 2356, -1000,
	8269, -1000, -1000, -1000, -1000, -1000, 2351, 2718, -1000, -1000,
	-1000, -1000, -1000, -1000, 8269, 8269, -1000, -1000, 615, 10555,
	-302, 221, -1000, -1000, -1000, -278, 1969, -1000, -1000, 2937,
	1964, 1911, 35508, -1000, 960, 960, 947, -1000, -1000, 1,
	441, -1000, 2206, -1000, 2050, 38, -1000, 159, 8269, -278,
	-169, -1000, -1000, -179, -179, -183, 12251, -1000, 1249, -1000,
	1536, 1536, 2126, -1000, -1000, 313, -1000, -1000, 253, -1000,
	-1000, 1761, 494, -1000, -1000, -1000, 1962, 1693, 1920, 23356,
	18933, 19485, 1961, -1000, -1000, 25012, 1412, 1412, 38481, 189,
	38481, 896, 1513, -1000, 1760, -1000, 1759, -1000, 2957, 1091,
	1285, -1000, -1000, 1439, -1000, -1000, 896, -1000, -1000, 270,
	-1000, -1000, 1696, 9976, -1000, -1000, 1956, 19485, 655, 1542,
	1541, 672, 2349, -1000, 388, 2975, -1000, -1000, -1000, 780,
	2348, -1000, 1669, 1666, -1000, 35508, -1000, 23356, 23356, 662,
	662, 23356, 23356, 2345, 594, -1000, -1000, 9976, -1000, -1000,
	-1000, -1000, 1536, 1290, -1000, -1000, -1000, -1000, -1000, -1000,
	1753, -1000, -1000, 2917, -1000, -1000, 2107, 35508, 2107, 24460,
	-1000, 2936, 2932, 2107, 936, -1000, -321, 35508, 35508, -280,
	1757, -1000, 1943, 62, -1000, -1000, 941, -286, 47, 56,
	1538, -1000, -1000, -1000, 2124, -1000, 514, -1000, -1000, -1000,
	936, -280, 35508, -1000, 343, -1000, -1000, -1000, -1000, 23908,
	1412, 1412, -183, 498, 1939, -1000, -1000, 251, -1000, -1000,
	-1000, -1000, -1000, 106, -1000, 1537, 1242, -1000, 2342, 8269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 545, 38323,
	-1000, 1064, -1000, 1, 545, 458, 229, -1000, 1756, -1000,
	-1000, 2983, -1000, 453, -1000, -1000, 3342, -1000, -1000, -1000,
	-1000, -1000, -1000, 1934, 1932, -1000, -1000, -1000, -1000, -1000,
	1754, 2332, -76, 2845, 1925, -1000, -1000, 2325, 1226, 1217,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1215, 1201, 23356,
	-1000, -1000, 3342, 18933, 1536, -1000, -1000, 1188, 1186, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2320, -1000, -1000, 2931,
	-1000, 1924, 661, 49, 56, -1000, 2927, 61, 2926, 2925,
	1923, -1000, -1000, 1218, -266, 35, 34, 25, -1000, -1000,
	-1000, 8269, -1000, 2811, -1000, 382, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 93, -1000, -1000, -1000, 1920, 1918, -1000,
	23356, 2787, 2025, 337, 2924, 38481, -1000, 1536, -1000, 337,
	-1000, 312, -1000, 1468, -1000, 1750, -1000, 2917, -1000, 311,
	-1000, -1000, -1000, 2122, 8269, 2317, 1536, 2091, -164, 23356,
	2596, 2594, 2581, 2279, 1179, -1000, 18933, -1000, -1000, 22804,
	35508, 1911, -1000, 2316, 1749, 69, 58, 2922, -1000, 1911,
	2921, 1911, 1911, -1000, 1651, -1000, 31, 29, 27, -1000,
	-1000, -1000, -1000, 1914, 175, -1000, -1000, -1000, 246, -1000,
	-1000, 2787, -1000, 2920, 448, -1000, 18933, -1000, -1000, -1000,
	1746, -1000, -1000, -1000, -1000, 2020, -1000, 35508, -1000, 2616,
	-1000, 157, 1171, 246, 662, 246, 662, 246, 662, 246,
	662, 184, -1000, -1000, -1000, 1166, -1000, -1000, 2825, 18381,
	45, -1000, -1000, -1000, 1912, -1000, 1911, -1000, -1000, 1218,
	-1000, -1000, -1000, -1000, -1000, -1000, 1536, 1908, 280, -1000,
	-1000, -1000, 22252, 358, 438, 435, -1000, 571, -1000, -1000,
	-1000, 594, -1000, -1000, 2613, 2496, 2961, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35508, -1000, 35508,
	-1000, 1096, -1000, -1000, -1000, 1281, -1000, -1000, -1000, -1000,
	-1000, 1731, -1000, 35508, -1000, 35508, 356, 1714, 9976, 2310,
	9976, 2296, 364, 2295, -1000, -1000, 2973, -1000, 2969, 752,
	752, 246, 246, 246, 246, -1000, 920, -1000, 1534, -1000,
	21700, 35508, -1000, -1000, 1086, 2289, 2919, -1000, 2968, 35508,
	2475, 35508, 2287, 1368, 9976, -1000, -1000, -1000, 1748, 393,
	-1000, 35508, 5986, -1000, 1279, -1000, -1000, 506, 361, -1000,
	1076, -1000, 1069, 21148, 1713, 2086, -1000, -1000, -1000, -1000,
	-1000, 2107, 35508, 1050, -1000, 35508, 348, -1000, -1000, -1000,
	1037, -1000, -1000, -1000, -1000, 506, 2671, -1000, 1711, -1000,
	-1000, 38285, 666, -1000, -1000, 38285, 353, -1000, 528, 2276,
	-1000, -1000, 1035, -1000, 35508, 713, 8269, -1000, 353, 38481,
	-1000, 8269, 1000, -1000, 38481, 981, -1000, -1000,
}

var yyPgo = [...]int{
	0, 160, 3020, 243, 162, 3581, 86, 244, 233, 216,
	241, 3580, 3579, 3578, 2804, 2801, 3577, 3576, 3575, 3572,
	3571, 3570, 3569, 3568, 3566, 3564, 3563, 3562, 3561, 3560,
	3559, 3558, 3557, 3556, 3555, 3554, 3553, 3551, 3550, 3548,
	3547, 3546, 3545, 3544, 3543, 3542, 237, 3541, 3540, 3539,
	3538, 3537, 3536, 3535, 3534, 3533, 3531, 3530, 3529, 3516,
	3515, 3514, 3513, 3512, 3510, 3509, 3508, 3507, 3506, 3505,
	3504, 3503, 3501, 3500, 3499, 3498, 3497, 3464, 3451, 214,
	3450, 2782, 3449, 3448, 3447, 3446, 3445, 3444, 3443, 249,
	3442, 3439, 3438, 3437, 3436, 3435, 3421, 3416, 3415, 3413,
	3412, 240, 3411, 3410, 3408, 3407, 3406, 3405, 238, 3404,
	158, 206, 3403, 3401, 3377, 3375, 3374, 3370, 230, 251,
	65, 3369, 41, 3368, 213, 3367, 131, 3366, 129, 3364,
	3363, 3362, 3361, 3360, 3358, 3355, 3352, 3350, 3349, 3348,
	3347, 3345, 3344, 3343, 3337, 89, 3332, 253, 3330, 69,
	3329, 3325, 117, 236, 204, 252, 1746, 261, 250, 180,
	167, 92, 3321, 2775, 3319, 161, 225, 134, 26, 3318,
	166, 3317, 139, 43, 30, 247, 122, 56, 141, 111,
	3316, 215, 100, 99, 3315, 3313, 177, 256, 183, 3312,
	112, 3311, 3310, 3308, 3306, 197, 221, 3304, 3301, 118,
	3299, 3298, 95, 3297, 68, 198, 150, 186, 3295, 94,
	109, 115, 110, 169, 3293, 138, 3290, 3289, 3288, 3287,
	171, 3286, 3285, 133, 64, 3284, 3283, 3282, 61, 3281,
	47, 3279, 28, 3276, 62, 3275, 3274, 3272, 3271, 3265,
	3263, 3262, 3261, 3259, 3258, 3257, 76, 3256, 3255, 15,
	16, 18, 3251, 23, 3250, 151, 3246, 3238, 3237, 91,
	83, 3236, 84, 1, 48, 67, 3233, 3232, 219, 66,
	97, 130, 3230, 411, 3228, 3226, 3225, 142, 3224, 386,
	3222, 3221, 3220, 3219, 3218, 54, 3217, 228, 49, 3216,
	119, 135, 3214, 35, 46, 190, 200, 3210, 3208, 3206,
	300, 188, 88, 127, 0, 3205, 136, 3204, 3203, 3202,
	254, 3201, 231, 212, 153, 226, 262, 223, 3199, 3198,
	72, 3197, 144, 45, 55, 123, 9, 24, 168, 3196,
	13, 178, 3194, 192, 3192, 148, 42, 128, 3191, 3190,
	34, 265, 3189, 3187, 3186, 113, 3185, 3184, 154, 71,
	3183, 3182, 3181, 3180, 33, 3179, 31, 25, 3177, 107,
	3176, 242, 3173, 187, 124, 173, 164, 143, 220, 229,
	77, 74, 3172, 1636, 132, 93, 17, 3170, 224, 3169,
	182, 121, 3168, 75, 3166, 248, 381, 209, 3159, 172,
	7, 39, 32, 3158, 8, 3157, 194, 205, 3156, 3154,
	21, 51, 3151, 19, 3144, 3143, 3142, 3141, 5, 3140,
	3139, 3137, 2, 4, 3136, 3, 210, 156, 116, 87,
	70, 3135, 3134, 44, 199, 3133, 137, 175, 174, 3129,
	90, 3126, 3125, 3124, 1699, 3121, 246, 3119, 3117, 3116,
	3115, 3100, 3099, 3096, 3095, 3094, 96, 38, 3093, 3087,
	3086, 3083, 73, 126, 3081, 3080, 3079, 3078, 37, 176,
	3077, 20, 3076, 29, 27, 36, 3075, 120, 3074, 12,
	179, 3073, 3071, 14, 3070, 3069, 10, 11, 3068, 3067,
	108, 3066, 85, 22, 155, 103, 3065, 3064, 81, 218,
	125, 3061, 3060, 239, 232, 201, 3059, 149, 234, 258,
	3058, 217, 3057, 3056, 3055, 3054, 3053, 3052, 1022, 3049,
	3048, 235, 82, 79, 102, 3047, 3046, 3045, 80, 145,
	106, 105, 57, 78, 3043, 101, 189, 3040, 184, 3039,
	3037, 98, 3036, 3033, 3032, 3031, 3029, 181, 3027, 3026,
	185, 227, 3023, 3022, 3018, 2999, 255, 170, 2995,
}

//line mysql_sql.y:10517
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 536, 544, 544, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 534, 534, 534, 535,
	535, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 479, 479, 478, 478, 477,
	477, 431, 431, 476, 476, 476, 475, 475, 475, 474,
	474, 473, 473, 472, 472, 470, 470, 471, 469, 468,
	468, 468, 466, 466, 466, 462, 462, 464, 463, 463,
	465, 457, 457, 460, 460, 458, 458, 458, 458, 461,
	456, 456, 456, 455, 455, 100, 100, 100, 375, 375,
	99, 99, 389, 389, 389, 389, 389, 387, 387, 387,
	387, 387, 387, 386, 386, 385, 385, 390, 390, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 90,
	90, 90, 90, 90, 95, 95, 95, 541, 541, 540,
	540, 542, 542, 542, 542, 543, 543, 93, 93, 93,
	94, 384, 384, 384, 91, 92, 92, 374, 374, 379,
	379, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 383, 383, 383, 381, 381, 380,
	380, 382, 382, 84, 84, 84, 87, 86, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 371, 371, 370, 96, 96, 97, 538, 538,
	537, 539, 539, 539, 539, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 504, 504, 504, 506, 506, 308,
	309, 545, 311, 307, 307, 307, 500, 500, 501, 502,
	503, 503, 503, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 254, 254, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 242,
	242, 242, 237, 237, 237, 237, 238, 238, 239, 239,
	240, 240, 240, 240, 241, 241, 301, 301, 259, 259,
	259, 261, 261, 260, 258, 256, 256, 256, 256, 256,
	256, 257, 257, 257, 262, 262, 76, 82, 82, 82,
	517, 517, 77, 528, 528, 434, 434, 322, 322, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 439, 440, 318, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 360, 360, 51, 546, 546, 296, 296,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 73,
	451, 451, 548, 548, 548, 71, 72, 433, 433, 433,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 139, 140, 315, 315, 315, 317, 317, 313, 547,
	547, 403, 403, 316, 316, 47, 47, 47, 47, 74,
	314, 314, 295, 312, 312, 312, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 368, 368, 365, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 160, 160,
	210, 210, 512, 512, 508, 508, 509, 509, 509, 510,
	510, 511, 511, 108, 445, 445, 445, 445, 445, 445,
	8, 182, 182, 444, 444, 444, 444, 444, 444, 372,
	372, 489, 489, 489, 490, 181, 181, 176, 176, 446,
	446, 337, 491, 491, 454, 454, 453, 453, 452, 452,
	179, 179, 180, 180, 163, 163, 119, 119, 459, 459,
	459, 459, 467, 467, 430, 430, 246, 246, 288, 288,
	289, 289, 153, 153, 154, 154, 154, 154, 154, 154,
	497, 497, 499, 499, 498, 178, 178, 174, 174, 175,
	175, 175, 173, 173, 172, 171, 171, 170, 168, 168,
	168, 169, 169, 169, 186, 186, 156, 156, 156, 155,
	155, 155, 155, 155, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 157, 157, 505, 505,
	505, 435, 435, 435, 442, 442, 270, 270, 271, 271,
	269, 269, 158, 158, 159, 159, 159, 159, 268, 268,
	267, 161, 161, 167, 166, 166, 162, 162, 162, 162,
	278, 278, 277, 277, 277, 277, 111, 117, 117, 118,
	185, 185, 276, 275, 275, 275, 184, 184, 183, 183,
	177, 177, 165, 165, 165, 165, 274, 164, 272, 533,
	533, 532, 532, 531, 529, 529, 529, 530, 530, 530,
	530, 481, 481, 481, 481, 481, 302, 302, 302, 306,
	306, 305, 305, 305, 305, 305, 310, 7, 7, 7,
	7, 7, 7, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 38, 194, 195, 39,
	196, 196, 197, 197, 198, 198, 199, 200, 201, 201,
	201, 201, 37, 187, 187, 188, 188, 189, 189, 190,
	191, 191, 191, 193, 192, 36, 36, 29, 146, 146,
	147, 147, 147, 149, 149, 243, 243, 243, 148, 148,
	150, 150, 150, 513, 516, 514, 514, 518, 518, 518,
	519, 519, 519, 519, 520, 520, 30, 136, 141, 523,
	523, 523, 522, 522, 524, 524, 525, 525, 292, 292,
	293, 293, 144, 145, 145, 143, 138, 152, 152, 152,
	152, 152, 137, 142, 515, 521, 521, 521, 369, 369,
	366, 367, 367, 364, 363, 363, 363, 527, 527, 526,
	526, 526, 303, 303, 31, 359, 359, 361, 362, 362,
	362, 353, 353, 353, 353, 35, 357, 357, 358, 358,
	358, 358, 358, 354, 354, 356, 356, 352, 352, 352,
	352, 352, 34, 151, 151, 351, 351, 348, 348, 346,
	346, 347, 347, 345, 345, 345, 349, 349, 42, 75,
	43, 44, 45, 41, 41, 41, 350, 350, 33, 33,
	33, 121, 120, 120, 120, 120, 291, 291, 290, 290,
	122, 40, 222, 222, 422, 422, 417, 417, 417, 417,
	417, 437, 437, 437, 418, 418, 418, 419, 419, 419,
	421, 421, 421, 420, 420, 420, 420, 420, 436, 436,
	438, 438, 438, 391, 391, 392, 392, 392, 395, 395,
	409, 409, 410, 410, 408, 408, 415, 415, 414, 414,
	413, 413, 412, 412, 411, 411, 411, 411, 406, 406,
	405, 405, 393, 393, 393, 393, 393, 394, 394, 394,
	404, 404, 407, 407, 266, 266, 265, 265, 230, 230,
	231, 231, 264, 264, 228, 228, 229, 229, 229, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 487, 487, 488, 233, 233, 244,
	244, 244, 244, 244, 244, 232, 232, 234, 234, 211,
	211, 209, 209, 202, 202, 203, 203, 204, 204, 204,
	208, 208, 207, 207, 207, 207, 205, 205, 206, 206,
	206, 206, 206, 206, 377, 377, 484, 484, 485, 485,
	480, 480, 480, 483, 483, 483, 483, 483, 486, 486,
	486, 482, 482, 212, 286, 286, 286, 304, 304, 304,
	304, 285, 285, 285, 227, 227, 226, 226, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	376, 376, 319, 319, 320, 320, 253, 252, 252, 252,
	252, 252, 250, 251, 249, 249, 249, 249, 249, 248,
	248, 247, 247, 247, 355, 355, 245, 245, 236, 236,
	236, 235, 235, 235, 416, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	284, 284, 284, 329, 329, 334, 334, 496, 496, 495,
	213, 213, 213, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 223, 223, 223, 400, 400, 400, 400, 401,
	401, 401, 401, 402, 402, 402, 398, 398, 399, 399,
	338, 339, 339, 443, 443, 396, 396, 397, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 450, 450, 450,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 507, 507, 507, 492,
	492, 492, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 282, 282, 282, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 340,
	340, 341, 341, 447, 447, 447, 447, 447, 447, 448,
	448, 449, 449, 449, 449, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 327, 279, 279, 279, 342, 335,
	335, 336, 336, 330, 330, 330, 330, 330, 330, 330,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 331, 331, 333, 333, 344, 344, 344, 343,
	343, 343, 343, 343, 343, 343, 225, 225, 225, 225,
	324, 324, 324, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 215, 215, 215, 215, 219,
	219, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 220, 220, 220, 220, 220,
	218, 218, 218, 218, 218, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 109, 110, 110, 217, 287, 287, 423,
	423, 426, 426, 424, 424, 425, 427, 427, 427, 428,
	428, 428, 429, 429, 429, 432, 432, 294, 294, 294,
	300, 300, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 2, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 8, 2,
	4, 4, 4, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 8, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 2, 1, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 1, 3, 3, 3, 0, 4,
	1, 3, 3, 3, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	6, 5, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -536, -544, -2, -5, 598, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 591,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 597,
	438, 13, 487, -14, -15, -497, -16, 256, -307, -308,
	-309, -311, -545, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 231, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 363, 369, 426, 590, 60, -154, -156, 601, 602,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 227, 15, 530,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 251, 250, 37, 317, 318, 319,
	367, 249, 228, 14, 30, 41, 343, -155, 81, 522,
	523, 525, 229, -157, 12, 605, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 241,
	592, -304, 359, 593, 595, 594, 84, 92, -297, -299,
	363, 369, 590, 602, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 490, 577, 578, 579, 580, 518, 576, 341, 342,
	527, 268, 292, 394, 298, 305, 157, 176, 170, 198,
	190, 523, 165, 272, 310, 273, 91, 160, 473, 105,
	450, 423, 163, 287, 289, 291, 519, 520, 294, 293,
	295, 297, 521, 274, 344, 186, 181, 286, 270, 179,
	275, 39, 276, 203, 277, 278, 532, 446, 340, 452,
	302, 421, 180, 447, 290, 449, 207, 211, 464, 465,
	174, 175, 454, 467, 202, 205, 206, 248, 42, 529,
	260, 468, 209, 201, 197, 476, 306, 304, 200, 173,
	196, 271, 64, 213, 212, 214, 417, 418, 419, 420,
	279, 280, 357, 463, 193, 182, 345, 166, 22, 471,
	255, 451, 370, 281, 299, 307, 208, 210, 262, 267,
	531, 522, 425, 266, 303, 469, 178, 259, 288, 254,
	472, 167, 525, 372, 282, 161, 296, 466, 475, 63,
	385, 172, 164, 245, 158, 264, 269, 283, 284, 285,
	516, 309, 308, 300, 524, 194, 261, 199, 184, 171,
	195, 159, 263, 474, 386, 588, 343, 404, 192, 189,
	265, 238, 470, 453, 162, 408, 387, 187, 311, 584,
	585, 586, 358, 339, 312, 313, 185, 252, 444, 445,
	316, 414, 332, 388, 424, 395, 389, 220, 320, 456,
	458, 204, 587, 321, 322, 323, 448, 324, 325, 326,
	327, 362, 55, 57, 93, 95, 603, -382, -380, -304,
	523, 590, 369, 522, 525, 363, 343, 602, -196, -304,
	604, -163, 38, -209, -304, -163, -81, -15, -14, -155,
	-156, -209, 235, -312, 23, 421, -89, 422, 231, 81,
	-304, -9, -101, -8, -108, -79, -153, 426, -310, -304,
	317, 317, -310, 235, -304, 266, 402, -434, 241, -386,
	-359, 267, -385, -361, -388, -362, 31, 227, 229, 228,
	263, 15, 367, 237, 13, 12, 368, 249, 24, 25,
	27, 14, 369, 371, 28, 372, 375, 376, 377, 41,
	380, 381, 256, 84, 92, 87, 274, -195, -304, -336,
	-330, 112, 257, -332, -325, -326, -328, -476, -470, -323,
	81, 139, 140, 147, 113, -327, -416, 35, 115, 539,
	576, 488, -280, -281, -282, -283, -284, -304, -471, -469,
	87, 96, 99, 102, 103, 101, 100, 151, 183, 98,
	88, 152, -156, 84, -492, 548, -298, 569, 577, 578,
	579, 580, 568, 60, -441, -449, 234, -447, 150, 188,
	252, 184, 13, 145, 414, 185, 545, 565, 490, 549,
	572, 541, 542, 543, 536, 537, 538, 540, 550, 552,
	564, -450, 560, 570, 571, 558, 573, 574, 575, 86,
	85, 563, 562, 551, 546, 547, 553, 535, 544, 554,
	555, 561, 566, 567, 351, 105, 352, 353, 480, 344,
	354, 241, 421, 69, 355, 356, 357, 358, 359, 487,
	360, 70, 361, 350, 256, 404, 362, 187, 204, 492,
	491, 493, 484, 481, 479, 482, 483, 485, 486, 556,
	557, 559, -117, -118, 582, -172, -173, -273, 11, 6,
	7, 8, 9, -534, 423, 531, 87, 162, 159, -373,
	162, 111, 167, 166, -373, 320, 262, 364, -146, -350,
	341, 404, 324, 93, 266, -353, -351, 519, -436, 314,
	310, 236, -147, 108, 246, 245, 106, 480, 234, 378,
	305, 55, 57, -508, -509, 224, 225, 226, -499, 513,
	-498, -304, 353, 95, 26, 235, 364, 262, 458, 456,
	457, 459, 460, 461, 462, -62, -451, -433, 453, 452,
	-316, 445, 451, 443, 455, 446, 342, 326, 325, 227,
	599, 520, 514, -294, 388, 424, 477, 478, 365, 425,
	464, 466, 447, 105, 191, 188, 236, 238, 235, 341,
	480, 404, 93, 324, -508, 159, 464, 466, 266, 402,
	40, -379, 414, -378, -380, 465, 476, 85, 86, 463,
	-294, 105, 444, 444, -173, -273, -172, -154, -156, -111,
	-497, 521, 521, 521, 236, 341, 404, 266, 237, 235,
	517, 519, 238, 480, 234, 317, 364, 262, 324, 93,
	-435, -505, 31, -442, 221, 222, 223, 32, 33, -1,
	119, 605, -330, -330, -6, 608, -6, -330, -304, -304,
	154, -215, -219, -216, -218, -217, -221, -220, 188, 189,
	150, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 30, 204, 252, 184, 185, 186,
	187, 207, 170, 190, 528, 215, 171, 216, 172, 217,
	173, 218, 174, 175, 219, 176, 179, 180, 181, 182,
	178, 153, 81, 153, 87, -179, 258, -209, 153, -179,
	-173, -172, -173, -209, -285, -304, 423, 122, -89, -89,
	422, -500, -501, -502, -504, 231, 422, 421, 153, 274,
	16, -310, -310, 79, -209, -361, 266, -386, -359, 35,
	78, 154, 239, 154, 78, 81, 365, 341, 404, 366,
	480, 235, 378, 238, 266, 379, 341, 404, 235, 238,
	480, 266, 341, 235, 238, 404, 266, 379, 443, 444,
	238, 26, 370, 373, 374, 444, -455, 476, 154, 111,
	108, 109, 110, -330, 129, -343, 122, 123, 124, 125,
	126, 127, 128, 136, 135, 146, 139, 140, 141, 142,
	143, 144, 145, 137, 138, 132, 112, 130, 134, 131,
	114, -156, -330, -336, 60, -328, -328, -328, -328, -416,
	-334, -330, 81, 81, 81, 153, 100, 87, -330, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -448, 81, 81, -340, -341, 81, 81, -323, -285,
	81, 87, 87, 81, 81, 81, 87, -341, -341, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-173, 154, 81, -119, 38, -175, 21, -157, -156, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 96, 603,
	220, 469, 530, 165, 166, 167, -194, -304, -196, -187,
	-304, 238, -147, 238, 517, 516, -348, 241, -348, -348,
	-348, -348, 237, -348, 23, 235, 235, 235, -348, 487,
	122, 122, 58, -510, 169, 154, -499, -178, 81, -315,
	130, 134, -315, 23, 264, 264, 264, -315, 304, -546,
	-547, 16, 132, -313, -547, -313, -313, -315, -548, 237,
	454, 42, 265, 264, -174, -175, -174, 448, 444, -403,
	449, 450, -317, -547, -316, -315, -315, -316, -315, -315,
	-315, 235, 238, 480, 324, 600, -546, -546, 30, 30,
	-434, -434, -209, -434, 514, -295, -304, -434, -434, -434,
	-511, 240, -541, -540, 467, -543, 469, 159, -380, 159,
	-380, -361, 266, 266, 154, 122, 23, -381, 122, 133,
	-380, -380, -381, -381, -232, 40, -303, 150, -304, 87,
	-232, 40, -538, -537, -209, -174, -157, -156, 82, 82,
	82, 524, 524, 524, -434, -434, -434, -434, -434, -436,
	-434, -434, -434, -434, -434, -310, -187, -196, 241, -434,
	-434, -158, -159, 141, -330, -304, -158, -3, -125, -124,
	116, 117, 119, 593, 359, 592, 596, 590, -380, 40,
	-429, 386, 385, -423, -425, 81, -424, 81, -424, -424,
	-424, -424, -424, 81, 81, -426, 81, -426, -426, -423,
	-427, 81, -427, -428, 81, -428, -427, -304, -335, -336,
	-304, 38, -444, 60, -153, 81, 30, 81, -304, -445,
	60, -153, 81, 30, -174, -119, -175, 153, 96, 87,
	-89, 82, 154, -503, 102, 103, -506, 202, 194, -304,
	-104, 87, -7, -8, -9, -10, -46, -79, -153, -472,
	-470, 81, 31, 413, 78, 16, -387, 235, 480, 364,
	262, 238, 341, -385, -368, -365, -363, -303, -361, -364,
	-363, -390, -285, 444, -120, 428, 427, 316, -330, -330,
	-330, -330, -330, 101, 112, 339, 102, 103, -325, -344,
	31, 312, 313, -326, -326, -326, -326, -326, -326, -326,
	-326, -326, -326, -326, -326, -333, -342, -416, 81, 132,
	130, 134, 131, 114, -328, -328, -326, -326, 82, 154,
	-496, -495, 116, -330, -330, -330, -304, -493, -494, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	355, 350, 356, 354, 344, 362, 357, 358, 187, 511,
	512, 505, 506, 507, 508, 509, 510, -335, -335, -330,
	-493, -335, -279, 32, 31, -336, -336, -336, 82, -330,
	-507, 337, 336, 338, -176, -304, -335, 82, 82, 82,
	96, -336, -336, -335, -326, -335, -494, -279, -279, -279,
	141, -336, -336, -279, -279, -279, -279, 141, -279, -279,
	-279, -279, -279, -279, -279, -279, 82, 82, 82, -174,
	-118, -453, -452, -330, 40, 583, -119, -330, -171, -170,
	-330, -535, 87, 87, 606, 470, 471, 163, 166, 165,
	34, 81, 81, 153, -348, -348, -348, 517, -513, -304,
	112, -369, -366, -363, -304, -304, -359, -304, -304, -209,
	-348, -348, -348, -209, -243, 52, 53, 54, -363, -148,
	55, 56, -511, -498, 34, -177, -304, -269, 17, -328,
	-328, -363, 266, -546, -315, -315, -296, -295, -317, -312,
	-317, -317, -269, -547, -315, -315, -317, -313, -269, -304,
	444, -269, -269, -403, -314, -304, -314, -348, -295, -296,
	-296, -209, -209, -254, -255, 232, 348, 349, 230, 228,
	11, 229, -263, 305, -349, 488, -238, -239, 76, 41,
	-241, 390, 383, 268, 272, 91, 273, 423, 274, 237,
	276, 277, 278, 293, 295, 248, 279, 280, 281, 414,
	282, 158, 294, 283, 284, 285, 366, -233, 6, 327,
	40, 50, 51, 437, 436, 533, 530, 269, -513, -513,
	30, 30, -369, -304, -304, -166, -161, -165, -162, -167,
	-272, -274, -164, 81, -209, -156, -304, 154, 468, 470,
	471, -541, -381, -541, -381, 31, 413, -384, 413, 31,
	-359, -378, 464, 466, -374, 87, 414, -364, -383, 78,
	150, -452, -381, -381, -383, -383, 149, 154, -539, 469,
	470, 224, -119, 96, 96, 96, -211, -209, -513, -368,
	-359, -304, -434, -211, -211, -211, -304, -304, 81, 35,
	-304, -304, -268, 154, -267, 16, -305, -304, 34, 87,
	153, -268, -126, -124, 118, -330, -6, 592, -330, -6,
	-6, -330, -6, -330, -432, 387, 96, 96, -287, 87,
	-287, 96, 96, 96, 82, 87, -372, 78, -446, -337,
	-491, 582, -181, 82, -176, -489, -490, -176, -180, -304,
	-446, -181, 82, -489, -119, -119, -304, 23, -89, -501,
	153, 154, -177, -387, -367, -364, -389, 141, -304, -375,
	154, 530, 609, 85, 239, -527, -526, 405, 82, 154,
	-456, 240, 487, 87, 606, 421, 220, 101, 339, 102,
	103, -416, -336, -333, -328, -328, -326, -326, -331, 253,
	-331, 111, -330, -329, -495, 118, -330, 34, 34, 154,
	79, 153, 82, 82, 16, 16, 82, -330, 82, 82,
	82, 82, 16, 16, -330, 82, 153, 82, 82, 82,
	82, 79, 82, 154, 82, 154, -336, -330, -336, 82,
	82, 82, -330, -330, -330, -336, 82, -330, -330, -330,
	-330, -330, -330, -330, -330, -397, 439, -397, -397, 154,
	82, 87, 154, 22, 154, -168, 36, 37, -291, -290,
	87, 164, 167, 167, 166, -195, -197, -198, -199, -200,
	-201, 132, 155, 156, -188, -189, -190, -191, -215, -285,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 204, 252, 184, 185, 186, 187,
	207, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -304, -209, -209, -209, -348, -516,
	391, 35, -528, 154, 40, -526, 480, -144, 316, -352,
	79, -151, 16, 530, -209, -209, -209, -222, 34, 16,
	-160, -210, -304, 81, 82, 154, -330, -360, 79, -304,
	-296, -269, -269, -209, -304, -269, -269, -315, -317, -317,
	-313, 153, -295, -422, 34, -178, 154, -208, -301, -205,
	-207, 243, -320, -206, 246, -485, 244, 242, 106, 247,
	301, 107, 237, -301, -301, 243, -242, 239, 34, -301,
	-257, 237, 301, 244, 20, -256, 237, 107, -304, 243,
	247, 242, -300, 122, -294, 149, 239, 42, 366, -300,
	534, -300, -300, -300, -300, -300, -300, -300, 275, 275,
	-300, -300, -300, -300, -300, -300, -300, -300, -300, -300,
	-300, 159, -300, -300, -300, -300, -300, -300, 81, 270,
	271, -517, 391, 30, 347, 347, -528, 30, -152, 341,
	30, -275, -276, -277, -278, 67, 71, 73, 68, 69,
	70, 74, 30, 154, -302, -306, 34, -304, 87, -302,
	-156, -161, -166, -302, 81, -540, -542, 472, 469, 475,
	-383, -383, 239, 81, 122, -383, -383, 40, -303, -537,
	476, 470, -186, 23, 154, 78, -211, -188, -196, -269,
	-159, -161, -304, 87, -304, 141, -269, 119, -6, 117,
	-130, -129, -128, 120, 590, 596, 119, 119, 119, 82,
	82, 82, 154, 82, 82, 82, 154, 82, 154, -459,
	449, 39, 154, 81, 82, 154, 60, 154, 122, 82,
	154, 82, 60, -186, 153, 423, -304, -470, 82, -389,
	154, 239, 153, 153, -365, 369, -303, -367, 20, 530,
	-285, 38, -291, 122, 606, 82, -331, -331, 111, -328,
	-325, 82, 119, -330, 117, -213, -215, 385, 386, -213,
	-214, -220, 150, 188, 252, 187, 186, 184, 385, 386,
	-232, -304, -330, -330, 82, -330, -330, 16, -304, -232,
	-326, -330, -173, 82, 82, -396, -397, -396, -396, 82,
	82, 82, 82, -396, 82, 82, 82, 82, 82, 82,
	82, 82, 81, -452, -459, -330, -330, -170, -169, 43,
	607, 154, 122, 167, 377, 82, 154, -285, 82, 154,
	-215, -178, -178, 81, -230, 530, -209, -519, 451, 393,
	403, -300, -322, -321, 343, 41, -439, 414, 399, 400,
	-366, 266, -304, -525, 94, 122, 78, 331, 332, 333,
	334, -346, -347, -345, -349, -513, 81, 81, 81, 81,
	-417, 321, -215, -209, -160, -304, 16, 154, -512, 153,
	-1, -304, -359, -315, -269, -547, -269, -315, -315, -317,
	-304, -417, -215, 34, -255, -212, -285, -206, -484, -485,
	-348, -304, 107, -484, 107, 81, -212, -285, -285, -258,
	-314, -285, -304, -304, -304, -261, -260, -285, -304, -304,
	-304, 107, 107, -237, 40, 47, 48, 49, -300, -300,
	191, -240, 40, 413, 415, 416, 96, 96, 96, 96,
	87, 87, 87, -300, -300, 96, 87, -306, 87, -486,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -244,
	40, 286, 290, 287, 288, 289, 87, 96, 40, 96,
	40, 96, 40, -304, 81, -487, -488, 87, -519, -300,
	347, -380, 122, -322, -524, 316, -145, 91, 31, -182,
	232, 229, -513, -371, -370, -285, -165, -165, -165, -165,
	67, 67, 67, 72, 67, 72, 67, -277, -371, -167,
	-178, -306, 82, -533, -532, -531, -529, 75, 240, 76,
	-335, 469, 473, 474, -367, -318, 87, -374, 14, -209,
	-209, -438, 296, 297, 82, -271, 18, 153, -271, 115,
	-6, -126, -128, -330, -6, -330, 592, 359, 593, 87,
	96, 96, -467, 434, 429, 431, 107, -337, -454, -453,
	60, -153, -176, -446, -490, -452, -304, 60, -153, -446,
	-304, 96, 16, -364, -359, 141, 141, -304, 370, -375,
	87, 392, 87, 235, 607, 87, -291, -325, -330, 82,
	-223, 175, 174, -223, 82, 82, -424, -424, -423, -426,
	-423, -223, -223, 82, 82, 23, 82, 82, 82, -330,
	82, 82, 154, -443, 489, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -339,
	-338, 258, -467, 44, 45, -290, 87, 87, 87, -199,
	-215, 233, -190, 40, 34, 34, -202, -203, -204, -212,
	-205, -207, 34, 81, 81, -520, 91, -514, 87, -304,
	-521, 91, 394, 152, 345, 40, 395, 396, 411, 340,
	96, 96, 401, -515, -304, -152, -523, 51, 122, 87,
	-209, -345, -294, 149, 277, 324, -266, -265, -304, 87,
	-202, -202, -202, -418, 323, 20, 96, 140, -179, 79,
	153, -161, -210, -304, 141, 82, -269, -304, -269, -269,
	-315, -418, -153, -259, 44, 46, -215, -482, -304, -480,
	-482, -304, -480, -480, -348, -330, -259, -212, 239, 30,
	229, -262, 329, 330, -376, 302, 112, -376, 154, -168,
	-304, -232, -232, 30, 87, 87, -211, 82, 154, 122,
	-520, -514, 122, -381, 87, -521, -525, 122, 87, 154,
	-182, -182, -269, 154, 122, -184, -183, 78, 79, -185,
	78, -183, 67, 67, -269, -531, -530, 23, -485, -485,
	-485, 82, 82, -270, 19, 20, 141, -270, 119, 117,
	119, 119, -304, 82, 82, -430, 584, -463, -465, 429,
	20, 20, 14, 82, -446, -446, -359, -375, 414, -209,
	154, 607, -330, 82, -330, 82, 87, -173, 20, -430,
	-192, -215, -323, -153, -153, 82, 154, -153, -231, -264,
	-304, 87, -202, 87, -518, 405, 87, 87, 96, 40,
	96, 152, 397, -440, -145, -522, 91, 122, 606, 81,
	-300, -300, -300, -304, 82, 154, -300, -300, 82, 82,
	82, -419, 257, 96, 140, 96, 140, 96, -302, -161,
	-304, -269, -512, 153, -269, -269, -419, -285, -227, -226,
	-224, 101, 112, 40, 383, -225, 91, 149, 291, 294,
	293, 269, 292, -253, -319, 78, 389, 329, 330, -349,
	584, 518, 242, 106, 107, 371, -320, 81, 81, 79,
	311, 81, 81, -482, 82, -259, -285, 40, -262, 40,
	302, -260, 149, -232, 82, -488, 87, -518, 87, -383,
	-523, 87, -513, -173, -370, -452, -330, 81, -330, 81,
	67, 11, 18, -330, -336, 241, -6, 593, 359, -246,
	585, 87, 20, 87, -461, 87, -371, -122, -457, -403,
	274, 82, 82, -396, -399, -398, -402, 435, 303, 442,
	-336, -246, 529, -149, 530, -149, -230, -204, 82, 154,
	-300, -300, 82, 20, 530, 344, 40, 96, 40, 398,
	87, 102, 103, -292, -293, 87, -354, -356, -285, 81,
	-232, -234, -303, 150, 87, -265, -323, -323, -228, -229,
	-263, -349, -121, -120, -228, -420, 158, 96, 140, 96,
	96, -269, -269, -420, -224, 101, -326, 87, -234, -235,
	40, 290, 286, 122, 122, -236, 40, 270, 271, -245,
	81, 301, 14, 191, 81, 107, 107, -209, -354, -354,
	-483, 331, 332, 333, 335, 334, -483, -354, -354, 81,
	-377, -376, -326, -300, 149, -522, -174, -177, -481, -304,
	242, 20, 20, -304, -304, -288, 586, 96, 87, 431,
	-431, 587, -466, 434, -460, -458, 429, 430, 431, 432,
	122, 82, -401, 114, 397, 401, -324, -327, 96, 99,
	183, 152, -288, -193, -304, -150, 59, 476, -264, -323,
	-323, -230, 87, 392, 87, 344, 607, 154, 122, 82,
	154, -423, -330, -391, 258, 154, -263, -294, -122, -391,
	-437, 166, 322, 530, 96, 140, 96, -173, -421, 166,
	322, 87, 87, 96, 81, -447, 30, 87, -355, 81,
	82, 82, 82, 82, -354, -232, -300, 82, 82, 154,
	81, 20, 87, -468, 240, -464, -465, 433, -458, 20,
	431, 20, 20, 87, -400, -401, 401, -324, -327, 582,
	440, 440, 440, 34, 301, 414, -293, 87, -357, -356,
	-168, 82, -392, 310, 20, -263, -300, -392, 322, 96,
	140, 96, -174, 322, 82, -330, -340, -300, 82, -248,
	-247, 526, -354, -357, 79, -357, 79, -357, 79, -357,
	79, 82, -232, -304, 242, -289, -304, -461, -475, 81,
	96, -463, -462, -464, 20, -461, 20, -461, -461, 111,
	441, 441, 441, 87, 370, -358, 248, 91, 530, 329,
	330, -168, 20, -393, 303, 304, -394, -407, 306, -232,
	96, 82, -304, -252, -250, -251, 78, 447, 299, 300,
	82, -483, -483, -483, -483, -253, 82, 154, -479, 30,
	82, -474, -473, -286, -469, -304, 434, 435, 87, -461,
	-400, -300, 87, 328, -285, 81, -405, 307, 81, -403,
	81, -403, 107, 332, -376, -251, 78, -250, 78, 15,
	14, -357, -357, -357, -357, -304, -478, -477, -476, 82,
	154, 153, 96, -304, -390, -395, 308, 96, -326, 81,
	-326, 81, -404, 305, 81, -249, 296, 297, 30, 166,
	-249, 154, 122, -473, -304, 82, -409, 81, 20, 82,
	-390, 82, -390, 81, 122, -326, 101, 40, 298, -477,
	40, -330, 153, -410, -408, 258, -394, 82, 82, 82,
	-390, 96, 82, -304, 82, 154, -304, -406, 309, 82,
	-408, -411, 60, 96, -415, -412, 81, -263, 260, 132,
	-415, -263, -414, -413, 308, 261, 81, 82, 154, -304,
	257, 81, -336, -413, -412, -336, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 827, 828, 829, 830, 831, 832, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 719, 741, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1207, 1208, 1209, 1210,
	-2, 1705, 1683, 1853, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1854, 0, 261, 259,
	1655, 1683, 1705, 1757, 1768, 1769, 1803, 1853, 0, 850,
	0, 660, 0, 665, 1161, 660, 289, 603, 604, 702,
	702, 566, 0, 325, 0, 1696, 329, 0, 0, 0,
	563, 319, 320, 321, 322, 323, 324, 0, 0, 826,
	0, 0, 315, 0, 283, 1759, 0, 0, 0, 0,
	0, 0, 153, 955, 155, 957, 159, 166, 0, 0,
	171, 172, 175, 176, 177, 178, 179, 0, 183, 0,
	185, 188, 0, 190, 191, 0, 194, 195, 196, 0,
	206, 207, 208, 958, 959, 960, -2, 84, 848, 1613,
	1501, 0, 1508, 1509, 1520, 1531, 1287, 1288, 1289, 1290,
	0, 0, 0, 0, 0, 1297, 1298, 0, 1315, 1869,
	1908, 0, 1305, 1306, 1307, 1308, 1309, 93, 105, 106,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 0, 1561, 1562,
	1563, 1474, 1274, 1207, 0, 1878, 0, 1898, 1903, 1904,
	1905, 1906, 1897, 0, 0, 1459, 0, 1449, 0, 0,
	-2, -2, 0, 0, 1828, -2, 1875, 1894, 1902, 1879,
	1901, 1871, 1872, 1873, 1866, 1867, 1868, 1870, 1880, 1882,
	1893, 0, 1889, 1899, 1900, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1465, -2, 1467, 1468, 1470, -2,
	1472, 1473, -2, 1476, 1477, 1478, -2, -2, 1481, 1482,
	1483, 1484, 1485, 1486, 1489, -2, -2, -2, -2, 1461,
	1462, 1463, 1464, 1453, 1454, 1455, 1456, 1457, 1458, -2,
	-2, -2, 702, 777, 0, -2, 0, 0, 0, 724,
	727, 730, 733, 0, 57, 58, 0, 278, 279, 267,
	269, 0, 273, 0, 266, 0, 0, 0, 0, 0,
	987, 987, 987, 987, 987, 0, 987, 0, 0, 0,
	0, 987, 878, 0, 962, 963, 964, 985, 986, 1049,
	0, 0, 0, 619, 615, 616, 617, 618, 690, 0,
	692, 695, 543, 543, 490, 0, 0, 0, 543, 0,
	504, 496, 0, 0, 0, 543, 0, 0, 697, 697,
	0, 546, 553, 543, 543, -2, 543, 543, 543, 0,
	0, 999, 510, 511, 512, 496, 496, 515, 516, 517,
	528, 529, 554, 1637, 0, 0, 435, 435, 0, 435,
	0, 435, 435, 435, 621, 1798, 1703, 1774, 1759, 0,
	0, 234, 1828, 239, 0, 1704, 1721, 0, 0, 1739,
	0, -2, 0, 305, 697, 0, 703, 0, 702, 0,
	0, 0, 0, 0, 435, 435, 435, 435, 435, 1048,
	435, 435, 435, 435, 435, 0, 0, 0, 435, 435,
	0, 0, 742, 743, 738, 739, 740, 744, 745, 5,
	6, 19, 0, 0, 0, 0, 0, 0, 63, 62,
	0, 1614, 1632, 1566, 1567, 1568, 1619, 1570, 1623, 1623,
	1623, 1623, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1623, 1623, 0, 0, 1612, 1590, 1621, 1621, 1621,
	1619, 1616, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1626, 1626, 1629, 1629,
	1626, 0, 1499, 0, 0, 0, 0, 664, 0, 0,
	697, -2, 0, 567, 326, 1211, 0, 0, 330, 331,
	0, 0, 346, 0, 349, 334, 335, 336, 0, 133,
	0, 317, 318, 0, 0, 285, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 163, 160, 167, 170,
	180, 187, 0, 199, 201, 204, 161, 168, 173, 174,
	181, 202, 162, 164, 165, 169, 203, 205, 182, 186,
	200, 184, 189, 192, 193, 198, 0, 134, 0, 0,
	0, 0, 0, 1507, 0, 0, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1501, 0, 0, 1293, 1294, 1295, 1296, 1299,
	0, 1316, 0, 0, 0, 0, 1560, 1564, 0, 1499,
	1499, 0, 1499, 1495, 0, 0, 0, 0, 0, 0,
	1499, 1435, 0, 0, 1437, 1450, 0, 0, 1439, 1440,
	0, 1443, 1444, 1499, 0, 1499, 1448, 1431, 1432, 0,
	1495, 1495, 1495, 0, 0, 1495, 1495, 1495, 1495, 1495,
	1495, 1495, 1495, 1495, 1495, 1495, 1495, 0, 0, 0,
	697, 0, 0, 685, 0, 666, 0, 721, 723, 0,
	725, 726, 728, 729, 731, 732, 734, 735, 59, 0,
	0, 0, 0, 271, 0, 276, 0, 847, 0, 0,
	863, 987, 879, 987, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 987, 987, 987, 0, 1007,
	0, 0, 0, 621, 620, 0, 691, 0, 0, 750,
	0, 0, 489, 0, 496, 543, 543, 502, 503, 498,
	497, 549, 550, 546, 0, 546, 546, 750, 0, 522,
	523, 524, 543, 543, 530, 698, 531, 532, 546, 0,
	551, 552, 750, 0, 0, 750, 750, 0, 540, 541,
	542, 0, 0, 987, 0, 559, 498, 498, 1638, 1639,
	0, 0, 996, 0, 0, 0, 562, 0, 0, 0,
	0, 622, 214, 217, 0, 220, 0, 1798, 0, 1798,
	0, 227, 0, 0, 0, 0, 0, 0, 257, 258,
	0, 0, 0, 0, 248, 251, 1155, 1156, 952, 953,
	252, 253, 297, 298, 0, 666, 720, 722, 716, 717,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 0, 0, 597, 0, 599, 0, 0,
	0, 758, 752, 754, 821, 93, 758, 8, 80, 77,
	0, 19, 0, 0, 19, 19, 0, 19, 262, 0,
	1635, 1633, 1634, 1569, 1620, 0, 1595, 0, 1596, 1597,
	1598, 1608, 1609, 0, 0, 1591, 0, 1592, 1593, 1594,
	1585, 0, 1586, 1587, 0, 1588, 1589, 260, 0, 1500,
	851, 0, 639, 652, 634, 0, 641, 0, 1162, 623,
	652, 625, 0, 641, 666, 688, 666, 0, 327, 0,
	332, 0, 0, 348, 350, 351, 352, 337, 338, 564,
	313, 314, 306, 307, 308, 309, 310, 311, 312, 316,
	103, 0, 286, 287, 0, 0, 0, 147, 148, 149,
	150, 151, 152, 154, 138, 586, 588, 944, 956, 0,
	947, 0, 157, 197, 130, 0, 0, 0, 1502, 1503,
	1504, 1505, 1506, 1510, 0, 1512, 1514, 1516, 1518, 0,
	1536, -2, -2, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1521, 1534, 1535, 0, 0,
	0, 0, 0, 0, 1532, 1532, 1527, 0, 1291, 0,
	1313, 1317, 0, 0, 0, 0, 94, 1494, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 0, 0, 1501,
	0, 0, 0, 1496, 1497, 0, 0, 0, 1390, 0,
	0, 1396, 1397, 1398, 0, 647, 0, 1460, 1436, 1451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 776,
	778, 0, 656, 658, 659, 0, 686, 699, 704, 705,
	708, 55, 60, 53, 1018, 280, 281, 0, 0, 275,
	0, -2, 865, 0, 0, 0, 0, 987, 0, 893,
	0, 433, 938, 0, 0, 0, 954, 977, 983, 0,
	0, 0, 0, 1022, 880, 885, 886, 887, 881, 882,
	888, 889, 0, 693, 0, 0, 790, 488, 0, 544,
	545, 493, 1759, 498, 750, 750, 505, 499, 506, 548,
	507, 508, 509, 0, 750, 750, 543, 546, 533, 547,
	546, 536, 537, 0, 555, 560, 556, 0, 558, 513,
	514, 1024, 695, 364, 365, 406, 406, 406, 389, 406,
	0, 0, 377, 1640, 0, 0, 0, 0, 386, 1640,
	0, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 0, 0,
	1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640,
	1640, 0, 1640, 1640, 1640, 1640, 1640, 1141, 1640, 0,
	997, 396, 397, 398, 399, 404, 405, 0, 430, 0,
	0, 0, 433, 0, 927, 763, 0, 764, 765, 761,
	792, 816, 816, 0, 816, 796, 1161, 0, 0, 225,
	226, 215, 0, 216, 0, 228, 229, 0, 231, 232,
	233, 240, 1703, 1774, 235, 237, 0, 0, 241, 254,
	255, 256, 0, 0, 246, 247, 0, 0, 300, 301,
	303, 0, 714, 1000, 1001, 1002, 583, 1159, 584, 585,
	589, 0, 0, 592, 593, 594, 595, 596, 865, 0,
	932, 933, 750, 0, 759, 0, 755, 822, 0, 824,
	0, 750, 0, 78, 19, 0, 71, 68, 0, 0,
	0, 0, 0, 1615, 1565, 1636, 0, 0, 0, 1617,
	0, 0, 0, 0, 61, 668, 630, 0, 633, 649,
	0, 653, 0, 0, 645, 638, 642, 0, 0, 662,
	624, 0, 0, 629, 714, 689, 1212, 0, 333, 347,
	0, 0, 0, 0, 141, 941, 0, 142, 146, 136,
	0, 0, 0, 946, 0, 943, 948, 0, 156, 0,
	0, 131, 132, 1012, 1018, 0, 0, 1511, 1513, 1515,
	1517, 1519, 0, 1522, 1532, 1532, 1528, 0, 1523, 0,
	1525, 0, 1502, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 1380, 1381, 0, 0, 1385, 0, 1387, 1388,
	1389, 1391, 0, 0, 0, 1395, 0, 1434, 1452, 1438,
	1441, 0, 1445, 0, 1447, 0, 702, 0, 0, 1355,
	1355, 1355, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 1311, 1312, 0,
	779, 668, 0, 0, 0, 711, 709, 710, 0, 1016,
	0, 282, 270, 272, 0, 0, 0, 853, 854, 856,
	0, 859, 860, 861, 0, 866, 867, 869, 870, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1688, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 864, 695, 695, 1098, 0, 900,
	1640, 988, 437, 0, 0, 940, 0, 916, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 608, 612, 23, 696, 0, 751, 491, 0, 492,
	543, 500, 501, 750, 1161, 525, 526, 750, 543, 543,
	546, 0, 557, 1026, 0, 0, 996, 367, 0, 1170,
	1171, 407, 0, 1177, 1186, 987, 1244, 0, 1186, 0,
	0, 1188, 1189, 0, 0, 0, 0, 390, 391, 0,
	376, 0, 0, 0, 0, 375, 0, 0, 417, 0,
	0, 0, 0, 1641, 1640, 1640, 0, 384, 385, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 1640, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1132, 0, 0, 0, 0, 0, 0, 0, 1147,
	1148, 900, 1640, 0, 0, 0, 437, 914, 923, 0,
	0, 0, 0, 0, 0, 783, 0, 0, 782, 0,
	0, 0, 0, 0, 695, 817, 0, 819, 820, 794,
	-2, 0, 763, 799, 1499, 218, 219, 0, 0, 224,
	242, 244, 0, 0, 0, 243, 245, 249, 250, 299,
	302, 304, 684, 0, 0, 0, 1050, 0, 600, 748,
	753, 760, 823, 825, 94, 756, 748, 0, 81, 19,
	80, 72, 73, 0, 19, 0, 0, 0, 0, 1625,
	1624, 1610, 0, 1611, 1622, 1627, 0, 1630, 0, 672,
	0, 0, 652, 654, 0, 0, 652, 0, 0, 661,
	0, 0, 652, 687, 0, 0, 565, 104, 353, 0,
	0, 0, 0, 0, 587, 0, 945, 138, 0, 0,
	158, 0, 0, 0, 1018, 1498, 1524, 1526, 0, 1533,
	1529, 1292, 1300, 1314, 0, 0, 1320, 1332, 1332, 0,
	0, 1323, 1623, 1623, 1326, 1619, 1621, 1619, 1332, 1332,
	0, 95, 0, 0, 1386, 0, 0, 0, 648, 0,
	0, 0, 1353, 1355, 1355, 1361, 1356, 1362, 1363, 1355,
	1355, 1355, 1355, 1368, 1355, 1355, 1355, 1355, 1355, 1355,
	1355, 1355, 1351, 657, 672, 700, 701, 706, 707, 0,
	54, 1018, 0, 274, 0, 0, 858, 0, 0, 0,
	871, 0, 0, 1163, 0, 0, 0, 904, 901, 902,
	903, 0, 935, 438, 439, 440, 441, 0, 0, 0,
	939, 0, 927, 909, 0, 0, 0, 978, 979, 980,
	981, 982, -2, 991, 0, 0, 0, 1163, 1163, 1163,
	1034, 0, 1023, 660, 0, -2, 0, 0, 610, 0,
	0, 791, 494, 750, 518, 0, 534, 750, 750, 543,
	561, 1034, 1025, 0, 366, 408, 0, 1176, 1201, 1187,
	1201, 1245, 1201, 1201, 987, 0, 408, 0, 0, 378,
	414, 0, 0, 0, 0, 374, 411, 708, 415, 416,
	418, 0, 420, 380, 392, 393, 394, 395, 0, 0,
	0, 387, 400, 401, 402, 403, 1109, 1110, 1111, 1114,
	1115, 1116, 1117, 0, 0, 1120, 1121, 1122, 1123, 1124,
	1198, 1199, 1200, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1149, 1150, 1151, 1152, 1153, 1154, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 0, 0, 1144, 0, 904, 0,
	0, 0, 0, 935, 916, 0, 926, 0, 928, 929,
	0, 0, 631, 750, 292, 0, 786, 780, 0, 769,
	784, 785, 772, 0, 774, 0, 770, 771, 750, 762,
	793, 818, 795, 798, 800, 801, 807, 0, 0, 0,
	0, 221, 222, 223, 230, 0, 457, 236, 715, 1160,
	590, 591, 1051, 1052, 598, 746, 0, 0, 746, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1618,
	0, 0, 674, 118, 0, 0, 0, 650, 0, 655,
	652, 637, 646, 636, 643, 644, 663, 652, 628, 627,
	1213, 328, 0, 942, 138, 143, 144, 145, 139, 137,
	949, 0, 951, 0, 1014, 0, 0, 1530, 1319, 1301,
	1321, 1333, 1334, 1322, 1302, 1303, 1324, 1325, 1327, 1328,
	1329, 1330, 1331, 1304, 1382, 0, 1384, 1392, 1393, 0,
	1442, 1446, 0, 0, 0, 1359, 1360, 1364, 1365, 1366,
	1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 702,
	1352, 0, 674, 712, 713, 1017, 1019, 846, 849, 855,
	857, 0, 868, 0, 0, 0, 0, 1164, 1165, 1167,
	1168, 1169, 0, 0, 1163, 877, 0, 0, 895, 896,
	906, 0, 0, 0, 443, 444, 0, 0, 0, 456,
	452, 453, 454, 434, 934, 923, 912, 0, 0, 922,
	0, 992, 1640, 1640, 1640, 0, 0, 1094, 1640, 1640,
	0, 0, 0, 1037, 0, 0, 1028, 0, 816, 0,
	0, 750, 609, 612, 613, 694, 495, 750, 538, 535,
	750, 1037, 363, 379, 409, 0, -2, 0, 1202, 0,
	1190, 1202, 0, 0, 1201, 0, 368, 408, 0, 0,
	0, 421, 424, 425, 422, 1240, 0, 423, 0, 413,
	419, 1112, 1113, 0, 1118, 1119, 0, 1143, 0, 0,
	426, 0, 0, 0, 427, 432, 909, 0, 924, 0,
	930, 931, 702, 0, 0, 766, 787, 0, 0, 767,
	0, 768, 773, 775, 291, 802, 0, 0, 804, 805,
	806, 797, 238, 736, 0, 0, 757, 737, 0, 19,
	0, 0, 69, 1628, 1631, 676, 0, 673, 119, 0,
	0, 0, 0, 651, 635, 626, 140, 135, 950, 121,
	0, 1015, 0, 1394, 0, 1355, 1354, 1348, 0, 676,
	0, 874, 872, 883, 883, 1098, 0, 1005, 0, 1100,
	1640, 1640, 0, 905, 894, 0, 936, 937, 0, 445,
	446, 0, 449, 455, 907, 908, 0, 0, 920, 0,
	0, 0, 0, 984, 998, 0, 0, 0, -2, 0,
	-2, 1043, 0, 1035, 0, 1027, 0, 1030, 750, 750,
	-2, 606, 611, 0, 519, 539, 1043, 410, 1203, -2,
	1216, 1218, 0, 997, 1221, 1222, 0, 0, 0, 0,
	0, 0, 1266, 1230, 0, 0, 1234, 1235, 1236, 0,
	0, 1239, 0, 1548, 1549, 0, 1243, 0, 0, 0,
	0, 0, 0, 0, 1184, 369, 370, 0, 372, 373,
	1241, 412, 1640, 382, 1142, 1145, 1146, 431, 428, 429,
	912, 915, 632, 697, 293, 294, 788, 0, 781, 811,
	808, 0, 0, 747, 749, 70, 75, 0, 0, 678,
	0, 675, 0, 669, 671, 129, 640, 91, 112, 0,
	0, 1383, 1433, 1358, 0, 1349, 0, 1343, 1344, 1345,
	1350, 678, 0, 875, 890, 876, 1003, 1166, 1099, 0,
	0, 0, 1098, 0, 0, 442, 447, 0, 450, 451,
	913, 910, 911, 0, 918, 0, 0, 973, 1619, 0,
	993, 994, 1157, 1158, 995, 1095, 1096, 1097, 1053, -2,
	1106, 0, 1009, 121, 1053, 1031, 0, 1038, 0, 1036,
	1029, 702, 607, 1040, 1217, 1219, 1220, 1223, 1224, 1225,
	1271, 1272, 1273, 0, 0, 1228, 1268, 1269, 1270, 1229,
	0, 0, 0, 0, 0, 1546, 1547, 1264, 0, 0,
	1191, 1193, 1194, 1195, 1196, 1197, 1192, 0, 0, 0,
	1183, 1185, 371, 0, 1640, 925, 290, 0, 0, 812,
	814, 809, 810, 65, 67, 82, 0, 677, 120, 0,
	83, 0, 109, 0, 122, 123, 0, 0, 0, 0,
	0, 1357, 1346, 0, 0, 0, 0, 0, 1550, 1551,
	1552, 0, 667, 0, 873, 0, 891, 892, 1101, 1102,
	1103, 1004, 897, 0, 899, 448, 917, 920, 0, 966,
	0, 708, 0, 1055, 0, 996, 1108, 1640, 1011, 1055,
	1021, 0, 1033, 0, 1045, 0, 1039, 697, 362, 0,
	1042, 1226, 1227, 0, 0, 1449, 1640, 0, 1259, 0,
	966, 966, 966, 966, 0, 381, 0, 789, 803, 0,
	0, 0, 92, 96, 0, 118, 115, 0, 124, 0,
	0, 0, 0, 1013, 0, 1335, 0, 0, 0, 1339,
	1340, 1341, 1342, 0, 0, 898, 919, 921, 965, 974,
	975, 708, 1008, 0, 1092, 1107, 0, 1010, 1032, 1044,
	0, 1047, 605, 1041, 1267, 0, 1233, 0, 1238, 1247,
	1260, 0, 0, 1172, 0, 1174, 0, 1178, 0, 1180,
	0, 0, 383, 813, 815, 0, 680, 670, 85, 0,
	0, 113, 114, 116, 0, 125, 0, 127, 128, 0,
	1336, 1337, 1338, 862, 884, 967, 1640, 0, 0, 971,
	972, 976, 0, 1080, 0, 0, 1086, 0, 1093, 1112,
	1046, 1231, 1237, 1246, 1248, 1249, 0, 1261, 1262, 1263,
	1265, 966, 966, 966, 966, 1182, 679, 0, 1020, 0,
	97, 0, 99, 101, 102, 1204, 110, 111, 117, 126,
	1347, 0, 969, 0, 1056, 0, 1058, 0, 0, 0,
	0, 0, 1090, 0, 1232, 1250, 0, 1251, 0, 0,
	0, 1173, 1175, 1179, 1181, 681, 86, 87, 0, 98,
	0, 0, 968, 970, 0, 1060, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 1252, 1254, 1255, 0, 0,
	1253, 0, 0, 100, 1205, 1057, 1054, 0, 1092, 1082,
	0, 1084, 0, 0, 0, 0, 1256, 1258, 1257, 88,
	89, 90, 0, 0, 1062, 0, 1078, 1083, 1085, 1087,
	0, 1091, 1089, 1206, 1061, 0, 1074, 1059, 0, 1088,
	1063, -2, 0, 1079, 1064, -2, 0, 1072, 0, 0,
	1065, 1073, 0, 1068, 0, 0, 0, 1067, 0, -2,
	1075, 0, 0, 1069, -2, 0, 1077, 1076,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 605,
	123, 122, 124, 3, 609, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 135, 607, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:759
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:766
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:772
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:786
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:790
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:815
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:820
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:824
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:902
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:908
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:923
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:929
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1030
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1036
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1065
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1088
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1094
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1128
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1139
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1149
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1174
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1224
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1235
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1239
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1255
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1265
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1312
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1316
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1325
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1340
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1347
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1352
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1359
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1368
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1392
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1408
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1426
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1443
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1479
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1483
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1629
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1633
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1655
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1659
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1898
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1902
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1931
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1945
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2012
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2035
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2045
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2093
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2188
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2192
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2208
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2212
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2218
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2380
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2402
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2406
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2584
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2588
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2594
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2656
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2665
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2669
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2691
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2701
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2720
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2739
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2778
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2782
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2786
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2790
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2794
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2811
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2842
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2846
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2872
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2876
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2882
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2963
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2967
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2974
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2994
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3002
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3015
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3021
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3032
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3065
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3085
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3089
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3147
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3152
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3207
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3228
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3239
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3243
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3321
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3325
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3341
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3345
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3372
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3374
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3383
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3402
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3523
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3527
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3532
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3536
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3542
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3559
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3570
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3574
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3590
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3594
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3600
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3610
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3649
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3658
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3676
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3680
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3718
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3740
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3746
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3761
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3779
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3807
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3820
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3831
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3835
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3841
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3846
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3853
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3855
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3858
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3867
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3876
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3885
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3898
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3906
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3913
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3920
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3940
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3950
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3954
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3960
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3967
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3973
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3981
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3995
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4014
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4018
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4027
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4031
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4037
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4046
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4056
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4060
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4066
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4070
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4081
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4092
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4096
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4103
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4118
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4122
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4128
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4154
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4168
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4186
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4222
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4235
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4239
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4244
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4248
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4255
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4260
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4267
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4281
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4285
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4299
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4315
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4319
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4337
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4346
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4356
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4360
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4369
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4375
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4385
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4391
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4400
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4413
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4426
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4438
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4442
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4456
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4559
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4591
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4626
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4630
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4634
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4660
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4665
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4669
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4688
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4694
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4698
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4703
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4707
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4712
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4720
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4726
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4734
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4752
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4776
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4795
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4799
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4809
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4813
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4817
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4821
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4837
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4841
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4847
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4863
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4869
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4873
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4877
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4887
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4893
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4907
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4927
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4940
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4952
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4983
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4987
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4993
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5003
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5007
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5011
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5020
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5024
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5037
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5041
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5045
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5049
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5054
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5058
		{
			yyVAL.str = yyDollar[1].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5062
		{
			yyVAL.str = yyDollar[2].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5068
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5078
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5082
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5086
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5096
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5145
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5151
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5157
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5167
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5172
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5189
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5237
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5242
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5259
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5265
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5275
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5279
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5285
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5297
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5306
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5318
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = yyDollar[1].str
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = "DEFINER = "
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5348
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5353
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5357
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5371
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5379
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5399
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5518
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5546
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5569
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5573
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5578
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5582
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5589
		{
			yyVAL.str = yyDollar[3].str
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5594
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5598
		{
			yyVAL.str = yyDollar[2].str
		}
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5618
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5650
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5668
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5677
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5802
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5806
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5812
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5822
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5826
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5832
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5842
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5850
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5855
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5859
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5865
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5878
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5887
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5894
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5903
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5907
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5913
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5935
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5940
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5944
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5948
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5952
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5958
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5981
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6003
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6007
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6011
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6015
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6025
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6029
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6035
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6049
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6053
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6057
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6061
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6067
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6082
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6092
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6105
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6111
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6115
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6121
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6125
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6129
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6144
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6159
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6177
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6195
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6213
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6224
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6235
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6256
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6268
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6290
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6297
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6307
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6317
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6325
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6336
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6340
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6345
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6349
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6380
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6394
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6402
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6412
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6426
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6433
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6444
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6448
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6456
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6474
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6492
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6508
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6515
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6522
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6545
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6562
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6576
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6594
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6607
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6613
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6617
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6623
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6646
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6652
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6656
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6662
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6669
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6678
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6682
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6691
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6696
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6700
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6705
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6709
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6719
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6723
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6734
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6742
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6750
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6758
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6769
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6778
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6788
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6798
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6802
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6807
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6811
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6817
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6821
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6827
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6831
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6840
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6850
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6856
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6860
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6918
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6922
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6926
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6938
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6942
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6946
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6950
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6954
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6958
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6962
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6966
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6970
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6978
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6982
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6986
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6990
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6994
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6998
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7002
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7006
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7010
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7014
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7018
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7022
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7026
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7032
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7036
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7042
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7048
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7052
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7058
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7062
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7066
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7070
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7074
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7078
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7092
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7096
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7105
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7110
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7127
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7133
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7137
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7141
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7147
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7151
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7157
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7175
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7198
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7223
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7237
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7243
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7252
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7261
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7270
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7279
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7289
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7303
		{
			yyVAL.str = ""
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7317
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7323
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7329
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7348
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7364
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7378
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7382
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7386
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7390
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7404
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7413
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7419
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7423
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7433
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7437
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7441
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7445
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7449
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7462
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7478
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7482
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7486
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7503
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7507
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7511
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7523
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7538
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7542
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7548
		{
			yyVAL.str = ""
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7552
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7558
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7570
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7577
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7584
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7591
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7598
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7607
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7613
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7619
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7623
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7627
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7635
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7664
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7669
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7673
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7689
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7699
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7703
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7707
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7711
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7715
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7719
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7723
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7727
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7731
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7735
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7739
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7743
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7749
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7753
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7757
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7769
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7773
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7777
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7781
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7789
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7793
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7798
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7806
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7810
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7814
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7818
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7827
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7831
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7835
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7839
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7843
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7857
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7878
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7887
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7893
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7897
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7903
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7912
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7924
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7996
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8025
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8040
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8057
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8072
		{
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8079
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8083
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8087
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8093
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8097
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8101
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8105
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8111
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8115
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8119
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8125
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8133
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8147
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8154
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8163
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8168
		{
			yyVAL.str = ","
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8172
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8184
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8210
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8279
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8289
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8299
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8339
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8359
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8416
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8424
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8432
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8458
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8467
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8475
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8483
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8491
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8520
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8543
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8565
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8601
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8613
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8625
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8636
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8651
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8670
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8688
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8698
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8706
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8717
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8726
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8735
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8743
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8753
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8761
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8775
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8804
		{
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8806
		{
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8858
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8862
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8866
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8872
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8881
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8891
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8898
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8902
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8906
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8914
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8918
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8922
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8926
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8932
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8936
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8940
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8944
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8952
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8980
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8984
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8988
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8992
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9000
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9004
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9008
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9022
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9028
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9032
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9039
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9043
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9047
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9053
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9057
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9061
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9065
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9069
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9073
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9077
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9083
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9087
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9091
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9095
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9101
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9114
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9119
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9125
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9129
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9142
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9147
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9151
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9155
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9159
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9163
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9170
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9174
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9188
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9192
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9199
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9210
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9215
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9233
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9245
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9296
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9309
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9322
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9335
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9374
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9387
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9402
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9429
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9471
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9507
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9572
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9592
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9612
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9648
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9687
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9712
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9736
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9748
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9760
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9772
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9796
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9834
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9847
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9860
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9875
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9883
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9892
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9925
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9930
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9936
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9943
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9947
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9952
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9956
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9962
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9968
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9975
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9982
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9991
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9998
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10005
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10022
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10028
		{
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10040
		{
			yyVAL.str = ""
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10044
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

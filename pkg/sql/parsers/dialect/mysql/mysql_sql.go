// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const LOW_CARDINALITY = 57671
const ADMIN_NAME = 57672
const RANDOM = 57673
const SUSPEND = 57674
const ATTRIBUTE = 57675
const HISTORY = 57676
const REUSE = 57677
const CURRENT = 57678
const OPTIONAL = 57679
const FAILED_LOGIN_ATTEMPTS = 57680
const PASSWORD_LOCK_TIME = 57681
const UNBOUNDED = 57682
const SECONDARY = 57683
const USER = 57684
const IDENTIFIED = 57685
const CIPHER = 57686
const ISSUER = 57687
const X509 = 57688
const SUBJECT = 57689
const SAN = 57690
const REQUIRE = 57691
const SSL = 57692
const NONE = 57693
const PASSWORD = 57694
const MAX_QUERIES_PER_HOUR = 57695
const MAX_UPDATES_PER_HOUR = 57696
const MAX_CONNECTIONS_PER_HOUR = 57697
const MAX_USER_CONNECTIONS = 57698
const FORMAT = 57699
const VERBOSE = 57700
const CONNECTION = 57701
const TRIGGERS = 57702
const PROFILES = 57703
const LOAD = 57704
const INFILE = 57705
const TERMINATED = 57706
const OPTIONALLY = 57707
const ENCLOSED = 57708
const ESCAPED = 57709
const STARTING = 57710
const LINES = 57711
const ROWS = 57712
const IMPORT = 57713
const FROM_JSONLINE = 57714
const MODUMP = 57715
const DATABASES = 57716
const TABLES = 57717
const EXTENDED = 57718
const FULL = 57719
const PROCESSLIST = 57720
const FIELDS = 57721
const COLUMNS = 57722
const OPEN = 57723
const ERRORS = 57724
const WARNINGS = 57725
const INDEXES = 57726
const SCHEMAS = 57727
const NAMES = 57728
const GLOBAL = 57729
const SESSION = 57730
const ISOLATION = 57731
const LEVEL = 57732
const READ = 57733
const WRITE = 57734
const ONLY = 57735
const REPEATABLE = 57736
const COMMITTED = 57737
const UNCOMMITTED = 57738
const SERIALIZABLE = 57739
const LOCAL = 57740
const EVENTS = 57741
const PLUGINS = 57742
const CURRENT_TIMESTAMP = 57743
const DATABASE = 57744
const CURRENT_TIME = 57745
const LOCALTIME = 57746
const LOCALTIMESTAMP = 57747
const UTC_DATE = 57748
const UTC_TIME = 57749
const UTC_TIMESTAMP = 57750
const REPLACE = 57751
const CONVERT = 57752
const SEPARATOR = 57753
const TIMESTAMPDIFF = 57754
const CURRENT_DATE = 57755
const CURRENT_USER = 57756
const CURRENT_ROLE = 57757
const SECOND_MICROSECOND = 57758
const MINUTE_MICROSECOND = 57759
const MINUTE_SECOND = 57760
const HOUR_MICROSECOND = 57761
const HOUR_SECOND = 57762
const HOUR_MINUTE = 57763
const DAY_MICROSECOND = 57764
const DAY_SECOND = 57765
const DAY_MINUTE = 57766
const DAY_HOUR = 57767
const YEAR_MONTH = 57768
const SQL_TSI_HOUR = 57769
const SQL_TSI_DAY = 57770
const SQL_TSI_WEEK = 57771
const SQL_TSI_MONTH = 57772
const SQL_TSI_QUARTER = 57773
const SQL_TSI_YEAR = 57774
const SQL_TSI_SECOND = 57775
const SQL_TSI_MINUTE = 57776
const RECURSIVE = 57777
const CONFIG = 57778
const DRAINER = 57779
const MATCH = 57780
const AGAINST = 57781
const BOOLEAN = 57782
const LANGUAGE = 57783
const WITH = 57784
const QUERY = 57785
const EXPANSION = 57786
const ADDDATE = 57787
const BIT_AND = 57788
const BIT_OR = 57789
const BIT_XOR = 57790
const CAST = 57791
const COUNT = 57792
const APPROX_COUNT_DISTINCT = 57793
const APPROX_PERCENTILE = 57794
const CURDATE = 57795
const CURTIME = 57796
const DATE_ADD = 57797
const DATE_SUB = 57798
const EXTRACT = 57799
const GROUP_CONCAT = 57800
const MAX = 57801
const MID = 57802
const MIN = 57803
const NOW = 57804
const POSITION = 57805
const SESSION_USER = 57806
const STD = 57807
const STDDEV = 57808
const STDDEV_POP = 57809
const STDDEV_SAMP = 57810
const SUBDATE = 57811
const SUBSTR = 57812
const SUBSTRING = 57813
const SUM = 57814
const SYSDATE = 57815
const SYSTEM_USER = 57816
const TRANSLATE = 57817
const TRIM = 57818
const VARIANCE = 57819
const VAR_POP = 57820
const VAR_SAMP = 57821
const AVG = 57822
const JSON_EXTRACT = 57823
const ARROW = 57824
const UNNEST = 57825
const GENERATE_SERIES = 57826
const ROW = 57827
const OUTFILE = 57828
const HEADER = 57829
const MAX_FILE_SIZE = 57830
const FORCE_QUOTE = 57831
const UNUSED = 57832
const BINDINGS = 57833
const DO = 57834
const DECLARE = 57835

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"MODUMP",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ARROW",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8020

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 80,
	21, 494,
	-2, 475,
	-1, 85,
	210, 683,
	-2, 727,
	-1, 102,
	42, 334,
	210, 334,
	237, 341,
	238, 341,
	401, 334,
	-2, 362,
	-1, 461,
	67, 1073,
	-2, 1573,
	-1, 462,
	67, 1091,
	-2, 1544,
	-1, 467,
	67, 1092,
	-2, 1572,
	-1, 488,
	67, 1006,
	-2, 1621,
	-1, 489,
	67, 1007,
	-2, 1620,
	-1, 490,
	67, 1583,
	-2, 1605,
	-1, 491,
	67, 1584,
	-2, 1606,
	-1, 492,
	67, 1585,
	-2, 1612,
	-1, 493,
	67, 1586,
	-2, 1595,
	-1, 494,
	67, 1587,
	-2, 1603,
	-1, 495,
	67, 1588,
	-2, 1613,
	-1, 496,
	67, 1589,
	-2, 1614,
	-1, 497,
	67, 1590,
	-2, 1619,
	-1, 498,
	67, 1591,
	-2, 1624,
	-1, 499,
	67, 1592,
	-2, 1625,
	-1, 503,
	67, 1070,
	-2, 1425,
	-1, 510,
	67, 1079,
	-2, 1451,
	-1, 514,
	67, 1083,
	-2, 1490,
	-1, 515,
	67, 1084,
	-2, 1568,
	-1, 523,
	67, 1094,
	-2, 1553,
	-1, 525,
	67, 1096,
	-2, 1563,
	-1, 537,
	67, 986,
	-2, 1615,
	-1, 538,
	67, 987,
	-2, 1616,
	-1, 539,
	67, 988,
	-2, 1617,
	-1, 546,
	21, 495,
	-2, 458,
	-1, 588,
	396, 362,
	397, 362,
	-2, 335,
	-1, 630,
	103, 1425,
	114, 1425,
	133, 1425,
	-2, 1231,
	-1, 667,
	21, 495,
	-2, 458,
	-1, 765,
	21, 494,
	-2, 914,
	-1, 1067,
	67, 1139,
	-2, 1570,
	-1, 1068,
	67, 1140,
	-2, 1571,
	-1, 1222,
	1, 709,
	68, 709,
	511, 709,
	-2, 716,
	-1, 1339,
	133, 1241,
	-2, 1239,
	-1, 1341,
	133, 626,
	-2, 1236,
	-1, 1342,
	133, 627,
	-2, 1237,
	-1, 1629,
	1, 710,
	68, 710,
	511, 710,
	-2, 716,
	-1, 1680,
	21, 494,
	-2, 585,
	-1, 1840,
	65, 406,
	134, 406,
	-2, 819,
	-1, 2080,
	87, 716,
	129, 716,
	166, 716,
	169, 716,
	-2, 767,
	-1, 2082,
	271, 882,
	-2, 861,
	-1, 2112,
	65, 406,
	134, 406,
	-2, 820,
	-1, 2148,
	87, 716,
	129, 716,
	166, 716,
	169, 716,
	-2, 768,
	-1, 2176,
	271, 882,
	-2, 862,
	-1, 2578,
	68, 739,
	134, 739,
	-2, 716,
	-1, 2583,
	68, 739,
	134, 739,
	-2, 716,
	-1, 2599,
	68, 743,
	134, 743,
	-2, 716,
	-1, 2604,
	68, 744,
	134, 744,
	-2, 716,
}

const yyPrivate = 57344

const yyLast = 27205

var yyAct = [...]int{
	433, 2583, 1131, 2585, 2592, 2582, 2555, 412, 1048, 2215,
	2421, 414, 2543, 2501, 435, 2458, 1677, 2188, 2486, 2390,
	2485, 2394, 2370, 2134, 2144, 1613, 2213, 791, 2074, 1300,
	2378, 914, 1044, 2214, 547, 123, 120, 120, 459, 1178,
	960, 2132, 120, 352, 359, 1673, 359, 1265, 2198, 2105,
	1976, 447, 80, 2235, 2177, 629, 357, 29, 1843, 1227,
	1051, 2197, 1972, 1708, 1858, 363, 901, 1325, 2086, 1257,
	1288, 821, 1520, 1977, 2051, 890, 2030, 1318, 542, 406,
	1879, 1992, 1636, 119, 119, 1987, 1970, 661, 575, 343,
	1672, 342, 1981, 369, 80, 1229, 1936, 1188, 411, 1181,
	1327, 1516, 1336, 1339, 1202, 1326, 1319, 1894, 1515, 1281,
	542, 1857, 1818, 3, 1816, 633, 1661, 1813, 1260, 120,
	1635, 1238, 636, 39, 1630, 356, 18, 1218, 353, 8,
	354, 6, 903, 656, 1547, 2152, 827, 355, 7, 1517,
	1210, 982, 1042, 415, 1258, 631, 1285, 1622, 79, 1619,
	1240, 1251, 657, 345, 655, 1047, 1239, 1250, 591, 1527,
	1095, 423, 1081, 635, 1531, 39, 663, 80, 1033, 1601,
	348, 678, 29, 1675, 1322, 1304, 1214, 1041, 621, 1682,
	407, 1217, 872, 1246, 929, 574, 939, 544, 1130, 371,
	15, 1100, 1101, 622, 9, 915, 546, 952, 1193, 358,
	4, 981, 584, 110, 2596, 113, 372, 572, 2569, 1534,
	2467, 2136, 1524, 115, 2242, 114, 1709, 35, 104, 86,
	2073, 1206, 1321, 545, 792, 2449, 697, 2206, 1729, 654,
	1737, 114, 114, 1121, 114, 109, 1521, 114, 39, 941,
	2439, 18, 98, 341, 8, 361, 6, 888, 1532, 116,
	731, 78, 114, 7, 35, 104, 86, 926, 911, 927,
	634, 114, 1269, 1270, 920, 921, 64, 114, 1911, 1804,
	1904, 541, 111, 601, 114, 2474, 35, 104, 86, 1242,
	114, 1000, 35, 104, 86, 730, 413, 993, 111, 111,
	942, 111, 2472, 1050, 111, 729, 987, 997, 532, 1815,
	531, 533, 534, 990, 535, 536, 2489, 2490, 724, 111,
	2462, 2463, 641, 640, 642, 1018, 2233, 1963, 999, 2323,
	712, 2326, 713, 1034, 992, 1038, 705, 2244, 707, 918,
	2075, 111, 917, 920, 921, 2393, 1964, 111, 1965, 1052,
	105, 106, 639, 107, 108, 120, 671, 1724, 1814, 1037,
	715, 2236, 2237, 2238, 2239, 670, 708, 672, 681, 1282,
	2063, 359, 2094, 120, 368, 1274, 1029, 2001, 1528, 2448,
	2101, 1993, 1117, 605, 1620, 1114, 666, 668, 2003, 1116,
	1113, 1115, 1119, 1120, 2303, 1927, 1598, 1118, 2195, 644,
	2211, 1925, 669, 1121, 1177, 1176, 726, 727, 728, 1734,
	700, 80, 80, 635, 2306, 637, 2476, 85, 103, 112,
	688, 62, 1278, 710, 2208, 2499, 1039, 1998, 1999, 701,
	767, 360, 2297, 2574, 564, 665, 909, 102, 97, 96,
	606, 2488, 2000, 681, 41, 1036, 2593, 548, 2451, 2452,
	703, 1537, 1539, 1540, 85, 2509, 112, 1829, 1830, 1831,
	1832, 402, 706, 709, 403, 2471, 2419, 2420, 667, 2423,
	692, 1533, 638, 2423, 102, 2516, 2446, 928, 1821, 765,
	711, 1997, 39, 39, 2392, 2290, 702, 2379, 2380, 2381,
	2383, 2382, 2566, 366, 2259, 2258, 405, 404, 722, 723,
	889, 99, 100, 2478, 2479, 2429, 2594, 2546, 1827, 948,
	634, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1124, 1125, 1126, 1127, 1128, 1129, 1122, 1123,
	674, 675, 643, 2285, 947, 72, 683, 682, 690, 101,
	714, 73, 1117, 1035, 933, 1114, 704, 2556, 906, 1116,
	1113, 1115, 1119, 1120, 566, 913, 912, 1118, 632, 2247,
	662, 1522, 1548, 1522, 563, 562, 1059, 1062, 1063, 891,
	686, 1522, 2587, 1995, 697, 367, 634, 1060, 2321, 2601,
	940, 689, 602, 1730, 575, 557, 1690, 1525, 869, 1212,
	894, 1932, 2355, 1930, 74, 896, 772, 362, 2568, 738,
	2466, 2135, 898, 75, 1272, 34, 1881, 1883, 766, 1887,
	877, 683, 682, 1687, 920, 921, 774, 2450, 919, 2281,
	2477, 2547, 1136, 945, 1835, 916, 1686, 910, 717, 560,
	718, 920, 921, 1985, 542, 542, 542, 778, 1271, 964,
	964, 36, 892, 893, 1273, 895, 1938, 1937, 555, 676,
	1689, 1688, 696, 608, 1994, 359, 985, 985, 720, 1535,
	988, 604, 2391, 1523, 603, 1283, 609, 2004, 1538, 2304,
	1928, 962, 962, 968, 87, 995, 2207, 943, 944, 1738,
	966, 561, 1124, 1125, 1126, 1127, 1128, 1129, 1122, 1123,
	87, 87, 2586, 87, 970, 1016, 87, 2528, 342, 1710,
	36, 732, 1717, 802, 803, 556, 36, 964, 1001, 964,
	671, 87, 1275, 1030, 2212, 768, 769, 770, 771, 1049,
	87, 716, 907, 80, 76, 77, 87, 80, 991, 923,
	924, 733, 998, 87, 1982, 1985, 2286, 2287, 80, 87,
	1820, 691, 2600, 2544, 2545, 1836, 1996, 80, 569, 570,
	571, 2607, 1025, 874, 1986, 721, 1011, 1012, 1882, 1277,
	930, 546, 930, 800, 876, 565, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 719, 2606,
	2597, 1090, 1091, 1061, 1575, 2575, 1230, 1574, 1099, 632,
	934, 900, 1824, 1825, 697, 1699, 1841, 1146, 922, 1624,
	1230, 925, 2013, 1053, 2570, 602, 1823, 1152, 549, 39,
	1046, 2356, 2358, 2359, 2360, 2357, 1154, 733, 39, 1158,
	1159, 1024, 2559, 2558, 1021, 612, 1020, 955, 956, 957,
	1031, 542, 1712, 946, 958, 959, 984, 984, 2283, 2503,
	2081, 1027, 2282, 2496, 1015, 733, 2598, 2253, 969, 1064,
	341, 1530, 1014, 733, 980, 1607, 1986, 1007, 986, 1670,
	1002, 1979, 1043, 2491, 2480, 1980, 1983, 647, 652, 653,
	2571, 1842, 611, 1307, 1003, 2468, 614, 613, 2444, 1199,
	1184, 1185, 1729, 1032, 604, 2443, 1023, 603, 1530, 1530,
	1022, 546, 2442, 1623, 694, 1040, 1019, 1145, 1192, 2441,
	695, 1215, 2431, 964, 1671, 2504, 1222, 2314, 1557, 2308,
	575, 1200, 2313, 1228, 1045, 1842, 964, 1984, 2027, 1671,
	1699, 1221, 1521, 870, 1054, 1055, 1056, 1057, 1058, 2308,
	1699, 1612, 1083, 735, 736, 737, 734, 1247, 1247, 1183,
	1252, 2469, 2307, 2230, 2308, 1252, 2228, 1595, 1215, 964,
	120, 2308, 1203, 2049, 1190, 1191, 1579, 1512, 2308, 1245,
	542, 2047, 964, 1671, 695, 2308, 1097, 1098, 2432, 899,
	2552, 1133, 2045, 2315, 1213, 1876, 1140, 1556, 1640, 1132,
	1093, 1135, 1223, 1134, 1215, 964, 1147, 1299, 120, 120,
	949, 1800, 1305, 2505, 1798, 1309, 1153, 1220, 1155, 120,
	2115, 1266, 697, 1146, 1146, 1329, 656, 1156, 2308, 2231,
	1146, 1146, 2229, 1234, 1249, 1796, 1794, 1783, 1302, 733,
	735, 736, 737, 734, 1173, 657, 1743, 2048, 1315, 1243,
	1244, 1341, 649, 650, 651, 1301, 1301, 2100, 2046, 1228,
	750, 1671, 1727, 964, 2014, 1721, 1301, 1719, 1714, 1896,
	1342, 1844, 1279, 1732, 635, 1236, 1237, 1801, 1219, 1089,
	1799, 635, 1204, 1284, 1957, 1731, 1208, 1207, 1201, 1211,
	80, 1232, 1723, 930, 1195, 1235, 1198, 1654, 1333, 1298,
	2018, 1795, 1795, 733, 1571, 1330, 1241, 1639, 1608, 1582,
	1581, 1758, 733, 1529, 1224, 1225, 1558, 1542, 1513, 937,
	938, 1233, 1253, 1324, 1219, 1545, 1546, 1008, 1640, 1511,
	1324, 1715, 1294, 1720, 1715, 1292, 1293, 867, 864, 865,
	866, 1248, 1312, 1763, 1254, 1762, 1761, 1759, 1004, 1256,
	1255, 973, 974, 975, 976, 977, 978, 979, 1280, 868,
	1043, 39, 777, 1204, 1303, 684, 765, 664, 1924, 1204,
	1204, 634, 1922, 1640, 1607, 733, 733, 904, 634, 1530,
	1296, 1295, 1297, 1289, 1290, 1291, 753, 754, 755, 756,
	757, 750, 1313, 1009, 1519, 931, 1586, 1138, 1137, 1611,
	2581, 610, 953, 2541, 1331, 2532, 1760, 567, 1340, 1509,
	2529, 1510, 951, 954, 1334, 1817, 1335, 2433, 2329, 1923,
	2028, 1231, 751, 752, 753, 754, 755, 756, 757, 750,
	1514, 749, 748, 758, 759, 751, 752, 753, 754, 755,
	756, 757, 750, 120, 120, 1518, 1931, 1718, 1536, 1692,
	1577, 673, 1749, 1096, 120, 1637, 734, 1541, 1088, 1096,
	2180, 1553, 1811, 634, 1252, 1216, 120, 735, 736, 737,
	734, 2293, 352, 1086, 1087, 1085, 1555, 1083, 1543, 2292,
	1252, 2090, 2172, 1774, 2190, 1552, 656, 1164, 737, 734,
	1616, 1618, 950, 932, 2085, 120, 1900, 2183, 2318, 2319,
	2276, 1633, 2565, 2178, 1550, 657, 2366, 1554, 2193, 2194,
	615, 1610, 607, 1645, 2179, 1988, 1632, 735, 736, 737,
	734, 2316, 2317, 1764, 1765, 964, 1751, 2364, 1678, 1678,
	1950, 1678, 735, 736, 737, 734, 985, 2580, 120, 2562,
	2588, 1703, 2526, 1705, 2365, 2564, 1680, 1564, 2510, 2184,
	1565, 2407, 1569, 2154, 2576, 2362, 2372, 1697, 735, 736,
	737, 734, 1646, 1647, 1681, 2363, 2352, 2209, 1580, 2350,
	2098, 1583, 1584, 1585, 2349, 1949, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 2348, 1679, 1596, 1683, 1603, 1631, 1266,
	1614, 1615, 1650, 2361, 1652, 2345, 1150, 735, 736, 737,
	734, 1648, 2339, 1544, 2351, 2210, 1151, 1702, 2099, 1625,
	2248, 758, 759, 751, 752, 753, 754, 755, 756, 757,
	750, 1644, 2336, 2335, 1649, 1651, 1653, 1139, 2097, 2002,
	1700, 1655, 1241, 1657, 1656, 2192, 1961, 1978, 1960, 1707,
	1918, 1641, 1898, 634, 735, 736, 737, 734, 1157, 1606,
	1605, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 2186, 1561, 1604, 2483, 1693, 1694, 1695, 741,
	742, 743, 744, 745, 746, 747, 739, 1701, 1600, 2553,
	1599, 1745, 1005, 2506, 2185, 2187, 2158, 735, 736, 737,
	734, 735, 736, 737, 734, 402, 2498, 2162, 403, 2482,
	1204, 1204, 1204, 749, 748, 758, 759, 751, 752, 753,
	754, 755, 756, 757, 750, 1567, 984, 2151, 2371, 2145,
	2464, 2153, 2155, 2157, 2563, 2159, 2160, 2161, 2163, 2164,
	2165, 2167, 2168, 2169, 2170, 658, 659, 660, 735, 736,
	737, 734, 1725, 2427, 2426, 2414, 2353, 2346, 2195, 2342,
	2341, 2340, 964, 2305, 964, 2278, 964, 2243, 2240, 2143,
	2181, 671, 2141, 2128, 2173, 2127, 2191, 2108, 1566, 2096,
	1739, 749, 748, 758, 759, 751, 752, 753, 754, 755,
	756, 757, 750, 2095, 2092, 2397, 1735, 2065, 964, 1767,
	735, 736, 737, 734, 1959, 1929, 1899, 1890, 1791, 2171,
	2302, 1741, 1775, 1609, 800, 2599, 964, 735, 736, 737,
	734, 2139, 487, 486, 2572, 1777, 2150, 2138, 1602, 1314,
	962, 1172, 735, 736, 737, 734, 2068, 1006, 1766, 801,
	796, 2006, 795, 735, 736, 737, 734, 1953, 962, 735,
	736, 737, 734, 2434, 1952, 2166, 1776, 2404, 735, 736,
	737, 734, 2156, 2403, 964, 2402, 2401, 1753, 1951, 735,
	736, 737, 734, 2109, 1736, 1840, 735, 736, 737, 734,
	114, 1846, 2080, 104, 86, 2071, 2070, 2058, 1747, 2050,
	735, 736, 737, 734, 1728, 1854, 1726, 2019, 1958, 671,
	120, 120, 120, 120, 1733, 1955, 1948, 1940, 1859, 1935,
	1797, 671, 120, 550, 551, 552, 553, 1043, 1802, 1744,
	1859, 1790, 1838, 1810, 1793, 671, 549, 1834, 1886, 1792,
	80, 964, 1587, 1757, 1885, 29, 1578, 111, 2595, 120,
	120, 1576, 1789, 735, 736, 737, 734, 1573, 1572, 1570,
	1678, 1266, 1266, 1266, 1266, 1563, 1146, 1560, 1146, 1559,
	1875, 1910, 1149, 1266, 735, 736, 737, 734, 1148, 971,
	964, 2540, 2534, 2517, 1750, 972, 2514, 1847, 114, 1874,
	1916, 1849, 1768, 1769, 1850, 2512, 1892, 1893, 1772, 1773,
	793, 1826, 1845, 1807, 1833, 1839, 2406, 2388, 2376, 1917,
	1778, 39, 2373, 2368, 18, 1631, 80, 8, 2330, 6,
	1856, 1905, 1180, 80, 1855, 1853, 7, 1848, 1912, 1219,
	2300, 2299, 1872, 1851, 1203, 1852, 1871, 2298, 1204, 1909,
	1873, 1805, 1806, 1211, 1907, 111, 546, 2295, 1941, 1888,
	1913, 1943, 1891, 1945, 1860, 1861, 1862, 1863, 2289, 1926,
	2274, 902, 2123, 671, 2121, 1897, 1906, 1991, 1903, 1901,
	2103, 2091, 1975, 1908, 1921, 1189, 1914, 1915, 1182, 120,
	1837, 1920, 1812, 1713, 1691, 1746, 1685, 1684, 671, 1638,
	1084, 111, 120, 1637, 1933, 2017, 1788, 1975, 1194, 1197,
	1187, 2037, 1939, 1186, 1028, 994, 761, 871, 764, 1942,
	1944, 1946, 1947, 819, 2522, 2538, 2296, 1787, 735, 736,
	737, 734, 818, 762, 763, 760, 2007, 749, 748, 758,
	759, 751, 752, 753, 754, 755, 756, 757, 750, 735,
	736, 737, 734, 1266, 1204, 817, 816, 1767, 815, 1204,
	748, 758, 759, 751, 752, 753, 754, 755, 756, 757,
	750, 2015, 749, 748, 758, 759, 751, 752, 753, 754,
	755, 756, 757, 750, 2011, 2016, 2012, 814, 813, 812,
	811, 120, 1934, 120, 810, 809, 808, 807, 2025, 2035,
	806, 2024, 1786, 805, 2020, 804, 799, 2021, 2022, 2008,
	2009, 2010, 798, 2026, 797, 1954, 794, 790, 789, 2039,
	787, 786, 785, 2056, 735, 736, 737, 734, 2038, 784,
	120, 783, 2055, 1549, 2042, 2043, 2044, 782, 2064, 2084,
	2066, 781, 2059, 780, 779, 776, 2023, 775, 699, 2060,
	2031, 2032, 1643, 1627, 2062, 749, 748, 758, 759, 751,
	752, 753, 754, 755, 756, 757, 750, 1785, 2520, 964,
	964, 1784, 687, 2061, 120, 2112, 2487, 2079, 2034, 1828,
	80, 1782, 1698, 1317, 698, 2078, 2036, 1865, 671, 735,
	736, 737, 734, 735, 736, 737, 734, 1859, 2126, 1864,
	2125, 962, 2106, 735, 736, 737, 734, 2082, 1678, 2104,
	2083, 2089, 2579, 1722, 1868, 1781, 2130, 2088, 1146, 1869,
	1716, 2117, 1866, 1966, 1967, 1266, 1870, 1867, 1667, 1668,
	1809, 1780, 1632, 2087, 2124, 2087, 2114, 735, 736, 737,
	734, 1174, 671, 2111, 2149, 1711, 2199, 2201, 1742, 2199,
	2199, 1975, 2118, 735, 736, 737, 734, 63, 1740, 2119,
	1614, 1615, 1969, 2110, 671, 1779, 2536, 38, 2137, 873,
	1621, 2113, 693, 2245, 1968, 1226, 2455, 1771, 936, 2116,
	1138, 1137, 1228, 935, 2224, 2131, 725, 735, 736, 737,
	734, 2067, 37, 2196, 875, 2200, 2140, 338, 2069, 735,
	736, 737, 734, 117, 2174, 2041, 2146, 339, 1508, 2221,
	2202, 2203, 2249, 749, 748, 758, 759, 751, 752, 753,
	754, 755, 756, 757, 750, 549, 2204, 1770, 885, 886,
	2218, 2114, 340, 883, 884, 1748, 881, 882, 905, 1092,
	337, 2222, 879, 880, 2535, 964, 2411, 2409, 2277, 735,
	736, 737, 734, 2333, 2331, 1658, 120, 735, 736, 737,
	734, 735, 736, 737, 734, 2201, 2219, 2220, 2252, 1204,
	2328, 2327, 2120, 2325, 2227, 2122, 2226, 2106, 1663, 1666,
	1667, 1668, 1664, 2142, 1665, 1669, 2077, 2196, 2076, 2053,
	878, 2275, 2052, 2129, 2279, 1663, 1666, 1667, 1668, 1664,
	1895, 1665, 1669, 2294, 550, 551, 552, 553, 1230, 2524,
	2523, 2523, 2334, 2301, 2312, 2309, 1919, 549, 1562, 685,
	2311, 2524, 2291, 2057, 908, 2250, 2251, 45, 2254, 2255,
	2256, 2257, 2205, 2367, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2324, 1,
	1316, 1877, 1878, 2040, 1880, 1526, 671, 80, 1678, 671,
	671, 671, 2332, 2093, 2005, 1989, 897, 568, 2347, 671,
	1141, 887, 1013, 646, 680, 1010, 2399, 679, 677, 1094,
	449, 1320, 2377, 2369, 2223, 2385, 2386, 2387, 2384, 2454,
	2374, 2416, 2500, 2405, 2457, 2396, 1026, 434, 964, 964,
	2320, 1962, 2395, 2232, 2398, 2322, 2234, 1803, 2133, 1902,
	2410, 2408, 2412, 2413, 580, 481, 2417, 457, 788, 996,
	989, 648, 456, 2102, 1822, 554, 645, 2337, 2338, 120,
	962, 962, 581, 2343, 2344, 1597, 2072, 671, 2424, 2425,
	1175, 1196, 1179, 2591, 2578, 2554, 2533, 2422, 2573, 671,
	2470, 2515, 2508, 2418, 2246, 373, 1276, 2310, 2430, 540,
	619, 2389, 2436, 2440, 374, 1642, 2447, 2461, 2375, 558,
	1626, 559, 1629, 1628, 1065, 2445, 1301, 740, 1082, 773,
	410, 2460, 1551, 2453, 749, 748, 758, 759, 751, 752,
	753, 754, 755, 756, 757, 750, 2465, 1956, 422, 416,
	1819, 2189, 1889, 2473, 2475, 44, 43, 42, 1308, 1337,
	451, 122, 1338, 2415, 2241, 2481, 2459, 432, 431, 430,
	429, 428, 1662, 2492, 2493, 2494, 2495, 2502, 1660, 1659,
	2507, 1262, 1261, 1306, 2484, 2437, 2438, 2288, 2354, 2284,
	2511, 2280, 2513, 2428, 749, 748, 758, 759, 751, 752,
	753, 754, 755, 756, 757, 750, 2148, 2147, 2175, 2176,
	2182, 826, 822, 2518, 2519, 2461, 2531, 2521, 824, 825,
	823, 1756, 1752, 671, 2525, 671, 2527, 1973, 1974, 2460,
	2530, 2537, 1049, 2539, 1049, 2542, 1971, 2033, 2029, 1328,
	1209, 1808, 1263, 1259, 2217, 543, 5, 2548, 28, 27,
	2502, 671, 2549, 26, 14, 13, 2557, 1017, 12, 2561,
	1049, 17, 25, 2567, 2435, 24, 23, 22, 71, 70,
	69, 68, 21, 2497, 11, 67, 66, 65, 20, 19,
	60, 61, 55, 54, 53, 579, 52, 51, 2577, 50,
	49, 59, 58, 57, 56, 48, 47, 2590, 46, 2589,
	84, 83, 82, 81, 30, 31, 32, 33, 2602, 94,
	93, 2604, 95, 2603, 2605, 91, 89, 92, 2590, 1453,
	1495, 90, 88, 1442, 288, 1400, 1455, 1373, 1389, 1463,
	1390, 1391, 1428, 1352, 1410, 250, 1387, 40, 10, 16,
	2, 0, 0, 1445, 1344, 1376, 1377, 1346, 1383, 1347,
	1374, 1402, 195, 1372, 1413, 220, 1425, 1386, 1407, 1461,
	0, 0, 280, 234, 0, 0, 1405, 1447, 1408, 1433,
	1399, 1429, 1360, 1421, 1456, 1388, 0, 1426, 1457, 0,
	0, 0, 0, 658, 659, 660, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 1424, 1451, 1385, 0,
	179, 1454, 1406, 1427, 0, 0, 1345, 1422, 0, 1350,
	1353, 1462, 1449, 1380, 1381, 0, 0, 0, 0, 0,
	2551, 0, 0, 1403, 1409, 1430, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1378, 0, 1418, 0,
	0, 0, 1355, 1351, 0, 1401, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	1494, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 1354,
	309, 172, 1489, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 1473, 1474, 1475, 1476, 1477, 1485,
	1486, 0, 1490, 1491, 1492, 1359, 0, 1379, 1431, 0,
	1343, 1440, 1448, 1398, 311, 1450, 1395, 1394, 1480, 0,
	1479, 284, 1481, 1482, 219, 1446, 1375, 1384, 327, 1382,
	270, 252, 1452, 1417, 1493, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 1478, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	1487, 0, 1488, 323, 202, 161, 306, 0, 248, 0,
	1443, 1348, 1358, 1356, 1392, 1419, 1420, 244, 322, 1435,
	1439, 1436, 1464, 273, 0, 0, 0, 0, 0, 213,
	254, 1437, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 0, 281, 304, 316, 333, 336,
	1496, 1497, 1498, 165, 335, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 307, 1393, 1366, 1404, 315, 1369, 1367, 1434,
	1368, 1423, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 1414, 1397, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1415, 0, 1507, 1371, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 1441, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 1365, 1370, 1364, 1411, 1412, 1458, 1459, 1460, 1432,
	1357, 1444, 0, 1361, 1363, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1438, 0, 0, 1416, 162,
	0, 221, 1465, 262, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 1483, 1484, 319, 320, 321,
	305, 424, 192, 1506, 0, 195, 0, 0, 220, 0,
	0, 0, 455, 0, 0, 280, 234, 0, 0, 0,
	0, 511, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 448, 487, 486, 436,
	445, 0, 0, 176, 437, 0, 444, 438, 442, 441,
	439, 440, 0, 503, 0, 0, 0, 0, 0, 0,
	408, 421, 0, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 419, 0, 0, 0,
	0, 464, 0, 420, 0, 0, 466, 0, 446, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 443, 462, 467,
	188, 525, 460, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 526, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 311, 0, 0,
	509, 0, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 461, 0, 270, 252, 522, 409, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 1143, 1142, 1144, 323, 202, 161, 306,
	507, 248, 0, 521, 502, 504, 505, 508, 512, 513,
	514, 515, 516, 518, 520, 524, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 465, 238, 239, 240, 241,
	510, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 201,
	207, 0, 209, 180, 253, 203, 313, 216, 0, 245,
	212, 278, 217, 223, 266, 312, 251, 271, 178, 303,
	279, 227, 0, 0, 532, 506, 531, 533, 534, 530,
	535, 536, 517, 427, 0, 470, 528, 527, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 221, 0, 262, 200, 493, 474,
	475, 476, 426, 477, 472, 473, 494, 468, 490, 491,
	450, 453, 478, 139, 479, 492, 495, 496, 537, 538,
	539, 482, 497, 489, 488, 480, 469, 498, 499, 454,
	452, 483, 484, 471, 485, 0, 500, 501, 288, 463,
	319, 320, 321, 305, 0, 192, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 195, 1205, 0, 220,
	0, 0, 0, 455, 0, 0, 280, 234, 0, 0,
	0, 0, 511, 519, 0, 0, 0, 0, 0, 0,
	0, 1286, 0, 0, 417, 0, 0, 448, 487, 486,
	436, 445, 0, 0, 176, 437, 0, 444, 438, 442,
	441, 439, 440, 0, 503, 0, 0, 0, 0, 0,
	0, 408, 421, 0, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 419, 0, 0,
	0, 0, 464, 0, 420, 0, 0, 1287, 0, 446,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 443, 462,
	467, 188, 525, 460, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 526,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 311, 0,
	0, 509, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 461, 0, 270, 252, 522, 409, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 507, 248, 0, 521, 502, 504, 505, 508, 512,
	513, 514, 515, 516, 518, 520, 524, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 465, 238, 239, 240,
	241, 510, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 532, 506, 531, 533, 534,
	530, 535, 536, 517, 427, 0, 470, 528, 527, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 493,
	474, 475, 476, 426, 477, 472, 473, 494, 468, 490,
	491, 450, 453, 478, 139, 479, 492, 495, 496, 537,
	538, 539, 482, 497, 489, 488, 480, 469, 498, 499,
	454, 452, 483, 484, 471, 485, 0, 500, 501, 0,
	0, 319, 320, 321, 305, 0, 192, 114, 288, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 455, 0, 0, 280, 234, 0, 0,
	0, 0, 511, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 417, 0, 0, 448, 487, 486,
	436, 445, 0, 0, 176, 437, 0, 444, 438, 442,
	441, 439, 440, 0, 503, 0, 0, 0, 0, 0,
	0, 408, 421, 0, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 419, 0, 0,
	0, 0, 464, 0, 420, 0, 0, 466, 0, 446,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 443, 462,
	467, 188, 525, 460, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 526,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 311, 0,
	0, 509, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 461, 0, 270, 252, 522, 409, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 507, 248, 0, 521, 502, 504, 505, 508, 512,
	513, 514, 515, 516, 518, 520, 524, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 465, 238, 239, 240,
	241, 510, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 532, 506, 531, 533, 534,
	530, 535, 536, 517, 427, 0, 470, 528, 527, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 87, 262, 200, 493,
	474, 475, 476, 426, 477, 472, 473, 494, 468, 490,
	491, 450, 453, 478, 139, 479, 492, 495, 496, 537,
	538, 539, 482, 497, 489, 488, 480, 469, 498, 499,
	454, 452, 483, 484, 471, 485, 0, 500, 501, 288,
	463, 319, 320, 321, 305, 0, 192, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 195, 2550, 0,
	220, 0, 0, 0, 455, 0, 0, 280, 234, 0,
	0, 0, 0, 511, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 448, 487,
	486, 436, 445, 0, 0, 176, 437, 0, 444, 438,
	442, 441, 439, 440, 0, 503, 0, 0, 0, 0,
	0, 0, 408, 421, 0, 425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 419, 0,
	0, 0, 0, 464, 0, 420, 0, 0, 466, 0,
	446, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 443,
	462, 467, 188, 525, 460, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	526, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 311,
	0, 0, 509, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 461, 0, 270, 252, 522, 409, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 507, 248, 0, 521, 502, 504, 505, 508,
	512, 513, 514, 515, 516, 518, 520, 524, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 465, 238, 239,
	240, 241, 510, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 201, 207, 0, 209, 180, 253, 203, 313, 216,
	0, 245, 212, 278, 217, 223, 266, 312, 251, 271,
	178, 303, 279, 227, 0, 0, 532, 506, 531, 533,
	534, 530, 535, 536, 517, 427, 0, 470, 528, 527,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 221, 0, 262, 200,
	493, 474, 475, 476, 426, 477, 472, 473, 494, 468,
	490, 491, 450, 453, 478, 139, 479, 492, 495, 496,
	537, 538, 539, 482, 497, 489, 488, 480, 469, 498,
	499, 454, 452, 483, 484, 471, 485, 0, 500, 501,
	288, 463, 319, 320, 321, 305, 0, 192, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 195, 1205,
	0, 220, 0, 0, 0, 455, 0, 0, 280, 234,
	0, 0, 0, 0, 511, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 448,
	487, 486, 436, 445, 0, 0, 176, 437, 0, 444,
	438, 442, 441, 439, 440, 0, 503, 0, 0, 0,
	0, 0, 0, 408, 421, 0, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 419,
	0, 0, 0, 0, 464, 0, 420, 0, 0, 466,
	0, 446, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	443, 462, 467, 188, 525, 460, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 526, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	311, 0, 0, 509, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 461, 0, 270, 252, 522, 409,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 507, 248, 0, 521, 502, 504, 505,
	508, 512, 513, 514, 515, 516, 518, 520, 524, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 465, 238,
	239, 240, 241, 510, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 532, 506, 531,
	533, 534, 530, 535, 536, 517, 427, 0, 470, 528,
	527, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 493, 474, 475, 476, 426, 477, 472, 473, 494,
	468, 490, 491, 450, 453, 478, 139, 479, 492, 495,
	496, 537, 538, 539, 482, 497, 489, 488, 480, 469,
	498, 499, 454, 452, 483, 484, 471, 485, 0, 500,
	501, 288, 463, 319, 320, 321, 305, 0, 192, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 455, 0, 0, 280,
	234, 0, 0, 0, 0, 511, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	448, 487, 486, 436, 445, 0, 0, 176, 437, 0,
	444, 438, 442, 441, 439, 440, 0, 503, 0, 0,
	0, 0, 0, 0, 408, 421, 0, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	419, 983, 0, 0, 0, 464, 0, 420, 0, 0,
	466, 0, 446, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 443, 462, 467, 188, 525, 460, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 526, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 311, 0, 0, 509, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 461, 0, 270, 252, 522,
	409, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 507, 248, 0, 521, 502, 504,
	505, 508, 512, 513, 514, 515, 516, 518, 520, 524,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 465,
	238, 239, 240, 241, 510, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 532, 506,
	531, 533, 534, 530, 535, 536, 517, 427, 0, 470,
	528, 527, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 493, 474, 475, 476, 426, 477, 472, 473,
	494, 468, 490, 491, 450, 453, 478, 139, 479, 492,
	495, 496, 537, 538, 539, 482, 497, 489, 488, 480,
	469, 498, 499, 454, 452, 483, 484, 471, 485, 0,
	500, 501, 0, 0, 319, 320, 321, 305, 0, 192,
	288, 463, 0, 0, 1568, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 455, 0, 0, 280, 234,
	0, 0, 0, 0, 511, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 448,
	487, 486, 436, 445, 0, 0, 176, 437, 0, 444,
	438, 442, 441, 439, 440, 0, 503, 0, 0, 0,
	0, 0, 0, 408, 421, 0, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 419,
	0, 0, 0, 0, 464, 0, 420, 0, 0, 466,
	0, 446, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	443, 462, 467, 188, 525, 460, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 526, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	311, 0, 0, 509, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 461, 0, 270, 252, 522, 409,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 507, 248, 0, 521, 502, 504, 505,
	508, 512, 513, 514, 515, 516, 518, 520, 524, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 465, 238,
	239, 240, 241, 510, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 532, 506, 531,
	533, 534, 530, 535, 536, 517, 427, 0, 470, 528,
	527, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 493, 474, 475, 476, 426, 477, 472, 473, 494,
	468, 490, 491, 450, 453, 478, 139, 479, 492, 495,
	496, 537, 538, 539, 482, 497, 489, 488, 480, 469,
	498, 499, 454, 452, 483, 484, 471, 485, 0, 500,
	501, 288, 463, 319, 320, 321, 305, 0, 192, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 455, 0, 0, 280,
	234, 0, 0, 0, 0, 511, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 0,
	448, 487, 486, 436, 445, 0, 0, 176, 437, 0,
	444, 438, 442, 441, 439, 440, 0, 503, 0, 0,
	0, 0, 0, 0, 408, 421, 0, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	419, 0, 0, 0, 0, 464, 0, 420, 0, 0,
	466, 0, 446, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 443, 462, 467, 188, 525, 460, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 526, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 311, 0, 0, 509, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 461, 0, 270, 252, 522,
	409, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 507, 248, 0, 521, 502, 504,
	505, 508, 512, 513, 514, 515, 516, 518, 520, 524,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 465,
	238, 239, 240, 241, 510, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 532, 506,
	531, 533, 534, 530, 535, 536, 517, 427, 0, 470,
	528, 527, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 493, 474, 475, 476, 426, 477, 472, 473,
	494, 468, 490, 491, 450, 453, 478, 139, 479, 492,
	495, 496, 537, 538, 539, 482, 497, 489, 488, 480,
	469, 498, 499, 454, 452, 483, 484, 471, 485, 0,
	500, 501, 288, 463, 319, 320, 321, 305, 0, 192,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 1066, 0, 0, 0, 424, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 455, 0, 0,
	280, 234, 0, 0, 0, 0, 511, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 448, 487, 486, 436, 445, 0, 0, 176, 437,
	0, 444, 438, 442, 441, 439, 440, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 421, 0, 425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 419, 0, 0, 0, 0, 464, 0, 420, 0,
	0, 466, 0, 446, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 443, 462, 467, 188, 525, 460, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 526, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 311, 0, 0, 509, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 461, 0, 270, 252,
	522, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 1067, 1068, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 507, 248, 0, 521, 502,
	504, 505, 508, 512, 513, 514, 515, 516, 518, 520,
	524, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	465, 238, 239, 240, 241, 510, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 532,
	506, 531, 533, 534, 530, 535, 536, 517, 427, 0,
	470, 528, 527, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 493, 474, 475, 476, 426, 477, 472,
	473, 494, 468, 490, 491, 450, 453, 478, 139, 479,
	492, 495, 496, 537, 538, 539, 482, 497, 489, 488,
	480, 469, 498, 499, 454, 452, 483, 484, 471, 485,
	0, 500, 501, 288, 463, 319, 320, 321, 305, 0,
	192, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 195, 0, 0, 220, 0, 0, 0, 455, 0,
	0, 280, 234, 0, 0, 0, 0, 511, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 487, 486, 436, 445, 0, 0, 176,
	437, 0, 444, 438, 442, 441, 439, 440, 0, 503,
	0, 0, 0, 0, 0, 0, 408, 421, 0, 425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 419, 0, 0, 0, 0, 464, 0, 420,
	0, 0, 466, 0, 446, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 443, 462, 467, 188, 525, 460, 309,
	172, 0, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 526, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 311, 0, 0, 509, 0, 0, 0,
	284, 0, 0, 219, 0, 0, 0, 461, 0, 270,
	252, 522, 409, 0, 268, 222, 296, 260, 302, 286,
	310, 264, 261, 163, 287, 191, 233, 174, 175, 187,
	194, 196, 198, 199, 242, 243, 255, 275, 289, 290,
	291, 190, 183, 269, 184, 208, 185, 164, 277, 186,
	166, 256, 294, 0, 204, 265, 229, 167, 228, 257,
	293, 292, 318, 324, 325, 329, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 323, 202, 161, 306, 507, 248, 0, 521,
	502, 504, 505, 508, 512, 513, 514, 515, 516, 518,
	520, 524, 273, 0, 0, 0, 0, 0, 213, 254,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 304, 316, 333, 336, 0,
	0, 0, 165, 335, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 465, 238, 239, 240, 241, 510, 0, 181, 334,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	532, 506, 531, 533, 534, 530, 535, 536, 517, 427,
	0, 470, 528, 527, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 493, 474, 475, 476, 426, 477,
	472, 473, 494, 468, 490, 491, 450, 453, 478, 139,
	479, 492, 495, 496, 537, 538, 539, 482, 497, 489,
	488, 480, 469, 498, 499, 454, 452, 483, 484, 471,
	485, 0, 500, 501, 288, 463, 319, 320, 321, 305,
	0, 192, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 455,
	0, 0, 280, 234, 0, 0, 0, 0, 511, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	417, 0, 0, 448, 487, 486, 436, 445, 0, 0,
	176, 437, 0, 444, 438, 442, 441, 439, 440, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 421, 0,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 419, 0, 0, 0, 0, 464, 0,
	420, 0, 0, 466, 0, 446, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 443, 462, 467, 188, 525, 460,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 526, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 311, 0, 0, 509, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 461, 0,
	270, 252, 522, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 507, 248, 0,
	521, 502, 504, 505, 508, 512, 513, 514, 515, 516,
	518, 520, 524, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 465, 238, 239, 240, 241, 510, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 532, 506, 531, 533, 534, 530, 535, 536, 517,
	427, 0, 470, 528, 527, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 493, 474, 475, 476, 426,
	477, 472, 473, 494, 468, 490, 491, 450, 453, 478,
	139, 479, 492, 495, 496, 537, 538, 539, 482, 497,
	489, 488, 480, 469, 498, 499, 454, 452, 483, 484,
	471, 485, 0, 500, 501, 0, 0, 319, 320, 321,
	305, 0, 192, 114, 288, 35, 104, 86, 0, 0,
	0, 0, 0, 0, 0, 250, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 347, 349, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 87, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 1982,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 311, 0, 0, 0, 1979, 0, 1978, 284,
	1980, 1983, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 1984, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 1311, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 735,
	736, 737, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 618, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 626, 627,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 604, 309, 172, 603, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 616, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 617, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 620, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	628, 623, 624, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 114, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 87, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 114, 288, 1267, 1268, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 1332, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 87, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 114, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 1323,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	87, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	626, 627, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 604, 309, 172, 603, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 628, 623, 624, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1264, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 1267, 1268, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 967, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 965, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 961, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 965, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2456,
	0, 121, 487, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 965, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	965, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 1696, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 965, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2560, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 487, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2216, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 2400, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	2225, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 1990, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	965, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 1884, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 1704, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 1634, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 1617, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 364, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 365, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1674,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 659, 660, 1676, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 250, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 659, 660, 1676, 0,
	0, 162, 176, 221, 0, 262, 200, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 250, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 659, 660, 0, 0,
	0, 162, 176, 221, 0, 262, 200, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 842, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 735,
	736, 737, 734, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 1121, 262, 200, 0, 0, 0,
	0, 0, 850, 854, 856, 858, 860, 861, 863, 0,
	867, 864, 865, 866, 0, 0, 845, 846, 847, 848,
	828, 829, 851, 0, 831, 0, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 843, 849, 842, 319,
	320, 321, 305, 0, 192, 853, 855, 857, 859, 862,
	0, 0, 577, 0, 830, 0, 0, 0, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 850, 854, 856, 858, 860, 861, 863, 844,
	867, 864, 865, 866, 0, 0, 845, 846, 847, 848,
	828, 829, 851, 0, 831, 0, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 843, 849, 0, 0,
	0, 0, 0, 602, 0, 853, 855, 857, 859, 862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 1114, 0, 830, 0,
	1116, 1113, 1115, 1119, 1120, 0, 0, 0, 1118, 844,
	0, 0, 0, 0, 0, 0, 850, 854, 856, 858,
	860, 861, 863, 0, 867, 864, 865, 866, 0, 0,
	845, 846, 847, 848, 828, 829, 851, 0, 831, 0,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	843, 849, 604, 0, 0, 603, 1754, 1755, 0, 853,
	855, 857, 859, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2172, 0, 0, 0, 0, 589, 0,
	0, 0, 0, 844, 0, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 594, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1124, 1125, 1126, 1127, 1128, 1129, 1122,
	1123, 2172, 0, 0, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 384, 0, 383, 390, 380, 0, 597, 0,
	0, 0, 2154, 0, 0, 0, 387, 388, 0, 389,
	393, 0, 0, 375, 0, 0, 0, 0, 0, 0,
	0, 592, 0, 398, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 593, 598, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 588,
	601, 0, 0, 0, 585, 583, 582, 2158, 587, 0,
	599, 600, 0, 0, 0, 0, 0, 0, 2162, 0,
	0, 0, 595, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2151, 0,
	0, 0, 2153, 2155, 2157, 852, 2159, 2160, 2161, 2163,
	2164, 2165, 2167, 2168, 2169, 2170, 0, 0, 0, 590,
	0, 0, 0, 0, 0, 2158, 384, 0, 383, 390,
	380, 0, 0, 0, 0, 0, 2162, 0, 0, 0,
	387, 388, 0, 389, 393, 2173, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 2151, 398, 0, 0,
	2153, 2155, 2157, 0, 2159, 2160, 2161, 2163, 2164, 2165,
	2167, 2168, 2169, 2170, 376, 378, 377, 0, 0, 0,
	2171, 0, 382, 0, 0, 0, 402, 0, 0, 403,
	0, 0, 0, 0, 386, 0, 384, 2150, 383, 390,
	380, 401, 0, 2173, 0, 0, 0, 0, 379, 0,
	387, 388, 370, 389, 393, 0, 0, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 2166, 398, 0, 0,
	0, 0, 0, 2156, 0, 0, 0, 0, 2171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 0, 0, 381, 385, 391, 0,
	392, 394, 0, 0, 395, 396, 397, 0, 0, 399,
	400, 0, 0, 0, 0, 0, 0, 0, 376, 378,
	377, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 378,
	377, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 385, 391, 0, 392, 394, 0, 0, 395, 396,
	397, 0, 0, 399, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	381, 385, 391, 0, 392, 394, 0, 0, 395, 396,
	397, 0, 0, 399, 400,
}

var yyPact = [...]int{
	205, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -170, 24119, 24119, -1000, -1000, 1630,
	-1000, 23631, 8503, 24607, 135, 24607, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 378, -1000, 23143, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 351, 26652, 240, 239, 6530, 24607, -279, -1000,
	2238, -1000, -1000, -1000, -1000, 336, 539, 22655, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26346, 71, 539, 503, 519, 722, 722, 9967,
	2238, 221, 103, -1000, 826, 205, 25855, 319, 24607, -1000,
	1004, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 319, -1000, -1000,
	-1000, 2238, 2238, -1000, 24607, 24607, -19, 1118, -1000, 270,
	264, 227, 1002, -1000, -1000, -1000, -1000, -1000, 2244, -1000,
	24607, 1947, 24607, -1000, 1395, 289, 26796, 2077, 820, 430,
	1960, -1000, -1000, 1921, -1000, 78, 117, 111, 409, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 97, -1000, 2100, -1000,
	-1000, 69, -1000, -1000, 67, -1000, -1000, -1000, -97, -1000,
	-1000, -1000, -1000, -1000, -165, -165, 587, 1371, 6530, -1000,
	1336, -1000, 1762, -1000, -1000, -1000, -1000, 4067, 8003, 8003,
	8003, 8003, -1000, -1000, 1774, 6530, 1920, 1918, -1000, -1000,
	-1000, -1000, -1000, 999, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7512, -1000, 1917, 1916,
	1914, 1910, 1904, 1902, 1895, 1894, 1893, 1891, 1890, 1683,
	1889, 1529, 1527, 1887, 1885, 1879, 8003, 1526, 1683, 1683,
	1878, 1876, 1873, 1870, 1869, 1868, 1867, 1863, 1862, 1861,
	1860, 1831, 1829, 1828, 1805, 1796, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26244, -1000, 996, 779, -1000, 1790, 2071, 2113, 1728, 2210,
	2151, 2145, 2142, 2137, 38, 345, 345, 345, 370, 345,
	376, -1000, -1000, -1000, -1000, -1000, -1000, 445, -1000, -1000,
	-1000, -1000, 825, 24607, -1000, 1744, 1036, 2155, 301, 1036,
	216, 308, 2113, 2113, -63, -121, 1036, 1036, -121, 48,
	-1000, -1000, -1000, 1150, 297, 1150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2093, 2088, 351, 351, 357, -1000, -169,
	-1000, -1000, 524, -1000, 468, -1000, 1395, 285, 260, 846,
	1159, -1000, 1069, 24607, 24607, 24607, 1069, 1069, 13383, 12895,
	-1000, 2113, 1728, -1000, 1661, 1667, 1728, 351, 351, 351,
	351, 351, 351, 351, 24607, 5540, 5540, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 258, -1000, -1000, -1000, -1000,
	-1000, 257, 1788, -1000, 24607, 251, 2113, 2071, 2113, -1000,
	-1000, 985, 1374, 1524, -1000, -1000, 270, 1029, -1000, 662,
	-1000, -1000, -1000, -1000, 24607, 242, -1000, 1511, 1787, -1000,
	335, 756, 858, -1000, 114, 26866, 19727, 1395, 19727, 24607,
	-1000, -1000, -1000, -1000, -1000, -1000, -99, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-41, -1000, -41, 6530, 6530, 6530, 6530, 6530, -1000, 473,
	7021, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8003, 8003,
	8003, 8003, 8003, 8003, 8003, 8003, 8003, 8003, 8003, 8003,
	1773, 1132, 8003, 8003, 8003, 1667, 2111, 836, -1000, -1000,
	-1000, -1000, -1000, 1125, 1371, 6530, 6530, 24607, 26149, 6530,
	6530, 68, 6530, 2089, 2089, 3076, 24607, 6530, -1000, 1660,
	1654, -1000, -1000, 1298, 6530, -1000, -1000, 6530, 8003, 6530,
	-1000, -1000, -1000, -1000, 228, 2089, 6530, 6530, 2089, 2089,
	2089, 1136, 2089, 2089, 2089, 2089, 2089, 2089, 2089, 1518,
	24607, 2041, 52, -1000, -1000, -1000, 1705, -1000, 1761, 1761,
	1705, 1705, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1786, 1783, -1000, -1000, 1758, 1758, 1758, 1705, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1781, 1781, 1782, 1781, 24607, 2113,
	-279, 5049, -1000, -282, 2071, 6530, -1000, -1000, 6530, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 368, 345, -1000,
	24607, 1141, 19727, 1395, 1435, 24607, 345, 357, -1000, 24607,
	825, 2081, 24607, 2232, 8003, 19727, 1150, 2232, 1150, -1000,
	-1000, -1000, 1036, 1036, -1000, -1000, -1000, -1000, 1150, 1150,
	-1000, -1000, -113, 2232, 2232, -132, 24607, 24607, 345, 24607,
	-1000, -1000, -1000, -1000, 24607, -1000, -1000, 24607, 19727, 12407,
	-1000, -147, 487, 450, 491, -1000, -1000, 334, 381, 11919,
	286, 19727, 3567, -1000, -1000, 1069, 1069, 1069, 3567, 3567,
	973, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2071, -1000,
	-1000, -1000, -1000, 24607, 19727, 1395, 24607, 24607, 24607, 25855,
	-1000, 848, -1000, -1000, 9479, 979, 848, 1516, 24607, 1959,
	-280, -1000, 11431, 24607, 24607, -1000, -1000, -280, -1000, 10943,
	24607, 2071, -1000, 2071, 2603, -1000, 2125, -1000, 270, 152,
	-1000, -1000, -1000, -1000, -1000, -1000, 966, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 813, -1000, 24607, -1000,
	-1000, 114, 19727, 1094, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 102, -1000, -1000, 141, -1000, 365, 8, 1015, -1000,
	-1000, 35, 136, 35, 1371, -1000, 1166, 1166, 1133, -1000,
	358, -1000, -1000, -1000, -1000, 1774, -1000, -1000, -1000, 1264,
	1784, -1000, 1035, 1035, 904, 904, 904, 904, 904, 1073,
	1073, -1000, -1000, -1000, 4067, 1773, 8003, 8003, 8003, 326,
	2309, 1880, -1000, 6530, 1131, -1000, 6530, 1212, 833, 953,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1651, 587, 1649, 1418, 2243, 1647, 6530, -1000, -1000, 6530,
	1470, 6039, -1000, -1000, -1000, 1641, 941, 1640, -1000, -1000,
	-1000, 1639, 709, 1633, 1086, 1628, 812, 6530, 1012, 1011,
	6530, 6530, 6530, 6530, 1624, 6530, 6530, 6530, 6530, 6530,
	6530, 6530, 803, -1000, 6530, 42, -1000, -1000, -1000, -1000,
	1372, -1000, 1370, -1000, -1000, -1000, 1515, 1515, -1000, 1356,
	-1000, -1000, -1000, -1000, 1342, -1000, -1000, 1341, -1000, -1000,
	-1000, -1000, 1010, -1000, 1371, -1000, 1500, -1000, 1147, 787,
	-1000, 1324, 22167, 24607, 27, -1000, 2075, 749, -1000, 8,
	650, 1928, 2032, 24607, 21679, -1000, 1772, 1009, -1000, -1000,
	6530, -1000, 1927, 24607, -1000, 24607, 2232, 2232, 1036, 25855,
	1150, 24607, 1150, -1000, -1000, 1150, -1000, 934, -1000, 24607,
	-1000, -1000, -1000, -1000, 27, 749, 2165, 819, -1000, -1000,
	-1000, -1000, 25095, 25095, 10455, 25095, -1000, 1770, 1769, -1000,
	-1000, 474, 458, 496, -1000, -1000, 364, -1000, -1000, 650,
	-1000, -1000, -1000, 1767, 1116, -1000, -1000, 8003, -1000, 3567,
	3567, 3567, -1000, -1000, 15335, -1000, -1000, 778, 650, 1958,
	776, -1000, 776, -1000, 2232, 5540, -1000, 12407, -1000, -1000,
	21191, -1000, 20703, 2232, -289, 651, -1000, 2046, 688, -1000,
	1766, -1000, 970, 2014, -1000, 558, -1000, 1114, 969, -1000,
	688, 967, 2007, 558, -1000, -1000, -1000, 929, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -29, -1000,
	-1000, 24607, 1511, 964, 1094, 738, -1000, 361, 922, 910,
	-1000, 19727, 73, 19727, -1000, 19727, -1000, -1000, 210, -1000,
	24607, 2060, -1000, -1000, -1000, 1498, 2050, -1000, -1000, -1000,
	-1000, -1000, 948, -1000, 326, 2309, 1358, -1000, 8003, 8003,
	2107, 1121, -1000, 6530, 1197, 26174, 951, 14359, 24607, -1000,
	-1000, 6530, 6530, -1000, 2099, 2049, -1000, 6530, 6530, 1238,
	-1000, 24607, -1000, -1000, -1000, 14359, -1000, 8003, -1000, 6530,
	2037, -1000, -1000, 2003, 1987, 1953, 939, -1000, 1943, 1939,
	1874, 1799, 1778, 1634, 1613, 1495, 1371, -1000, -1000, 1621,
	1616, 938, -1000, 937, 1602, 916, 913, 5049, -1000, -127,
	6530, 6530, 6530, 2027, -1000, -1000, 1744, 1138, 1765, -50,
	1082, -1000, 427, 19727, 259, -1000, 1955, 155, -1000, 2032,
	-1000, 485, -1000, 1763, 24607, 771, -1000, 908, 205, -1000,
	24607, 1371, -1000, 1395, 1036, 2232, -1000, -1000, 2232, -1000,
	1036, -1000, 1036, 1150, 24607, -1000, -50, 427, 24607, 12407,
	12407, 12407, 12407, -1000, 1986, 1974, -1000, 2009, 2001, 2013,
	24607, 12407, 1744, -1000, 25475, -1000, -1000, -1000, -1000, -1000,
	1667, 897, 2182, 535, 20215, 6530, -1000, -1000, -1000, 454,
	19727, 1494, 286, -1000, -1000, -1000, -1000, -1000, 24607, 24607,
	2223, -1000, 775, -1000, -1000, 906, -1000, 2223, -1000, 1334,
	1493, 1177, -280, 5049, 224, 24607, -280, 24607, 5049, -1000,
	24607, 222, -280, 2603, 1332, -1000, -1000, -1000, 2241, 19727,
	1395, 1021, 1068, -1000, 64, -1000, 94, 312, 1492, -1000,
	374, 1113, 372, -1000, -1000, 8003, -1000, -1000, -1000, -1000,
	1371, 6530, 1601, -1000, 484, 484, 1599, -1000, 1705, 1761,
	-1000, 1705, 1758, 1705, 484, 484, 1598, -1000, 1277, 1560,
	-1000, -1000, 1546, 1539, 6530, -1000, 1597, 2369, 920, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1590, -1000, -1000, -1000, 1491, -1000, -1000, -1000, 1330,
	-1000, 1328, -1000, -69, -45, 1371, 1371, -1000, -1000, 2019,
	2080, 2067, 8991, 1208, -1000, -1000, 19239, -1000, 294, -1000,
	-1000, -1000, 431, 66, 1321, 300, -1000, 1531, 24607, -1000,
	-1000, -1000, -1000, -1000, 1082, 1082, 1082, 8991, 319, 727,
	901, 12407, 24607, -1000, 18263, 1589, -1000, 650, 2232, -1000,
	-1000, 2232, 2232, 1036, -1000, 1208, 294, 774, -1000, 1087,
	1926, 1954, 1926, -1000, -1000, -1000, -1000, 1973, -1000, 1798,
	-1000, -1000, 774, -1000, -1000, -1000, -1000, -1000, 535, -1000,
	2122, 534, 534, 534, 894, 883, 875, -1000, 738, 1581,
	-1000, -1000, -1000, -1000, 2214, 2209, 18751, 2214, -1000, -289,
	2250, -1000, 1579, 711, -280, -1000, -1000, 688, -1000, -1000,
	-1000, -280, -1000, 688, -1000, -1000, -1000, -1000, -1000, 1395,
	-1000, 92, -1000, -1000, -1000, -1000, -1000, -1000, -9, -1000,
	24607, 1484, 24607, -1000, 1371, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6530, -1000, -1000, -1000, 1528, -1000, -1000, 6530, -1000, -1000,
	1578, 1577, -284, -51, 2208, 2206, -1000, -1000, 221, 24607,
	1574, 696, -1000, -1000, -1000, 26328, 636, -1000, 24607, 1175,
	534, 345, 534, 1162, 1754, -1000, -1000, -1000, 1481, 2,
	-1000, -1000, -1000, 1480, 1466, 1320, -1000, -1000, 1300, 895,
	17, -1000, -1000, -1000, -1000, -1000, -1000, 1753, 14359, 14847,
	1464, 1565, 25095, 12407, 18263, 760, -1000, 857, -1000, -1000,
	-1000, -1000, -1000, 2232, -1000, -1000, 2146, 24607, 5049, -1000,
	-1000, 6530, 1747, -1000, 6530, -1000, -1000, -1000, -1000, -1000,
	1745, 2021, -1000, -1000, -1000, -1000, 1462, -1000, 1460, -1000,
	-1000, -1000, 6530, 6530, -1000, -1000, -1000, 24607, -1000, 688,
	688, 650, -1000, -1000, -132, 77, -132, 1519, -1000, 1513,
	-1000, -1000, -289, 1459, -1000, 2203, 1456, 1416, -1000, 1744,
	26595, 8991, 1190, -1000, -1000, 24607, 24607, -1000, 24607, 24607,
	345, 6530, -1000, -1000, 207, -1000, -1000, 110, -1000, -1000,
	1297, 350, -1000, 16799, -1000, -1000, -1000, -1000, -1000, -41,
	2232, 760, 857, -1000, -1000, 949, -1000, 2113, -1000, -1000,
	1371, 24607, 1371, 17775, -1000, 2196, 2194, 868, 865, 1371,
	587, 558, -1000, -70, -30, -1000, 1455, -1000, -1000, -1000,
	-292, -1000, 1454, -56, -1000, -1000, 2079, 318, 1246, -1000,
	1082, 1082, 708, 1082, 1082, 1082, 1082, 237, 236, 1082,
	1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082, 1082,
	1082, 1082, 1082, 1743, -1000, -1000, 1190, -1000, -1000, 1187,
	8003, -1000, -1000, 1452, 14847, 569, 483, 1741, -1000, 204,
	2249, -1000, 1160, 1152, -1000, 24607, -1000, 1730, 1801, 142,
	1720, -1000, 1714, 1713, 24607, 1502, 311, 1450, -1000, -1000,
	100, -1000, -1000, 864, -1000, 1705, 6530, -1000, -132, 2146,
	-1000, -1000, 834, 829, -1000, -1000, -1000, -1000, -1000, 1207,
	-1000, 1184, 355, -66, -30, -1000, 2193, -62, 2191, 2190,
	1085, -1000, 1701, -1000, 2174, 221, -1000, 2173, 26595, -1000,
	1315, 1314, 1082, 1082, 1294, 1448, 1447, 1446, 1082, 1082,
	1287, 1444, 25475, 1275, 1266, 1261, 1296, 1443, 542, 1285,
	1257, 1236, 24607, 1696, 1415, -1000, -1000, 2309, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1248,
	1695, -120, -1000, -1000, 1691, 16799, 185, 185, 16799, 16799,
	16799, 1690, 380, -1000, -34, -1000, -1000, -1000, 16799, 2064,
	1487, -1000, 2113, -1000, -1000, 17287, 1558, 1557, 1555, 1549,
	1689, 1243, -51, 2167, -1000, 1416, 2166, 1416, 1416, 1442,
	24607, 1416, -1000, 183, -1000, -1000, -1000, 14359, 14359, -1000,
	-1000, -1000, -1000, 1441, 1440, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 253, 24607, 824,
	-1000, 1084, 1545, 6530, 1683, -215, 16799, 821, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 814, 807, 800, 16799, -1000,
	-1000, -1000, 194, -1000, 148, -1000, -1000, 2064, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2086, 13871, -76, -1000, 1417,
	-1000, 1416, -1000, -1000, 76, 797, -1000, -1000, 178, 225,
	208, -1000, 317, -1000, -1000, -1000, -1000, -1000, -1000, 250,
	786, -1000, 1415, 1396, -1000, 1367, -1000, 1952, -1000, 37,
	785, -1000, -1000, -1000, -1000, 765, -1000, -1000, 1082, 1393,
	126, -1000, -1000, -1000, -1000, 24607, -1000, 761, -1000, -1000,
	-1000, 850, -1000, -1000, -1000, -1000, -1000, 1380, -1000, 24607,
	167, 1240, 8003, 1678, 8003, 1669, 190, 1666, -1000, -1000,
	-1000, -1000, -1000, 380, -1000, 1944, 1800, 2236, -1000, -1000,
	-1000, -1000, 148, 148, 148, 148, 60, 1234, -1000, 1435,
	553, -1000, 1077, -1000, 16311, 24607, 1072, -1000, 1665, 2164,
	-1000, 2038, 24607, 1797, 24607, 1664, 1070, 8003, -1000, -1000,
	2248, -1000, 2237, 467, 467, -1000, -1000, -1000, 24607, 4558,
	-1000, 827, 1376, -1000, 306, 187, -1000, 745, -1000, 744,
	15823, 1231, 1426, -1000, -1000, -1000, 1232, 214, -1000, -1000,
	-1000, 1371, 24607, 74, 726, -1000, 1514, 144, -1000, -1000,
	-1000, 707, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1251,
	-1000, 306, 2006, -1000, 1229, -1000, 1067, -1000, 26537, 449,
	-1000, 1237, -1000, 26537, 158, -1000, 262, 1631, -310, -1000,
	-1000, 702, -1000, 1505, 502, 6530, -1000, -1000, 158, 26595,
	-1000, 6530, 701, -1000, 26595, 673, -1000, -1000,
}

var yyPgo = [...]int{
	0, 113, 2630, 200, 130, 128, 194, 2629, 2628, 2132,
	2107, 2627, 2612, 2611, 2607, 2606, 2605, 2602, 2600, 2599,
	2597, 2596, 2595, 2594, 2593, 2592, 2591, 2590, 190, 2588,
	2586, 2585, 2584, 2583, 2582, 2581, 2580, 2579, 2577, 2576,
	2575, 2574, 2573, 2572, 2571, 2570, 125, 2569, 2097, 2568,
	2567, 2566, 2565, 2564, 170, 2562, 2561, 2560, 2559, 2558,
	2557, 2556, 2555, 2552, 2551, 2548, 2547, 2545, 2544, 137,
	2543, 2539, 2538, 2536, 2535, 187, 182, 60, 2534, 41,
	56, 148, 203, 51, 205, 201, 141, 120, 69, 2533,
	2143, 2532, 144, 179, 118, 25, 2531, 140, 2530, 115,
	34, 31, 195, 100, 59, 66, 87, 2529, 174, 76,
	2528, 2527, 86, 2526, 62, 2518, 73, 47, 82, 29,
	2517, 2512, 2511, 71, 2510, 2509, 2508, 2502, 136, 2501,
	96, 54, 2500, 2499, 2498, 2497, 2496, 40, 2483, 49,
	2481, 2479, 2478, 2477, 63, 2476, 2475, 12, 20, 18,
	2474, 17, 3, 2473, 175, 95, 74, 107, 2472, 437,
	2471, 2469, 2468, 116, 2462, 612, 2461, 2460, 2459, 2458,
	2457, 9, 2456, 169, 2454, 2453, 2452, 55, 151, 157,
	2451, 2450, 103, 35, 114, 102, 2449, 2448, 90, 173,
	16, 32, 0, 154, 45, 2447, 2446, 2445, 199, 153,
	150, 183, 132, 202, 121, 2442, 2441, 50, 2440, 112,
	2439, 98, 7, 2438, 286, 2422, 180, 134, 2420, 162,
	2419, 188, 2, 106, 27, 224, 2418, 2417, 2414, 124,
	2413, 2412, 75, 135, 2411, 2410, 2409, 26, 2408, 33,
	21, 2406, 93, 2405, 206, 2404, 155, 101, 142, 127,
	108, 177, 181, 64, 111, 1171, 109, 72, 19, 2401,
	178, 2400, 193, 197, 2399, 146, 2396, 189, 364, 168,
	2395, 139, 8, 2394, 2393, 10, 2392, 23, 2391, 2390,
	2388, 2387, 6, 2386, 2385, 2384, 1, 4, 2383, 5,
	161, 39, 99, 2382, 97, 198, 2381, 2380, 2376, 2375,
	2372, 483, 2366, 2365, 2364, 2363, 2362, 2361, 2360, 2359,
	77, 38, 2358, 2357, 2355, 2354, 70, 104, 2349, 285,
	164, 2348, 53, 2347, 2346, 24, 2345, 28, 2343, 2341,
	2340, 14, 143, 2337, 2336, 15, 2334, 2333, 11, 13,
	2332, 2329, 61, 2324, 48, 30, 68, 92, 2323, 22,
	67, 105, 2321, 2320, 191, 192, 160, 2319, 122, 185,
	207, 2318, 171, 2317, 2315, 2314, 2313, 2312, 2311, 2310,
	1177, 2307, 2306, 186, 58, 176, 2305, 2304, 149, 2303,
	117, 85, 81, 159, 2295, 147, 2294, 2293, 80, 2292,
	2291, 2290, 2289, 2267, 184, 156, 2264,
}

//line mysql_sql.y:8020
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 392, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 73, 73, 63, 62, 341, 341, 340, 340, 339,
	339, 338, 338, 338, 337, 337, 337, 336, 336, 335,
	335, 334, 334, 332, 332, 333, 331, 330, 330, 330,
	328, 328, 326, 326, 327, 327, 321, 321, 324, 324,
	322, 322, 322, 322, 325, 320, 320, 320, 319, 319,
	61, 61, 61, 257, 257, 60, 60, 271, 271, 271,
	271, 271, 269, 269, 269, 269, 269, 269, 268, 268,
	267, 267, 272, 272, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 55, 55, 55, 55, 58, 58,
	58, 59, 266, 266, 266, 56, 57, 57, 256, 256,
	261, 261, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 265, 265, 265, 263, 263, 262,
	262, 264, 264, 49, 49, 49, 52, 51, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 50, 50, 50,
	50, 50, 50, 47, 47, 47, 47, 47, 46, 46,
	48, 48, 254, 254, 253, 66, 66, 66, 66, 66,
	66, 66, 65, 65, 68, 68, 67, 54, 54, 54,
	54, 54, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 365, 365, 365, 367, 367, 196, 197, 393, 195,
	195, 195, 361, 361, 362, 363, 364, 364, 364, 64,
	7, 7, 44, 45, 385, 385, 301, 301, 209, 209,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 304, 305, 205, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 35, 34, 34, 243, 243, 33, 394,
	394, 179, 179, 32, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 43, 315, 315, 396, 396, 396, 41,
	42, 300, 300, 300, 39, 38, 37, 36, 36, 31,
	31, 30, 30, 202, 202, 204, 204, 200, 395, 395,
	277, 277, 203, 203, 29, 29, 29, 201, 201, 178,
	199, 199, 199, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 17, 19, 251, 251, 248, 18,
	14, 13, 16, 12, 15, 5, 5, 5, 5, 9,
	9, 10, 87, 87, 118, 118, 374, 374, 370, 370,
	371, 371, 371, 372, 372, 373, 373, 69, 309, 309,
	309, 309, 309, 309, 4, 308, 308, 308, 308, 308,
	308, 391, 391, 350, 350, 350, 351, 108, 108, 103,
	103, 310, 310, 223, 352, 352, 318, 318, 317, 317,
	316, 316, 106, 106, 107, 107, 90, 90, 76, 76,
	323, 323, 323, 323, 329, 329, 298, 298, 144, 144,
	174, 174, 175, 175, 80, 80, 81, 81, 81, 81,
	81, 81, 358, 358, 360, 360, 359, 105, 105, 101,
	101, 102, 102, 102, 100, 100, 99, 98, 98, 97,
	95, 95, 95, 96, 96, 96, 83, 83, 82, 82,
	82, 82, 82, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 84, 84, 366, 366, 366,
	302, 302, 302, 307, 307, 156, 156, 157, 157, 155,
	155, 85, 85, 86, 86, 86, 86, 154, 154, 153,
	88, 88, 94, 93, 93, 89, 89, 89, 89, 164,
	164, 163, 163, 163, 163, 72, 74, 74, 75, 111,
	111, 162, 161, 161, 161, 110, 110, 109, 109, 104,
	104, 92, 92, 92, 92, 160, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 158, 390, 390, 389, 389,
	388, 386, 386, 386, 387, 387, 387, 387, 343, 343,
	343, 343, 343, 188, 188, 188, 194, 194, 187, 187,
	187, 187, 187, 198, 193, 193, 189, 189, 190, 190,
	190, 3, 3, 3, 3, 23, 23, 23, 23, 27,
	27, 368, 368, 20, 375, 378, 376, 376, 379, 379,
	379, 380, 380, 380, 381, 381, 21, 377, 382, 382,
	382, 252, 252, 249, 250, 250, 247, 246, 246, 246,
	384, 384, 383, 383, 383, 191, 191, 22, 242, 242,
	244, 245, 245, 236, 236, 236, 236, 26, 240, 240,
	241, 241, 241, 241, 241, 237, 237, 239, 239, 235,
	235, 235, 235, 235, 25, 234, 234, 232, 232, 230,
	230, 231, 231, 229, 229, 229, 233, 233, 24, 24,
	78, 77, 77, 77, 77, 77, 79, 303, 303, 273,
	273, 276, 276, 283, 283, 284, 284, 282, 282, 289,
	289, 288, 288, 287, 287, 286, 286, 285, 285, 285,
	285, 280, 280, 279, 279, 274, 274, 274, 274, 274,
	275, 275, 275, 278, 278, 281, 281, 135, 135, 136,
	136, 136, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 348, 348, 349, 138, 138, 138, 142, 142, 142,
	142, 142, 142, 137, 137, 139, 139, 119, 119, 117,
	117, 112, 112, 113, 113, 114, 114, 115, 115, 116,
	116, 116, 116, 116, 116, 259, 259, 346, 346, 347,
	347, 342, 342, 342, 345, 345, 345, 345, 345, 344,
	344, 120, 172, 172, 172, 192, 192, 192, 171, 171,
	171, 134, 134, 133, 133, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	258, 258, 206, 206, 207, 207, 151, 150, 150, 150,
	150, 150, 148, 149, 147, 147, 147, 147, 147, 146,
	146, 145, 145, 145, 238, 238, 143, 143, 141, 141,
	141, 140, 140, 140, 290, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 215,
	215, 220, 220, 357, 357, 356, 121, 121, 121, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 130, 130,
	130, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 314, 314, 314, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 170, 369, 369, 369, 353, 353, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 168, 168, 168,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 224, 224, 225, 225, 311, 311, 311,
	311, 311, 311, 312, 312, 313, 313, 313, 313, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 213, 165,
	165, 165, 226, 221, 221, 222, 222, 216, 216, 216,
	216, 216, 216, 216, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 217, 217, 219, 219, 228, 228,
	228, 227, 227, 227, 227, 227, 227, 227, 132, 132,
	132, 132, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 123, 123, 123, 123, 127, 127, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 128, 128, 128, 128, 126, 126, 126, 126,
	126, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 70, 71, 71,
	125, 173, 173, 291, 291, 294, 294, 292, 292, 293,
	295, 295, 295, 296, 296, 296, 297, 297, 297, 299,
	299, 177, 177, 177, 184, 184, 176, 176, 185, 185,
	186, 186, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 0, 2, 7, 0,
	1, 0, 1, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 6, 8, 8,
	4, 6, 8, 8, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	11, 0, 1, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 5, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 10, 9,
	2, 2, 6, 10, 14, 18, 5, 0, 1, 0,
	6, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 5, 4, 4, 5, 5, 5, 5, 4, 5,
	5, 5, 5, 5, 5, 5, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 5, 4, 6, 6,
	7, 4, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 6, 2, 2, 4, 6,
	4, 2, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -392, -2, -1, -3, -73, -4, -69, -5, -6,
	-8, -53, -65, -67, -68, -28, -7, -64, -46, -47,
	-49, -55, -60, -61, -62, -63, -70, -71, -72, -80,
	-23, -22, -21, -20, 390, 12, 426, -9, -10, -358,
	-11, 229, -195, -196, -197, -393, -29, -30, -31, -36,
	-37, -38, -39, -41, -42, -43, -32, -33, -34, -35,
	-45, -44, 206, -48, 61, -50, -51, -52, -56, -57,
	-58, -59, 320, 326, 379, 388, 509, 510, 46, -81,
	-83, -24, -25, -26, -27, 202, 14, 459, -12, -15,
	-13, -16, -14, -18, -19, -17, 224, 223, 37, 286,
	287, 324, 222, 203, 13, 135, 136, 138, 139, 30,
	-82, 67, 204, -84, 10, 511, 419, -90, 38, -117,
	-192, 70, -180, -183, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	429, 302, 456, 241, 265, 350, 268, 275, 135, 154,
	148, 176, 168, 143, 245, 246, 77, 138, 412, 87,
	397, 376, 141, 260, 262, 264, 267, 247, 164, 159,
	259, 243, 509, 157, 248, 39, 249, 181, 250, 251,
	461, 393, 301, 399, 272, 374, 158, 394, 263, 396,
	183, 187, 404, 326, 152, 153, 401, 406, 180, 221,
	42, 458, 233, 407, 185, 179, 175, 415, 276, 274,
	178, 151, 174, 244, 50, 189, 188, 190, 370, 371,
	372, 373, 252, 253, 314, 403, 171, 160, 305, 144,
	22, 410, 228, 398, 327, 254, 269, 277, 184, 186,
	235, 240, 460, 378, 239, 273, 408, 156, 232, 261,
	227, 411, 145, 320, 329, 255, 139, 266, 405, 414,
	49, 342, 150, 142, 218, 136, 237, 242, 11, 256,
	257, 258, 279, 278, 270, 172, 234, 177, 162, 149,
	173, 137, 236, 413, 343, 507, 303, 359, 170, 167,
	238, 211, 409, 400, 140, 363, 344, 165, 280, 504,
	505, 506, 315, 300, 281, 282, 163, 225, 392, 283,
	285, 369, 293, 345, 377, 351, 346, -90, -48, -10,
	-9, -82, -83, -117, 209, -199, 23, 374, -54, 375,
	206, 67, -192, -5, -4, -69, -46, -80, -198, -192,
	286, -198, 209, -192, 239, 358, -301, 214, -268, -242,
	240, -267, -244, -270, -245, 31, 202, 204, 203, 236,
	14, 324, 210, 12, 10, 325, 222, 24, 25, 27,
	13, 326, 328, 28, 329, 332, 333, 334, 41, 337,
	338, 229, 70, 73, 247, 247, -222, -216, 94, 230,
	-218, -211, -212, -214, -338, -332, -210, 67, 119, 120,
	127, 95, -213, -290, 35, 97, 466, 427, -166, -167,
	-168, -169, -170, -192, -333, -331, 73, 78, 81, 84,
	85, 83, 82, 161, 80, 74, 132, -83, 70, -353,
	474, -181, 494, 475, 493, 46, -306, -313, 208, -311,
	166, 225, 162, 12, 125, 369, 130, 163, 471, 490,
	429, 497, 468, 469, 463, 464, 465, 467, 476, 478,
	489, -314, 485, 495, 496, 498, 72, 71, 488, 487,
	472, 473, 479, 462, 470, 480, 481, 486, 491, 492,
	500, 501, 308, 87, 309, 310, 419, 304, 311, 214,
	374, 55, 312, 313, 314, 315, 316, 426, 317, 56,
	318, 307, 229, 359, 319, 165, 182, 431, 430, 432,
	423, 420, 418, 421, 422, 424, 425, 482, 483, 484,
	-264, -262, -192, -74, -75, 502, -99, -100, -159, 19,
	6, 7, 8, 9, -303, 302, 359, 239, -236, -234,
	283, 335, 219, 218, 88, 419, 208, -370, -371, 199,
	200, 201, -360, 452, -359, -192, 310, 26, 209, -40,
	-315, -300, 400, 399, -203, 398, 391, 402, 393, 202,
	453, -177, 345, 377, 235, 416, 417, 322, 378, 404,
	405, 394, 87, 169, 166, 302, 359, -370, 140, 137,
	-255, 140, 93, 145, 144, -255, 239, 358, 40, -261,
	369, -260, -262, 404, 405, 415, 71, 72, 403, -177,
	87, -100, -159, -99, -81, -83, -358, 302, 359, 239,
	210, 209, 211, 419, 286, -302, -366, 31, -307, 196,
	197, 198, 32, 33, -1, -193, -190, -183, 70, 71,
	72, -106, 231, -117, 133, -106, -100, -99, -100, -117,
	-171, -192, 376, 103, -54, -54, 375, -361, -362, -363,
	-365, 206, 375, 374, 133, 15, -198, 65, -117, -244,
	239, -268, -242, 35, 64, 134, 212, 134, 64, 67,
	322, 302, 359, 323, 419, 209, 335, 211, 239, 336,
	302, 359, 209, 211, 419, 239, 302, 209, 211, 359,
	239, 336, 391, 392, 211, 26, 327, 330, 331, 392,
	-319, 415, -319, 134, 93, 90, 91, 92, -216, 110,
	-227, 103, 104, 105, 106, 107, 108, 109, 116, 115,
	126, 119, 120, 121, 122, 123, 124, 125, 117, 118,
	113, 94, 111, 112, 96, -83, -216, -222, -214, -214,
	-214, -214, -290, -220, -216, 67, 67, 133, -216, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -312, 67,
	67, -224, -225, 67, 67, 73, 73, 67, 67, 67,
	-214, 73, -225, -225, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	134, -123, -127, -124, -126, -125, -129, -128, 166, 167,
	130, 170, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 30, 182, 225, 162, 163, 164, 165, 183,
	148, 168, 457, 191, 149, 192, 150, 193, 151, 194,
	152, 153, 195, 154, 157, 158, 159, 156, 133, -100,
	134, 67, -76, 38, -102, 21, -84, -83, 20, 31,
	32, 31, 32, 31, 32, 31, 32, -368, 209, 452,
	-232, 214, -232, -232, 210, -232, 209, -372, 147, 134,
	-360, -105, 67, -202, 111, 23, 237, -202, -396, 210,
	401, 42, 238, 237, -101, -102, -101, 395, 392, -277,
	396, 397, -203, -202, -202, -203, 209, 211, 419, -394,
	-395, 15, 113, 237, -394, 30, 30, -301, -301, -373,
	213, 408, 459, 143, 144, 145, -244, 239, 239, 134,
	103, 23, -263, 103, 114, -262, -262, -262, -263, -263,
	-137, 40, -191, 130, -192, 73, -137, 40, -101, -84,
	-83, 68, 68, -301, -301, -301, -301, -301, -301, -301,
	-198, -85, -86, 121, -216, -192, -85, 38, 392, -308,
	46, -80, 67, 30, 67, -192, -309, 46, -80, 67,
	30, -101, -76, -102, 133, 78, 73, -54, 68, 134,
	-364, 84, 85, -367, 180, 172, -192, -66, 73, -3,
	-4, -5, -6, -28, -46, -80, -334, -332, 67, 31,
	368, 64, 15, -269, 209, 419, 321, 235, 211, 302,
	-267, -251, -248, -246, -191, -244, -247, -246, -272, -171,
	392, -77, 380, -77, -216, -216, -216, -216, -216, 83,
	94, 300, 84, 85, -211, -228, 31, 281, 282, -212,
	-212, -212, -212, -212, -212, -212, -212, -212, -212, -212,
	-212, -219, -226, -290, 67, 113, 111, 112, 96, -214,
	-212, -212, 68, 134, -357, -356, 98, -216, -216, -192,
	-354, -355, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 312, 307, 313, 311, 304, 319, 314,
	315, 165, 450, 451, 444, 445, 446, 447, 448, 449,
	-221, -222, -221, -216, -354, -221, -165, 32, 31, -165,
	-216, -369, 298, 297, 299, -103, -192, -221, 68, 68,
	68, 78, -222, -221, -212, -221, -355, -165, -222, -222,
	-165, -165, -165, -165, 121, -165, -165, -165, -165, -165,
	-165, -165, 73, -262, 40, -297, 343, 342, -291, -293,
	67, -292, 67, -292, -291, -291, 67, 67, -294, 67,
	-294, -294, -291, -295, 67, -295, -296, 67, -295, -192,
	-101, -75, -317, -316, -216, 40, 503, -76, -216, -98,
	-97, -216, 211, -232, -375, -192, 94, -252, -249, -246,
	-242, -190, -192, -232, -373, -359, 34, -104, -192, -155,
	16, -214, -246, -394, -155, -395, -202, -202, -204, -395,
	-200, -395, 392, -155, -155, -277, -201, -192, -201, -232,
	-179, -178, -192, -179, -375, -252, -93, -88, -92, -89,
	-94, -158, -160, -91, 67, -117, -83, 500, 501, 409,
	410, 141, 144, 143, 31, 368, -266, 368, 31, -242,
	-260, -256, 73, 369, -247, -265, 64, 130, -316, -263,
	-263, -263, -265, -265, 129, -76, -375, -251, -242, -192,
	-119, -117, -119, -193, -154, 134, -153, 15, -187, -192,
	34, 73, 133, -154, 73, -119, -391, 64, -310, -223,
	-352, 502, -108, 68, -103, -350, -351, -103, -107, -192,
	-310, -108, 68, -350, -76, -76, -185, -186, -176, -182,
	-189, -190, -183, 207, 31, 93, 34, 36, 308, 340,
	96, 130, 20, 97, 166, 129, 310, 427, 309, 202,
	59, 430, 432, 431, 420, 418, 361, 365, 367, 364,
	419, 391, 40, 14, 37, 223, 32, 33, 123, 204,
	100, 101, 226, 35, 224, 85, 44, 23, 62, 15,
	17, 18, 311, 360, 214, 213, 113, 380, 210, 57,
	12, 132, 38, 110, 362, 53, 89, 45, 55, 111,
	21, 421, 422, 41, 379, 388, 455, 230, 125, 312,
	313, 60, 94, 368, 83, 43, 64, 90, 19, 58,
	112, 205, 426, 56, 366, 316, 318, 328, 452, 317,
	208, 402, 10, 307, 428, 30, 222, 54, 209, 99,
	212, 84, 229, 6, 88, 13, 61, 65, 423, 424,
	425, 46, 98, 16, 319, 459, 381, 382, 383, 384,
	385, 386, 387, 191, 192, 193, 194, 195, 271, 217,
	215, 219, 220, 502, 503, 196, 197, 297, 299, 169,
	199, 200, 201, 231, 147, 7, 347, 348, 349, 352,
	353, 354, 355, 356, 357, 358, 510, 390, 23, -54,
	-362, 133, 134, -104, -269, -250, -247, -271, 121, 70,
	-257, 134, 459, 512, 71, 212, -384, -383, 360, 68,
	134, -320, 213, 426, 73, 513, -320, 83, 300, 84,
	85, -290, -222, -219, -214, -212, -212, -217, 226, 93,
	-216, -215, -356, 100, -216, 34, 134, 65, 133, 68,
	68, 15, 15, 68, -216, -216, 68, 15, 15, -216,
	68, 133, 68, 68, 68, 65, 68, 134, 68, 134,
	-216, 68, 68, -216, -216, -216, -222, 68, -216, -216,
	-216, -216, -216, -216, -216, 134, -216, -299, 344, 78,
	78, -173, 73, -173, 78, 78, 78, 134, 68, 73,
	134, 22, 134, -95, 36, 37, -117, 214, -117, -378,
	347, 35, -385, 134, 40, -383, -235, 65, -230, -231,
	-229, -233, 40, -117, 15, -87, -118, -192, 67, 68,
	134, -216, -243, 65, -179, -117, -155, -155, -202, -193,
	-204, -199, -204, -200, 133, -178, -378, -385, 30, -161,
	-162, -163, -164, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -188, -194, 34, -189, 73, -190, -183, -188,
	-83, -88, -93, -188, 67, 67, 142, 145, 145, 144,
	212, 67, 103, -265, -265, -265, 40, -191, 64, 134,
	-155, -86, -88, -192, 73, -192, 121, -155, -144, 505,
	38, 39, 134, 67, 68, 134, 46, 134, 103, 68,
	134, 68, 46, 133, 376, -192, -332, 68, -271, 134,
	212, 133, 133, -248, 326, -191, -250, 20, 459, -171,
	38, 73, 38, 68, -217, 93, -214, -211, 68, 101,
	-216, 99, -121, -123, 342, 343, -122, -128, 130, 166,
	225, 165, 164, 162, 342, 343, -137, -192, -216, -216,
	68, 68, -216, -216, 15, -192, -137, -212, -216, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 73, 68, 68, 68, 134, 68, 68, 68, 134,
	68, 134, -316, -323, 396, -216, -216, -97, -96, 43,
	-105, 94, 67, -380, 398, 349, -184, 103, -209, -208,
	303, 41, -304, 369, 355, 356, -249, 239, 64, 292,
	293, 294, 295, -229, -177, 129, 250, 67, -117, -87,
	-192, 15, 134, -374, 133, -1, -192, -242, -202, -155,
	-155, -202, -202, -204, -192, -380, -209, -254, -253, -171,
	-92, -92, -92, -92, 53, 53, 53, 58, 53, 58,
	53, -163, -254, -94, -105, -194, 68, -390, -389, -388,
	-386, 61, 213, 62, 73, -171, -222, 145, -250, -205,
	73, -256, -117, -117, -157, 17, 133, -157, 78, 73,
	89, -223, -318, -317, 46, -80, -103, -310, -351, -316,
	-192, 46, -80, -310, -185, -182, -190, -183, 78, 15,
	-247, -242, 121, 121, 70, 327, -257, 73, 348, 73,
	209, 103, 209, -211, -216, 68, -130, 153, 152, -130,
	68, -291, -292, -291, -294, -291, -130, -130, 68, 68,
	23, 68, 68, 68, -216, 68, 68, 134, 68, 73,
	78, 78, -329, 386, 381, 383, 44, 45, 34, 35,
	-112, -113, -114, -120, -115, -171, -207, -116, 217, 215,
	219, -347, 88, 220, 271, 89, 210, -381, 77, -376,
	73, -192, -382, 77, 350, 132, 305, 40, 351, 352,
	366, 301, 78, 78, 357, -377, 70, -117, -184, -184,
	-184, -112, -106, 65, 133, -88, -118, -192, 121, 68,
	-155, -155, -155, -202, -381, -382, -155, 134, 103, -110,
	-109, 64, 65, -111, 64, -109, 53, 53, -155, -388,
	-387, 23, -347, -347, -347, 68, 134, 68, 134, 68,
	68, -156, 18, 20, 121, -156, -144, 13, 68, -310,
	-310, -242, -257, 369, -117, 73, -117, -216, 68, -216,
	68, 68, -298, 504, -327, 381, 20, 20, -80, -117,
	68, 134, -123, -116, -192, 89, -346, -347, -232, -346,
	89, 67, 73, -379, 360, 73, 73, 78, 40, 78,
	132, 353, -305, 67, -137, -139, -191, 130, 73, 68,
	-188, -88, -192, -155, -374, 133, -155, -100, -253, -316,
	-216, 67, -216, 67, 53, 19, 17, 73, 73, -216,
	-222, -350, -79, -321, -277, 514, 134, -79, 68, 68,
	-144, 73, 20, 73, -325, 73, -105, -135, -136, -152,
	340, 241, -233, 245, 77, 246, 376, 247, 210, 249,
	250, 251, 221, 252, 253, 254, 369, 255, 256, 257,
	258, 323, 6, 288, -114, -134, -133, -131, 83, 94,
	40, 340, -132, 77, 129, 264, 242, 265, -151, -206,
	64, 346, 215, 88, 89, 328, -207, -342, -344, -192,
	-344, -192, -342, -342, -232, -216, 20, 459, 304, 40,
	78, 40, 354, -237, -239, -171, 67, -78, -77, -155,
	-155, -101, -104, -343, -192, 215, 20, 20, 68, 134,
	68, 134, -328, 386, -324, -322, 381, 382, 383, 384,
	73, -174, 506, 73, 383, 34, -273, 231, 134, -152,
	-184, -184, -177, 129, -184, -184, -184, -184, 248, 248,
	-184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
	-184, -184, -184, -184, 67, -131, 83, -212, 73, -139,
	-140, 40, 263, 259, -141, 40, 243, 244, -143, 67,
	271, 13, 89, 89, -117, 67, 65, 280, 67, 67,
	67, -344, 68, 73, 348, 73, 304, 68, 134, -291,
	-216, -79, -100, 68, 68, 134, 84, 85, 84, 85,
	-330, 213, -326, 385, -322, 20, 383, 20, 20, 103,
	67, 20, -80, 20, -152, 78, 78, -184, -184, 78,
	73, 73, 73, -184, -184, 78, 73, -194, 78, 78,
	78, 78, 40, 73, -142, 40, 259, 263, 260, 261,
	262, 78, 40, 78, 40, 78, 40, -192, 67, -348,
	-349, 73, 78, 67, -311, -238, 67, -237, -345, 292,
	293, 294, 296, 295, -345, -237, -237, -237, 67, -259,
	-258, 272, 94, 369, -240, -239, -95, 68, -101, -192,
	215, 68, 68, 68, 68, -337, 67, 78, -327, 20,
	-325, 20, -325, -325, 73, -175, -192, -325, -274, 273,
	274, -275, -281, 276, -137, -137, 73, 73, -138, 242,
	-119, 68, 134, 103, 68, -216, -224, -146, -145, 455,
	-237, 68, 68, 68, 68, -237, 272, -241, 221, 77,
	459, 290, 291, -95, -341, 30, 68, -336, -335, -172,
	-331, -192, 386, 387, 73, -325, 514, 134, 68, 134,
	-279, 277, 67, -277, 67, -277, 89, 293, 243, 244,
	68, -349, 73, 68, -150, -148, -149, 64, 394, 269,
	270, 68, -240, -240, -240, -240, 68, -184, 73, 289,
	-340, -339, -338, 68, 134, 133, 73, -192, -276, 278,
	78, -212, 67, -212, 67, -278, 275, 67, -258, -149,
	64, -148, 64, 14, 13, -151, 78, -190, 134, 103,
	-335, -192, 103, -283, 67, 20, 68, -272, 68, -272,
	67, 103, -212, -147, 266, 267, 30, 144, -147, -339,
	40, -216, 133, 73, -284, -282, 231, -275, 68, 68,
	68, -272, 78, 68, 83, 40, 268, -192, 514, 134,
	68, 134, 70, -280, 279, 68, 73, -282, -285, 46,
	78, 103, -289, -286, 67, -152, 233, 113, 73, -289,
	-152, -288, -287, 278, 234, 67, 514, 68, 134, 70,
	230, 67, -222, -287, -286, -222, 68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	631, 632, 633, 634, 0, 0, 0, 395, 396, 0,
	375, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	270, 271, 0, 218, 214, 193, 194, 195, 154, 155,
	156, 157, 276, 0, 0, 0, 0, 0, 0, 474,
	-2, 635, 636, 637, 638, -2, 408, 0, 376, 377,
	378, 379, 380, 381, 382, 383, 259, 260, 261, 256,
	257, 258, -2, 0, 408, 207, 0, 198, 198, 0,
	494, 0, 0, 508, 530, 30, 0, 452, 0, 457,
	819, 855, 856, 857, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 452, 219, 397,
	398, 494, 494, 373, 0, 242, 0, 1451, 246, 0,
	0, 0, 370, 237, 238, 239, 240, 241, 0, 623,
	0, 234, 0, 213, 1510, 0, 0, 0, 0, 0,
	0, 98, 678, 100, 680, 104, 111, 0, 0, 116,
	117, 120, 121, 122, 123, 124, 0, 128, 0, 130,
	133, 0, 135, 136, 0, 139, 140, 141, 0, 151,
	152, 153, 681, 682, 78, 78, 1207, 1105, 0, 1112,
	1113, 1124, 1133, 927, 928, 929, 930, 0, 0, 0,
	0, 0, 937, 938, 0, 951, 1599, 0, 944, 945,
	946, 947, 948, 41, 53, 54, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1078, 914, 855, 0,
	1607, 0, 1627, 1608, 1626, 0, 0, 1063, 0, 1053,
	0, -2, -2, 0, 0, 1577, 0, -2, 1604, 1623,
	1631, 1630, 1601, 1602, 1596, 1597, 1598, 1600, 1609, 1611,
	1622, 0, 1618, 1628, 1629, 0, 55, 56, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1593, 1594, 1069, -2, 1071, 1072, 1074, 1075, 1076, 1077,
	-2, 1080, 1081, 1082, -2, -2, 1085, 1086, 1087, 1088,
	1089, 1090, 1093, -2, 1095, -2, 1097, 1065, 1066, 1067,
	1068, 1057, 1058, 1059, 1060, 1061, 1062, -2, -2, -2,
	0, 191, 189, 494, 566, 0, -2, 0, 0, 0,
	513, 516, 519, 522, 641, 707, 707, 707, 0, 707,
	0, 728, 684, 685, 686, 705, 706, 413, 409, 410,
	411, 412, 482, 0, 484, 487, 353, 314, 0, 353,
	0, 0, 489, 489, 0, 362, 353, 353, -2, 0,
	324, 325, 326, 319, 0, 319, 330, 331, 332, 342,
	343, 363, 1231, 0, 0, 276, 276, 415, 208, 209,
	197, 199, 0, 203, 0, 196, 1510, 0, 0, 165,
	1577, 170, 0, 1458, 1524, 1473, 0, 0, 1491, 0,
	-2, 489, 0, 495, 0, 494, 0, 276, 276, 276,
	276, 276, 276, 276, 0, 0, 0, 531, 532, 527,
	528, 529, 533, 534, 3, 0, 624, 625, 628, 629,
	630, 0, 0, 456, 0, 0, 489, -2, 0, 374,
	243, 858, 0, 0, 247, 248, 0, 0, 262, 0,
	265, 251, 252, 253, 0, 0, 236, 0, 0, 215,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	108, 105, 112, 115, 125, 132, 0, 144, 146, 149,
	106, 113, 118, 119, 126, 147, 107, 109, 110, 114,
	148, 150, 127, 131, 145, 129, 134, 137, 138, 143,
	0, 79, 0, 0, 0, 0, 0, 0, 1111, 0,
	0, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1105, 0, 933, 934,
	935, 936, 939, 0, 952, 0, 0, 0, 0, 1103,
	1103, 0, 1103, 1099, 1099, 0, 0, 1103, 1041, 0,
	0, 1043, 1054, 0, 0, 1046, 1047, 1103, 0, 1103,
	1051, 1052, 1037, 1038, 0, 1099, 0, 0, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 0,
	0, 1208, 1226, 1163, 1164, 1165, 1213, 1167, 1217, 1217,
	1213, 1213, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 0, 0, 1206, 1186, 1215, 1215, 1215, 1213, 1210,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1220, 1220, 1223, 1220, 0, 489,
	0, 0, 477, 0, 458, 0, 510, 512, 0, 514,
	515, 517, 518, 520, 521, 523, 524, 0, 707, 642,
	0, 0, 0, 0, 0, 0, 707, 415, 414, 0,
	483, 0, 0, 539, 0, 0, 319, 539, 0, 336,
	337, 338, 353, 353, 344, 490, 345, 346, 355, 0,
	360, 361, 0, 539, 539, 0, 0, 0, 707, 321,
	320, 358, 359, 328, 321, 1232, 1233, 0, 0, 0,
	416, 0, 0, 201, 0, 206, 158, 0, 0, 0,
	0, 0, 0, 187, 188, 0, 0, 0, 0, 0,
	178, 181, 813, 814, 675, 676, 182, 183, 458, 509,
	511, 506, 507, 0, 0, 0, 0, 0, 0, 0,
	394, 547, 541, 543, 618, 41, 547, 0, 0, 431,
	444, 426, 0, 433, 0, 820, 417, 444, 419, 0,
	433, 458, 480, 458, 0, 244, 0, 249, 0, 0,
	264, 266, 267, 268, 254, 255, 371, 232, 233, 225,
	226, 227, 228, 229, 230, 231, 235, 51, 0, 216,
	217, 0, 0, 0, 92, 93, 94, 95, 96, 97,
	99, 83, 386, 388, 667, 679, 0, 670, 0, 102,
	142, 75, 0, 75, 1106, 1107, 1108, 1109, 1110, 1114,
	0, 1116, 1118, 1120, 1122, 0, 1138, -2, -2, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 1125, 1136, 1137, 0, 0, 0, 0, 0, 1134,
	1129, 0, 931, 0, 949, 953, 0, 0, 0, 42,
	1098, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	0, 1104, 0, 1105, 0, 0, 0, 1100, 1101, 0,
	0, 0, 1003, 1004, 1005, 0, 439, 0, 1064, 1042,
	1055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 1229, 1227, 1228, 1166, 1214,
	0, 1191, 0, 1192, 1193, 1194, 0, 0, 1187, 0,
	1188, 1189, 1190, 1182, 0, 1183, 1184, 0, 1185, 190,
	565, 567, 0, 448, 450, 451, 0, 478, 491, 496,
	497, 500, 0, 0, 0, 644, 0, 274, 661, 0,
	677, 699, -2, 0, 0, 485, 0, 0, 579, 313,
	0, 354, 316, 321, 323, 0, 539, 539, 353, 0,
	355, 0, 355, 349, 350, 0, 364, 367, 365, 0,
	327, 322, 369, 329, 0, 274, 552, 0, 553, 554,
	550, 581, 613, 613, 0, 613, 585, 0, 0, 210,
	211, 0, 0, 205, 159, 160, 0, 162, 163, 164,
	171, 166, 168, 0, 0, 172, 184, 185, 186, 0,
	0, 0, 176, 177, 0, 476, 384, 385, 389, 0,
	391, 817, 392, 393, 539, 0, 548, 0, 544, 619,
	0, 621, 0, 539, 468, 0, 424, 0, 425, 441,
	0, 445, 0, 0, 437, 430, 434, 0, 0, 454,
	418, 0, 0, 423, 479, 481, 859, 0, 1238, -2,
	1240, -2, -2, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 0, 250,
	263, 0, 0, 0, 0, 86, 664, 0, 87, 91,
	81, 0, 0, 0, 669, 0, 666, 671, 0, 101,
	0, 0, 76, 77, 721, 0, 0, 1115, 1117, 1119,
	1121, 1123, 0, 1126, 1134, 1130, 0, 1127, 0, 0,
	1106, 0, 954, 0, 0, 0, 0, 0, 0, 989,
	990, 0, 0, 994, 0, 0, 997, 0, 0, 0,
	1001, 0, 1040, 1056, 1044, 0, 1048, 0, 1050, 0,
	0, 972, 973, 0, 0, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 1162, 1230, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 568, 460,
	0, 0, 0, 503, 501, 502, 487, 0, 0, 651,
	1234, 708, 278, 0, 0, 663, 0, 0, 704, -2,
	711, 0, 717, 0, 0, 0, 402, 406, 30, 488,
	0, 540, 315, 0, 353, 539, 339, 340, 539, 356,
	353, 357, 353, 355, 0, 366, 651, 278, 0, 0,
	0, 0, 0, 572, 0, 0, 571, 0, 0, 0,
	0, 0, 487, 614, 0, 616, 617, 626, 627, 583,
	-2, 0, 552, 596, 0, 0, 212, 200, 202, 0,
	0, 0, 0, 173, 174, 175, 179, 180, 0, 0,
	537, 542, 549, 620, 622, 42, 545, 537, 31, 0,
	0, 0, 444, 446, 0, 0, 444, 0, 0, 453,
	0, 0, 444, 0, 0, 372, 52, 269, 0, 0,
	0, 0, 0, 387, 0, 668, 83, 0, 0, 103,
	0, 0, 0, 1102, 1128, 0, 1135, 1131, 932, 940,
	950, 0, 0, 956, 968, 968, 0, 959, 1213, 1217,
	962, 1213, 1215, 1213, 968, 968, 0, 43, 0, 0,
	995, 996, 0, 0, 0, 440, 0, 0, 0, 971,
	974, 975, 976, 977, 979, 980, 981, 982, 983, 984,
	985, 0, 1219, 1218, 1204, 0, 1205, 1216, 1221, 0,
	1224, 0, 449, 464, 0, 492, 493, 498, 499, 0,
	0, 0, 821, 654, 652, 653, 0, 1235, 658, 279,
	280, 281, 282, 0, 0, 0, 662, 0, 0, 700,
	701, 702, 703, 712, 1234, 1234, 1234, 821, 452, 0,
	-2, 0, 0, 404, 0, 0, 580, 317, 539, 333,
	347, 539, 539, 353, 368, 654, 658, 539, 222, 0,
	575, 569, 0, 558, 573, 574, 561, 0, 563, 0,
	559, 560, 539, 551, 582, 615, 584, 595, 597, 598,
	604, 0, 0, 0, 0, 0, 0, 204, 161, 0,
	298, 167, 390, 818, 535, 0, 0, 535, 469, 468,
	0, 442, 0, 447, 444, 429, 438, 428, 435, 436,
	455, 444, 422, 421, 860, 1239, 1236, 1237, 245, 0,
	665, 83, 88, 89, 90, 84, 82, 672, 0, 674,
	0, 0, 0, 1132, 955, 941, 957, 969, 970, 958,
	942, 960, 961, 963, 964, 965, 966, 967, 943, 991,
	0, 993, 998, 999, 0, 1045, 1049, 0, 1002, 1212,
	0, 0, 466, 64, 0, 0, 504, 505, 0, 0,
	0, 822, 823, 825, 826, 0, 0, 828, 884, 0,
	837, 707, 837, 0, 0, 839, 840, 643, 0, 0,
	646, 647, 656, 0, 0, 0, 284, 285, 0, 0,
	0, 297, 293, 294, 295, 275, 657, 0, 0, 0,
	0, 0, 613, 0, 0, 539, 403, 406, 407, 486,
	318, 351, 348, 539, 272, 273, 494, 0, 0, 555,
	576, 0, 0, 556, 0, 557, 562, 564, 221, 599,
	0, 0, 601, 602, 603, 586, 0, 590, 0, 594,
	169, 525, 0, 0, 546, 526, 32, 433, 443, 427,
	420, 85, 80, 673, 66, 0, 66, 0, 1000, 0,
	1222, 1225, 468, 0, 465, 0, 0, 0, 639, 487,
	-2, 0, -2, 827, 885, 849, 849, 838, 849, 849,
	707, 0, 655, 645, 0, 659, 660, 0, 286, 287,
	0, 290, 296, 0, 713, 714, 815, 816, 715, 0,
	539, 539, -2, 400, 405, 0, 352, 489, 223, 224,
	577, 0, 570, 608, 605, 0, 0, 0, 0, 536,
	538, 432, 34, 60, 0, 722, 0, 33, 992, 1039,
	470, 467, 0, 461, 463, 74, 0, 729, -2, 769,
	1234, 1234, 0, 1234, 1234, 1234, 1234, 0, 0, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 0, 824, 851, -2, 863, 865, 0,
	0, 868, 869, 0, 0, 0, 0, 906, 875, 0,
	0, 879, 0, 1150, 1151, 0, 883, 0, 841, 850,
	0, 850, 0, 0, 849, 0, 0, 0, 283, 288,
	0, 291, 292, 0, 695, 1213, 0, 719, 66, 494,
	401, 220, 0, 0, 609, 611, 606, 607, 587, 0,
	591, 0, 57, 62, 67, 68, 0, 0, 0, 0,
	0, 459, 0, 65, 0, 0, 718, 0, 716, 771,
	0, 0, 1234, 1234, 0, 0, 0, 0, 1234, 1234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 866, 867, 870, 871,
	872, 911, 912, 913, 873, 908, 909, 910, 874, 0,
	0, 0, 1148, 1149, 904, 0, 0, 0, 0, 0,
	0, 0, 835, 648, 0, 650, 289, 688, 0, 500,
	0, 720, 489, 578, 600, 0, 0, 0, 0, 0,
	44, 0, 64, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 640, 765, 770, 772, 773, 0, 0, 776,
	777, 778, 779, 0, 0, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 807, 808, 809, 810, 811,
	812, 792, 793, 794, 795, 796, 797, 804, 0, 0,
	801, 0, 0, 0, 1053, 899, 0, 0, 842, 844,
	845, 846, 847, 848, 843, 0, 0, 0, 0, 834,
	836, 880, 0, 649, 687, 696, 697, 500, 399, 610,
	612, 588, 589, 592, 593, 35, 0, 0, 61, 0,
	70, 0, 72, 73, 0, 0, 472, 462, 753, 0,
	0, 759, 0, 766, 774, 775, 780, 781, 798, 0,
	0, 800, 0, 0, 907, 0, 878, 887, 900, 0,
	0, 688, 688, 688, 688, 0, 881, 689, 1234, 0,
	0, 693, 694, 698, 726, 0, 45, 0, 47, 49,
	50, 852, 58, 59, 63, 71, 723, 0, 471, 0,
	731, 0, 0, 0, 0, 0, 763, 0, 805, 806,
	799, 802, 803, 876, 886, 888, 889, 0, 901, 902,
	903, 905, 829, 830, 831, 832, 0, 0, 691, 0,
	36, 37, 0, 46, 0, 0, 0, 473, 733, 0,
	754, 0, 0, 0, 0, 0, 0, 0, 877, 890,
	0, 891, 0, 0, 0, 833, 690, 692, 0, 0,
	48, 853, 0, 730, 0, 765, 755, 0, 757, 0,
	0, 0, 0, 892, 894, 895, 0, 0, 893, 38,
	39, 40, 0, 0, 0, 735, 0, 751, 756, 758,
	760, 0, 764, 762, 896, 898, 897, 854, 724, 0,
	734, 0, 747, 732, 0, 761, 0, 736, -2, 0,
	752, 0, 737, -2, 0, 745, 0, 0, 0, 738,
	746, 0, 741, 0, 0, 0, 725, 740, 0, -2,
	748, 0, 0, 742, -2, 0, 750, 749,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 511,
	104, 103, 105, 3, 512, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 513, 115, 514, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:586
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:592
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:625
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:629
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:636
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:644
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:657
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:669
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:684
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:690
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:694
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:700
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:707
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:716
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:720
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:724
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:737
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:743
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:752
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:763
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:767
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:773
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:777
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:783
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:787
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:793
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:817
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:836
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:840
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:844
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:853
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:861
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:865
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:870
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:874
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:883
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:907
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:911
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:917
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:923
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:941
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:958
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1004
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1041
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1045
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1068
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1081
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1093
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1100
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1117
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1121
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1125
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1129
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1133
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1144
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1148
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1170
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1174
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1212
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1216
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1220
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1224
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1228
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1232
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1236
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1240
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1244
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1248
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1252
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1256
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1260
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1264
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1268
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1272
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1276
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1280
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1284
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1288
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1292
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1296
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1300
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1304
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1308
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1312
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1316
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1328
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1332
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1388
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1395
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1411
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1455
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1472
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1478
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1482
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1521
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1544
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1574
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1581
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1596
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1603
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1612
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1616
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1630
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1643
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1647
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1664
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1707
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1711
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1719
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1724
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1729
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1735
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1742
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1762
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1772
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1805
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1811
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1865
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1885
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1949
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1953
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1959
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1965
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1970
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1971
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1972
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2020
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2033
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2049
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2053
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2057
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2065
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2073
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2097
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2101
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2105
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2109
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2115
		{
			yyVAL.item = nil
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2120
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2163
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2174
		{
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2178
		{
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2183
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2192
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2200
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2238
		{
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2240
		{
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2249
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2326
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2361
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2366
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2370
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2376
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2399
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2427
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2431
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2441
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2482
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2486
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2492
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2510
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2551
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2574
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2598
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2602
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2608
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2613
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2620
		{
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2622
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2625
		{
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2634
		{
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2638
		{
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2652
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2659
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2665
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2673
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2680
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2687
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2707
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2717
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2730
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2738
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2745
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2752
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2775
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2798
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2802
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2808
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2817
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2821
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2831
		{
			yyVAL.str = yyDollar[3].str
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2837
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2841
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2847
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2852
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2863
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2867
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2883
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2889
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2893
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2899
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2903
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2939
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2957
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2982
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2989
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2993
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3006
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3010
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3015
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3019
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3026
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3031
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3038
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3052
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3077
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3086
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3090
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3108
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3117
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3140
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3146
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3152
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3156
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3162
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3167
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3171
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3175
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3180
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3184
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3188
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3198
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3204
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3349
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3378
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3382
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3386
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3408
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3423
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3427
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3433
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3437
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3441
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3445
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3450
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3458
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3472
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3490
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3533
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3537
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3547
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3551
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3555
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3559
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3575
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3579
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3585
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3601
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3607
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3611
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3615
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3625
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3635
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3641
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3645
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3651
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3665
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3678
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3690
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3708
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3729
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3750
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3771
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3789
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3810
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3831
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3852
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3883
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3887
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3893
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3903
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3907
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3911
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3916
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3920
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3924
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3928
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3937
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3941
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3945
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3949
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3954
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3958
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3962
		{
			yyVAL.str = yyDollar[2].str
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3971
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3975
		{
			yyVAL.str = yyDollar[1].str
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3979
		{
			yyVAL.str = yyDollar[2].str
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3983
		{
			yyVAL.str = yyDollar[1].str
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3987
		{
			yyVAL.str = yyDollar[2].str
		}
	case 639:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4031
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4042
		{
		}
	case 643:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4047
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4059
		{
			yyVAL.str = yyDollar[1].str
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4075
		{
			yyVAL.str = yyDollar[1].str
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4079
		{
			yyVAL.str = yyDollar[1].str
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4085
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4092
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4106
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4112
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4127
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4154
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4159
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4165
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4173
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4279
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4283
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4299
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4303
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4319
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4323
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4327
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4336
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4368
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4377
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4381
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4387
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4412
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4422
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4445
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4489
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4493
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4499
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4509
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4521
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4525
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4545
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4554
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4558
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4564
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4568
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4578
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4587
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4591
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4608
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4619
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4634
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4646
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4658
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4671
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4710
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4737
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4743
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4747
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4753
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4762
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4776
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4782
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4786
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4799
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4808
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4812
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4821
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4835
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4839
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4849
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4853
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4872
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4899
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4908
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4918
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4928
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4932
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4950
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4956
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4960
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4964
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4994
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4998
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5030
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5034
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5038
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5042
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5046
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5050
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5054
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5058
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5062
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5066
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5070
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5074
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5078
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5082
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5089
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5093
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5099
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5104
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5108
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5112
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5118
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5126
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5130
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5152
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5156
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5165
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5170
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5187
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5193
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5197
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5203
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5213
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5219
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5228
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5237
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5269
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5279
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5293
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5307
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5313
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5319
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5354
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5365
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5373
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5382
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5388
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5392
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5410
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5414
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5422
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5430
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5438
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5442
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5469
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5478
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5488
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5492
		{
			yyVAL.str = yyDollar[2].str
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5517
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5524
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5531
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5538
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5547
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5553
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5580
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5591
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5595
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5604
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5609
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5613
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5629
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5635
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5651
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5679
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5689
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5693
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5701
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5709
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5713
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5717
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5721
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5725
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5729
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5733
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5746
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5750
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5754
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5763
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5767
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5771
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5775
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5779
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5788
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5797
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5803
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5807
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5823
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5857
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5895
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5909
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5939
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5956
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5971
		{
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5977
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5986
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5994
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6002
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6011
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6020
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6029
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6038
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6047
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6056
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6083
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6101
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6133
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6141
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6149
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6175
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6192
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6209
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6218
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6229
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6250
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6286
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6320
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6335
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6342
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6354
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6362
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6373
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6382
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6391
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6399
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6409
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6417
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6425
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6439
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6449
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6468
		{
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6470
		{
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6511
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6521
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6525
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6535
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6544
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6550
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6554
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6561
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6565
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6569
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6577
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6581
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6585
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6611
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6663
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6667
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6683
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6687
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6694
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6698
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6702
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6712
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6716
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6720
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6724
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6728
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6732
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6760
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6773
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6798
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6818
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6829
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6834
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6915
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6928
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6980
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7006
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7021
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7044
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7078
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7126
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7143
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7155
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7175
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7195
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7244
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7283
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7307
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7319
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7331
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7343
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7355
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7367
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7379
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7404
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7432
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7440
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7449
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7459
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7482
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7487
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7493
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7500
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7504
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7509
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7513
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7525
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7585
		{
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7587
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7597
		{
			yyVAL.str = ""
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7601
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

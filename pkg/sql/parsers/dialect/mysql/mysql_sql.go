// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const TYPE = 57606
const ANY = 57607
const SOME = 57608
const EXTERNAL = 57609
const LOCALFILE = 57610
const URL = 57611
const PREPARE = 57612
const DEALLOCATE = 57613
const PROPERTIES = 57614
const PARSER = 57615
const VISIBLE = 57616
const INVISIBLE = 57617
const BTREE = 57618
const HASH = 57619
const RTREE = 57620
const BSI = 57621
const ZONEMAP = 57622
const LEADING = 57623
const BOTH = 57624
const TRAILING = 57625
const UNKNOWN = 57626
const EXPIRE = 57627
const ACCOUNT = 57628
const UNLOCK = 57629
const DAY = 57630
const NEVER = 57631
const PUMP = 57632
const SECOND = 57633
const ASCII = 57634
const COALESCE = 57635
const COLLATION = 57636
const HOUR = 57637
const MICROSECOND = 57638
const MINUTE = 57639
const MONTH = 57640
const QUARTER = 57641
const REPEAT = 57642
const REVERSE = 57643
const ROW_COUNT = 57644
const WEEK = 57645
const REVOKE = 57646
const FUNCTION = 57647
const PRIVILEGES = 57648
const TABLESPACE = 57649
const EXECUTE = 57650
const SUPER = 57651
const GRANT = 57652
const OPTION = 57653
const REFERENCES = 57654
const REPLICATION = 57655
const SLAVE = 57656
const CLIENT = 57657
const USAGE = 57658
const RELOAD = 57659
const FILE = 57660
const TEMPORARY = 57661
const ROUTINE = 57662
const EVENT = 57663
const SHUTDOWN = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const ENGINES = 57671
const LOW_CARDINALITY = 57672
const ADMIN_NAME = 57673
const RANDOM = 57674
const SUSPEND = 57675
const ATTRIBUTE = 57676
const HISTORY = 57677
const REUSE = 57678
const CURRENT = 57679
const OPTIONAL = 57680
const FAILED_LOGIN_ATTEMPTS = 57681
const PASSWORD_LOCK_TIME = 57682
const UNBOUNDED = 57683
const SECONDARY = 57684
const USER = 57685
const IDENTIFIED = 57686
const CIPHER = 57687
const ISSUER = 57688
const X509 = 57689
const SUBJECT = 57690
const SAN = 57691
const REQUIRE = 57692
const SSL = 57693
const NONE = 57694
const PASSWORD = 57695
const MAX_QUERIES_PER_HOUR = 57696
const MAX_UPDATES_PER_HOUR = 57697
const MAX_CONNECTIONS_PER_HOUR = 57698
const MAX_USER_CONNECTIONS = 57699
const FORMAT = 57700
const VERBOSE = 57701
const CONNECTION = 57702
const TRIGGERS = 57703
const PROFILES = 57704
const LOAD = 57705
const INFILE = 57706
const TERMINATED = 57707
const OPTIONALLY = 57708
const ENCLOSED = 57709
const ESCAPED = 57710
const STARTING = 57711
const LINES = 57712
const ROWS = 57713
const IMPORT = 57714
const FROM_JSONLINE = 57715
const MODUMP = 57716
const OVER = 57717
const PRECEDING = 57718
const FOLLOWING = 57719
const GROUPS = 57720
const DATABASES = 57721
const TABLES = 57722
const EXTENDED = 57723
const FULL = 57724
const PROCESSLIST = 57725
const FIELDS = 57726
const COLUMNS = 57727
const OPEN = 57728
const ERRORS = 57729
const WARNINGS = 57730
const INDEXES = 57731
const SCHEMAS = 57732
const NAMES = 57733
const GLOBAL = 57734
const SESSION = 57735
const ISOLATION = 57736
const LEVEL = 57737
const READ = 57738
const WRITE = 57739
const ONLY = 57740
const REPEATABLE = 57741
const COMMITTED = 57742
const UNCOMMITTED = 57743
const SERIALIZABLE = 57744
const LOCAL = 57745
const EVENTS = 57746
const PLUGINS = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_TIME = 57750
const LOCALTIME = 57751
const LOCALTIMESTAMP = 57752
const UTC_DATE = 57753
const UTC_TIME = 57754
const UTC_TIMESTAMP = 57755
const REPLACE = 57756
const CONVERT = 57757
const SEPARATOR = 57758
const TIMESTAMPDIFF = 57759
const CURRENT_DATE = 57760
const CURRENT_USER = 57761
const CURRENT_ROLE = 57762
const SECOND_MICROSECOND = 57763
const MINUTE_MICROSECOND = 57764
const MINUTE_SECOND = 57765
const HOUR_MICROSECOND = 57766
const HOUR_SECOND = 57767
const HOUR_MINUTE = 57768
const DAY_MICROSECOND = 57769
const DAY_SECOND = 57770
const DAY_MINUTE = 57771
const DAY_HOUR = 57772
const YEAR_MONTH = 57773
const SQL_TSI_HOUR = 57774
const SQL_TSI_DAY = 57775
const SQL_TSI_WEEK = 57776
const SQL_TSI_MONTH = 57777
const SQL_TSI_QUARTER = 57778
const SQL_TSI_YEAR = 57779
const SQL_TSI_SECOND = 57780
const SQL_TSI_MINUTE = 57781
const RECURSIVE = 57782
const CONFIG = 57783
const DRAINER = 57784
const MATCH = 57785
const AGAINST = 57786
const BOOLEAN = 57787
const LANGUAGE = 57788
const WITH = 57789
const QUERY = 57790
const EXPANSION = 57791
const ADDDATE = 57792
const BIT_AND = 57793
const BIT_OR = 57794
const BIT_XOR = 57795
const CAST = 57796
const COUNT = 57797
const APPROX_COUNT_DISTINCT = 57798
const APPROX_PERCENTILE = 57799
const CURDATE = 57800
const CURTIME = 57801
const DATE_ADD = 57802
const DATE_SUB = 57803
const EXTRACT = 57804
const GROUP_CONCAT = 57805
const MAX = 57806
const MID = 57807
const MIN = 57808
const NOW = 57809
const POSITION = 57810
const SESSION_USER = 57811
const STD = 57812
const STDDEV = 57813
const STDDEV_POP = 57814
const STDDEV_SAMP = 57815
const SUBDATE = 57816
const SUBSTR = 57817
const SUBSTRING = 57818
const SUM = 57819
const SYSDATE = 57820
const SYSTEM_USER = 57821
const TRANSLATE = 57822
const TRIM = 57823
const VARIANCE = 57824
const VAR_POP = 57825
const VAR_SAMP = 57826
const AVG = 57827
const JSON_EXTRACT = 57828
const ARROW = 57829
const UNNEST = 57830
const GENERATE_SERIES = 57831
const ROW = 57832
const OUTFILE = 57833
const HEADER = 57834
const MAX_FILE_SIZE = 57835
const FORCE_QUOTE = 57836
const UNUSED = 57837
const BINDINGS = 57838
const DO = 57839
const DECLARE = 57840

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ARROW",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7982

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 80,
	21, 495,
	-2, 476,
	-1, 85,
	211, 677,
	-2, 723,
	-1, 102,
	42, 335,
	211, 335,
	238, 342,
	239, 342,
	406, 335,
	-2, 363,
	-1, 462,
	67, 1085,
	-2, 1590,
	-1, 463,
	67, 1103,
	-2, 1561,
	-1, 468,
	67, 1104,
	-2, 1589,
	-1, 488,
	67, 1017,
	-2, 1639,
	-1, 489,
	67, 1018,
	-2, 1638,
	-1, 490,
	67, 1019,
	-2, 1628,
	-1, 491,
	67, 1601,
	-2, 1623,
	-1, 492,
	67, 1602,
	-2, 1624,
	-1, 493,
	67, 1603,
	-2, 1630,
	-1, 494,
	67, 1604,
	-2, 1613,
	-1, 495,
	67, 1605,
	-2, 1621,
	-1, 496,
	67, 1606,
	-2, 1631,
	-1, 497,
	67, 1607,
	-2, 1632,
	-1, 498,
	67, 1608,
	-2, 1637,
	-1, 499,
	67, 1609,
	-2, 1642,
	-1, 500,
	67, 1610,
	-2, 1643,
	-1, 504,
	67, 1082,
	-2, 1442,
	-1, 511,
	67, 1091,
	-2, 1468,
	-1, 515,
	67, 1095,
	-2, 1507,
	-1, 516,
	67, 1096,
	-2, 1585,
	-1, 524,
	67, 1106,
	-2, 1570,
	-1, 526,
	67, 1108,
	-2, 1580,
	-1, 538,
	67, 998,
	-2, 1633,
	-1, 539,
	67, 999,
	-2, 1634,
	-1, 540,
	67, 1000,
	-2, 1635,
	-1, 547,
	21, 496,
	-2, 459,
	-1, 589,
	401, 363,
	402, 363,
	-2, 336,
	-1, 631,
	103, 1442,
	114, 1442,
	133, 1442,
	-2, 1244,
	-1, 668,
	21, 496,
	-2, 459,
	-1, 766,
	21, 495,
	-2, 910,
	-1, 1069,
	67, 1151,
	-2, 1587,
	-1, 1070,
	67, 1152,
	-2, 1588,
	-1, 1223,
	1, 703,
	68, 703,
	516, 703,
	-2, 710,
	-1, 1340,
	133, 1254,
	-2, 1252,
	-1, 1342,
	133, 620,
	-2, 1249,
	-1, 1343,
	133, 621,
	-2, 1250,
	-1, 1634,
	1, 704,
	68, 704,
	516, 704,
	-2, 710,
	-1, 1686,
	21, 495,
	-2, 586,
	-1, 1852,
	65, 407,
	134, 407,
	-2, 815,
	-1, 2110,
	87, 710,
	129, 710,
	166, 710,
	169, 710,
	-2, 763,
	-1, 2112,
	272, 878,
	-2, 857,
	-1, 2142,
	65, 407,
	134, 407,
	-2, 816,
	-1, 2177,
	87, 710,
	129, 710,
	166, 710,
	169, 710,
	-2, 764,
	-1, 2205,
	272, 878,
	-2, 858,
	-1, 2605,
	68, 735,
	134, 735,
	-2, 710,
	-1, 2609,
	68, 735,
	134, 735,
	-2, 710,
	-1, 2623,
	68, 739,
	134, 739,
	-2, 710,
	-1, 2628,
	68, 740,
	134, 740,
	-2, 710,
}

const yyPrivate = 57344

const yyLast = 28133

var yyAct = [...]int{
	433, 2609, 1133, 2611, 2617, 2608, 2585, 413, 1049, 2244,
	2454, 2574, 415, 2533, 2491, 435, 1683, 2217, 2518, 2422,
	2517, 2357, 2426, 2402, 1618, 2163, 2173, 2242, 1301, 2243,
	793, 915, 1045, 2104, 961, 2410, 120, 120, 2260, 1679,
	548, 1179, 120, 353, 360, 2161, 360, 2003, 2227, 460,
	2135, 123, 1855, 630, 1228, 2226, 1266, 1052, 1999, 2206,
	1714, 1326, 1871, 902, 1678, 364, 1258, 358, 29, 2116,
	822, 1289, 2008, 2004, 2076, 1748, 370, 1828, 543, 407,
	2058, 1525, 1892, 891, 2019, 1641, 2014, 662, 576, 1997,
	1521, 1951, 119, 119, 412, 904, 1747, 1189, 344, 1182,
	1337, 1340, 1203, 1906, 1319, 1520, 1282, 448, 80, 1261,
	543, 1259, 1327, 1320, 1667, 1870, 3, 1328, 1830, 120,
	1825, 1211, 637, 39, 1239, 1640, 357, 18, 354, 8,
	1219, 1553, 634, 657, 1240, 828, 2181, 1043, 1522, 983,
	1627, 416, 79, 1624, 414, 355, 6, 343, 1241, 1286,
	80, 632, 1252, 1230, 1251, 346, 592, 356, 7, 656,
	424, 1532, 1097, 1536, 1083, 39, 1034, 1606, 658, 349,
	679, 1635, 1681, 1323, 1048, 664, 1305, 1215, 622, 1042,
	1688, 408, 1218, 29, 873, 930, 1247, 575, 953, 373,
	1102, 1103, 940, 545, 623, 15, 372, 1194, 9, 4,
	359, 916, 982, 110, 1944, 113, 585, 1944, 573, 1539,
	1750, 115, 1529, 547, 2273, 1715, 367, 2103, 1207, 636,
	2443, 1132, 1322, 80, 546, 1123, 794, 114, 114, 2235,
	698, 114, 655, 35, 104, 86, 1743, 114, 39, 35,
	104, 86, 18, 342, 8, 1123, 362, 1001, 114, 114,
	35, 104, 86, 2482, 635, 114, 942, 114, 1735, 114,
	1526, 6, 2472, 998, 1537, 116, 642, 641, 643, 732,
	912, 889, 542, 7, 533, 994, 532, 534, 535, 2506,
	536, 537, 1270, 1271, 1000, 111, 731, 2504, 111, 921,
	922, 991, 1827, 1923, 111, 1916, 640, 1816, 919, 602,
	1019, 918, 921, 922, 725, 111, 111, 943, 927, 988,
	928, 1035, 993, 1039, 111, 2269, 111, 2521, 2522, 1243,
	736, 737, 738, 735, 1051, 730, 2444, 2445, 1790, 1054,
	2258, 565, 2495, 2496, 1990, 2350, 1991, 1038, 1992, 2353,
	713, 2275, 714, 645, 2105, 1826, 120, 672, 2261, 2262,
	2263, 2264, 1730, 673, 1283, 682, 671, 2425, 2088, 638,
	369, 2124, 360, 1533, 120, 1119, 1279, 1275, 1116, 1030,
	716, 2131, 1118, 1115, 1117, 1121, 1122, 2028, 1625, 2240,
	1120, 606, 2020, 667, 669, 1119, 2224, 1603, 1116, 1789,
	1138, 2030, 1118, 1115, 1117, 1121, 1122, 1937, 2481, 2334,
	1120, 718, 670, 719, 1040, 403, 549, 1833, 404, 1178,
	1177, 701, 727, 1939, 728, 729, 639, 1740, 2337, 2237,
	689, 768, 2531, 1037, 1053, 682, 666, 2025, 2026, 2268,
	85, 721, 112, 711, 2508, 2328, 2270, 361, 607, 910,
	2602, 2618, 2027, 2541, 693, 706, 2520, 708, 2024, 2503,
	102, 2456, 567, 2548, 1061, 1064, 1065, 2424, 80, 80,
	636, 2479, 564, 563, 2321, 1062, 2596, 2484, 2485, 1543,
	1545, 1546, 2290, 39, 39, 709, 668, 2462, 2289, 406,
	644, 1538, 2577, 558, 2452, 2453, 1839, 2456, 723, 724,
	712, 949, 405, 948, 717, 635, 691, 2312, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1126,
	1127, 1128, 1129, 1130, 1131, 1124, 1125, 633, 890, 2619,
	675, 676, 929, 684, 683, 1036, 766, 561, 722, 1126,
	1127, 1128, 1129, 1130, 1131, 1124, 1125, 934, 702, 2316,
	2022, 2411, 2412, 2413, 2415, 2414, 556, 1841, 1842, 1843,
	1844, 720, 2510, 2511, 715, 690, 914, 913, 907, 704,
	1527, 635, 687, 2625, 769, 770, 771, 772, 892, 2613,
	1554, 707, 710, 2586, 2278, 576, 2099, 368, 663, 562,
	1894, 1896, 2348, 941, 2012, 870, 773, 1736, 1527, 2092,
	1527, 739, 1943, 684, 683, 703, 2578, 677, 698, 1213,
	767, 1696, 1530, 557, 895, 1947, 1942, 897, 775, 363,
	1541, 920, 802, 921, 922, 899, 917, 1953, 1952, 2009,
	2012, 921, 922, 2446, 2447, 543, 543, 543, 1899, 780,
	965, 965, 1695, 1694, 911, 1693, 2423, 946, 1273, 2509,
	2483, 893, 894, 2387, 896, 1274, 360, 986, 986, 944,
	945, 1284, 36, 603, 1540, 1692, 2021, 878, 1528, 705,
	610, 1272, 963, 963, 969, 967, 996, 566, 989, 36,
	1832, 2031, 1063, 2236, 603, 2335, 908, 697, 609, 1853,
	1744, 87, 87, 924, 925, 87, 1017, 1544, 1676, 1940,
	2612, 87, 1231, 733, 2241, 2284, 804, 805, 965, 1002,
	965, 672, 87, 87, 1278, 1276, 2013, 1031, 1629, 87,
	1050, 87, 2631, 87, 2023, 1581, 1847, 2314, 1580, 2575,
	2576, 2313, 1836, 1837, 570, 571, 572, 2624, 692, 931,
	992, 931, 605, 1895, 999, 604, 1835, 1716, 2630, 2621,
	2603, 971, 2013, 2317, 2318, 343, 2560, 2006, 2598, 633,
	875, 2007, 2010, 605, 1026, 877, 604, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 547,
	80, 2589, 1092, 1093, 80, 734, 2588, 2535, 734, 1101,
	1012, 1013, 935, 901, 734, 80, 1723, 1231, 2528, 1148,
	1047, 1055, 1677, 923, 80, 1308, 926, 613, 1854, 1154,
	39, 698, 1628, 2011, 734, 2622, 1535, 947, 1156, 39,
	1677, 1160, 1161, 1025, 2599, 1022, 959, 960, 2523, 956,
	957, 958, 543, 938, 939, 648, 653, 654, 985, 985,
	1028, 1033, 1021, 1705, 2512, 1718, 1066, 1535, 1848, 970,
	2040, 342, 1535, 2536, 612, 2500, 981, 1008, 615, 614,
	987, 550, 1563, 1003, 2339, 974, 975, 976, 977, 978,
	979, 980, 1032, 2388, 2390, 2391, 2392, 2389, 1016, 2477,
	1200, 1004, 1044, 1185, 1186, 2111, 1015, 736, 737, 738,
	735, 2476, 1024, 2475, 2339, 1023, 1020, 932, 1046, 2474,
	2464, 1193, 1216, 1041, 965, 2345, 2344, 1223, 695, 547,
	1705, 576, 1201, 1612, 1229, 2055, 1147, 965, 1091, 1854,
	1735, 2501, 1222, 1677, 1306, 1705, 1056, 1057, 1058, 1059,
	1060, 1562, 1085, 736, 737, 738, 735, 1526, 1248, 1248,
	1184, 1253, 696, 2338, 2074, 2339, 1253, 2073, 1617, 1216,
	965, 120, 1585, 1517, 1204, 1191, 1192, 2339, 1889, 2339,
	698, 543, 1246, 965, 1812, 2339, 2465, 900, 1099, 1100,
	1095, 2346, 1645, 1810, 1135, 1808, 871, 1972, 696, 1142,
	1616, 1221, 950, 1214, 1136, 1216, 965, 2583, 1300, 120,
	120, 1224, 2537, 1806, 2145, 933, 1310, 2041, 1908, 1856,
	120, 650, 651, 652, 1148, 1148, 1330, 657, 1158, 2339,
	734, 1148, 1148, 734, 1134, 665, 1137, 1795, 1303, 1237,
	1238, 1149, 1738, 1250, 1677, 1737, 1174, 1752, 1316, 1733,
	1813, 1155, 1342, 1157, 1729, 1660, 1280, 1577, 1727, 1811,
	1229, 1807, 658, 1725, 965, 1302, 1302, 1564, 736, 737,
	738, 735, 931, 1285, 1236, 1516, 1302, 1720, 1267, 1807,
	1232, 1313, 1005, 1299, 1205, 1242, 869, 1343, 1209, 1644,
	1208, 1212, 1235, 1334, 1196, 1202, 1199, 1613, 1220, 778,
	685, 1588, 1587, 734, 665, 2130, 1295, 1936, 1244, 1245,
	751, 1233, 1615, 734, 1518, 1645, 932, 1534, 1226, 1548,
	1254, 1225, 1009, 1234, 1721, 2045, 1934, 1551, 1552, 1726,
	1524, 636, 952, 1331, 905, 1140, 1139, 611, 636, 1293,
	1294, 1325, 954, 1721, 1220, 1249, 1255, 80, 1325, 568,
	2572, 1257, 1256, 955, 578, 1645, 2561, 1758, 1935, 1281,
	1829, 2466, 39, 1612, 2056, 1205, 635, 734, 734, 1945,
	1304, 1205, 1205, 635, 1090, 1290, 1291, 1292, 1724, 1698,
	1044, 1523, 1297, 1535, 1296, 1298, 674, 1098, 1010, 1088,
	1089, 1087, 1823, 1098, 1314, 1559, 1619, 1620, 1592, 1217,
	736, 737, 738, 735, 1332, 738, 735, 1141, 1341, 1514,
	2499, 1515, 951, 735, 933, 603, 1965, 1335, 2324, 1336,
	2323, 2120, 2115, 1912, 766, 1166, 2307, 1573, 1159, 1519,
	2607, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 2592, 2558, 120, 120, 616, 2595, 2542, 1542,
	736, 737, 738, 735, 608, 120, 1642, 1783, 1547, 635,
	2398, 1964, 1152, 1550, 2435, 1253, 2404, 1651, 736, 737,
	738, 735, 1153, 353, 2382, 2381, 2380, 1760, 1085, 2377,
	1572, 1253, 1549, 736, 737, 738, 735, 657, 2371, 1558,
	2594, 2396, 2394, 2368, 605, 2367, 120, 604, 2397, 2127,
	1621, 1623, 736, 737, 738, 735, 2029, 1556, 1988, 2384,
	1560, 1638, 759, 760, 752, 753, 754, 755, 756, 757,
	758, 751, 658, 1650, 1987, 2238, 965, 1930, 2128, 2395,
	2393, 590, 736, 737, 738, 735, 1910, 986, 579, 120,
	1611, 1610, 1709, 1609, 1711, 1684, 1684, 2383, 1684, 1605,
	1570, 1561, 1604, 1571, 1006, 1575, 2015, 403, 1703, 1685,
	404, 1689, 1687, 2239, 595, 1654, 2129, 2530, 2514, 2515,
	2403, 1586, 1567, 2174, 1589, 1590, 1591, 2429, 2497, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1608, 1601, 2460, 2459,
	1636, 736, 737, 738, 735, 2385, 1656, 2378, 1658, 736,
	737, 738, 735, 1686, 2374, 1708, 2373, 736, 737, 738,
	735, 1242, 1630, 754, 755, 756, 757, 758, 751, 1649,
	2372, 1652, 1653, 2336, 2309, 1659, 1767, 1663, 1657, 1662,
	1655, 2274, 2172, 1661, 659, 660, 661, 2467, 635, 577,
	2170, 2138, 2333, 1646, 2126, 2125, 1267, 736, 737, 738,
	735, 598, 868, 865, 866, 867, 2122, 2091, 1772, 1749,
	1771, 1770, 1768, 802, 736, 737, 738, 735, 2166, 1986,
	1699, 1700, 1701, 2623, 593, 1941, 1707, 750, 749, 759,
	760, 752, 753, 754, 755, 756, 757, 758, 751, 1706,
	736, 737, 738, 735, 1911, 1902, 1583, 1614, 1713, 487,
	486, 2600, 1205, 1205, 1205, 1607, 594, 599, 752, 753,
	754, 755, 756, 757, 758, 751, 1315, 1007, 985, 803,
	798, 797, 1769, 779, 587, 2033, 589, 602, 2356, 2165,
	2139, 586, 584, 583, 2110, 588, 2101, 600, 601, 742,
	743, 744, 745, 746, 747, 748, 740, 1731, 2095, 596,
	597, 736, 737, 738, 735, 1968, 2100, 965, 2083, 965,
	1967, 965, 2075, 2046, 1970, 1966, 672, 1963, 1955, 1950,
	736, 737, 738, 735, 1803, 1745, 1809, 736, 737, 738,
	735, 1802, 736, 737, 738, 735, 591, 736, 737, 738,
	735, 1741, 1801, 1805, 965, 1776, 736, 737, 738, 735,
	2593, 1804, 1593, 736, 737, 738, 735, 1800, 1784, 1584,
	1582, 1799, 965, 1579, 736, 737, 738, 735, 1578, 1576,
	1569, 1786, 1566, 1565, 1151, 1150, 963, 972, 1775, 736,
	737, 738, 735, 736, 737, 738, 735, 2620, 2571, 1773,
	1774, 2565, 2549, 2546, 963, 2544, 1785, 750, 749, 759,
	760, 752, 753, 754, 755, 756, 757, 758, 751, 965,
	1798, 114, 1762, 795, 104, 86, 1742, 2434, 114, 2420,
	1852, 2408, 2405, 2400, 2362, 1181, 1858, 2554, 1797, 2331,
	1756, 2330, 736, 737, 738, 735, 2329, 2326, 1734, 1732,
	2320, 1867, 2305, 903, 1739, 672, 120, 120, 120, 120,
	736, 737, 738, 735, 1872, 2154, 2152, 672, 120, 2133,
	2121, 1974, 1753, 1190, 1814, 1822, 1872, 1183, 111, 1849,
	1846, 1794, 1824, 1897, 1898, 111, 1850, 965, 1766, 1755,
	1719, 1044, 1697, 1691, 1690, 120, 120, 1643, 1086, 111,
	1195, 29, 1198, 736, 737, 738, 735, 1188, 1187, 1029,
	1888, 995, 1148, 872, 1148, 1859, 820, 1922, 819, 818,
	817, 816, 1684, 815, 814, 813, 965, 812, 811, 1819,
	810, 1759, 1887, 809, 808, 1860, 1928, 807, 806, 1777,
	1778, 80, 1864, 801, 1865, 1781, 1782, 800, 799, 1838,
	1857, 1904, 1905, 796, 792, 1851, 39, 1787, 791, 789,
	18, 1636, 8, 1267, 1267, 1267, 1267, 1873, 1874, 1875,
	1876, 1929, 1869, 1868, 1866, 1267, 1862, 1886, 1917, 6,
	1884, 1204, 1885, 788, 1205, 1924, 1921, 1817, 1818, 1212,
	787, 7, 1900, 1220, 1861, 1903, 1845, 786, 1863, 1956,
	785, 784, 1958, 1933, 1960, 783, 782, 1909, 781, 547,
	1793, 777, 1915, 776, 1938, 672, 1932, 1919, 80, 2018,
	1926, 1927, 1913, 1925, 2002, 80, 1920, 700, 2327, 1918,
	1648, 120, 736, 737, 738, 735, 1632, 1946, 1792, 1948,
	672, 2059, 2060, 688, 120, 1642, 1954, 2044, 762, 2002,
	765, 2552, 2519, 2048, 2062, 1961, 1962, 1840, 1957, 1959,
	736, 737, 738, 735, 1704, 763, 764, 761, 1318, 750,
	749, 759, 760, 752, 753, 754, 755, 756, 757, 758,
	751, 1788, 1669, 1672, 1673, 1674, 1670, 2034, 1671, 1675,
	699, 1205, 1881, 1879, 2065, 2064, 1205, 1882, 1880, 1776,
	1878, 1877, 2606, 736, 737, 738, 735, 2157, 1728, 2156,
	2042, 1722, 1780, 1821, 2035, 2036, 2037, 749, 759, 760,
	752, 753, 754, 755, 756, 757, 758, 751, 2039, 2038,
	2043, 1637, 1949, 120, 736, 737, 738, 735, 120, 1883,
	1175, 1673, 1674, 2155, 2053, 2052, 2063, 1779, 1993, 1994,
	1717, 1267, 2051, 1754, 1751, 1969, 1746, 2070, 2071, 2072,
	63, 38, 2081, 874, 2067, 117, 37, 1996, 1791, 736,
	737, 738, 735, 1796, 2080, 750, 749, 759, 760, 752,
	753, 754, 755, 756, 757, 758, 751, 120, 1626, 2089,
	551, 552, 553, 554, 2093, 694, 2114, 1757, 2086, 2276,
	339, 340, 338, 550, 2047, 2087, 341, 1995, 2049, 2050,
	2090, 2084, 1094, 1227, 2054, 1664, 1619, 1620, 2085, 736,
	737, 738, 735, 1140, 1139, 2488, 965, 965, 937, 2066,
	936, 120, 2142, 726, 736, 737, 738, 735, 1669, 1672,
	1673, 1674, 1670, 2109, 1671, 1675, 672, 886, 887, 884,
	885, 2069, 973, 2108, 1513, 1872, 882, 883, 963, 2136,
	2134, 880, 881, 2112, 906, 876, 2566, 2113, 2439, 2119,
	2117, 2159, 2117, 1148, 2437, 551, 552, 553, 554, 2365,
	2363, 1684, 2118, 2355, 2354, 2148, 2352, 2144, 550, 1231,
	2256, 2255, 2171, 80, 2140, 2168, 2107, 2141, 2106, 2078,
	879, 550, 672, 2077, 2178, 1907, 2228, 2230, 2149, 2228,
	2228, 2002, 2556, 2555, 909, 1931, 1568, 686, 2150, 2555,
	2556, 2322, 2082, 45, 672, 1, 1317, 1890, 2167, 2164,
	1891, 2068, 1893, 1531, 2160, 2123, 2032, 2094, 1267, 2016,
	898, 569, 1143, 1229, 2096, 2253, 888, 1014, 647, 681,
	2225, 1011, 680, 2169, 678, 2229, 1096, 450, 1321, 2401,
	2203, 2271, 2252, 2175, 2231, 2232, 2487, 2532, 1973, 2433,
	2250, 2280, 1975, 1976, 1977, 1978, 2490, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1027, 2144, 2143, 2247, 434, 2347,
	1989, 2257, 2146, 2349, 2233, 2147, 2259, 2251, 1815, 2162,
	1914, 581, 482, 458, 965, 790, 997, 2308, 990, 649,
	457, 2132, 1834, 555, 646, 120, 582, 1602, 2102, 1176,
	1197, 1180, 2616, 2605, 2230, 2283, 2584, 2564, 1205, 2455,
	2601, 2151, 2502, 2547, 2153, 2267, 2136, 2265, 2266, 2540,
	2451, 2277, 374, 2225, 1277, 541, 620, 2281, 2282, 2158,
	2285, 2286, 2287, 2288, 2310, 2306, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2421, 2325, 2332, 2366, 1555, 375, 2340, 1647, 2480, 2343,
	2407, 559, 1631, 2342, 2248, 2249, 560, 1634, 2351, 1633,
	1067, 741, 1084, 2234, 2399, 2097, 750, 749, 759, 760,
	752, 753, 754, 755, 756, 757, 758, 751, 2098, 774,
	411, 1557, 423, 417, 1831, 2218, 1901, 672, 44, 43,
	672, 672, 672, 2379, 42, 1309, 1338, 452, 122, 1339,
	672, 2448, 2272, 2492, 2364, 1684, 432, 2431, 431, 430,
	429, 1668, 1666, 1665, 2409, 1263, 1262, 2417, 2418, 2419,
	1307, 2369, 2370, 2449, 2416, 2428, 2516, 2375, 2376, 2427,
	965, 965, 2406, 2470, 2471, 2430, 2319, 2386, 2315, 2438,
	2442, 2440, 2441, 2436, 80, 2311, 2461, 2177, 2176, 2204,
	2450, 2209, 2205, 2211, 827, 823, 825, 826, 824, 1765,
	1761, 120, 963, 963, 2457, 2458, 2000, 2001, 1998, 672,
	2061, 2057, 1329, 1210, 1820, 2219, 1264, 1260, 2246, 544,
	5, 672, 28, 27, 26, 14, 13, 2341, 2212, 2463,
	1018, 12, 17, 25, 2207, 2494, 2473, 2469, 24, 2222,
	2223, 23, 22, 71, 70, 2208, 69, 68, 2478, 2361,
	2493, 21, 11, 67, 2486, 66, 65, 1302, 20, 19,
	60, 61, 55, 54, 53, 580, 2498, 52, 51, 50,
	49, 59, 58, 57, 56, 2569, 48, 47, 2505, 2507,
	2213, 46, 84, 83, 82, 81, 30, 31, 32, 2513,
	33, 94, 93, 95, 91, 89, 92, 2524, 2525, 2526,
	2527, 2534, 2539, 90, 88, 40, 10, 16, 2, 0,
	0, 0, 2543, 0, 2545, 0, 0, 0, 0, 0,
	0, 2538, 750, 749, 759, 760, 752, 753, 754, 755,
	756, 757, 758, 751, 0, 2550, 2551, 2494, 2563, 2553,
	2361, 0, 0, 0, 0, 672, 2557, 672, 2559, 0,
	0, 2562, 2493, 2568, 1050, 2570, 1050, 2573, 0, 2529,
	0, 0, 0, 0, 0, 0, 0, 2221, 2579, 2005,
	0, 0, 672, 2534, 2580, 0, 0, 2587, 0, 0,
	2591, 1050, 0, 0, 2597, 0, 0, 2468, 0, 0,
	0, 0, 0, 0, 2215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2604, 0, 0, 0,
	0, 0, 0, 2615, 0, 2614, 2214, 2216, 0, 0,
	0, 0, 0, 2626, 0, 2628, 0, 2627, 2629, 0,
	0, 0, 2615, 0, 0, 1454, 1496, 0, 0, 1443,
	288, 1401, 1456, 1374, 1390, 1464, 1391, 1392, 1429, 1353,
	1411, 250, 1388, 0, 0, 0, 0, 0, 0, 1446,
	1345, 1377, 1378, 1347, 1384, 1348, 1375, 1403, 195, 1373,
	1414, 220, 1426, 1387, 1408, 1462, 0, 0, 280, 234,
	2224, 2361, 1406, 1448, 1409, 1434, 1400, 1430, 1361, 1422,
	1457, 1389, 2210, 1427, 1458, 0, 0, 0, 2220, 659,
	660, 661, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 1425, 1452, 1386, 0, 179, 1455, 1407, 1428,
	0, 0, 1346, 1423, 0, 1351, 1354, 1463, 1450, 1381,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 1404,
	1410, 1431, 1397, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 1419, 0, 0, 0, 1356, 1352,
	0, 1402, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 1495, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 1355, 309, 172, 1490, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	1474, 1475, 1476, 1477, 1478, 337, 1486, 1487, 0, 1491,
	1492, 1493, 1360, 0, 1380, 1432, 0, 1344, 1441, 1449,
	1399, 311, 1451, 1396, 1395, 1481, 0, 1480, 284, 1482,
	1483, 219, 1447, 1376, 1385, 327, 1383, 270, 252, 1453,
	1418, 1494, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 1479, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 1488, 0, 1489,
	323, 202, 161, 306, 0, 248, 0, 1444, 1349, 1359,
	1357, 1393, 1420, 1421, 244, 322, 1436, 1440, 1437, 1465,
	273, 0, 0, 0, 0, 0, 213, 254, 1438, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 281, 304, 316, 333, 336, 1497, 1498, 1499,
	165, 335, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 307,
	1394, 1367, 1405, 315, 1370, 1368, 1435, 1369, 1424, 331,
	238, 239, 240, 241, 205, 0, 181, 334, 263, 1415,
	1398, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1416, 0,
	1508, 1509, 1510, 1511, 1512, 1372, 328, 201, 207, 0,
	209, 180, 253, 203, 313, 216, 1442, 245, 212, 278,
	217, 223, 266, 312, 251, 271, 178, 303, 279, 227,
	2567, 0, 1366, 1371, 1365, 1412, 1413, 1459, 1460, 1461,
	1433, 1358, 1445, 0, 1362, 1364, 1363, 750, 749, 759,
	760, 752, 753, 754, 755, 756, 757, 758, 751, 0,
	0, 0, 0, 0, 0, 0, 1439, 0, 0, 1417,
	162, 0, 221, 1466, 262, 200, 0, 750, 749, 759,
	760, 752, 753, 754, 755, 756, 757, 758, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 1484, 1485, 319, 320,
	321, 305, 425, 192, 1507, 0, 195, 0, 0, 220,
	0, 0, 0, 456, 0, 0, 280, 234, 1971, 0,
	0, 0, 512, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 449, 487, 486,
	436, 445, 0, 0, 176, 437, 0, 444, 438, 442,
	441, 439, 440, 0, 504, 0, 0, 0, 0, 0,
	0, 409, 422, 2358, 426, 750, 749, 759, 760, 752,
	753, 754, 755, 756, 757, 758, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 420, 0, 0,
	0, 0, 465, 0, 421, 0, 0, 467, 446, 447,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 443, 463,
	468, 188, 526, 461, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 527,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 0, 311,
	0, 0, 510, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 462, 0, 270, 252, 523, 410, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 508, 248, 0, 522, 503, 505, 506, 509,
	513, 514, 515, 516, 517, 519, 521, 525, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 2359, 0, 0, 0, 2360, 0, 524, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 466, 238, 239,
	240, 241, 511, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	533, 507, 532, 534, 535, 531, 536, 537, 518, 428,
	0, 471, 529, 528, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 494, 475, 476, 477, 427, 478,
	473, 474, 495, 469, 491, 492, 451, 454, 479, 490,
	480, 493, 496, 497, 538, 539, 540, 483, 498, 489,
	488, 481, 470, 499, 500, 455, 453, 484, 485, 472,
	0, 0, 501, 502, 288, 464, 319, 320, 321, 305,
	0, 192, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 456,
	0, 0, 280, 234, 0, 0, 0, 0, 512, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 449, 487, 486, 436, 445, 0, 0,
	176, 437, 0, 444, 438, 442, 441, 439, 440, 0,
	504, 0, 0, 0, 0, 0, 0, 409, 422, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 420, 0, 0, 0, 0, 465, 0,
	421, 0, 0, 467, 446, 447, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 443, 463, 468, 188, 526, 461,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 527, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 0, 311, 0, 0, 510, 0,
	0, 0, 284, 0, 0, 219, 0, 0, 0, 462,
	0, 270, 252, 523, 410, 0, 268, 222, 296, 260,
	302, 286, 310, 264, 261, 163, 287, 191, 233, 174,
	175, 187, 194, 196, 198, 199, 242, 243, 255, 275,
	289, 290, 291, 190, 183, 269, 184, 208, 185, 164,
	277, 186, 166, 256, 294, 0, 204, 265, 229, 167,
	228, 257, 293, 292, 318, 324, 325, 329, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 1145, 1144, 1146, 323, 202, 161, 306, 508, 248,
	0, 522, 503, 505, 506, 509, 513, 514, 515, 516,
	517, 519, 521, 525, 273, 0, 0, 0, 0, 0,
	213, 254, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 304, 316, 333,
	336, 0, 0, 0, 165, 335, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 466, 238, 239, 240, 241, 511, 0,
	181, 334, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 201, 207, 0, 209, 180, 253, 203, 313, 216,
	0, 245, 212, 278, 217, 223, 266, 312, 251, 271,
	178, 303, 279, 227, 0, 0, 533, 507, 532, 534,
	535, 531, 536, 537, 518, 428, 0, 471, 529, 528,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 221, 0, 262, 200,
	494, 475, 476, 477, 427, 478, 473, 474, 495, 469,
	491, 492, 451, 454, 479, 490, 480, 493, 496, 497,
	538, 539, 540, 483, 498, 489, 488, 481, 470, 499,
	500, 455, 453, 484, 485, 472, 0, 0, 501, 502,
	288, 464, 319, 320, 321, 305, 0, 192, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 456, 0, 0, 280, 234,
	0, 0, 0, 0, 512, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 449,
	487, 486, 436, 445, 0, 0, 176, 437, 0, 444,
	438, 442, 441, 439, 440, 0, 504, 0, 0, 0,
	0, 0, 0, 409, 422, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 0, 0, 0, 465, 0, 421, 0, 0, 467,
	446, 447, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	443, 463, 468, 188, 526, 461, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 527, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 311, 0, 0, 510, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 462, 0, 270, 252, 523,
	410, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 508, 248, 0, 522, 503, 505,
	506, 509, 513, 514, 515, 516, 517, 519, 521, 525,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 2359, 0, 0, 0, 2360, 0, 524,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 466,
	238, 239, 240, 241, 511, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 201, 207, 0,
	209, 180, 253, 203, 313, 216, 0, 245, 212, 278,
	217, 223, 266, 312, 251, 271, 178, 303, 279, 227,
	0, 0, 533, 507, 532, 534, 535, 531, 536, 537,
	518, 428, 0, 471, 529, 528, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 221, 0, 262, 200, 494, 475, 476, 477,
	427, 478, 473, 474, 495, 469, 491, 492, 451, 454,
	479, 490, 480, 493, 496, 497, 538, 539, 540, 483,
	498, 489, 488, 481, 470, 499, 500, 455, 453, 484,
	485, 472, 0, 0, 501, 502, 288, 464, 319, 320,
	321, 305, 0, 192, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 0, 195, 1206, 0, 220, 0, 0,
	0, 456, 0, 0, 280, 234, 0, 0, 0, 0,
	512, 520, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 418, 0, 0, 449, 487, 486, 436, 445,
	0, 0, 176, 437, 0, 444, 438, 442, 441, 439,
	440, 0, 504, 0, 0, 0, 0, 0, 0, 409,
	422, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 420, 0, 0, 0, 0,
	465, 0, 421, 0, 0, 1288, 446, 447, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 443, 463, 468, 188,
	526, 461, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 527, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 311, 0, 0,
	510, 0, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 462, 0, 270, 252, 523, 410, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 323, 202, 161, 306,
	508, 248, 0, 522, 503, 505, 506, 509, 513, 514,
	515, 516, 517, 519, 521, 525, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 466, 238, 239, 240, 241,
	511, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 533, 507,
	532, 534, 535, 531, 536, 537, 518, 428, 0, 471,
	529, 528, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 494, 475, 476, 477, 427, 478, 473, 474,
	495, 469, 491, 492, 451, 454, 479, 490, 480, 493,
	496, 497, 538, 539, 540, 483, 498, 489, 488, 481,
	470, 499, 500, 455, 453, 484, 485, 472, 0, 0,
	501, 502, 0, 0, 319, 320, 321, 305, 0, 192,
	114, 288, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 456, 0, 0, 280,
	234, 0, 0, 0, 0, 512, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 418, 0, 0,
	449, 487, 486, 436, 445, 0, 0, 176, 437, 0,
	444, 438, 442, 441, 439, 440, 0, 504, 0, 0,
	0, 0, 0, 0, 409, 422, 0, 426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 0, 0, 0, 0, 465, 0, 421, 0, 0,
	467, 446, 447, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 443, 463, 468, 188, 526, 461, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 527, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 311, 0, 0, 510, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 462, 0, 270, 252,
	523, 410, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 508, 248, 0, 522, 503,
	505, 506, 509, 513, 514, 515, 516, 517, 519, 521,
	525, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	466, 238, 239, 240, 241, 511, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 533, 507, 532, 534, 535, 531, 536,
	537, 518, 428, 0, 471, 529, 528, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 87, 262, 200, 494, 475, 476,
	477, 427, 478, 473, 474, 495, 469, 491, 492, 451,
	454, 479, 490, 480, 493, 496, 497, 538, 539, 540,
	483, 498, 489, 488, 481, 470, 499, 500, 455, 453,
	484, 485, 472, 0, 0, 501, 502, 288, 464, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 195, 2581, 0, 220, 0,
	0, 0, 456, 0, 0, 280, 234, 0, 0, 0,
	0, 512, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 449, 487, 486, 436,
	445, 0, 0, 176, 437, 0, 444, 438, 442, 441,
	439, 440, 0, 504, 0, 0, 0, 0, 0, 0,
	409, 422, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 0, 0, 0,
	0, 465, 0, 421, 0, 0, 467, 446, 447, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 443, 463, 468,
	188, 526, 461, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 527, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 311, 0,
	0, 510, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 462, 0, 270, 252, 523, 410, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 508, 248, 0, 522, 503, 505, 506, 509, 513,
	514, 515, 516, 517, 519, 521, 525, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 466, 238, 239, 240,
	241, 511, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 533,
	507, 532, 534, 535, 531, 536, 537, 518, 428, 0,
	471, 529, 528, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 494, 475, 476, 477, 427, 478, 473,
	474, 495, 469, 491, 492, 451, 454, 479, 490, 480,
	493, 496, 497, 538, 539, 540, 483, 498, 489, 488,
	481, 470, 499, 500, 455, 453, 484, 485, 472, 0,
	0, 501, 502, 288, 464, 319, 320, 321, 305, 0,
	192, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 0,
	0, 195, 1206, 0, 220, 0, 0, 0, 456, 0,
	0, 280, 234, 0, 0, 0, 0, 512, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 449, 487, 486, 436, 445, 0, 0, 176,
	437, 0, 444, 438, 442, 441, 439, 440, 0, 504,
	0, 0, 0, 0, 0, 0, 409, 422, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 0, 0, 0, 0, 465, 0, 421,
	0, 0, 467, 446, 447, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 443, 463, 468, 188, 526, 461, 309,
	172, 0, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 527, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 311, 0, 0, 510, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 462, 0,
	270, 252, 523, 410, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 508, 248, 0,
	522, 503, 505, 506, 509, 513, 514, 515, 516, 517,
	519, 521, 525, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 466, 238, 239, 240, 241, 511, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 533, 507, 532, 534, 535,
	531, 536, 537, 518, 428, 0, 471, 529, 528, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 494,
	475, 476, 477, 427, 478, 473, 474, 495, 469, 491,
	492, 451, 454, 479, 490, 480, 493, 496, 497, 538,
	539, 540, 483, 498, 489, 488, 481, 470, 499, 500,
	455, 453, 484, 485, 472, 0, 0, 501, 502, 288,
	464, 319, 320, 321, 305, 0, 192, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 0, 0, 0, 195, 0, 0,
	220, 0, 0, 0, 456, 0, 0, 280, 234, 0,
	0, 0, 0, 512, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 449, 487,
	486, 436, 445, 0, 0, 176, 437, 0, 444, 438,
	442, 441, 439, 440, 0, 504, 0, 0, 0, 0,
	0, 0, 409, 422, 0, 426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 984,
	0, 0, 0, 465, 0, 421, 0, 0, 467, 446,
	447, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 443,
	463, 468, 188, 526, 461, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	527, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	311, 0, 0, 510, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 462, 0, 270, 252, 523, 410,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 508, 248, 0, 522, 503, 505, 506,
	509, 513, 514, 515, 516, 517, 519, 521, 525, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 466, 238,
	239, 240, 241, 511, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 533, 507, 532, 534, 535, 531, 536, 537, 518,
	428, 0, 471, 529, 528, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 494, 475, 476, 477, 427,
	478, 473, 474, 495, 469, 491, 492, 451, 454, 479,
	490, 480, 493, 496, 497, 538, 539, 540, 483, 498,
	489, 488, 481, 470, 499, 500, 455, 453, 484, 485,
	472, 0, 0, 501, 502, 0, 0, 319, 320, 321,
	305, 0, 192, 288, 464, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 0,
	0, 195, 0, 0, 220, 0, 0, 0, 456, 0,
	0, 280, 234, 0, 0, 0, 0, 512, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 449, 487, 486, 436, 445, 0, 0, 176,
	437, 0, 444, 438, 442, 441, 439, 440, 0, 504,
	0, 0, 0, 0, 0, 0, 409, 422, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 0, 0, 0, 0, 465, 0, 421,
	0, 0, 467, 446, 447, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 443, 463, 468, 188, 526, 461, 309,
	172, 0, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 527, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 311, 0, 0, 510, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 462, 0,
	270, 252, 523, 410, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 508, 248, 0,
	522, 503, 505, 506, 509, 513, 514, 515, 516, 517,
	519, 521, 525, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 466, 238, 239, 240, 241, 511, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 533, 507, 532, 534, 535,
	531, 536, 537, 518, 428, 0, 471, 529, 528, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 494,
	475, 476, 477, 427, 478, 473, 474, 495, 469, 491,
	492, 451, 454, 479, 490, 480, 493, 496, 497, 538,
	539, 540, 483, 498, 489, 488, 481, 470, 499, 500,
	455, 453, 484, 485, 472, 0, 0, 501, 502, 288,
	464, 319, 320, 321, 305, 0, 192, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 0, 0, 0, 195, 0, 0,
	220, 0, 0, 0, 456, 0, 0, 280, 234, 0,
	0, 0, 0, 512, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 0, 0, 449, 487,
	486, 436, 445, 0, 0, 176, 437, 0, 444, 438,
	442, 441, 439, 440, 0, 504, 0, 0, 0, 0,
	0, 0, 409, 422, 0, 426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 419, 420, 0,
	0, 0, 0, 465, 0, 421, 0, 0, 467, 446,
	447, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 443,
	463, 468, 188, 526, 461, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	527, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	311, 0, 0, 510, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 462, 0, 270, 252, 523, 410,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 508, 248, 0, 522, 503, 505, 506,
	509, 513, 514, 515, 516, 517, 519, 521, 525, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 466, 238,
	239, 240, 241, 511, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 533, 507, 532, 534, 535, 531, 536, 537, 518,
	428, 0, 471, 529, 528, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 494, 475, 476, 477, 427,
	478, 473, 474, 495, 469, 491, 492, 451, 454, 479,
	490, 480, 493, 496, 497, 538, 539, 540, 483, 498,
	489, 488, 481, 470, 499, 500, 455, 453, 484, 485,
	472, 0, 0, 501, 502, 288, 464, 319, 320, 321,
	305, 0, 192, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 0, 425,
	0, 0, 0, 195, 0, 0, 220, 0, 0, 0,
	456, 0, 0, 280, 234, 0, 0, 0, 0, 512,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 449, 487, 486, 436, 445, 0,
	0, 176, 437, 0, 444, 438, 442, 441, 439, 440,
	0, 504, 0, 0, 0, 0, 0, 0, 0, 422,
	0, 426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 0, 0, 0, 0, 465,
	0, 421, 0, 0, 467, 446, 447, 0, 0, 168,
	285, 301, 177, 276, 314, 182, 283, 173, 249, 272,
	0, 0, 170, 299, 282, 231, 214, 215, 169, 0,
	267, 193, 206, 189, 247, 443, 463, 468, 188, 526,
	461, 309, 172, 0, 308, 246, 295, 300, 232, 226,
	171, 297, 230, 225, 218, 197, 527, 210, 258, 224,
	259, 211, 236, 235, 237, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 459, 0, 0, 311, 0, 0, 510,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	462, 0, 270, 252, 523, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 1069, 1070, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 508,
	248, 0, 522, 503, 505, 506, 509, 513, 514, 515,
	516, 517, 519, 521, 525, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 466, 238, 239, 240, 241, 511,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 533, 507, 532,
	534, 535, 531, 536, 537, 518, 428, 0, 471, 529,
	528, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 494, 475, 476, 477, 427, 478, 473, 474, 495,
	469, 491, 492, 451, 454, 479, 490, 480, 493, 496,
	497, 538, 539, 540, 483, 498, 489, 488, 481, 470,
	499, 500, 455, 453, 484, 485, 472, 0, 0, 501,
	502, 288, 464, 319, 320, 321, 305, 0, 192, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 456, 0, 0, 280,
	234, 0, 0, 0, 0, 512, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 487, 486, 436, 445, 0, 0, 176, 437, 0,
	444, 438, 442, 441, 439, 440, 0, 504, 0, 0,
	0, 0, 0, 0, 409, 422, 0, 426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 419,
	420, 0, 0, 0, 0, 465, 0, 421, 0, 0,
	467, 446, 447, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 443, 463, 468, 188, 526, 461, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 527, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 311, 0, 0, 510, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 462, 0, 270, 252,
	523, 410, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 508, 248, 0, 522, 503,
	505, 506, 509, 513, 514, 515, 516, 517, 519, 521,
	525, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	466, 238, 239, 240, 241, 511, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 533, 507, 532, 534, 535, 531, 536,
	537, 518, 428, 0, 471, 529, 528, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 494, 475, 476,
	477, 427, 478, 473, 474, 495, 469, 491, 492, 451,
	454, 479, 490, 480, 493, 496, 497, 538, 539, 540,
	483, 498, 489, 488, 481, 470, 499, 500, 455, 453,
	484, 485, 472, 0, 0, 501, 502, 288, 464, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 195, 0, 0, 220, 0,
	0, 0, 456, 0, 0, 280, 234, 0, 0, 0,
	0, 512, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 449, 487, 486, 436,
	445, 0, 0, 176, 437, 0, 444, 438, 442, 441,
	439, 440, 0, 504, 0, 0, 0, 0, 0, 0,
	0, 422, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 0, 0, 0,
	0, 465, 0, 421, 0, 0, 467, 446, 447, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 443, 463, 468,
	188, 526, 461, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 527, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 311, 0,
	0, 510, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 462, 0, 270, 252, 523, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 508, 248, 0, 522, 503, 505, 506, 509, 513,
	514, 515, 516, 517, 519, 521, 525, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 466, 238, 239, 240,
	241, 511, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 533,
	507, 532, 534, 535, 531, 536, 537, 518, 428, 0,
	471, 529, 528, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 494, 475, 476, 477, 427, 478, 473,
	474, 495, 469, 491, 492, 451, 454, 479, 490, 480,
	493, 496, 497, 538, 539, 540, 483, 498, 489, 488,
	481, 470, 499, 500, 455, 453, 484, 485, 472, 0,
	0, 501, 502, 0, 0, 319, 320, 321, 305, 0,
	192, 114, 288, 35, 104, 86, 0, 0, 0, 0,
	0, 0, 0, 250, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 219, 0, 0, 0, 327, 0, 270,
	252, 0, 0, 0, 268, 222, 296, 260, 302, 286,
	310, 264, 261, 163, 287, 191, 233, 174, 175, 187,
	194, 196, 198, 199, 242, 243, 255, 275, 289, 290,
	291, 190, 183, 269, 184, 208, 185, 164, 277, 186,
	166, 256, 294, 0, 204, 265, 229, 167, 228, 257,
	293, 292, 318, 324, 325, 329, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 323, 202, 161, 306, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 322, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 213, 254,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 304, 316, 333, 336, 0,
	0, 0, 165, 335, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 331, 238, 239, 240, 241, 348, 350, 181, 334,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 201,
	207, 0, 209, 180, 253, 203, 313, 216, 0, 245,
	212, 278, 217, 223, 266, 312, 251, 271, 178, 303,
	279, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 36, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 221, 87, 262, 200, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 0, 288, 0, 0, 0, 0,
	319, 320, 321, 305, 0, 192, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 280, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 2009, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	285, 301, 177, 276, 314, 182, 283, 173, 249, 272,
	0, 0, 170, 299, 282, 231, 214, 215, 169, 0,
	267, 193, 206, 189, 247, 0, 298, 326, 188, 317,
	0, 309, 172, 0, 308, 246, 295, 300, 232, 226,
	171, 297, 230, 225, 218, 197, 0, 210, 258, 224,
	259, 211, 236, 235, 237, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 311, 0, 0, 0,
	2006, 0, 2005, 284, 2007, 2010, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 2011, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1311, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	1312, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 736, 737, 738,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 327, 0, 270, 252, 0, 0, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 322, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 331, 238, 239,
	240, 241, 205, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	0, 288, 0, 0, 0, 0, 319, 320, 321, 305,
	0, 192, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	619, 0, 220, 0, 0, 0, 0, 0, 0, 280,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 627, 628, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 0, 298, 326, 188, 317, 605, 309, 172, 604,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 0, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	617, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 618,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	621, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 629, 624,
	625, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	626, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 114, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1265, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 219, 0, 0, 0, 327,
	0, 270, 252, 0, 0, 0, 268, 222, 296, 260,
	302, 286, 310, 264, 261, 163, 287, 191, 233, 174,
	175, 187, 194, 196, 198, 199, 242, 243, 255, 275,
	289, 290, 291, 190, 183, 269, 184, 208, 185, 164,
	277, 186, 166, 256, 294, 0, 204, 265, 229, 167,
	228, 257, 293, 292, 318, 324, 325, 329, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 323, 202, 161, 306, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 322,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	213, 254, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 304, 316, 333,
	336, 0, 0, 0, 165, 335, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 331, 238, 239, 240, 241, 205, 0,
	181, 334, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 201, 207, 0, 209, 180, 253, 203, 313, 216,
	0, 245, 212, 278, 217, 223, 266, 312, 251, 271,
	178, 303, 279, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 221, 87, 262, 200,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 114, 288, 1268, 1269,
	0, 0, 319, 320, 321, 305, 0, 192, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 280, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 1333, 0, 121, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 0, 298, 326,
	188, 317, 0, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 0, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	87, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 114,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 1324, 0, 121,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 327, 0, 270, 252, 0,
	0, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 322, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 331,
	238, 239, 240, 241, 205, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 201, 207, 0,
	209, 180, 253, 203, 313, 216, 0, 245, 212, 278,
	217, 223, 266, 312, 251, 271, 178, 303, 279, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 221, 87, 262, 200, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 0, 288, 0, 0, 0, 0, 319, 320,
	321, 305, 0, 192, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 280, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 627, 628, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 0, 298, 326, 188, 317, 605, 309,
	172, 604, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 0, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	629, 624, 625, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1265, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 327, 0, 270, 252, 0, 0, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 323, 202, 161, 306,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 322, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 331, 238, 239, 240, 241,
	205, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 0, 288,
	1268, 1269, 0, 0, 319, 320, 321, 305, 0, 192,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 968, 0,
	220, 0, 0, 0, 0, 0, 0, 280, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 966, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 0,
	298, 326, 188, 317, 0, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	0, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 962, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 966, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 964, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 219, 0, 0, 0, 327, 0, 270,
	252, 0, 0, 0, 268, 222, 296, 260, 302, 286,
	310, 264, 261, 163, 287, 191, 233, 174, 175, 187,
	194, 196, 198, 199, 242, 243, 255, 275, 289, 290,
	291, 190, 183, 269, 184, 208, 185, 164, 277, 186,
	166, 256, 294, 0, 204, 265, 229, 167, 228, 257,
	293, 292, 318, 324, 325, 329, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 323, 202, 161, 306, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 322, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 213, 254,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 304, 316, 333, 336, 0,
	0, 0, 165, 335, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 331, 238, 239, 240, 241, 205, 0, 181, 334,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 201,
	207, 0, 209, 180, 253, 203, 313, 216, 0, 245,
	212, 278, 217, 223, 266, 312, 251, 271, 178, 303,
	279, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 221, 0, 262, 200, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 0, 288, 0, 0, 0, 0,
	319, 320, 321, 305, 0, 192, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 280, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2489, 0, 121, 487, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	285, 301, 177, 276, 314, 182, 283, 173, 249, 272,
	0, 0, 170, 299, 282, 231, 214, 215, 169, 0,
	267, 193, 206, 189, 247, 0, 298, 326, 188, 317,
	0, 309, 172, 0, 308, 246, 295, 300, 232, 226,
	171, 297, 230, 225, 218, 197, 0, 210, 258, 224,
	259, 211, 236, 235, 237, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	966, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 327, 0, 270, 252, 0, 0, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 322, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 331, 238, 239,
	240, 241, 205, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	0, 288, 0, 0, 0, 0, 319, 320, 321, 305,
	0, 192, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 280,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 966, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2137, 0, 0, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 0, 298, 326, 188, 317, 0, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 0, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 1702, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 966, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 219, 0, 0, 0, 327,
	0, 270, 252, 0, 0, 0, 268, 222, 296, 260,
	302, 286, 310, 264, 261, 163, 287, 191, 233, 174,
	175, 187, 194, 196, 198, 199, 242, 243, 255, 275,
	289, 290, 291, 190, 183, 269, 184, 208, 185, 164,
	277, 186, 166, 256, 294, 0, 204, 265, 229, 167,
	228, 257, 293, 292, 318, 324, 325, 329, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 323, 202, 161, 306, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 322,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	213, 254, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 304, 316, 333,
	336, 0, 0, 0, 165, 335, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 331, 238, 239, 240, 241, 205, 0,
	181, 334, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 201, 207, 0, 209, 180, 253, 203, 313, 216,
	0, 245, 212, 278, 217, 223, 266, 312, 251, 271,
	178, 303, 279, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 221, 0, 262, 200,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 0, 288, 0, 0,
	0, 0, 319, 320, 321, 305, 0, 192, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 280, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2590, 0, 121, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 0, 298, 326,
	188, 317, 0, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 0, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 0, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	487, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 327, 0, 270, 252, 0,
	0, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 322, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 331,
	238, 239, 240, 241, 205, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 201, 207, 0,
	209, 180, 253, 203, 313, 216, 0, 245, 212, 278,
	217, 223, 266, 312, 251, 271, 178, 303, 279, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 221, 0, 262, 200, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 0, 288, 0, 0, 0, 0, 319, 320,
	321, 305, 0, 192, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 280, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2245,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 0, 298, 326, 188, 317, 0, 309,
	172, 0, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 0, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 2432, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 327, 0, 270, 252, 0, 0, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 323, 202, 161, 306,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 322, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 331, 238, 239, 240, 241,
	205, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 0, 288,
	0, 0, 0, 0, 319, 320, 321, 305, 0, 192,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 280, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 0,
	298, 326, 188, 317, 0, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	0, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 2254, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 264, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 219, 0, 0, 0, 327, 0, 270,
	252, 0, 0, 0, 268, 222, 296, 260, 302, 286,
	310, 264, 261, 163, 287, 191, 233, 174, 175, 187,
	194, 196, 198, 199, 242, 243, 255, 275, 289, 290,
	291, 190, 183, 269, 184, 208, 185, 164, 277, 186,
	166, 256, 294, 0, 204, 265, 229, 167, 228, 257,
	293, 292, 318, 324, 325, 329, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 323, 202, 161, 306, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 322, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 213, 254,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 304, 316, 333, 336, 0,
	0, 0, 165, 335, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 331, 238, 239, 240, 241, 205, 0, 181, 334,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 201,
	207, 0, 209, 180, 253, 203, 313, 216, 0, 245,
	212, 278, 217, 223, 266, 312, 251, 271, 178, 303,
	279, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 221, 0, 262, 200, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 0, 288, 0, 0, 0, 0,
	319, 320, 321, 305, 0, 192, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 280, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	285, 301, 177, 276, 314, 182, 283, 173, 249, 272,
	0, 0, 170, 299, 282, 231, 214, 215, 169, 0,
	267, 193, 206, 189, 247, 0, 298, 326, 188, 317,
	0, 309, 172, 0, 308, 246, 295, 300, 232, 226,
	171, 297, 230, 225, 218, 197, 0, 210, 258, 224,
	259, 211, 236, 235, 237, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	2017, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 327, 0, 270, 252, 0, 0, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 322, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 331, 238, 239,
	240, 241, 205, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	0, 288, 0, 0, 0, 0, 319, 320, 321, 305,
	0, 192, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 280,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 966, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 0, 298, 326, 188, 317, 0, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 0, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 0, 288, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 280, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 285,
	301, 177, 276, 314, 182, 283, 173, 249, 272, 0,
	0, 170, 299, 282, 231, 214, 215, 169, 0, 267,
	193, 206, 189, 247, 0, 298, 326, 188, 317, 0,
	309, 172, 0, 308, 246, 295, 300, 232, 226, 171,
	297, 230, 225, 218, 197, 0, 210, 258, 224, 259,
	211, 236, 235, 237, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 219, 0, 0, 0, 327,
	0, 270, 252, 0, 0, 0, 268, 222, 296, 260,
	302, 286, 310, 264, 261, 163, 287, 191, 233, 174,
	175, 187, 194, 196, 198, 199, 242, 243, 255, 275,
	289, 290, 291, 190, 183, 269, 184, 208, 185, 164,
	277, 186, 166, 256, 294, 0, 204, 265, 229, 167,
	228, 257, 293, 292, 318, 324, 325, 329, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 323, 202, 161, 306, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 322,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	213, 254, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 304, 316, 333,
	336, 0, 0, 0, 165, 335, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 331, 238, 239, 240, 241, 205, 0,
	181, 334, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 201, 207, 0, 209, 180, 253, 203, 313, 216,
	0, 245, 212, 278, 217, 223, 266, 312, 251, 271,
	178, 303, 279, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 221, 0, 262, 200,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 0, 288, 0, 0,
	0, 0, 319, 320, 321, 305, 0, 192, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 280, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 1710,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 285, 301, 177, 276, 314, 182, 283, 173,
	249, 272, 0, 0, 170, 299, 282, 231, 214, 215,
	169, 0, 267, 193, 206, 189, 247, 0, 298, 326,
	188, 317, 0, 309, 172, 0, 308, 246, 295, 300,
	232, 226, 171, 297, 230, 225, 218, 197, 0, 210,
	258, 224, 259, 211, 236, 235, 237, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 284, 0, 0, 219, 0,
	0, 0, 327, 0, 270, 252, 0, 0, 0, 268,
	222, 296, 260, 302, 286, 310, 264, 261, 163, 287,
	191, 233, 174, 175, 187, 194, 196, 198, 199, 242,
	243, 255, 275, 289, 290, 291, 190, 183, 269, 184,
	208, 185, 164, 277, 186, 166, 256, 294, 0, 204,
	265, 229, 167, 228, 257, 293, 292, 318, 324, 325,
	329, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 323, 202, 161,
	306, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 322, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 213, 254, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	304, 316, 333, 336, 0, 0, 0, 165, 335, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 331, 238, 239, 240,
	241, 205, 0, 181, 334, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 201, 207, 0, 209, 180, 253,
	203, 313, 216, 0, 245, 212, 278, 217, 223, 266,
	312, 251, 271, 178, 303, 279, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 221,
	0, 262, 200, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 0,
	288, 0, 0, 0, 1639, 319, 320, 321, 305, 0,
	192, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 280, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 285, 301, 177, 276, 314,
	182, 283, 173, 249, 272, 0, 0, 170, 299, 282,
	231, 214, 215, 169, 0, 267, 193, 206, 189, 247,
	0, 298, 326, 188, 317, 0, 309, 172, 0, 308,
	246, 295, 300, 232, 226, 171, 297, 230, 225, 218,
	197, 0, 210, 258, 224, 259, 211, 236, 235, 237,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 219, 0, 0, 0, 327, 0, 270, 252, 0,
	0, 0, 268, 222, 296, 260, 302, 286, 310, 264,
	261, 163, 287, 191, 233, 174, 175, 187, 194, 196,
	198, 199, 242, 243, 255, 275, 289, 290, 291, 190,
	183, 269, 184, 208, 185, 164, 277, 186, 166, 256,
	294, 0, 204, 265, 229, 167, 228, 257, 293, 292,
	318, 324, 325, 329, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	323, 202, 161, 306, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 322, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 213, 254, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 304, 316, 333, 336, 0, 0, 0,
	165, 335, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 331,
	238, 239, 240, 241, 205, 0, 181, 334, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 201, 207, 0,
	209, 180, 253, 203, 313, 216, 0, 245, 212, 278,
	217, 223, 266, 312, 251, 271, 178, 303, 279, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 221, 0, 262, 200, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 0, 288, 0, 0, 0, 0, 319, 320,
	321, 305, 0, 192, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 280, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 285, 301,
	177, 276, 314, 182, 283, 173, 249, 272, 0, 0,
	170, 299, 282, 231, 214, 215, 169, 0, 267, 193,
	206, 189, 247, 0, 298, 326, 188, 317, 0, 309,
	172, 0, 308, 246, 295, 300, 232, 226, 171, 297,
	230, 225, 218, 197, 0, 210, 258, 224, 259, 211,
	236, 235, 237, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 1622, 0, 0,
	0, 284, 0, 0, 219, 0, 0, 0, 327, 0,
	270, 252, 0, 0, 0, 268, 222, 296, 260, 302,
	286, 310, 264, 261, 163, 287, 191, 233, 174, 175,
	187, 194, 196, 198, 199, 242, 243, 255, 275, 289,
	290, 291, 190, 183, 269, 184, 208, 185, 164, 277,
	186, 166, 256, 294, 0, 204, 265, 229, 167, 228,
	257, 293, 292, 318, 324, 325, 329, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 323, 202, 161, 306, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 322, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 213,
	254, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 304, 316, 333, 336,
	0, 0, 0, 165, 335, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 331, 238, 239, 240, 241, 205, 0, 181,
	334, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	201, 207, 0, 209, 180, 253, 203, 313, 216, 0,
	245, 212, 278, 217, 223, 266, 312, 251, 271, 178,
	303, 279, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 221, 0, 262, 200, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 0, 288, 0, 0, 0,
	0, 319, 320, 321, 305, 0, 192, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 327, 0, 270, 252, 0, 0, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 323, 202, 161, 306,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 322, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 331, 238, 239, 240, 241,
	205, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 0, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 0, 0, 162, 0, 221, 0,
	262, 200, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 0, 288,
	0, 0, 0, 0, 319, 320, 321, 305, 0, 192,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 280, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 285, 301, 177, 276, 314, 182,
	283, 173, 249, 272, 0, 0, 170, 299, 282, 231,
	214, 215, 169, 0, 267, 193, 206, 189, 247, 0,
	298, 326, 188, 317, 0, 309, 172, 0, 308, 246,
	295, 300, 232, 226, 171, 297, 230, 225, 218, 197,
	0, 210, 258, 224, 259, 211, 236, 235, 237, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 284, 0, 0,
	219, 0, 0, 0, 327, 0, 270, 252, 0, 0,
	0, 268, 222, 296, 260, 302, 286, 310, 365, 261,
	163, 287, 191, 233, 174, 175, 187, 194, 196, 198,
	199, 242, 243, 255, 275, 289, 290, 291, 190, 183,
	269, 184, 208, 185, 164, 277, 186, 166, 256, 294,
	0, 204, 265, 229, 167, 228, 257, 293, 292, 318,
	324, 325, 329, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 323,
	202, 161, 306, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 322, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 213, 254, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 304, 316, 333, 336, 0, 0, 0, 165,
	335, 0, 0, 0, 0, 0, 0, 366, 307, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 331, 238,
	239, 240, 241, 205, 0, 181, 334, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 201, 207, 0, 209,
	180, 253, 203, 313, 216, 0, 245, 212, 278, 217,
	223, 266, 312, 251, 271, 178, 303, 279, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 221, 0, 262, 200, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 0, 288, 0, 0, 0, 0, 319, 320, 321,
	305, 0, 192, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	280, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 285, 301, 177,
	276, 314, 182, 283, 173, 249, 272, 0, 0, 170,
	299, 282, 231, 214, 215, 169, 0, 267, 193, 206,
	189, 247, 0, 298, 326, 188, 317, 0, 309, 172,
	0, 308, 246, 295, 300, 232, 226, 171, 297, 230,
	225, 218, 197, 0, 210, 258, 224, 259, 211, 236,
	235, 237, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 311, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 219, 0, 0, 0, 327, 0, 270,
	252, 0, 0, 0, 268, 222, 296, 260, 302, 286,
	310, 264, 261, 163, 287, 191, 233, 174, 175, 187,
	194, 196, 198, 199, 242, 243, 255, 275, 289, 290,
	291, 190, 183, 269, 184, 208, 185, 164, 277, 186,
	166, 256, 294, 0, 204, 265, 229, 167, 228, 257,
	293, 292, 318, 324, 325, 329, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 323, 202, 161, 306, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 322, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 213, 254,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 304, 316, 333, 336, 0,
	0, 0, 165, 335, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 331, 238, 239, 240, 241, 205, 0, 181, 334,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 201,
	207, 0, 209, 180, 253, 203, 313, 216, 0, 245,
	212, 278, 217, 223, 266, 312, 251, 271, 178, 303,
	279, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 221, 0, 262, 200, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 0, 288, 0, 0, 0, 0,
	319, 320, 321, 305, 0, 192, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 195, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 280, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	285, 301, 177, 276, 314, 182, 283, 173, 249, 272,
	0, 0, 170, 299, 282, 231, 214, 215, 169, 0,
	267, 193, 206, 189, 247, 0, 298, 326, 188, 317,
	0, 309, 172, 0, 308, 246, 295, 300, 232, 226,
	171, 297, 230, 225, 218, 197, 0, 210, 258, 224,
	259, 211, 236, 235, 237, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 284, 0, 0, 219, 0, 0, 0,
	327, 0, 270, 252, 0, 0, 0, 268, 222, 296,
	260, 302, 286, 310, 264, 261, 163, 287, 191, 233,
	174, 175, 187, 194, 196, 198, 199, 242, 243, 255,
	275, 289, 290, 291, 190, 183, 269, 184, 208, 185,
	164, 277, 186, 166, 256, 294, 0, 204, 265, 229,
	167, 228, 257, 293, 292, 318, 324, 325, 329, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 323, 202, 161, 306, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	322, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 213, 254, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 304, 316,
	333, 336, 0, 0, 0, 165, 335, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 331, 238, 239, 240, 241, 205,
	0, 181, 334, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 201, 207, 0, 209, 180, 253, 203, 313,
	216, 0, 245, 212, 278, 217, 223, 266, 312, 251,
	271, 178, 303, 279, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 221, 0, 262,
	200, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 0, 288, 0,
	0, 0, 0, 319, 320, 321, 305, 0, 192, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 280, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 285, 301, 177, 276, 314, 182, 283,
	173, 249, 272, 0, 0, 170, 299, 282, 231, 214,
	215, 169, 0, 267, 193, 206, 189, 247, 0, 298,
	326, 188, 317, 0, 309, 172, 0, 308, 246, 295,
	300, 232, 226, 171, 297, 230, 225, 218, 197, 0,
	210, 258, 224, 259, 211, 236, 235, 237, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 219,
	0, 0, 0, 327, 0, 270, 252, 0, 0, 0,
	268, 222, 296, 260, 302, 286, 310, 264, 261, 163,
	287, 191, 233, 174, 175, 187, 194, 196, 198, 199,
	242, 243, 255, 275, 289, 290, 291, 190, 183, 269,
	184, 208, 185, 164, 277, 186, 166, 256, 294, 0,
	204, 265, 229, 167, 228, 257, 293, 292, 318, 324,
	325, 329, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 323, 202,
	161, 306, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 322, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 213, 254, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 304, 316, 333, 336, 0, 0, 0, 165, 335,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 331, 238, 239,
	240, 241, 205, 0, 181, 334, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 201, 207, 0, 209, 180,
	253, 203, 313, 216, 0, 245, 212, 278, 217, 223,
	266, 312, 251, 271, 178, 303, 279, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	221, 0, 262, 200, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	0, 288, 0, 0, 0, 0, 319, 320, 321, 305,
	0, 192, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 280,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 660, 661, 1682, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 0, 298, 326, 188, 317, 0, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 0, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 213, 254, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 250, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 0, 195, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 280, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 660, 661, 1682, 0,
	0, 162, 176, 221, 0, 262, 200, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 0, 0,
	168, 285, 301, 177, 276, 314, 182, 283, 173, 249,
	272, 0, 0, 170, 299, 282, 231, 214, 215, 169,
	0, 267, 193, 206, 189, 247, 0, 298, 326, 188,
	317, 0, 309, 172, 0, 308, 246, 295, 300, 232,
	226, 171, 297, 230, 225, 218, 197, 0, 210, 258,
	224, 259, 211, 236, 235, 237, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 219, 0, 0,
	0, 327, 0, 270, 252, 0, 0, 0, 268, 222,
	296, 260, 302, 286, 310, 264, 261, 163, 287, 191,
	233, 174, 175, 187, 194, 196, 198, 199, 242, 243,
	255, 275, 289, 290, 291, 190, 183, 269, 184, 208,
	185, 164, 277, 186, 166, 256, 294, 0, 204, 265,
	229, 167, 228, 257, 293, 292, 318, 324, 325, 329,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 323, 202, 161, 306,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 322, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 213, 254, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 304,
	316, 333, 336, 0, 0, 0, 165, 335, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 331, 238, 239, 240, 241,
	205, 0, 181, 334, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 328, 201, 207, 0, 209, 180, 253, 203,
	313, 216, 250, 245, 212, 278, 217, 223, 266, 312,
	251, 271, 178, 303, 279, 227, 0, 0, 0, 195,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 280,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 660, 661, 0, 0, 0, 162, 176, 221, 0,
	262, 200, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 320, 321, 305, 0, 192,
	0, 0, 0, 0, 0, 168, 285, 301, 177, 276,
	314, 182, 283, 173, 249, 272, 0, 0, 170, 299,
	282, 231, 214, 215, 169, 0, 267, 193, 206, 189,
	247, 0, 298, 326, 188, 317, 0, 309, 172, 0,
	308, 246, 295, 300, 232, 226, 171, 297, 230, 225,
	218, 197, 0, 210, 258, 224, 259, 211, 236, 235,
	237, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 284,
	0, 0, 219, 0, 0, 0, 327, 0, 270, 252,
	0, 0, 0, 268, 222, 296, 260, 302, 286, 310,
	264, 261, 163, 287, 191, 233, 174, 175, 187, 194,
	196, 198, 199, 242, 243, 255, 275, 289, 290, 291,
	190, 183, 269, 184, 208, 185, 164, 277, 186, 166,
	256, 294, 0, 204, 265, 229, 167, 228, 257, 293,
	292, 318, 324, 325, 329, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 323, 202, 161, 306, 114, 248, 35, 104, 86,
	0, 0, 0, 0, 0, 244, 322, 0, 0, 0,
	0, 273, 0, 0, 0, 109, 0, 213, 254, 0,
	274, 0, 98, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 281, 304, 316, 333, 336, 0, 0,
	0, 165, 335, 0, 0, 0, 64, 0, 0, 0,
	307, 0, 111, 0, 315, 0, 0, 0, 0, 0,
	331, 238, 239, 240, 241, 205, 0, 181, 334, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 201, 207,
	0, 209, 180, 253, 203, 313, 216, 0, 245, 212,
	278, 217, 223, 266, 312, 251, 271, 178, 303, 279,
	227, 0, 0, 843, 0, 0, 0, 0, 0, 0,
	105, 106, 0, 107, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 221, 0, 262, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 103,
	112, 0, 62, 0, 0, 843, 0, 0, 0, 319,
	320, 321, 305, 0, 192, 0, 0, 0, 102, 97,
	96, 0, 0, 831, 0, 41, 0, 0, 736, 737,
	738, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 855, 857, 859, 861, 862, 864, 0, 868,
	865, 866, 867, 0, 0, 846, 847, 848, 849, 829,
	830, 852, 0, 832, 0, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 844, 850, 0, 0, 0,
	0, 0, 99, 100, 854, 856, 858, 860, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1123, 0, 831, 0, 0, 0, 821,
	0, 0, 0, 0, 0, 0, 72, 0, 0, 845,
	101, 0, 73, 851, 855, 857, 859, 861, 862, 864,
	0, 868, 865, 866, 867, 0, 0, 846, 847, 848,
	849, 829, 830, 852, 0, 832, 0, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 844, 850, 0,
	0, 0, 0, 0, 0, 0, 854, 856, 858, 860,
	863, 0, 0, 0, 0, 74, 0, 0, 0, 843,
	0, 0, 0, 0, 75, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 2201, 0, 0, 0, 0, 0,
	0, 845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 1637, 0,
	0, 0, 0, 0, 0, 0, 1763, 1764, 0, 0,
	0, 0, 0, 1119, 0, 0, 1116, 0, 0, 0,
	1118, 1115, 1117, 1121, 1122, 2610, 0, 0, 1120, 87,
	0, 0, 0, 0, 0, 2183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 0, 0, 2201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 851, 855, 857,
	859, 861, 862, 864, 0, 868, 865, 866, 867, 76,
	77, 846, 847, 848, 849, 829, 830, 852, 0, 832,
	1637, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 844, 850, 0, 0, 2201, 0, 0, 0, 0,
	854, 856, 858, 860, 863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 853, 0, 2183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 845, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1126, 1127, 1128,
	1129, 1130, 1131, 1124, 1125, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 2183, 0, 0, 0,
	2191, 0, 0, 0, 2279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2180, 0, 0, 0, 2182, 2184, 2186, 853, 2188, 2189,
	2190, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 385, 0,
	384, 391, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 389, 0, 390, 394, 0, 0, 376,
	0, 0, 0, 0, 0, 0, 0, 2202, 0, 399,
	0, 0, 0, 385, 0, 384, 391, 381, 0, 0,
	0, 2187, 0, 0, 0, 0, 0, 388, 389, 0,
	390, 394, 2191, 0, 376, 0, 0, 0, 403, 0,
	0, 404, 2200, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 2180, 0, 0, 0, 2182, 2184, 2186, 2179,
	2188, 2189, 2190, 2192, 2193, 2194, 2196, 2197, 2198, 2199,
	2187, 0, 0, 403, 0, 0, 404, 0, 0, 0,
	0, 2191, 0, 0, 0, 0, 0, 0, 2195, 0,
	0, 0, 0, 0, 0, 2185, 0, 0, 0, 2202,
	0, 2180, 0, 0, 0, 2182, 2184, 2186, 0, 2188,
	2189, 2190, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2200, 0, 0, 0, 0, 0,
	0, 853, 0, 0, 0, 0, 0, 0, 2202, 0,
	0, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 379, 378, 0, 0, 0, 0, 0, 383,
	2195, 0, 0, 2200, 0, 0, 0, 2185, 0, 0,
	0, 387, 0, 0, 0, 0, 0, 0, 402, 0,
	2179, 0, 0, 0, 0, 380, 377, 379, 378, 371,
	0, 0, 0, 385, 383, 384, 391, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 389, 2195,
	390, 394, 0, 402, 376, 0, 2185, 0, 0, 0,
	380, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 386, 392, 0, 393, 395, 0,
	0, 396, 397, 398, 0, 0, 400, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 386,
	392, 0, 393, 395, 0, 0, 396, 397, 398, 0,
	0, 400, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 379, 378, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 0,
	0, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 386,
	392, 0, 393, 395, 0, 0, 396, 397, 398, 0,
	0, 400, 401,
}

var yyPact = [...]int{
	26915, -1000, -305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -159, 24864, 24864, -1000, -1000, 1621,
	-1000, 24371, 9581, 25357, 150, 25357, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 399, -1000, 23878, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 362, 27558, 244, 231, 7588, 25357, -283, -1000,
	2079, -1000, -1000, -1000, -1000, 243, 524, 23385, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1098, 78, 524, 538, 523, 704, 704, 11060,
	2079, 239, 56, -1000, 794, 26915, 26620, 346, 25357, -1000,
	941, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 346, -1000,
	-1000, -1000, 2079, 2079, -1000, 25357, 25357, -24, 1053, -1000,
	238, 221, 218, 937, -1000, -1000, -1000, -1000, -1000, 2112,
	-1000, 25357, 1788, 25357, -1000, 1257, 256, 27593, 1970, 834,
	464, 1836, -1000, -1000, 1770, -1000, 88, 235, 130, 191,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 92, -1000, 2017,
	-1000, -1000, 84, -1000, -1000, 83, -1000, -1000, -1000, -72,
	-1000, -1000, -1000, -1000, -1000, -151, -151, 641, 1080, 7588,
	-1000, 1406, -1000, 1764, -1000, -1000, -1000, -1000, 5100, 9076,
	9076, 9076, 9076, -1000, -1000, 1642, 7588, 1756, 1754, -1000,
	-1000, -1000, -1000, 936, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1420, 8580, -1000, 1751,
	1749, 1748, 1744, 1743, 1740, 1733, 1726, 1702, 1701, 1697,
	1566, 1696, 1418, 1417, 1691, 1690, 1686, 9076, 1416, 1566,
	1566, 1681, 1680, 1677, 1676, 1673, 1671, 1670, 1668, 1667,
	1666, 1664, 1663, 1662, 1661, 1659, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 27095, -1000, 923, 832, -1000, 1656, 1935, 2054, 1628,
	2090, 2040, 2035, 2028, 2026, 61, 353, 353, 353, 393,
	353, 397, -1000, -1000, -1000, -1000, -1000, -1000, 468, -1000,
	-1000, -1000, -1000, 823, 25357, -1000, 1596, 993, 2051, 320,
	993, 228, 318, 2054, 2054, -99, -100, 993, 993, -100,
	98, -1000, -1000, -1000, 1071, 299, 1071, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2010, 2008, 362, 362, 369, -1000,
	-157, -1000, -1000, 506, -1000, 492, -1000, 1257, 253, 251,
	838, 1079, -1000, 1009, 25357, 25357, 25357, 1009, 1009, 14511,
	14018, -1000, 2054, 1628, -1000, 1529, 1994, 1628, 362, 362,
	362, 362, 362, 362, 362, 25357, 6588, 6588, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 271, -1000, -1000, -1000,
	-1000, -1000, 245, 1654, -1000, 25357, 217, 2054, 1935, 2054,
	-1000, -1000, 919, 1246, 1414, -1000, -1000, 238, 1024, -1000,
	696, -1000, -1000, -1000, -1000, 25357, 227, -1000, 1398, 1652,
	-1000, 338, 798, 816, -1000, 101, 27793, 20920, 1257, 20920,
	25357, -1000, -1000, -1000, -1000, -1000, -1000, -73, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 43, -1000, 43, 7588, 7588, 7588, 7588, 7588, -1000,
	371, 8084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9076,
	9076, 9076, 9076, 9076, 9076, 9076, 9076, 9076, 9076, 9076,
	9076, 1641, 1048, 9076, 9076, 9076, 1994, 1954, 826, -1000,
	-1000, -1000, -1000, -1000, 1059, 1080, 7588, 7588, 25357, -1000,
	27058, 7588, 7588, 60, 7588, 2002, 2002, 3603, 25357, 7588,
	-1000, 1527, 1526, -1000, -1000, 1164, 7588, -1000, -1000, 7588,
	9076, 7588, -1000, -1000, -1000, -1000, 80, 2002, 7588, 7588,
	2002, 2002, 2002, 1074, 2002, 2002, 2002, 2002, 2002, 2002,
	2002, 25357, 1910, 66, -1000, -1000, -1000, 1578, -1000, 1620,
	1620, 1578, 1578, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1651, 1650, -1000, -1000, 1616, 1616, 1616, 1578,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1643, 1643, 1645, 1643, 25357,
	2054, -283, 6092, -1000, -290, 1935, 7588, -1000, -1000, 7588,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 387, 353,
	-1000, 25357, 1075, 20920, 1257, 1334, 25357, 353, 369, -1000,
	25357, 823, 1989, 25357, 2083, 9076, 20920, 1071, 2083, 1071,
	-1000, -1000, -1000, 993, 993, -1000, -1000, -1000, -1000, 1071,
	1071, -1000, -1000, -78, 2083, 2083, -112, 25357, 25357, 353,
	25357, -1000, -1000, -1000, -1000, 25357, -1000, -1000, 25357, 20920,
	13525, -1000, -132, 520, 494, 502, -1000, -1000, 336, 335,
	13032, 281, 20920, 4595, -1000, -1000, 1009, 1009, 1009, 4595,
	4595, 947, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1935,
	-1000, -1000, -1000, -1000, 25357, 20920, 1257, 25357, 25357, 25357,
	26620, -1000, 780, -1000, -1000, 10567, 918, 780, 1413, 25357,
	1814, -285, -1000, 12539, 25357, 25357, -1000, -1000, -285, -1000,
	12046, 25357, 1935, -1000, 1935, 2629, -1000, 2041, -1000, 238,
	148, -1000, -1000, -1000, -1000, -1000, -1000, 912, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 809, -1000, 25357,
	-1000, -1000, 101, 20920, 1030, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 126, -1000, -1000, 141, -1000, 389, 2, 1019,
	-1000, -1000, 50, 136, 414, 50, 1080, -1000, 1083, 1083,
	1090, -1000, 386, -1000, -1000, -1000, -1000, 1642, -1000, -1000,
	-1000, 1165, 1811, -1000, 1262, 1262, 954, 954, 954, 954,
	954, 1359, 1359, -1000, -1000, -1000, 5100, 1641, 9076, 9076,
	9076, 343, 2952, 2191, -1000, 7588, 1065, -1000, 7588, 1287,
	787, 904, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1525, 641, 1524, 1327, 2111, 1522, 7588, -1000,
	-1000, 7588, 1182, 7092, -1000, -1000, -1000, 1521, 894, 1520,
	-1000, -1000, -1000, 1515, 650, 1512, 1332, 1511, 808, 7588,
	1004, 1003, 7588, 7588, 7588, 7588, 1504, 7588, 7588, 7588,
	7588, 7588, 7588, 7588, -1000, 7588, 42, -1000, -1000, -1000,
	-1000, 1244, -1000, 1241, -1000, -1000, -1000, 1402, 1402, -1000,
	1235, -1000, -1000, -1000, -1000, 1233, -1000, -1000, 1232, -1000,
	-1000, -1000, -1000, 999, -1000, 1080, -1000, 1394, -1000, 948,
	804, -1000, 1130, 22892, 25357, 30, -1000, 1963, 668, -1000,
	2, 667, 1781, 1901, 25357, 22399, -1000, 1640, 991, -1000,
	-1000, 7588, -1000, 1775, 25357, -1000, 25357, 2083, 2083, 993,
	26620, 1071, 25357, 1071, -1000, -1000, 1071, -1000, 892, -1000,
	25357, -1000, -1000, -1000, -1000, 30, 668, 1995, 658, -1000,
	-1000, -1000, -1000, 25850, 25850, 11553, 25850, -1000, 1637, 1636,
	-1000, -1000, 513, 490, 488, -1000, -1000, 388, -1000, -1000,
	667, -1000, -1000, -1000, 1635, 1046, -1000, -1000, 9076, -1000,
	4595, 4595, 4595, -1000, -1000, 16483, -1000, -1000, 793, 667,
	1810, 781, -1000, 781, -1000, 2083, 6588, -1000, 13525, -1000,
	-1000, 21906, -1000, 21413, 2083, -295, 699, -1000, 1921, 701,
	-1000, 1633, -1000, 979, 1875, -1000, 652, -1000, 1045, 965,
	-1000, 701, 960, 1872, 652, -1000, -1000, -1000, 891, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -25, -1000, -1000, 25357, 1398, 951, 1030,
	776, -1000, 374, 882, 879, -1000, 20920, 90, 20920, -1000,
	20920, -1000, -1000, 216, -1000, 25357, 1928, -1000, -1000, -1000,
	1356, -308, 1926, -1000, -1000, -1000, -1000, -1000, 949, -1000,
	343, 2952, 1870, -1000, 9076, 9076, 1939, 1026, -1000, 7588,
	1148, 27013, 1266, 15497, 25357, -1000, -1000, 7588, 7588, -1000,
	1889, 1854, -1000, 7588, 7588, 1212, -1000, 25357, -1000, -1000,
	-1000, 15497, -1000, 9076, -1000, 7588, 1823, -64, -64, 1780,
	1752, 1623, 939, -64, 1580, 1562, 1513, 1509, 1494, 1483,
	1476, 1080, -1000, -1000, 1503, 1495, 915, -1000, 897, 1478,
	895, 886, 6092, -1000, -104, 7588, 7588, 7588, 1880, -1000,
	-1000, 1596, 1068, 1625, -58, 1027, -1000, 366, 20920, 246,
	-1000, 1803, 254, -1000, 1901, -1000, 587, -1000, 1622, 25357,
	664, -1000, 856, 26915, -1000, 25357, 1080, -1000, 1257, 993,
	2083, 872, -1000, -1000, 2083, -1000, 993, -1000, 993, 1071,
	25357, -1000, -58, 366, 25357, 13525, 13525, 13525, 13525, -1000,
	1858, 1857, -1000, 1850, 1849, 1896, 25357, 13525, 1596, -1000,
	26235, -1000, -1000, -1000, -1000, -1000, 1994, 880, 1839, 519,
	7588, 7588, -1000, -1000, -1000, 483, 20920, 1392, 281, -1000,
	-1000, -1000, -1000, -1000, 25357, 25357, 2098, -1000, 779, -1000,
	-1000, 855, -1000, 2098, -1000, 1228, 1391, 1104, -285, 6092,
	249, 25357, -285, 25357, 6092, -1000, 25357, 247, -285, 2629,
	1219, -1000, -1000, -1000, 2110, 20920, 1257, 975, 1007, -1000,
	69, -1000, 124, 340, 1372, -1000, 396, 73, -1000, 1036,
	1356, 395, -1000, -1000, 9076, -1000, -1000, -1000, -1000, 1080,
	7588, 1471, -1000, 465, 465, 1470, -1000, 1578, 1620, -1000,
	1578, 1616, 1578, 465, 465, 1469, -1000, 1163, 1467, -1000,
	-1000, 1462, 1457, 7588, -1000, 1466, 3090, 833, -64, -1000,
	1614, -1000, -64, -64, -64, -64, -1000, -64, -64, -64,
	-64, -64, -64, -64, -1000, -1000, -1000, 1366, -1000, -1000,
	-1000, 1216, -1000, 1200, -1000, -53, -46, 1080, 1080, -1000,
	-1000, 1914, 1983, 1942, 10074, 1249, -1000, -1000, 20427, -1000,
	305, -1000, -1000, -1000, 408, 75, 1198, 313, -1000, 1425,
	25357, -1000, -1000, -1000, -1000, -1000, 1027, 1027, 1027, 10074,
	346, 775, 854, 13525, 25357, -1000, 19441, 1465, -1000, 667,
	2083, -1000, 25357, -1000, 2083, 2083, 993, -1000, 1249, 305,
	771, -1000, 1031, 1787, 1800, 1787, -1000, -1000, -1000, -1000,
	1852, -1000, 1851, -1000, -1000, 771, -1000, -1000, -1000, -1000,
	-1000, 519, -1000, 2038, 495, 495, 495, 869, 866, -1000,
	776, 1464, -1000, -1000, -1000, -1000, 2095, 2089, 19934, 2095,
	-1000, -295, 2119, -1000, 1460, 769, -285, -1000, -1000, 701,
	-1000, -1000, -1000, -285, -1000, 701, -1000, -1000, -1000, -1000,
	-1000, 1257, -1000, 96, -1000, -1000, -1000, -1000, -1000, -1000,
	-12, -1000, 25357, -1000, 1356, 1354, 70, 25357, -1000, 1080,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7588, -1000, -1000, -1000, 1450,
	-1000, -1000, 7588, -1000, 344, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1458, 1438, -292,
	-38, 2088, 2086, -1000, -1000, 239, 25357, 1436, 741, -1000,
	-1000, -1000, 27269, 531, -1000, 25357, 1103, 495, 353, 495,
	1102, 1613, -1000, -1000, -1000, 1353, 0, -1000, -1000, -1000,
	1342, 1341, 1191, -1000, -1000, 1258, 943, 17, -1000, -1000,
	-1000, -1000, -1000, -1000, 1612, 15497, 15990, 1338, 1432, 25850,
	13525, 19441, 676, -1000, 851, -1000, -1000, -1000, 2083, -1000,
	-1000, 2083, -1000, -1000, 2092, 25357, 6092, -1000, -1000, 7588,
	1609, -1000, 7588, -1000, -1000, -1000, -1000, -1000, 1608, 1900,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7588, 7588, -1000,
	-1000, -1000, 25357, -1000, 701, 701, 667, -1000, -1000, -112,
	-1000, -1000, -1000, -112, 1431, -1000, 1370, 2092, -1000, 2085,
	-1000, -1000, -295, 1337, -1000, 2082, 1329, 1270, -1000, 1596,
	27449, 10074, 2351, -1000, -1000, 25357, 25357, -1000, 25357, 25357,
	353, 7588, -1000, -1000, 209, -1000, -1000, 114, -1000, -1000,
	1255, 339, -1000, 17962, -1000, -1000, -1000, -1000, -1000, 43,
	2083, 676, 851, -1000, -1000, 974, -1000, -1000, 2054, -1000,
	-1000, 1080, 25357, 1080, 18948, -1000, 2081, 2080, 1080, 641,
	652, -1000, -57, -34, -1000, -1000, -1000, 41, 7588, -297,
	-1000, 1328, -43, -1000, -1000, 1975, 342, 27400, -1000, 1027,
	1027, 566, 1027, 1027, 1027, 1027, 229, 223, 1027, 1027,
	1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
	1027, 1027, 1595, -1000, -1000, 2351, -1000, -1000, 1113, 9076,
	-1000, -1000, 1321, 15990, 457, 499, 1593, -1000, 192, 2118,
	-1000, 1101, 1099, -1000, 25357, -1000, 1590, 1773, 154, 1589,
	-1000, 1584, 1582, 25357, 1344, 326, 1320, -1000, -1000, 113,
	-1000, -1000, 865, -1000, 1578, 7588, -1000, -112, 2092, -1000,
	-1000, 828, 827, -1000, -1000, -1000, -1000, 368, -51, -34,
	-1000, 2076, -45, 2074, 2073, 1430, -1000, 3107, -1000, -1000,
	-1000, 641, -1000, 1577, -1000, 2070, 239, -1000, 2069, 27449,
	-1000, 1187, 1185, 1027, 1027, 1180, 1317, 1303, 1301, 1027,
	1027, 1171, 1294, 26235, 1168, 1167, 1166, 1239, 1292, 603,
	1222, 1221, 1190, 25357, 1576, 1267, -1000, -1000, 2952, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1158, 1575, -149, -1000, -1000, 1574, 17962, 248, 248, 17962,
	17962, 17962, 1572, 363, -1000, -13, -1000, -1000, -1000, 17962,
	1990, 1279, -1000, 2054, -1000, -1000, 18455, 1570, 1156, -38,
	2064, -1000, 1270, 2058, 1270, 1270, -1000, -1000, 4099, -287,
	-67, 230, 25357, 1270, -1000, 210, -1000, -1000, -1000, 15497,
	15497, -1000, -1000, -1000, -1000, 1286, 1285, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 234,
	25357, 822, -1000, 1028, 1339, 7588, 1566, -198, 17962, 821,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 815, 813, 801,
	17962, -1000, -1000, -1000, 188, -1000, 176, -1000, -1000, 1990,
	-1000, -1000, -1000, 2005, 15004, -55, -1000, 1275, -1000, 1270,
	-1000, -1000, 1087, -1000, -1000, -1000, -1000, -1000, 777, -1000,
	-1000, 171, 220, 212, -1000, 345, -1000, -1000, -1000, -1000,
	-1000, -1000, 308, 766, -1000, 1267, 1265, -1000, 1271, -1000,
	1798, -1000, 47, 750, -1000, -1000, -1000, -1000, 720, -1000,
	-1000, 1027, 1264, 132, -1000, -1000, -1000, -1000, 25357, -1000,
	709, -1000, -1000, -1000, 849, -1000, -1000, -1000, -1000, 4099,
	-1000, 25357, 164, 1140, 9076, 1548, 9076, 1546, 177, 1545,
	-1000, -1000, -1000, -1000, -1000, 363, -1000, 1797, 1583, 2109,
	-1000, -1000, -1000, -1000, 176, 176, 176, 176, 57, 1135,
	-1000, 1334, 612, -1000, 1023, -1000, 17469, 25357, -1000, -1000,
	1544, 2056, -1000, 2982, 25357, 2407, 25357, 1541, 1017, 9076,
	-1000, -1000, 2117, -1000, 2115, 452, 452, -1000, -1000, -1000,
	25357, 5596, -1000, 844, -1000, 341, 174, -1000, 708, -1000,
	703, 16976, 1134, 1502, -1000, -1000, -1000, 1177, 197, -1000,
	-1000, -1000, 1080, 25357, 680, -1000, 1401, 160, -1000, -1000,
	-1000, 672, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 341,
	1866, -1000, 1122, -1000, -1000, 27308, 456, -1000, -1000, 27308,
	162, -1000, 284, 1540, -1000, -1000, 671, -1000, 1373, 496,
	7588, -1000, 162, 27449, -1000, 7588, 670, -1000, 27449, 644,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 116, 2508, 199, 145, 128, 198, 2507, 2506, 1976,
	1971, 2505, 2504, 2503, 2496, 2495, 2494, 2493, 2492, 2491,
	2490, 2488, 2487, 2486, 2485, 2484, 2483, 2482, 195, 2481,
	2477, 2476, 2474, 2473, 2472, 2471, 2470, 2469, 2468, 2467,
	2465, 2464, 2463, 2462, 2461, 2460, 126, 2459, 1970, 2458,
	2456, 2455, 2453, 2452, 169, 2451, 2447, 2446, 2444, 2443,
	2442, 2441, 2438, 2433, 2432, 2431, 2430, 2426, 2425, 157,
	2424, 2423, 2422, 2420, 2419, 193, 184, 57, 2418, 45,
	67, 142, 203, 107, 205, 202, 139, 125, 66, 2417,
	1975, 2416, 111, 180, 109, 24, 2414, 121, 2413, 132,
	40, 31, 201, 117, 54, 63, 87, 2412, 173, 80,
	2411, 2410, 89, 2408, 58, 2407, 73, 56, 85, 28,
	2406, 2400, 2399, 70, 2398, 2397, 2396, 2395, 135, 2394,
	91, 59, 2393, 2392, 2389, 2388, 2387, 34, 2386, 50,
	2385, 2378, 2377, 2376, 60, 2374, 2373, 11, 20, 18,
	2366, 17, 3, 2360, 176, 153, 74, 103, 2356, 406,
	2355, 2353, 2352, 114, 2351, 390, 2350, 2349, 2348, 2346,
	9, 2343, 167, 2342, 2341, 75, 96, 2339, 53, 152,
	154, 2338, 2337, 101, 51, 77, 100, 2336, 2335, 64,
	172, 16, 32, 0, 159, 39, 2334, 2329, 2328, 200,
	155, 148, 186, 95, 206, 124, 2326, 2325, 47, 2324,
	118, 2323, 94, 7, 2322, 144, 2321, 181, 131, 2320,
	164, 2319, 221, 2, 113, 2318, 2305, 30, 226, 2302,
	2301, 2300, 171, 2299, 2297, 83, 136, 2296, 2292, 2291,
	27, 2290, 29, 22, 2288, 76, 2287, 189, 2285, 174,
	90, 137, 130, 105, 179, 182, 62, 115, 1107, 106,
	81, 19, 2280, 178, 2256, 194, 188, 2255, 149, 2254,
	196, 360, 166, 2252, 138, 8, 2251, 2250, 10, 2249,
	389, 2248, 2247, 21, 2245, 25, 2243, 2242, 2240, 2239,
	6, 2237, 2236, 2233, 1, 4, 2232, 5, 160, 41,
	99, 2231, 97, 197, 2230, 2229, 2228, 2227, 2226, 216,
	2224, 2223, 2222, 2221, 2220, 2219, 2218, 2216, 104, 49,
	2215, 2213, 2212, 2211, 71, 102, 2210, 286, 163, 2209,
	38, 2208, 2206, 26, 2203, 33, 2201, 2200, 2199, 15,
	141, 2198, 2194, 14, 2186, 2179, 12, 13, 2177, 2176,
	55, 2172, 48, 35, 69, 72, 2169, 23, 61, 112,
	2168, 2167, 190, 191, 162, 2166, 122, 187, 208, 2164,
	170, 2162, 2161, 2159, 2158, 2157, 2156, 2152, 1119, 2151,
	2150, 192, 52, 177, 2149, 2146, 143, 2145, 120, 86,
	84, 161, 2143, 140, 2142, 2141, 82, 2140, 2137, 2136,
	2135, 2133, 185, 134, 2124,
}

//line mysql_sql.y:7982
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 400, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 73, 73, 63, 62, 349, 349, 348, 348, 347,
	347, 346, 346, 346, 345, 345, 345, 344, 344, 343,
	343, 342, 342, 340, 340, 341, 339, 338, 338, 338,
	336, 336, 334, 334, 335, 335, 329, 329, 332, 332,
	330, 330, 330, 330, 333, 328, 328, 328, 327, 327,
	61, 61, 61, 260, 260, 60, 60, 274, 274, 274,
	274, 274, 272, 272, 272, 272, 272, 272, 271, 271,
	270, 270, 275, 275, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 55, 55, 55, 55, 58, 58,
	58, 59, 269, 269, 269, 56, 57, 57, 259, 259,
	264, 264, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 268, 268, 268, 266, 266, 265,
	265, 267, 267, 49, 49, 49, 52, 51, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 50, 50, 50,
	50, 50, 50, 47, 47, 47, 47, 47, 46, 46,
	48, 48, 257, 257, 256, 66, 66, 66, 66, 66,
	66, 66, 65, 65, 68, 68, 67, 54, 54, 54,
	54, 54, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 373, 373, 373, 375, 375, 197, 198, 401, 196,
	196, 196, 369, 369, 370, 371, 372, 372, 372, 64,
	7, 7, 44, 45, 393, 393, 309, 309, 210, 210,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 312, 313, 206, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 35, 34, 34, 246, 246, 33, 402,
	402, 180, 180, 32, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 43, 43, 323, 323, 404, 404, 404,
	41, 42, 308, 308, 308, 39, 38, 37, 36, 36,
	31, 31, 30, 30, 203, 203, 205, 205, 201, 403,
	403, 285, 285, 204, 204, 29, 29, 29, 202, 202,
	179, 200, 200, 200, 8, 8, 6, 11, 11, 11,
	11, 11, 11, 11, 11, 17, 19, 254, 254, 251,
	18, 14, 13, 16, 12, 15, 5, 5, 5, 5,
	9, 9, 10, 87, 87, 118, 118, 382, 382, 378,
	378, 379, 379, 379, 380, 380, 381, 381, 69, 317,
	317, 317, 317, 317, 317, 4, 316, 316, 316, 316,
	316, 316, 399, 399, 358, 358, 358, 359, 108, 108,
	103, 103, 318, 318, 224, 360, 360, 326, 326, 325,
	325, 324, 324, 106, 106, 107, 107, 90, 90, 76,
	76, 331, 331, 331, 331, 337, 337, 306, 306, 144,
	144, 173, 173, 174, 174, 80, 80, 81, 81, 81,
	81, 81, 81, 366, 366, 368, 368, 367, 105, 105,
	101, 101, 102, 102, 102, 100, 100, 99, 98, 98,
	97, 95, 95, 95, 96, 96, 96, 83, 83, 82,
	82, 82, 82, 82, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 84, 84, 374, 374,
	374, 310, 310, 310, 315, 315, 156, 156, 157, 157,
	155, 155, 85, 85, 86, 86, 86, 86, 154, 154,
	153, 88, 88, 94, 93, 93, 89, 89, 89, 89,
	164, 164, 163, 163, 163, 163, 72, 74, 74, 75,
	111, 111, 162, 161, 161, 161, 110, 110, 109, 109,
	104, 104, 92, 92, 92, 92, 160, 91, 91, 158,
	398, 398, 397, 397, 396, 394, 394, 394, 395, 395,
	395, 395, 351, 351, 351, 351, 351, 189, 189, 189,
	195, 195, 188, 188, 188, 188, 188, 199, 194, 194,
	190, 190, 191, 191, 191, 3, 3, 3, 3, 23,
	23, 23, 23, 27, 27, 376, 376, 20, 383, 386,
	384, 384, 387, 387, 387, 388, 388, 388, 389, 389,
	21, 385, 390, 390, 390, 255, 255, 252, 253, 253,
	250, 249, 249, 249, 392, 392, 391, 391, 391, 192,
	192, 22, 245, 245, 247, 248, 248, 239, 239, 239,
	239, 26, 243, 243, 244, 244, 244, 244, 244, 240,
	240, 242, 242, 238, 238, 238, 238, 238, 25, 237,
	237, 235, 235, 233, 233, 234, 234, 232, 232, 232,
	236, 236, 24, 24, 78, 77, 77, 77, 176, 176,
	175, 175, 79, 311, 311, 276, 276, 279, 279, 291,
	291, 292, 292, 290, 290, 297, 297, 296, 296, 295,
	295, 294, 294, 293, 293, 293, 293, 288, 288, 287,
	287, 277, 277, 277, 277, 277, 278, 278, 278, 286,
	286, 289, 289, 135, 135, 136, 136, 136, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 356, 356, 357,
	138, 138, 138, 142, 142, 142, 142, 142, 142, 137,
	137, 139, 139, 119, 119, 117, 117, 112, 112, 113,
	113, 114, 114, 115, 115, 116, 116, 116, 116, 116,
	116, 262, 262, 354, 354, 355, 355, 350, 350, 350,
	353, 353, 353, 353, 353, 352, 352, 120, 171, 171,
	171, 193, 193, 193, 170, 170, 170, 134, 134, 133,
	133, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 261, 261, 207, 207,
	208, 208, 151, 150, 150, 150, 150, 150, 148, 149,
	147, 147, 147, 147, 147, 146, 146, 145, 145, 145,
	241, 241, 143, 143, 141, 141, 141, 140, 140, 140,
	298, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 216, 216, 221, 221, 365, 365,
	364, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 130, 130, 130, 283, 283, 283, 283,
	283, 284, 284, 284, 281, 281, 282, 282, 225, 226,
	226, 280, 280, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 322, 322,
	322, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 377, 377, 377, 361, 361, 361,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 168,
	168, 168, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 167, 227, 227, 228, 228, 319,
	319, 319, 319, 319, 319, 320, 320, 321, 321, 321,
	321, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	214, 165, 165, 165, 229, 222, 222, 223, 223, 217,
	217, 217, 217, 217, 217, 217, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 218, 218, 220, 220,
	231, 231, 231, 230, 230, 230, 230, 230, 230, 230,
	132, 132, 132, 132, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 123, 123, 123, 123, 127,
	127, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 128, 128, 128, 128, 126,
	126, 126, 126, 126, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	70, 71, 71, 125, 172, 172, 299, 299, 302, 302,
	300, 300, 301, 303, 303, 303, 304, 304, 304, 305,
	305, 305, 307, 307, 178, 178, 178, 185, 185, 177,
	177, 186, 186, 187, 187, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 0, 2, 7, 0,
	1, 0, 1, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 3, 1,
	4, 6, 4, 4, 4, 3, 1, 1, 2, 2,
	11, 8, 9, 1, 3, 2, 4, 0, 2, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 4, 2,
	1, 5, 4, 4, 2, 5, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 11, 0, 1, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 5, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 10, 9, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 0, 1, 0, 6, 0, 4, 0,
	3, 1, 3, 4, 5, 0, 3, 1, 3, 2,
	3, 1, 2, 0, 4, 6, 5, 0, 2, 0,
	2, 4, 5, 4, 5, 1, 5, 6, 5, 0,
	3, 0, 1, 0, 1, 1, 3, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 4, 1, 3, 3,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 2, 1, 7, 7, 7, 7, 8,
	5, 0, 1, 0, 1, 1, 1, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 1, 5, 6, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 6, 6, 5, 5, 6, 6, 6, 6,
	5, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 5, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	2, 3, 5, 1, 1, 3, 0, 1, 0, 3,
	0, 3, 3, 0, 3, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -400, -2, -1, -3, -73, -4, -69, -5, -6,
	-8, -53, -65, -67, -68, -28, -7, -64, -46, -47,
	-49, -55, -60, -61, -62, -63, -70, -71, -72, -80,
	-23, -22, -21, -20, 391, 12, 431, -9, -10, -366,
	-11, 230, -196, -197, -198, -401, -29, -30, -31, -36,
	-37, -38, -39, -41, -42, -43, -32, -33, -34, -35,
	-45, -44, 207, -48, 61, -50, -51, -52, -56, -57,
	-58, -59, 321, 327, 380, 389, 514, 515, 46, -81,
	-83, -24, -25, -26, -27, 203, 14, 464, -12, -15,
	-13, -16, -14, -18, -19, -17, 225, 224, 37, 287,
	288, 325, 223, 204, 13, 135, 136, 138, 139, 30,
	-82, 67, 205, -84, 10, 516, 424, -90, 38, -117,
	-193, 70, -181, -184, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	434, 303, 461, 242, 266, 351, 269, 276, 135, 154,
	148, 176, 168, 143, 246, 247, 77, 138, 417, 87,
	402, 377, 141, 261, 263, 265, 268, 248, 164, 159,
	260, 244, 514, 157, 249, 39, 250, 181, 251, 252,
	466, 398, 302, 404, 273, 375, 158, 399, 264, 401,
	183, 187, 409, 327, 152, 153, 406, 411, 180, 222,
	42, 463, 234, 412, 185, 179, 175, 420, 277, 275,
	178, 151, 174, 245, 50, 189, 188, 190, 371, 372,
	373, 374, 253, 254, 315, 408, 171, 160, 306, 144,
	22, 415, 229, 403, 328, 255, 270, 278, 184, 186,
	236, 241, 465, 379, 240, 274, 413, 156, 233, 262,
	228, 416, 145, 321, 330, 256, 139, 267, 410, 419,
	49, 343, 150, 142, 219, 136, 238, 243, 11, 257,
	258, 259, 280, 279, 271, 172, 235, 177, 162, 149,
	173, 137, 237, 418, 344, 512, 304, 360, 170, 167,
	239, 212, 414, 405, 140, 364, 345, 165, 281, 509,
	510, 511, 316, 301, 282, 283, 163, 226, 397, 284,
	286, 370, 294, 346, 378, 352, 347, 196, -90, -48,
	-10, -9, -82, -83, -117, 210, -200, 23, 375, -54,
	376, 207, 67, -193, -5, -4, -69, -46, -80, -199,
	-193, 287, -199, 210, -193, 240, 359, -309, 215, -271,
	-245, 241, -270, -247, -273, -248, 31, 203, 205, 204,
	237, 14, 325, 211, 12, 10, 326, 223, 24, 25,
	27, 13, 327, 329, 28, 330, 333, 334, 335, 41,
	338, 339, 230, 70, 73, 248, 248, -223, -217, 94,
	231, -219, -212, -213, -215, -346, -340, -211, 67, 119,
	120, 127, 95, -214, -298, 35, 97, 471, 432, -166,
	-167, -168, -169, -193, -341, -339, 73, 78, 81, 84,
	85, 83, 82, 161, 80, 74, 131, 132, -83, 70,
	-361, 479, -182, 499, 480, 498, 46, -314, -321, 209,
	-319, 166, 226, 162, 12, 125, 370, 130, 163, 476,
	495, 434, 502, 473, 474, 468, 469, 470, 472, 481,
	483, 494, -322, 490, 500, 501, 72, 71, 493, 492,
	482, 477, 478, 484, 467, 475, 485, 486, 491, 496,
	497, 505, 506, 309, 87, 310, 311, 424, 305, 312,
	215, 375, 55, 313, 314, 315, 316, 317, 431, 318,
	56, 319, 308, 230, 360, 320, 165, 182, 436, 435,
	437, 428, 425, 423, 426, 427, 429, 430, 487, 488,
	489, -267, -265, -193, -74, -75, 507, -99, -100, -159,
	19, 6, 7, 8, 9, -311, 303, 360, 240, -239,
	-237, 284, 336, 220, 219, 88, 424, 209, -378, -379,
	200, 201, 202, -368, 457, -367, -193, 311, 26, 210,
	-40, -323, -308, 405, 404, -204, 403, 396, 407, 398,
	203, 458, -178, 346, 378, 236, 421, 422, 323, 379,
	409, 410, 399, 87, 169, 166, 303, 360, -378, 140,
	137, -258, 140, 93, 145, 144, -258, 240, 359, 40,
	-264, 370, -263, -265, 409, 410, 420, 71, 72, 408,
	-178, 87, -100, -159, -99, -81, -83, -366, 303, 360,
	240, 211, 210, 212, 424, 287, -310, -374, 31, -315,
	197, 198, 199, 32, 33, -1, -194, -191, -184, 70,
	71, 72, -106, 232, -117, 133, -106, -100, -99, -100,
	-117, -170, -193, 377, 103, -54, -54, 376, -369, -370,
	-371, -373, 207, 376, 375, 133, 15, -199, 65, -117,
	-247, 240, -271, -245, 35, 64, 134, 213, 134, 64,
	67, 323, 303, 360, 324, 424, 210, 336, 212, 240,
	337, 303, 360, 210, 212, 424, 240, 303, 210, 212,
	360, 240, 337, 396, 397, 212, 26, 328, 331, 332,
	397, -327, 420, -327, 134, 93, 90, 91, 92, -217,
	110, -230, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -83, -217, -223, -215,
	-215, -215, -215, -298, -221, -217, 67, 67, 133, 73,
	-217, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-320, 67, 67, -227, -228, 67, 67, 73, 73, 67,
	67, 67, -215, 73, -228, -228, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 134, -123, -127, -124, -126, -125, -129, -128, 166,
	167, 130, 170, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 30, 182, 226, 162, 163, 164, 165,
	183, 148, 168, 462, 191, 149, 192, 150, 193, 151,
	194, 152, 153, 195, 154, 157, 158, 159, 156, 133,
	-100, 134, 67, -76, 38, -102, 21, -84, -83, 20,
	31, 32, 31, 32, 31, 32, 31, 32, -376, 210,
	457, -235, 215, -235, -235, 211, -235, 210, -380, 147,
	134, -368, -105, 67, -203, 111, 23, 238, -203, -404,
	211, 406, 42, 239, 238, -101, -102, -101, 400, 397,
	-285, 401, 402, -204, -203, -203, -204, 210, 212, 424,
	-402, -403, 15, 113, 238, -402, 30, 30, -309, -309,
	-381, 214, 413, 464, 143, 144, 145, -247, 240, 240,
	134, 103, 23, -266, 103, 114, -265, -265, -265, -266,
	-266, -137, 40, -192, 130, -193, 73, -137, 40, -101,
	-84, -83, 68, 68, -309, -309, -309, -309, -309, -309,
	-309, -199, -85, -86, 121, -217, -193, -85, 38, 397,
	-316, 46, -80, 67, 30, 67, -193, -317, 46, -80,
	67, 30, -101, -76, -102, 133, 78, 73, -54, 68,
	134, -372, 84, 85, -375, 180, 172, -193, -66, 73,
	-3, -4, -5, -6, -28, -46, -80, -342, -340, 67,
	31, 369, 64, 15, -272, 210, 424, 322, 236, 212,
	303, -270, -254, -251, -249, -192, -247, -250, -249, -275,
	-170, 397, -77, 381, 286, -77, -217, -217, -217, -217,
	-217, 83, 94, 301, 84, 85, -212, -231, 31, 282,
	283, -213, -213, -213, -213, -213, -213, -213, -213, -213,
	-213, -213, -213, -220, -229, -298, 67, 113, 111, 112,
	96, -215, -213, -213, 68, 134, -365, -364, 98, -217,
	-217, -193, -362, -363, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 313, 308, 314, 312, 305,
	320, 315, 316, 165, 455, 456, 449, 450, 451, 452,
	453, 454, -222, -223, -222, -217, -362, -222, -165, 32,
	31, -165, -217, -377, 299, 298, 300, -103, -193, -222,
	68, 68, 68, 78, -223, -222, -213, -222, -363, -165,
	-223, -223, -165, -165, -165, -165, 121, -165, -165, -165,
	-165, -165, -165, -165, -265, 40, -305, 344, 343, -299,
	-301, 67, -300, 67, -300, -299, -299, 67, 67, -302,
	67, -302, -302, -299, -303, 67, -303, -304, 67, -303,
	-193, -101, -75, -325, -324, -217, 40, 508, -76, -217,
	-98, -97, -217, 212, -235, -383, -193, 94, -255, -252,
	-249, -245, -191, -193, -235, -381, -367, 34, -104, -193,
	-155, 16, -215, -249, -402, -155, -403, -203, -203, -205,
	-403, -201, -403, 397, -155, -155, -285, -202, -193, -202,
	-235, -180, -179, -193, -180, -383, -255, -93, -88, -92,
	-89, -94, -158, -160, -91, 67, -117, -83, 505, 506,
	414, 415, 141, 144, 143, 31, 369, -269, 369, 31,
	-245, -263, -259, 73, 370, -250, -268, 64, 130, -324,
	-266, -266, -266, -268, -268, 129, -76, -383, -254, -245,
	-193, -119, -117, -119, -194, -154, 134, -153, 15, -188,
	-193, 34, 73, 133, -154, 73, -119, -399, 64, -318,
	-224, -360, 507, -108, 68, -103, -358, -359, -103, -107,
	-193, -318, -108, 68, -358, -76, -76, -186, -187, -177,
	-183, -190, -191, -184, 208, 31, 93, 34, 36, 309,
	341, 96, 130, 20, 97, 166, 129, 311, 432, 310,
	203, 59, 435, 437, 436, 425, 423, 362, 366, 368,
	365, 424, 396, 40, 14, 37, 224, 32, 33, 123,
	205, 100, 101, 227, 35, 225, 85, 44, 23, 62,
	15, 17, 18, 312, 361, 215, 214, 113, 381, 211,
	57, 12, 132, 38, 110, 363, 53, 89, 45, 55,
	111, 21, 426, 427, 41, 380, 389, 460, 231, 125,
	313, 314, 60, 94, 369, 83, 43, 64, 90, 19,
	58, 112, 206, 431, 56, 367, 317, 319, 329, 457,
	318, 209, 407, 10, 308, 433, 30, 223, 54, 210,
	99, 213, 84, 230, 6, 88, 13, 61, 65, 428,
	429, 430, 46, 98, 16, 320, 464, 382, 383, 384,
	385, 386, 387, 388, 191, 192, 193, 194, 195, 272,
	218, 216, 220, 221, 507, 508, 197, 198, 298, 300,
	169, 200, 201, 202, 232, 147, 7, 348, 349, 350,
	353, 354, 355, 356, 357, 358, 359, 515, 391, 392,
	393, 394, 395, 23, -54, -370, 133, 134, -104, -272,
	-253, -250, -274, 121, 70, -260, 134, 464, 517, 71,
	213, -392, -391, 361, 68, 134, -328, 214, 431, 73,
	518, 196, -328, 83, 301, 84, 85, -298, -223, -220,
	-215, -213, -213, -218, 227, 93, -217, -216, -364, 100,
	-217, 34, 134, 65, 133, 68, 68, 15, 15, 68,
	-217, -217, 68, 15, 15, -217, 68, 133, 68, 68,
	68, 65, 68, 134, 68, 134, -217, 68, 68, -217,
	-217, -217, -223, 68, -217, -217, -217, -217, -217, -217,
	-217, -217, -307, 345, 78, 78, -172, 73, -172, 78,
	78, 78, 134, 68, 73, 134, 22, 134, -95, 36,
	37, -117, 215, -117, -386, 348, 35, -393, 134, 40,
	-391, -238, 65, -233, -234, -232, -236, 40, -117, 15,
	-87, -118, -193, 67, 68, 134, -217, -246, 65, -180,
	-117, -193, -155, -155, -203, -194, -205, -200, -205, -201,
	133, -179, -386, -393, 30, -161, -162, -163, -164, 53,
	57, 59, 54, 55, 56, 60, 30, 134, -189, -195,
	34, -190, 73, -191, -184, -189, -83, -88, -93, -189,
	67, 67, 142, 145, 145, 144, 213, 67, 103, -268,
	-268, -268, 40, -192, 64, 134, -155, -86, -88, -193,
	73, -193, 121, -155, -144, 510, 38, 39, 134, 67,
	68, 134, 46, 134, 103, 68, 134, 68, 46, 133,
	377, -193, -340, 68, -274, 134, 213, 133, 133, -251,
	327, -192, -253, 20, 464, -170, 38, -176, -175, 73,
	518, 38, 68, -218, 93, -215, -212, 68, 101, -217,
	99, -121, -123, 343, 344, -122, -128, 130, 166, 226,
	165, 164, 162, 343, 344, -137, -193, -217, -217, 68,
	68, -217, -217, 15, -193, -137, -213, -217, 68, -280,
	392, -280, 68, 68, 68, 68, -280, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 134, 68, 68,
	68, 134, 68, 134, -324, -331, 401, -217, -217, -97,
	-96, 43, -105, 94, 67, -388, 403, 350, -185, 103,
	-210, -209, 304, 41, -312, 370, 356, 357, -252, 240,
	64, 293, 294, 295, 296, -232, -178, 129, 251, 67,
	-117, -87, -193, 15, 134, -382, 133, -1, -193, -245,
	-203, -155, -403, -155, -203, -203, -205, -193, -388, -210,
	-257, -256, -170, -92, -92, -92, -92, 53, 53, 53,
	58, 53, 58, 53, -163, -257, -94, -105, -195, 68,
	-398, -397, -396, -394, 61, 214, 62, -223, -223, 145,
	-253, -206, 73, -259, -117, -117, -157, 17, 133, -157,
	78, 73, 89, -224, -326, -325, 46, -80, -103, -318,
	-359, -324, -193, 46, -80, -318, -186, -183, -191, -184,
	78, 15, -250, -245, 121, 121, 70, 328, -260, 73,
	349, 73, 210, 519, 134, 103, -176, 210, -212, -217,
	68, -130, 153, 152, -130, 68, -299, -300, -299, -302,
	-299, -130, -130, 68, 68, 23, 68, 68, 68, -217,
	68, 68, 134, -280, 67, -280, -280, -280, -280, -280,
	-280, -280, -280, -280, -280, -280, 73, 78, 78, -337,
	387, 382, 384, 44, 45, 34, 35, -112, -113, -114,
	-120, -115, -170, -208, -116, 218, 216, 220, -355, 88,
	221, 272, 89, 211, -389, 77, -384, 73, -193, -390,
	77, 351, 132, 306, 40, 352, 353, 367, 302, 78,
	78, 358, -385, 70, -117, -185, -185, -185, -112, -106,
	65, 133, -88, -118, -193, 121, 68, -155, -193, -155,
	-155, -203, -389, -390, -155, 134, 103, -110, -109, 64,
	65, -111, 64, -109, 53, 53, -155, -396, -395, 23,
	-355, -355, -355, 68, 68, 68, -156, 18, 20, 121,
	-156, -144, 13, 68, -318, -318, -245, -260, 370, -117,
	-175, 73, 519, -117, -217, 68, -217, -226, -225, 232,
	68, 68, -306, 509, -335, 382, 20, 20, -80, -117,
	68, 134, -123, -116, -193, 89, -354, -355, -235, -354,
	89, 67, 73, -387, 361, 73, 73, 78, 40, 78,
	132, 354, -313, 67, -137, -139, -192, 130, 73, 68,
	-189, -88, -193, -155, -382, 133, -155, -155, -100, -256,
	-324, -217, 67, -217, 67, 53, 19, 17, -217, -223,
	-358, -79, -329, -285, -79, 68, 68, -100, 20, -144,
	73, 20, 73, -333, 73, -105, -135, -136, -152, 341,
	242, -236, 246, 77, 247, 377, 248, 211, 250, 251,
	252, 222, 253, 254, 255, 370, 256, 257, 258, 259,
	324, 6, 289, -114, -134, -133, -131, 83, 94, 40,
	341, -132, 77, 129, 265, 243, 266, -151, -207, 64,
	347, 216, 88, 89, 329, -208, -350, -352, -193, -352,
	-193, -350, -350, -235, -217, 20, 464, 305, 40, 78,
	40, 355, -240, -242, -170, 67, -78, -77, -155, -155,
	-101, -104, -351, -193, 216, 20, 20, -336, 387, -332,
	-330, 382, 383, 384, 385, -282, -281, -284, 388, 274,
	395, -223, -173, 511, 73, 384, 34, -276, 232, 134,
	-152, -185, -185, -178, 129, -185, -185, -185, -185, 249,
	249, -185, -185, -185, -185, -185, -185, -185, -185, -185,
	-185, -185, -185, -185, -185, 67, -131, 83, -213, 73,
	-139, -140, 40, 264, 260, -141, 40, 244, 245, -143,
	67, 272, 13, 89, 89, -117, 67, 65, 281, 67,
	67, 67, -352, 68, 73, 349, 73, 305, 68, 134,
	-299, -217, -79, -100, 68, 68, 134, -338, 214, -334,
	386, -330, 20, 384, 20, 20, 68, -283, 96, 354,
	358, -217, 67, 20, -80, 20, -152, 78, 78, -185,
	-185, 78, 73, 73, 73, -185, -185, 78, 73, -195,
	78, 78, 78, 78, 40, 73, -142, 40, 260, 264,
	261, 262, 263, 78, 40, 78, 40, 78, 40, -193,
	67, -356, -357, 73, 78, 67, -319, -241, 67, -240,
	-353, 293, 294, 295, 297, 296, -353, -240, -240, -240,
	67, -262, -261, 273, 94, 370, -243, -242, -95, 68,
	-101, -193, 216, -345, 67, 78, -335, 20, -333, 20,
	-333, -333, -283, 507, 393, 394, 393, 394, -174, -193,
	-333, -277, 274, 275, -278, -289, 277, -137, -137, 73,
	73, -138, 243, -119, 68, 134, 103, 68, -217, -227,
	-146, -145, 460, -240, 68, 68, 68, 68, -240, 273,
	-244, 222, 77, 464, 291, 292, -95, -349, 30, 68,
	-344, -343, -171, -339, -193, 387, 388, 73, -333, 93,
	68, 134, -287, 278, 67, -285, 67, -285, 89, 294,
	244, 245, 68, -357, 73, 68, -150, -148, -149, 64,
	399, 270, 271, 68, -243, -243, -243, -243, 68, -185,
	73, 290, -348, -347, -346, 68, 134, 133, -283, -193,
	-279, 279, 78, -213, 67, -213, 67, -286, 276, 67,
	-261, -149, 64, -148, 64, 14, 13, -151, 78, -191,
	134, 103, -343, -193, -291, 67, 20, 68, -275, 68,
	-275, 67, 103, -213, -147, 267, 268, 30, 144, -147,
	-347, 40, -217, 133, -292, -290, 232, -278, 68, 68,
	68, -275, 78, 68, 83, 40, 269, -193, 68, 134,
	70, -288, 280, 68, -290, -293, 46, 78, -297, -294,
	67, -152, 234, 113, -297, -152, -296, -295, 279, 235,
	67, 68, 134, 70, 231, 67, -223, -295, -294, -223,
	68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	625, 626, 627, 628, 0, 0, 0, 396, 397, 0,
	376, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	270, 271, 0, 218, 214, 193, 194, 195, 154, 155,
	156, 157, 276, 0, 0, 0, 0, 0, 0, 475,
	-2, 629, 630, 631, 632, -2, 409, 0, 377, 378,
	379, 380, 381, 382, 383, 384, 259, 260, 261, 256,
	257, 258, -2, 0, 409, 207, 0, 198, 198, 0,
	495, 0, 0, 509, 531, 30, 0, 453, 0, 458,
	815, 851, 852, 853, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 453, 219,
	398, 399, 495, 495, 374, 0, 242, 0, 1468, 246,
	0, 0, 0, 371, 237, 238, 239, 240, 241, 0,
	617, 0, 234, 0, 213, 1527, 0, 0, 0, 0,
	0, 0, 98, 672, 100, 674, 104, 111, 0, 0,
	116, 117, 120, 121, 122, 123, 124, 0, 128, 0,
	130, 133, 0, 135, 136, 0, 139, 140, 141, 0,
	151, 152, 153, 675, 676, 78, 78, 1220, 1117, 0,
	1124, 1125, 1136, 1145, 923, 924, 925, 926, 0, 0,
	0, 0, 0, 933, 934, 0, 946, 1617, 0, 940,
	941, 942, 943, 41, 53, 54, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 0, 1090, 910, 851,
	0, 1625, 0, 1645, 1626, 1644, 0, 0, 1075, 0,
	1065, 0, -2, -2, 0, 0, 1594, 0, -2, 1622,
	1641, 1649, 1648, 1619, 1620, 1614, 1615, 1616, 1618, 1627,
	1629, 1640, 0, 1636, 1646, 1647, 55, 56, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1611, 1612, 1081, -2, 1083, 1084, 1086, 1087, 1088,
	1089, -2, 1092, 1093, 1094, -2, -2, 1097, 1098, 1099,
	1100, 1101, 1102, 1105, -2, 1107, -2, 1109, 1077, 1078,
	1079, 1080, 1069, 1070, 1071, 1072, 1073, 1074, -2, -2,
	-2, 0, 191, 189, 495, 567, 0, -2, 0, 0,
	0, 514, 517, 520, 523, 635, 701, 701, 701, 0,
	701, 0, 724, 678, 679, 680, 699, 700, 414, 410,
	411, 412, 413, 483, 0, 485, 488, 354, 314, 0,
	354, 0, 0, 490, 490, 0, 363, 354, 354, -2,
	0, 324, 325, 326, 319, 0, 319, 330, 331, 332,
	343, 344, 364, 1244, 0, 0, 276, 276, 416, 208,
	209, 197, 199, 0, 203, 0, 196, 1527, 0, 0,
	165, 1594, 170, 0, 1475, 1541, 1490, 0, 0, 1508,
	0, -2, 490, 0, 496, 0, 495, 0, 276, 276,
	276, 276, 276, 276, 276, 0, 0, 0, 532, 533,
	528, 529, 530, 534, 535, 3, 0, 618, 619, 622,
	623, 624, 0, 0, 457, 0, 0, 490, -2, 0,
	375, 243, 854, 0, 0, 247, 248, 0, 0, 262,
	0, 265, 251, 252, 253, 0, 0, 236, 0, 0,
	215, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	0, 108, 105, 112, 115, 125, 132, 0, 144, 146,
	149, 106, 113, 118, 119, 126, 147, 107, 109, 110,
	114, 148, 150, 127, 131, 145, 129, 134, 137, 138,
	143, 0, 79, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1117, 0, 929,
	930, 931, 932, 935, 0, 947, 0, 0, 0, 1174,
	0, 1115, 1115, 0, 1115, 1111, 1111, 0, 0, 1115,
	1053, 0, 0, 1055, 1066, 0, 0, 1058, 1059, 1115,
	0, 1115, 1063, 1064, 1049, 1050, 0, 1111, 0, 0,
	1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111,
	1111, 0, 1221, 1239, 1176, 1177, 1178, 1226, 1180, 1230,
	1230, 1226, 1226, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 0, 0, 1219, 1199, 1228, 1228, 1228, 1226,
	1223, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1233, 1233, 1236, 1233, 0,
	490, 0, 0, 478, 0, 459, 0, 511, 513, 0,
	515, 516, 518, 519, 521, 522, 524, 525, 0, 701,
	636, 0, 0, 0, 0, 0, 0, 701, 416, 415,
	0, 484, 0, 0, 540, 0, 0, 319, 540, 0,
	337, 338, 339, 354, 354, 345, 491, 346, 347, 356,
	0, 361, 362, 0, 540, 540, 0, 0, 0, 701,
	321, 320, 359, 360, 328, 321, 1245, 1246, 0, 0,
	0, 417, 0, 0, 201, 0, 206, 158, 0, 0,
	0, 0, 0, 0, 187, 188, 0, 0, 0, 0,
	0, 178, 181, 809, 810, 669, 670, 182, 183, 459,
	510, 512, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 395, 548, 542, 544, 612, 41, 548, 0, 0,
	432, 445, 427, 0, 434, 0, 816, 418, 445, 420,
	0, 434, 459, 481, 459, 0, 244, 0, 249, 0,
	0, 264, 266, 267, 268, 254, 255, 372, 232, 233,
	225, 226, 227, 228, 229, 230, 231, 235, 51, 0,
	216, 217, 0, 0, 0, 92, 93, 94, 95, 96,
	97, 99, 83, 387, 389, 661, 673, 0, 664, 0,
	102, 142, 75, 0, 0, 75, 1118, 1119, 1120, 1121,
	1122, 1126, 0, 1128, 1130, 1132, 1134, 0, 1150, -2,
	-2, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 1137, 1148, 1149, 0, 0, 0, 0,
	0, 1146, 1141, 0, 927, 0, 944, 948, 0, 0,
	0, 42, 1110, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 0, 1116, 0, 1117, 0, 0, 0, 1112,
	1113, 0, 0, 0, 1014, 1015, 1016, 0, 440, 0,
	1076, 1054, 1067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 1242, 1240, 1241, 1179,
	1227, 0, 1204, 0, 1205, 1206, 1207, 0, 0, 1200,
	0, 1201, 1202, 1203, 1195, 0, 1196, 1197, 0, 1198,
	190, 566, 568, 0, 449, 451, 452, 0, 479, 492,
	497, 498, 501, 0, 0, 0, 638, 0, 274, 655,
	0, 671, 693, -2, 0, 0, 486, 0, 0, 580,
	313, 0, 355, 316, 321, 323, 0, 540, 540, 354,
	0, 356, 0, 356, 350, 351, 0, 365, 368, 366,
	0, 327, 322, 370, 329, 0, 274, 553, 0, 554,
	555, 551, 582, 607, 607, 0, 607, 586, 0, 0,
	210, 211, 0, 0, 205, 159, 160, 0, 162, 163,
	164, 171, 166, 168, 0, 0, 172, 184, 185, 186,
	0, 0, 0, 176, 177, 0, 477, 385, 386, 390,
	0, 392, 813, 393, 394, 540, 0, 549, 0, 545,
	613, 0, 615, 0, 540, 469, 0, 425, 0, 426,
	442, 0, 446, 0, 0, 438, 431, 435, 0, 0,
	455, 419, 0, 0, 424, 480, 482, 855, 0, 1251,
	-2, 1253, -2, -2, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 0, 250, 263, 0, 0, 0, 0,
	86, 658, 0, 87, 91, 81, 0, 0, 0, 663,
	0, 660, 665, 0, 101, 0, 0, 76, 77, 715,
	720, 0, 0, 1127, 1129, 1131, 1133, 1135, 0, 1138,
	1146, 1142, 0, 1139, 0, 0, 1118, 0, 949, 0,
	0, 0, 0, 0, 0, 1001, 1002, 0, 0, 1006,
	0, 0, 1009, 0, 0, 0, 1013, 0, 1052, 1068,
	1056, 0, 1060, 0, 1062, 0, 0, 981, 981, 0,
	0, 0, 0, 981, 0, 0, 0, 0, 0, 0,
	0, 1222, 1175, 1243, 0, 0, 0, 1224, 0, 0,
	0, 0, 0, 569, 461, 0, 0, 0, 504, 502,
	503, 488, 0, 0, 645, 1247, 702, 278, 0, 0,
	657, 0, 0, 698, -2, 705, 0, 711, 0, 0,
	0, 403, 407, 30, 489, 0, 541, 315, 0, 354,
	540, 815, 340, 341, 540, 357, 354, 358, 354, 356,
	0, 367, 645, 278, 0, 0, 0, 0, 0, 573,
	0, 0, 572, 0, 0, 0, 0, 0, 488, 608,
	0, 610, 611, 620, 621, 584, -2, 0, 553, 590,
	0, 0, 212, 200, 202, 0, 0, 0, 0, 173,
	174, 175, 179, 180, 0, 0, 538, 543, 550, 614,
	616, 42, 546, 538, 31, 0, 0, 0, 445, 447,
	0, 0, 445, 0, 0, 454, 0, 0, 445, 0,
	0, 373, 52, 269, 0, 0, 0, 0, 0, 388,
	0, 662, 83, 0, 0, 103, 0, 0, 718, 0,
	720, 0, 1114, 1140, 0, 1147, 1143, 928, 936, 945,
	0, 0, 951, 963, 963, 0, 954, 1226, 1230, 957,
	1226, 1228, 1226, 963, 963, 0, 43, 0, 0, 1007,
	1008, 0, 0, 0, 441, 0, 0, 0, 981, 984,
	0, 985, 981, 981, 981, 981, 990, 981, 981, 981,
	981, 981, 981, 981, 1232, 1231, 1217, 0, 1218, 1229,
	1234, 0, 1237, 0, 450, 465, 0, 493, 494, 499,
	500, 0, 0, 0, 817, 648, 646, 647, 0, 1248,
	652, 279, 280, 281, 282, 0, 0, 0, 656, 0,
	0, 694, 695, 696, 697, 706, 1247, 1247, 1247, 817,
	453, 0, -2, 0, 0, 405, 0, 0, 581, 317,
	540, 333, 0, 348, 540, 540, 354, 369, 648, 652,
	540, 222, 0, 576, 570, 0, 559, 574, 575, 562,
	0, 564, 0, 560, 561, 540, 552, 583, 609, 585,
	589, 591, 592, 598, 0, 0, 0, 0, 0, 204,
	161, 0, 298, 167, 391, 814, 536, 0, 0, 536,
	470, 469, 0, 443, 0, 448, 445, 430, 439, 429,
	436, 437, 456, 445, 423, 422, 856, 1252, 1249, 1250,
	245, 0, 659, 83, 88, 89, 90, 84, 82, 666,
	0, 668, 0, 716, 720, 0, 0, 0, 1144, 950,
	937, 952, 964, 965, 953, 938, 955, 956, 958, 959,
	960, 961, 962, 939, 1003, 0, 1005, 1010, 1011, 0,
	1057, 1061, 0, 983, 979, 986, 987, 988, 989, 991,
	992, 993, 994, 995, 996, 997, 1225, 0, 0, 467,
	64, 0, 0, 505, 506, 0, 0, 0, 818, 819,
	821, 822, 0, 0, 824, 880, 0, 833, 701, 833,
	0, 0, 835, 836, 637, 0, 0, 640, 641, 650,
	0, 0, 0, 284, 285, 0, 0, 0, 297, 293,
	294, 295, 275, 651, 0, 0, 0, 0, 0, 607,
	0, 0, 540, 404, 407, 408, 487, 318, 540, 352,
	349, 540, 272, 273, 495, 0, 0, 556, 577, 0,
	0, 557, 0, 558, 563, 565, 221, 593, 0, 0,
	595, 596, 597, 587, 588, 169, 526, 0, 0, 547,
	527, 32, 434, 444, 428, 421, 85, 80, 667, 66,
	719, 721, 717, 66, 0, 1012, 0, 495, 980, 0,
	1235, 1238, 469, 0, 466, 0, 0, 0, 633, 488,
	-2, 0, -2, 823, 881, 845, 845, 834, 845, 845,
	701, 0, 649, 639, 0, 653, 654, 0, 286, 287,
	0, 290, 296, 0, 707, 708, 811, 812, 709, 0,
	540, 540, -2, 401, 406, 0, 334, 353, 490, 223,
	224, 578, 0, 571, 602, 599, 0, 0, 537, 539,
	433, 34, 60, 0, 33, 1004, 1051, 976, 0, 471,
	468, 0, 462, 464, 74, 0, 725, -2, 765, 1247,
	1247, 0, 1247, 1247, 1247, 1247, 0, 0, 1247, 1247,
	1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247,
	1247, 1247, 0, 820, 847, -2, 859, 861, 0, 0,
	864, 865, 0, 0, 0, 0, 902, 871, 0, 0,
	875, 0, 1162, 1163, 0, 879, 0, 837, 846, 0,
	846, 0, 0, 845, 0, 0, 0, 283, 288, 0,
	291, 292, 0, 689, 1226, 0, 713, 66, 495, 402,
	220, 0, 0, 603, 605, 600, 601, 57, 62, 67,
	68, 0, 0, 0, 0, 0, 977, 0, 971, 972,
	973, 978, 460, 0, 65, 0, 0, 712, 0, 710,
	767, 0, 0, 1247, 1247, 0, 0, 0, 0, 1247,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 860, 862, 863, 866,
	867, 868, 907, 908, 909, 869, 904, 905, 906, 870,
	0, 0, 0, 1160, 1161, 900, 0, 0, 0, 0,
	0, 0, 0, 831, 642, 0, 644, 289, 682, 0,
	501, 0, 714, 490, 579, 594, 0, 44, 0, 64,
	0, 69, 0, 0, 0, 0, 982, 974, 0, 0,
	0, 0, 0, 0, 634, 761, 766, 768, 769, 0,
	0, 772, 773, 774, 775, 0, 0, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 803, 804, 805,
	806, 807, 808, 788, 789, 790, 791, 792, 793, 800,
	0, 0, 797, 0, 0, 0, 1065, 895, 0, 0,
	838, 840, 841, 842, 843, 844, 839, 0, 0, 0,
	0, 830, 832, 876, 0, 643, 681, 690, 691, 501,
	400, 604, 606, 35, 0, 0, 61, 0, 70, 0,
	72, 73, 0, 966, 967, 969, 968, 970, 0, 473,
	463, 749, 0, 0, 755, 0, 762, 770, 771, 776,
	777, 794, 0, 0, 796, 0, 0, 903, 0, 874,
	883, 896, 0, 0, 682, 682, 682, 682, 0, 877,
	683, 1247, 0, 0, 687, 688, 692, 722, 0, 45,
	0, 47, 49, 50, 848, 58, 59, 63, 71, 0,
	472, 0, 727, 0, 0, 0, 0, 0, 759, 0,
	801, 802, 795, 798, 799, 872, 882, 884, 885, 0,
	897, 898, 899, 901, 825, 826, 827, 828, 0, 0,
	685, 0, 36, 37, 0, 46, 0, 0, 975, 474,
	729, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	873, 886, 0, 887, 0, 0, 0, 829, 684, 686,
	0, 0, 48, 849, 726, 0, 761, 751, 0, 753,
	0, 0, 0, 0, 888, 890, 891, 0, 0, 889,
	38, 39, 40, 0, 0, 731, 0, 747, 752, 754,
	756, 0, 760, 758, 892, 894, 893, 850, 730, 0,
	743, 728, 0, 757, 732, -2, 0, 748, 733, -2,
	0, 741, 0, 0, 734, 742, 0, 737, 0, 0,
	0, 736, 0, -2, 744, 0, 0, 738, -2, 0,
	746, 745,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 516,
	104, 103, 105, 3, 517, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 518, 115, 519, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:597
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:636
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:640
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:647
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:655
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:668
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:680
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:695
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:701
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:705
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:711
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:718
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:727
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:731
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:735
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:748
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:754
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:763
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:774
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:778
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:784
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:788
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:798
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:804
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:828
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:847
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:855
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:872
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:876
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:881
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:885
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:894
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:918
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:922
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:934
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:952
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:969
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1155
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1159
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1172
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1181
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1185
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1239
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1243
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1247
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1399
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1413
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1422
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1452
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1460
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1483
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1489
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1493
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1532
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1631
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1641
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1648
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1654
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1718
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1722
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1730
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1735
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1740
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1753
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1766
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1773
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1783
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1801
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1816
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1964
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1982
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1983
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2044
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2064
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2112
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2126
		{
			yyVAL.item = nil
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2131
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2174
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2185
		{
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2189
		{
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2194
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2248
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2258
		{
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2260
		{
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2296
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2314
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2352
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2381
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2386
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2390
		{
			yyVAL.str = yyDollar[2].str
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2396
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2413
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2447
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2502
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2506
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2594
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2622
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2628
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2633
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2640
		{
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2642
		{
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2645
		{
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2654
		{
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2658
		{
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2672
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2679
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2685
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2693
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2700
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2707
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2727
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2737
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2744
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2750
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2758
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2765
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2772
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2795
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2818
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2822
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2837
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2841
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2847
		{
			yyVAL.str = yyDollar[1].str
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2851
		{
			yyVAL.str = yyDollar[3].str
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2857
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2861
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2867
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2872
		{
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2883
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2887
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2903
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2909
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2913
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2919
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2923
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2945
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2959
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2977
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3002
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3013
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3026
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3030
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3035
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3039
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3046
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3051
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3106
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3110
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3128
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3137
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3160
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3166
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3172
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3176
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3187
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3191
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3195
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3200
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3204
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3208
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3224
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3402
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3419
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3428
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3443
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3447
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3453
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3457
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3461
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3465
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3470
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3478
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3492
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3510
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3543
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3553
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3557
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3567
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3571
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3575
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3579
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3595
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3599
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3605
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3615
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3621
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3627
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3631
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3635
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3645
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3661
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3665
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3671
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3685
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3698
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3721
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3752
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3756
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3762
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3772
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3776
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3780
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3785
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3789
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3793
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3797
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3806
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3810
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3814
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3818
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3823
		{
			yyVAL.str = ""
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3827
		{
			yyVAL.str = yyDollar[1].str
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3831
		{
			yyVAL.str = yyDollar[2].str
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3840
		{
			yyVAL.str = ""
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3844
		{
			yyVAL.str = yyDollar[1].str
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3848
		{
			yyVAL.str = yyDollar[2].str
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3852
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3856
		{
			yyVAL.str = yyDollar[2].str
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3890
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3900
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3911
		{
		}
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3916
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3928
		{
			yyVAL.str = yyDollar[1].str
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3934
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3944
		{
			yyVAL.str = yyDollar[1].str
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3948
		{
			yyVAL.str = yyDollar[1].str
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3961
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3967
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3975
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3981
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3996
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4002
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = yyDollar[1].str
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4028
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4034
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4042
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4148
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4152
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4168
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4172
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4188
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4196
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4205
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4211
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4246
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4250
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4256
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4273
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4277
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4281
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4291
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4314
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4344
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4352
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4358
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4362
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4368
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4427
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4433
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4437
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4466
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4488
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4509
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4518
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4522
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4527
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4531
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4562
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4589
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4595
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4599
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4628
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4634
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4638
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4660
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4664
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4673
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4687
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4691
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4701
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4705
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4716
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4751
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4760
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4770
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4780
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4784
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4789
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4793
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4802
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4808
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4812
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4816
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4826
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4834
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4838
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4842
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4846
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4850
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4858
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4862
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4866
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4870
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4874
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4878
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4882
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4886
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4894
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4898
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4906
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4910
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4918
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4922
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4941
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4945
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4951
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4956
		{
			yyVAL.str = ""
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4960
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4964
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4970
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4974
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4978
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4982
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4990
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5008
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5017
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5022
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5039
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5045
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5049
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5055
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5065
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5071
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5089
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5121
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5131
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5145
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5149
		{
			yyVAL.str = yyDollar[1].str
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5159
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5165
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5171
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5185
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5234
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5240
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5244
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5250
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5258
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5262
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5266
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5270
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5282
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5286
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5290
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5302
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5321
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = yyDollar[1].str
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5340
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = yyDollar[2].str
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5350
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5362
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5369
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5376
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5383
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5390
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5399
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5405
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5415
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5423
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5443
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5456
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5461
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5465
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5487
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5503
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5515
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5523
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5531
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5541
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5545
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5549
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5565
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5573
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5581
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5585
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5606
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5615
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5619
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5623
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5627
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5640
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5649
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5655
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5659
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5665
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5675
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5692
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5709
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5735
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5791
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5808
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5823
		{
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5833
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5837
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5843
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5859
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5863
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5869
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5876
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5889
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5896
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:5905
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5924
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5934
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5943
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5952
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5962
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5972
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5982
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5992
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6002
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6012
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6022
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6032
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6042
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6052
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6062
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6095
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6103
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6111
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6120
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6154
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6171
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6180
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6238
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6250
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6287
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6306
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6314
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6325
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6334
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6343
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6351
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6361
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6369
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6377
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6391
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6401
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6420
		{
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6422
		{
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6463
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6473
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6477
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6481
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6487
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6496
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6506
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6513
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6517
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6521
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6529
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6547
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6551
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6567
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6571
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6575
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6579
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6583
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6611
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6629
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6635
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6639
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6646
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6650
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6654
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6660
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6664
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6668
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6672
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6676
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6680
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6684
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6690
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6694
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6698
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6702
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6708
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6712
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6725
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6730
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6734
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6738
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6742
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6746
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6750
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6775
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6786
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6791
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6797
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6809
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6821
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6833
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6846
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6859
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6872
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6885
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6898
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6911
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6937
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6950
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6963
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7001
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7035
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7083
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7100
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7112
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7132
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7152
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7288
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7324
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7374
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7389
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7397
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7406
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7416
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7439
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7444
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7450
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7457
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7461
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7466
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7470
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7476
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7482
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7489
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7505
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7542
		{
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7544
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7554
		{
			yyVAL.str = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

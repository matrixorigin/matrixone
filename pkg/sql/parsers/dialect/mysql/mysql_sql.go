// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const CLUSTER = 57606
const TYPE = 57607
const ANY = 57608
const SOME = 57609
const EXTERNAL = 57610
const LOCALFILE = 57611
const URL = 57612
const PREPARE = 57613
const DEALLOCATE = 57614
const PROPERTIES = 57615
const PARSER = 57616
const VISIBLE = 57617
const INVISIBLE = 57618
const BTREE = 57619
const HASH = 57620
const RTREE = 57621
const BSI = 57622
const ZONEMAP = 57623
const LEADING = 57624
const BOTH = 57625
const TRAILING = 57626
const UNKNOWN = 57627
const EXPIRE = 57628
const ACCOUNT = 57629
const UNLOCK = 57630
const DAY = 57631
const NEVER = 57632
const PUMP = 57633
const SECOND = 57634
const ASCII = 57635
const COALESCE = 57636
const COLLATION = 57637
const HOUR = 57638
const MICROSECOND = 57639
const MINUTE = 57640
const MONTH = 57641
const QUARTER = 57642
const REPEAT = 57643
const REVERSE = 57644
const ROW_COUNT = 57645
const WEEK = 57646
const REVOKE = 57647
const FUNCTION = 57648
const PRIVILEGES = 57649
const TABLESPACE = 57650
const EXECUTE = 57651
const SUPER = 57652
const GRANT = 57653
const OPTION = 57654
const REFERENCES = 57655
const REPLICATION = 57656
const SLAVE = 57657
const CLIENT = 57658
const USAGE = 57659
const RELOAD = 57660
const FILE = 57661
const TEMPORARY = 57662
const ROUTINE = 57663
const EVENT = 57664
const SHUTDOWN = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const ENGINES = 57672
const LOW_CARDINALITY = 57673
const ADMIN_NAME = 57674
const RANDOM = 57675
const SUSPEND = 57676
const ATTRIBUTE = 57677
const HISTORY = 57678
const REUSE = 57679
const CURRENT = 57680
const OPTIONAL = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const UNBOUNDED = 57684
const SECONDARY = 57685
const USER = 57686
const IDENTIFIED = 57687
const CIPHER = 57688
const ISSUER = 57689
const X509 = 57690
const SUBJECT = 57691
const SAN = 57692
const REQUIRE = 57693
const SSL = 57694
const NONE = 57695
const PASSWORD = 57696
const MAX_QUERIES_PER_HOUR = 57697
const MAX_UPDATES_PER_HOUR = 57698
const MAX_CONNECTIONS_PER_HOUR = 57699
const MAX_USER_CONNECTIONS = 57700
const FORMAT = 57701
const VERBOSE = 57702
const CONNECTION = 57703
const TRIGGERS = 57704
const PROFILES = 57705
const LOAD = 57706
const INFILE = 57707
const TERMINATED = 57708
const OPTIONALLY = 57709
const ENCLOSED = 57710
const ESCAPED = 57711
const STARTING = 57712
const LINES = 57713
const ROWS = 57714
const IMPORT = 57715
const MODUMP = 57716
const OVER = 57717
const PRECEDING = 57718
const FOLLOWING = 57719
const GROUPS = 57720
const DATABASES = 57721
const TABLES = 57722
const EXTENDED = 57723
const FULL = 57724
const PROCESSLIST = 57725
const FIELDS = 57726
const COLUMNS = 57727
const OPEN = 57728
const ERRORS = 57729
const WARNINGS = 57730
const INDEXES = 57731
const SCHEMAS = 57732
const NODE = 57733
const LOCKS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const LOCAL = 57747
const EVENTS = 57748
const PLUGINS = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_TIME = 57752
const LOCALTIME = 57753
const LOCALTIMESTAMP = 57754
const UTC_DATE = 57755
const UTC_TIME = 57756
const UTC_TIMESTAMP = 57757
const REPLACE = 57758
const CONVERT = 57759
const SEPARATOR = 57760
const TIMESTAMPDIFF = 57761
const CURRENT_DATE = 57762
const CURRENT_USER = 57763
const CURRENT_ROLE = 57764
const SECOND_MICROSECOND = 57765
const MINUTE_MICROSECOND = 57766
const MINUTE_SECOND = 57767
const HOUR_MICROSECOND = 57768
const HOUR_SECOND = 57769
const HOUR_MINUTE = 57770
const DAY_MICROSECOND = 57771
const DAY_SECOND = 57772
const DAY_MINUTE = 57773
const DAY_HOUR = 57774
const YEAR_MONTH = 57775
const SQL_TSI_HOUR = 57776
const SQL_TSI_DAY = 57777
const SQL_TSI_WEEK = 57778
const SQL_TSI_MONTH = 57779
const SQL_TSI_QUARTER = 57780
const SQL_TSI_YEAR = 57781
const SQL_TSI_SECOND = 57782
const SQL_TSI_MINUTE = 57783
const RECURSIVE = 57784
const CONFIG = 57785
const DRAINER = 57786
const MATCH = 57787
const AGAINST = 57788
const BOOLEAN = 57789
const LANGUAGE = 57790
const WITH = 57791
const QUERY = 57792
const EXPANSION = 57793
const ADDDATE = 57794
const BIT_AND = 57795
const BIT_OR = 57796
const BIT_XOR = 57797
const CAST = 57798
const COUNT = 57799
const APPROX_COUNT_DISTINCT = 57800
const APPROX_PERCENTILE = 57801
const CURDATE = 57802
const CURTIME = 57803
const DATE_ADD = 57804
const DATE_SUB = 57805
const EXTRACT = 57806
const GROUP_CONCAT = 57807
const MAX = 57808
const MID = 57809
const MIN = 57810
const NOW = 57811
const POSITION = 57812
const SESSION_USER = 57813
const STD = 57814
const STDDEV = 57815
const STDDEV_POP = 57816
const STDDEV_SAMP = 57817
const SUBDATE = 57818
const SUBSTR = 57819
const SUBSTRING = 57820
const SUM = 57821
const SYSDATE = 57822
const SYSTEM_USER = 57823
const TRANSLATE = 57824
const TRIM = 57825
const VARIANCE = 57826
const VAR_POP = 57827
const VAR_SAMP = 57828
const AVG = 57829
const ARROW = 57830
const ROW = 57831
const OUTFILE = 57832
const HEADER = 57833
const MAX_FILE_SIZE = 57834
const FORCE_QUOTE = 57835
const UNUSED = 57836
const BINDINGS = 57837
const DO = 57838
const DECLARE = 57839
const KILL = 57840

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8089

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 84,
	21, 510,
	-2, 491,
	-1, 90,
	211, 691,
	-2, 737,
	-1, 107,
	42, 350,
	211, 350,
	238, 357,
	239, 357,
	406, 350,
	-2, 378,
	-1, 468,
	67, 1102,
	-2, 1610,
	-1, 469,
	67, 1120,
	-2, 1581,
	-1, 474,
	67, 1121,
	-2, 1609,
	-1, 494,
	67, 1034,
	-2, 1657,
	-1, 495,
	67, 1035,
	-2, 1656,
	-1, 496,
	67, 1036,
	-2, 1646,
	-1, 497,
	67, 1621,
	-2, 1641,
	-1, 498,
	67, 1622,
	-2, 1642,
	-1, 499,
	67, 1623,
	-2, 1648,
	-1, 500,
	67, 1624,
	-2, 1631,
	-1, 501,
	67, 1625,
	-2, 1639,
	-1, 502,
	67, 1626,
	-2, 1649,
	-1, 503,
	67, 1627,
	-2, 1650,
	-1, 504,
	67, 1628,
	-2, 1655,
	-1, 505,
	67, 1629,
	-2, 1660,
	-1, 506,
	67, 1630,
	-2, 1661,
	-1, 508,
	67, 1099,
	-2, 1462,
	-1, 515,
	67, 1108,
	-2, 1488,
	-1, 519,
	67, 1112,
	-2, 1527,
	-1, 520,
	67, 1113,
	-2, 1605,
	-1, 528,
<<<<<<< HEAD
	67, 1118,
	-2, 1593,
	-1, 540,
	67, 1008,
	-2, 1644,
	-1, 541,
	67, 1009,
	-2, 1645,
	-1, 542,
	67, 1010,
	-2, 1646,
	-1, 549,
	21, 504,
	-2, 467,
	-1, 594,
	401, 371,
	402, 371,
	-2, 344,
	-1, 636,
	103, 1455,
	114, 1455,
	133, 1455,
	-2, 1254,
	-1, 673,
	21, 504,
	-2, 467,
	-1, 771,
	21, 503,
	-2, 920,
	-1, 1076,
	67, 1161,
	-2, 1600,
	-1, 1077,
	67, 1162,
	-2, 1601,
	-1, 1230,
	1, 710,
	68, 710,
	515, 710,
	-2, 717,
	-1, 1347,
	133, 1264,
	-2, 1262,
	-1, 1349,
	133, 627,
	-2, 1259,
	-1, 1350,
	133, 628,
	-2, 1260,
	-1, 1643,
	1, 711,
	68, 711,
	515, 711,
	-2, 717,
	-1, 1697,
	21, 503,
	-2, 594,
	-1, 1862,
	65, 415,
	134, 415,
	-2, 825,
	-1, 2120,
	87, 717,
	129, 717,
	166, 717,
	169, 717,
	-2, 773,
	-1, 2122,
	272, 888,
	-2, 867,
	-1, 2152,
	65, 415,
	134, 415,
	-2, 826,
	-1, 2188,
	87, 717,
	129, 717,
	166, 717,
	169, 717,
	-2, 774,
	-1, 2216,
	272, 888,
	-2, 868,
	-1, 2623,
	68, 745,
	134, 745,
	-2, 717,
	-1, 2627,
	68, 745,
	134, 745,
	-2, 717,
	-1, 2641,
	68, 749,
	134, 749,
	-2, 717,
	-1, 2646,
	68, 750,
	134, 750,
	-2, 717,
=======
	67, 1123,
	-2, 1590,
	-1, 530,
	67, 1125,
	-2, 1600,
	-1, 542,
	67, 1015,
	-2, 1651,
	-1, 543,
	67, 1016,
	-2, 1652,
	-1, 544,
	67, 1017,
	-2, 1653,
	-1, 551,
	21, 511,
	-2, 474,
	-1, 599,
	401, 378,
	402, 378,
	-2, 351,
	-1, 641,
	103, 1462,
	114, 1462,
	133, 1462,
	-2, 1261,
	-1, 678,
	21, 511,
	-2, 474,
	-1, 776,
	21, 510,
	-2, 927,
	-1, 1081,
	67, 1168,
	-2, 1607,
	-1, 1082,
	67, 1169,
	-2, 1608,
	-1, 1237,
	1, 717,
	68, 717,
	516, 717,
	-2, 724,
	-1, 1354,
	133, 1271,
	-2, 1269,
	-1, 1356,
	133, 634,
	-2, 1266,
	-1, 1357,
	133, 635,
	-2, 1267,
	-1, 1650,
	1, 718,
	68, 718,
	516, 718,
	-2, 724,
	-1, 1704,
	21, 510,
	-2, 601,
	-1, 1869,
	65, 422,
	134, 422,
	-2, 832,
	-1, 2127,
	87, 724,
	129, 724,
	166, 724,
	169, 724,
	-2, 780,
	-1, 2129,
	272, 895,
	-2, 874,
	-1, 2159,
	65, 422,
	134, 422,
	-2, 833,
	-1, 2195,
	87, 724,
	129, 724,
	166, 724,
	169, 724,
	-2, 781,
	-1, 2223,
	272, 895,
	-2, 875,
	-1, 2630,
	68, 752,
	134, 752,
	-2, 724,
	-1, 2634,
	68, 752,
	134, 752,
	-2, 724,
	-1, 2648,
	68, 756,
	134, 756,
	-2, 724,
	-1, 2653,
	68, 757,
	134, 757,
	-2, 724,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
}

const yyPrivate = 57344

<<<<<<< HEAD
const yyLast = 28440

var yyAct = [...]int{
	437, 2627, 1140, 2629, 2635, 2626, 2603, 417, 1056, 2255,
	2468, 419, 2592, 2549, 439, 2505, 2228, 1694, 2534, 2435,
	2439, 2533, 2415, 1627, 2368, 2253, 798, 2174, 968, 1308,
	2254, 922, 2423, 2271, 2114, 1274, 123, 123, 2172, 464,
	1052, 1690, 123, 357, 364, 2238, 364, 550, 635, 2145,
	1186, 2184, 126, 2013, 1235, 2217, 362, 29, 1059, 1865,
	2237, 2009, 896, 1333, 1724, 907, 1882, 1758, 368, 2126,
	2133, 122, 122, 1296, 1266, 827, 2018, 348, 1689, 1534,
	2086, 545, 411, 2014, 1903, 2069, 2029, 1650, 2026, 667,
	374, 578, 1757, 416, 2024, 1237, 1189, 2007, 1344, 1961,
	1799, 1326, 1530, 1347, 1289, 1916, 1269, 1334, 1529, 1196,
	1335, 639, 1678, 545, 1881, 1210, 1835, 1327, 3, 642,
	39, 1840, 123, 2192, 909, 360, 7, 1247, 361, 18,
	1649, 358, 8, 359, 6, 1226, 1248, 662, 1644, 1267,
	1562, 418, 833, 1218, 1531, 1050, 990, 452, 83, 1293,
	1636, 1260, 1249, 82, 597, 420, 661, 669, 350, 1259,
	1541, 637, 39, 1615, 1139, 1104, 1090, 1545, 1041, 353,
	684, 1692, 663, 428, 1330, 29, 1055, 1312, 1222, 878,
	1049, 627, 1699, 1255, 1225, 412, 937, 347, 577, 947,
	83, 547, 1110, 376, 15, 549, 1838, 1201, 9, 1109,
	4, 960, 989, 923, 590, 363, 116, 1954, 113, 377,
	575, 1954, 628, 1548, 1760, 1538, 371, 118, 2284, 1725,
	2113, 1214, 2456, 1329, 548, 117, 799, 35, 107, 89,
	1130, 2246, 117, 117, 35, 107, 89, 660, 39, 117,
	117, 35, 107, 89, 7, 2496, 117, 18, 346, 703,
	8, 366, 6, 117, 1745, 117, 1130, 1535, 117, 2486,
	1008, 1753, 641, 949, 894, 1546, 83, 119, 640, 1933,
	647, 646, 648, 737, 736, 1001, 1005, 535, 1837, 534,
	536, 537, 114, 538, 539, 934, 919, 935, 1026, 114,
	114, 998, 2522, 544, 1926, 1826, 114, 1007, 1277, 1278,
	645, 926, 607, 114, 925, 928, 929, 2520, 928, 929,
	114, 730, 1000, 995, 950, 114, 2537, 2538, 1251, 1058,
	735, 2280, 2457, 2458, 1800, 2509, 2510, 2269, 2000, 2361,
	1836, 2272, 2273, 2274, 2275, 1042, 2001, 1046, 2002, 711,
	718, 713, 719, 741, 742, 743, 740, 2364, 650, 2286,
	123, 677, 2115, 1740, 1061, 678, 567, 687, 1290, 1286,
	676, 1045, 373, 2438, 643, 2098, 364, 2134, 123, 714,
	721, 1126, 2038, 1282, 1123, 1542, 2251, 1145, 1125, 1122,
	1124, 1128, 1129, 1037, 611, 675, 1127, 2040, 2141, 1673,
	2495, 2030, 1634, 2345, 672, 674, 1612, 1126, 407, 1947,
	1123, 408, 1949, 694, 1125, 1122, 1124, 1128, 1129, 1843,
	1185, 1184, 1127, 732, 551, 733, 734, 2235, 88, 706,
	115, 644, 2035, 2036, 1750, 773, 2547, 2348, 2248, 1047,
	365, 2339, 671, 707, 716, 2377, 2279, 2037, 105, 2524,
	2620, 612, 2281, 2636, 2558, 2536, 2565, 2519, 1044, 1060,
	687, 2470, 914, 2493, 709, 917, 2332, 2614, 2301, 673,
	2498, 2499, 698, 2300, 410, 2034, 712, 715, 1068, 1071,
	1072, 1552, 1554, 1555, 39, 39, 409, 569, 2327, 1069,
	1851, 1852, 1853, 1854, 1547, 2476, 649, 566, 565, 941,
	708, 717, 1849, 2526, 2527, 728, 729, 956, 955, 2437,
	696, 936, 83, 83, 641, 913, 2466, 2467, 560, 2470,
	640, 921, 920, 895, 2595, 912, 1133, 1134, 1135, 1136,
	1137, 1138, 1131, 1132, 680, 681, 689, 688, 638, 2637,
	2604, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 1132,
	2289, 1043, 2643, 563, 2109, 710, 720, 2032, 2424, 2425,
	2426, 2428, 2427, 2631, 668, 774, 775, 776, 777, 2323,
	771, 692, 558, 1563, 1905, 1907, 640, 578, 897, 695,
	723, 1536, 724, 900, 372, 2359, 1536, 948, 703, 1536,
	1746, 2102, 1706, 1539, 875, 1953, 1220, 2022, 1550, 744,
	1957, 1952, 902, 778, 367, 564, 682, 618, 772, 904,
	726, 1963, 1962, 807, 2019, 2022, 780, 1909, 927, 689,
	688, 924, 898, 899, 1703, 901, 928, 929, 2596, 559,
	545, 545, 545, 953, 2497, 972, 972, 785, 1705, 1704,
	1280, 928, 929, 951, 952, 2525, 2459, 2460, 2400, 1281,
	918, 364, 993, 993, 617, 36, 1291, 1549, 620, 619,
	1537, 1702, 36, 1279, 974, 614, 2031, 702, 2041, 976,
	2346, 1003, 996, 1842, 722, 970, 970, 2247, 2436, 1950,
	2050, 90, 2328, 2329, 2630, 738, 615, 1070, 90, 90,
	1553, 1024, 2252, 2649, 568, 90, 90, 2577, 1285, 883,
	809, 810, 90, 972, 1009, 972, 677, 1754, 727, 90,
	915, 90, 1283, 608, 90, 1057, 2642, 931, 932, 2023,
	739, 1733, 1038, 703, 999, 1846, 1847, 1906, 1006, 1238,
	1728, 725, 2033, 2121, 697, 2648, 938, 2023, 938, 1845,
	1726, 1621, 2016, 572, 573, 574, 2017, 2020, 1033, 1864,
	1745, 2593, 2594, 549, 880, 1857, 2639, 1590, 882, 739,
	1589, 638, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1688, 2621, 1039, 1099, 1100, 1715,
	741, 742, 743, 740, 1108, 1238, 978, 906, 942, 2325,
	347, 2616, 610, 2324, 1155, 609, 930, 1062, 2021, 933,
	1863, 739, 39, 1315, 1161, 1019, 1020, 1054, 653, 658,
	659, 39, 608, 1163, 2607, 83, 1167, 1168, 2606, 83,
	1032, 1535, 2640, 1029, 1982, 1028, 739, 545, 945, 946,
	83, 1040, 954, 1687, 966, 967, 1715, 992, 992, 83,
	1073, 1544, 963, 964, 965, 977, 701, 1688, 2581, 1035,
	2551, 346, 1015, 1010, 2295, 994, 988, 2617, 2544, 1638,
	981, 982, 983, 984, 985, 986, 987, 2539, 2401, 2403,
	2404, 2405, 2402, 2528, 1626, 1207, 2514, 1858, 1011, 1051,
	1544, 1594, 1526, 549, 1544, 905, 1031, 1192, 1193, 2491,
	1030, 610, 1027, 1023, 609, 1048, 1102, 1223, 2490, 972,
	2489, 1022, 1230, 2066, 1154, 1200, 578, 1208, 552, 1236,
	1098, 2488, 972, 1053, 1544, 2478, 2552, 957, 1229, 1864,
	2601, 2140, 1313, 2356, 2350, 1063, 1064, 1065, 1066, 1067,
	2355, 2553, 1191, 2350, 2349, 1256, 1256, 1688, 1261, 1715,
	1092, 1900, 2515, 1261, 1625, 2155, 1223, 972, 1276, 1302,
	703, 1211, 1141, 1637, 1144, 2350, 2051, 1221, 545, 1156,
	972, 1254, 1198, 1199, 2350, 1231, 2350, 1106, 1107, 1162,
	1822, 1164, 1918, 1142, 655, 656, 657, 2350, 1149, 1866,
	756, 2479, 1223, 972, 1820, 1307, 123, 123, 1143, 2357,
	1228, 939, 1572, 1317, 1748, 2055, 1654, 123, 1747, 1258,
	2350, 1155, 1155, 1337, 1165, 662, 1944, 1688, 1155, 1155,
	1739, 1243, 741, 742, 743, 740, 1310, 741, 742, 743,
	740, 1309, 1309, 876, 1818, 1670, 1323, 1252, 1253, 2611,
	1349, 1816, 1309, 700, 1805, 1762, 1823, 1236, 1242, 1181,
	663, 972, 1743, 1586, 1573, 1245, 1246, 1287, 1737, 938,
	1821, 1525, 1239, 1244, 1735, 1730, 1624, 1320, 1012, 1653,
	1215, 1571, 1292, 1212, 1250, 1350, 1622, 1216, 1209, 1203,
	1219, 1206, 1341, 874, 1306, 1227, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 1240, 940,
	1817, 1527, 1597, 1232, 1233, 1275, 1557, 1817, 783, 1241,
	739, 739, 1262, 701, 1560, 1561, 690, 1338, 1654, 670,
	1596, 1332, 1543, 1016, 1731, 1701, 1300, 1301, 1332, 1257,
	1736, 1731, 670, 1227, 1263, 1654, 1147, 1146, 616, 1946,
	1265, 1264, 1621, 939, 1533, 570, 39, 910, 961, 1288,
	959, 2590, 2578, 1839, 1311, 1833, 1212, 1768, 641, 962,
	2480, 1224, 1212, 1212, 640, 641, 1303, 2067, 739, 1051,
	1304, 640, 2513, 1305, 83, 1297, 1298, 1299, 1955, 1148,
	1734, 1708, 1321, 679, 1105, 1601, 739, 740, 1544, 1017,
	1945, 670, 1339, 1777, 1348, 1532, 1523, 2335, 1524, 1342,
	1166, 1343, 2334, 1169, 1170, 1171, 1172, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 741, 742, 743, 740, 1528, 873,
	870, 871, 872, 1770, 2130, 1782, 1173, 1781, 1780, 1778,
	958, 123, 123, 759, 760, 761, 762, 763, 756, 2125,
	1551, 940, 123, 1651, 1105, 1922, 1568, 1559, 1097, 2318,
	621, 771, 1261, 613, 2613, 1661, 2625, 640, 1556, 743,
	740, 357, 2411, 1095, 1096, 1094, 1630, 1632, 2610, 1261,
	2531, 1558, 2212, 1159, 2409, 2025, 662, 1647, 1092, 1567,
	2442, 2575, 2559, 1160, 1276, 2344, 2448, 1975, 2417, 1779,
	1660, 2395, 741, 742, 743, 740, 2394, 2612, 1565, 2393,
	2410, 1569, 741, 742, 743, 740, 1646, 741, 742, 743,
	740, 663, 2408, 972, 764, 765, 757, 758, 759, 760,
	761, 762, 763, 756, 993, 2390, 1276, 2384, 2381, 1719,
	2407, 1721, 1974, 2628, 1695, 1695, 2380, 1695, 2137, 2039,
	1998, 1579, 2397, 2194, 1580, 2249, 1584, 2138, 1659, 1628,
	1629, 1662, 1663, 1713, 741, 742, 743, 740, 1698, 1997,
	1940, 1696, 1595, 1700, 1645, 1598, 1599, 1600, 2406, 1617,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1582, 1610, 1920,
	2396, 1620, 1664, 2250, 1619, 2139, 1793, 1666, 1618, 1668,
	757, 758, 759, 760, 761, 762, 763, 756, 1639, 2177,
	1718, 1250, 1614, 741, 742, 743, 740, 1783, 1784, 2546,
	1613, 1658, 1013, 407, 2530, 1665, 408, 1669, 1716, 1667,
	1671, 741, 742, 743, 740, 1674, 2176, 1723, 2416, 2185,
	1581, 1697, 2511, 2474, 1655, 2641, 2473, 640, 747, 748,
	749, 750, 751, 752, 753, 745, 2398, 807, 741, 742,
	743, 740, 741, 742, 743, 740, 2105, 1709, 1710, 1711,
	1978, 741, 742, 743, 740, 1576, 2391, 1977, 2387, 2386,
	1717, 1570, 2618, 1275, 664, 665, 666, 2198, 741, 742,
	743, 740, 741, 742, 743, 740, 2385, 2347, 2202, 741,
	742, 743, 740, 1212, 1212, 1212, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 2191, 992,
	1976, 2320, 2193, 2195, 2197, 1592, 2199, 2200, 2201, 2203,
	2204, 2205, 2207, 2208, 2209, 2210, 2285, 741, 742, 743,
	740, 2183, 741, 742, 743, 740, 1741, 1813, 2181, 2148,
	741, 742, 743, 740, 2136, 2135, 972, 2132, 972, 767,
	972, 770, 2101, 1759, 1996, 677, 2213, 1951, 1921, 741,
	742, 743, 740, 1912, 1755, 1623, 768, 769, 766, 1616,
	755, 754, 764, 765, 757, 758, 759, 760, 761, 762,
	763, 756, 1812, 972, 1786, 1322, 491, 490, 1751, 1014,
	1811, 2211, 808, 803, 1810, 2481, 802, 1794, 784, 2043,
	2367, 972, 1809, 2149, 741, 742, 743, 740, 2190, 1808,
	1796, 1785, 741, 742, 743, 740, 741, 742, 743, 740,
	2120, 2111, 2587, 970, 741, 742, 743, 740, 1807, 1795,
	2110, 741, 742, 743, 740, 2093, 117, 2206, 1804, 107,
	89, 970, 2085, 2084, 2196, 2056, 1980, 1973, 972, 1965,
	741, 742, 743, 740, 1960, 1819, 1772, 1815, 1752, 1862,
	741, 742, 743, 740, 1814, 1868, 1602, 1593, 1766, 755,
	754, 764, 765, 757, 758, 759, 760, 761, 762, 763,
	756, 1877, 2585, 1744, 1591, 1588, 677, 1276, 1276, 1276,
	1276, 1749, 1742, 114, 1860, 1883, 1587, 1585, 677, 1276,
	741, 742, 743, 740, 1856, 1824, 1832, 1883, 1801, 1578,
	1763, 1575, 1574, 1806, 1158, 1765, 1157, 972, 117, 29,
	979, 2638, 1051, 2589, 1776, 123, 123, 1803, 2583, 755,
	754, 764, 765, 757, 758, 759, 760, 761, 762, 763,
	756, 2566, 1155, 1899, 1155, 2563, 2561, 1932, 800, 741,
	742, 743, 740, 2447, 1695, 2433, 972, 2421, 1869, 2418,
	1914, 1915, 1802, 2413, 1769, 1898, 1871, 1938, 2373, 1188,
	1873, 2342, 1787, 1788, 2341, 114, 2340, 1645, 1791, 1792,
	1829, 1867, 39, 1848, 741, 742, 743, 740, 7, 1861,
	1797, 18, 1855, 1870, 8, 2337, 6, 1927, 2331, 1878,
	2316, 1874, 1939, 1875, 1934, 1897, 1880, 1876, 1872, 1895,
	83, 908, 1896, 1211, 2165, 2163, 2143, 1212, 1931, 549,
	1827, 1828, 1219, 1913, 1227, 1910, 1884, 1885, 1886, 1887,
	2131, 1984, 1197, 1190, 1275, 1275, 1275, 1275, 1966, 1919,
	1859, 1968, 1948, 1970, 1929, 677, 1275, 1943, 1936, 2028,
	1935, 1930, 1928, 1937, 2012, 1925, 1923, 1834, 1942, 1729,
	1707, 123, 1652, 1956, 1093, 114, 1202, 1205, 1958, 2212,
	677, 1195, 1194, 1036, 1276, 1651, 1908, 2054, 1002, 2012,
	1879, 2338, 1798, 2058, 1964, 1967, 877, 825, 83, 824,
	2028, 823, 822, 1971, 1972, 83, 2044, 821, 820, 819,
	2571, 1969, 818, 1646, 741, 742, 743, 740, 817, 1983,
	1790, 816, 815, 1985, 1986, 1987, 1988, 814, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1212, 813, 812, 811, 1786,
	1212, 806, 741, 742, 743, 740, 805, 804, 801, 797,
	2194, 796, 794, 793, 792, 791, 1657, 1789, 2052, 754,
	764, 765, 757, 758, 759, 760, 761, 762, 763, 756,
	2049, 790, 2053, 123, 789, 788, 1959, 2048, 123, 741,
	742, 743, 740, 787, 786, 782, 2057, 2064, 2063, 781,
	2059, 2060, 2074, 2062, 1767, 705, 1641, 2065, 693, 1979,
	1101, 2569, 2081, 2082, 2083, 2535, 2091, 2078, 2099, 2070,
	2071, 2073, 2077, 2103, 1850, 1714, 741, 742, 743, 740,
	2090, 2061, 741, 742, 743, 740, 1325, 123, 704, 2076,
	1892, 1275, 2075, 1889, 1675, 1893, 2124, 553, 554, 555,
	556, 1890, 2100, 2097, 1888, 2168, 1891, 2167, 2094, 2624,
	552, 1894, 2096, 1684, 1685, 2095, 1738, 1680, 1683, 1684,
	1685, 1681, 2119, 1682, 1686, 1732, 972, 972, 2003, 2004,
	1831, 1276, 2152, 2045, 2046, 2047, 1646, 1182, 66, 1727,
	1761, 2166, 2118, 1756, 2198, 1628, 1629, 677, 879, 2006,
	1635, 699, 2287, 2005, 2144, 2202, 1883, 38, 37, 980,
	1234, 2128, 120, 1147, 1146, 2502, 970, 2146, 2122, 2129,
	944, 2170, 943, 1155, 2127, 2191, 2127, 2123, 343, 2193,
	2195, 2197, 1695, 2199, 2200, 2201, 2203, 2204, 2205, 2207,
	2208, 2209, 2210, 2159, 2154, 891, 892, 344, 345, 342,
	889, 890, 677, 731, 2189, 2151, 2239, 2241, 2150, 2239,
	2239, 2012, 2080, 2160, 2158, 887, 888, 885, 886, 1522,
	911, 2161, 2175, 2213, 677, 881, 2584, 2464, 2153, 553,
	554, 555, 556, 83, 2156, 2178, 2171, 2157, 2452, 2450,
	2378, 2104, 552, 552, 1236, 2374, 2264, 2366, 2106, 2365,
	2363, 2267, 2240, 2266, 2182, 2179, 2236, 2180, 2211, 2117,
	2116, 2087, 2282, 2214, 2088, 2186, 884, 1917, 1238, 2242,
	2243, 2261, 2291, 2244, 1941, 2190, 2573, 2572, 1275, 1680,
	1683, 1684, 1685, 1681, 1577, 1682, 1686, 691, 2258, 2572,
	2573, 2333, 2154, 2092, 916, 45, 1, 1324, 2262, 1901,
	1902, 2079, 1904, 1540, 2206, 972, 1672, 1633, 2319, 1981,
	2042, 2196, 903, 571, 1150, 893, 123, 1021, 652, 686,
	1018, 2294, 685, 683, 1103, 2241, 2259, 2260, 454, 1328,
	2414, 2263, 2501, 1212, 2548, 2446, 2162, 2504, 1034, 2164,
	438, 2358, 1999, 2268, 2360, 2146, 2270, 1825, 2173, 1924,
	2236, 2336, 2317, 2169, 2321, 586, 755, 754, 764, 765,
	757, 758, 759, 760, 761, 762, 763, 756, 486, 462,
	2343, 795, 1004, 997, 2379, 654, 1764, 2353, 461, 2142,
	1844, 557, 651, 587, 2362, 1611, 2351, 2354, 2112, 1183,
	1204, 1187, 2634, 2623, 2602, 2412, 2582, 2245, 755, 754,
	764, 765, 757, 758, 759, 760, 761, 762, 763, 756,
	2469, 2619, 2518, 2564, 2278, 2276, 2277, 2557, 677, 2465,
	2376, 677, 677, 677, 2375, 2288, 2392, 378, 1284, 543,
	625, 677, 2434, 379, 1656, 2494, 2420, 1695, 2444, 561,
	1640, 562, 1643, 2422, 1642, 1074, 2430, 2431, 2432, 746,
	1091, 2107, 2429, 2419, 2462, 2441, 2108, 779, 415, 1566,
	427, 2440, 421, 972, 972, 1841, 2443, 2292, 2293, 2229,
	2296, 2297, 2298, 2299, 2455, 2449, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	1911, 2471, 2472, 44, 123, 2451, 43, 2453, 2454, 42,
	1316, 1345, 677, 970, 970, 456, 2463, 125, 1346, 2461,
	2283, 2506, 436, 435, 677, 83, 434, 433, 1679, 1677,
	1676, 1271, 2352, 2477, 1270, 1314, 2483, 2487, 2508, 1309,
	2532, 2484, 2485, 1564, 2330, 2399, 2326, 2322, 2475, 2492,
	2188, 2187, 2507, 2215, 2372, 677, 2500, 2216, 2222, 832,
	828, 830, 831, 829, 2516, 755, 754, 764, 765, 757,
	758, 759, 760, 761, 762, 763, 756, 1775, 1771, 2010,
	2011, 2382, 2383, 2008, 2521, 2523, 2072, 2388, 2389, 2068,
	1336, 1217, 2529, 1830, 2512, 1272, 1268, 2257, 546, 2540,
	2541, 2542, 2543, 5, 2550, 28, 2555, 27, 677, 26,
	14, 13, 1025, 12, 17, 25, 2556, 1057, 2560, 24,
	2562, 23, 22, 74, 73, 72, 71, 21, 2554, 755,
	754, 764, 765, 757, 758, 759, 760, 761, 762, 763,
	756, 2567, 2568, 2508, 2580, 2372, 2570, 11, 70, 69,
	68, 2574, 677, 20, 677, 2576, 19, 2507, 2579, 63,
	2586, 1057, 2588, 1057, 2591, 64, 55, 54, 53, 62,
	61, 60, 585, 52, 51, 50, 2597, 49, 59, 2550,
	677, 2598, 58, 57, 56, 2605, 48, 47, 2609, 1057,
	46, 87, 2615, 86, 2482, 85, 84, 30, 31, 32,
	33, 97, 96, 98, 94, 92, 95, 93, 91, 40,
	10, 16, 2, 0, 2622, 0, 0, 0, 0, 0,
	0, 2633, 0, 2632, 0, 0, 0, 0, 0, 0,
	0, 2644, 0, 2646, 0, 2645, 2647, 0, 0, 0,
	2633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2545, 0, 0, 0, 1461, 1503, 0, 2372,
	1450, 292, 1408, 1463, 1381, 1397, 1471, 1398, 1399, 1436,
	1360, 1418, 254, 1395, 0, 0, 0, 0, 0, 0,
	1453, 1352, 1384, 1385, 1354, 1391, 1355, 1382, 1410, 199,
	1380, 1421, 224, 1433, 1394, 1415, 1469, 0, 0, 284,
	238, 0, 0, 1413, 1455, 1416, 1441, 1407, 1437, 1368,
	1429, 1464, 1396, 0, 1434, 1465, 0, 0, 0, 0,
	664, 665, 666, 0, 2600, 0, 0, 180, 0, 0,
	0, 0, 0, 1432, 1459, 1393, 0, 183, 1462, 1414,
	1435, 0, 0, 1353, 1430, 0, 1358, 1361, 1470, 1457,
	1388, 1389, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 1417, 1438, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 0, 1426, 0, 0, 0, 1363,
	1359, 0, 1409, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 1502, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 1362, 313, 175, 1497,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 1481, 1482, 1483, 1484, 1485, 341, 1493, 1494, 0,
	1498, 1499, 1500, 1367, 0, 1387, 1439, 0, 1351, 1448,
	1456, 1406, 315, 1458, 1403, 1402, 1488, 0, 1487, 288,
	1489, 1490, 223, 1454, 1383, 1392, 331, 1390, 274, 256,
	1460, 1425, 1501, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 1486, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 1495,
	0, 1496, 327, 206, 164, 310, 0, 252, 0, 1451,
	1356, 1366, 1364, 1400, 1427, 1428, 248, 326, 1443, 1447,
	1444, 1472, 277, 0, 0, 0, 0, 0, 217, 258,
	1445, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 285, 308, 320, 337, 340, 1504,
	1505, 1506, 168, 339, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 311, 1401, 1374, 1412, 319, 1377, 1375, 1442, 1376,
	1431, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 1422, 1405, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1423, 1515, 1516, 1517, 1518, 1519, 1379, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 1449, 1520, 1521,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 1373, 1378, 1372, 1419, 1420,
	1466, 1467, 1468, 1440, 1365, 1452, 0, 1369, 1371, 1370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1446,
	292, 468, 1424, 165, 0, 225, 1473, 266, 204, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 460, 0, 0, 284, 238,
	0, 0, 0, 0, 514, 522, 1491, 1492, 323, 324,
	325, 309, 0, 196, 1514, 0, 422, 0, 0, 453,
	491, 490, 440, 449, 0, 0, 180, 441, 0, 448,
	442, 446, 445, 443, 444, 0, 506, 0, 0, 0,
	0, 0, 0, 413, 426, 2369, 430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 469, 0, 425, 0, 0, 471,
	450, 451, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	447, 467, 472, 192, 528, 465, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 529, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 315, 0, 0, 512, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 466, 0, 274, 256, 525,
	414, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 510, 252, 0, 524, 505,
	507, 508, 511, 515, 516, 517, 518, 519, 521, 523,
	527, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 2370, 0, 0, 0, 2371, 0,
	526, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	470, 242, 243, 244, 245, 513, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 535, 509, 534, 536, 537, 533,
	538, 539, 520, 432, 0, 475, 531, 530, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 498, 479,
	480, 481, 431, 482, 477, 478, 499, 473, 495, 496,
	455, 458, 483, 494, 484, 497, 500, 501, 540, 541,
	542, 487, 502, 493, 492, 485, 474, 503, 504, 459,
	457, 488, 489, 476, 292, 468, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 460,
	0, 0, 284, 238, 0, 0, 0, 0, 514, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	422, 0, 0, 453, 491, 490, 440, 449, 0, 0,
	180, 441, 0, 448, 442, 446, 445, 443, 444, 0,
	506, 0, 0, 0, 0, 0, 0, 413, 426, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 469, 0,
	425, 0, 0, 471, 450, 451, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 447, 467, 472, 192, 528, 465,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 529, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 315, 0, 0, 512, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 466,
	0, 274, 256, 525, 414, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 1152, 1151, 1153, 327, 206, 164, 310, 510,
	252, 0, 524, 505, 507, 508, 511, 515, 516, 517,
	518, 519, 521, 523, 527, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 470, 242, 243, 244, 245, 513,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 535, 509,
	534, 536, 537, 533, 538, 539, 520, 432, 0, 475,
	531, 530, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 498, 479, 480, 481, 431, 482, 477, 478,
	499, 473, 495, 496, 455, 458, 483, 494, 484, 497,
	500, 501, 540, 541, 542, 487, 502, 493, 492, 485,
	474, 503, 504, 459, 457, 488, 489, 476, 292, 468,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 460, 0, 0, 284, 238, 0, 0,
	0, 0, 514, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 0, 0, 453, 491, 490,
	440, 449, 0, 0, 180, 441, 0, 448, 442, 446,
	445, 443, 444, 0, 506, 0, 0, 0, 0, 0,
	0, 413, 426, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 469, 0, 425, 0, 0, 471, 450, 451,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 447, 467,
	472, 192, 528, 465, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 529,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 315,
	0, 0, 512, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 466, 0, 274, 256, 525, 414, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 510, 252, 0, 524, 505, 507, 508,
	511, 515, 516, 517, 518, 519, 521, 523, 527, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 2370, 0, 0, 0, 2371, 0, 526, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 470, 242,
	243, 244, 245, 513, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 535, 509, 534, 536, 537, 533, 538, 539,
	520, 432, 0, 475, 531, 530, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 498, 479, 480, 481,
	431, 482, 477, 478, 499, 473, 495, 496, 455, 458,
	483, 494, 484, 497, 500, 501, 540, 541, 542, 487,
	502, 493, 492, 485, 474, 503, 504, 459, 457, 488,
	489, 476, 292, 468, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 0, 0,
	199, 1213, 0, 224, 0, 0, 0, 460, 0, 0,
	284, 238, 0, 0, 0, 0, 514, 522, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 422, 0,
	0, 453, 491, 490, 440, 449, 0, 0, 180, 441,
	0, 448, 442, 446, 445, 443, 444, 0, 506, 0,
	0, 0, 0, 0, 0, 413, 426, 0, 430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 469, 0, 425, 0,
	0, 1295, 450, 451, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 447, 467, 472, 192, 528, 465, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 529, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 315, 0, 0, 512, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 466, 0, 274,
	256, 525, 414, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 510, 252, 0,
	524, 505, 507, 508, 511, 515, 516, 517, 518, 519,
	521, 523, 527, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 470, 242, 243, 244, 245, 513, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 535, 509, 534, 536,
	537, 533, 538, 539, 520, 432, 0, 475, 531, 530,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	498, 479, 480, 481, 431, 482, 477, 478, 499, 473,
	495, 496, 455, 458, 483, 494, 484, 497, 500, 501,
	540, 541, 542, 487, 502, 493, 492, 485, 474, 503,
	504, 459, 457, 488, 489, 476, 117, 292, 468, 323,
	324, 325, 309, 0, 196, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 429, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 460, 0, 0, 284, 238, 0, 0, 0,
	0, 514, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 422, 0, 0, 453, 491, 490, 440,
	449, 0, 0, 180, 441, 0, 448, 442, 446, 445,
	443, 444, 0, 506, 0, 0, 0, 0, 0, 0,
	413, 426, 0, 430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 469, 0, 425, 0, 0, 471, 450, 451, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 447, 467, 472,
	192, 528, 465, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 529, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 0, 0, 315, 0,
	0, 512, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 466, 0, 274, 256, 525, 414, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 510, 252, 0, 524, 505, 507, 508, 511,
	515, 516, 517, 518, 519, 521, 523, 527, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 470, 242, 243,
	244, 245, 513, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 535, 509, 534, 536, 537, 533, 538, 539, 520,
	432, 0, 475, 531, 530, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 90, 266, 204, 498, 479, 480, 481, 431,
	482, 477, 478, 499, 473, 495, 496, 455, 458, 483,
	494, 484, 497, 500, 501, 540, 541, 542, 487, 502,
	493, 492, 485, 474, 503, 504, 459, 457, 488, 489,
	476, 292, 468, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 429, 0, 0, 0, 199,
	2599, 0, 224, 0, 0, 0, 460, 0, 0, 284,
	238, 0, 0, 0, 0, 514, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 422, 0, 0,
	453, 491, 490, 440, 449, 0, 0, 180, 441, 0,
	448, 442, 446, 445, 443, 444, 0, 506, 0, 0,
	0, 0, 0, 0, 413, 426, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 469, 0, 425, 0, 0,
	471, 450, 451, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 447, 467, 472, 192, 528, 465, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 529, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 315, 0, 0, 512, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 466, 0, 274, 256,
	525, 414, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 510, 252, 0, 524,
	505, 507, 508, 511, 515, 516, 517, 518, 519, 521,
	523, 527, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 470, 242, 243, 244, 245, 513, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 535, 509, 534, 536, 537,
	533, 538, 539, 520, 432, 0, 475, 531, 530, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 498,
	479, 480, 481, 431, 482, 477, 478, 499, 473, 495,
	496, 455, 458, 483, 494, 484, 497, 500, 501, 540,
	541, 542, 487, 502, 493, 492, 485, 474, 503, 504,
	459, 457, 488, 489, 476, 292, 468, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 0, 0, 199, 1213, 0, 224, 0, 0, 0,
	460, 0, 0, 284, 238, 0, 0, 0, 0, 514,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 422, 0, 0, 453, 491, 490, 440, 449, 0,
	0, 180, 441, 0, 448, 442, 446, 445, 443, 444,
	0, 506, 0, 0, 0, 0, 0, 0, 413, 426,
	0, 430, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 469,
	0, 425, 0, 0, 471, 450, 451, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 447, 467, 472, 192, 528,
	465, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 529, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 315, 0, 0, 512,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	466, 0, 274, 256, 525, 414, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	510, 252, 0, 524, 505, 507, 508, 511, 515, 516,
	517, 518, 519, 521, 523, 527, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 470, 242, 243, 244, 245,
	513, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 535,
	509, 534, 536, 537, 533, 538, 539, 520, 432, 0,
	475, 531, 530, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 498, 479, 480, 481, 431, 482, 477,
	478, 499, 473, 495, 496, 455, 458, 483, 494, 484,
	497, 500, 501, 540, 541, 542, 487, 502, 493, 492,
	485, 474, 503, 504, 459, 457, 488, 489, 476, 292,
	468, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 460, 0, 0, 284, 238, 0,
	0, 0, 0, 514, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 422, 0, 0, 453, 491,
	490, 440, 449, 0, 0, 180, 441, 0, 448, 442,
	446, 445, 443, 444, 0, 506, 0, 0, 0, 0,
	0, 0, 413, 426, 0, 430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 991,
	0, 0, 0, 469, 0, 425, 0, 0, 471, 450,
	451, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 447,
	467, 472, 192, 528, 465, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	529, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 0, 0,
	315, 0, 0, 512, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 466, 0, 274, 256, 525, 414,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 510, 252, 0, 524, 505, 507,
	508, 511, 515, 516, 517, 518, 519, 521, 523, 527,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 470,
	242, 243, 244, 245, 513, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 535, 509, 534, 536, 537, 533, 538,
	539, 520, 432, 0, 475, 531, 530, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 498, 479, 480,
	481, 431, 482, 477, 478, 499, 473, 495, 496, 455,
	458, 483, 494, 484, 497, 500, 501, 540, 541, 542,
	487, 502, 493, 492, 485, 474, 503, 504, 459, 457,
	488, 489, 476, 0, 0, 0, 323, 324, 325, 309,
	0, 196, 292, 468, 0, 0, 1583, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 429, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 460, 0, 0,
	284, 238, 0, 0, 0, 0, 514, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 422, 0,
	0, 453, 491, 490, 440, 449, 0, 0, 180, 441,
	0, 448, 442, 446, 445, 443, 444, 0, 506, 0,
	0, 0, 0, 0, 0, 413, 426, 0, 430, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 469, 0, 425, 0,
	0, 471, 450, 451, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 447, 467, 472, 192, 528, 465, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 529, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 0, 0, 315, 0, 0, 512, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 466, 0, 274,
	256, 525, 414, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 510, 252, 0,
	524, 505, 507, 508, 511, 515, 516, 517, 518, 519,
	521, 523, 527, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 470, 242, 243, 244, 245, 513, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 535, 509, 534, 536,
	537, 533, 538, 539, 520, 432, 0, 475, 531, 530,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	498, 479, 480, 481, 431, 482, 477, 478, 499, 473,
	495, 496, 455, 458, 483, 494, 484, 497, 500, 501,
	540, 541, 542, 487, 502, 493, 492, 485, 474, 503,
	504, 459, 457, 488, 489, 476, 292, 468, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 460, 0, 0, 284, 238, 0, 0, 0, 0,
	514, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 422, 0, 0, 453, 491, 490, 440, 449,
	0, 0, 180, 441, 0, 448, 442, 446, 445, 443,
	444, 0, 506, 0, 0, 0, 0, 0, 0, 413,
	426, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	469, 0, 425, 0, 0, 471, 450, 451, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 447, 467, 472, 192,
	528, 465, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 529, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 315, 0, 0,
	512, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 466, 0, 274, 256, 525, 414, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 510, 252, 0, 524, 505, 507, 508, 511, 515,
	516, 517, 518, 519, 521, 523, 527, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 470, 242, 243, 244,
	245, 513, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	535, 509, 534, 536, 537, 533, 538, 539, 520, 432,
	0, 475, 531, 530, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 498, 479, 480, 481, 431, 482,
	477, 478, 499, 473, 495, 496, 455, 458, 483, 494,
	484, 497, 500, 501, 540, 541, 542, 487, 502, 493,
	492, 485, 474, 503, 504, 459, 457, 488, 489, 476,
	292, 468, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	1075, 0, 0, 0, 429, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 460, 0, 0, 284, 238,
	0, 0, 0, 0, 514, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 422, 0, 0, 453,
	491, 490, 440, 449, 0, 0, 180, 441, 0, 448,
	442, 446, 445, 443, 444, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 469, 0, 425, 0, 0, 471,
	450, 451, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	447, 467, 472, 192, 528, 465, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 529, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 315, 0, 0, 512, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 466, 0, 274, 256, 525,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 1076, 1077, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 510, 252, 0, 524, 505,
	507, 508, 511, 515, 516, 517, 518, 519, 521, 523,
	527, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	470, 242, 243, 244, 245, 513, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 535, 509, 534, 536, 537, 533,
	538, 539, 520, 432, 0, 475, 531, 530, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 498, 479,
	480, 481, 431, 482, 477, 478, 499, 473, 495, 496,
	455, 458, 483, 494, 484, 497, 500, 501, 540, 541,
	542, 487, 502, 493, 492, 485, 474, 503, 504, 459,
	457, 488, 489, 476, 292, 468, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 429, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 460,
	0, 0, 284, 238, 0, 0, 0, 0, 514, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 491, 490, 440, 449, 0, 0,
	180, 441, 0, 448, 442, 446, 445, 443, 444, 0,
	506, 0, 0, 0, 0, 0, 0, 413, 426, 0,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 469, 0,
	425, 0, 0, 471, 450, 451, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 447, 467, 472, 192, 528, 465,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 529, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 0, 0, 315, 0, 0, 512, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 466,
	0, 274, 256, 525, 414, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 510,
	252, 0, 524, 505, 507, 508, 511, 515, 516, 517,
	518, 519, 521, 523, 527, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 470, 242, 243, 244, 245, 513,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 535, 509,
	534, 536, 537, 533, 538, 539, 520, 432, 0, 475,
	531, 530, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 498, 479, 480, 481, 431, 482, 477, 478,
	499, 473, 495, 496, 455, 458, 483, 494, 484, 497,
	500, 501, 540, 541, 542, 487, 502, 493, 492, 485,
	474, 503, 504, 459, 457, 488, 489, 476, 292, 468,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 429, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 460, 0, 0, 284, 238, 0, 0,
	0, 0, 514, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 422, 0, 0, 453, 491, 490,
	440, 449, 0, 0, 180, 441, 0, 448, 442, 446,
	445, 443, 444, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 426, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 469, 0, 425, 0, 0, 471, 450, 451,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 447, 467,
	472, 192, 528, 465, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 529,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 0, 0, 315,
	0, 0, 512, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 466, 0, 274, 256, 525, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 510, 252, 0, 524, 505, 507, 508,
	511, 515, 516, 517, 518, 519, 521, 523, 527, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 470, 242,
	243, 244, 245, 513, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 535, 509, 534, 536, 537, 533, 538, 539,
	520, 432, 0, 475, 531, 530, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 498, 479, 480, 481,
	431, 482, 477, 478, 499, 473, 495, 496, 455, 458,
	483, 494, 484, 497, 500, 501, 540, 541, 542, 487,
	502, 493, 492, 485, 474, 503, 504, 459, 457, 488,
	489, 476, 0, 0, 0, 323, 324, 325, 309, 0,
	196, 117, 292, 35, 107, 89, 0, 0, 0, 0,
	0, 0, 0, 254, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 268, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 352, 354, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 90, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 2019, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 315, 0, 0,
	0, 2016, 0, 2015, 288, 2017, 2020, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 2021, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 1319, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 741,
	742, 743, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 624, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 632, 633, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 610,
	313, 175, 609, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 622, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 623, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 626, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 634, 629, 630, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 117, 292,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 1340, 0, 124, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 90, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 117, 292, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 1331, 0, 124, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 90,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 632, 633,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 610, 313, 175, 609, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 634, 629, 630,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 631,
=======
const yyLast = 28416

var yyAct = [...]int{
	439, 2634, 1145, 2636, 2642, 2633, 2610, 2475, 419, 2262,
	1061, 421, 2599, 2556, 441, 2512, 2235, 2540, 2442, 2375,
	2446, 2541, 2422, 2181, 2191, 1634, 803, 2260, 1315, 1701,
	466, 2121, 1057, 2430, 973, 2261, 2278, 125, 125, 927,
	552, 1697, 1191, 125, 359, 366, 2179, 366, 364, 29,
	2245, 2020, 128, 2152, 1242, 1872, 2224, 1064, 640, 1244,
	2244, 2016, 1731, 1340, 1303, 1281, 1889, 2133, 1273, 370,
	2140, 913, 2025, 832, 2021, 1765, 1541, 2093, 1910, 2076,
	1845, 2036, 547, 413, 902, 2033, 1696, 1657, 1333, 376,
	2031, 2014, 1806, 583, 672, 1764, 1201, 1968, 1194, 1342,
	1351, 418, 124, 124, 1341, 1354, 1537, 1215, 350, 1923,
	1296, 1536, 1334, 1276, 644, 547, 1685, 3, 1847, 1888,
	2199, 1254, 1656, 1842, 125, 362, 7, 1233, 915, 363,
	18, 1274, 647, 40, 1569, 1538, 838, 454, 84, 1651,
	1223, 422, 420, 995, 1300, 360, 8, 361, 6, 1643,
	1267, 667, 83, 1256, 352, 1055, 642, 1548, 1266, 1109,
	1255, 430, 1095, 666, 1552, 1046, 602, 355, 1622, 29,
	689, 1337, 1319, 1699, 668, 883, 40, 1229, 349, 414,
	1054, 84, 1706, 632, 1232, 1262, 1060, 952, 942, 674,
	582, 549, 965, 1115, 378, 1206, 15, 928, 9, 551,
	1114, 115, 4, 595, 580, 1961, 118, 1961, 994, 1555,
	373, 633, 365, 379, 1767, 1545, 120, 2291, 1732, 2120,
	1219, 2463, 1336, 1144, 550, 804, 2503, 119, 119, 36,
	109, 91, 560, 708, 119, 2253, 954, 119, 665, 1760,
	1752, 119, 348, 36, 109, 91, 7, 119, 1013, 119,
	18, 1542, 2493, 40, 646, 1135, 119, 1006, 84, 368,
	900, 1553, 121, 939, 1010, 940, 8, 742, 6, 645,
	1940, 1833, 119, 1003, 36, 109, 91, 1284, 1285, 741,
	924, 612, 1844, 2529, 116, 1012, 735, 955, 2527, 1000,
	1031, 116, 1933, 546, 1005, 933, 934, 716, 116, 718,
	572, 1258, 1063, 723, 116, 724, 116, 740, 119, 1807,
	36, 109, 91, 116, 2544, 2545, 537, 2276, 536, 538,
	539, 561, 540, 541, 2007, 2464, 2465, 719, 114, 116,
	2287, 2516, 2517, 726, 1843, 103, 652, 651, 653, 2368,
	2371, 2008, 931, 2009, 82, 930, 933, 934, 2279, 2280,
	2281, 2282, 125, 682, 2293, 2122, 1747, 692, 683, 68,
	375, 1297, 681, 1066, 2445, 116, 650, 2105, 366, 2141,
	125, 2502, 1047, 1549, 1051, 1289, 1150, 1042, 728, 2047,
	729, 616, 2258, 746, 747, 748, 745, 2148, 2037, 677,
	679, 712, 2352, 1956, 1680, 1641, 1131, 721, 1050, 1128,
	1619, 1954, 553, 1130, 1127, 1129, 1133, 1134, 731, 1190,
	1189, 1132, 714, 2242, 655, 737, 1850, 680, 1293, 1757,
	90, 574, 117, 2045, 717, 720, 711, 778, 738, 739,
	648, 571, 570, 110, 111, 699, 112, 113, 617, 676,
	107, 2505, 2506, 2543, 692, 2286, 2355, 2255, 713, 922,
	1135, 2288, 565, 367, 722, 2554, 2531, 409, 1065, 2346,
	410, 2384, 2041, 703, 678, 2627, 1052, 2643, 2565, 2526,
	733, 734, 727, 2042, 2043, 1073, 1076, 1077, 2477, 941,
	1554, 1559, 1561, 1562, 2572, 1049, 1074, 649, 2044, 40,
	40, 2621, 2308, 2500, 84, 84, 646, 568, 2444, 2307,
	2339, 90, 108, 117, 412, 66, 732, 2473, 2474, 901,
	2477, 645, 411, 715, 2533, 2534, 563, 2602, 643, 725,
	2483, 107, 102, 101, 685, 686, 694, 693, 42, 730,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1138, 1139, 1140, 1141, 1142, 1143, 1136, 1137, 569,
	1856, 2644, 654, 961, 2039, 2431, 2432, 2433, 2435, 2434,
	946, 960, 776, 926, 925, 1543, 701, 2330, 779, 780,
	781, 782, 1543, 564, 919, 918, 903, 645, 2638, 2611,
	697, 2296, 583, 1543, 2407, 700, 104, 105, 1048, 880,
	2109, 1131, 1960, 783, 1128, 749, 2116, 673, 1130, 1127,
	1129, 1133, 1134, 1570, 777, 374, 1132, 2366, 687, 1912,
	1914, 953, 785, 694, 693, 2504, 812, 933, 934, 932,
	76, 1753, 933, 934, 106, 708, 77, 1858, 1859, 1860,
	1861, 2603, 2650, 790, 929, 547, 547, 547, 573, 1713,
	977, 977, 1546, 1227, 923, 906, 1964, 2334, 1001, 904,
	905, 1959, 907, 908, 1556, 369, 366, 998, 998, 1298,
	2048, 1544, 2532, 2038, 37, 1557, 2029, 1970, 1969, 2353,
	1957, 910, 975, 975, 1916, 979, 1008, 2443, 1710, 78,
	1849, 2254, 981, 92, 92, 1761, 2466, 2467, 79, 35,
	92, 888, 743, 92, 1075, 37, 1029, 92, 2259, 2637,
	1560, 814, 815, 92, 707, 92, 1024, 1025, 977, 958,
	977, 682, 92, 1287, 1290, 1288, 1043, 1014, 1709, 920,
	1062, 1004, 658, 663, 664, 1011, 936, 937, 92, 2040,
	1286, 37, 1853, 1854, 702, 619, 1138, 1139, 1140, 1141,
	1142, 1143, 1136, 1137, 2584, 1038, 1852, 577, 578, 579,
	885, 643, 1712, 1711, 2600, 2601, 620, 1292, 956, 957,
	887, 551, 1913, 1044, 92, 943, 744, 943, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1645, 983, 1694, 1104, 1105, 349, 912, 2332, 2030, 1113,
	2656, 2331, 2655, 613, 1028, 947, 2649, 613, 2057, 1160,
	935, 1067, 1027, 938, 2408, 2410, 2411, 2412, 2409, 1166,
	84, 80, 81, 85, 84, 2646, 1059, 554, 1733, 1168,
	40, 1172, 1173, 1740, 708, 84, 1037, 950, 951, 40,
	971, 972, 547, 706, 84, 1864, 997, 997, 2628, 2302,
	1040, 959, 1034, 2623, 1033, 2614, 968, 969, 970, 348,
	982, 2335, 2336, 1078, 1015, 1020, 744, 2613, 744, 986,
	987, 988, 989, 990, 991, 992, 999, 1871, 993, 1735,
	1870, 2588, 615, 2128, 1644, 614, 615, 1016, 2558, 614,
	1212, 2647, 1245, 623, 1197, 1198, 1695, 1245, 660, 661,
	662, 551, 2551, 1036, 1056, 1035, 2026, 2029, 1159, 1032,
	1632, 1053, 1205, 1230, 1551, 977, 1628, 1752, 1237, 2624,
	1597, 1551, 583, 1596, 1722, 1243, 1103, 1322, 977, 1045,
	1213, 1695, 1058, 1551, 1068, 1069, 1070, 1071, 1072, 1722,
	622, 705, 881, 1097, 625, 624, 1236, 1551, 2546, 1196,
	1263, 1263, 944, 1268, 2559, 2535, 1542, 1216, 1268, 2521,
	1633, 1230, 977, 1283, 1203, 1204, 1579, 1865, 2357, 1601,
	1533, 2498, 1261, 547, 911, 977, 1111, 1112, 746, 747,
	748, 745, 1147, 746, 747, 748, 745, 1154, 2497, 744,
	1250, 746, 747, 748, 745, 1228, 2496, 1230, 977, 1871,
	1314, 125, 125, 1238, 1148, 1235, 1259, 1260, 1324, 2495,
	1695, 706, 125, 1107, 2357, 2073, 1160, 1160, 1344, 2485,
	1170, 1722, 1631, 1160, 1160, 2522, 1146, 1989, 1149, 2030,
	1317, 2363, 667, 1161, 2023, 1578, 1265, 2357, 2024, 2027,
	1330, 962, 2362, 1167, 2356, 1169, 1320, 1907, 708, 2608,
	945, 2560, 1243, 1186, 2357, 668, 977, 1356, 1249, 1829,
	2162, 1294, 2357, 1827, 1252, 1253, 1316, 1316, 1825, 1246,
	675, 1220, 1217, 1823, 1812, 2357, 1221, 1316, 2058, 1224,
	1357, 1299, 1208, 1214, 1211, 2486, 1769, 1348, 1313, 943,
	2028, 1750, 1251, 1744, 1925, 1873, 2147, 2364, 1755, 1742,
	1282, 1234, 1754, 1257, 1737, 1746, 1534, 1239, 1661, 1345,
	2357, 1564, 1240, 1695, 1247, 1339, 1269, 1248, 1677, 1660,
	1567, 1568, 1339, 1629, 761, 1830, 1307, 1308, 2062, 1828,
	1604, 1603, 1593, 1951, 1824, 1580, 1264, 1532, 1270, 1824,
	744, 1327, 1017, 879, 585, 1272, 1271, 788, 1234, 695,
	675, 1309, 744, 646, 944, 1217, 1295, 1661, 916, 1738,
	646, 1217, 1217, 1550, 40, 1743, 1318, 1310, 645, 84,
	1738, 1304, 1305, 1306, 1311, 645, 966, 1021, 1312, 1708,
	1152, 1151, 1328, 1153, 1056, 1661, 1953, 967, 575, 1628,
	1608, 2597, 2585, 1540, 1346, 964, 744, 744, 1784, 1530,
	1349, 1355, 1350, 1531, 1171, 613, 1102, 1174, 1175, 1176,
	1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 621, 1110,
	1535, 1100, 1101, 1099, 878, 875, 876, 877, 1846, 1551,
	1789, 2219, 1788, 1787, 1785, 2487, 2074, 1952, 125, 125,
	1962, 1741, 1558, 1022, 1539, 675, 776, 1715, 684, 125,
	1658, 1563, 945, 1566, 746, 747, 748, 745, 1775, 1268,
	2520, 645, 1668, 1777, 1110, 1653, 1575, 1840, 359, 1231,
	1178, 1097, 1565, 748, 745, 963, 1268, 745, 1574, 1982,
	746, 747, 748, 745, 615, 2342, 2341, 614, 2137, 2132,
	1929, 1283, 2635, 2325, 1786, 667, 2632, 1572, 618, 2418,
	1576, 2617, 2201, 1637, 1639, 762, 763, 764, 765, 766,
	767, 768, 761, 2620, 1654, 2416, 1164, 2414, 668, 1666,
	977, 600, 1669, 1670, 1981, 2404, 1165, 1667, 586, 2256,
	2582, 998, 626, 1283, 2648, 2566, 1726, 2417, 1728, 2032,
	1586, 1702, 1702, 1587, 1702, 1591, 746, 747, 748, 745,
	2455, 2553, 1720, 2415, 605, 2413, 2619, 2227, 2424, 1705,
	2402, 1602, 1589, 2403, 1605, 1606, 1607, 2257, 1652, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1703, 1617, 1707, 1624,
	2145, 2237, 764, 765, 766, 767, 768, 761, 1673, 1723,
	1675, 2401, 2400, 1671, 2230, 1635, 1636, 2397, 1730, 2391,
	2225, 1725, 1646, 2388, 2387, 2240, 2241, 2144, 2046, 2005,
	2004, 2226, 1790, 1791, 1947, 1588, 1927, 1665, 2146, 1627,
	1626, 1625, 1674, 1621, 1620, 1676, 1678, 1018, 1704, 1672,
	584, 1681, 1257, 898, 2537, 1662, 2205, 746, 747, 748,
	745, 587, 608, 645, 2423, 409, 2231, 2209, 410, 746,
	747, 748, 745, 2192, 2518, 812, 669, 670, 671, 1716,
	1717, 1718, 1800, 2481, 2480, 603, 2405, 2198, 2398, 2394,
	1282, 2200, 2202, 2204, 1724, 2206, 2207, 2208, 2210, 2211,
	2212, 2214, 2215, 2216, 2217, 752, 753, 754, 755, 756,
	757, 758, 750, 2393, 1217, 1217, 1217, 604, 609, 759,
	769, 770, 762, 763, 764, 765, 766, 767, 768, 761,
	997, 2392, 2354, 2327, 597, 2220, 599, 612, 2292, 2190,
	2625, 596, 594, 593, 2538, 598, 588, 589, 2188, 610,
	611, 2155, 2143, 2239, 2142, 2022, 2139, 746, 747, 748,
	745, 606, 607, 1748, 2108, 1766, 746, 747, 748, 745,
	2218, 2449, 2003, 977, 1958, 977, 2645, 977, 1577, 1928,
	2233, 1919, 682, 493, 492, 2488, 1630, 2197, 1623, 1329,
	2351, 1762, 1226, 746, 747, 748, 745, 2184, 601, 1019,
	813, 808, 2232, 2234, 807, 789, 2050, 1758, 2183, 2374,
	977, 1793, 746, 747, 748, 745, 2213, 2156, 2127, 746,
	747, 748, 745, 2203, 1801, 2118, 2117, 2100, 977, 2092,
	746, 747, 748, 745, 746, 747, 748, 745, 1803, 2091,
	2063, 1987, 975, 1583, 1792, 760, 759, 769, 770, 762,
	763, 764, 765, 766, 767, 768, 761, 1980, 1972, 1967,
	975, 1826, 1802, 1822, 1599, 1821, 1609, 2242, 1600, 1598,
	1595, 2112, 1594, 119, 1592, 977, 109, 91, 1585, 2228,
	1582, 1779, 1581, 1163, 1162, 2238, 1869, 1985, 1759, 984,
	2596, 2590, 1875, 746, 747, 748, 745, 2573, 119, 2570,
	2568, 1751, 805, 1773, 2454, 1749, 2440, 2428, 1884, 746,
	747, 748, 745, 682, 1283, 1283, 1283, 1283, 746, 747,
	748, 745, 1890, 1831, 1984, 682, 1283, 1808, 1756, 2425,
	116, 1770, 1813, 2420, 1890, 2380, 1193, 2349, 29, 1839,
	1983, 1863, 2348, 1772, 977, 1783, 746, 747, 748, 745,
	2347, 1867, 125, 125, 1820, 116, 2344, 1878, 2338, 1056,
	2323, 1880, 746, 747, 748, 745, 914, 2172, 2170, 1160,
	1906, 1160, 2150, 2138, 1939, 1991, 746, 747, 748, 745,
	1202, 1702, 1195, 977, 1876, 1776, 1866, 1841, 1736, 1714,
	1659, 1886, 1098, 1794, 1795, 116, 1207, 1210, 1905, 1798,
	1799, 1652, 1855, 1200, 1836, 1199, 1945, 1874, 1868, 1041,
	1007, 1804, 882, 830, 829, 7, 1934, 1921, 1922, 18,
	1862, 828, 40, 1941, 1877, 827, 826, 84, 1883, 1946,
	1887, 1216, 1881, 1885, 1882, 8, 1938, 6, 1217, 1904,
	1902, 1834, 1835, 1224, 1903, 1891, 1892, 1893, 1894, 551,
	825, 1282, 1282, 1282, 1282, 1917, 1920, 1973, 1936, 1879,
	1975, 1234, 1977, 1282, 1942, 824, 1955, 823, 1935, 822,
	1926, 821, 682, 1950, 1932, 1937, 2035, 1943, 1930, 820,
	819, 2019, 1944, 555, 556, 557, 558, 818, 125, 1949,
	817, 816, 811, 1963, 810, 809, 554, 682, 1819, 806,
	802, 1283, 1658, 1965, 2061, 84, 2019, 801, 799, 1971,
	2065, 798, 84, 797, 1974, 1976, 796, 2035, 1978, 1979,
	746, 747, 748, 745, 2083, 1818, 795, 794, 1990, 793,
	792, 791, 1992, 1993, 1994, 1995, 1817, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2345, 985, 1217, 746, 747, 748,
	745, 1217, 787, 2051, 786, 710, 1793, 1816, 746, 747,
	748, 745, 1915, 2077, 2078, 1664, 1648, 2064, 698, 2059,
	2082, 2066, 2067, 2578, 2052, 2053, 2054, 2576, 2072, 746,
	747, 748, 745, 2542, 2080, 1857, 1721, 1966, 2055, 2060,
	125, 1332, 2056, 2084, 709, 125, 1899, 1896, 1895, 2071,
	1897, 1900, 2070, 2081, 2631, 1898, 2069, 2010, 2011, 1901,
	1986, 1691, 1692, 1745, 1739, 2088, 2089, 2090, 2085, 1838,
	1653, 2098, 2618, 769, 770, 762, 763, 764, 765, 766,
	767, 768, 761, 1187, 2097, 1734, 1635, 1636, 1282, 1815,
	67, 1768, 2068, 1763, 125, 2594, 2175, 884, 2174, 39,
	2013, 1642, 2101, 2131, 704, 2106, 2294, 2104, 2012, 2102,
	2110, 746, 747, 748, 745, 38, 1241, 2107, 2103, 760,
	759, 769, 770, 762, 763, 764, 765, 766, 767, 768,
	761, 345, 2173, 977, 977, 1152, 1151, 2509, 1283, 2159,
	346, 2125, 760, 759, 769, 770, 762, 763, 764, 765,
	766, 767, 768, 761, 682, 949, 347, 122, 948, 2126,
	1814, 896, 897, 1890, 736, 975, 2153, 2151, 894, 895,
	892, 893, 2087, 2129, 2136, 2130, 1529, 2134, 2177, 2134,
	1160, 917, 746, 747, 748, 745, 890, 891, 886, 1702,
	2135, 2591, 2471, 2166, 2459, 344, 2457, 2161, 2385, 2160,
	2381, 2373, 1811, 2372, 2370, 2163, 2158, 2274, 2164, 682,
	554, 2196, 2273, 2246, 2248, 2189, 2246, 2246, 2019, 2168,
	2167, 2165, 1810, 2157, 746, 747, 748, 745, 2186, 2124,
	84, 682, 1809, 2123, 2095, 2185, 1924, 2182, 889, 2094,
	1245, 1948, 2111, 2178, 746, 747, 748, 745, 1584, 2113,
	2579, 1243, 696, 2271, 746, 747, 748, 745, 1805, 2580,
	2579, 2243, 2187, 2580, 2247, 1797, 2340, 2099, 921, 2289,
	2221, 46, 1, 1225, 559, 1282, 2249, 2250, 2193, 2298,
	746, 747, 748, 745, 1796, 1331, 2268, 746, 747, 748,
	745, 1908, 1909, 2086, 2265, 2161, 1774, 2266, 2267, 1911,
	1547, 1679, 2251, 1106, 1640, 2269, 746, 747, 748, 745,
	2049, 909, 977, 576, 1155, 899, 2326, 1026, 746, 747,
	748, 745, 1682, 125, 657, 746, 747, 748, 745, 691,
	1023, 690, 2248, 688, 1217, 1108, 456, 2169, 2301, 1335,
	2171, 2421, 2270, 2508, 2153, 1687, 1690, 1691, 1692, 1688,
	2555, 1689, 1693, 2453, 2176, 2243, 2511, 1039, 2299, 2300,
	2324, 2303, 2304, 2305, 2306, 2328, 440, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2386, 2350, 2365, 2006, 2358, 2275, 2361, 2343, 772,
	2367, 775, 2360, 2277, 2369, 1832, 2180, 1931, 2252, 591,
	488, 464, 2419, 800, 1009, 1002, 773, 774, 771, 659,
	760, 759, 769, 770, 762, 763, 764, 765, 766, 767,
	768, 761, 463, 2382, 2149, 682, 1851, 562, 682, 682,
	682, 656, 592, 2399, 555, 556, 557, 558, 682, 1618,
	2592, 2119, 1188, 1209, 1702, 2451, 1192, 554, 2641, 2630,
	2609, 2426, 2429, 2589, 2476, 2437, 2438, 2439, 2626, 2525,
	2436, 2469, 2389, 2390, 2448, 2571, 2285, 2283, 2395, 2396,
	977, 977, 2284, 2447, 2564, 2458, 2462, 2460, 2461, 2456,
	2472, 2450, 2383, 2295, 380, 1291, 2470, 760, 759, 769,
	770, 762, 763, 764, 765, 766, 767, 768, 761, 545,
	630, 125, 975, 975, 2478, 2479, 2441, 381, 1663, 682,
	2501, 2427, 84, 1687, 1690, 1691, 1692, 1688, 566, 1689,
	1693, 682, 1647, 2359, 567, 1650, 1649, 1079, 751, 2484,
	1096, 2114, 2115, 2490, 784, 2515, 2494, 417, 1573, 429,
	423, 1848, 2236, 1918, 45, 2379, 44, 43, 2499, 2514,
	1323, 1352, 682, 458, 127, 2507, 1353, 2468, 2290, 2513,
	438, 2523, 437, 436, 2519, 435, 1316, 1686, 1684, 1683,
	1278, 1277, 1321, 2539, 1988, 2491, 2492, 2528, 2530, 2337,
	2406, 2333, 2329, 2482, 2195, 2194, 2222, 2223, 2229, 2536,
	837, 833, 835, 836, 834, 1782, 2547, 2548, 2549, 2550,
	1778, 2557, 2017, 2562, 2018, 682, 2015, 2079, 2075, 1343,
	1222, 1837, 1279, 1275, 1062, 2563, 2567, 2264, 2569, 548,
	2561, 760, 759, 769, 770, 762, 763, 764, 765, 766,
	767, 768, 761, 30, 5, 28, 2379, 2574, 27, 2577,
	2515, 2587, 2575, 26, 14, 13, 1030, 12, 2581, 682,
	17, 682, 25, 24, 2514, 2586, 23, 22, 1062, 2593,
	1062, 2595, 2598, 2552, 2583, 75, 74, 73, 1771, 72,
	21, 11, 71, 2604, 70, 69, 2557, 682, 2605, 2612,
	20, 19, 64, 65, 56, 2489, 1062, 2616, 55, 2622,
	760, 759, 769, 770, 762, 763, 764, 765, 766, 767,
	768, 761, 54, 63, 62, 61, 590, 53, 52, 51,
	50, 2629, 60, 59, 58, 57, 49, 48, 2640, 47,
	2639, 89, 88, 87, 86, 31, 32, 33, 2651, 34,
	2653, 99, 2652, 2654, 1468, 1510, 98, 2640, 1457, 294,
	1415, 1470, 1388, 1404, 1478, 1405, 1406, 1443, 1367, 1425,
	256, 1402, 100, 96, 94, 97, 95, 93, 1460, 1359,
	1391, 1392, 1361, 1398, 1362, 1389, 1417, 201, 1387, 1428,
	226, 1440, 1401, 1422, 1476, 41, 10, 286, 240, 16,
	2379, 1420, 1462, 1423, 1448, 1414, 1444, 1375, 1436, 1471,
	1403, 2, 1441, 1472, 0, 0, 0, 0, 669, 670,
	671, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 1439, 1466, 1400, 0, 185, 1469, 1421, 1442, 0,
	0, 1360, 1437, 0, 1365, 1368, 1477, 1464, 1395, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1424,
	1445, 1411, 0, 0, 0, 2607, 0, 0, 0, 0,
	0, 1393, 0, 1433, 0, 0, 0, 1370, 1366, 0,
	1416, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 1509, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 1369, 315, 177, 1504, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 1488,
	1489, 1490, 1491, 1492, 343, 1500, 1501, 0, 1505, 1506,
	1507, 1374, 0, 1394, 1446, 0, 1358, 1455, 1463, 1413,
	317, 1465, 1410, 1409, 1495, 0, 1494, 290, 1496, 1497,
	225, 1461, 1390, 1399, 333, 1397, 276, 258, 1467, 1432,
	1508, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	1493, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 1502, 0, 1503,
	329, 208, 166, 312, 0, 254, 0, 1458, 1363, 1373,
	1371, 1407, 1434, 1435, 250, 328, 1450, 1454, 1451, 1479,
	279, 0, 0, 0, 0, 0, 219, 260, 1452, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 0, 287, 310, 322, 339, 342, 1511, 1512, 1513,
	170, 341, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 313,
	1408, 1381, 1419, 321, 1384, 1382, 1449, 1383, 1438, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 1429,
	1412, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1430, 1522,
	1523, 1524, 1525, 1526, 1386, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 1456, 1527, 1528, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 1571, 0, 1380, 1385, 1379, 1426, 1427, 1473, 1474,
	1475, 1447, 1372, 1459, 0, 1376, 1378, 1377, 0, 0,
	0, 0, 0, 760, 759, 769, 770, 762, 763, 764,
	765, 766, 767, 768, 761, 0, 0, 1453, 294, 470,
	1431, 167, 0, 227, 1480, 268, 206, 0, 0, 256,
	760, 759, 769, 770, 762, 763, 764, 765, 766, 767,
	768, 761, 431, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 462, 0, 0, 286, 240, 0, 0,
	0, 0, 516, 524, 1498, 1499, 325, 326, 327, 311,
	0, 198, 1521, 0, 424, 0, 0, 455, 493, 492,
	442, 451, 0, 0, 182, 443, 0, 450, 444, 448,
	447, 445, 446, 0, 508, 0, 0, 0, 0, 0,
	0, 415, 428, 2376, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 0, 0,
	0, 0, 471, 0, 427, 0, 0, 473, 452, 453,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 449, 469,
	474, 194, 530, 467, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 531,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 317,
	0, 0, 514, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 468, 0, 276, 258, 527, 416, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 512, 254, 0, 526, 507, 509, 510,
	513, 517, 518, 519, 520, 521, 523, 525, 529, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 2377, 0, 0, 0, 2378, 0, 528, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 472, 244,
	245, 246, 247, 515, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 537, 511, 536, 538, 539, 535, 540, 541,
	522, 434, 0, 477, 533, 532, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 500, 481, 482, 483,
	433, 484, 479, 480, 501, 475, 497, 498, 457, 460,
	485, 496, 486, 499, 502, 503, 542, 543, 544, 489,
	504, 495, 494, 487, 476, 505, 506, 461, 459, 490,
	491, 478, 294, 470, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 516, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 455, 493, 492, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 508, 0,
	0, 0, 0, 0, 0, 415, 428, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 530, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 531, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 514, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 527, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	1157, 1156, 1158, 329, 208, 166, 312, 512, 254, 0,
	526, 507, 509, 510, 513, 517, 518, 519, 520, 521,
	523, 525, 529, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 515, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 537, 511, 536, 538,
	539, 535, 540, 541, 522, 434, 0, 477, 533, 532,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	500, 481, 482, 483, 433, 484, 479, 480, 501, 475,
	497, 498, 457, 460, 485, 496, 486, 499, 502, 503,
	542, 543, 544, 489, 504, 495, 494, 487, 476, 505,
	506, 461, 459, 490, 491, 478, 294, 470, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 462, 0, 0, 286, 240, 0, 0, 0, 0,
	516, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 455, 493, 492, 442, 451,
	0, 0, 182, 443, 0, 450, 444, 448, 447, 445,
	446, 0, 508, 0, 0, 0, 0, 0, 0, 415,
	428, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 0, 0, 0, 0,
	471, 0, 427, 0, 0, 473, 452, 453, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 449, 469, 474, 194,
	530, 467, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 531, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 317, 0, 0,
	514, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 468, 0, 276, 258, 527, 416, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 512, 254, 0, 526, 507, 509, 510, 513, 517,
	518, 519, 520, 521, 523, 525, 529, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	2377, 0, 0, 0, 2378, 0, 528, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 472, 244, 245, 246,
	247, 515, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	537, 511, 536, 538, 539, 535, 540, 541, 522, 434,
	0, 477, 533, 532, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 500, 481, 482, 483, 433, 484,
	479, 480, 501, 475, 497, 498, 457, 460, 485, 496,
	486, 499, 502, 503, 542, 543, 544, 489, 504, 495,
	494, 487, 476, 505, 506, 461, 459, 490, 491, 478,
	294, 470, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 0, 0, 201, 1218,
	0, 226, 0, 0, 0, 462, 0, 0, 286, 240,
	0, 0, 0, 0, 516, 524, 0, 0, 0, 0,
	0, 0, 0, 1301, 0, 0, 424, 0, 0, 455,
	493, 492, 442, 451, 0, 0, 182, 443, 0, 450,
	444, 448, 447, 445, 446, 0, 508, 0, 0, 0,
	0, 0, 0, 415, 428, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	0, 0, 0, 0, 471, 0, 427, 0, 0, 1302,
	452, 453, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	449, 469, 474, 194, 530, 467, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 531, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 317, 0, 0, 514, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 468, 0, 276, 258, 527,
	416, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 512, 254, 0, 526, 507,
	509, 510, 513, 517, 518, 519, 520, 521, 523, 525,
	529, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	472, 244, 245, 246, 247, 515, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 537, 511, 536, 538, 539, 535,
	540, 541, 522, 434, 0, 477, 533, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 500, 481,
	482, 483, 433, 484, 479, 480, 501, 475, 497, 498,
	457, 460, 485, 496, 486, 499, 502, 503, 542, 543,
	544, 489, 504, 495, 494, 487, 476, 505, 506, 461,
	459, 490, 491, 478, 119, 294, 470, 325, 326, 327,
	311, 0, 198, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	462, 0, 0, 286, 240, 0, 0, 0, 0, 516,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 455, 493, 492, 442, 451, 0,
	0, 182, 443, 0, 450, 444, 448, 447, 445, 446,
	0, 508, 0, 0, 0, 0, 0, 0, 415, 428,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 425, 426, 0, 0, 0, 0, 471,
	0, 427, 0, 0, 473, 452, 453, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 449, 469, 474, 194, 530,
	467, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 531, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 317, 0, 0, 514,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	468, 0, 276, 258, 527, 416, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	512, 254, 0, 526, 507, 509, 510, 513, 517, 518,
	519, 520, 521, 523, 525, 529, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 472, 244, 245, 246, 247,
	515, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 537,
	511, 536, 538, 539, 535, 540, 541, 522, 434, 0,
	477, 533, 532, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	92, 268, 206, 500, 481, 482, 483, 433, 484, 479,
	480, 501, 475, 497, 498, 457, 460, 485, 496, 486,
	499, 502, 503, 542, 543, 544, 489, 504, 495, 494,
	487, 476, 505, 506, 461, 459, 490, 491, 478, 294,
	470, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 0, 0, 201, 2606, 0,
	226, 0, 0, 0, 462, 0, 0, 286, 240, 0,
	0, 0, 0, 516, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 455, 493,
	492, 442, 451, 0, 0, 182, 443, 0, 450, 444,
	448, 447, 445, 446, 0, 508, 0, 0, 0, 0,
	0, 0, 415, 428, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 426, 0,
	0, 0, 0, 471, 0, 427, 0, 0, 473, 452,
	453, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 449,
	469, 474, 194, 530, 467, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	531, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	317, 0, 0, 514, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 468, 0, 276, 258, 527, 416,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 512, 254, 0, 526, 507, 509,
	510, 513, 517, 518, 519, 520, 521, 523, 525, 529,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 472,
	244, 245, 246, 247, 515, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 537, 511, 536, 538, 539, 535, 540,
	541, 522, 434, 0, 477, 533, 532, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 500, 481, 482,
	483, 433, 484, 479, 480, 501, 475, 497, 498, 457,
	460, 485, 496, 486, 499, 502, 503, 542, 543, 544,
	489, 504, 495, 494, 487, 476, 505, 506, 461, 459,
	490, 491, 478, 294, 470, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 201, 1218, 0, 226, 0, 0, 0, 462, 0,
	0, 286, 240, 0, 0, 0, 0, 516, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 455, 493, 492, 442, 451, 0, 0, 182,
	443, 0, 450, 444, 448, 447, 445, 446, 0, 508,
	0, 0, 0, 0, 0, 0, 415, 428, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 426, 0, 0, 0, 0, 471, 0, 427,
	0, 0, 473, 452, 453, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 449, 469, 474, 194, 530, 467, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 531, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 317, 0, 0, 514, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 468, 0,
	276, 258, 527, 416, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 512, 254,
	0, 526, 507, 509, 510, 513, 517, 518, 519, 520,
	521, 523, 525, 529, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 472, 244, 245, 246, 247, 515, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 537, 511, 536,
	538, 539, 535, 540, 541, 522, 434, 0, 477, 533,
	532, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 500, 481, 482, 483, 433, 484, 479, 480, 501,
	475, 497, 498, 457, 460, 485, 496, 486, 499, 502,
	503, 542, 543, 544, 489, 504, 495, 494, 487, 476,
	505, 506, 461, 459, 490, 491, 478, 294, 470, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 462, 0, 0, 286, 240, 0, 0, 0,
	0, 516, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 455, 493, 492, 442,
	451, 0, 0, 182, 443, 0, 450, 444, 448, 447,
	445, 446, 0, 508, 0, 0, 0, 0, 0, 0,
	415, 428, 0, 432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 426, 996, 0, 0,
	0, 471, 0, 427, 0, 0, 473, 452, 453, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 449, 469, 474,
	194, 530, 467, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 531, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 317, 0,
	0, 514, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 468, 0, 276, 258, 527, 416, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 512, 254, 0, 526, 507, 509, 510, 513,
	517, 518, 519, 520, 521, 523, 525, 529, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 472, 244, 245,
	246, 247, 515, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 537, 511, 536, 538, 539, 535, 540, 541, 522,
	434, 0, 477, 533, 532, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 500, 481, 482, 483, 433,
	484, 479, 480, 501, 475, 497, 498, 457, 460, 485,
	496, 486, 499, 502, 503, 542, 543, 544, 489, 504,
	495, 494, 487, 476, 505, 506, 461, 459, 490, 491,
	478, 0, 0, 0, 325, 326, 327, 311, 0, 198,
	294, 470, 0, 0, 1590, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 462, 0, 0, 286, 240,
	0, 0, 0, 0, 516, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 455,
	493, 492, 442, 451, 0, 0, 182, 443, 0, 450,
	444, 448, 447, 445, 446, 0, 508, 0, 0, 0,
	0, 0, 0, 415, 428, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 426,
	0, 0, 0, 0, 471, 0, 427, 0, 0, 473,
	452, 453, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	449, 469, 474, 194, 530, 467, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 531, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 317, 0, 0, 514, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 468, 0, 276, 258, 527,
	416, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 512, 254, 0, 526, 507,
	509, 510, 513, 517, 518, 519, 520, 521, 523, 525,
	529, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	472, 244, 245, 246, 247, 515, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 537, 511, 536, 538, 539, 535,
	540, 541, 522, 434, 0, 477, 533, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 500, 481,
	482, 483, 433, 484, 479, 480, 501, 475, 497, 498,
	457, 460, 485, 496, 486, 499, 502, 503, 542, 543,
	544, 489, 504, 495, 494, 487, 476, 505, 506, 461,
	459, 490, 491, 478, 294, 470, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 462,
	0, 0, 286, 240, 0, 0, 0, 0, 516, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 455, 493, 492, 442, 451, 0, 0,
	182, 443, 0, 450, 444, 448, 447, 445, 446, 0,
	508, 0, 0, 0, 0, 0, 0, 415, 428, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 0, 0, 0, 0, 471, 0,
	427, 0, 0, 473, 452, 453, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 449, 469, 474, 194, 530, 467,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 531, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 317, 0, 0, 514, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 468,
	0, 276, 258, 527, 416, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 512,
	254, 0, 526, 507, 509, 510, 513, 517, 518, 519,
	520, 521, 523, 525, 529, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 472, 244, 245, 246, 247, 515,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 537, 511,
	536, 538, 539, 535, 540, 541, 522, 434, 0, 477,
	533, 532, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 500, 481, 482, 483, 433, 484, 479, 480,
	501, 475, 497, 498, 457, 460, 485, 496, 486, 499,
	502, 503, 542, 543, 544, 489, 504, 495, 494, 487,
	476, 505, 506, 461, 459, 490, 491, 478, 294, 470,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 1080, 0,
	0, 0, 431, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 462, 0, 0, 286, 240, 0, 0,
	0, 0, 516, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 455, 493, 492,
	442, 451, 0, 0, 182, 443, 0, 450, 444, 448,
	447, 445, 446, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 428, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 0, 0,
	0, 0, 471, 0, 427, 0, 0, 473, 452, 453,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 449, 469,
	474, 194, 530, 467, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 531,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 317,
	0, 0, 514, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 468, 0, 276, 258, 527, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	1081, 1082, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 512, 254, 0, 526, 507, 509, 510,
	513, 517, 518, 519, 520, 521, 523, 525, 529, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 528, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 472, 244,
	245, 246, 247, 515, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 537, 511, 536, 538, 539, 535, 540, 541,
	522, 434, 0, 477, 533, 532, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 500, 481, 482, 483,
	433, 484, 479, 480, 501, 475, 497, 498, 457, 460,
	485, 496, 486, 499, 502, 503, 542, 543, 544, 489,
	504, 495, 494, 487, 476, 505, 506, 461, 459, 490,
	491, 478, 294, 470, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 462, 0, 0,
	286, 240, 0, 0, 0, 0, 516, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 493, 492, 442, 451, 0, 0, 182, 443,
	0, 450, 444, 448, 447, 445, 446, 0, 508, 0,
	0, 0, 0, 0, 0, 415, 428, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 426, 0, 0, 0, 0, 471, 0, 427, 0,
	0, 473, 452, 453, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 449, 469, 474, 194, 530, 467, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 531, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 317, 0, 0, 514, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 468, 0, 276,
	258, 527, 416, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 512, 254, 0,
	526, 507, 509, 510, 513, 517, 518, 519, 520, 521,
	523, 525, 529, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 472, 244, 245, 246, 247, 515, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 537, 511, 536, 538,
	539, 535, 540, 541, 522, 434, 0, 477, 533, 532,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	500, 481, 482, 483, 433, 484, 479, 480, 501, 475,
	497, 498, 457, 460, 485, 496, 486, 499, 502, 503,
	542, 543, 544, 489, 504, 495, 494, 487, 476, 505,
	506, 461, 459, 490, 491, 478, 294, 470, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 462, 0, 0, 286, 240, 0, 0, 0, 0,
	516, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 455, 493, 492, 442, 451,
	0, 0, 182, 443, 0, 450, 444, 448, 447, 445,
	446, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	428, 0, 432, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 426, 0, 0, 0, 0,
	471, 0, 427, 0, 0, 473, 452, 453, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 449, 469, 474, 194,
	530, 467, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 531, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 317, 0, 0,
	514, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 468, 0, 276, 258, 527, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 512, 254, 0, 526, 507, 509, 510, 513, 517,
	518, 519, 520, 521, 523, 525, 529, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 472, 244, 245, 246,
	247, 515, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	537, 511, 536, 538, 539, 535, 540, 541, 522, 434,
	0, 477, 533, 532, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 500, 481, 482, 483, 433, 484,
	479, 480, 501, 475, 497, 498, 457, 460, 485, 496,
	486, 499, 502, 503, 542, 543, 544, 489, 504, 495,
	494, 487, 476, 505, 506, 461, 459, 490, 491, 478,
	0, 0, 0, 325, 326, 327, 311, 0, 198, 119,
	294, 36, 109, 91, 0, 0, 0, 0, 0, 0,
	0, 256, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 270,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 354, 356, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 37, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 92, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 294, 0, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 2026, 2029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 0,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 317, 0, 0, 0, 2023,
	0, 2022, 290, 2024, 2027, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 2028, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 294, 0,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	1326, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 746, 747, 748,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 0, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 333, 0, 276, 258, 0, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 328, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 337, 244,
	245, 246, 247, 211, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 629, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 637, 638, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 615, 315, 177,
	614, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 627, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 628, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 631, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 639, 634, 635, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 119, 294, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 1347, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 92, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 119, 294, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 1338,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 92, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 294, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 637, 638, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 615, 315, 177, 614, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 639, 634, 635, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	119, 294, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 92, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 980, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 978, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 976, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 974, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 978, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 976, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 294, 0, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2510, 0, 126, 493, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 978,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 978, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2154, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 1719, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 978, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2615, 0, 126, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 294, 0, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 493, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2524, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2263, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	2452, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 2272, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 294, 0, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 117, 292, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 90, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 975, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 973,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 971, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 292, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	969, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 973, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	971, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2503, 0, 124, 491, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 973, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 971, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 973, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2147, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 1712, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 973,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 292, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2608, 0,
	124, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 491, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2517, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2256,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 2445, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 292, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 2265, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 292, 0, 0, 323, 324, 325, 309,
	0, 196, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 0,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 225, 0, 266,
	204, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 292, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 224, 0,
	0, 0, 0, 0, 0, 284, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 2027,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 289, 305, 181, 280, 318, 186, 287, 176,
	253, 276, 0, 0, 173, 303, 286, 235, 218, 219,
	172, 0, 271, 197, 210, 193, 251, 0, 302, 330,
	192, 321, 0, 313, 175, 0, 312, 250, 299, 304,
	236, 230, 174, 301, 234, 229, 222, 201, 0, 214,
	262, 228, 263, 215, 240, 239, 241, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 223, 0,
	0, 0, 331, 0, 274, 256, 0, 0, 0, 272,
	226, 300, 264, 306, 290, 314, 268, 265, 166, 291,
	195, 237, 177, 179, 191, 198, 200, 202, 203, 246,
	247, 259, 279, 293, 294, 295, 194, 187, 273, 188,
	212, 189, 167, 281, 190, 169, 260, 298, 0, 208,
	269, 233, 170, 232, 261, 297, 296, 178, 322, 328,
	329, 333, 0, 334, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 327, 206,
	164, 310, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 326, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 0, 217, 258, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 308, 320, 337, 340, 0, 0, 0, 168, 339,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 335, 242, 243,
	244, 245, 209, 0, 185, 338, 267, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1280, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 294, 0, 0, 325, 326, 327, 311, 0, 198,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 0, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 227, 0, 268, 206, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 294, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 286, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 2034, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	291, 307, 183, 282, 320, 188, 289, 178, 255, 278,
	0, 0, 175, 305, 288, 237, 220, 221, 174, 0,
	273, 199, 212, 195, 253, 0, 304, 332, 194, 323,
	0, 315, 177, 0, 314, 252, 301, 306, 238, 232,
	176, 303, 236, 231, 224, 203, 0, 216, 264, 230,
	265, 217, 242, 241, 243, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 225, 0, 0, 0,
	333, 0, 276, 258, 0, 0, 0, 274, 228, 302,
	266, 308, 292, 316, 270, 267, 168, 293, 197, 239,
	179, 181, 193, 200, 202, 204, 205, 248, 249, 261,
	281, 295, 296, 297, 196, 189, 275, 190, 214, 191,
	169, 283, 192, 171, 262, 300, 0, 210, 271, 235,
	172, 234, 263, 299, 298, 180, 324, 330, 331, 335,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 338,
	0, 0, 0, 0, 0, 0, 329, 208, 166, 312,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 328, 0, 0, 0, 0, 279, 0, 0, 0,
	0, 0, 219, 260, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 310,
	322, 339, 342, 0, 0, 0, 170, 341, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 337, 244, 245, 246, 247,
	211, 0, 187, 340, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 207, 213, 0, 215, 186, 259, 209, 319,
	222, 0, 0, 0, 251, 218, 284, 223, 229, 272,
	318, 257, 277, 184, 309, 285, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 227,
	0, 268, 206, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 294,
	0, 0, 325, 326, 327, 311, 0, 198, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 286, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 978, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 291, 307, 183, 282, 320, 188,
	289, 178, 255, 278, 0, 0, 175, 305, 288, 237,
	220, 221, 174, 0, 273, 199, 212, 195, 253, 0,
	304, 332, 194, 323, 0, 315, 177, 0, 314, 252,
	301, 306, 238, 232, 176, 303, 236, 231, 224, 203,
	0, 216, 264, 230, 265, 217, 242, 241, 243, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	225, 0, 0, 0, 333, 0, 276, 258, 0, 0,
	0, 274, 228, 302, 266, 308, 292, 316, 270, 267,
	168, 293, 197, 239, 179, 181, 193, 200, 202, 204,
	205, 248, 249, 261, 281, 295, 296, 297, 196, 189,
	275, 190, 214, 191, 169, 283, 192, 171, 262, 300,
	0, 210, 271, 235, 172, 234, 263, 299, 298, 180,
	324, 330, 331, 335, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	329, 208, 166, 312, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 328, 0, 0, 0, 0,
	279, 0, 0, 0, 0, 0, 219, 260, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 310, 322, 339, 342, 0, 0, 0,
	170, 341, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 337,
	244, 245, 246, 247, 211, 0, 187, 340, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 207, 213, 0, 215,
	186, 259, 209, 319, 222, 0, 0, 0, 251, 218,
	284, 223, 229, 272, 318, 257, 277, 184, 309, 285,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 227, 0, 268, 206, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 294, 0, 0, 325, 326, 327, 311,
	0, 198, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 286, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 291, 307,
	183, 282, 320, 188, 289, 178, 255, 278, 0, 0,
	175, 305, 288, 237, 220, 221, 174, 0, 273, 199,
	212, 195, 253, 0, 304, 332, 194, 323, 0, 315,
	177, 0, 314, 252, 301, 306, 238, 232, 176, 303,
	236, 231, 224, 203, 0, 216, 264, 230, 265, 217,
	242, 241, 243, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 225, 0, 0, 0, 333, 0,
	276, 258, 0, 0, 0, 274, 228, 302, 266, 308,
	292, 316, 270, 267, 168, 293, 197, 239, 179, 181,
	193, 200, 202, 204, 205, 248, 249, 261, 281, 295,
	296, 297, 196, 189, 275, 190, 214, 191, 169, 283,
	192, 171, 262, 300, 0, 210, 271, 235, 172, 234,
	263, 299, 298, 180, 324, 330, 331, 335, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 329, 208, 166, 312, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 328,
	0, 0, 0, 0, 279, 0, 0, 0, 0, 0,
	219, 260, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 310, 322, 339,
	342, 0, 0, 0, 170, 341, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 337, 244, 245, 246, 247, 211, 0,
	187, 340, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	207, 213, 0, 215, 186, 259, 209, 319, 222, 0,
	0, 0, 251, 218, 284, 223, 229, 272, 318, 257,
	277, 184, 309, 285, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 227, 0, 268,
	206, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 294, 0, 0,
	325, 326, 327, 311, 0, 198, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 286, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 1727,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 291, 307, 183, 282, 320, 188, 289, 178,
	255, 278, 0, 0, 175, 305, 288, 237, 220, 221,
	174, 0, 273, 199, 212, 195, 253, 0, 304, 332,
	194, 323, 0, 315, 177, 0, 314, 252, 301, 306,
	238, 232, 176, 303, 236, 231, 224, 203, 0, 216,
	264, 230, 265, 217, 242, 241, 243, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 225, 0,
	0, 0, 333, 0, 276, 258, 0, 0, 0, 274,
	228, 302, 266, 308, 292, 316, 270, 267, 168, 293,
	197, 239, 179, 181, 193, 200, 202, 204, 205, 248,
	249, 261, 281, 295, 296, 297, 196, 189, 275, 190,
	214, 191, 169, 283, 192, 171, 262, 300, 0, 210,
	271, 235, 172, 234, 263, 299, 298, 180, 324, 330,
	331, 335, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 338, 0, 0, 0, 0, 0, 0, 329, 208,
	166, 312, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 328, 0, 0, 0, 0, 279, 0,
	0, 0, 0, 0, 219, 260, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 310, 322, 339, 342, 0, 0, 0, 170, 341,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 337, 244, 245,
	246, 247, 211, 0, 187, 340, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 207, 213, 0, 215, 186, 259,
	209, 319, 222, 0, 0, 0, 251, 218, 284, 223,
	229, 272, 318, 257, 277, 184, 309, 285, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 227, 0, 268, 206, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 0, 0, 325, 326, 327, 311, 294, 198,
	0, 0, 1655, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 0, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 333, 0, 276, 258, 0, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 328, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 337, 244,
	245, 246, 247, 211, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 227, 0, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 1638, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 294, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 0, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 0, 0, 0, 167, 0,
	227, 0, 268, 206, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	294, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 286, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 291, 307, 183, 282, 320,
	188, 289, 178, 255, 278, 0, 0, 175, 305, 288,
	237, 220, 221, 174, 0, 273, 199, 212, 195, 253,
	0, 304, 332, 194, 323, 0, 315, 177, 0, 314,
	252, 301, 306, 238, 232, 176, 303, 236, 231, 224,
	203, 0, 216, 264, 230, 265, 217, 242, 241, 243,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 225, 0, 0, 0, 333, 0, 276, 258, 0,
	0, 0, 274, 228, 302, 266, 308, 292, 316, 371,
	267, 168, 293, 197, 239, 179, 181, 193, 200, 202,
	204, 205, 248, 249, 261, 281, 295, 296, 297, 196,
	189, 275, 190, 214, 191, 169, 283, 192, 171, 262,
	300, 0, 210, 271, 235, 172, 234, 263, 299, 298,
	180, 324, 330, 331, 335, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 338, 0, 0, 0, 0, 0,
	0, 329, 208, 166, 312, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 328, 0, 0, 0,
	0, 279, 0, 0, 0, 0, 0, 219, 260, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 310, 322, 339, 342, 0, 0,
	0, 170, 341, 0, 0, 0, 0, 0, 0, 372,
	313, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	337, 244, 245, 246, 247, 211, 0, 187, 340, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 207, 213, 0,
	215, 186, 259, 209, 319, 222, 0, 0, 0, 251,
	218, 284, 223, 229, 272, 318, 257, 277, 184, 309,
	285, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 227, 0, 268, 206, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 294, 0, 0, 325, 326, 327,
	311, 0, 198, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 286, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 291,
	307, 183, 282, 320, 188, 289, 178, 255, 278, 0,
	0, 175, 305, 288, 237, 220, 221, 174, 0, 273,
	199, 212, 195, 253, 0, 304, 332, 194, 323, 0,
	315, 177, 0, 314, 252, 301, 306, 238, 232, 176,
	303, 236, 231, 224, 203, 0, 216, 264, 230, 265,
	217, 242, 241, 243, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 0, 317, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 225, 0, 0, 0, 333,
	0, 276, 258, 0, 0, 0, 274, 228, 302, 266,
	308, 292, 316, 270, 267, 168, 293, 197, 239, 179,
	181, 193, 200, 202, 204, 205, 248, 249, 261, 281,
	295, 296, 297, 196, 189, 275, 190, 214, 191, 169,
	283, 192, 171, 262, 300, 0, 210, 271, 235, 172,
	234, 263, 299, 298, 180, 324, 330, 331, 335, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 338, 0,
	0, 0, 0, 0, 0, 329, 208, 166, 312, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	328, 0, 0, 0, 0, 279, 0, 0, 0, 0,
	0, 219, 260, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 310, 322,
	339, 342, 0, 0, 0, 170, 341, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 337, 244, 245, 246, 247, 211,
	0, 187, 340, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 207, 213, 0, 215, 186, 259, 209, 319, 222,
	0, 0, 0, 251, 218, 284, 223, 229, 272, 318,
	257, 277, 184, 309, 285, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 227, 0,
	268, 206, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 294, 0,
	0, 325, 326, 327, 311, 0, 198, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 201, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 286, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 205, 211, 0, 213, 184, 257,
	207, 317, 220, 0, 0, 0, 249, 216, 282, 221,
	227, 270, 316, 255, 275, 182, 307, 283, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 225, 0, 266, 204, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 292, 0, 0, 323, 324, 325, 309, 0, 196,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 284,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	124, 0, 0, 973, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 173, 291, 307, 183, 282, 320, 188, 289,
	178, 255, 278, 0, 0, 175, 305, 288, 237, 220,
	221, 174, 0, 273, 199, 212, 195, 253, 0, 304,
	332, 194, 323, 0, 315, 177, 0, 314, 252, 301,
	306, 238, 232, 176, 303, 236, 231, 224, 203, 0,
	216, 264, 230, 265, 217, 242, 241, 243, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 225,
	0, 0, 0, 333, 0, 276, 258, 0, 0, 0,
	274, 228, 302, 266, 308, 292, 316, 270, 267, 168,
	293, 197, 239, 179, 181, 193, 200, 202, 204, 205,
	248, 249, 261, 281, 295, 296, 297, 196, 189, 275,
	190, 214, 191, 169, 283, 192, 171, 262, 300, 0,
	210, 271, 235, 172, 234, 263, 299, 298, 180, 324,
	330, 331, 335, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 338, 0, 0, 0, 0, 0, 0, 329,
	208, 166, 312, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 328, 0, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 219, 260, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 310, 322, 339, 342, 0, 0, 0, 170,
	341, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 337, 244,
	245, 246, 247, 211, 0, 187, 340, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 207, 213, 0, 215, 186,
	259, 209, 319, 222, 0, 0, 0, 251, 218, 284,
	223, 229, 272, 318, 257, 277, 184, 309, 285, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 289, 305, 181, 280,
	318, 186, 287, 176, 253, 276, 0, 0, 173, 303,
	286, 235, 218, 219, 172, 0, 271, 197, 210, 193,
	251, 0, 302, 330, 192, 321, 0, 313, 175, 0,
	312, 250, 299, 304, 236, 230, 174, 301, 234, 229,
	222, 201, 0, 214, 262, 228, 263, 215, 240, 239,
	241, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 315, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 223, 0, 0, 0, 331, 0, 274, 256,
	0, 0, 0, 272, 226, 300, 264, 306, 290, 314,
	268, 265, 166, 291, 195, 237, 177, 179, 191, 198,
	200, 202, 203, 246, 247, 259, 279, 293, 294, 295,
	194, 187, 273, 188, 212, 189, 167, 281, 190, 169,
	260, 298, 0, 208, 269, 233, 170, 232, 261, 297,
	296, 178, 322, 328, 329, 333, 0, 334, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 327, 206, 164, 310, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 326, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 217, 258,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 308, 320, 337, 340, 0,
	0, 0, 168, 339, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 335, 242, 243, 244, 245, 209, 0, 185, 338,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 205, 211,
	0, 213, 184, 257, 207, 317, 220, 0, 0, 0,
	249, 216, 282, 221, 227, 270, 316, 255, 275, 182,
	307, 283, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 225, 0, 266, 204, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 292, 0, 0, 323, 324,
	325, 309, 0, 196, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 284, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	289, 305, 181, 280, 318, 186, 287, 176, 253, 276,
	0, 0, 173, 303, 286, 235, 218, 219, 172, 0,
	271, 197, 210, 193, 251, 0, 302, 330, 192, 321,
	0, 313, 175, 0, 312, 250, 299, 304, 236, 230,
	174, 301, 234, 229, 222, 201, 0, 214, 262, 228,
	263, 215, 240, 239, 241, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 223, 0, 0, 0,
	331, 0, 274, 256, 0, 0, 0, 272, 226, 300,
	264, 306, 290, 314, 268, 265, 166, 291, 195, 237,
	177, 179, 191, 198, 200, 202, 203, 246, 247, 259,
	279, 293, 294, 295, 194, 187, 273, 188, 212, 189,
	167, 281, 190, 169, 260, 298, 0, 208, 269, 233,
	170, 232, 261, 297, 296, 178, 322, 328, 329, 333,
	0, 334, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 327, 206, 164, 310,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 326, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 0, 217, 258, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 308,
	320, 337, 340, 0, 0, 0, 168, 339, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 335, 242, 243, 244, 245,
	209, 0, 185, 338, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 205, 211, 0, 213, 184, 257, 207, 317,
	220, 0, 0, 0, 249, 216, 282, 221, 227, 270,
	316, 255, 275, 182, 307, 283, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 225,
	0, 266, 204, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 292,
	0, 0, 323, 324, 325, 309, 0, 196, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 284, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 1720, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 289, 305, 181, 280, 318, 186,
	287, 176, 253, 276, 0, 0, 173, 303, 286, 235,
	218, 219, 172, 0, 271, 197, 210, 193, 251, 0,
	302, 330, 192, 321, 0, 313, 175, 0, 312, 250,
	299, 304, 236, 230, 174, 301, 234, 229, 222, 201,
	0, 214, 262, 228, 263, 215, 240, 239, 241, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	223, 0, 0, 0, 331, 0, 274, 256, 0, 0,
	0, 272, 226, 300, 264, 306, 290, 314, 268, 265,
	166, 291, 195, 237, 177, 179, 191, 198, 200, 202,
	203, 246, 247, 259, 279, 293, 294, 295, 194, 187,
	273, 188, 212, 189, 167, 281, 190, 169, 260, 298,
	0, 208, 269, 233, 170, 232, 261, 297, 296, 178,
	322, 328, 329, 333, 0, 334, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	327, 206, 164, 310, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 326, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 217, 258, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 308, 320, 337, 340, 0, 0, 0,
	168, 339, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 335,
	242, 243, 244, 245, 209, 0, 185, 338, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 205, 211, 0, 213,
	184, 257, 207, 317, 220, 0, 0, 0, 249, 216,
	282, 221, 227, 270, 316, 255, 275, 182, 307, 283,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 225, 0, 266, 204, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 0, 0, 323, 324, 325, 309,
	292, 196, 0, 0, 1648, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 1631, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 292, 0, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 224, 0, 0, 0, 0, 0, 0,
	284, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 289, 305, 181,
	280, 318, 186, 287, 176, 253, 276, 0, 0, 173,
	303, 286, 235, 218, 219, 172, 0, 271, 197, 210,
	193, 251, 0, 302, 330, 192, 321, 0, 313, 175,
	0, 312, 250, 299, 304, 236, 230, 174, 301, 234,
	229, 222, 201, 0, 214, 262, 228, 263, 215, 240,
	239, 241, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 223, 0, 0, 0, 331, 0, 274,
	256, 0, 0, 0, 272, 226, 300, 264, 306, 290,
	314, 369, 265, 166, 291, 195, 237, 177, 179, 191,
	198, 200, 202, 203, 246, 247, 259, 279, 293, 294,
	295, 194, 187, 273, 188, 212, 189, 167, 281, 190,
	169, 260, 298, 0, 208, 269, 233, 170, 232, 261,
	297, 296, 178, 322, 328, 329, 333, 0, 334, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 327, 206, 164, 310, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 326, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 217,
	258, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 308, 320, 337, 340,
	0, 0, 0, 168, 339, 0, 0, 0, 0, 0,
	0, 370, 311, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 335, 242, 243, 244, 245, 209, 0, 185,
	338, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 205,
	211, 0, 213, 184, 257, 207, 317, 220, 0, 0,
	0, 249, 216, 282, 221, 227, 270, 316, 255, 275,
	182, 307, 283, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 225, 0, 266, 204,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 292, 0, 0, 323,
	324, 325, 309, 0, 196, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 284, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 289, 305, 181, 280, 318, 186, 287, 176, 253,
	276, 0, 0, 173, 303, 286, 235, 218, 219, 172,
	0, 271, 197, 210, 193, 251, 0, 302, 330, 192,
	321, 0, 313, 175, 0, 312, 250, 299, 304, 236,
	230, 174, 301, 234, 229, 222, 201, 0, 214, 262,
	228, 263, 215, 240, 239, 241, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 315, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 223, 0, 0,
	0, 331, 0, 274, 256, 0, 0, 0, 272, 226,
	300, 264, 306, 290, 314, 268, 265, 166, 291, 195,
	237, 177, 179, 191, 198, 200, 202, 203, 246, 247,
	259, 279, 293, 294, 295, 194, 187, 273, 188, 212,
	189, 167, 281, 190, 169, 260, 298, 0, 208, 269,
	233, 170, 232, 261, 297, 296, 178, 322, 328, 329,
	333, 0, 334, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 327, 206, 164,
	310, 0, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 326, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 217, 258, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	308, 320, 337, 340, 0, 0, 0, 168, 339, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 335, 242, 243, 244,
	245, 209, 0, 185, 338, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 205, 211, 0, 213, 184, 257, 207,
	317, 220, 0, 0, 0, 249, 216, 282, 221, 227,
	270, 316, 255, 275, 182, 307, 283, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	225, 0, 266, 204, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	292, 0, 0, 323, 324, 325, 309, 0, 196, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 199, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 284, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 289, 305, 181, 280, 318,
	186, 287, 176, 253, 276, 0, 0, 173, 303, 286,
	235, 218, 219, 172, 0, 271, 197, 210, 193, 251,
	0, 302, 330, 192, 321, 0, 313, 175, 0, 312,
	250, 299, 304, 236, 230, 174, 301, 234, 229, 222,
	201, 0, 214, 262, 228, 263, 215, 240, 239, 241,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 223, 0, 0, 0, 331, 0, 274, 256, 0,
	0, 0, 272, 226, 300, 264, 306, 290, 314, 268,
	265, 166, 291, 195, 237, 177, 179, 191, 198, 200,
	202, 203, 246, 247, 259, 279, 293, 294, 295, 194,
	187, 273, 188, 212, 189, 167, 281, 190, 169, 260,
	298, 0, 208, 269, 233, 170, 232, 261, 297, 296,
	178, 322, 328, 329, 333, 0, 334, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 327, 206, 164, 310, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 326, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 217, 258, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 308, 320, 337, 340, 0, 0,
	0, 168, 339, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	335, 242, 243, 244, 245, 209, 0, 185, 338, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 205, 211, 0,
	213, 184, 257, 207, 317, 220, 0, 0, 0, 249,
	216, 282, 221, 227, 270, 316, 255, 275, 182, 307,
	283, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 225, 0, 266, 204, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 292, 0, 0, 323, 324, 325,
	309, 0, 196, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 284, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 289,
	305, 181, 280, 318, 186, 287, 176, 253, 276, 0,
	0, 173, 303, 286, 235, 218, 219, 172, 0, 271,
	197, 210, 193, 251, 0, 302, 330, 192, 321, 0,
	313, 175, 0, 312, 250, 299, 304, 236, 230, 174,
	301, 234, 229, 222, 201, 0, 214, 262, 228, 263,
	215, 240, 239, 241, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 223, 0, 0, 0, 331,
	0, 274, 256, 0, 0, 0, 272, 226, 300, 264,
	306, 290, 314, 268, 265, 166, 291, 195, 237, 177,
	179, 191, 198, 200, 202, 203, 246, 247, 259, 279,
	293, 294, 295, 194, 187, 273, 188, 212, 189, 167,
	281, 190, 169, 260, 298, 0, 208, 269, 233, 170,
	232, 261, 297, 296, 178, 322, 328, 329, 333, 0,
	334, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 327, 206, 164, 310, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	326, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 217, 258, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 308, 320,
	337, 340, 0, 0, 0, 168, 339, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 335, 242, 243, 244, 245, 209,
	0, 185, 338, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 205, 211, 0, 213, 184, 257, 207, 317, 220,
	0, 0, 0, 249, 216, 282, 221, 227, 270, 316,
	255, 275, 182, 307, 283, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 225, 0,
	266, 204, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 292, 0,
	0, 323, 324, 325, 309, 0, 196, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1691, 0, 0, 0, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 665, 666,
	1693, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 217, 258, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 254, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 199, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 284, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 665, 666, 1693, 0, 0, 0, 180,
	165, 0, 225, 0, 266, 204, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 324, 325, 309, 0,
	196, 0, 0, 0, 0, 0, 0, 171, 289, 305,
	181, 280, 318, 186, 287, 176, 253, 276, 0, 0,
	173, 303, 286, 235, 218, 219, 172, 0, 271, 197,
	210, 193, 251, 0, 302, 330, 192, 321, 0, 313,
	175, 0, 312, 250, 299, 304, 236, 230, 174, 301,
	234, 229, 222, 201, 0, 214, 262, 228, 263, 215,
	240, 239, 241, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 223, 0, 0, 0, 331, 0,
	274, 256, 0, 0, 0, 272, 226, 300, 264, 306,
	290, 314, 268, 265, 166, 291, 195, 237, 177, 179,
	191, 198, 200, 202, 203, 246, 247, 259, 279, 293,
	294, 295, 194, 187, 273, 188, 212, 189, 167, 281,
	190, 169, 260, 298, 0, 208, 269, 233, 170, 232,
	261, 297, 296, 178, 322, 328, 329, 333, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 327, 206, 164, 310, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 326,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 0,
	217, 258, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 308, 320, 337,
	340, 0, 0, 0, 168, 339, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 335, 242, 243, 244, 245, 209, 0,
	185, 338, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 332,
	205, 211, 0, 213, 184, 257, 207, 317, 220, 254,
	0, 0, 249, 216, 282, 221, 227, 270, 316, 255,
	275, 182, 307, 283, 231, 0, 199, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 284, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 665, 666,
	0, 0, 0, 0, 180, 165, 0, 225, 0, 266,
	204, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 324, 325, 309, 0, 196, 0, 0, 0, 0,
	0, 0, 171, 289, 305, 181, 280, 318, 186, 287,
	176, 253, 276, 0, 0, 173, 303, 286, 235, 218,
	219, 172, 0, 271, 197, 210, 193, 251, 0, 302,
	330, 192, 321, 0, 313, 175, 0, 312, 250, 299,
	304, 236, 230, 174, 301, 234, 229, 222, 201, 0,
	214, 262, 228, 263, 215, 240, 239, 241, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 223,
	0, 0, 0, 331, 0, 274, 256, 0, 0, 0,
	272, 226, 300, 264, 306, 290, 314, 268, 265, 166,
	291, 195, 237, 177, 179, 191, 198, 200, 202, 203,
	246, 247, 259, 279, 293, 294, 295, 194, 187, 273,
	188, 212, 189, 167, 281, 190, 169, 260, 298, 0,
	208, 269, 233, 170, 232, 261, 297, 296, 178, 322,
	328, 329, 333, 0, 334, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 327,
	206, 164, 310, 117, 252, 35, 107, 89, 0, 0,
	0, 0, 0, 248, 326, 0, 0, 0, 0, 277,
	0, 0, 0, 112, 0, 217, 258, 0, 278, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 285, 308, 320, 337, 340, 0, 0, 0, 168,
	339, 0, 0, 0, 67, 0, 0, 0, 311, 0,
	114, 0, 319, 0, 0, 0, 0, 0, 335, 242,
	243, 244, 245, 209, 0, 185, 338, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 205, 211, 0, 213, 184,
	257, 207, 317, 220, 0, 0, 0, 249, 216, 282,
	221, 227, 270, 316, 255, 275, 182, 307, 283, 231,
	0, 0, 848, 0, 0, 0, 0, 0, 108, 109,
	0, 110, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 225, 0, 266, 204, 0, 0, 0, 0,
	0, 0, 741, 742, 743, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 106, 115, 0,
	65, 0, 0, 0, 848, 323, 324, 325, 309, 0,
	196, 0, 0, 0, 0, 0, 105, 100, 99, 0,
	0, 0, 836, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 860, 862, 864, 866, 867, 869, 1130, 873, 870,
	871, 872, 0, 0, 851, 852, 853, 854, 834, 835,
	857, 0, 837, 0, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 849, 855, 0, 0, 0, 0,
	0, 102, 103, 859, 861, 863, 865, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 850, 104,
	848, 76, 856, 860, 862, 864, 866, 867, 869, 0,
	873, 870, 871, 872, 0, 0, 851, 852, 853, 854,
	834, 835, 857, 0, 837, 0, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 849, 855, 389, 0,
	388, 395, 385, 0, 0, 859, 861, 863, 865, 868,
	580, 0, 392, 393, 77, 394, 398, 0, 0, 380,
	0, 0, 0, 78, 34, 0, 0, 0, 1126, 403,
	0, 1123, 0, 0, 0, 1125, 1122, 1124, 1128, 1129,
	850, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	836, 408, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 1773, 1774, 856, 860,
	862, 864, 866, 867, 869, 0, 873, 870, 871, 872,
	0, 0, 851, 852, 853, 854, 834, 835, 857, 90,
	837, 0, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 849, 855, 0, 0, 0, 0, 0, 0,
	0, 859, 861, 863, 865, 868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 0, 0,
	610, 0, 0, 609, 0, 0, 850, 0, 0, 0,
	0, 0, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1133, 1134, 1135, 1136, 1137, 1138, 1131,
	1132, 2212, 0, 0, 0, 0, 0, 595, 0, 0,
	0, 381, 383, 382, 581, 0, 858, 0, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 0, 0, 1646, 0, 0, 406, 0,
	600, 0, 0, 0, 0, 384, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 388, 395, 385, 0, 0, 0,
	0, 0, 2194, 0, 0, 0, 392, 393, 0, 394,
	398, 0, 0, 380, 0, 0, 389, 0, 388, 395,
	385, 0, 0, 403, 0, 0, 0, 0, 858, 0,
	392, 393, 0, 394, 398, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 403, 0, 0,
	0, 0, 407, 0, 0, 408, 0, 582, 603, 2290,
	0, 2220, 0, 0, 386, 390, 396, 0, 397, 399,
	0, 0, 400, 401, 402, 0, 0, 404, 405, 0,
	0, 598, 0, 0, 0, 2230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2223, 0,
	0, 0, 0, 0, 2218, 0, 0, 0, 0, 2233,
	2234, 0, 0, 599, 604, 2219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 0, 594, 607, 0, 0, 2198, 591, 589, 588,
	0, 593, 583, 584, 858, 605, 606, 2202, 0, 0,
	2224, 0, 0, 0, 0, 0, 0, 601, 602, 0,
	0, 0, 0, 0, 0, 0, 0, 2191, 0, 0,
	0, 2193, 2195, 2197, 0, 2199, 2200, 2201, 2203, 2204,
	2205, 2207, 2208, 2209, 2210, 381, 383, 382, 0, 0,
	0, 0, 0, 387, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 0, 0, 0, 381,
	383, 382, 406, 0, 0, 2213, 0, 387, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 406, 2232, 0, 2015,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2225, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 0, 0, 386, 390,
	396, 0, 397, 399, 0, 0, 400, 401, 402, 0,
	0, 404, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 390, 396, 0, 397, 399, 0, 0,
	400, 401, 402, 0, 0, 404, 405, 0, 0, 0,
	0, 2235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2221, 0, 0, 0, 0, 0, 2231,
}

var yyPact = [...]int{
	27453, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -159, 25399, 25399, -1000, -1000, 1616,
	-1000, 24905, 9581, 25893, 142, 25893, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 394, -1000, 24411, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 369, 27808, 228, 216, 7595,
	25893, -282, -1000, 2143, -1000, -1000, -1000, -1000, 268, 543,
	23917, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27804, 80, 543, 525, 549,
	514, 514, 11063, 2143, 236, 60, -1000, 777, 27453, 27157,
	332, 25893, -1000, 989, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	167, 0, 227, 0, 268, 206, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 294, 0, 0, 325, 326, 327, 311, 0,
	198, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	286, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 291, 307, 183,
	282, 320, 188, 289, 178, 255, 278, 0, 0, 175,
	305, 288, 237, 220, 221, 174, 0, 273, 199, 212,
	195, 253, 0, 304, 332, 194, 323, 0, 315, 177,
	0, 314, 252, 301, 306, 238, 232, 176, 303, 236,
	231, 224, 203, 0, 216, 264, 230, 265, 217, 242,
	241, 243, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 225, 0, 0, 0, 333, 0, 276,
	258, 0, 0, 0, 274, 228, 302, 266, 308, 292,
	316, 270, 267, 168, 293, 197, 239, 179, 181, 193,
	200, 202, 204, 205, 248, 249, 261, 281, 295, 296,
	297, 196, 189, 275, 190, 214, 191, 169, 283, 192,
	171, 262, 300, 0, 210, 271, 235, 172, 234, 263,
	299, 298, 180, 324, 330, 331, 335, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 329, 208, 166, 312, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 328, 0,
	0, 0, 0, 279, 0, 0, 0, 0, 0, 219,
	260, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 310, 322, 339, 342,
	0, 0, 0, 170, 341, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 337, 244, 245, 246, 247, 211, 0, 187,
	340, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 207,
	213, 0, 215, 186, 259, 209, 319, 222, 0, 0,
	0, 251, 218, 284, 223, 229, 272, 318, 257, 277,
	184, 309, 285, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 227, 0, 268, 206,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 294, 0, 0, 325,
	326, 327, 311, 0, 198, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 670, 671, 1700, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 0, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 256, 0, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 201,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 286,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 670, 671, 1700, 0, 0, 0, 182, 167, 0,
	227, 0, 268, 206, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 326, 327, 311, 0, 198, 0,
	0, 0, 0, 0, 0, 173, 291, 307, 183, 282,
	320, 188, 289, 178, 255, 278, 0, 0, 175, 305,
	288, 237, 220, 221, 174, 0, 273, 199, 212, 195,
	253, 0, 304, 332, 194, 323, 0, 315, 177, 0,
	314, 252, 301, 306, 238, 232, 176, 303, 236, 231,
	224, 203, 0, 216, 264, 230, 265, 217, 242, 241,
	243, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 225, 0, 0, 0, 333, 0, 276, 258,
	0, 0, 0, 274, 228, 302, 266, 308, 292, 316,
	270, 267, 168, 293, 197, 239, 179, 181, 193, 200,
	202, 204, 205, 248, 249, 261, 281, 295, 296, 297,
	196, 189, 275, 190, 214, 191, 169, 283, 192, 171,
	262, 300, 0, 210, 271, 235, 172, 234, 263, 299,
	298, 180, 324, 330, 331, 335, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 338, 0, 0, 0, 0,
	0, 0, 329, 208, 166, 312, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 328, 0, 0,
	0, 0, 279, 0, 0, 0, 0, 0, 219, 260,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 310, 322, 339, 342, 0,
	0, 0, 170, 341, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 337, 244, 245, 246, 247, 211, 0, 187, 340,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 334, 207, 213,
	0, 215, 186, 259, 209, 319, 222, 256, 0, 0,
	251, 218, 284, 223, 229, 272, 318, 257, 277, 184,
	309, 285, 233, 0, 201, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 286, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 670, 671, 0, 0,
	0, 0, 182, 167, 0, 227, 0, 268, 206, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 326,
	327, 311, 0, 198, 0, 0, 0, 0, 0, 0,
	173, 291, 307, 183, 282, 320, 188, 289, 178, 255,
	278, 0, 0, 175, 305, 288, 237, 220, 221, 174,
	0, 273, 199, 212, 195, 253, 0, 304, 332, 194,
	323, 0, 315, 177, 0, 314, 252, 301, 306, 238,
	232, 176, 303, 236, 231, 224, 203, 0, 216, 264,
	230, 265, 217, 242, 241, 243, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 225, 0, 0,
	0, 333, 0, 276, 258, 0, 0, 0, 274, 228,
	302, 266, 308, 292, 316, 270, 267, 168, 293, 197,
	239, 179, 181, 193, 200, 202, 204, 205, 248, 249,
	261, 281, 295, 296, 297, 196, 189, 275, 190, 214,
	191, 169, 283, 192, 171, 262, 300, 0, 210, 271,
	235, 172, 234, 263, 299, 298, 180, 324, 330, 331,
	335, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 329, 208, 166,
	312, 0, 254, 853, 0, 0, 0, 0, 0, 0,
	0, 250, 328, 0, 0, 0, 0, 279, 0, 0,
	0, 0, 0, 219, 260, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	310, 322, 339, 342, 0, 0, 0, 170, 341, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 337, 244, 245, 246,
	247, 211, 0, 187, 340, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 853, 334, 207, 213, 0, 215, 186, 259, 209,
	319, 222, 0, 841, 0, 251, 218, 284, 223, 229,
	272, 318, 257, 277, 184, 309, 285, 233, 0, 0,
	0, 861, 865, 867, 869, 871, 872, 874, 0, 878,
	875, 876, 877, 0, 0, 856, 857, 858, 859, 839,
	840, 862, 0, 842, 0, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 854, 860, 0, 167, 0,
	227, 0, 268, 206, 864, 866, 868, 870, 873, 0,
	0, 0, 0, 0, 0, 0, 746, 747, 748, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 831, 0, 0, 0, 855,
	0, 853, 0, 325, 326, 327, 311, 0, 198, 861,
	865, 867, 869, 871, 872, 874, 0, 878, 875, 876,
	877, 0, 0, 856, 857, 858, 859, 839, 840, 862,
	0, 842, 0, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 854, 860, 0, 0, 0, 0, 0,
	0, 1135, 864, 866, 868, 870, 873, 0, 0, 0,
	0, 2219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 855, 0, 0,
	0, 0, 0, 0, 0, 1653, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1780, 1781, 861,
	865, 867, 869, 871, 872, 874, 0, 878, 875, 876,
	877, 0, 2201, 856, 857, 858, 859, 839, 840, 862,
	0, 842, 0, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 854, 860, 0, 0, 0, 0, 2219,
	0, 0, 864, 866, 868, 870, 873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2297,
	0, 0, 1131, 1653, 0, 1128, 0, 855, 0, 1130,
	1127, 1129, 1133, 1134, 0, 0, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 390, 397, 387, 0, 0, 0, 0,
	2201, 0, 0, 0, 0, 394, 395, 863, 396, 400,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 390, 397, 387, 2205, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 2209, 396, 400,
	0, 409, 382, 0, 410, 0, 0, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 2198, 0, 0,
	0, 2200, 2202, 2204, 0, 2206, 2207, 2208, 2210, 2211,
	2212, 2214, 2215, 2216, 2217, 0, 0, 0, 0, 0,
	0, 409, 0, 0, 410, 863, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1138, 1139, 1140,
	1141, 1142, 1143, 1136, 1137, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2209, 0, 0, 0, 0,
	2218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2198, 0, 2197, 0, 2200,
	2202, 2204, 0, 2206, 2207, 2208, 2210, 2211, 2212, 2214,
	2215, 2216, 2217, 0, 383, 385, 384, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 2213, 0, 0, 0,
	0, 0, 0, 2203, 393, 863, 0, 0, 0, 0,
	0, 408, 0, 2220, 0, 0, 0, 0, 386, 0,
	0, 0, 377, 0, 383, 385, 384, 0, 0, 0,
	0, 0, 389, 0, 0, 391, 0, 390, 397, 387,
	0, 0, 0, 0, 393, 0, 0, 0, 2218, 394,
	395, 408, 396, 400, 0, 0, 382, 0, 386, 0,
	0, 0, 0, 0, 0, 2197, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2213, 0, 0, 0, 0, 0,
	0, 2203, 0, 0, 0, 0, 0, 388, 392, 398,
	0, 399, 401, 0, 0, 402, 403, 404, 0, 0,
	406, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 392, 398,
	0, 399, 401, 0, 0, 402, 403, 404, 0, 0,
	406, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 385,
	384, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 392, 398, 0, 399, 401, 0, 0, 402,
	403, 404, 0, 0, 406, 407,
}

var yyPact = [...]int{
	298, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -164, 25357, 25357, -1000, -1000,
	1633, -1000, 24863, 9539, 25851, 165, 25851, -1000, -1000, -1000,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 445, -1000, 24369, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 390, 27831, 264, 256,
	7553, 25851, -282, -1000, 2348, -146, -1000, -1000, -1000, -1000,
	212, 547, 23875, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1108, 77, 547,
	595, 619, 790, 790, 11021, 2348, 239, 126, -1000, 691,
	298, 27115, 365, 25851, -1000, 1007, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, 332, -1000, -1000, -1000, 2143, 2143, -1000, 25893,
	25893, -23, 1070, -1000, 222, 229, 243, 973, -1000, -1000,
	-1000, -1000, -1000, 2192, -1000, 25893, 1913, 25893, -1000, 1333,
	260, 28052, 2036, 969, 454, 1944, -1000, -1000, 1908, -1000,
	95, 129, 130, 370, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 99, -1000, 2097, -1000, -1000, 84, -1000, -1000, 83,
	-1000, -1000, -1000, -77, -1000, -1000, -1000, -1000, -1000, -149,
	-149, 586, 1600, 7595, -1000, 1325, -1000, 1445, -1000, -1000,
	-1000, -1000, 5116, 9077, 9077, 9077, 9077, -1000, -1000, 1788,
	7595, 1902, 1898, -1000, -1000, -1000, -1000, 965, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1515, 8583, -1000, 1897, 1896, 1888, 1887, 1884, 1868, 1867,
	1866, 1865, 1864, 1862, 1671, 1861, 1513, 1510, 1860, 1859,
	1854, 9077, 1509, 1671, 1671, 1851, 1850, 1849, 1840, 1835,
	1834, 1831, 1825, 1822, 1821, 1820, 1815, 1814, 1812, 1810,
=======
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 365, -1000, -1000, -1000, 2348, 2348,
	-1000, 25851, 25851, -20, 1135, -1000, 262, 231, 237, 1006,
	-1000, -1000, -1000, -1000, -1000, 2157, -1000, 25851, 1873, 25851,
	-1000, 1365, 326, 27871, 1989, 867, 491, 1900, -1000, -1000,
	1858, -1000, 102, 87, 93, 168, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 74, -1000, 2058, -1000, -1000, 86, -1000,
	-1000, 96, -1000, -1000, -1000, -90, -1000, -1000, -1000, -1000,
	-1000, -155, -155, 632, 1180, 7553, -1000, 1372, -1000, 2215,
	-1000, -1000, -1000, -1000, 5074, 9035, 9035, 9035, 9035, -1000,
	-1000, 1698, 7553, 1857, 1855, -1000, -1000, -1000, -1000, 1004,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1502, 8541, -1000, 1834, 1833, 1832, 1830, 1829,
	1819, 1816, 1814, 1811, 1810, 1803, 1605, 1802, 1501, 1498,
	1798, 1797, 1795, 9035, 1497, 1605, 1605, 1794, 1793, 1790,
	1783, 1782, 1774, 1772, 1770, 1768, 1753, 1729, 1728, 1724,
	1717, 1716, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, 27634, -1000, 940, 889, -1000, 1809, 2030,
	2124, 1698, 2166, 2106, 2104, 2089, 2084, 54, 363, 363,
	363, 372, 363, 392, -1000, -1000, -1000, -1000, -1000, -1000,
	462, -1000, -1000, -1000, -1000, 751, 25893, -1000, 1734, 1026,
	2117, 277, 267, 177, -1000, 1026, 244, 273, 2124, 2124,
	-96, -97, 1026, 1026, -97, 75, -1000, -1000, -1000, 1118,
	251, 1118, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2062,
	2060, 369, 369, 373, -1000, -152, -1000, -1000, 500, -1000,
	488, -1000, 1333, 258, 257, 783, 1117, -1000, 1035, 25893,
	25893, 25893, 1035, 1035, 14030, 13536, -1000, 2124, 1698, -1000,
	1642, 2011, 1698, 369, 369, 369, 369, 369, 369, 369,
	25893, 6598, 6598, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 275, -1000, -1000, -1000, -1000, -1000, 245, 1801, -1000,
	25893, 230, 2124, 2030, 2124, -1000, -1000, 925, 1324, 1506,
	-1000, -1000, 222, 1045, -1000, 721, -1000, -1000, -1000, -1000,
	25893, 215, -1000, 1505, 1796, -1000, 352, 712, 816, -1000,
	125, 28076, 21440, 1333, 21440, 25893, -1000, -1000, -1000, -1000,
	-1000, -1000, -78, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 67, -1000, 67, 7595,
	7595, 7595, 7595, 7595, -1000, 385, 8089, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9077, 9077, 9077, 9077, 9077, 9077,
	9077, 9077, 9077, 9077, 9077, 9077, 1787, 1142, 9077, 9077,
	9077, 2011, 1912, 762, -1000, -1000, -1000, -1000, -1000, 1076,
	1600, 7595, 7595, 25893, -1000, 27542, 7595, 7595, 91, 7595,
	2052, 2052, 3633, 25893, 7595, -1000, 1638, 1636, -1000, -1000,
	1195, 7595, -1000, -1000, 7595, 9077, 7595, -1000, -1000, -1000,
	-1000, 65, 2052, 7595, 7595, 2052, 2052, 2052, 1095, 2052,
	2052, 2052, 2052, 2052, 2052, 2052, 25893, 2017, 66, -1000,
	-1000, -1000, 1692, -1000, 1756, 1756, 1692, 1692, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1795, 1794, -1000,
	-1000, 1755, 1755, 1755, 1692, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1789, 1789, 1790, 1789, 25893, 2124, -282, 6104, -1000, -286,
	2030, 7595, -1000, -1000, 7595, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 384, 363, -1000, 25893, 1057, 21440, 1333,
	1394, 25893, 363, 373, -1000, 25893, 751, 2046, 25893, 2172,
	9077, 21440, 1118, 1026, -1000, 2172, 1118, -1000, -1000, -1000,
	1026, 1026, -1000, -1000, -1000, -1000, 1118, 1118, -1000, -1000,
	-79, 2172, 2172, -93, 25893, 25893, 363, 25893, -1000, -1000,
	-1000, -1000, 25893, -1000, -1000, 25893, 21440, 19958, -1000, -118,
	522, 496, 506, -1000, -1000, 342, 328, 12547, 285, 21440,
	4621, -1000, -1000, 1035, 1035, 1035, 4621, 4621, 820, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2030, -1000, -1000, -1000,
	-1000, 25893, 21440, 1333, 25893, 25893, 25893, 27157, -1000, 788,
	-1000, -1000, 10569, 924, 788, 1502, 25893, 1942, -283, -1000,
	12053, 25893, 25893, -1000, -1000, -283, -1000, 11558, 25893, 2030,
	-1000, 2030, 2690, -1000, 2116, -1000, 222, 150, -1000, -1000,
	-1000, -1000, -1000, -1000, 918, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 748, -1000, 25893, -1000, -1000, 125,
	21440, 1064, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 123,
	-1000, -1000, 144, -1000, 380, 13, 1044, -1000, -1000, 51,
	140, 402, 51, 1600, -1000, 1157, 1157, 1084, -1000, 388,
	-1000, -1000, -1000, -1000, 1788, -1000, -1000, -1000, 1187, 1823,
	-1000, 1102, 1102, 854, 854, 854, 854, 854, 1261, 1261,
	-1000, -1000, -1000, 5116, 1787, 9077, 9077, 9077, 346, 2424,
	2360, -1000, 7595, 1136, -1000, 7595, 1427, 927, 911, -1000,
=======
	-1000, -1000, -1000, -1000, -1000, 27481, -1000, 1000, 798, -1000,
	1715, 1979, 2087, 1658, 2138, 2075, 2059, 2057, 2050, 1345,
	-1000, -1000, 50, 361, 361, 361, 434, 361, 443, -1000,
	-1000, -1000, -1000, -1000, -1000, 524, -1000, -1000, -1000, -1000,
	830, 25851, -1000, 1669, 1037, 2078, 337, 336, -1000, -1000,
	1037, 238, 325, 2087, 2087, -55, -118, 1037, 1037, -118,
	53, -1000, -1000, -1000, 1129, 322, 1129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2048, 2045, 390, 390, 397, -1000,
	-179, -1000, -1000, 615, -1000, 564, -1000, 1365, 321, 313,
	897, 1162, -1000, 1063, 25851, 25851, 25851, 1063, 1063, 13988,
	13494, -1000, 2087, 1658, -1000, 1591, 1847, 1658, 390, 390,
	390, 390, 390, 390, 390, 25851, 6556, 6556, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 251, -1000, -1000, -1000,
	-1000, -1000, 227, 1713, -1000, 25851, 218, 2087, 1979, 2087,
	-1000, -1000, 999, 1339, 1496, -1000, -1000, 262, 1099, -1000,
	622, -1000, -1000, -1000, -1000, 25851, 217, -1000, 1482, 1712,
	-1000, 346, 699, 904, -1000, 162, 28075, 21398, 1365, 21398,
	25851, -1000, -1000, -1000, -1000, -1000, -1000, -95, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 76, -1000, 76, 7553, 7553, 7553, 7553, 7553, -1000,
	392, 8047, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9035,
	9035, 9035, 9035, 9035, 9035, 9035, 9035, 9035, 9035, 9035,
	9035, 1695, 1100, 9035, 9035, 9035, 1847, 2155, 869, -1000,
	-1000, -1000, -1000, -1000, 1111, 1180, 7553, 7553, 25851, -1000,
	27506, 7553, 7553, 90, 7553, 2024, 2024, 3591, 25851, 7553,
	-1000, 1586, 1585, -1000, -1000, 1238, 7553, -1000, -1000, 7553,
	9035, 7553, -1000, -1000, -1000, -1000, 285, 2024, 7553, 7553,
	2024, 2024, 2024, 1139, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 25851, 1963, 65, -1000, -1000, -1000, 1639, -1000, 1685,
	1685, 1639, 1639, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1708, 1706, -1000, -1000, 1683, 1683, 1683, 1639,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1699, 1699, 1700, 1699, 25851,
	2087, -282, 6062, -1000, -287, 1979, 7553, -1000, -1000, 7553,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1489, 431,
	361, -1000, 25851, 1165, 21398, 1365, 1376, 25851, 361, 397,
	-1000, 25851, 830, 2002, 25851, 2144, 9035, 21398, 1129, 1037,
	2144, 1129, -1000, -1000, -1000, 1037, 1037, -1000, -1000, -1000,
	-1000, 1129, 1129, -1000, -1000, -96, 2144, 2144, -106, 25851,
	25851, 361, 25851, -1000, -1000, -1000, -1000, 25851, -1000, -1000,
	25851, 21398, 19916, -1000, -139, 589, 569, 572, -1000, -1000,
	344, 387, 12505, 288, 21398, 4579, -1000, -1000, 1063, 1063,
	1063, 4579, 4579, 1012, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1979, -1000, -1000, -1000, -1000, 25851, 21398, 1365, 25851,
	25851, 25851, 27115, -1000, 902, -1000, -1000, 10527, 998, 902,
	1486, 25851, 1897, -284, -1000, 12011, 25851, 25851, -1000, -1000,
	-284, -1000, 11516, 25851, 1979, -1000, 1979, 2648, -1000, 2073,
	-1000, 262, 150, -1000, -1000, -1000, -1000, -1000, -1000, 994,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 826,
	-1000, 25851, -1000, -1000, 162, 21398, 1113, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 117, -1000, -1000, 144, -1000, 429,
	11, 1085, -1000, -1000, 47, 136, 469, 47, 1180, -1000,
	1171, 1171, 1174, -1000, 398, -1000, -1000, -1000, -1000, 1698,
	-1000, -1000, -1000, 1876, 1373, -1000, 1251, 1251, 988, 988,
	988, 988, 988, 1176, 1176, -1000, -1000, -1000, 5074, 1695,
	9035, 9035, 9035, 376, 3005, 2978, -1000, 7553, 1156, -1000,
	7553, 1514, 891, 992, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1634,
	586, 1633, 1440, 2189, 1631, 7595, -1000, -1000, 7595, 1352,
	7101, -1000, -1000, -1000, 1619, 910, 1618, -1000, -1000, -1000,
	1607, 692, 1606, 1371, 1589, 747, 7595, 1042, 1024, 7595,
	7595, 7595, 7595, 1588, 7595, 7595, 7595, 7595, 7595, 7595,
	7595, -1000, 7595, 50, -1000, -1000, -1000, -1000, 1322, -1000,
	1314, -1000, -1000, -1000, 1486, 1486, -1000, 1300, -1000, -1000,
	-1000, -1000, 1296, -1000, -1000, 1293, -1000, -1000, -1000, -1000,
	998, -1000, 1600, -1000, 1482, -1000, 922, 740, -1000, 1303,
	23423, 25893, 43, -1000, 2035, 819, -1000, 13, 589, 1911,
	2016, 25893, 22929, -1000, 1785, 991, -1000, -1000, 7595, -1000,
	1871, 25893, 2172, -1000, 25893, 2172, 2172, 1026, 27157, 1118,
	25893, 1118, -1000, -1000, 1118, -1000, 892, -1000, 25893, -1000,
	-1000, -1000, -1000, 40, 819, 1984, 803, -1000, -1000, -1000,
	-1000, 26387, 26387, 13042, 26387, -1000, 1048, -1000, -1000, 519,
	479, 494, -1000, -1000, 379, -1000, -1000, 589, -1000, -1000,
	-1000, 1783, 1068, -1000, -1000, 9077, -1000, 4621, 4621, 4621,
	-1000, -1000, 16006, -1000, -1000, 687, 589, 1931, 645, -1000,
	645, -1000, 2172, 6598, -1000, 19958, -1000, -1000, 22428, -1000,
	21934, 2172, -290, 702, -1000, 2020, 596, -1000, 1782, -1000,
	987, 1999, -1000, 587, -1000, 1067, 986, -1000, 596, 980,
	1990, 587, -1000, -1000, -1000, 877, -1000, -1000, -1000, -1000,
=======
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1584, 632, 1582, 1598, 2153, 1580,
	7553, -1000, -1000, 7553, 1337, 7059, -1000, -1000, -1000, 1576,
	989, 1574, -1000, -1000, -1000, 1572, 845, 1571, 1500, 1570,
	825, 7553, 1053, 1052, 7553, 7553, 7553, 7553, 1568, 7553,
	7553, 7553, 7553, 7553, 7553, 7553, -1000, 7553, 54, -1000,
	-1000, -1000, -1000, 1336, -1000, 1335, -1000, -1000, -1000, 1485,
	1485, -1000, 1333, -1000, -1000, -1000, -1000, 1332, -1000, -1000,
	1331, -1000, -1000, -1000, -1000, 1045, -1000, 1180, -1000, 1483,
	-1000, 878, 816, -1000, 1349, -1000, -1000, 23381, 25851, 46,
	-1000, 1986, 740, -1000, 11, 690, 1871, 1950, 25851, 22887,
	-1000, 1693, 1041, -1000, -1000, 7553, -1000, 1870, 25851, 2144,
	-1000, 25851, 2144, 2144, 1037, 27115, 1129, 25851, 1129, -1000,
	-1000, 1129, -1000, 975, -1000, 25851, -1000, -1000, -1000, -1000,
	45, 740, 2212, 752, -1000, -1000, -1000, -1000, 26345, 26345,
	13000, 26345, -1000, 1102, -1000, -1000, 576, 533, 608, -1000,
	-1000, 426, -1000, -1000, 690, -1000, -1000, -1000, 1692, 1134,
	-1000, -1000, 9035, -1000, 4579, 4579, 4579, -1000, -1000, 15964,
	-1000, -1000, 812, 690, 1892, 795, -1000, 795, -1000, 2144,
	6556, -1000, 19916, -1000, -1000, 22386, -1000, 21892, 2144, -291,
	780, -1000, 1966, 735, -1000, 1691, -1000, 1026, 1938, -1000,
	689, -1000, 1128, 1021, -1000, 735, 1015, 1937, 689, -1000,
	-1000, -1000, 962, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -25, -1000, -1000, 25893, 1505, 974, 1064, 616,
	-1000, 377, 865, 861, -1000, 21440, 96, 21440, -1000, 21440,
	-1000, -1000, 241, -1000, 25893, 2025, -1000, -1000, -1000, 1470,
	-303, 2022, -1000, -1000, -1000, -1000, -1000, 967, -1000, 346,
	2424, 2203, -1000, 9077, 9077, 1906, 1046, -1000, 7595, 1114,
	27552, 1053, 15018, 25893, -1000, -1000, 7595, 7595, -1000, 1869,
	1832, -1000, 7595, 7595, 1361, -1000, 25893, -1000, -1000, -1000,
	15018, -1000, 9077, -1000, 7595, 1804, -68, -68, 1684, 1649,
	1560, 966, -68, 1550, 1531, 1524, 1516, 1512, 1504, 1459,
	1600, -1000, -1000, 1586, 1579, 963, -1000, 956, 1577, 916,
	902, 6104, -1000, -106, 7595, 7595, 7595, 2007, -1000, -1000,
	1734, 1051, 1780, -73, 1040, -1000, 368, 21440, 252, -1000,
	1930, 186, -1000, 2016, -1000, 626, -1000, 1763, 25893, 785,
	-1000, 846, 27453, -1000, 25893, 1600, -1000, 1333, 1026, -1000,
	2172, 976, -1000, -1000, 2172, -1000, 1026, -1000, 1026, 1118,
	25893, -1000, -73, 1040, 368, 25893, 19958, 19958, 19958, 19958,
	-1000, 1971, 1960, -1000, 1968, 1957, 1978, 25893, 19958, 1734,
	-1000, 26772, -1000, -1000, -1000, -1000, -1000, 2011, 873, 2146,
	513, 7595, -1000, -1000, -1000, 472, 21440, 1480, 285, -1000,
	-1000, -1000, -1000, -1000, 25893, 25893, 2170, -1000, 640, -1000,
	-1000, 839, -1000, 2170, -1000, 1291, 1475, 1146, -283, 6104,
	248, 25893, -283, 25893, 6104, -1000, 25893, 223, -283, 2690,
	1272, -1000, -1000, -1000, 2179, 21440, 1333, 885, 1059, -1000,
	70, -1000, 120, 329, 1474, -1000, 391, 77, -1000, 1065,
	1470, 390, -1000, -1000, 9077, -1000, -1000, -1000, -1000, 1600,
	7595, 1576, -1000, 459, 459, 1571, -1000, 1692, 1756, -1000,
	1692, 1755, 1692, 459, 459, 1569, -1000, 1254, 1432, -1000,
	-1000, 1389, 1382, 7595, -1000, 1568, 2161, 690, -68, -1000,
	1754, -1000, -68, -68, -68, -68, -1000, -68, -68, -68,
	-68, -68, -68, -68, -1000, -1000, -1000, 1471, -1000, -1000,
	-1000, 1271, -1000, 1252, -1000, -60, -47, 1600, 1600, -1000,
	-1000, 2004, 2039, 2034, 10075, 1188, -1000, -1000, 20946, -1000,
	314, -1000, -1000, -1000, 425, 69, 1251, 309, -1000, 1519,
	25893, -1000, -1000, -1000, -1000, -1000, 1040, 1040, 1040, 10075,
	332, 615, 823, 19958, 25893, -1000, 19464, 1567, -1000, 589,
	2172, -1000, 25893, -1000, 2172, 2172, 1026, -1000, 1188, 20946,
	314, 769, -1000, 1054, 1925, 1927, 1925, -1000, -1000, -1000,
	-1000, 1959, -1000, 1956, -1000, -1000, 769, -1000, -1000, -1000,
	-1000, -1000, 513, -1000, 2109, 508, 508, 508, 1565, -1000,
	616, 1564, -1000, -1000, -1000, -1000, 2163, 2164, 20452, 2163,
	-1000, -290, 2200, -1000, 1557, 607, -283, -1000, -1000, 596,
	-1000, -1000, -1000, -283, -1000, 596, -1000, -1000, -1000, -1000,
	-1000, 1333, -1000, 115, -1000, -1000, -1000, -1000, -1000, -1000,
	-6, -1000, 25893, -1000, 1470, 1469, 73, 25893, -1000, 1600,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7595, -1000, -1000, -1000, 1378,
	-1000, -1000, 7595, -1000, 322, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1552, 1543, -288,
	-31, 2160, 2159, -1000, -1000, 236, 25893, 1542, 599, -1000,
	-1000, -1000, 27750, 526, -1000, 25893, 1140, 508, 363, 508,
	1125, 1753, -1000, -1000, -1000, 1464, 5, -1000, -1000, -1000,
	1462, 1461, 1250, -1000, -1000, 1297, 789, 33, -1000, -1000,
	-1000, -1000, -1000, -1000, 1739, 15018, 15512, 1456, 1525, 26387,
	19958, 19464, 713, -1000, 812, -1000, -1000, -1000, 2172, -1000,
	-1000, 2172, -1000, 5, -1000, 2144, 25893, 6104, -1000, -1000,
	7595, 1738, -1000, 7595, -1000, -1000, -1000, -1000, -1000, 1737,
	2008, -1000, -1000, -1000, -1000, -1000, -1000, 7595, 7595, -1000,
	-1000, -1000, 25893, -1000, 596, 596, 589, -1000, -1000, -93,
	-1000, -1000, -1000, -93, 1348, -1000, 1321, 2144, -1000, 2155,
	-1000, -1000, -290, 1455, -1000, 2154, 1448, 1346, -1000, 1734,
	1853, 10075, 28091, -1000, -1000, 25893, 25893, -1000, 25893, 25893,
	363, 7595, -1000, -1000, 211, -1000, -1000, 122, -1000, -1000,
	1295, 336, -1000, 17982, -1000, -1000, -1000, -1000, -1000, 67,
	2172, 713, 812, -1000, -1000, 874, -1000, -1000, -1000, 2124,
	-1000, -1000, 1600, 25893, 1600, 18970, -1000, 2153, 2151, 1600,
	586, 587, -1000, -61, -52, -1000, -1000, -1000, 47, 7595,
	-292, -1000, 1443, -36, -1000, -1000, 2038, 318, 27995, -1000,
	1040, 1040, 725, 1040, 1040, 1040, 1040, 214, 209, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1723, -1000, -1000, 28091, -1000, -1000, 1156,
	9077, -1000, -1000, 1428, 15512, 529, 438, 1721, -1000, 184,
	2198, -1000, 1103, 1098, -1000, 25893, -1000, 1718, 1806, 149,
	1699, -1000, 1697, 1694, 25893, 1207, 320, 1404, -1000, -1000,
	121, -1000, -1000, 866, -1000, 1692, 7595, -1000, -93, 2144,
	-1000, -1000, 862, 855, -1000, -1000, -1000, -1000, 371, -58,
	-52, -1000, 2150, -38, 2149, 2147, 1522, -1000, 3139, -1000,
	-1000, -1000, 586, -1000, 1691, -1000, 2145, 236, 154, 2140,
	1853, -1000, 1248, 1240, 1040, 1040, 1239, 1403, 1386, 1385,
	1040, 1040, 1237, 1383, 26772, 1211, 1208, 1203, 1292, 1363,
	608, 1280, 1224, 1212, 25893, 1686, 1345, -1000, -1000, 2424,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1200, 1682, -148, -1000, -1000, 1680, 17982, 264, 264,
	17982, 17982, 17982, 1678, 405, -1000, -8, -1000, -1000, -1000,
	17982, 2029, 1202, -1000, 2124, -1000, -1000, 18476, 1676, 1198,
	-31, 2139, -1000, 1346, 2138, 1346, 1346, -1000, -1000, 4127,
	-284, -71, 253, 25893, 1346, -1000, -1000, 2127, 232, -1000,
	-1000, -1000, 15018, 15018, -1000, -1000, -1000, -1000, 1353, 1350,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 242, 25893, 847, -1000, 1047, 1517, 7595, 1671,
	-203, 17982, 843, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	832, 830, 821, 17982, -1000, -1000, -1000, 180, -1000, 168,
	-1000, -1000, 2029, -1000, -1000, -1000, 2055, 14524, -63, -1000,
	1349, -1000, 1346, -1000, -1000, 1069, -1000, -1000, -1000, -1000,
	-1000, 808, -1000, -1000, 17488, 169, 240, 225, -1000, 350,
	-1000, -1000, -1000, -1000, -1000, -1000, 249, 805, -1000, 1345,
	1331, -1000, 1192, -1000, 1921, -1000, 46, 799, -1000, -1000,
	-1000, -1000, 790, -1000, -1000, 1040, 1326, 135, -1000, -1000,
	-1000, -1000, 25893, -1000, 782, -1000, -1000, -1000, 798, -1000,
	-1000, -1000, -1000, 4127, -1000, 25893, -1000, 25893, 165, 1194,
	9077, 1669, 9077, 1668, 170, 1664, -1000, -1000, -1000, -1000,
	-1000, 405, -1000, 1917, 1826, 2183, -1000, -1000, -1000, -1000,
	168, 168, 168, 168, 87, 1193, -1000, 1394, 563, -1000,
	1039, -1000, 16994, 25893, -1000, -1000, 780, 1651, 2126, -1000,
	1604, 25893, 1544, 25893, 1646, 1038, 9077, -1000, -1000, 2197,
	-1000, 2195, 484, 484, -1000, -1000, -1000, 25893, 5610, -1000,
	787, -1000, -1000, 298, 174, -1000, 750, -1000, 746, 16500,
	1180, 961, -1000, -1000, -1000, 1204, 188, -1000, -1000, -1000,
	1600, 25893, 723, -1000, 1392, 160, -1000, -1000, -1000, 707,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 298, 1983, -1000,
	1168, -1000, -1000, 1256, 450, -1000, -1000, 1256, 164, -1000,
	294, 1644, -1000, -1000, 688, -1000, 1355, 485, 7595, -1000,
	164, 1853, -1000, 7595, 667, -1000, 1853, 625, -1000, -1000,
}

var yyPgo = [...]int{
	0, 118, 2622, 200, 133, 131, 198, 2621, 2620, 2078,
	2077, 2619, 2618, 2617, 2616, 2615, 2614, 2613, 2612, 2611,
	2610, 2609, 2608, 2607, 2606, 2605, 2603, 2601, 194, 2600,
	2597, 2596, 2594, 2593, 2592, 2588, 2587, 2585, 2584, 2583,
	2582, 2581, 2580, 2579, 2578, 2577, 2576, 2575, 2569, 128,
	2566, 2058, 2563, 2560, 2559, 2558, 2557, 169, 2537, 2536,
	2535, 2534, 2533, 2532, 2531, 2529, 2525, 2524, 2523, 2522,
	2521, 2520, 125, 2519, 2517, 2515, 2513, 2508, 191, 179,
	58, 2507, 38, 56, 153, 208, 147, 206, 202, 146,
	130, 74, 2506, 2082, 2505, 139, 182, 106, 23, 2503,
	143, 2501, 111, 47, 31, 203, 110, 54, 65, 89,
	2500, 174, 85, 2499, 2496, 97, 2493, 61, 2490, 83,
	35, 87, 29, 2489, 2488, 2487, 75, 2473, 2472, 2471,
	2470, 142, 2469, 99, 55, 2468, 2467, 2463, 2461, 2460,
	28, 2458, 49, 2457, 2456, 2455, 2454, 64, 2452, 2451,
	12, 21, 18, 2450, 16, 3, 2445, 177, 95, 80,
	105, 2444, 414, 2441, 2440, 2439, 112, 2438, 377, 2437,
	2436, 2433, 2432, 9, 2431, 163, 2430, 2429, 67, 92,
	2428, 48, 151, 159, 2427, 2425, 103, 52, 196, 98,
	2421, 2420, 78, 171, 17, 40, 0, 156, 41, 2419,
	2416, 2413, 205, 158, 152, 183, 124, 204, 127, 2410,
	2389, 53, 2385, 121, 2382, 93, 7, 2380, 141, 2379,
	185, 140, 2378, 166, 2377, 164, 2, 117, 2376, 2371,
	26, 226, 2370, 2369, 2365, 138, 2364, 2362, 62, 123,
	2361, 2360, 2359, 25, 2356, 30, 20, 2355, 90, 2354,
	209, 2353, 176, 102, 145, 135, 108, 180, 184, 66,
	114, 1128, 104, 79, 19, 2352, 181, 2350, 212, 201,
	2349, 149, 2348, 193, 362, 168, 2347, 144, 8, 2345,
	2340, 2339, 10, 2337, 100, 2336, 2335, 24, 2334, 27,
	2333, 2332, 2331, 2330, 6, 2316, 2314, 2313, 1, 4,
	2312, 5, 173, 50, 96, 2311, 109, 197, 2310, 2309,
	2308, 2305, 2303, 216, 2302, 2301, 2300, 2299, 2298, 2295,
	2293, 2292, 101, 39, 2291, 2289, 2288, 2275, 73, 115,
	2269, 274, 167, 2268, 33, 2267, 2266, 51, 2264, 34,
	2263, 2262, 2261, 14, 155, 2260, 2258, 15, 2257, 2255,
	11, 13, 2254, 2252, 60, 2251, 45, 32, 69, 76,
	2250, 22, 63, 107, 2249, 2248, 199, 192, 165, 2244,
	119, 188, 210, 2243, 170, 2242, 2240, 2239, 2238, 2237,
	2235, 2234, 1135, 2233, 2232, 189, 59, 178, 88, 2230,
	2227, 2226, 70, 116, 94, 86, 160, 2223, 150, 2222,
	2221, 84, 2220, 2219, 2217, 2216, 2215, 186, 136, 2214,
}

//line mysql_sql.y:8025
=======
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -22,
	-1000, -1000, 25851, 1482, 1013, 1113, 773, -1000, 408, 959,
	955, -1000, 21398, 91, 21398, -1000, 21398, -1000, -1000, 219,
	-1000, 25851, 1975, -1000, -1000, -1000, 1462, -304, 1973, -1000,
	-1000, -1000, -1000, -1000, 1008, -1000, 376, 3005, 2495, -1000,
	9035, 9035, 2148, 1147, -1000, 7553, 1154, 27393, 1058, 14976,
	25851, -1000, -1000, 7553, 7553, -1000, 2136, 2117, -1000, 7553,
	7553, 1437, -1000, 25851, -1000, -1000, -1000, 14976, -1000, 9035,
	-1000, 7553, 2110, -83, -83, 2084, 2074, 2054, 996, -83,
	2012, 1941, 1859, 1838, 1827, 1800, 1656, 1180, -1000, -1000,
	1567, 1565, 995, -1000, 990, 1563, 985, 981, 6062, -1000,
	-130, 7553, 7553, 7553, 1946, -1000, -1000, 1669, 1163, 1690,
	-69, 1115, -1000, 375, 21398, 310, -1000, 1891, 333, -1000,
	1950, -1000, 706, -1000, 1689, 25851, 855, -1000, 952, 298,
	-1000, 25851, 1180, -1000, 1365, 1037, -1000, 2144, 927, -1000,
	-1000, 2144, -1000, 1037, -1000, 1037, 1129, 25851, -1000, -69,
	1115, 375, 25851, 19916, 19916, 19916, 19916, -1000, 1915, 1914,
	-1000, 1917, 1913, 1926, 25851, 19916, 1669, -1000, 26730, -1000,
	-1000, -1000, -1000, -1000, 1847, 969, 2380, 548, 7553, -1000,
	-1000, -1000, 529, 21398, 1478, 288, -1000, -1000, -1000, -1000,
	-1000, 25851, 25851, 2139, -1000, 787, -1000, -1000, 951, -1000,
	2139, -1000, 1328, 1476, 1191, -284, 6062, 246, 25851, -284,
	25851, 6062, -1000, 25851, 224, -284, 2648, 1326, -1000, -1000,
	-1000, 2146, 21398, 1365, 1002, 1106, -1000, 72, -1000, 106,
	320, 1471, -1000, 441, 73, -1000, 1127, 1462, 436, -1000,
	-1000, 9035, -1000, -1000, -1000, -1000, 1180, 7553, 1561, -1000,
	515, 515, 1560, -1000, 1639, 1685, -1000, 1639, 1683, 1639,
	515, 515, 1559, -1000, 1246, 1642, -1000, -1000, 1626, 1589,
	7553, -1000, 1543, 2426, 883, -83, -1000, 1678, -1000, -83,
	-83, -83, -83, -1000, -83, -83, -83, -83, -83, -83,
	-83, -1000, -1000, -1000, 1469, -1000, -1000, -1000, 1322, -1000,
	1321, -1000, -64, -42, 1180, 1180, -1000, -1000, 1933, 1994,
	1985, 10033, 1252, -1000, -1000, 20904, -1000, 311, -1000, -1000,
	-1000, 422, 120, 1320, 301, -1000, 1506, 25851, -1000, -1000,
	-1000, -1000, -1000, 1115, 1115, 1115, 10033, 365, 733, 935,
	19916, 25851, -1000, 19422, 1542, -1000, 690, 2144, -1000, 25851,
	-1000, 2144, 2144, 1037, -1000, 1252, 20904, 311, 871, -1000,
	1123, 1869, 1890, 1869, -1000, -1000, -1000, -1000, 1887, -1000,
	1841, -1000, -1000, 871, -1000, -1000, -1000, -1000, -1000, 548,
	-1000, 2069, 577, 577, 577, 1541, -1000, 773, 1531, -1000,
	-1000, -1000, -1000, 2141, 2134, 20410, 2141, -1000, -291, 2174,
	-1000, 1529, 772, -284, -1000, -1000, 735, -1000, -1000, -1000,
	-284, -1000, 735, -1000, -1000, -1000, -1000, -1000, 1365, -1000,
	99, -1000, -1000, -1000, -1000, -1000, -1000, -4, -1000, 25851,
	-1000, 1462, 1461, 71, 25851, -1000, 1180, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7553, -1000, -1000, -1000, 1573, -1000, -1000, 7553,
	-1000, 364, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1528, 1527, -289, -28, 2133, 2129,
	-1000, -1000, 239, 25851, 1520, 739, -1000, -1000, -1000, 27591,
	808, -1000, 25851, 1190, 577, 361, 577, 1189, 1676, -1000,
	-1000, -1000, 1453, 7, -1000, -1000, -1000, 1451, 1449, 1319,
	-1000, -1000, 1330, 954, 32, -1000, -1000, -1000, -1000, -1000,
	-1000, 1675, 14976, 15470, 1448, 1519, 26345, 19916, 19422, 866,
	-1000, 917, -1000, -1000, -1000, 2144, -1000, -1000, 2144, -1000,
	7, -1000, 2111, 25851, 6062, -1000, -1000, 7553, 1671, -1000,
	7553, -1000, -1000, -1000, -1000, -1000, 1670, 1999, -1000, -1000,
	-1000, -1000, -1000, -1000, 7553, 7553, -1000, -1000, -1000, 25851,
	-1000, 735, 735, 690, -1000, -1000, -106, -1000, -1000, -1000,
	-106, 1510, -1000, 1499, 2111, -1000, 2128, -1000, -1000, -291,
	1445, -1000, 2115, 1436, 1370, -1000, 1669, 27773, 10033, 1307,
	-1000, -1000, 25851, 25851, -1000, 25851, 25851, 361, 7553, -1000,
	-1000, 215, -1000, -1000, 141, -1000, -1000, 1279, 342, -1000,
	17940, -1000, -1000, -1000, -1000, -1000, 76, 2144, 866, 917,
	-1000, -1000, 997, -1000, -1000, -1000, 2087, -1000, -1000, 1180,
	25851, 1180, 18928, -1000, 2112, 2107, 1180, 632, 689, -1000,
	-71, -35, -1000, -1000, -1000, 56, 7553, -293, -1000, 1435,
	-31, -1000, -1000, 1992, 349, 27675, -1000, 1115, 1115, 710,
	1115, 1115, 1115, 1115, 250, 243, 1115, 1115, 1115, 1115,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1663, -1000, -1000, 1307, -1000, -1000, 1200, 9035, -1000, -1000,
	1430, 15470, 527, 607, 1661, -1000, 228, 2173, -1000, 1187,
	1186, -1000, 25851, -1000, 1659, 1849, 177, 1653, -1000, 1645,
	1640, 25851, 1492, 319, 1429, -1000, -1000, 140, -1000, -1000,
	966, -1000, 1639, 7553, -1000, -106, 2111, -1000, -1000, 964,
	953, -1000, -1000, -1000, -1000, 393, -48, -35, -1000, 2104,
	-45, 2103, 2101, 1511, -1000, 3097, -1000, -1000, -1000, 632,
	-1000, 1638, -1000, 2100, 239, 180, 2098, 27773, -1000, 1316,
	1315, 1115, 1115, 1311, 1428, 1410, 1386, 1115, 1115, 1309,
	1385, 26730, 1304, 1303, 1272, 1275, 1383, 544, 1267, 1265,
	1249, 25851, 1636, 1361, -1000, -1000, 3005, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1270, 1632,
	-109, -1000, -1000, 1610, 17940, 261, 261, 17940, 17940, 17940,
	1609, 404, -1000, -7, -1000, -1000, -1000, 17940, 1970, 1473,
	-1000, 2087, -1000, -1000, 18434, 1607, 1262, -28, 2096, -1000,
	1370, 2094, 1370, 1370, -1000, -1000, 4085, -285, -68, 293,
	25851, 1370, -1000, -1000, 2092, 233, -1000, -1000, -1000, 14976,
	14976, -1000, -1000, -1000, -1000, 1381, 1380, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 277,
	25851, 941, -1000, 1122, 1487, 7553, 1605, -210, 17940, 931,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 918, 910, 893,
	17940, -1000, -1000, -1000, 220, -1000, 149, -1000, -1000, 1970,
	-1000, -1000, -1000, 2027, 14482, -57, -1000, 1371, -1000, 1370,
	-1000, -1000, 1157, -1000, -1000, -1000, -1000, -1000, 881, -1000,
	-1000, 17446, 191, 221, 216, -1000, 367, -1000, -1000, -1000,
	-1000, -1000, -1000, 270, 877, -1000, 1361, 1351, -1000, 1446,
	-1000, 1889, -1000, 44, 870, -1000, -1000, -1000, -1000, 824,
	-1000, -1000, 1115, 1268, 164, -1000, -1000, -1000, -1000, 25851,
	-1000, 810, -1000, -1000, -1000, 908, -1000, -1000, -1000, -1000,
	4085, -1000, 25851, -1000, 25851, 189, 1247, 9035, 1603, 9035,
	1602, 208, 1600, -1000, -1000, -1000, -1000, -1000, 404, -1000,
	1883, 1879, 2166, -1000, -1000, -1000, -1000, 149, 149, 149,
	149, 83, 1242, -1000, 1376, 610, -1000, 1079, -1000, 16952,
	25851, -1000, -1000, 803, 1594, 2091, -1000, 2292, 25851, 1947,
	25851, 1593, 1078, 9035, -1000, -1000, 2170, -1000, 2156, 487,
	487, -1000, -1000, -1000, 25851, 5568, -1000, 906, -1000, -1000,
	347, 201, -1000, 789, -1000, 777, 16458, 1213, 1924, -1000,
	-1000, -1000, 1263, 222, -1000, -1000, -1000, 1180, 25851, 775,
	-1000, 1440, 185, -1000, -1000, -1000, 770, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 347, 1928, -1000, 1208, -1000, -1000,
	1215, 465, -1000, -1000, 1215, 188, -1000, 316, 1479, -1000,
	-1000, 747, -1000, 1254, 565, 7553, -1000, 188, 27773, -1000,
	7553, 724, -1000, 27773, 722, -1000, -1000,
}

var yyPgo = [...]int{
	0, 117, 2711, 202, 147, 145, 198, 2699, 2696, 2035,
	2019, 2695, 2677, 2676, 2675, 2674, 2673, 2672, 2656, 2651,
	2649, 2647, 2646, 2645, 2644, 2643, 2642, 2641, 196, 2639,
	2637, 2636, 2635, 2634, 2633, 2632, 2630, 2629, 2628, 2627,
	2626, 2625, 2624, 2623, 2622, 2608, 2604, 2603, 2602, 129,
	2601, 2010, 2600, 2595, 2594, 2592, 2591, 167, 2590, 2589,
	2587, 2586, 2585, 2577, 2576, 2573, 2572, 2570, 2567, 2566,
	2565, 2564, 125, 2563, 2558, 2555, 2554, 2553, 2539, 191,
	175, 57, 2537, 46, 48, 152, 201, 137, 206, 208,
	143, 122, 68, 2533, 2077, 2532, 131, 182, 113, 25,
	2531, 140, 2530, 114, 40, 39, 197, 99, 54, 71,
	94, 2529, 171, 79, 2528, 2527, 91, 2526, 61, 2524,
	74, 65, 87, 28, 2522, 2520, 2515, 73, 2514, 2513,
	2512, 2511, 136, 2510, 97, 56, 2508, 2507, 2506, 2505,
	2504, 34, 2503, 53, 2502, 2501, 2500, 2499, 62, 2496,
	2495, 12, 17, 21, 2493, 16, 3, 2492, 172, 59,
	77, 109, 2491, 402, 2490, 2489, 2488, 116, 2487, 376,
	2485, 2483, 2482, 2480, 9, 2479, 168, 2478, 2477, 75,
	95, 2476, 58, 150, 158, 2474, 2473, 105, 52, 80,
	100, 2471, 2470, 86, 173, 29, 32, 0, 163, 41,
	2467, 2466, 2464, 212, 154, 153, 185, 128, 203, 121,
	2463, 2462, 51, 2461, 118, 2460, 101, 8, 2459, 142,
	2458, 179, 134, 2457, 162, 2454, 223, 2, 112, 2452,
	2451, 26, 225, 2450, 2448, 2447, 139, 2446, 2445, 84,
	120, 2444, 2442, 2438, 27, 2431, 35, 20, 2430, 89,
	2428, 213, 2427, 186, 106, 155, 127, 111, 180, 184,
	66, 119, 1208, 110, 76, 18, 2426, 183, 2420, 211,
	192, 2419, 144, 2405, 194, 360, 165, 2404, 135, 10,
	2403, 2402, 2400, 7, 2394, 92, 2392, 2387, 19, 2386,
	23, 2385, 2379, 2378, 2374, 6, 2373, 2370, 2369, 1,
	4, 2368, 5, 161, 42, 98, 2366, 96, 195, 2363,
	2362, 2361, 2359, 2352, 210, 2351, 2347, 2346, 2344, 2342,
	2329, 2325, 2324, 88, 30, 2323, 2321, 2320, 2319, 64,
	107, 2317, 279, 164, 2316, 36, 2315, 2313, 24, 2310,
	31, 2306, 2304, 2303, 14, 141, 2286, 2277, 15, 2276,
	2273, 11, 13, 2270, 2263, 60, 2262, 50, 33, 67,
	72, 2261, 22, 63, 104, 2259, 2256, 200, 193, 159,
	2255, 132, 190, 204, 2253, 170, 2251, 2250, 2249, 2244,
	2237, 2235, 2234, 1178, 2233, 2231, 187, 55, 177, 85,
	2230, 2224, 2221, 70, 123, 90, 81, 157, 2220, 149,
	2219, 2213, 78, 2212, 2211, 2205, 2194, 2193, 2192, 2191,
	188, 160, 2188,
}

//line mysql_sql.y:8089
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 408, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 77, 406, 406, 406, 407, 407, 76, 76,
	66, 65, 354, 354, 353, 353, 352, 352, 351, 351,
	351, 350, 350, 350, 349, 349, 348, 348, 347, 347,
	345, 345, 346, 344, 343, 343, 343, 341, 341, 339,
	339, 340, 340, 334, 334, 337, 337, 335, 335, 335,
	335, 338, 333, 333, 333, 332, 332, 64, 64, 64,
	264, 264, 63, 63, 278, 278, 278, 278, 278, 276,
	276, 276, 276, 276, 276, 275, 275, 274, 274, 279,
	279, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 58, 58, 58, 58, 61, 61, 61, 62, 273,
	273, 273, 59, 60, 60, 263, 263, 268, 268, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 272, 272, 272, 270, 270, 269, 269, 271, 271,
	52, 52, 52, 55, 54, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 53, 53, 53, 53, 53, 53,
	50, 50, 50, 50, 50, 49, 49, 51, 51, 261,
	261, 260, 69, 69, 69, 69, 69, 69, 69, 68,
	68, 71, 71, 70, 57, 57, 57, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 378, 378,
	378, 380, 380, 201, 202, 409, 200, 200, 200, 374,
	374, 375, 376, 377, 377, 377, 67, 7, 7, 47,
	392, 392, 48, 399, 399, 314, 314, 214, 214, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 317, 318, 210, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 35, 34, 34, 250, 250,
	33, 410, 410, 184, 184, 41, 42, 43, 32, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	328, 328, 412, 412, 412, 44, 45, 313, 313, 313,
	39, 38, 37, 36, 36, 31, 31, 30, 30, 207,
	207, 209, 209, 205, 411, 411, 290, 290, 208, 208,
	29, 29, 29, 206, 206, 183, 204, 204, 204, 8,
	8, 6, 11, 11, 11, 11, 11, 11, 11, 11,
	17, 19, 258, 258, 255, 18, 14, 13, 16, 12,
	15, 5, 5, 5, 5, 9, 9, 10, 91, 91,
	122, 122, 387, 387, 383, 383, 384, 384, 384, 385,
	385, 386, 386, 72, 322, 322, 322, 322, 322, 322,
	4, 321, 321, 321, 321, 321, 321, 405, 405, 363,
	363, 363, 364, 112, 112, 107, 107, 323, 323, 228,
	365, 365, 331, 331, 330, 330, 329, 329, 110, 110,
	111, 111, 94, 94, 80, 80, 336, 336, 336, 336,
	342, 342, 311, 311, 148, 148, 177, 177, 178, 178,
	84, 84, 85, 85, 85, 85, 85, 85, 371, 371,
	373, 373, 372, 109, 109, 105, 105, 106, 106, 106,
	104, 104, 103, 102, 102, 101, 99, 99, 99, 100,
	100, 100, 87, 87, 86, 86, 86, 86, 86, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 88, 88, 379, 379, 379, 315, 315, 315, 320,
	320, 160, 160, 161, 161, 159, 159, 89, 89, 90,
	90, 90, 90, 158, 158, 157, 92, 92, 98, 97,
	97, 93, 93, 93, 93, 168, 168, 167, 167, 167,
	167, 75, 78, 78, 79, 115, 115, 166, 165, 165,
	165, 114, 114, 113, 113, 108, 108, 96, 96, 96,
	96, 164, 95, 162, 404, 404, 403, 403, 402, 400,
	400, 400, 401, 401, 401, 401, 356, 356, 356, 356,
	356, 193, 193, 193, 199, 199, 192, 192, 192, 192,
	192, 203, 198, 198, 194, 194, 195, 195, 195, 3,
	3, 3, 3, 23, 23, 23, 23, 27, 27, 381,
	381, 20, 388, 391, 389, 389, 393, 393, 393, 394,
	394, 394, 395, 395, 21, 390, 396, 396, 396, 259,
	259, 256, 257, 257, 254, 253, 253, 253, 398, 398,
	397, 397, 397, 196, 196, 22, 249, 249, 251, 252,
	252, 243, 243, 243, 243, 26, 247, 247, 248, 248,
	248, 248, 248, 244, 244, 246, 246, 242, 242, 242,
	242, 242, 25, 241, 241, 239, 239, 237, 237, 238,
	238, 236, 236, 236, 240, 240, 24, 24, 82, 81,
	81, 81, 180, 180, 179, 179, 83, 316, 316, 280,
	280, 281, 281, 281, 284, 284, 296, 296, 297, 297,
	295, 295, 302, 302, 301, 301, 300, 300, 299, 299,
	298, 298, 298, 298, 293, 293, 292, 292, 282, 282,
	282, 282, 282, 283, 283, 283, 291, 291, 294, 294,
	139, 139, 140, 140, 140, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 361, 361, 362, 142, 142, 142,
	146, 146, 146, 146, 146, 146, 141, 141, 143, 143,
	123, 123, 121, 121, 116, 116, 117, 117, 118, 118,
	119, 119, 120, 120, 120, 120, 120, 120, 266, 266,
	359, 359, 360, 360, 355, 355, 355, 358, 358, 358,
	358, 358, 357, 357, 124, 175, 175, 175, 197, 197,
	197, 174, 174, 174, 138, 138, 137, 137, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 265, 265, 211, 211, 212, 212, 155,
	154, 154, 154, 154, 154, 152, 153, 151, 151, 151,
	151, 151, 150, 150, 149, 149, 149, 245, 245, 147,
	147, 145, 145, 145, 144, 144, 144, 303, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 220, 220, 225, 225, 370, 370, 369, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	134, 134, 134, 288, 288, 288, 288, 288, 289, 289,
	289, 286, 286, 287, 287, 229, 230, 230, 285, 285,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 327, 327, 327, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 382, 382, 382, 366, 366, 366, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 172, 172, 172, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 231, 231, 232, 232, 324, 324, 324, 324,
	324, 324, 325, 325, 326, 326, 326, 326, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 218, 169, 169,
	169, 233, 226, 226, 227, 227, 221, 221, 221, 221,
	221, 221, 221, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 222, 222, 224, 224, 235, 235, 235,
	234, 234, 234, 234, 234, 234, 234, 136, 136, 136,
	136, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 127, 127, 127, 127, 131, 131, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 130, 130, 130, 130,
	130, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 73, 74, 74,
	129, 176, 176, 304, 304, 307, 307, 305, 305, 306,
	308, 308, 308, 309, 309, 309, 310, 310, 310, 312,
	312, 182, 182, 182, 189, 189, 181, 181, 190, 190,
	191, 191, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 4, 0, 1, 1, 0, 1, 6, 8,
	9, 9, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 0, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 1, 1, 1, 3, 2, 3, 1, 1,
	1, 6, 8, 0, 1, 1, 1, 1, 5, 5,
	0, 1, 1, 3, 3, 3, 6, 7, 4, 4,
	7, 8, 0, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
=======
	3, 2, 1, 1, 1, 1, 6, 1, 1, 7,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 2, 2, 4, 1,
	1, 1, 3, 2, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 6, 7, 4, 4, 7, 8, 0,
	2, 0, 2, 2, 1, 1, 1, 1, 0, 1,
	4, 4, 5, 1, 3, 1, 1, 3, 5, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 3, 1, 4, 6, 4, 4, 4,
	3, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 11, 0,
	1, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 11, 9, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 6,
	6, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 5, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 6, 2, 2, 4, 6, 4,
	2, 2, 0, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 3, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 1, 1, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 1, 3, 4, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -408, -2, -1, -3, -76, -4, -72, -5, -6,
	-8, -56, -68, -70, -71, -28, -7, -67, -49, -50,
<<<<<<< HEAD
	-52, -58, -63, -64, -65, -66, -73, -74, -75, -83,
	-23, -22, -21, -20, 391, 12, 433, -9, -10, -370,
	-11, 230, -199, -200, -201, -406, -29, -30, -31, -36,
	-37, -38, -39, -44, -45, -46, -32, -33, -34, -35,
	-41, -42, -43, -48, -47, 207, -51, 61, -53, -54,
	-55, -59, -60, -61, -62, 322, 328, 381, 390, 513,
	514, 46, -84, -86, -24, -25, -26, -27, 203, 14,
	466, -12, -15, -13, -16, -14, -18, -19, -17, 225,
	224, 37, 288, 289, 326, 223, 204, 13, 135, 136,
	138, 139, 30, -85, 67, 205, -87, 10, 515, 426,
	-93, 38, -120, -196, 70, -184, -187, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 436, 304, 463, 242, 266, 352, 269,
	276, 135, 154, 148, 176, 168, 143, 246, 281, 247,
	77, 138, 419, 87, 402, 378, 141, 261, 263, 265,
	268, 248, 164, 159, 260, 244, 513, 157, 249, 39,
	250, 181, 251, 252, 468, 398, 303, 404, 273, 376,
	158, 399, 264, 401, 183, 187, 411, 328, 152, 153,
	406, 413, 180, 222, 42, 465, 234, 414, 185, 179,
	175, 422, 277, 275, 178, 151, 174, 245, 50, 189,
	188, 190, 372, 373, 374, 375, 253, 254, 316, 410,
	171, 160, 307, 144, 22, 417, 229, 403, 329, 255,
	270, 278, 184, 186, 236, 241, 467, 380, 240, 274,
	415, 156, 233, 262, 228, 418, 145, 322, 331, 256,
	139, 267, 412, 421, 49, 344, 150, 142, 219, 136,
	238, 243, 11, 257, 258, 259, 280, 279, 271, 172,
	235, 177, 162, 149, 173, 137, 237, 420, 345, 511,
	305, 361, 170, 167, 239, 212, 416, 405, 140, 365,
	346, 165, 282, 508, 509, 510, 317, 302, 283, 284,
	163, 226, 397, 285, 287, 371, 295, 347, 379, 353,
	348, 196, -93, -51, -10, -9, -85, -86, -120, 210,
	-203, 23, 376, -57, 377, 207, 67, -196, -5, -4,
	-72, -49, -83, -202, -196, 288, -202, 210, -196, 240,
	360, -313, 215, -274, -248, 241, -273, -250, -276, -251,
	31, 203, 205, 204, 237, 14, 326, 211, 12, 10,
	327, 223, 24, 25, 27, 13, 328, 330, 28, 331,
	334, 335, 336, 41, 339, 340, 230, 70, 73, 248,
	248, -226, -220, 94, 231, -222, -215, -216, -218, -350,
	-344, -214, 67, 119, 120, 127, 95, -217, -302, 35,
	97, 473, 434, -169, -170, -171, -172, -196, -345, -343,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	131, 132, -86, 70, -365, 481, -185, 501, 482, 500,
	46, -318, -325, 209, -323, 166, 226, 162, 12, 125,
	371, 130, 163, 478, 497, 436, 504, 475, 476, 470,
	471, 472, 474, 483, 485, 496, -326, 492, 502, 503,
	72, 71, 495, 494, 484, 479, 480, 486, 469, 477,
	487, 488, 493, 498, 499, 310, 87, 311, 312, 426,
	306, 313, 215, 376, 55, 314, 315, 316, 317, 318,
	433, 319, 56, 320, 309, 230, 361, 321, 165, 182,
	438, 437, 439, 430, 427, 425, 428, 429, 431, 432,
	489, 490, 491, -270, -268, -196, -77, -78, 506, -102,
	-103, -162, 19, 6, 7, 8, 9, -315, 304, 361,
	240, -242, -240, 285, 337, 220, 219, 88, 426, 209,
	-382, -383, 200, 201, 202, -372, 459, -371, -196, 312,
	26, 210, 323, 408, 409, -40, -327, -312, 405, 404,
	-207, 403, 396, 407, 398, 203, 460, -181, 347, 379,
	236, 423, 424, 324, 380, 411, 412, 399, 87, 169,
	166, 304, 361, -382, 140, 137, -261, 140, 93, 145,
	144, -261, 240, 360, 40, -267, 371, -266, -268, 411,
	412, 422, 71, 72, 410, -181, 87, -103, -162, -102,
	-84, -86, -370, 304, 361, 240, 211, 210, 212, 426,
	288, -314, -378, 31, -319, 197, 198, 199, 32, 33,
	-1, -197, -194, -187, 70, 71, 72, -109, 232, -120,
	133, -109, -103, -102, -103, -120, -173, -196, 378, 103,
	-57, -57, 377, -373, -374, -375, -377, 207, 377, 376,
	133, 15, -202, 65, -120, -250, 240, -274, -248, 35,
	64, 134, 213, 134, 64, 67, 324, 304, 361, 325,
	426, 210, 337, 212, 240, 338, 304, 361, 210, 212,
	426, 240, 304, 210, 212, 361, 240, 338, 396, 397,
	212, 26, 329, 332, 333, 397, -331, 422, -331, 134,
	93, 90, 91, 92, -220, 110, -233, 103, 104, 105,
	106, 107, 108, 109, 116, 115, 126, 119, 120, 121,
	122, 123, 124, 125, 117, 118, 113, 94, 111, 112,
	96, -86, -220, -226, -218, -218, -218, -218, -302, -224,
	-220, 67, 67, 133, 73, -220, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -324, 67, 67, -230, -231,
	67, 67, 73, 73, 67, 67, 67, -218, 73, -231,
	-231, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 134, -126, -130, -127,
	-129, -128, -132, -131, 166, 167, 130, 170, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 30, 182,
	226, 162, 163, 164, 165, 183, 148, 168, 464, 191,
	149, 192, 150, 193, 151, 194, 152, 153, 195, 154,
	157, 158, 159, 156, 133, -103, 134, 67, -79, 38,
	-105, 21, -87, -86, 20, 31, 32, 31, 32, 31,
	32, 31, 32, -380, 210, 459, -238, 215, -238, -238,
	211, -238, 210, -384, 147, 134, -372, -108, 67, -206,
	111, 23, 238, 238, 275, -206, -409, 211, 406, 42,
	239, 238, -104, -105, -104, 400, 397, -289, 401, 402,
	-207, -206, -206, -207, 210, 212, 426, -407, -408, 15,
	113, 238, -407, 30, 30, -313, -313, -385, 214, 415,
	466, 143, 144, 145, -250, 240, 240, 134, 103, 23,
	-269, 103, 114, -268, -268, -268, -269, -269, -140, 40,
	-195, 130, -196, 73, -140, 40, -104, -87, -86, 68,
	68, -313, -313, -313, -313, -313, -313, -313, -202, -88,
	-89, 121, -220, -196, -88, 38, 397, -320, 46, -83,
	67, 30, 67, -196, -321, 46, -83, 67, 30, -104,
	-79, -105, 133, 78, 73, -57, 68, 134, -376, 84,
	85, -379, 180, 172, -196, -69, 73, -3, -4, -5,
	-6, -28, -49, -83, -346, -344, 67, 31, 370, 64,
	15, -275, 210, 426, 323, 236, 212, 304, -273, -257,
	-254, -252, -195, -250, -253, -252, -278, -173, 397, -80,
	382, 287, -80, -220, -220, -220, -220, -220, 83, 94,
	302, 84, 85, -215, -234, 31, 283, 284, -216, -216,
	-216, -216, -216, -216, -216, -216, -216, -216, -216, -216,
	-223, -232, -302, 67, 113, 111, 112, 96, -218, -216,
	-216, 68, 134, -369, -368, 98, -220, -220, -196, -366,
	-367, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 314, 309, 315, 313, 306, 321, 316, 317,
	165, 457, 458, 451, 452, 453, 454, 455, 456, -225,
	-226, -225, -220, -366, -225, -168, 32, 31, -168, -220,
	-381, 300, 299, 301, -106, -196, -225, 68, 68, 68,
	78, -226, -225, -216, -225, -367, -168, -226, -226, -168,
	-168, -168, -168, 121, -168, -168, -168, -168, -168, -168,
	-168, -268, 40, -309, 345, 344, -303, -305, 67, -304,
	67, -304, -303, -303, 67, 67, -306, 67, -306, -306,
	-303, -307, 67, -307, -308, 67, -307, -196, -104, -78,
	-329, -328, -220, 40, 507, -79, -220, -101, -100, -220,
	212, -238, -387, -196, 94, -258, -255, -252, -248, -194,
	-196, -238, -385, -371, 34, -107, -196, -158, 16, -218,
	-252, -407, -206, -158, -408, -206, -206, -208, -408, -204,
	-408, 397, -158, -158, -289, -205, -196, -205, -238, -183,
	-182, -196, -183, -387, -258, -96, -91, -95, -92, -97,
	-161, -163, -94, 67, -120, -86, -196, 416, 417, 141,
	144, 143, 31, 370, -272, 370, 31, -248, -266, -262,
	73, 371, -253, -271, 64, 130, -328, -269, -269, -269,
	-271, -271, 129, -79, -387, -257, -248, -196, -122, -120,
	-122, -197, -157, 134, -156, 15, -191, -196, 34, 73,
	133, -157, 73, -122, -404, 64, -322, -227, -364, 506,
	-111, 68, -106, -362, -363, -106, -110, -196, -322, -111,
	68, -362, -79, -79, -189, -190, -180, -186, -193, -194,
	-187, 208, 31, 93, 34, 36, 310, 342, 96, 130,
	20, 97, 166, 129, 312, 434, 311, 203, 59, 437,
	439, 438, 427, 425, 363, 367, 369, 366, 426, 396,
	40, 14, 37, 224, 32, 33, 123, 205, 100, 101,
	227, 35, 225, 85, 44, 23, 62, 15, 17, 18,
	313, 362, 215, 214, 113, 382, 211, 57, 12, 132,
	38, 110, 364, 53, 89, 45, 55, 111, 21, 428,
	429, 41, 381, 390, 462, 231, 125, 314, 315, 60,
	94, 370, 83, 43, 64, 90, 19, 58, 112, 206,
	433, 56, 368, 318, 320, 330, 459, 319, 209, 407,
	10, 309, 435, 30, 223, 54, 210, 99, 213, 84,
	230, 6, 88, 13, 61, 65, 430, 431, 432, 46,
	98, 16, 321, 466, 383, 384, 385, 386, 387, 388,
	389, 191, 192, 193, 194, 195, 272, 218, 216, 220,
	221, 506, 507, 197, 198, 299, 301, 169, 200, 201,
	202, 232, 147, 7, 349, 350, 351, 354, 355, 356,
	357, 358, 359, 360, 514, 391, 392, 393, 394, 395,
	408, 409, 23, -57, -374, 133, 134, -107, -275, -256,
	-253, -277, 121, 70, -263, 134, 466, 516, 71, 213,
	-397, -396, 362, 68, 134, -332, 214, 433, 73, 517,
	196, -332, 83, 302, 84, 85, -302, -226, -223, -218,
	-216, -216, -221, 227, 93, -220, -219, -368, 100, -220,
	34, 134, 65, 133, 68, 68, 15, 15, 68, -220,
	-220, 68, 15, 15, -220, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -220, 68, 68, -220, -220,
	-220, -226, 68, -220, -220, -220, -220, -220, -220, -220,
	-220, -311, 346, 78, 78, -175, 73, -175, 78, 78,
	78, 134, 68, 73, 134, 22, 134, -98, 36, 37,
	-120, 215, -120, -390, 349, 35, -398, 134, 40, -396,
	-241, 65, -236, -237, -235, -239, 40, -120, 15, -90,
	-121, -196, 67, 68, 134, -220, -249, 65, -183, -158,
	-120, -196, -158, -158, -206, -197, -208, -203, -208, -204,
	133, -182, -391, 349, -398, 30, -164, -165, -166, -167,
	53, 57, 59, 54, 55, 56, 60, 30, 134, -192,
	-198, 34, -193, 73, -194, -187, -192, -86, -91, -96,
	-192, 67, 142, 145, 145, 144, 213, 67, 103, -271,
	-271, -271, 40, -195, 64, 134, -158, -89, -91, -196,
	73, -196, 121, -158, -147, 509, 38, 39, 134, 67,
	68, 134, 46, 134, 103, 68, 134, 68, 46, 133,
	378, -196, -344, 68, -277, 134, 213, 133, 133, -254,
	328, -195, -256, 20, 466, -173, 38, -179, -178, 73,
	517, 38, 68, -221, 93, -218, -215, 68, 101, -220,
	99, -124, -126, 344, 345, -125, -131, 130, 166, 226,
	165, 164, 162, 344, 345, -140, -196, -220, -220, 68,
	68, -220, -220, 15, -196, -140, -216, -220, 68, -284,
	392, -284, 68, 68, 68, 68, -284, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 134, 68, 68,
	68, 134, 68, 134, -328, -335, 401, -220, -220, -100,
	-99, 43, -108, 94, 67, -393, 403, 351, -188, 103,
	-213, -212, 305, 41, -316, 371, 357, 358, -255, 240,
	64, 294, 295, 296, 297, -235, -181, 129, 251, 67,
	-120, -90, -196, 15, 134, -386, 133, -1, -196, -248,
	-206, -158, -408, -158, -206, -206, -208, -196, -393, -188,
	-213, -260, -259, -173, -95, -95, -95, -95, 53, 53,
	53, 58, 53, 58, 53, -166, -260, -97, -108, -198,
	68, -403, -402, -401, -399, 61, 214, 62, -225, 145,
	-256, -209, 73, -262, -120, -120, -160, 17, 133, -160,
	78, 73, 89, -227, -330, -329, 46, -83, -106, -322,
	-363, -328, -196, 46, -83, -322, -189, -186, -194, -187,
	78, 15, -253, -248, 121, 121, 70, 329, -263, 73,
	350, 73, 210, 518, 134, 103, -179, 210, -215, -220,
	68, -133, 153, 152, -133, 68, -303, -304, -303, -306,
	-303, -133, -133, 68, 68, 23, 68, 68, 68, -220,
	68, 68, 134, -284, 67, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, -284, 73, 78, 78, -341,
	388, 383, 385, 44, 45, 34, 35, -115, -116, -117,
	-123, -118, -173, -211, -119, 218, 216, 220, -359, 88,
	221, 272, 89, 211, -394, 77, -388, 73, -196, -395,
	77, 352, 132, 307, 40, 353, 354, 368, 303, 78,
	78, 359, -389, 70, -120, -188, -188, -188, -115, -109,
	65, 133, -91, -121, -196, 121, 68, -158, -196, -158,
	-158, -206, -394, -388, -395, -158, 134, 103, -113, -112,
	64, 65, -114, 64, -112, 53, 53, -158, -401, -400,
	23, -359, -359, -359, 68, 68, -159, 18, 20, 121,
	-159, -147, 13, 68, -322, -322, -248, -263, 371, -120,
	-178, 73, 518, -120, -220, 68, -220, -229, -228, 232,
	68, 68, -310, 508, -339, 383, 20, 20, -83, -120,
	68, 134, -126, -119, -196, 89, -358, -359, -238, -358,
	89, 67, 73, -392, 362, 73, 73, 78, 40, 78,
	132, 355, -317, 67, -140, -142, -195, 130, 73, 68,
	-192, -91, -196, -158, -386, 133, -158, -158, -392, -103,
	-259, -328, -220, 67, -220, 67, 53, 19, 17, -220,
	-226, -362, -82, -333, -289, -82, 68, 68, -103, 20,
	-147, 73, 20, 73, -337, 73, -108, -138, -139, -155,
	342, 242, -239, 246, 77, 247, 378, 248, 211, 250,
	251, 252, 222, 253, 254, 255, 371, 256, 257, 258,
	259, 325, 6, 290, -117, -137, -136, -134, 83, 94,
	40, 342, -135, 77, 129, 265, 243, 266, -154, -210,
	64, 348, 216, 88, 89, 330, -211, -354, -356, -196,
	-356, -196, -354, -354, -238, -220, 20, 466, 306, 40,
	78, 40, 356, -243, -245, -173, 67, -81, -80, -158,
	-158, -104, -107, -355, -196, 216, 20, 20, -340, 388,
	-336, -334, 383, 384, 385, 386, -286, -285, -288, 389,
	274, 395, -226, -176, 510, 73, 385, 34, -279, 232,
	134, -155, -188, -188, -181, 129, -188, -188, -188, -188,
	249, 249, -188, -188, -188, -188, -188, -188, -188, -188,
	-188, -188, -188, -188, -188, -188, 67, -134, 83, -216,
	73, -142, -143, 40, 264, 260, -144, 40, 244, 245,
	-146, 67, 272, 13, 89, 89, -120, 67, 65, 282,
	67, 67, 67, -356, 68, 73, 350, 73, 306, 68,
	134, -303, -220, -82, -103, 68, 68, 134, -342, 214,
	-338, 387, -334, 20, 385, 20, 20, 68, -287, 96,
	355, 359, -220, 67, 20, -83, -280, 281, 20, -155,
	78, 78, -188, -188, 78, 73, 73, 73, -188, -188,
	78, 73, -198, 78, 78, 78, 78, 40, 73, -145,
	40, 260, 264, 261, 262, 263, 78, 40, 78, 40,
	78, 40, -196, 67, -360, -361, 73, 78, 67, -323,
	-244, 67, -243, -357, 294, 295, 296, 298, 297, -357,
	-243, -243, -243, 67, -265, -264, 273, 94, 371, -246,
	-245, -98, 68, -104, -196, 216, -349, 67, 78, -339,
	20, -337, 20, -337, -337, -287, 506, 393, 394, 393,
	394, -177, -196, -337, 20, -281, 274, 275, -282, -293,
	277, -140, -140, 73, 73, -141, 243, -122, 68, 134,
	103, 68, -220, -230, -149, -148, 462, -243, 68, 68,
	68, 68, -243, 273, -247, 222, 77, 466, 292, 293,
	-98, -353, 30, 68, -348, -347, -174, -343, -196, 388,
	389, 73, -337, 93, 68, 134, -173, 67, -291, 278,
	67, -289, 67, -289, 89, 295, 244, 245, 68, -361,
	73, 68, -153, -151, -152, 64, 399, 270, 271, 68,
	-246, -246, -246, -246, 68, -188, 73, 291, -352, -351,
	-350, 68, 134, 133, -287, -196, -278, -283, 279, 78,
	-216, 67, -216, 67, -290, 276, 67, -264, -152, 64,
	-151, 64, 14, 13, -154, 78, -194, 134, 103, -347,
	-196, 68, -295, 67, 20, 68, -278, 68, -278, 67,
	103, -216, -150, 267, 268, 30, 144, -150, -351, 40,
	-220, 133, -296, -294, 232, -282, 68, 68, 68, -278,
	78, 68, 83, 40, 269, -196, 68, 134, 70, -292,
	280, 68, -294, -297, 46, 78, -301, -298, 67, -155,
	234, 113, -301, -155, -300, -299, 279, 235, 67, 68,
	134, 70, 231, 67, -226, -299, -298, -226, 68, 68,
=======
	-52, -58, -63, -64, -65, -66, -73, -74, -75, -84,
	-77, -23, -22, -21, -20, 391, 12, 433, -9, -10,
	-371, -11, 230, -200, -201, -202, -409, -29, -30, -31,
	-36, -37, -38, -39, -44, -45, -46, -32, -33, -34,
	-35, -41, -42, -43, -48, -47, 207, -51, 61, -53,
	-54, -55, -59, -60, -61, -62, 322, 328, 381, 390,
	513, 514, 46, -85, -87, 515, -24, -25, -26, -27,
	203, 14, 466, -12, -15, -13, -16, -14, -18, -19,
	-17, 225, 224, 37, 288, 289, 326, 223, 204, 13,
	135, 136, 138, 139, 30, -86, 67, 205, -88, 10,
	516, 426, -94, 38, -121, -197, 70, -185, -188, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 436, 304, 463, 242, 266,
	352, 269, 276, 135, 154, 148, 176, 168, 143, 246,
	281, 247, 77, 138, 419, 87, 402, 378, 141, 261,
	263, 265, 268, 248, 164, 159, 260, 244, 513, 157,
	249, 39, 250, 181, 251, 252, 468, 398, 303, 404,
	273, 376, 158, 399, 264, 401, 183, 187, 411, 328,
	152, 153, 406, 413, 180, 222, 42, 465, 234, 414,
	185, 179, 175, 422, 277, 275, 178, 151, 174, 245,
	50, 189, 188, 190, 372, 373, 374, 375, 253, 254,
	316, 410, 171, 160, 307, 144, 22, 417, 229, 403,
	329, 255, 270, 278, 184, 186, 236, 241, 467, 380,
	240, 274, 415, 156, 233, 262, 228, 418, 145, 322,
	331, 256, 139, 267, 412, 421, 49, 344, 150, 142,
	219, 136, 238, 243, 11, 257, 258, 259, 280, 279,
	271, 172, 235, 177, 162, 149, 173, 137, 237, 420,
	345, 511, 305, 361, 170, 167, 239, 212, 416, 405,
	140, 365, 346, 165, 282, 508, 509, 510, 317, 302,
	283, 284, 163, 226, 397, 285, 287, 371, 295, 347,
	379, 353, 348, 196, -94, -51, -10, -9, -86, -87,
	-121, 210, -204, 23, 376, -57, 377, 207, 67, -197,
	-5, -4, -72, -49, -84, -203, -197, 288, -203, 210,
	-197, 240, 360, -314, 215, -275, -249, 241, -274, -251,
	-277, -252, 31, 203, 205, 204, 237, 14, 326, 211,
	12, 10, 327, 223, 24, 25, 27, 13, 328, 330,
	28, 331, 334, 335, 336, 41, 339, 340, 230, 70,
	73, 248, 248, -227, -221, 94, 231, -223, -216, -217,
	-219, -351, -345, -215, 67, 119, 120, 127, 95, -218,
	-303, 35, 97, 473, 434, -170, -171, -172, -173, -197,
	-346, -344, 73, 78, 81, 84, 85, 83, 82, 161,
	80, 74, 131, 132, -87, 70, -366, 481, -186, 501,
	482, 500, 46, -319, -326, 209, -324, 166, 226, 162,
	12, 125, 371, 130, 163, 478, 497, 436, 504, 475,
	476, 470, 471, 472, 474, 483, 485, 496, -327, 492,
	502, 503, 72, 71, 495, 494, 484, 479, 480, 486,
	469, 477, 487, 488, 493, 498, 499, 310, 87, 311,
	312, 426, 306, 313, 215, 376, 55, 314, 315, 316,
	317, 318, 433, 319, 56, 320, 309, 230, 361, 321,
	165, 182, 438, 437, 439, 430, 427, 425, 428, 429,
	431, 432, 489, 490, 491, -271, -269, -197, -78, -79,
	506, -103, -104, -163, 19, 6, 7, 8, 9, -406,
	378, 467, -316, 304, 361, 240, -243, -241, 285, 337,
	220, 219, 88, 426, 209, -383, -384, 200, 201, 202,
	-373, 459, -372, -197, 312, 26, 210, 323, 408, 409,
	-40, -328, -313, 405, 404, -208, 403, 396, 407, 398,
	203, 460, -182, 347, 379, 236, 423, 424, 324, 380,
	411, 412, 399, 87, 169, 166, 304, 361, -383, 140,
	137, -262, 140, 93, 145, 144, -262, 240, 360, 40,
	-268, 371, -267, -269, 411, 412, 422, 71, 72, 410,
	-182, 87, -104, -163, -103, -85, -87, -371, 304, 361,
	240, 211, 210, 212, 426, 288, -315, -379, 31, -320,
	197, 198, 199, 32, 33, -1, -198, -195, -188, 70,
	71, 72, -110, 232, -121, 133, -110, -104, -103, -104,
	-121, -174, -197, 378, 103, -57, -57, 377, -374, -375,
	-376, -378, 207, 377, 376, 133, 15, -203, 65, -121,
	-251, 240, -275, -249, 35, 64, 134, 213, 134, 64,
	67, 324, 304, 361, 325, 426, 210, 337, 212, 240,
	338, 304, 361, 210, 212, 426, 240, 304, 210, 212,
	361, 240, 338, 396, 397, 212, 26, 329, 332, 333,
	397, -332, 422, -332, 134, 93, 90, 91, 92, -221,
	110, -234, 103, 104, 105, 106, 107, 108, 109, 116,
	115, 126, 119, 120, 121, 122, 123, 124, 125, 117,
	118, 113, 94, 111, 112, 96, -87, -221, -227, -219,
	-219, -219, -219, -303, -225, -221, 67, 67, 133, 73,
	-221, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-325, 67, 67, -231, -232, 67, 67, 73, 73, 67,
	67, 67, -219, 73, -232, -232, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 134, -127, -131, -128, -130, -129, -133, -132, 166,
	167, 130, 170, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 30, 182, 226, 162, 163, 164, 165,
	183, 148, 168, 464, 191, 149, 192, 150, 193, 151,
	194, 152, 153, 195, 154, 157, 158, 159, 156, 133,
	-104, 134, 67, -80, 38, -106, 21, -88, -87, 20,
	31, 32, 31, 32, 31, 32, 31, 32, 78, -381,
	210, 459, -239, 215, -239, -239, 211, -239, 210, -385,
	147, 134, -373, -109, 67, -207, 111, 23, 238, 238,
	-207, -412, 211, 406, 42, 239, 238, -105, -106, -105,
	400, 397, -290, 401, 402, -208, -207, -207, -208, 210,
	212, 426, -410, -411, 15, 113, 238, -410, 30, 30,
	-314, -314, -386, 214, 415, 466, 143, 144, 145, -251,
	240, 240, 134, 103, 23, -270, 103, 114, -269, -269,
	-269, -270, -270, -141, 40, -196, 130, -197, 73, -141,
	40, -105, -88, -87, 68, 68, -314, -314, -314, -314,
	-314, -314, -314, -203, -89, -90, 121, -221, -197, -89,
	38, 397, -321, 46, -84, 67, 30, 67, -197, -322,
	46, -84, 67, 30, -105, -80, -106, 133, 78, 73,
	-57, 68, 134, -377, 84, 85, -380, 180, 172, -197,
	-69, 73, -3, -4, -5, -6, -28, -49, -84, -347,
	-345, 67, 31, 370, 64, 15, -276, 210, 426, 323,
	236, 212, 304, -274, -258, -255, -253, -196, -251, -254,
	-253, -279, -174, 397, -81, 382, 287, -81, -221, -221,
	-221, -221, -221, 83, 94, 302, 84, 85, -216, -235,
	31, 283, 284, -217, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -224, -233, -303, 67, 113,
	111, 112, 96, -219, -217, -217, 68, 134, -370, -369,
	98, -221, -221, -197, -367, -368, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 314, 309, 315,
	313, 306, 321, 316, 317, 165, 457, 458, 451, 452,
	453, 454, 455, 456, -226, -227, -226, -221, -367, -226,
	-169, 32, 31, -169, -221, -382, 300, 299, 301, -107,
	-197, -226, 68, 68, 68, 78, -227, -226, -217, -226,
	-368, -169, -227, -227, -169, -169, -169, -169, 121, -169,
	-169, -169, -169, -169, -169, -169, -269, 40, -310, 345,
	344, -304, -306, 67, -305, 67, -305, -304, -304, 67,
	67, -307, 67, -307, -307, -304, -308, 67, -308, -309,
	67, -308, -197, -105, -79, -330, -329, -221, 40, 507,
	-80, -221, -102, -101, -221, -407, 73, 212, -239, -388,
	-197, 94, -259, -256, -253, -249, -195, -197, -239, -386,
	-372, 34, -108, -197, -159, 16, -219, -253, -410, -207,
	-159, -411, -207, -207, -209, -411, -205, -411, 397, -159,
	-159, -290, -206, -197, -206, -239, -184, -183, -197, -184,
	-388, -259, -97, -92, -96, -93, -98, -162, -164, -95,
	67, -121, -87, -197, 416, 417, 141, 144, 143, 31,
	370, -273, 370, 31, -249, -267, -263, 73, 371, -254,
	-272, 64, 130, -329, -270, -270, -270, -272, -272, 129,
	-80, -388, -258, -249, -197, -123, -121, -123, -198, -158,
	134, -157, 15, -192, -197, 34, 73, 133, -158, 73,
	-123, -405, 64, -323, -228, -365, 506, -112, 68, -107,
	-363, -364, -107, -111, -197, -323, -112, 68, -363, -80,
	-80, -190, -191, -181, -187, -194, -195, -188, 208, 31,
	93, 34, 36, 310, 342, 96, 130, 20, 97, 166,
	129, 312, 434, 311, 203, 59, 437, 439, 438, 427,
	425, 363, 367, 369, 366, 426, 396, 40, 14, 37,
	224, 32, 33, 123, 205, 100, 101, 227, 35, 225,
	85, 44, 23, 62, 15, 17, 18, 313, 362, 215,
	214, 113, 382, 211, 57, 12, 132, 38, 110, 364,
	53, 89, 45, 55, 111, 21, 428, 429, 41, 381,
	390, 462, 231, 125, 314, 315, 60, 94, 370, 83,
	43, 64, 90, 19, 58, 112, 206, 433, 56, 368,
	318, 320, 330, 459, 319, 209, 407, 10, 309, 435,
	30, 223, 54, 210, 99, 213, 84, 230, 6, 88,
	13, 61, 65, 430, 431, 432, 46, 98, 16, 321,
	466, 383, 384, 385, 386, 387, 388, 389, 191, 192,
	193, 194, 195, 272, 218, 216, 220, 221, 506, 507,
	197, 198, 299, 301, 169, 200, 201, 202, 232, 147,
	7, 349, 350, 351, 354, 355, 356, 357, 358, 359,
	360, 514, 391, 392, 393, 394, 395, 408, 409, 23,
	-57, -375, 133, 134, -108, -276, -257, -254, -278, 121,
	70, -264, 134, 466, 517, 71, 213, -398, -397, 362,
	68, 134, -333, 214, 433, 73, 518, 196, -333, 83,
	302, 84, 85, -303, -227, -224, -219, -217, -217, -222,
	227, 93, -221, -220, -369, 100, -221, 34, 134, 65,
	133, 68, 68, 15, 15, 68, -221, -221, 68, 15,
	15, -221, 68, 133, 68, 68, 68, 65, 68, 134,
	68, 134, -221, 68, 68, -221, -221, -221, -227, 68,
	-221, -221, -221, -221, -221, -221, -221, -221, -312, 346,
	78, 78, -176, 73, -176, 78, 78, 78, 134, 68,
	73, 134, 22, 134, -99, 36, 37, -121, 215, -121,
	-391, 349, 35, -399, 134, 40, -397, -242, 65, -237,
	-238, -236, -240, 40, -121, 15, -91, -122, -197, 67,
	68, 134, -221, -250, 65, -184, -159, -121, -197, -159,
	-159, -207, -198, -209, -204, -209, -205, 133, -183, -392,
	349, -399, 30, -165, -166, -167, -168, 53, 57, 59,
	54, 55, 56, 60, 30, 134, -193, -199, 34, -194,
	73, -195, -188, -193, -87, -92, -97, -193, 67, 142,
	145, 145, 144, 213, 67, 103, -272, -272, -272, 40,
	-196, 64, 134, -159, -90, -92, -197, 73, -197, 121,
	-159, -148, 509, 38, 39, 134, 67, 68, 134, 46,
	134, 103, 68, 134, 68, 46, 133, 378, -197, -345,
	68, -278, 134, 213, 133, 133, -255, 328, -196, -257,
	20, 466, -174, 38, -180, -179, 73, 518, 38, 68,
	-222, 93, -219, -216, 68, 101, -221, 99, -125, -127,
	344, 345, -126, -132, 130, 166, 226, 165, 164, 162,
	344, 345, -141, -197, -221, -221, 68, 68, -221, -221,
	15, -197, -141, -217, -221, 68, -285, 392, -285, 68,
	68, 68, 68, -285, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 134, 68, 68, 68, 134, 68,
	134, -329, -336, 401, -221, -221, -101, -100, 43, -109,
	94, 67, -394, 403, 351, -189, 103, -214, -213, 305,
	41, -317, 371, 357, 358, -256, 240, 64, 294, 295,
	296, 297, -236, -182, 129, 251, 67, -121, -91, -197,
	15, 134, -387, 133, -1, -197, -249, -207, -159, -411,
	-159, -207, -207, -209, -197, -394, -189, -214, -261, -260,
	-174, -96, -96, -96, -96, 53, 53, 53, 58, 53,
	58, 53, -167, -261, -98, -109, -199, 68, -404, -403,
	-402, -400, 61, 214, 62, -226, 145, -257, -210, 73,
	-263, -121, -121, -161, 17, 133, -161, 78, 73, 89,
	-228, -331, -330, 46, -84, -107, -323, -364, -329, -197,
	46, -84, -323, -190, -187, -195, -188, 78, 15, -254,
	-249, 121, 121, 70, 329, -264, 73, 350, 73, 210,
	519, 134, 103, -180, 210, -216, -221, 68, -134, 153,
	152, -134, 68, -304, -305, -304, -307, -304, -134, -134,
	68, 68, 23, 68, 68, 68, -221, 68, 68, 134,
	-285, 67, -285, -285, -285, -285, -285, -285, -285, -285,
	-285, -285, -285, 73, 78, 78, -342, 388, 383, 385,
	44, 45, 34, 35, -116, -117, -118, -124, -119, -174,
	-212, -120, 218, 216, 220, -360, 88, 221, 272, 89,
	211, -395, 77, -389, 73, -197, -396, 77, 352, 132,
	307, 40, 353, 354, 368, 303, 78, 78, 359, -390,
	70, -121, -189, -189, -189, -116, -110, 65, 133, -92,
	-122, -197, 121, 68, -159, -197, -159, -159, -207, -395,
	-389, -396, -159, 134, 103, -114, -113, 64, 65, -115,
	64, -113, 53, 53, -159, -402, -401, 23, -360, -360,
	-360, 68, 68, -160, 18, 20, 121, -160, -148, 13,
	68, -323, -323, -249, -264, 371, -121, -179, 73, 519,
	-121, -221, 68, -221, -230, -229, 232, 68, 68, -311,
	508, -340, 383, 20, 20, -84, -121, 68, 134, -127,
	-120, -197, 89, -359, -360, -239, -359, 89, 67, 73,
	-393, 362, 73, 73, 78, 40, 78, 132, 355, -318,
	67, -141, -143, -196, 130, 73, 68, -193, -92, -197,
	-159, -387, 133, -159, -159, -393, -104, -260, -329, -221,
	67, -221, 67, 53, 19, 17, -221, -227, -363, -83,
	-334, -290, -83, 68, 68, -104, 20, -148, 73, 20,
	73, -338, 73, -109, -139, -140, -156, 342, 242, -240,
	246, 77, 247, 378, 248, 211, 250, 251, 252, 222,
	253, 254, 255, 371, 256, 257, 258, 259, 325, 6,
	290, -118, -138, -137, -135, 83, 94, 40, 342, -136,
	77, 129, 265, 243, 266, -155, -211, 64, 348, 216,
	88, 89, 330, -212, -355, -357, -197, -357, -197, -355,
	-355, -239, -221, 20, 466, 306, 40, 78, 40, 356,
	-244, -246, -174, 67, -82, -81, -159, -159, -105, -108,
	-356, -197, 216, 20, 20, -341, 388, -337, -335, 383,
	384, 385, 386, -287, -286, -289, 389, 274, 395, -227,
	-177, 510, 73, 385, 34, -280, 232, 134, -156, -189,
	-189, -182, 129, -189, -189, -189, -189, 249, 249, -189,
	-189, -189, -189, -189, -189, -189, -189, -189, -189, -189,
	-189, -189, -189, 67, -135, 83, -217, 73, -143, -144,
	40, 264, 260, -145, 40, 244, 245, -147, 67, 272,
	13, 89, 89, -121, 67, 65, 282, 67, 67, 67,
	-357, 68, 73, 350, 73, 306, 68, 134, -304, -221,
	-83, -104, 68, 68, 134, -343, 214, -339, 387, -335,
	20, 385, 20, 20, 68, -288, 96, 355, 359, -221,
	67, 20, -84, -281, 281, 20, -156, 78, 78, -189,
	-189, 78, 73, 73, 73, -189, -189, 78, 73, -199,
	78, 78, 78, 78, 40, 73, -146, 40, 260, 264,
	261, 262, 263, 78, 40, 78, 40, 78, 40, -197,
	67, -361, -362, 73, 78, 67, -324, -245, 67, -244,
	-358, 294, 295, 296, 298, 297, -358, -244, -244, -244,
	67, -266, -265, 273, 94, 371, -247, -246, -99, 68,
	-105, -197, 216, -350, 67, 78, -340, 20, -338, 20,
	-338, -338, -288, 506, 393, 394, 393, 394, -178, -197,
	-338, 20, -282, 274, 275, -283, -294, 277, -141, -141,
	73, 73, -142, 243, -123, 68, 134, 103, 68, -221,
	-231, -150, -149, 462, -244, 68, 68, 68, 68, -244,
	273, -248, 222, 77, 466, 292, 293, -99, -354, 30,
	68, -349, -348, -175, -344, -197, 388, 389, 73, -338,
	93, 68, 134, -174, 67, -292, 278, 67, -290, 67,
	-290, 89, 295, 244, 245, 68, -362, 73, 68, -154,
	-152, -153, 64, 399, 270, 271, 68, -247, -247, -247,
	-247, 68, -189, 73, 291, -353, -352, -351, 68, 134,
	133, -288, -197, -279, -284, 279, 78, -217, 67, -217,
	67, -291, 276, 67, -265, -153, 64, -152, 64, 14,
	13, -155, 78, -195, 134, 103, -348, -197, 68, -296,
	67, 20, 68, -279, 68, -279, 67, 103, -217, -151,
	267, 268, 30, 144, -151, -352, 40, -221, 133, -297,
	-295, 232, -283, 68, 68, 68, -279, 78, 68, 83,
	40, 269, -197, 68, 134, 70, -293, 280, 68, -295,
	-298, 46, 78, -302, -299, 67, -156, 234, 113, -302,
	-156, -301, -300, 279, 235, 67, 68, 134, 70, 231,
	67, -227, -300, -299, -227, 68, 68,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
}

var yyDef = [...]int{
	31, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
<<<<<<< HEAD
	632, 633, 634, 635, 0, 0, 0, 404, 405, 0,
	384, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
	315, 316, 317, 270, 271, 0, 218, 214, 193, 194,
	195, 154, 155, 156, 157, 278, 0, 0, 0, 0,
	0, 0, 483, -2, 636, 637, 638, 639, -2, 417,
	0, 385, 386, 387, 388, 389, 390, 391, 392, 259,
	260, 261, 256, 257, 258, -2, 0, 417, 207, 0,
	198, 198, 0, 503, 0, 0, 517, 539, 30, 0,
	461, 0, 466, 825, 861, 862, 863, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 461, 219, 406, 407, 503, 503, 382, 0,
	242, 0, 1481, 246, 0, 0, 0, 379, 237, 238,
	239, 240, 241, 0, 624, 0, 234, 0, 213, 1540,
	0, 0, 0, 0, 0, 0, 98, 679, 100, 681,
	104, 111, 0, 0, 116, 117, 120, 121, 122, 123,
	124, 0, 128, 0, 130, 133, 0, 135, 136, 0,
	139, 140, 141, 0, 151, 152, 153, 682, 683, 78,
	78, 1230, 1127, 0, 1134, 1135, 1146, 1155, 933, 934,
	935, 936, 0, 0, 0, 0, 0, 943, 944, 0,
	956, 1628, 0, 950, 951, 952, 953, 41, 53, 54,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	0, 1100, 920, 861, 0, 1636, 0, 1656, 1637, 1655,
	0, 0, 1085, 0, 1075, 0, -2, -2, 0, 0,
	1607, 0, -2, 1633, 1652, 1660, 1659, 1630, 1631, 1625,
	1626, 1627, 1629, 1638, 1640, 1651, 0, 1647, 1657, 1658,
	55, 56, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1091, -2, 1093, 1094, 1096,
	1097, 1098, 1099, -2, 1102, 1103, 1104, -2, -2, 1107,
	1108, 1109, 1110, 1111, 1112, 1115, -2, 1117, -2, 1119,
	1087, 1088, 1089, 1090, 1079, 1080, 1081, 1082, 1083, 1084,
	-2, -2, -2, 0, 191, 189, 503, 575, 0, -2,
	0, 0, 0, 522, 525, 528, 531, 642, 708, 708,
	708, 0, 708, 0, 731, 685, 686, 687, 706, 707,
	422, 418, 419, 420, 421, 491, 0, 493, 496, 362,
	319, 0, 0, 0, 330, 362, 0, 0, 498, 498,
	0, 371, 362, 362, -2, 0, 332, 333, 334, 324,
	0, 324, 338, 339, 340, 351, 352, 372, 1254, 0,
	0, 278, 278, 424, 208, 209, 197, 199, 0, 203,
	0, 196, 1540, 0, 0, 165, 1607, 170, 0, 1488,
	1554, 1503, 0, 0, 1521, 0, -2, 498, 0, 504,
	0, 503, 0, 278, 278, 278, 278, 278, 278, 278,
	0, 0, 0, 540, 541, 536, 537, 538, 542, 543,
	3, 0, 625, 626, 629, 630, 631, 0, 0, 465,
	0, 0, 498, -2, 0, 383, 243, 864, 0, 0,
	247, 248, 0, 0, 262, 0, 265, 251, 252, 253,
	0, 0, 236, 0, 0, 215, 0, 0, 0, 279,
	0, 0, 0, 0, 0, 0, 108, 105, 112, 115,
	125, 132, 0, 144, 146, 149, 106, 113, 118, 119,
	126, 147, 107, 109, 110, 114, 148, 150, 127, 131,
	145, 129, 134, 137, 138, 143, 0, 79, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1127, 0, 939, 940, 941, 942, 945, 0,
	957, 0, 0, 0, 1184, 0, 1125, 1125, 0, 1125,
	1121, 1121, 0, 0, 1125, 1063, 0, 0, 1065, 1076,
	0, 0, 1068, 1069, 1125, 0, 1125, 1073, 1074, 1059,
	1060, 0, 1121, 0, 0, 1121, 1121, 1121, 1121, 1121,
	1121, 1121, 1121, 1121, 1121, 1121, 0, 1231, 1249, 1186,
	1187, 1188, 1236, 1190, 1240, 1240, 1236, 1236, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 0, 0, 1229,
	1209, 1238, 1238, 1238, 1236, 1233, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1243, 1243, 1246, 1243, 0, 498, 0, 0, 486, 0,
	467, 0, 519, 521, 0, 523, 524, 526, 527, 529,
	530, 532, 533, 0, 708, 643, 0, 0, 0, 0,
	0, 0, 708, 424, 423, 0, 492, 0, 0, 548,
	0, 0, 324, 362, 329, 548, 0, 345, 346, 347,
	362, 362, 353, 499, 354, 355, 364, 0, 369, 370,
	0, 548, 548, 0, 0, 0, 708, 326, 325, 367,
	368, 336, 326, 1255, 1256, 0, 0, 0, 425, 0,
	0, 201, 0, 206, 158, 0, 0, 0, 0, 0,
	0, 187, 188, 0, 0, 0, 0, 0, 178, 181,
	819, 820, 676, 677, 182, 183, 467, 518, 520, 515,
	516, 0, 0, 0, 0, 0, 0, 0, 403, 556,
	550, 552, 619, 41, 556, 0, 0, 440, 453, 435,
	0, 442, 0, 826, 426, 453, 428, 0, 442, 467,
	489, 467, 0, 244, 0, 249, 0, 0, 264, 266,
	267, 268, 254, 255, 380, 232, 233, 225, 226, 227,
	228, 229, 230, 231, 235, 51, 0, 216, 217, 0,
	0, 0, 92, 93, 94, 95, 96, 97, 99, 83,
	395, 397, 668, 680, 0, 671, 0, 102, 142, 75,
	0, 0, 75, 1128, 1129, 1130, 1131, 1132, 1136, 0,
	1138, 1140, 1142, 1144, 0, 1160, -2, -2, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	1147, 1158, 1159, 0, 0, 0, 0, 0, 1156, 1151,
	0, 937, 0, 954, 958, 0, 0, 0, 42, 1120,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 0,
	1126, 0, 1127, 0, 0, 0, 1122, 1123, 0, 0,
	0, 1024, 1025, 1026, 0, 448, 0, 1086, 1064, 1077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 1252, 1250, 1251, 1189, 1237, 0, 1214,
	0, 1215, 1216, 1217, 0, 0, 1210, 0, 1211, 1212,
	1213, 1205, 0, 1206, 1207, 0, 1208, 190, 574, 576,
	0, 457, 459, 460, 0, 487, 500, 505, 506, 509,
	0, 0, 0, 645, 0, 276, 662, 0, 678, 700,
	-2, 0, 0, 494, 0, 0, 588, 318, 0, 363,
	321, 326, 548, 331, 0, 548, 548, 362, 0, 364,
	0, 364, 358, 359, 0, 373, 376, 374, 0, 335,
	327, 378, 337, 273, 276, 561, 0, 562, 563, 559,
	590, 614, 614, 0, 614, 594, 825, 210, 211, 0,
	0, 205, 159, 160, 0, 162, 163, 164, 171, 166,
	168, 0, 0, 172, 184, 185, 186, 0, 0, 0,
	176, 177, 0, 485, 393, 394, 398, 0, 400, 823,
	401, 402, 548, 0, 557, 0, 553, 620, 0, 622,
	0, 548, 477, 0, 433, 0, 434, 450, 0, 454,
	0, 0, 446, 439, 443, 0, 0, 463, 427, 0,
	0, 432, 488, 490, 865, 0, 1261, -2, 1263, -2,
	-2, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
=======
	30, 639, 640, 641, 642, 0, 0, 0, 411, 412,
	0, 391, 0, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 277, 278, 0, 225, 221, 200,
	201, 202, 161, 162, 163, 164, 285, 0, 0, 0,
	0, 0, 0, 490, -2, 33, 643, 644, 645, 646,
	-2, 424, 0, 392, 393, 394, 395, 396, 397, 398,
	399, 266, 267, 268, 263, 264, 265, -2, 0, 424,
	214, 0, 205, 205, 0, 510, 0, 0, 524, 546,
	31, 0, 468, 0, 473, 832, 868, 869, 870, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 468, 226, 413, 414, 510, 510,
	389, 0, 249, 0, 1488, 253, 0, 0, 0, 386,
	244, 245, 246, 247, 248, 0, 631, 0, 241, 0,
	220, 1547, 0, 0, 0, 0, 0, 0, 105, 686,
	107, 688, 111, 118, 0, 0, 123, 124, 127, 128,
	129, 130, 131, 0, 135, 0, 137, 140, 0, 142,
	143, 0, 146, 147, 148, 0, 158, 159, 160, 689,
	690, 85, 85, 1237, 1134, 0, 1141, 1142, 1153, 1162,
	940, 941, 942, 943, 0, 0, 0, 0, 0, 950,
	951, 0, 963, 1635, 0, 957, 958, 959, 960, 48,
	60, 61, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 0, 1107, 927, 868, 0, 1643, 0, 1663,
	1644, 1662, 0, 0, 1092, 0, 1082, 0, -2, -2,
	0, 0, 1614, 0, -2, 1640, 1659, 1667, 1666, 1637,
	1638, 1632, 1633, 1634, 1636, 1645, 1647, 1658, 0, 1654,
	1664, 1665, 62, 63, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1098, -2, 1100,
	1101, 1103, 1104, 1105, 1106, -2, 1109, 1110, 1111, -2,
	-2, 1114, 1115, 1116, 1117, 1118, 1119, 1122, -2, 1124,
	-2, 1126, 1094, 1095, 1096, 1097, 1086, 1087, 1088, 1089,
	1090, 1091, -2, -2, -2, 0, 198, 196, 510, 582,
	0, -2, 0, 0, 0, 529, 532, 535, 538, 0,
	34, 35, 649, 715, 715, 715, 0, 715, 0, 738,
	692, 693, 694, 713, 714, 429, 425, 426, 427, 428,
	498, 0, 500, 503, 369, 326, 0, 0, 336, 337,
	369, 0, 0, 505, 505, 0, 378, 369, 369, -2,
	0, 339, 340, 341, 331, 0, 331, 345, 346, 347,
	358, 359, 379, 1261, 0, 0, 285, 285, 431, 215,
	216, 204, 206, 0, 210, 0, 203, 1547, 0, 0,
	172, 1614, 177, 0, 1495, 1561, 1510, 0, 0, 1528,
	0, -2, 505, 0, 511, 0, 510, 0, 285, 285,
	285, 285, 285, 285, 285, 0, 0, 0, 547, 548,
	543, 544, 545, 549, 550, 3, 0, 632, 633, 636,
	637, 638, 0, 0, 472, 0, 0, 505, -2, 0,
	390, 250, 871, 0, 0, 254, 255, 0, 0, 269,
	0, 272, 258, 259, 260, 0, 0, 243, 0, 0,
	222, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 115, 112, 119, 122, 132, 139, 0, 151, 153,
	156, 113, 120, 125, 126, 133, 154, 114, 116, 117,
	121, 155, 157, 134, 138, 152, 136, 141, 144, 145,
	150, 0, 86, 0, 0, 0, 0, 0, 0, 1140,
	0, 0, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 1134, 0, 946,
	947, 948, 949, 952, 0, 964, 0, 0, 0, 1191,
	0, 1132, 1132, 0, 1132, 1128, 1128, 0, 0, 1132,
	1070, 0, 0, 1072, 1083, 0, 0, 1075, 1076, 1132,
	0, 1132, 1080, 1081, 1066, 1067, 0, 1128, 0, 0,
	1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
	1128, 0, 1238, 1256, 1193, 1194, 1195, 1243, 1197, 1247,
	1247, 1243, 1243, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 0, 0, 1236, 1216, 1245, 1245, 1245, 1243,
	1240, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1250, 1250, 1253, 1250, 0,
	505, 0, 0, 493, 0, 474, 0, 526, 528, 0,
	530, 531, 533, 534, 536, 537, 539, 540, 36, 0,
	715, 650, 0, 0, 0, 0, 0, 0, 715, 431,
	430, 0, 499, 0, 0, 555, 0, 0, 331, 369,
	555, 0, 352, 353, 354, 369, 369, 360, 506, 361,
	362, 371, 0, 376, 377, 0, 555, 555, 0, 0,
	0, 715, 333, 332, 374, 375, 343, 333, 1262, 1263,
	0, 0, 0, 432, 0, 0, 208, 0, 213, 165,
	0, 0, 0, 0, 0, 0, 194, 195, 0, 0,
	0, 0, 0, 185, 188, 826, 827, 683, 684, 189,
	190, 474, 525, 527, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 410, 563, 557, 559, 626, 48, 563,
	0, 0, 447, 460, 442, 0, 449, 0, 833, 433,
	460, 435, 0, 449, 474, 496, 474, 0, 251, 0,
	256, 0, 0, 271, 273, 274, 275, 261, 262, 387,
	239, 240, 232, 233, 234, 235, 236, 237, 238, 242,
	58, 0, 223, 224, 0, 0, 0, 99, 100, 101,
	102, 103, 104, 106, 90, 402, 404, 675, 687, 0,
	678, 0, 109, 149, 82, 0, 0, 82, 1135, 1136,
	1137, 1138, 1139, 1143, 0, 1145, 1147, 1149, 1151, 0,
	1167, -2, -2, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 1154, 1165, 1166, 0, 0,
	0, 0, 0, 1163, 1158, 0, 944, 0, 961, 965,
	0, 0, 0, 49, 1127, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 0, 1133, 0, 1134, 0, 0,
	0, 1129, 1130, 0, 0, 0, 1031, 1032, 1033, 0,
	455, 0, 1093, 1071, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 1259, 1257,
	1258, 1196, 1244, 0, 1221, 0, 1222, 1223, 1224, 0,
	0, 1217, 0, 1218, 1219, 1220, 1212, 0, 1213, 1214,
	0, 1215, 197, 581, 583, 0, 464, 466, 467, 0,
	494, 507, 512, 513, 516, 32, 37, 0, 0, 0,
	652, 0, 283, 669, 0, 685, 707, -2, 0, 0,
	501, 0, 0, 595, 325, 0, 370, 328, 333, 555,
	338, 0, 555, 555, 369, 0, 371, 0, 371, 365,
	366, 0, 380, 383, 381, 0, 342, 334, 385, 344,
	280, 283, 568, 0, 569, 570, 566, 597, 621, 621,
	0, 621, 601, 832, 217, 218, 0, 0, 212, 166,
	167, 0, 169, 170, 171, 178, 173, 175, 0, 0,
	179, 191, 192, 193, 0, 0, 0, 183, 184, 0,
	492, 400, 401, 405, 0, 407, 830, 408, 409, 555,
	0, 564, 0, 560, 627, 0, 629, 0, 555, 484,
	0, 440, 0, 441, 457, 0, 461, 0, 0, 453,
	446, 450, 0, 0, 470, 434, 0, 0, 439, 495,
	497, 872, 0, 1268, -2, 1270, -2, -2, 1272, 1273,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
<<<<<<< HEAD
	1434, 1435, 0, 250, 263, 0, 0, 0, 0, 86,
	665, 0, 87, 91, 81, 0, 0, 0, 670, 0,
	667, 672, 0, 101, 0, 0, 76, 77, 722, 727,
	0, 0, 1137, 1139, 1141, 1143, 1145, 0, 1148, 1156,
	1152, 0, 1149, 0, 0, 1128, 0, 959, 0, 0,
	0, 0, 0, 0, 1011, 1012, 0, 0, 1016, 0,
	0, 1019, 0, 0, 0, 1023, 0, 1062, 1078, 1066,
	0, 1070, 0, 1072, 0, 0, 991, 991, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	1232, 1185, 1253, 0, 0, 0, 1234, 0, 0, 0,
	0, 0, 577, 469, 0, 0, 0, 512, 510, 511,
	496, 0, 0, 652, 1257, 709, 280, 0, 0, 664,
	0, 0, 705, -2, 712, 0, 718, 0, 0, 0,
	411, 415, 30, 497, 0, 549, 320, 0, 362, 328,
	548, 825, 348, 349, 548, 365, 362, 366, 362, 364,
	0, 375, 652, 1257, 280, 0, 0, 0, 0, 0,
	581, 0, 0, 580, 0, 0, 0, 0, 0, 496,
	615, 0, 617, 618, 627, 628, 592, -2, 0, 561,
	597, 1125, 212, 200, 202, 0, 0, 0, 0, 173,
	174, 175, 179, 180, 0, 0, 546, 551, 558, 621,
	623, 42, 554, 546, 31, 0, 0, 0, 453, 455,
	0, 0, 453, 0, 0, 462, 0, 0, 453, 0,
	0, 381, 52, 269, 0, 0, 0, 0, 0, 396,
	0, 669, 83, 0, 0, 103, 0, 0, 725, 0,
	727, 0, 1124, 1150, 0, 1157, 1153, 938, 946, 955,
	0, 0, 961, 973, 973, 0, 964, 1236, 1240, 967,
	1236, 1238, 1236, 973, 973, 0, 43, 0, 0, 1017,
	1018, 0, 0, 0, 449, 0, 0, 0, 991, 994,
	0, 995, 991, 991, 991, 991, 1000, 991, 991, 991,
	991, 991, 991, 991, 1242, 1241, 1227, 0, 1228, 1239,
	1244, 0, 1247, 0, 458, 473, 0, 501, 502, 507,
	508, 0, 0, 0, 827, 655, 653, 654, 0, 1258,
	659, 281, 282, 283, 284, 0, 0, 0, 663, 0,
	0, 701, 702, 703, 704, 713, 1257, 1257, 1257, 827,
	461, 0, -2, 0, 0, 413, 0, 0, 589, 322,
	548, 341, 0, 356, 548, 548, 362, 377, 655, 0,
	659, 548, 222, 0, 584, 578, 0, 567, 582, 583,
	570, 0, 572, 0, 568, 569, 548, 560, 591, 616,
	593, 596, 598, 599, 605, 0, 0, 0, 0, 204,
	161, 0, 300, 167, 399, 824, 544, 0, 0, 544,
	478, 477, 0, 451, 0, 456, 453, 438, 447, 437,
	444, 445, 464, 453, 431, 430, 866, 1262, 1259, 1260,
	245, 0, 666, 83, 88, 89, 90, 84, 82, 673,
	0, 675, 0, 723, 727, 0, 0, 0, 1154, 960,
	947, 962, 974, 975, 963, 948, 965, 966, 968, 969,
	970, 971, 972, 949, 1013, 0, 1015, 1020, 1021, 0,
	1067, 1071, 0, 993, 989, 996, 997, 998, 999, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1235, 0, 0, 475,
	64, 0, 0, 513, 514, 0, 0, 0, 828, 829,
	831, 832, 0, 0, 834, 890, 0, 843, 708, 843,
	0, 0, 845, 846, 644, 0, 0, 647, 648, 657,
	0, 0, 0, 286, 287, 0, 0, 0, 299, 295,
	296, 297, 277, 658, 0, 0, 0, 0, 0, 614,
	0, 0, 548, 412, 415, 416, 495, 323, 548, 360,
	357, 548, 272, 0, 275, 503, 0, 0, 564, 585,
	0, 0, 565, 0, 566, 571, 573, 221, 600, 0,
	0, 602, 603, 604, 595, 169, 534, 0, 0, 555,
	535, 32, 442, 452, 436, 429, 85, 80, 674, 66,
	726, 728, 724, 66, 0, 1022, 0, 503, 990, 0,
	1245, 1248, 477, 0, 474, 0, 0, 0, 640, 496,
	-2, 0, -2, 833, 891, 855, 855, 844, 855, 855,
	708, 0, 656, 646, 0, 660, 661, 0, 288, 289,
	0, 292, 298, 0, 714, 715, 821, 822, 716, 0,
	548, 548, -2, 409, 414, 0, 342, 361, 274, 498,
	223, 224, 586, 0, 579, 609, 606, 0, 0, 545,
	547, 441, 34, 60, 0, 33, 1014, 1061, 986, 0,
	479, 476, 0, 470, 472, 74, 0, 732, -2, 775,
	1257, 1257, 0, 1257, 1257, 1257, 1257, 0, 0, 1257,
	1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257, 1257,
	1257, 1257, 1257, 0, 830, 857, -2, 869, 871, 0,
	0, 874, 875, 0, 0, 0, 0, 912, 881, 0,
	0, 885, 0, 1172, 1173, 0, 889, 0, 847, 856,
	0, 856, 0, 0, 855, 0, 0, 0, 285, 290,
	0, 293, 294, 0, 696, 1236, 0, 720, 66, 503,
	410, 220, 0, 0, 610, 612, 607, 608, 57, 62,
	67, 68, 0, 0, 0, 0, 0, 987, 0, 981,
	982, 983, 988, 468, 0, 65, 0, 0, 734, 0,
	717, 777, 0, 0, 1257, 1257, 0, 0, 0, 0,
	1257, 1257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 872, 873,
	876, 877, 878, 917, 918, 919, 879, 914, 915, 916,
	880, 0, 0, 0, 1170, 1171, 910, 0, 0, 0,
	0, 0, 0, 0, 841, 649, 0, 651, 291, 689,
	0, 509, 0, 721, 498, 587, 601, 0, 44, 0,
	64, 0, 69, 0, 0, 0, 0, 992, 984, 0,
	0, 0, 0, 0, 0, 641, 719, 0, 771, 776,
	778, 779, 0, 0, 782, 783, 784, 785, 0, 0,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	813, 814, 815, 816, 817, 818, 798, 799, 800, 801,
	802, 803, 810, 0, 0, 807, 0, 0, 0, 1075,
	905, 0, 0, 848, 850, 851, 852, 853, 854, 849,
	0, 0, 0, 0, 840, 842, 886, 0, 650, 688,
	697, 698, 509, 408, 611, 613, 35, 0, 0, 61,
	0, 70, 0, 72, 73, 0, 976, 977, 979, 978,
	980, 0, 481, 471, 0, 759, 0, 0, 765, 0,
	772, 780, 781, 786, 787, 804, 0, 0, 806, 0,
	0, 913, 0, 884, 893, 906, 0, 0, 689, 689,
	689, 689, 0, 887, 690, 1257, 0, 0, 694, 695,
	699, 729, 0, 45, 0, 47, 49, 50, 858, 58,
	59, 63, 71, 0, 480, 0, 735, 0, 737, 0,
	0, 0, 0, 0, 769, 0, 811, 812, 805, 808,
	809, 882, 892, 894, 895, 0, 907, 908, 909, 911,
	835, 836, 837, 838, 0, 0, 692, 0, 36, 37,
	0, 46, 0, 0, 985, 482, 0, 739, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 883, 896, 0,
	897, 0, 0, 0, 839, 691, 693, 0, 0, 48,
	859, 736, 733, 0, 771, 761, 0, 763, 0, 0,
	0, 0, 898, 900, 901, 0, 0, 899, 38, 39,
	40, 0, 0, 741, 0, 757, 762, 764, 766, 0,
	770, 768, 902, 904, 903, 860, 740, 0, 753, 738,
	0, 767, 742, -2, 0, 758, 743, -2, 0, 751,
	0, 0, 744, 752, 0, 747, 0, 0, 0, 746,
	0, -2, 754, 0, 0, 748, -2, 0, 756, 755,
=======
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 0,
	257, 270, 0, 0, 0, 0, 93, 672, 0, 94,
	98, 88, 0, 0, 0, 677, 0, 674, 679, 0,
	108, 0, 0, 83, 84, 729, 734, 0, 0, 1144,
	1146, 1148, 1150, 1152, 0, 1155, 1163, 1159, 0, 1156,
	0, 0, 1135, 0, 966, 0, 0, 0, 0, 0,
	0, 1018, 1019, 0, 0, 1023, 0, 0, 1026, 0,
	0, 0, 1030, 0, 1069, 1085, 1073, 0, 1077, 0,
	1079, 0, 0, 998, 998, 0, 0, 0, 0, 998,
	0, 0, 0, 0, 0, 0, 0, 1239, 1192, 1260,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 584,
	476, 0, 0, 0, 519, 517, 518, 503, 0, 0,
	659, 1264, 716, 287, 0, 0, 671, 0, 0, 712,
	-2, 719, 0, 725, 0, 0, 0, 418, 422, 31,
	504, 0, 556, 327, 0, 369, 335, 555, 832, 355,
	356, 555, 372, 369, 373, 369, 371, 0, 382, 659,
	1264, 287, 0, 0, 0, 0, 0, 588, 0, 0,
	587, 0, 0, 0, 0, 0, 503, 622, 0, 624,
	625, 634, 635, 599, -2, 0, 568, 604, 1132, 219,
	207, 209, 0, 0, 0, 0, 180, 181, 182, 186,
	187, 0, 0, 553, 558, 565, 628, 630, 49, 561,
	553, 38, 0, 0, 0, 460, 462, 0, 0, 460,
	0, 0, 469, 0, 0, 460, 0, 0, 388, 59,
	276, 0, 0, 0, 0, 0, 403, 0, 676, 90,
	0, 0, 110, 0, 0, 732, 0, 734, 0, 1131,
	1157, 0, 1164, 1160, 945, 953, 962, 0, 0, 968,
	980, 980, 0, 971, 1243, 1247, 974, 1243, 1245, 1243,
	980, 980, 0, 50, 0, 0, 1024, 1025, 0, 0,
	0, 456, 0, 0, 0, 998, 1001, 0, 1002, 998,
	998, 998, 998, 1007, 998, 998, 998, 998, 998, 998,
	998, 1249, 1248, 1234, 0, 1235, 1246, 1251, 0, 1254,
	0, 465, 480, 0, 508, 509, 514, 515, 0, 0,
	0, 834, 662, 660, 661, 0, 1265, 666, 288, 289,
	290, 291, 0, 0, 0, 670, 0, 0, 708, 709,
	710, 711, 720, 1264, 1264, 1264, 834, 468, 0, -2,
	0, 0, 420, 0, 0, 596, 329, 555, 348, 0,
	363, 555, 555, 369, 384, 662, 0, 666, 555, 229,
	0, 591, 585, 0, 574, 589, 590, 577, 0, 579,
	0, 575, 576, 555, 567, 598, 623, 600, 603, 605,
	606, 612, 0, 0, 0, 0, 211, 168, 0, 307,
	174, 406, 831, 551, 0, 0, 551, 485, 484, 0,
	458, 0, 463, 460, 445, 454, 444, 451, 452, 471,
	460, 438, 437, 873, 1269, 1266, 1267, 252, 0, 673,
	90, 95, 96, 97, 91, 89, 680, 0, 682, 0,
	730, 734, 0, 0, 0, 1161, 967, 954, 969, 981,
	982, 970, 955, 972, 973, 975, 976, 977, 978, 979,
	956, 1020, 0, 1022, 1027, 1028, 0, 1074, 1078, 0,
	1000, 996, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1242, 0, 0, 482, 71, 0, 0,
	520, 521, 0, 0, 0, 835, 836, 838, 839, 0,
	0, 841, 897, 0, 850, 715, 850, 0, 0, 852,
	853, 651, 0, 0, 654, 655, 664, 0, 0, 0,
	293, 294, 0, 0, 0, 306, 302, 303, 304, 284,
	665, 0, 0, 0, 0, 0, 621, 0, 0, 555,
	419, 422, 423, 502, 330, 555, 367, 364, 555, 279,
	0, 282, 510, 0, 0, 571, 592, 0, 0, 572,
	0, 573, 578, 580, 228, 607, 0, 0, 609, 610,
	611, 602, 176, 541, 0, 0, 562, 542, 39, 449,
	459, 443, 436, 92, 87, 681, 73, 733, 735, 731,
	73, 0, 1029, 0, 510, 997, 0, 1252, 1255, 484,
	0, 481, 0, 0, 0, 647, 503, -2, 0, -2,
	840, 898, 862, 862, 851, 862, 862, 715, 0, 663,
	653, 0, 667, 668, 0, 295, 296, 0, 299, 305,
	0, 721, 722, 828, 829, 723, 0, 555, 555, -2,
	416, 421, 0, 349, 368, 281, 505, 230, 231, 593,
	0, 586, 616, 613, 0, 0, 552, 554, 448, 41,
	67, 0, 40, 1021, 1068, 993, 0, 486, 483, 0,
	477, 479, 81, 0, 739, -2, 782, 1264, 1264, 0,
	1264, 1264, 1264, 1264, 0, 0, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	0, 837, 864, -2, 876, 878, 0, 0, 881, 882,
	0, 0, 0, 0, 919, 888, 0, 0, 892, 0,
	1179, 1180, 0, 896, 0, 854, 863, 0, 863, 0,
	0, 862, 0, 0, 0, 292, 297, 0, 300, 301,
	0, 703, 1243, 0, 727, 73, 510, 417, 227, 0,
	0, 617, 619, 614, 615, 64, 69, 74, 75, 0,
	0, 0, 0, 0, 994, 0, 988, 989, 990, 995,
	475, 0, 72, 0, 0, 741, 0, 724, 784, 0,
	0, 1264, 1264, 0, 0, 0, 0, 1264, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 877, 879, 880, 883, 884, 885,
	924, 925, 926, 886, 921, 922, 923, 887, 0, 0,
	0, 1177, 1178, 917, 0, 0, 0, 0, 0, 0,
	0, 848, 656, 0, 658, 298, 696, 0, 516, 0,
	728, 505, 594, 608, 0, 51, 0, 71, 0, 76,
	0, 0, 0, 0, 999, 991, 0, 0, 0, 0,
	0, 0, 648, 726, 0, 778, 783, 785, 786, 0,
	0, 789, 790, 791, 792, 0, 0, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 820, 821, 822,
	823, 824, 825, 805, 806, 807, 808, 809, 810, 817,
	0, 0, 814, 0, 0, 0, 1082, 912, 0, 0,
	855, 857, 858, 859, 860, 861, 856, 0, 0, 0,
	0, 847, 849, 893, 0, 657, 695, 704, 705, 516,
	415, 618, 620, 42, 0, 0, 68, 0, 77, 0,
	79, 80, 0, 983, 984, 986, 985, 987, 0, 488,
	478, 0, 766, 0, 0, 772, 0, 779, 787, 788,
	793, 794, 811, 0, 0, 813, 0, 0, 920, 0,
	891, 900, 913, 0, 0, 696, 696, 696, 696, 0,
	894, 697, 1264, 0, 0, 701, 702, 706, 736, 0,
	52, 0, 54, 56, 57, 865, 65, 66, 70, 78,
	0, 487, 0, 742, 0, 744, 0, 0, 0, 0,
	0, 776, 0, 818, 819, 812, 815, 816, 889, 899,
	901, 902, 0, 914, 915, 916, 918, 842, 843, 844,
	845, 0, 0, 699, 0, 43, 44, 0, 53, 0,
	0, 992, 489, 0, 746, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 890, 903, 0, 904, 0, 0,
	0, 846, 698, 700, 0, 0, 55, 866, 743, 740,
	0, 778, 768, 0, 770, 0, 0, 0, 0, 905,
	907, 908, 0, 0, 906, 45, 46, 47, 0, 0,
	748, 0, 764, 769, 771, 773, 0, 777, 775, 909,
	911, 910, 867, 747, 0, 760, 745, 0, 774, 749,
	-2, 0, 765, 750, -2, 0, 758, 0, 0, 751,
	759, 0, 754, 0, 0, 0, 753, 0, -2, 761,
	0, 0, 755, -2, 0, 763, 762,
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 516,
	104, 103, 105, 3, 517, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 518, 115, 519, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:609
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:642
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:647
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:653
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:673
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:679
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:686
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:694
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:700
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:709
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:717
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:730
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:742
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:757
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:763
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:767
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:773
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:780
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:789
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:793
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:797
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:816
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:825
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:836
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:840
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:846
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:850
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:856
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:860
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:866
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:890
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:909
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:913
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:917
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:922
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:934
		{
			yyVAL.str = ""
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:938
		{
			yyVAL.str = yyDollar[3].str
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:943
		{
			yyVAL.str = "\n"
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:947
		{
			yyVAL.str = yyDollar[3].str
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:956
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:980
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:984
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:996
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1014
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1031
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1058
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1128
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1160
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1166
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1181
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1190
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1194
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1198
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1202
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1206
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1210
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1217
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1221
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1234
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1243
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1247
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1468
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1475
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1484
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1534
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1538
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1545
		{
			yyVAL.str = yyDollar[3].str
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1551
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1561
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1594
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1617
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1640
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1654
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1676
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1693
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1710
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1716
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1720
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1731
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1742
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1754
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1758
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1762
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1766
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1770
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1780
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1784
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1788
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1797
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1808
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1815
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1821
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1878
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1942
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1946
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2022
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2026
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2043
		{
			yyVAL.str = "true"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2044
		{
			yyVAL.str = "false"
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2045
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2072
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2078
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2122
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2154
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2162
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2166
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2178
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2186
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2190
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2198
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.item = nil
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2209
		{
			yyVAL.item = nil
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2237
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2255
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2266
		{
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2270
		{
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
=======
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
>>>>>>> b662dd2edac50ceed22b8e91a67e5276eb8c6150
		var yyLOCAL tree.Statement
//line mysql_sql.y:2284
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2313
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2350
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2360
		{
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2362
		{
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2488
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2492
		{
			yyVAL.str = yyDollar[2].str
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2498
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2536
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2549
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2553
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2557
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2563
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2567
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2586
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2604
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2608
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2648
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2660
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2696
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2709
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2720
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2724
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2730
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2735
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2742
		{
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2744
		{
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2747
		{
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2756
		{
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2760
		{
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2765
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2774
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2781
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2787
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2795
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2802
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2809
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2829
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2839
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2852
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2860
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2867
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2874
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2897
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2920
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2924
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2939
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2943
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2949
		{
			yyVAL.str = yyDollar[1].str
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2953
		{
			yyVAL.str = yyDollar[3].str
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2959
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2963
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2969
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2974
		{
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2985
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2989
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3005
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3011
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3015
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3021
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3025
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3061
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3079
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3115
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3128
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3132
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3137
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3141
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3148
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3153
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3166
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3170
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3178
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3182
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3186
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3208
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3212
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3230
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3239
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3262
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3268
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3274
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3278
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3289
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3293
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3297
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3302
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3306
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3310
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3326
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3388
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3405
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3413
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3421
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3429
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3508
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3530
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3545
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3549
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3555
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3559
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3572
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3580
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3594
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3612
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3627
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3645
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3655
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3659
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3669
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3673
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3677
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3681
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3697
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3701
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3707
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3723
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3729
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3733
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3737
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3747
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3753
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3763
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3767
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3773
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3787
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3800
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3806
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3825
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3843
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3847
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3853
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3863
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3867
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3871
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3876
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3880
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3884
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3888
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3893
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3897
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3901
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3905
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3909
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3914
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3918
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3922
		{
			yyVAL.str = yyDollar[2].str
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3931
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3935
		{
			yyVAL.str = yyDollar[1].str
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3939
		{
			yyVAL.str = yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3943
		{
			yyVAL.str = yyDollar[1].str
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3947
		{
			yyVAL.str = yyDollar[2].str
		}
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3981
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3991
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4002
		{
		}
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4007
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4019
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4025
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4035
		{
			yyVAL.str = yyDollar[1].str
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4039
		{
			yyVAL.str = yyDollar[1].str
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4045
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4058
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4066
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4079
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4087
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4093
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4239
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4243
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4249
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4259
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4263
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4283
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4296
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4302
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4309
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4337
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4341
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4347
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4364
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4368
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4372
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4382
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4405
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4435
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4439
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4449
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4453
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4459
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4464
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4469
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4473
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4477
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4481
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4518
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4524
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4528
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4538
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4547
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4557
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4569
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4580
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4601
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4610
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4614
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4619
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4623
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4654
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4668
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4699
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4705
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4709
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4724
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4738
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4744
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4748
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4754
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4770
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4774
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4783
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4788
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4797
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4801
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4811
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4815
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4842
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4850
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4890
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4894
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4912
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4918
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4922
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4926
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4932
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4936
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4940
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4944
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4948
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4952
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4956
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4960
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4964
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4968
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4972
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4992
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4996
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5000
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5012
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5016
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5024
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5028
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5044
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5051
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5055
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5061
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5066
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5070
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5074
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5088
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5092
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5096
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5100
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5114
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5118
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5127
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5132
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5149
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5159
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5165
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5175
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5199
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5222
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5231
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5241
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5259
		{
			yyVAL.str = yyDollar[1].str
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5269
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5275
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5281
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5295
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5302
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5308
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5327
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5331
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5335
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5344
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5350
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5354
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5360
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5368
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5376
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5388
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5400
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5412
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5440
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5450
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5454
		{
			yyVAL.str = yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5472
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5486
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5500
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5509
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5515
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5525
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5537
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5542
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5566
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5571
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5575
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5605
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5609
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5613
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5617
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5645
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5651
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5655
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5659
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5679
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5683
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5691
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5695
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5700
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5716
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5725
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5729
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5733
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5737
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5746
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5761
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5765
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5771
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5781
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5798
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5815
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5828
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5841
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5867
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5882
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5897
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5914
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5929
		{
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5935
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5939
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5943
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5949
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:5953
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5961
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5965
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5975
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5982
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:5995
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6002
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6011
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6030
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6040
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6049
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6058
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6078
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6098
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6185
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6193
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6209
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6234
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6243
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6268
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6277
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6286
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6344
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6356
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6378
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6393
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6412
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6420
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6431
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6440
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6457
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6467
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6475
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6483
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6497
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6507
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6526
		{
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6528
		{
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6569
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6579
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6583
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6587
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6593
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6602
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6608
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6612
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6627
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6635
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6639
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6653
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6657
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6661
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6665
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6669
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6673
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6681
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6685
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6689
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6697
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6701
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6705
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6725
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6735
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6741
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6745
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6800
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6804
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6818
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6831
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6881
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6892
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6897
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6903
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6915
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6927
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6952
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6991
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7004
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7030
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7043
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7056
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7069
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7084
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7107
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7141
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7189
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7206
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7218
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7238
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7258
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7278
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7307
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7320
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7333
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7346
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7358
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7382
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7394
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7406
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7418
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7442
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7454
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7467
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7480
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7495
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7503
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7512
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7522
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7545
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7550
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7556
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7563
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7567
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7572
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7576
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7611
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7625
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7642
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7648
		{
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7660
		{
			yyVAL.str = ""
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

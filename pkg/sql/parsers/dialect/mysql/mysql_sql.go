// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const OUT = 57462
const INOUT = 57463
const BEGIN = 57464
const START = 57465
const TRANSACTION = 57466
const COMMIT = 57467
const ROLLBACK = 57468
const WORK = 57469
const CONSISTENT = 57470
const SNAPSHOT = 57471
const CHAIN = 57472
const NO = 57473
const RELEASE = 57474
const PRIORITY = 57475
const QUICK = 57476
const BIT = 57477
const TINYINT = 57478
const SMALLINT = 57479
const MEDIUMINT = 57480
const INT = 57481
const INTEGER = 57482
const BIGINT = 57483
const INTNUM = 57484
const REAL = 57485
const DOUBLE = 57486
const FLOAT_TYPE = 57487
const DECIMAL = 57488
const NUMERIC = 57489
const DECIMAL_VALUE = 57490
const TIME = 57491
const TIMESTAMP = 57492
const DATETIME = 57493
const YEAR = 57494
const CHAR = 57495
const VARCHAR = 57496
const BOOL = 57497
const CHARACTER = 57498
const VARBINARY = 57499
const NCHAR = 57500
const TEXT = 57501
const TINYTEXT = 57502
const MEDIUMTEXT = 57503
const LONGTEXT = 57504
const BLOB = 57505
const TINYBLOB = 57506
const MEDIUMBLOB = 57507
const LONGBLOB = 57508
const JSON = 57509
const ENUM = 57510
const UUID = 57511
const GEOMETRY = 57512
const POINT = 57513
const LINESTRING = 57514
const POLYGON = 57515
const GEOMETRYCOLLECTION = 57516
const MULTIPOINT = 57517
const MULTILINESTRING = 57518
const MULTIPOLYGON = 57519
const INT1 = 57520
const INT2 = 57521
const INT3 = 57522
const INT4 = 57523
const INT8 = 57524
const S3OPTION = 57525
const SQL_SMALL_RESULT = 57526
const SQL_BIG_RESULT = 57527
const SQL_BUFFER_RESULT = 57528
const LOW_PRIORITY = 57529
const HIGH_PRIORITY = 57530
const DELAYED = 57531
const CREATE = 57532
const ALTER = 57533
const DROP = 57534
const RENAME = 57535
const ANALYZE = 57536
const ADD = 57537
const RETURNS = 57538
const SCHEMA = 57539
const TABLE = 57540
const SEQUENCE = 57541
const INDEX = 57542
const VIEW = 57543
const TO = 57544
const IGNORE = 57545
const IF = 57546
const PRIMARY = 57547
const COLUMN = 57548
const CONSTRAINT = 57549
const SPATIAL = 57550
const FULLTEXT = 57551
const FOREIGN = 57552
const KEY_BLOCK_SIZE = 57553
const SHOW = 57554
const DESCRIBE = 57555
const EXPLAIN = 57556
const DATE = 57557
const ESCAPE = 57558
const REPAIR = 57559
const OPTIMIZE = 57560
const TRUNCATE = 57561
const MAXVALUE = 57562
const PARTITION = 57563
const REORGANIZE = 57564
const LESS = 57565
const THAN = 57566
const PROCEDURE = 57567
const TRIGGER = 57568
const STATUS = 57569
const VARIABLES = 57570
const ROLE = 57571
const PROXY = 57572
const AVG_ROW_LENGTH = 57573
const STORAGE = 57574
const DISK = 57575
const MEMORY = 57576
const CHECKSUM = 57577
const COMPRESSION = 57578
const DATA = 57579
const DIRECTORY = 57580
const DELAY_KEY_WRITE = 57581
const ENCRYPTION = 57582
const ENGINE = 57583
const MAX_ROWS = 57584
const MIN_ROWS = 57585
const PACK_KEYS = 57586
const ROW_FORMAT = 57587
const STATS_AUTO_RECALC = 57588
const STATS_PERSISTENT = 57589
const STATS_SAMPLE_PAGES = 57590
const DYNAMIC = 57591
const COMPRESSED = 57592
const REDUNDANT = 57593
const COMPACT = 57594
const FIXED = 57595
const COLUMN_FORMAT = 57596
const AUTO_RANDOM = 57597
const RESTRICT = 57598
const CASCADE = 57599
const ACTION = 57600
const PARTIAL = 57601
const SIMPLE = 57602
const CHECK = 57603
const ENFORCED = 57604
const RANGE = 57605
const LIST = 57606
const ALGORITHM = 57607
const LINEAR = 57608
const PARTITIONS = 57609
const SUBPARTITION = 57610
const SUBPARTITIONS = 57611
const CLUSTER = 57612
const TYPE = 57613
const ANY = 57614
const SOME = 57615
const EXTERNAL = 57616
const LOCALFILE = 57617
const URL = 57618
const PREPARE = 57619
const DEALLOCATE = 57620
const RESET = 57621
const EXTENSION = 57622
const INCREMENT = 57623
const CYCLE = 57624
const MINVALUE = 57625
const PUBLICATION = 57626
const SUBSCRIPTIONS = 57627
const PUBLICATIONS = 57628
const PROPERTIES = 57629
const PARSER = 57630
const VISIBLE = 57631
const INVISIBLE = 57632
const BTREE = 57633
const HASH = 57634
const RTREE = 57635
const BSI = 57636
const ZONEMAP = 57637
const LEADING = 57638
const BOTH = 57639
const TRAILING = 57640
const UNKNOWN = 57641
const EXPIRE = 57642
const ACCOUNT = 57643
const ACCOUNTS = 57644
const UNLOCK = 57645
const DAY = 57646
const NEVER = 57647
const PUMP = 57648
const MYSQL_COMPATBILITY_MODE = 57649
const SECOND = 57650
const ASCII = 57651
const COALESCE = 57652
const COLLATION = 57653
const HOUR = 57654
const MICROSECOND = 57655
const MINUTE = 57656
const MONTH = 57657
const QUARTER = 57658
const REPEAT = 57659
const REVERSE = 57660
const ROW_COUNT = 57661
const WEEK = 57662
const REVOKE = 57663
const FUNCTION = 57664
const PRIVILEGES = 57665
const TABLESPACE = 57666
const EXECUTE = 57667
const SUPER = 57668
const GRANT = 57669
const OPTION = 57670
const REFERENCES = 57671
const REPLICATION = 57672
const SLAVE = 57673
const CLIENT = 57674
const USAGE = 57675
const RELOAD = 57676
const FILE = 57677
const TEMPORARY = 57678
const ROUTINE = 57679
const EVENT = 57680
const SHUTDOWN = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const ENGINES = 57688
const LOW_CARDINALITY = 57689
const ADMIN_NAME = 57690
const RANDOM = 57691
const SUSPEND = 57692
const ATTRIBUTE = 57693
const HISTORY = 57694
const REUSE = 57695
const CURRENT = 57696
const OPTIONAL = 57697
const FAILED_LOGIN_ATTEMPTS = 57698
const PASSWORD_LOCK_TIME = 57699
const UNBOUNDED = 57700
const SECONDARY = 57701
const USER = 57702
const IDENTIFIED = 57703
const CIPHER = 57704
const ISSUER = 57705
const X509 = 57706
const SUBJECT = 57707
const SAN = 57708
const REQUIRE = 57709
const SSL = 57710
const NONE = 57711
const PASSWORD = 57712
const MAX_QUERIES_PER_HOUR = 57713
const MAX_UPDATES_PER_HOUR = 57714
const MAX_CONNECTIONS_PER_HOUR = 57715
const MAX_USER_CONNECTIONS = 57716
const FORMAT = 57717
const VERBOSE = 57718
const CONNECTION = 57719
const TRIGGERS = 57720
const PROFILES = 57721
const LOAD = 57722
const INFILE = 57723
const TERMINATED = 57724
const OPTIONALLY = 57725
const ENCLOSED = 57726
const ESCAPED = 57727
const STARTING = 57728
const LINES = 57729
const ROWS = 57730
const IMPORT = 57731
const MODUMP = 57732
const OVER = 57733
const PRECEDING = 57734
const FOLLOWING = 57735
const GROUPS = 57736
const DATABASES = 57737
const TABLES = 57738
const SEQUENCES = 57739
const EXTENDED = 57740
const FULL = 57741
const PROCESSLIST = 57742
const FIELDS = 57743
const COLUMNS = 57744
const OPEN = 57745
const ERRORS = 57746
const WARNINGS = 57747
const INDEXES = 57748
const SCHEMAS = 57749
const NODE = 57750
const LOCKS = 57751
const TABLE_NUMBER = 57752
const COLUMN_NUMBER = 57753
const TABLE_VALUES = 57754
const TABLE_SIZE = 57755
const NAMES = 57756
const GLOBAL = 57757
const SESSION = 57758
const ISOLATION = 57759
const LEVEL = 57760
const READ = 57761
const WRITE = 57762
const ONLY = 57763
const REPEATABLE = 57764
const COMMITTED = 57765
const UNCOMMITTED = 57766
const SERIALIZABLE = 57767
const LOCAL = 57768
const EVENTS = 57769
const PLUGINS = 57770
const CURRENT_TIMESTAMP = 57771
const DATABASE = 57772
const CURRENT_TIME = 57773
const LOCALTIME = 57774
const LOCALTIMESTAMP = 57775
const UTC_DATE = 57776
const UTC_TIME = 57777
const UTC_TIMESTAMP = 57778
const REPLACE = 57779
const CONVERT = 57780
const SEPARATOR = 57781
const TIMESTAMPDIFF = 57782
const CURRENT_DATE = 57783
const CURRENT_USER = 57784
const CURRENT_ROLE = 57785
const SECOND_MICROSECOND = 57786
const MINUTE_MICROSECOND = 57787
const MINUTE_SECOND = 57788
const HOUR_MICROSECOND = 57789
const HOUR_SECOND = 57790
const HOUR_MINUTE = 57791
const DAY_MICROSECOND = 57792
const DAY_SECOND = 57793
const DAY_MINUTE = 57794
const DAY_HOUR = 57795
const YEAR_MONTH = 57796
const SQL_TSI_HOUR = 57797
const SQL_TSI_DAY = 57798
const SQL_TSI_WEEK = 57799
const SQL_TSI_MONTH = 57800
const SQL_TSI_QUARTER = 57801
const SQL_TSI_YEAR = 57802
const SQL_TSI_SECOND = 57803
const SQL_TSI_MINUTE = 57804
const RECURSIVE = 57805
const CONFIG = 57806
const DRAINER = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const ADDDATE = 57815
const BIT_AND = 57816
const BIT_OR = 57817
const BIT_XOR = 57818
const CAST = 57819
const COUNT = 57820
const APPROX_COUNT_DISTINCT = 57821
const APPROX_PERCENTILE = 57822
const CURDATE = 57823
const CURTIME = 57824
const DATE_ADD = 57825
const DATE_SUB = 57826
const EXTRACT = 57827
const GROUP_CONCAT = 57828
const MAX = 57829
const MID = 57830
const MIN = 57831
const NOW = 57832
const POSITION = 57833
const SESSION_USER = 57834
const STD = 57835
const STDDEV = 57836
const MEDIAN = 57837
const STDDEV_POP = 57838
const STDDEV_SAMP = 57839
const SUBDATE = 57840
const SUBSTR = 57841
const SUBSTRING = 57842
const SUM = 57843
const SYSDATE = 57844
const SYSTEM_USER = 57845
const TRANSLATE = 57846
const TRIM = 57847
const VARIANCE = 57848
const VAR_POP = 57849
const VAR_SAMP = 57850
const AVG = 57851
const RANK = 57852
const NEXTVAL = 57853
const SETVAL = 57854
const CURRVAL = 57855
const LASTVAL = 57856
const ARROW = 57857
const ROW = 57858
const OUTFILE = 57859
const HEADER = 57860
const MAX_FILE_SIZE = 57861
const FORCE_QUOTE = 57862
const PARALLEL = 57863
const UNUSED = 57864
const BINDINGS = 57865
const DO = 57866
const DECLARE = 57867
const CALL = 57868
const KILL = 57869
const QUERY_RESULT = 57870

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"CALL",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9090

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 103,
	21, 580,
	-2, 561,
	-1, 113,
	217, 797,
	-2, 868,
	-1, 135,
	42, 402,
	217, 402,
	244, 409,
	245, 409,
	423, 402,
	-2, 435,
	-1, 463,
	293, 93,
	398, 93,
	-2, 1440,
	-1, 526,
	67, 1246,
	-2, 1580,
	-1, 527,
	67, 1264,
	-2, 1551,
	-1, 531,
	67, 1265,
	-2, 1579,
	-1, 554,
	67, 1176,
	-2, 1639,
	-1, 555,
	67, 1177,
	-2, 1638,
	-1, 556,
	67, 1178,
	-2, 1628,
	-1, 557,
	67, 1603,
	-2, 1623,
	-1, 558,
	67, 1604,
	-2, 1624,
	-1, 559,
	67, 1605,
	-2, 1630,
	-1, 560,
	67, 1606,
	-2, 1613,
	-1, 561,
	67, 1607,
	-2, 1621,
	-1, 562,
	67, 1608,
	-2, 1631,
	-1, 563,
	67, 1609,
	-2, 1632,
	-1, 564,
	67, 1610,
	-2, 1637,
	-1, 565,
	67, 1611,
	-2, 1642,
	-1, 566,
	67, 1612,
	-2, 1643,
	-1, 568,
	67, 1243,
	-2, 1432,
	-1, 575,
	67, 1252,
	-2, 1458,
	-1, 579,
	67, 1256,
	-2, 1497,
	-1, 580,
	67, 1257,
	-2, 1575,
	-1, 588,
	67, 1267,
	-2, 1560,
	-1, 590,
	67, 1269,
	-2, 1570,
	-1, 591,
	67, 1270,
	-2, 1594,
	-1, 602,
	67, 1154,
	-2, 1633,
	-1, 603,
	67, 1155,
	-2, 1634,
	-1, 604,
	67, 1156,
	-2, 1635,
	-1, 611,
	21, 581,
	-2, 544,
	-1, 671,
	418, 435,
	419, 435,
	-2, 403,
	-1, 720,
	104, 1432,
	115, 1432,
	135, 1432,
	-2, 1407,
	-1, 761,
	21, 581,
	-2, 544,
	-1, 860,
	21, 580,
	-2, 1059,
	-1, 1210,
	67, 1314,
	-2, 1577,
	-1, 1211,
	67, 1315,
	-2, 1578,
	-1, 1365,
	68, 722,
	-2, 728,
	-1, 1677,
	68, 1393,
	136, 1393,
	-2, 1562,
	-1, 1678,
	68, 1393,
	136, 1393,
	-2, 1561,
	-1, 1679,
	68, 1371,
	136, 1371,
	-2, 1548,
	-1, 1680,
	68, 1372,
	136, 1372,
	-2, 1553,
	-1, 1681,
	68, 1373,
	136, 1373,
	-2, 1485,
	-1, 1682,
	68, 1374,
	136, 1374,
	-2, 1479,
	-1, 1683,
	68, 1375,
	136, 1375,
	-2, 1423,
	-1, 1684,
	68, 1376,
	136, 1376,
	-2, 1550,
	-1, 1685,
	68, 1377,
	136, 1377,
	-2, 1483,
	-1, 1686,
	68, 1378,
	136, 1378,
	-2, 1478,
	-1, 1687,
	68, 1379,
	136, 1379,
	-2, 1471,
	-1, 1689,
	68, 1382,
	136, 1382,
	-2, 1594,
	-1, 1690,
	68, 1362,
	136, 1362,
	-2, 1580,
	-1, 1691,
	68, 1391,
	136, 1391,
	-2, 1551,
	-1, 1692,
	68, 1391,
	136, 1391,
	-2, 1579,
	-1, 1693,
	68, 1391,
	136, 1391,
	-2, 1441,
	-1, 1694,
	68, 1389,
	136, 1389,
	-2, 1570,
	-1, 1695,
	68, 1386,
	136, 1386,
	-2, 1463,
	-1, 1696,
	67, 1344,
	68, 1344,
	136, 1344,
	360, 1344,
	361, 1344,
	362, 1344,
	-2, 1422,
	-1, 1697,
	67, 1345,
	68, 1345,
	136, 1345,
	360, 1345,
	361, 1345,
	362, 1345,
	-2, 1424,
	-1, 1698,
	67, 1348,
	68, 1348,
	136, 1348,
	360, 1348,
	361, 1348,
	362, 1348,
	-2, 1552,
	-1, 1699,
	67, 1350,
	68, 1350,
	136, 1350,
	360, 1350,
	361, 1350,
	362, 1350,
	-2, 1535,
	-1, 1700,
	67, 1352,
	68, 1352,
	136, 1352,
	360, 1352,
	361, 1352,
	362, 1352,
	-2, 1484,
	-1, 1701,
	67, 1354,
	68, 1354,
	136, 1354,
	360, 1354,
	361, 1354,
	362, 1354,
	-2, 1467,
	-1, 1702,
	67, 1355,
	68, 1355,
	136, 1355,
	360, 1355,
	361, 1355,
	362, 1355,
	-2, 1468,
	-1, 1703,
	67, 1357,
	68, 1357,
	136, 1357,
	360, 1357,
	361, 1357,
	362, 1357,
	-2, 1421,
	-1, 1704,
	68, 1396,
	136, 1396,
	360, 1396,
	361, 1396,
	362, 1396,
	-2, 1446,
	-1, 1705,
	68, 1396,
	136, 1396,
	360, 1396,
	361, 1396,
	362, 1396,
	-2, 1459,
	-1, 1706,
	68, 1399,
	136, 1399,
	360, 1399,
	361, 1399,
	362, 1399,
	-2, 1442,
	-1, 1707,
	68, 1396,
	136, 1396,
	360, 1396,
	361, 1396,
	362, 1396,
	-2, 1520,
	-1, 1720,
	1, 825,
	68, 825,
	546, 825,
	-2, 832,
	-1, 1826,
	21, 580,
	-2, 672,
	-1, 1995,
	1, 826,
	68, 826,
	546, 826,
	-2, 832,
	-1, 2007,
	65, 488,
	136, 488,
	-2, 963,
	-1, 2025,
	278, 1027,
	-2, 1006,
	-1, 2275,
	278, 1027,
	-2, 1007,
	-1, 2400,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 911,
	-1, 2403,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 911,
	-1, 2413,
	65, 488,
	136, 488,
	-2, 964,
	-1, 2507,
	88, 832,
	131, 832,
	170, 832,
	173, 832,
	-2, 912,
	-1, 2795,
	68, 883,
	136, 883,
	-2, 832,
	-1, 2799,
	68, 883,
	136, 883,
	-2, 832,
	-1, 2813,
	68, 887,
	136, 887,
	-2, 832,
	-1, 2818,
	68, 888,
	136, 888,
	-2, 832,
}

const yyPrivate = 57344

const yyLast = 33357

var yyAct = [...]int{
	493, 2799, 1129, 1426, 2798, 2778, 2807, 2689, 474, 472,
	1191, 2729, 495, 2737, 2707, 2474, 2565, 2479, 2287, 2648,
	1659, 2649, 2616, 1037, 2539, 2353, 2632, 2636, 2500, 2559,
	2581, 2354, 891, 2499, 612, 152, 2501, 2477, 1342, 2549,
	1386, 2527, 393, 393, 523, 1388, 1187, 2010, 393, 409,
	416, 2506, 2252, 416, 1092, 2423, 1194, 2469, 2089, 1488,
	2075, 2383, 2088, 2297, 2090, 1756, 2276, 1820, 2082, 2351,
	2085, 1675, 1891, 476, 2346, 1558, 427, 1527, 1761, 2111,
	2329, 2227, 2222, 1458, 2296, 2224, 1729, 421, 1501, 1996,
	1673, 471, 1890, 755, 1665, 1554, 997, 2168, 1015, 465,
	2250, 607, 466, 2129, 1429, 719, 1352, 2125, 1536, 1333,
	1932, 1553, 1535, 1528, 725, 1481, 650, 1013, 1809, 1461,
	1459, 414, 32, 1821, 2029, 3, 1974, 1757, 1978, 1423,
	413, 20, 1728, 1128, 1360, 1338, 729, 45, 1858, 931,
	1045, 1773, 1586, 607, 410, 9, 728, 31, 411, 7,
	1185, 412, 8, 1555, 1373, 1123, 475, 151, 1101, 102,
	1671, 1713, 1565, 1046, 464, 1647, 1933, 1240, 1396, 1485,
	1224, 1176, 405, 772, 1534, 473, 976, 1397, 1513, 1184,
	723, 711, 483, 1828, 1372, 45, 1190, 1531, 1026, 1343,
	1414, 402, 1071, 1022, 1246, 649, 1245, 1084, 429, 609,
	17, 10, 5, 1038, 1122, 995, 712, 145, 415, 2162,
	666, 148, 1466, 1572, 1893, 647, 2162, 150, 611, 389,
	2555, 1562, 2550, 430, 2470, 2352, 1356, 2625, 892, 1530,
	610, 149, 886, 41, 137, 114, 149, 2492, 41, 137,
	114, 677, 2591, 2680, 149, 620, 792, 2491, 1878, 1559,
	1886, 2600, 425, 398, 392, 392, 149, 1073, 149, 2191,
	400, 419, 1570, 1177, 1143, 149, 1181, 41, 137, 114,
	1717, 1844, 32, 149, 149, 149, 751, 826, 149, 1054,
	1140, 20, 1055, 692, 1845, 2592, 691, 45, 146, 1499,
	1180, 1859, 101, 146, 1161, 9, 2725, 31, 1136, 7,
	1034, 1142, 8, 1266, 1469, 1470, 726, 606, 1074, 2144,
	2137, 101, 426, 146, 1133, 146, 687, 597, 2723, 596,
	598, 599, 146, 600, 601, 1976, 1043, 1044, 2652, 2653,
	146, 146, 146, 819, 1410, 1135, 1193, 807, 1041, 621,
	808, 824, 1040, 1043, 1044, 735, 730, 734, 736, 722,
	721, 800, 2626, 2627, 802, 1641, 2487, 829, 830, 831,
	828, 2711, 2712, 2355, 2557, 1057, 1182, 2618, 810, 696,
	2130, 2618, 740, 2131, 2621, 2132, 733, 2553, 1975, 2355,
	1196, 775, 803, 613, 1873, 766, 693, 1179, 2560, 2561,
	2562, 2563, 393, 1482, 2679, 2631, 2364, 2384, 1474, 1566,
	508, 103, 393, 765, 2238, 2391, 2497, 1644, 1172, 2236,
	2228, 1800, 2573, 2157, 1712, 1327, 1326, 1966, 416, 416,
	812, 393, 1883, 813, 738, 822, 823, 2294, 113, 2155,
	147, 741, 2079, 760, 762, 821, 795, 2576, 1802, 764,
	805, 1280, 2494, 2243, 1478, 695, 399, 2232, 731, 103,
	135, 815, 2727, 1805, 796, 1262, 2718, 775, 2249, 1259,
	2256, 2233, 2234, 1261, 1258, 1260, 1264, 1265, 2651, 739,
	2588, 1263, 2682, 2683, 2641, 1032, 2235, 798, 2003, 418,
	862, 2486, 417, 460, 2443, 1195, 462, 2488, 759, 801,
	804, 461, 2808, 2637, 2792, 1178, 1571, 2746, 2722, 806,
	2753, 787, 1910, 2691, 1981, 2687, 2688, 732, 2691, 1021,
	2541, 1056, 1066, 797, 761, 694, 1575, 1577, 1578, 2607,
	2436, 1497, 1498, 811, 2757, 765, 1783, 817, 818, 724,
	971, 968, 969, 970, 2732, 1782, 1915, 2311, 1914, 1913,
	1911, 2230, 1987, 45, 45, 1762, 1765, 727, 1080, 688,
	2427, 103, 1059, 1202, 1205, 1206, 2449, 2450, 1079, 816,
	2060, 896, 777, 776, 1203, 1036, 1035, 1020, 726, 809,
	2528, 2529, 2530, 2532, 2531, 785, 1019, 737, 2809, 768,
	769, 2779, 814, 799, 1990, 1991, 1992, 1993, 2815, 2582,
	2431, 756, 2247, 2207, 2405, 998, 1587, 1560, 895, 1560,
	1560, 2803, 1912, 425, 757, 2615, 1269, 1270, 1271, 1272,
	1273, 1274, 1267, 1268, 763, 1072, 2113, 2115, 1879, 770,
	792, 2589, 2368, 993, 152, 996, 780, 781, 1835, 2161,
	1563, 690, 2160, 783, 689, 1003, 1007, 726, 777, 776,
	1006, 1005, 420, 973, 2218, 1574, 784, 1043, 1044, 650,
	2590, 1010, 2733, 2681, 864, 865, 866, 867, 644, 645,
	646, 2170, 2169, 2117, 1765, 1154, 1155, 868, 1832, 1043,
	1044, 2728, 1077, 1766, 1472, 2628, 2629, 925, 1759, 1473,
	42, 1033, 1760, 1763, 1042, 1834, 1833, 1831, 1573, 1039,
	1075, 1076, 1471, 393, 2540, 1068, 424, 1561, 610, 699,
	2239, 2229, 1769, 791, 2493, 2574, 2158, 1483, 115, 42,
	698, 2514, 1389, 115, 607, 607, 607, 1887, 2248, 1096,
	1096, 115, 393, 999, 1000, 1001, 1002, 2802, 1004, 2231,
	1916, 1917, 1008, 115, 1764, 115, 2758, 786, 2498, 416,
	996, 152, 115, 1126, 1126, 827, 2261, 1103, 1576, 700,
	115, 115, 115, 1475, 1130, 115, 1158, 642, 2814, 1138,
	1030, 904, 905, 1173, 1157, 1094, 1094, 2326, 1048, 1049,
	1389, 1051, 1052, 1053, 1098, 2114, 2429, 2730, 2731, 1159,
	2428, 994, 724, 1980, 1144, 1204, 2061, 2063, 2064, 2065,
	2062, 1766, 1096, 2322, 1096, 765, 1668, 2821, 688, 1477,
	2432, 2433, 829, 830, 831, 828, 2008, 103, 103, 727,
	792, 1818, 614, 744, 749, 750, 978, 2009, 2776, 1669,
	1670, 1023, 1027, 1027, 1027, 980, 2820, 1861, 2401, 1768,
	1653, 1192, 1819, 1878, 1772, 1770, 1984, 1985, 702, 1771,
	2811, 1777, 611, 1023, 1516, 1023, 1715, 2189, 1028, 1029,
	1983, 2793, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1012, 827, 467, 1175, 1235, 1236,
	614, 1819, 1067, 1058, 1244, 1060, 2788, 1134, 860, 1047,
	690, 1141, 1050, 689, 1283, 1284, 1285, 1293, 701, 1189,
	2326, 705, 704, 703, 827, 697, 1618, 1299, 1119, 1617,
	1300, 1168, 2782, 2781, 2762, 1064, 2739, 45, 2812, 2701,
	1167, 1302, 1307, 1308, 1090, 1091, 45, 1819, 2659, 1568,
	1087, 1088, 1089, 2654, 1164, 607, 1207, 2009, 1163, 827,
	1078, 2609, 1971, 1968, 1102, 1597, 1104, 398, 1145, 1170,
	2608, 1866, 1714, 1150, 2789, 1118, 1174, 1117, 1127, 843,
	842, 852, 853, 845, 846, 847, 848, 849, 850, 851,
	844, 829, 830, 831, 828, 1514, 1146, 827, 1620, 1328,
	1568, 1568, 1568, 1349, 2740, 611, 1846, 2702, 1186, 1559,
	1166, 1165, 1162, 746, 747, 748, 2578, 974, 792, 1183,
	1751, 2578, 2605, 1658, 1622, 1292, 1550, 1350, 393, 2610,
	1371, 1096, 1375, 1495, 1377, 1378, 1596, 1011, 1733, 393,
	1275, 1276, 650, 1279, 981, 1387, 1188, 2604, 790, 1096,
	2603, 1294, 2602, 1068, 2577, 2451, 1238, 1657, 409, 1081,
	2741, 2416, 1233, 1234, 1301, 1353, 1303, 1226, 2313, 2108,
	496, 505, 1331, 1024, 1334, 1335, 497, 1409, 504, 498,
	502, 501, 499, 500, 2262, 1415, 1415, 2127, 1068, 1068,
	2578, 1068, 1370, 2011, 393, 1957, 1371, 1371, 1413, 1881,
	1096, 1456, 1468, 1880, 1872, 1278, 1402, 1955, 1953, 1376,
	1748, 1951, 607, 1938, 1096, 2578, 1340, 1341, 2578, 2390,
	2578, 1408, 2578, 1846, 1411, 1412, 829, 830, 831, 828,
	506, 1304, 1379, 1380, 1381, 844, 2314, 1819, 1613, 1598,
	393, 1371, 1096, 1894, 1506, 393, 393, 1509, 1876, 1395,
	1870, 1549, 1512, 1868, 789, 1105, 1518, 1521, 1452, 1453,
	399, 1323, 503, 1958, 1404, 1405, 1293, 1293, 1538, 1367,
	1863, 1656, 1025, 1293, 1293, 1956, 1952, 1147, 1545, 1952,
	1494, 827, 1732, 1417, 1654, 1357, 103, 1479, 1626, 1345,
	103, 1348, 972, 758, 1625, 1616, 1607, 1398, 1606, 1400,
	1401, 103, 1387, 1503, 1351, 1605, 1096, 1557, 873, 1484,
	103, 827, 1406, 1023, 1567, 1151, 1733, 1374, 1864, 1505,
	1830, 1869, 1390, 1391, 778, 1403, 790, 758, 753, 2266,
	1282, 1281, 1383, 1507, 1508, 1392, 1027, 1384, 1864, 2771,
	1368, 2152, 1551, 1394, 2642, 2786, 2515, 1024, 1539, 1399,
	1733, 1382, 1653, 2257, 1016, 2759, 827, 1419, 1017, 1420,
	1580, 1407, 827, 827, 827, 1418, 827, 1085, 2408, 1083,
	2406, 1584, 1585, 827, 1533, 1774, 1416, 2327, 1086, 2318,
	2315, 1533, 1568, 1152, 1455, 1457, 1374, 2643, 758, 2516,
	1492, 1493, 2163, 1480, 843, 842, 852, 853, 845, 846,
	847, 848, 849, 850, 851, 844, 1421, 2080, 1867, 1837,
	1500, 2409, 2258, 2407, 1232, 1489, 1490, 1491, 45, 767,
	1901, 1504, 1313, 1241, 1241, 726, 1593, 2439, 1186, 1229,
	1231, 1228, 726, 1230, 831, 828, 1522, 1369, 1623, 847,
	848, 849, 850, 851, 844, 1630, 1025, 2676, 1542, 828,
	1082, 1543, 1502, 1544, 1547, 2259, 1548, 1502, 1502, 2438,
	1540, 829, 830, 831, 828, 832, 845, 846, 847, 848,
	849, 850, 851, 844, 861, 2133, 1552, 2039, 2038, 1305,
	1306, 2182, 870, 1309, 1310, 1311, 1312, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 465, 2033, 765, 1708, 829,
	830, 831, 828, 2028, 875, 2420, 2797, 1588, 1903, 2756,
	393, 393, 393, 2785, 1730, 2495, 2747, 726, 1063, 2742,
	1065, 1579, 1069, 1070, 1737, 1068, 2181, 1660, 1661, 1581,
	1595, 1297, 2692, 1676, 1741, 1582, 1583, 1592, 2667, 2644,
	2593, 1226, 1298, 2551, 2521, 1609, 2518, 2083, 1068, 829,
	830, 831, 828, 2755, 2496, 765, 2517, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 2410, 2388, 2071, 1121, 2069,
	2223, 1739, 835, 836, 837, 838, 839, 840, 841, 833,
	1742, 1743, 829, 830, 831, 828, 2646, 829, 830, 831,
	828, 1755, 2067, 2387, 1823, 1823, 1468, 1823, 1608, 2237,
	2210, 2209, 1467, 2148, 2635, 2389, 2070, 1752, 2068, 829,
	830, 831, 828, 2481, 2057, 2717, 1709, 2055, 765, 1640,
	2054, 829, 830, 831, 828, 1096, 393, 829, 830, 831,
	828, 2066, 2480, 1649, 2053, 1744, 829, 830, 831, 828,
	460, 765, 152, 462, 2050, 1126, 2044, 1468, 461, 2475,
	1853, 2041, 1855, 2056, 896, 829, 830, 831, 828, 1662,
	2040, 2448, 1825, 1652, 1829, 1776, 727, 1716, 1651, 1750,
	1650, 1842, 2713, 727, 1646, 1645, 1148, 1676, 1745, 1827,
	1874, 1746, 103, 1557, 829, 830, 831, 828, 991, 1850,
	1096, 895, 1096, 1738, 1096, 2677, 2613, 2575, 1857, 765,
	1775, 2552, 1778, 1779, 1780, 1781, 2505, 1027, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1722, 1723, 1724, 1749, 2473, 2370, 1096, 1919,
	1852, 2471, 1747, 2455, 2453, 1888, 2076, 2422, 1884, 1125,
	1125, 2386, 2385, 2382, 1926, 2373, 1740, 1803, 2367, 1096,
	829, 830, 831, 828, 2185, 726, 1892, 2321, 860, 2595,
	1928, 2319, 2309, 2768, 852, 853, 845, 846, 847, 848,
	849, 850, 851, 844, 1094, 2308, 2215, 829, 830, 831,
	828, 2214, 1918, 2184, 1843, 2208, 2159, 2120, 1930, 1838,
	1839, 1840, 2058, 2051, 2047, 1094, 2046, 1905, 765, 1849,
	1851, 1848, 2045, 1927, 1655, 1885, 829, 830, 831, 828,
	1648, 1899, 843, 842, 852, 853, 845, 846, 847, 848,
	849, 850, 851, 844, 1197, 1198, 1199, 1200, 1201, 615,
	616, 617, 618, 1524, 1969, 1363, 1877, 1875, 1102, 1149,
	1882, 903, 614, 1959, 899, 1096, 553, 552, 1988, 898,
	874, 754, 1371, 2766, 1925, 1895, 1896, 2564, 2007, 2403,
	2183, 2402, 2400, 2377, 2013, 2376, 1909, 1934, 1242, 1243,
	2372, 1947, 1939, 2359, 1277, 2345, 1186, 149, 1972, 2022,
	137, 114, 1287, 829, 830, 831, 828, 2344, 2267, 2027,
	2187, 1107, 2180, 1898, 829, 830, 831, 828, 2172, 2035,
	2036, 2037, 843, 842, 852, 853, 845, 846, 847, 848,
	849, 850, 851, 844, 1998, 2167, 2016, 1823, 1335, 2124,
	2018, 1946, 1970, 1963, 1960, 1967, 1954, 2072, 2004, 1950,
	829, 830, 831, 828, 146, 2810, 1371, 765, 1468, 1468,
	1468, 1468, 1949, 2014, 829, 830, 831, 828, 1631, 765,
	1468, 1621, 1619, 1823, 1615, 1997, 1614, 2025, 1340, 1341,
	1601, 1612, 1603, 1600, 1599, 1523, 1096, 2015, 1322, 2030,
	1296, 2030, 1354, 2091, 2019, 2020, 1358, 393, 393, 1361,
	1295, 1286, 1108, 32, 1977, 2091, 1106, 2012, 2031, 149,
	2006, 2770, 20, 2764, 2754, 1293, 1826, 1293, 45, 1986,
	2143, 2751, 2749, 2147, 2666, 2611, 9, 2104, 31, 1096,
	7, 2024, 2154, 8, 2026, 893, 1330, 2032, 2021, 1945,
	2537, 2525, 2522, 2463, 2461, 1345, 2446, 1348, 2445, 2444,
	2441, 1374, 2435, 2395, 1339, 2017, 829, 830, 831, 828,
	2052, 1332, 829, 830, 831, 828, 146, 1467, 2042, 2043,
	1014, 2073, 1353, 2034, 2048, 2049, 2077, 2142, 2092, 2093,
	2094, 2095, 2081, 2001, 2000, 1999, 2103, 1344, 2106, 2105,
	2005, 611, 2078, 2140, 1347, 1336, 2107, 2118, 1948, 2146,
	1862, 1354, 2175, 2121, 2177, 1836, 2151, 1354, 1354, 1798,
	1731, 2156, 1227, 146, 2116, 2128, 1510, 1366, 1365, 2136,
	1944, 1337, 765, 2139, 2150, 2134, 1171, 1137, 2226, 2141,
	975, 923, 922, 921, 920, 2138, 2164, 919, 2241, 2165,
	393, 918, 2145, 829, 830, 831, 828, 917, 2442, 1943,
	765, 765, 765, 916, 915, 2171, 914, 913, 1676, 1468,
	1730, 912, 2265, 911, 2178, 2179, 910, 909, 2269, 908,
	2173, 2174, 829, 830, 831, 828, 907, 906, 902, 2298,
	2300, 901, 2298, 2298, 900, 897, 1755, 1755, 1755, 2305,
	890, 2217, 2192, 1096, 1096, 1942, 2193, 2194, 2195, 2196,
	2176, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2122,
	2123, 2268, 2219, 2216, 2211, 2270, 2271, 889, 829, 830,
	831, 828, 887, 886, 393, 885, 884, 883, 882, 2226,
	881, 880, 879, 878, 877, 2245, 1941, 1371, 1371, 1094,
	1094, 2295, 2263, 2299, 876, 2221, 2264, 2306, 2307, 2260,
	1997, 2253, 2254, 2246, 872, 1590, 871, 794, 1594, 829,
	830, 831, 828, 1940, 752, 2697, 2301, 2302, 1937, 1736,
	2272, 2330, 2331, 1719, 782, 2695, 2650, 2333, 1919, 1989,
	2303, 1847, 103, 1526, 793, 2325, 829, 830, 831, 828,
	2336, 829, 830, 831, 828, 2273, 1936, 1604, 2100, 2098,
	2337, 2335, 2097, 2101, 2099, 1611, 2096, 2323, 2324, 2796,
	2316, 393, 2312, 2320, 2317, 2102, 1871, 1815, 1816, 829,
	830, 831, 828, 1624, 1935, 2334, 1627, 1628, 1629, 2212,
	2213, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1865,
	2338, 1642, 2341, 2342, 2343, 85, 44, 829, 830, 831,
	828, 1965, 2244, 2350, 1451, 1931, 1860, 43, 1467, 1467,
	1467, 1467, 390, 1922, 2220, 2360, 2466, 1324, 2465, 1889,
	1467, 977, 2361, 1900, 1660, 1661, 2362, 2363, 829, 830,
	831, 828, 1131, 1710, 1237, 2366, 829, 830, 831, 828,
	2374, 395, 396, 1806, 1371, 1511, 829, 830, 831, 828,
	2399, 788, 2464, 397, 2630, 394, 1734, 829, 830, 831,
	828, 1823, 1468, 2413, 103, 2023, 1811, 1814, 1815, 1816,
	1812, 103, 1813, 1817, 1973, 1726, 1811, 1814, 1815, 1816,
	1812, 2378, 1813, 1817, 1096, 1385, 1502, 1364, 2704, 2421,
	2380, 1282, 1281, 1801, 2381, 393, 989, 990, 987, 988,
	985, 986, 983, 984, 2300, 1454, 1062, 1061, 820, 2414,
	2340, 2393, 1546, 2415, 2394, 2417, 1018, 979, 2418, 615,
	616, 617, 618, 1371, 2765, 2685, 2673, 765, 2411, 2671,
	2424, 2638, 614, 1031, 2623, 2622, 2620, 2612, 2548, 2347,
	2547, 2295, 2419, 2472, 2375, 2412, 2357, 2356, 2348, 982,
	614, 2468, 2126, 1389, 2699, 2698, 1354, 1354, 1354, 765,
	2457, 2149, 1721, 2091, 1602, 779, 2698, 2447, 2699, 2437,
	2358, 52, 1496, 2365, 103, 2452, 1100, 1, 2489, 2454,
	1362, 1125, 619, 2109, 2110, 2456, 2339, 2459, 2396, 2397,
	2398, 2458, 2112, 1564, 1799, 2091, 765, 1096, 1096, 1711,
	2240, 1009, 765, 643, 2508, 1288, 1156, 2508, 638, 1467,
	743, 774, 1153, 773, 771, 1239, 510, 2476, 1529, 2074,
	2544, 2703, 2736, 2665, 103, 842, 852, 853, 845, 846,
	847, 848, 849, 850, 851, 844, 2490, 2706, 1755, 1169,
	494, 2614, 765, 1094, 2424, 765, 765, 765, 2556, 2669,
	2558, 2503, 2478, 2504, 2509, 2512, 1569, 2519, 2520, 2511,
	1902, 2415, 1387, 825, 2545, 2135, 662, 546, 1920, 1921,
	521, 888, 1139, 1132, 2190, 2526, 1923, 1924, 2534, 2535,
	2536, 2542, 2523, 2482, 745, 2533, 520, 2392, 1982, 1929,
	2587, 632, 2572, 742, 663, 1643, 2554, 1325, 1346, 1329,
	2513, 2404, 2543, 2255, 2002, 2806, 2795, 2440, 2777, 2763,
	2690, 2584, 2791, 2721, 2752, 2485, 2483, 2484, 2745, 2686,
	1354, 431, 1476, 1961, 1962, 1361, 765, 605, 709, 2538,
	2570, 1525, 432, 640, 1735, 635, 2678, 625, 765, 2524,
	2579, 630, 1718, 2586, 637, 636, 631, 1995, 1994, 2585,
	1208, 834, 1225, 2205, 2594, 2206, 2597, 869, 470, 2601,
	1591, 623, 482, 1979, 2288, 629, 2119, 51, 50, 49,
	48, 2606, 1517, 156, 512, 155, 2662, 2708, 492, 765,
	491, 490, 489, 2624, 488, 1810, 1808, 2639, 2619, 2617,
	1807, 1463, 1462, 1515, 2188, 1767, 1422, 2647, 2598, 2599,
	2634, 2434, 2059, 2430, 2426, 2310, 634, 2633, 2507, 2274,
	633, 2660, 2663, 2275, 2640, 2281, 622, 1725, 2645, 930,
	628, 926, 928, 929, 927, 1908, 1904, 1753, 2664, 2655,
	2656, 2657, 2658, 1754, 2251, 1667, 2672, 626, 2674, 2675,
	2670, 1666, 2668, 843, 842, 852, 853, 845, 846, 847,
	848, 849, 850, 851, 844, 1664, 2684, 1663, 624, 992,
	2571, 2379, 1467, 1674, 1672, 2332, 2328, 2710, 2242, 2696,
	2694, 2693, 641, 1537, 1359, 1964, 1464, 1460, 2700, 2709,
	1804, 1720, 77, 76, 83, 126, 765, 39, 2510, 2714,
	608, 33, 28, 2715, 6, 4, 627, 30, 29, 15,
	16, 14, 1160, 2735, 13, 2724, 2726, 19, 27, 26,
	25, 2734, 149, 2738, 41, 137, 114, 95, 94, 2743,
	24, 765, 2719, 93, 946, 92, 91, 90, 23, 1354,
	12, 2744, 142, 2748, 1354, 2750, 89, 88, 87, 130,
	22, 2710, 2761, 143, 82, 80, 21, 81, 101, 78,
	765, 79, 765, 2709, 63, 2760, 62, 1192, 61, 74,
	2767, 73, 2769, 86, 2772, 72, 639, 2738, 71, 146,
	2166, 765, 2773, 2780, 70, 69, 68, 2787, 661, 60,
	2790, 2784, 59, 58, 57, 56, 1192, 75, 1192, 67,
	66, 65, 2186, 64, 55, 2794, 54, 53, 111, 2801,
	112, 110, 109, 2805, 2804, 1897, 108, 1192, 107, 2813,
	106, 105, 35, 2816, 36, 2818, 37, 2801, 2819, 2817,
	38, 2716, 2805, 946, 122, 121, 934, 123, 843, 842,
	852, 853, 845, 846, 847, 848, 849, 850, 851, 844,
	125, 138, 139, 127, 140, 141, 954, 958, 960, 962,
	964, 965, 967, 124, 971, 968, 969, 970, 119, 117,
	949, 950, 951, 952, 932, 933, 955, 120, 935, 118,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	947, 953, 116, 46, 11, 18, 2, 0, 0, 957,
	959, 961, 963, 966, 0, 0, 0, 0, 0, 0,
	0, 2304, 0, 0, 0, 0, 0, 0, 0, 113,
	136, 147, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 829, 830, 831, 828, 934, 948, 0, 0, 924,
	0, 135, 129, 128, 0, 946, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 954, 958, 960, 962, 964,
	965, 967, 0, 971, 968, 969, 970, 0, 1266, 949,
	950, 951, 952, 932, 933, 955, 0, 935, 0, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 947,
	953, 0, 0, 855, 0, 859, 0, 0, 957, 959,
	961, 963, 966, 0, 0, 0, 131, 132, 133, 1266,
	856, 858, 854, 0, 857, 843, 842, 852, 853, 845,
	846, 847, 848, 849, 850, 851, 844, 0, 0, 0,
	0, 0, 144, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 934, 0, 0,
	96, 0, 0, 0, 134, 0, 97, 0, 0, 2369,
	0, 0, 0, 0, 1906, 1907, 2371, 954, 958, 960,
	962, 964, 965, 967, 0, 971, 968, 969, 970, 0,
	0, 949, 950, 951, 952, 932, 933, 955, 0, 935,
	0, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 947, 953, 0, 0, 0, 0, 0, 0, 98,
	957, 959, 961, 963, 966, 0, 0, 0, 0, 40,
	1262, 0, 0, 0, 1259, 1589, 0, 0, 1261, 1258,
	1260, 1264, 1265, 0, 0, 0, 1263, 0, 0, 0,
	0, 0, 0, 2279, 0, 0, 0, 948, 843, 842,
	852, 853, 845, 846, 847, 848, 849, 850, 851, 844,
	0, 1262, 0, 0, 0, 1259, 42, 2289, 0, 1261,
	1258, 1260, 1264, 1265, 0, 0, 0, 1263, 0, 0,
	2282, 0, 0, 0, 0, 0, 0, 2277, 0, 956,
	0, 0, 2292, 2293, 0, 0, 0, 0, 2278, 115,
	0, 0, 0, 0, 1354, 0, 0, 2460, 0, 0,
	2462, 843, 842, 852, 853, 845, 846, 847, 848, 849,
	850, 851, 844, 0, 2467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 34, 104, 0, 0, 0,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1269, 1270, 1271, 1272, 1273, 1274, 1267, 1268,
	0, 0, 0, 0, 0, 2291, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 2285, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 2569, 0, 0, 0, 484, 0, 0, 0,
	234, 0, 0, 259, 2284, 2286, 0, 519, 0, 2580,
	319, 273, 0, 0, 0, 0, 576, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 2596,
	956, 509, 553, 552, 496, 505, 0, 0, 215, 154,
	497, 0, 504, 498, 502, 501, 499, 500, 0, 568,
	0, 0, 0, 0, 0, 0, 468, 481, 2566, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2569, 0, 0, 0, 0, 0, 2294,
	0, 0, 478, 479, 0, 0, 0, 0, 529, 0,
	480, 2280, 0, 524, 506, 507, 0, 2290, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 503, 527, 531, 227,
	590, 525, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 591, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 350,
	0, 0, 574, 2569, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 526, 0, 309, 291, 587, 469, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 2775, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 572, 287, 0, 0, 586, 567, 569, 570,
	573, 577, 578, 579, 580, 581, 583, 585, 589, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 2567, 0, 0, 0, 2568, 0, 588, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 530, 277,
	278, 279, 280, 575, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 597, 571, 596,
	598, 599, 595, 600, 601, 582, 487, 0, 534, 593,
	592, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 560, 539, 540, 541, 486, 542, 537, 538, 561,
	532, 557, 558, 511, 535, 543, 556, 544, 559, 562,
	563, 602, 603, 550, 604, 547, 564, 555, 554, 545,
	533, 565, 566, 518, 513, 548, 549, 536, 551, 514,
	515, 516, 517, 327, 528, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 519, 0,
	0, 319, 273, 0, 0, 0, 0, 576, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 509, 553, 552, 496, 505, 0, 0, 215,
	154, 497, 0, 504, 498, 502, 501, 499, 500, 0,
	568, 0, 0, 0, 0, 0, 0, 468, 481, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 479, 0, 0, 0, 0, 529,
	0, 480, 0, 0, 524, 506, 507, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 503, 527, 531,
	227, 590, 525, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 591, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 0,
	350, 0, 0, 574, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 526, 0, 309, 291, 587, 469,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 1290, 1289, 1291, 362, 241,
	198, 199, 345, 572, 287, 0, 0, 586, 567, 569,
	570, 573, 577, 578, 579, 580, 581, 583, 585, 589,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 530,
	277, 278, 279, 280, 575, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 597, 571,
	596, 598, 599, 595, 600, 601, 582, 487, 0, 534,
	593, 592, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 560, 539, 540, 541, 486, 542, 537, 538,
	561, 532, 557, 558, 511, 535, 543, 556, 544, 559,
	562, 563, 602, 603, 550, 604, 547, 564, 555, 554,
	545, 533, 565, 566, 518, 513, 548, 549, 536, 551,
	514, 515, 516, 517, 327, 528, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 519,
	0, 0, 319, 273, 0, 0, 0, 0, 576, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 509, 553, 552, 496, 505, 0, 0,
	215, 154, 497, 0, 504, 498, 502, 501, 499, 500,
	0, 568, 0, 0, 0, 0, 0, 0, 468, 481,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 479, 0, 0, 0, 0,
	529, 0, 480, 0, 0, 524, 506, 507, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 503, 527,
	531, 227, 590, 525, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 591,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 350, 0, 0, 574, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 526, 0, 309, 291, 587,
	469, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 572, 287, 0, 0, 586, 567,
	569, 570, 573, 577, 578, 579, 580, 581, 583, 585,
	589, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 2567, 0, 0, 0, 2568, 0,
	588, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	530, 277, 278, 279, 280, 575, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 597,
	571, 596, 598, 599, 595, 600, 601, 582, 487, 0,
	534, 593, 592, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 560, 539, 540, 541, 486, 542, 537,
	538, 561, 532, 557, 558, 511, 535, 543, 556, 544,
	559, 562, 563, 602, 603, 550, 604, 547, 564, 555,
	554, 545, 533, 565, 566, 518, 513, 548, 549, 536,
	551, 514, 515, 516, 517, 327, 528, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 234, 1355, 0, 259, 0, 0, 0,
	519, 0, 0, 319, 273, 0, 0, 0, 0, 576,
	584, 0, 0, 0, 0, 0, 0, 0, 1486, 0,
	0, 477, 0, 0, 509, 553, 552, 496, 505, 0,
	0, 215, 154, 497, 0, 504, 498, 502, 501, 499,
	500, 0, 568, 0, 0, 0, 0, 0, 0, 468,
	481, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 479, 0, 0, 0,
	0, 529, 0, 480, 0, 0, 1487, 506, 507, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 503,
	527, 531, 227, 590, 525, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	591, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 350, 0, 0, 574, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 526, 0, 309, 291,
	587, 469, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 572, 287, 0, 0, 586,
	567, 569, 570, 573, 577, 578, 579, 580, 581, 583,
	585, 589, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 530, 277, 278, 279, 280, 575, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	597, 571, 596, 598, 599, 595, 600, 601, 582, 487,
	0, 534, 593, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 560, 539, 540, 541, 486, 542,
	537, 538, 561, 532, 557, 558, 511, 535, 543, 556,
	544, 559, 562, 563, 602, 603, 550, 604, 547, 564,
	555, 554, 545, 533, 565, 566, 518, 513, 548, 549,
	536, 551, 514, 515, 516, 517, 149, 327, 528, 358,
	359, 360, 381, 344, 0, 231, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 863, 0, 0, 319, 273, 0, 0, 0,
	0, 576, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 509, 553, 552, 496,
	505, 0, 0, 215, 154, 497, 0, 504, 498, 502,
	501, 499, 500, 0, 568, 0, 0, 0, 0, 0,
	0, 468, 481, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 479, 0,
	0, 0, 0, 529, 0, 480, 0, 0, 524, 506,
	507, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 503, 527, 531, 227, 590, 525, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 591, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 350, 0, 0, 574, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 526, 0,
	309, 291, 587, 469, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 572, 287, 0,
	0, 586, 567, 569, 570, 573, 577, 578, 579, 580,
	581, 583, 585, 589, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 530, 277, 278, 279, 280, 575, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 597, 571, 596, 598, 599, 595, 600, 601,
	582, 487, 0, 534, 593, 592, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 115, 301, 239, 560, 539, 540, 541,
	486, 542, 537, 538, 561, 532, 557, 558, 511, 535,
	543, 556, 544, 559, 562, 563, 602, 603, 550, 604,
	547, 564, 555, 554, 545, 533, 565, 566, 518, 513,
	548, 549, 536, 551, 514, 515, 516, 517, 327, 528,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 234, 2774, 0, 259,
	0, 0, 0, 519, 0, 0, 319, 273, 0, 0,
	0, 0, 576, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 509, 553, 552,
	496, 505, 0, 0, 215, 154, 497, 0, 504, 498,
	502, 501, 499, 500, 0, 568, 0, 0, 0, 0,
	0, 0, 468, 481, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 479,
	0, 0, 0, 0, 529, 0, 480, 0, 0, 524,
	506, 507, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 503, 527, 531, 227, 590, 525, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 591, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 350, 0, 0, 574, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 526,
	0, 309, 291, 587, 469, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 572, 287,
	0, 0, 586, 567, 569, 570, 573, 577, 578, 579,
	580, 581, 583, 585, 589, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 530, 277, 278, 279, 280, 575,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 597, 571, 596, 598, 599, 595, 600,
	601, 582, 487, 0, 534, 593, 592, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 560, 539, 540,
	541, 486, 542, 537, 538, 561, 532, 557, 558, 511,
	535, 543, 556, 544, 559, 562, 563, 602, 603, 550,
	604, 547, 564, 555, 554, 545, 533, 565, 566, 518,
	513, 548, 549, 536, 551, 514, 515, 516, 517, 327,
	528, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 234, 1355, 0,
	259, 0, 0, 0, 519, 0, 0, 319, 273, 0,
	0, 0, 0, 576, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 509, 553,
	552, 496, 505, 0, 0, 215, 154, 497, 0, 504,
	498, 502, 501, 499, 500, 0, 568, 0, 0, 0,
	0, 0, 0, 468, 481, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 478,
	479, 0, 0, 0, 0, 529, 0, 480, 0, 0,
	524, 506, 507, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 503, 527, 531, 227, 590, 525, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 591, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 0, 0, 0, 350, 0, 0, 574,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	526, 0, 309, 291, 587, 469, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 572,
	287, 0, 0, 586, 567, 569, 570, 573, 577, 578,
	579, 580, 581, 583, 585, 589, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 530, 277, 278, 279, 280,
	575, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 597, 571, 596, 598, 599, 595,
	600, 601, 582, 487, 0, 534, 593, 592, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 560, 539,
	540, 541, 486, 542, 537, 538, 561, 532, 557, 558,
	511, 535, 543, 556, 544, 559, 562, 563, 602, 603,
	550, 604, 547, 564, 555, 554, 545, 533, 565, 566,
	518, 513, 548, 549, 536, 551, 514, 515, 516, 517,
	327, 528, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 519, 0, 0, 319, 273,
	0, 0, 0, 0, 576, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 509,
	553, 552, 496, 505, 0, 0, 215, 154, 497, 0,
	504, 498, 502, 501, 499, 500, 0, 568, 0, 0,
	0, 0, 0, 0, 468, 481, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 479, 1124, 0, 0, 0, 529, 0, 480, 0,
	0, 524, 506, 507, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 503, 527, 531, 227, 590, 525,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 591, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 350, 0, 0,
	574, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 526, 0, 309, 291, 587, 469, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	572, 287, 0, 0, 586, 567, 569, 570, 573, 577,
	578, 579, 580, 581, 583, 585, 589, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 530, 277, 278, 279,
	280, 575, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 597, 571, 596, 598, 599,
	595, 600, 601, 582, 487, 0, 534, 593, 592, 594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 560,
	539, 540, 541, 486, 542, 537, 538, 561, 532, 557,
	558, 511, 535, 543, 556, 544, 559, 562, 563, 602,
	603, 550, 604, 547, 564, 555, 554, 545, 533, 565,
	566, 518, 513, 548, 549, 536, 551, 514, 515, 516,
	517, 0, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 327, 528, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 519, 0, 0, 319,
	273, 0, 0, 0, 0, 576, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	509, 553, 552, 496, 505, 0, 0, 215, 154, 497,
	0, 504, 498, 502, 501, 499, 500, 0, 568, 0,
	0, 0, 0, 0, 0, 468, 481, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 479, 0, 0, 0, 0, 529, 0, 480,
	0, 0, 524, 506, 507, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 503, 527, 531, 227, 590,
	525, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 591, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 350, 0,
	0, 574, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 526, 0, 309, 291, 587, 469, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 572, 287, 0, 0, 586, 567, 569, 570, 573,
	577, 578, 579, 580, 581, 583, 585, 589, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 530, 277, 278,
	279, 280, 575, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 597, 571, 596, 598,
	599, 595, 600, 601, 582, 487, 0, 534, 593, 592,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	560, 539, 540, 541, 486, 542, 537, 538, 561, 532,
	557, 558, 511, 535, 543, 556, 544, 559, 562, 563,
	602, 603, 550, 604, 547, 564, 555, 554, 545, 533,
	565, 566, 518, 513, 548, 549, 536, 551, 514, 515,
	516, 517, 327, 528, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 519, 0, 0,
	319, 273, 0, 0, 0, 0, 576, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 509, 553, 552, 496, 505, 0, 0, 215, 154,
	497, 0, 504, 498, 502, 501, 499, 500, 0, 568,
	0, 0, 0, 0, 0, 0, 468, 481, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 479, 0, 0, 0, 0, 529, 0,
	480, 0, 0, 524, 506, 507, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 503, 527, 531, 227,
	590, 525, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 591, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 350,
	0, 0, 574, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 526, 0, 309, 291, 587, 469, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 572, 287, 0, 0, 586, 567, 569, 570,
	573, 577, 578, 579, 580, 581, 583, 585, 589, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 530, 277,
	278, 279, 280, 575, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 597, 571, 596,
	598, 599, 595, 600, 601, 582, 487, 0, 534, 593,
	592, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 560, 539, 540, 541, 486, 542, 537, 538, 561,
	532, 557, 558, 511, 535, 543, 556, 544, 559, 562,
	563, 602, 603, 550, 604, 547, 564, 555, 554, 545,
	533, 565, 566, 518, 513, 548, 549, 536, 551, 514,
	515, 516, 517, 327, 528, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 0, 0, 0, 484, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 519, 0,
	0, 319, 273, 0, 0, 0, 0, 576, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 509, 553, 552, 496, 505, 0, 0, 215,
	154, 497, 0, 504, 498, 502, 501, 499, 500, 0,
	568, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 478, 479, 0, 0, 0, 0, 529,
	0, 480, 0, 0, 524, 506, 507, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 503, 527, 531,
	227, 590, 525, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 591, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 522, 0, 0, 0,
	350, 0, 0, 574, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 526, 0, 309, 291, 587, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 1210, 1211, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 572, 287, 0, 0, 586, 567, 569,
	570, 573, 577, 578, 579, 580, 581, 583, 585, 589,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 530,
	277, 278, 279, 280, 575, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 597, 571,
	596, 598, 599, 595, 600, 601, 582, 487, 0, 534,
	593, 592, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 560, 539, 540, 541, 486, 542, 537, 538,
	561, 532, 557, 558, 511, 535, 543, 556, 544, 559,
	562, 563, 602, 603, 550, 604, 547, 564, 555, 554,
	545, 533, 565, 566, 518, 513, 548, 549, 536, 551,
	514, 515, 516, 517, 327, 528, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 519,
	0, 0, 319, 273, 0, 0, 0, 0, 576, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 553, 552, 496, 505, 0, 0,
	215, 154, 497, 0, 504, 498, 502, 501, 499, 500,
	0, 568, 0, 0, 0, 0, 0, 0, 468, 481,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 479, 0, 0, 0, 0,
	529, 0, 480, 0, 0, 524, 506, 507, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 503, 527,
	531, 227, 590, 525, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 591,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 522, 0, 0,
	0, 350, 0, 0, 574, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 526, 0, 309, 291, 587,
	469, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 572, 287, 0, 0, 586, 567,
	569, 570, 573, 577, 578, 579, 580, 581, 583, 585,
	589, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	530, 277, 278, 279, 280, 575, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 597,
	571, 596, 598, 599, 595, 600, 601, 582, 487, 0,
	534, 593, 592, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 560, 539, 540, 541, 486, 542, 537,
	538, 561, 532, 557, 558, 511, 535, 543, 556, 544,
	559, 562, 563, 602, 603, 550, 604, 547, 564, 555,
	554, 545, 533, 565, 566, 518, 513, 548, 549, 536,
	551, 514, 515, 516, 517, 327, 528, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	519, 0, 0, 319, 273, 0, 0, 0, 0, 576,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 509, 553, 552, 496, 505, 0,
	0, 215, 154, 497, 0, 504, 498, 502, 501, 499,
	500, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 478, 479, 0, 0, 0,
	0, 529, 0, 480, 0, 0, 524, 506, 507, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 503,
	527, 531, 227, 590, 525, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	591, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 350, 0, 0, 574, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 526, 0, 309, 291,
	587, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 572, 287, 0, 0, 586,
	567, 569, 570, 573, 577, 578, 579, 580, 581, 583,
	585, 589, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 530, 277, 278, 279, 280, 575, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	597, 571, 596, 598, 599, 595, 600, 601, 582, 487,
	0, 534, 593, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 560, 539, 540, 541, 486, 542,
	537, 538, 561, 532, 557, 558, 511, 535, 543, 556,
	544, 559, 562, 563, 602, 603, 550, 604, 547, 564,
	555, 554, 545, 533, 565, 566, 518, 513, 548, 549,
	536, 551, 514, 515, 516, 517, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 153, 0, 0, 496, 505,
	0, 0, 215, 154, 497, 0, 504, 498, 502, 501,
	499, 500, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	503, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 0, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 149, 327, 41,
	137, 114, 0, 0, 0, 0, 0, 0, 0, 289,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 404,
	406, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 115, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	1696, 1698, 1699, 1700, 1701, 1702, 1703, 0, 1707, 1704,
	1705, 1706, 286, 0, 1691, 1692, 1693, 1694, 932, 1677,
	1697, 0, 1678, 285, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1695, 297, 263, 298, 250,
	275, 274, 276, 957, 959, 961, 963, 966, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	1690, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 956, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 1762, 1765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1766, 350, 0, 0,
	0, 1759, 0, 1758, 323, 1760, 1763, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 1764, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 1520, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 829, 830, 831, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 708, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 716, 717, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 690, 348, 210, 689, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 706, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 707, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 710, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 718, 713, 714, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 149, 327, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 101,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 1541, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	115, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 149, 327, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 101, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 1532, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 115, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 149, 327, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 101, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 115, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 716,
	717, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 690, 348,
	210, 689, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 718,
	713, 714, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 2086, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	1099, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 1097, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 1093, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 1097, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2705, 0, 153, 553, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 1097, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2425, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 1097, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1095, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 1824, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 1841, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 1097,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2783, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 553,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2720, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 2661, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2502, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 2546, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 0, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1465, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 303, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 2225,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 1097, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 1824, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 226, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 327, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 319,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 215, 154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	324, 340, 216, 315, 353, 221, 322, 211, 288, 311,
	0, 0, 208, 338, 321, 270, 253, 254, 207, 0,
	306, 232, 245, 228, 286, 0, 337, 365, 227, 356,
	0, 348, 210, 0, 347, 285, 334, 339, 271, 265,
	209, 336, 269, 264, 257, 236, 380, 249, 297, 263,
	298, 250, 275, 274, 276, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 0,
	0, 0, 0, 0, 0, 323, 0, 0, 258, 0,
	0, 0, 366, 0, 309, 291, 0, 0, 0, 307,
	261, 335, 299, 341, 325, 349, 303, 300, 201, 326,
	230, 272, 212, 214, 226, 233, 235, 237, 238, 281,
	282, 294, 314, 328, 329, 330, 229, 222, 308, 223,
	247, 224, 202, 316, 225, 204, 295, 333, 0, 243,
	304, 268, 205, 267, 296, 332, 331, 213, 357, 363,
	364, 369, 0, 370, 0, 0, 0, 378, 382, 383,
	384, 386, 387, 388, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 362, 241, 198, 199,
	345, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 361, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 252, 293, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	320, 343, 355, 373, 376, 0, 0, 0, 203, 375,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 371, 277, 278,
	279, 280, 244, 0, 220, 374, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 368, 240, 246, 385, 248, 219,
	292, 242, 352, 255, 0, 379, 0, 0, 0, 0,
	0, 284, 251, 317, 256, 262, 305, 351, 290, 310,
	217, 342, 318, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 260, 0, 301, 239,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 0, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 0, 194, 195,
	196, 197, 327, 0, 0, 358, 359, 360, 381, 344,
	0, 231, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 1854, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 303, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 0, 0, 0, 358, 359, 360,
	381, 344, 327, 231, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	319, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 215, 154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 324, 340, 216, 315, 353, 221, 322, 211, 288,
	311, 0, 0, 208, 338, 321, 270, 253, 254, 207,
	0, 306, 232, 245, 228, 286, 0, 337, 365, 227,
	356, 0, 348, 210, 0, 347, 285, 334, 339, 271,
	265, 209, 336, 269, 264, 257, 236, 380, 249, 297,
	263, 298, 250, 275, 274, 276, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 258,
	0, 0, 0, 366, 0, 309, 291, 0, 0, 0,
	307, 261, 335, 299, 341, 325, 349, 303, 300, 201,
	326, 230, 272, 212, 214, 226, 233, 235, 237, 238,
	281, 282, 294, 314, 328, 329, 330, 229, 222, 308,
	223, 247, 224, 202, 316, 225, 204, 295, 333, 0,
	243, 304, 268, 205, 267, 296, 332, 331, 213, 357,
	363, 364, 369, 0, 370, 0, 0, 0, 378, 382,
	383, 384, 386, 387, 388, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 362, 241, 198,
	199, 345, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 361, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 252, 293, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 343, 355, 373, 376, 0, 0, 0, 203,
	375, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 371, 277,
	278, 279, 280, 244, 0, 220, 374, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 368, 240, 246, 385, 248,
	219, 292, 242, 352, 255, 0, 379, 0, 0, 0,
	0, 0, 284, 251, 317, 256, 262, 305, 351, 290,
	310, 217, 342, 318, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 260, 0, 301,
	239, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 0, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 0, 194,
	195, 196, 197, 327, 0, 0, 358, 359, 360, 381,
	344, 0, 231, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 319, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 1097, 0, 0, 0, 215,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 324, 340, 216, 315, 353, 221, 322, 211,
	288, 311, 0, 0, 208, 338, 321, 270, 253, 254,
	207, 0, 306, 232, 245, 228, 286, 0, 337, 365,
	227, 356, 0, 348, 210, 0, 347, 285, 334, 339,
	271, 265, 209, 336, 269, 264, 257, 236, 380, 249,
	297, 263, 298, 250, 275, 274, 276, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 0, 0, 0, 0, 0, 0, 323, 0, 0,
	258, 0, 0, 0, 366, 0, 309, 291, 0, 0,
	0, 307, 261, 335, 299, 341, 325, 349, 1393, 300,
	201, 326, 230, 272, 212, 214, 226, 233, 235, 237,
	238, 281, 282, 294, 314, 328, 329, 330, 229, 222,
	308, 223, 247, 224, 202, 316, 225, 204, 295, 333,
	0, 243, 304, 268, 205, 267, 296, 332, 331, 213,
	357, 363, 364, 369, 0, 370, 0, 0, 0, 378,
	382, 383, 384, 386, 387, 388, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 362, 241,
	198, 199, 345, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 361, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 252, 293, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 343, 355, 373, 376, 0, 0, 0,
	203, 375, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 371,
	277, 278, 279, 280, 244, 0, 220, 374, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 368, 240, 246, 385,
	248, 219, 292, 242, 352, 255, 0, 379, 0, 0,
	0, 0, 0, 284, 251, 317, 256, 262, 305, 351,
	290, 310, 217, 342, 318, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 260, 0,
	301, 239, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 0, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 0,
	194, 195, 196, 197, 327, 0, 0, 358, 359, 360,
	381, 344, 0, 231, 0, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 319, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	215, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 324, 340, 216, 315, 353, 221, 322,
	211, 288, 311, 0, 0, 208, 338, 321, 270, 253,
	254, 207, 0, 306, 232, 245, 228, 286, 0, 337,
	365, 227, 356, 0, 348, 210, 0, 347, 285, 334,
	339, 271, 265, 209, 336, 269, 264, 257, 236, 380,
	249, 297, 263, 298, 250, 275, 274, 276, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 0, 0, 1120, 0, 0, 0, 323, 0,
	0, 258, 0, 0, 0, 366, 0, 309, 291, 0,
	0, 0, 307, 261, 335, 299, 341, 325, 349, 303,
	300, 201, 326, 230, 272, 212, 214, 226, 233, 235,
	237, 238, 281, 282, 294, 314, 328, 329, 330, 229,
	222, 308, 223, 247, 224, 202, 316, 225, 204, 295,
	333, 0, 243, 304, 268, 205, 267, 296, 332, 331,
	213, 357, 363, 364, 369, 0, 370, 0, 0, 0,
	378, 382, 383, 384, 386, 387, 388, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 362,
	241, 198, 199, 345, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 361, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 252, 293, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 343, 355, 373, 376, 0, 0,
	0, 203, 375, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	371, 277, 278, 279, 280, 244, 0, 220, 374, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 368, 240, 246,
	385, 248, 219, 292, 242, 352, 255, 0, 379, 0,
	0, 0, 0, 0, 284, 251, 317, 256, 262, 305,
	351, 290, 310, 217, 342, 318, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 260,
	0, 301, 239, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 0, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	0, 194, 195, 196, 197, 327, 0, 0, 358, 359,
	360, 381, 344, 0, 231, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 319, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 215, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 324, 340, 216, 315, 353, 221,
	322, 211, 288, 311, 0, 0, 208, 338, 321, 270,
	253, 254, 207, 0, 306, 232, 245, 228, 286, 0,
	337, 365, 227, 356, 0, 348, 210, 0, 347, 285,
	334, 339, 271, 265, 209, 336, 269, 264, 257, 236,
	380, 249, 297, 263, 298, 250, 275, 274, 276, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 258, 0, 0, 0, 366, 0, 309, 291,
	0, 0, 0, 307, 261, 335, 299, 341, 325, 349,
	303, 300, 201, 326, 230, 272, 212, 214, 226, 233,
	235, 237, 238, 281, 282, 294, 314, 328, 329, 330,
	229, 222, 308, 223, 247, 224, 202, 316, 225, 204,
	295, 333, 0, 243, 304, 268, 205, 267, 296, 332,
	331, 213, 357, 363, 364, 369, 0, 370, 0, 0,
	0, 378, 382, 383, 384, 386, 387, 388, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	362, 241, 198, 199, 345, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 361, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 252, 293,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 343, 355, 373, 376, 0,
	0, 0, 203, 375, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 371, 277, 278, 279, 280, 244, 0, 220, 374,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 368, 240,
	246, 385, 248, 219, 292, 242, 352, 255, 0, 379,
	0, 0, 0, 0, 0, 284, 251, 317, 256, 262,
	305, 351, 290, 310, 217, 342, 318, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 200, 0,
	260, 0, 301, 239, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 0, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 0, 194, 195, 196, 197, 327, 0, 0, 358,
	359, 360, 381, 344, 0, 231, 0, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 319, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 215, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 324, 340, 216, 315, 353,
	221, 322, 211, 288, 311, 0, 0, 208, 338, 321,
	270, 253, 254, 207, 0, 306, 232, 245, 228, 286,
	0, 337, 365, 227, 356, 0, 348, 210, 0, 347,
	285, 334, 339, 271, 265, 209, 336, 269, 264, 257,
	236, 380, 249, 297, 263, 298, 250, 275, 274, 276,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 0, 0, 0, 0, 0, 0,
	323, 0, 0, 258, 0, 0, 0, 366, 0, 309,
	291, 0, 0, 0, 307, 261, 335, 299, 341, 325,
	349, 422, 300, 201, 326, 230, 272, 212, 214, 226,
	233, 235, 237, 238, 281, 282, 294, 314, 328, 329,
	330, 229, 222, 308, 223, 247, 224, 202, 316, 225,
	204, 295, 333, 0, 243, 304, 268, 205, 267, 296,
	332, 331, 213, 357, 363, 364, 369, 0, 370, 0,
	0, 0, 378, 382, 383, 384, 386, 387, 388, 0,
	0, 0, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 362, 241, 198, 199, 345, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 361, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 252,
	293, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 343, 355, 373, 376,
	0, 0, 0, 203, 375, 0, 0, 0, 0, 0,
	0, 423, 346, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 371, 277, 278, 279, 280, 244, 0, 220,
	374, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 368,
	240, 246, 385, 248, 219, 292, 242, 352, 255, 0,
	379, 0, 0, 0, 0, 0, 284, 251, 317, 256,
	262, 305, 351, 290, 310, 217, 342, 318, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 260, 0, 301, 239, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 0, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 0, 194, 195, 196, 197, 327, 0, 0,
	358, 359, 360, 381, 344, 0, 231, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 319, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 215, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 324, 340, 216, 315,
	353, 221, 322, 211, 288, 311, 0, 0, 208, 338,
	321, 270, 253, 254, 207, 0, 306, 232, 245, 228,
	286, 0, 337, 365, 227, 356, 0, 348, 210, 0,
	347, 285, 334, 339, 271, 265, 209, 336, 269, 264,
	257, 236, 380, 249, 297, 263, 298, 250, 275, 274,
	276, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 350, 0, 0, 0, 0, 0,
	0, 323, 0, 0, 258, 0, 0, 0, 366, 0,
	309, 291, 0, 0, 0, 307, 261, 335, 299, 341,
	325, 349, 303, 300, 201, 326, 230, 272, 212, 214,
	226, 233, 235, 237, 238, 281, 282, 294, 314, 328,
	329, 330, 229, 222, 308, 223, 247, 224, 202, 316,
	225, 204, 295, 333, 0, 243, 304, 268, 205, 267,
	296, 332, 331, 213, 357, 363, 364, 369, 0, 370,
	0, 0, 0, 378, 382, 383, 384, 386, 387, 388,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 362, 241, 198, 199, 345, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 361,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	252, 293, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 320, 343, 355, 373,
	376, 0, 0, 0, 203, 375, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 371, 277, 278, 279, 280, 244, 0,
	220, 374, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	368, 240, 246, 385, 248, 219, 292, 242, 352, 255,
	0, 379, 0, 0, 0, 0, 0, 284, 251, 317,
	256, 262, 305, 351, 290, 310, 217, 342, 318, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 260, 0, 301, 239, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 0, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 0, 194, 195, 196, 197, 327, 0,
	0, 358, 359, 360, 381, 344, 0, 231, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 234, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 319, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 215, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 324, 340, 216,
	315, 353, 221, 322, 211, 288, 311, 0, 0, 208,
	338, 321, 270, 253, 254, 207, 0, 306, 232, 245,
	228, 286, 0, 337, 365, 227, 356, 0, 348, 210,
	0, 347, 285, 334, 339, 271, 265, 209, 336, 269,
	264, 257, 236, 380, 249, 297, 263, 298, 250, 275,
	274, 276, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 258, 0, 0, 0, 366,
	0, 309, 291, 0, 0, 0, 307, 261, 335, 299,
	341, 325, 349, 303, 300, 201, 326, 230, 272, 212,
	214, 226, 233, 235, 237, 238, 281, 282, 294, 314,
	328, 329, 330, 229, 222, 308, 223, 247, 224, 202,
	316, 225, 204, 295, 333, 0, 243, 304, 268, 205,
	267, 296, 332, 331, 213, 357, 363, 364, 369, 0,
	370, 0, 0, 0, 378, 382, 383, 384, 386, 387,
	388, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 362, 241, 198, 199, 345, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	361, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 252, 293, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 343, 355,
	373, 376, 0, 0, 0, 203, 375, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 371, 277, 278, 279, 280, 244,
	0, 220, 374, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 368, 240, 246, 385, 248, 219, 292, 242, 352,
	255, 0, 379, 0, 0, 0, 0, 0, 284, 251,
	317, 256, 262, 305, 351, 290, 310, 217, 342, 318,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 260, 0, 301, 239, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 0,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 0, 194, 195, 196, 197, 327,
	0, 0, 358, 359, 360, 381, 344, 0, 231, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 319, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 215, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 324, 340,
	216, 315, 353, 221, 322, 211, 288, 311, 0, 0,
	208, 338, 321, 270, 253, 254, 207, 0, 306, 232,
	245, 228, 286, 0, 337, 365, 227, 356, 0, 348,
	210, 0, 347, 285, 334, 339, 271, 265, 209, 336,
	269, 264, 257, 236, 380, 249, 297, 263, 298, 250,
	275, 274, 276, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 258, 0, 0, 0,
	366, 0, 309, 291, 0, 0, 0, 307, 261, 335,
	299, 341, 325, 349, 303, 300, 201, 326, 230, 272,
	212, 214, 226, 233, 235, 237, 238, 281, 282, 294,
	314, 328, 329, 330, 229, 222, 308, 223, 247, 224,
	202, 316, 225, 204, 295, 333, 0, 243, 304, 268,
	205, 267, 296, 332, 331, 213, 357, 363, 364, 369,
	0, 370, 0, 0, 0, 378, 382, 383, 384, 386,
	387, 388, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 362, 241, 198, 199, 345, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 361, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 252, 293, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 343,
	355, 373, 376, 0, 0, 0, 203, 375, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 371, 277, 278, 279, 280,
	244, 0, 220, 374, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 368, 240, 246, 385, 248, 219, 292, 242,
	352, 255, 0, 379, 0, 0, 0, 0, 0, 284,
	251, 317, 256, 262, 305, 351, 290, 310, 217, 342,
	318, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 260, 0, 301, 239, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	0, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 0, 194, 195, 196, 197,
	327, 0, 0, 358, 359, 360, 381, 344, 0, 231,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 319, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 215, 154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 324,
	340, 216, 315, 353, 221, 322, 211, 288, 311, 0,
	0, 208, 338, 321, 270, 253, 254, 207, 0, 306,
	232, 245, 228, 286, 0, 337, 365, 227, 356, 0,
	348, 210, 0, 347, 285, 334, 339, 271, 265, 209,
	336, 269, 264, 257, 236, 380, 249, 297, 263, 298,
	250, 275, 274, 276, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 258, 0, 0,
	0, 366, 0, 309, 291, 0, 0, 0, 307, 261,
	335, 299, 341, 325, 349, 303, 300, 201, 326, 230,
	272, 212, 214, 463, 233, 235, 237, 238, 281, 282,
	294, 314, 328, 329, 330, 229, 222, 308, 223, 247,
	224, 202, 316, 225, 204, 295, 333, 0, 243, 304,
	268, 205, 267, 296, 332, 331, 213, 357, 363, 364,
	369, 0, 370, 0, 0, 0, 378, 382, 383, 384,
	386, 387, 388, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 362, 241, 198, 199, 345,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 361, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 252, 293, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	343, 355, 373, 376, 0, 0, 0, 203, 375, 0,
	0, 0, 0, 1449, 0, 0, 346, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 371, 277, 278, 279,
	280, 244, 0, 220, 374, 302, 0, 652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 367, 368, 240, 246, 385, 248, 219, 292,
	242, 352, 255, 0, 379, 0, 0, 0, 0, 0,
	284, 251, 317, 256, 262, 305, 351, 290, 310, 217,
	342, 318, 266, 0, 1431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 260, 0, 301, 239, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 0, 194, 195, 196,
	197, 0, 0, 0, 358, 359, 360, 381, 344, 0,
	231, 690, 0, 0, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 675, 1424,
	0, 0, 0, 1449, 1435, 0, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 1439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 1428, 0, 1451, 0, 1430,
	1432, 1434, 0, 1436, 1437, 1438, 1440, 1441, 1442, 1444,
	1445, 1446, 1447, 0, 0, 0, 0, 0, 1449, 0,
	0, 0, 0, 0, 2800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1431, 0, 0, 1449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1450, 1451, 674, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 1451, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 1448, 1431,
	654, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1427, 0, 0, 1431, 0,
	0, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1443, 0, 0, 0, 0, 0,
	0, 1433, 0, 0, 0, 0, 679, 684, 2583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 667, 671, 687, 0, 0,
	0, 668, 665, 664, 1435, 670, 655, 656, 657, 658,
	659, 660, 0, 685, 686, 1439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 1430,
	1432, 1434, 0, 1436, 1437, 1438, 1440, 1441, 1442, 1444,
	1445, 1446, 1447, 0, 0, 0, 0, 0, 0, 1435,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 0,
	1439, 0, 0, 0, 0, 0, 0, 0, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1439,
	1428, 1450, 0, 0, 1430, 1432, 1434, 0, 1436, 1437,
	1438, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 0, 1428,
	0, 0, 0, 1430, 1432, 1434, 0, 1436, 1437, 1438,
	1440, 1441, 1442, 1444, 1445, 1446, 1447, 0, 1448, 0,
	0, 0, 0, 442, 0, 441, 448, 438, 0, 0,
	0, 0, 0, 0, 0, 1427, 1450, 445, 446, 0,
	447, 451, 0, 0, 433, 0, 0, 0, 442, 0,
	441, 448, 438, 0, 456, 1450, 0, 0, 0, 0,
	0, 0, 445, 446, 1443, 447, 451, 0, 0, 433,
	0, 1433, 0, 1448, 0, 0, 0, 0, 0, 456,
	0, 0, 0, 460, 0, 0, 462, 0, 0, 0,
	1427, 461, 1448, 0, 0, 0, 0, 0, 0, 0,
	442, 0, 441, 448, 438, 0, 0, 0, 460, 1427,
	0, 462, 0, 0, 445, 446, 461, 447, 451, 1443,
	0, 433, 0, 0, 0, 0, 1433, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 1443, 0,
	0, 0, 0, 0, 0, 1433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	434, 436, 435, 0, 0, 0, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 434, 436, 435, 0, 459,
	0, 0, 0, 0, 0, 440, 437, 0, 0, 0,
	428, 0, 0, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 434, 436, 435,
	0, 0, 0, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 444,
	0, 0, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 439, 443, 449, 0, 450,
	452, 0, 0, 453, 454, 455, 0, 0, 457, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	439, 443, 449, 0, 450, 452, 0, 0, 453, 454,
	455, 0, 0, 457, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 443, 449, 0, 450, 452, 0, 0,
	453, 454, 455, 0, 0, 457, 458,
}

var yyPact = [...]int{
	2702, -1000, -329, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31488, -1000, -1000, -1000, -1000, -1000,
	-326, 30967, 30967, -1000, -1000, 1737, -1000, 30446, 10637, 31488,
	188, 185, 31488, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 427, -1000, 29925, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 382, 32923, 32009, 8021,
	31488, -303, -1000, 2313, -149, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2319, 454, 29404, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32381, 68, 454, 566, 558,
	744, 744, 12721, -63, -64, 2313, 265, 130, -1000, 782,
	2702, 2047, 1063, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1648,
	353, 31488, -1000, 1062, 353, -1000, -1000, -1000, 2313, 2313,
	-1000, 31488, 31488, -9, 1185, -1000, 255, 226, 246, 1059,
	-1000, -1000, -1000, -1000, -1000, 2350, -1000, 31488, 31488, 2059,
	31488, -1000, 1440, 329, 32948, 2216, 1060, 484, 2070, -1000,
	-1000, 2040, -1000, 96, 136, 122, 205, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115, -1000, 2282, -1000, -1000, 90,
	-1000, -1000, 77, -1000, -1000, -1000, -72, -1000, -1000, -1000,
	-1000, -1000, -1000, -166, -1000, -1000, 609, 1240, 8021, -1000,
	1338, -1000, 2888, -1000, -1000, -1000, -1000, 5406, 9584, 9584,
	9584, 9584, -1000, -1000, 1896, 8021, 2039, 2037, -1000, -1000,
	-1000, -1000, -1000, 1043, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1647, 9063, -1000, 2027,
	2017, 2016, 2015, 2014, 2013, 2011, 2010, 2009, 2008, 2006,
	2005, 2000, 1973, 1818, 10105, 1968, 1646, 1641, 1967, 1964,
	1961, 1638, 1818, 1818, 1960, 1959, 1952, 1950, 1949, 1946,
	1944, 1940, 1939, 1937, 1936, 1930, 1924, 1920, 1917, 1916,
	1915, 1914, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2793, -1000, 1027, 851, -1000,
	1913, 2183, 2296, 1849, 2329, 2271, 2269, 2267, 2265, 1479,
	-1000, -1000, 31488, 31488, 31488, 374, 374, 374, 374, 374,
	418, 374, 426, 425, 421, 374, -1000, -1000, -1000, -1000,
	-1000, -1000, 500, -1000, -1000, -1000, -1000, 871, 31488, -1000,
	1853, 1112, 2293, 332, 323, 228, -1000, 1202, 1202, 1202,
	1202, 1112, 258, 321, 2296, 2296, -75, 1202, -100, 1112,
	1112, -100, 1112, 1112, 1112, 64, -1000, -1000, -1000, 1202,
	308, 1202, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2277,
	2276, 382, 31488, 31, 31488, 382, 382, 395, -1000, -179,
	-1000, -1000, 543, -1000, 523, -1000, 1440, 312, 302, 893,
	1216, -1000, 1133, 31488, 31488, 31488, 1133, 1133, 16371, 15850,
	-1000, 31488, -1000, 2296, 1849, -1000, 1788, 1693, 1784, 1849,
	382, 382, 382, 382, 382, 382, 382, 382, 31488, 31488,
	28883, 382, 6969, 6969, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8021, 31488, 2194, 268, 1910, -1000, 31488, 234,
	2296, 2183, 2296, -1000, -1000, 1012, 1467, 1636, -1000, -1000,
	255, 1117, -1000, 580, -1000, -1000, -1000, -1000, 31488, 221,
	-1000, -1000, 1645, 1909, -1000, 377, 882, 852, -1000, 48,
	33000, 25228, 1440, 25228, 31488, -1000, -1000, -1000, -1000, -1000,
	-1000, -77, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 87, -1000, 8021, 8021, 8021,
	8021, 8021, -1000, 469, 8542, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9584, 9584, 9584, 9584, 9584, 9584, 9584, 9584,
	9584, 9584, 9584, 9584, 1895, 1187, 9584, 9584, 9584, 9584,
	1693, 2166, 890, 165, -1000, -1000, -1000, -1000, -1000, 1194,
	1240, 8021, 8021, 31488, -1000, 2830, 8021, 8021, 2789, 8021,
	2260, 8021, 8021, 8021, 1783, 3842, 31488, 8021, -1000, 1782,
	1772, -1000, -1000, 1333, 8021, -1000, -1000, 8021, -1000, -1000,
	8021, 9584, 8021, -1000, -1000, -1000, 134, 2260, 2260, 8021,
	8021, 2260, 2260, 2260, 1169, 2260, 2260, 2260, 2260, 2260,
	2260, 2260, 2260, 1770, 31488, 2177, 55, -1000, -1000, -1000,
	1819, -1000, 1844, 1844, 1844, 1844, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1878, 1904, -1000, -1000, 1837,
	1837, 1837, 1819, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1870, 1870,
	1877, 1870, 31488, 2296, -303, 6448, -1000, -308, 2183, 8021,
	-1000, -1000, 8021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1632, 2253, -1000, 1901, 1900, 1004, 31488, 1212, 31488,
	25228, 31488, 1440, 31488, 31488, 374, 374, 374, 31488, 395,
	-1000, 31488, 871, 2251, 31488, 2337, 9584, 9584, 28362, 1202,
	1112, -1000, 31488, -1000, -1000, -1000, 1202, 31488, 1202, 1202,
	2337, 1202, -1000, -1000, -1000, 1112, 1112, -1000, -1000, -1000,
	-1000, 1202, 1202, -1000, -1000, 2337, 31488, -79, 2337, 2337,
	-92, -1000, -1000, -1000, 31488, 31488, 374, 31488, 31488, -1000,
	31488, -1000, -1000, 31488, 32377, 31488, 31488, 2275, -1000, 25228,
	31488, 23144, -1000, -133, 547, 526, 532, -1000, -1000, 367,
	413, 14808, 320, 25228, 4884, -1000, -1000, 1133, 1133, 1133,
	4884, 4884, 1019, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	867, -1000, 85, 2183, -1000, -1000, -1000, -1000, -1000, 31488,
	31488, 25228, 1440, 31488, 31488, 31488, 31488, -1000, 1899, -1000,
	2210, 31488, 829, -1000, -1000, 12200, 992, 829, 1767, 609,
	-1000, 1630, 2069, -304, -1000, 13765, 31488, 31488, -1000, -1000,
	-304, -1000, 13243, 31488, 2183, -1000, 2183, 31488, -1000, 2289,
	-1000, 255, 170, -1000, -1000, -1000, -1000, -1000, -1000, 986,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 860,
	-1000, 31488, -1000, -1000, 48, 25228, 26270, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 113, -1000, -1000, 150, -1000, 411,
	21, 1116, -1000, -1000, 42, 140, 445, 1240, -1000, 1211,
	1211, 1225, -1000, 432, -1000, -1000, -1000, -1000, 1896, -1000,
	-1000, -1000, 1515, 2307, -1000, 1186, 1186, 977, 977, 977,
	977, 977, 1215, 1215, -1000, -1000, -1000, 5406, 1895, 9584,
	9584, 9584, 9584, 363, 363, 3084, 3021, -1000, 8021, 1195,
	-1000, 8021, 1366, 870, 974, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1766, 1765, 1815, 2349, 1764,
	8021, -1000, -1000, 1107, 1100, 1098, -1000, 1400, 7500, -1000,
	-1000, -1000, 1763, 973, 1758, -1000, -1000, -1000, 1756, 1097,
	831, 1754, 832, 1753, 858, 8021, 8021, 1096, 1090, 8021,
	8021, 8021, 8021, 1750, 8021, 8021, 8021, 8021, 8021, 8021,
	8021, 8021, -53, -1000, 8021, 45, -1000, -1000, -1000, -1000,
	1466, -1000, 1465, -1000, -1000, -1000, 1607, 1607, -1000, 1461,
	-1000, -1000, -1000, -1000, 1459, -1000, -1000, 1454, -1000, -1000,
	-1000, -1000, 1086, -1000, 1240, -1000, 1601, -1000, 1005, 857,
	-1000, 1361, -1000, -1000, 31488, 682, 11158, 31488, 1853, 2198,
	49, -1000, 806, -1000, 21, -177, 674, 2058, 2347, 31488,
	31488, 31488, 2241, 27841, -1000, 1893, 1084, -1000, -1000, 8021,
	-1000, -1000, 2054, 31488, 31488, 2337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 31488, 2337, 2337, 1112, 1202, -1000, -1000,
	1202, -1000, -1000, 1202, -1000, 945, -1000, 31488, -1000, -1000,
	-1000, 1853, 854, -1000, 11679, 612, -1000, 1141, 1141, 710,
	1141, 1141, 1141, 1141, 280, 271, 1141, 1141, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
	1892, -1000, 46, 2263, 114, 806, 135, 2213, 781, -1000,
	-1000, -1000, -1000, 18455, 18455, 14287, 18455, -1000, 1123, -1000,
	-1000, 541, 519, 537, -1000, -1000, 409, -1000, -1000, 674,
	-1000, -1000, -1000, 1888, 1175, -1000, -1000, 10105, -1000, 4884,
	4884, 4884, -1000, -1000, 18976, 31488, -1000, -172, -1000, -153,
	-1000, 840, -1000, -1000, 843, 674, 2067, 840, 840, -1000,
	11158, 31488, -1000, 2337, 6969, -1000, 23144, -1000, -1000, 27312,
	-1000, 26791, 2337, -1000, -127, -1000, 2167, 691, -1000, 1883,
	-1000, 1072, 2143, -1000, 805, -1000, 1174, 1055, -1000, 691,
	1052, 2120, 805, -1000, -1000, 939, -10, -1000, -1000, 31488,
	1645, 1050, 26270, 697, -1000, 399, 938, 934, -1000, 25228,
	78, 25228, -1000, 25228, -1000, -1000, 230, -1000, 31488, 2181,
	-1000, -1000, -1000, 1553, -334, -1000, -1000, -1000, -1000, -1000,
	1045, -1000, 363, 363, 3084, 2711, -1000, 9584, -1000, 9584,
	2155, 1188, -1000, 8021, 1278, 2694, 370, 17934, 31488, -1000,
	-1000, 8021, 8021, -1000, 2145, -1000, -1000, -1000, -1000, 8021,
	8021, 1709, -1000, 31488, -1000, -1000, -1000, -1000, 17934, -1000,
	9584, -1000, 8021, 793, 2137, -53, -53, 2106, 2078, 2050,
	1015, -53, 2045, 2018, 1977, 1931, 1902, 1821, 1723, 1673,
	-1000, 1881, 1240, -1000, -1000, 1744, 1731, 1013, -1000, 1010,
	1728, 1009, 997, 6448, -1000, -127, 8021, 8021, 8021, 2158,
	-1000, -1000, 65, 1727, 797, -1000, -1000, 31488, -1000, -1000,
	-1000, 1724, 796, -1000, -1000, -1000, 2905, 1844, 1844, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1878, -1000,
	-1000, 1837, 1837, 1837, 1819, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1870, 1870, 1877, 1870, -1000, 2240,
	-1000, -42, 1141, 463, 25228, 296, -1000, 31488, 2065, 276,
	2164, 31488, 1868, 1867, 1866, 180, 2905, 31488, 791, -1000,
	928, 2702, -1000, 31488, 1240, -1000, 1440, -1000, 1112, -1000,
	2337, 1028, -1000, -1000, 2337, 1112, 1112, 1202, 31488, -1000,
	2231, 32377, -1000, -1000, -1000, 2905, 456, -1000, 31488, 1283,
	574, 374, 574, 1276, 1856, -1000, -1000, -1000, 31488, 31488,
	31488, 1258, 1257, 1451, -1000, 1442, 1141, 1141, 1437, 1599,
	1593, 1591, 1141, 1141, 1435, 1590, 25749, 1425, 1411, 1408,
	1444, 1589, 520, 1422, 1399, 1397, 31488, 1854, 1533, -42,
	1141, 108, 1173, 463, 1340, 15329, 31488, 23144, 23144, 23144,
	23144, -1000, 2103, 2099, -1000, 2096, 2095, 2112, 31488, 23144,
	1853, -1000, 25749, -1000, -1000, -1000, 1693, 971, 2223, 555,
	8021, -1000, -1000, -1000, 514, 25228, 1584, 320, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 31488, 31488, 1721, -1000,
	2335, -1000, 735, -1000, -1000, 922, -1000, 2335, -34, -26,
	1255, -304, 6448, 264, 31488, -304, 31488, 6448, -1000, 31488,
	263, -304, 31488, 1394, -1000, -1000, -1000, 2346, 25228, 1440,
	1088, 24707, -1000, 84, -1000, 112, 340, 1583, -1000, 417,
	80, -1000, 1158, 1553, -1000, -1000, -1000, 9584, -1000, -1000,
	-1000, -1000, 1240, 8021, 1717, -1000, 505, 505, 1700, -1000,
	1844, 1844, -1000, 1819, 1837, 1819, 505, 505, 1694, -1000,
	1328, 1662, -1000, 1585, 1556, 8021, -1000, 1692, 2526, 711,
	-197, -53, -1000, -1000, -1000, -53, -53, -53, -53, -1000,
	-53, -53, -53, -53, -53, -53, -53, -53, 355, -1000,
	-1000, -1000, 1582, -1000, -1000, -1000, 1392, -1000, 1391, -1000,
	-34, 1240, 1240, -1000, -1000, 2135, 1578, 1573, 682, 2905,
	431, 11158, 2174, 248, 1363, -1000, -1000, 24186, 333, -1000,
	-1000, -1000, 407, 92, 1390, 325, -1000, 31488, 125, 31488,
	-1000, -1000, -1000, -1000, -1000, 2164, -1000, 461, 157, 11679,
	11679, 11679, 160, 1203, -1000, 353, 681, 919, 23144, 31488,
	-1000, 22623, 1690, -1000, 674, 2337, -1000, 31488, -1000, 2337,
	2337, 1112, -1000, 248, -1000, 3093, -1000, -1000, 31488, 31488,
	-1000, 31488, 31488, 374, 8021, -1000, -1000, -1000, 31488, -1000,
	-1000, -1000, 17934, 17934, -1000, -1000, -1000, -1000, 1572, 1559,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 288, 31488, 970, -1000, 1146, 1363, 24186, 1145,
	1558, 333, -1000, 1554, -1000, 657, 31488, 31488, -1000, 754,
	-1000, 1143, 2057, 2063, 2057, -1000, -1000, -1000, -1000, 2098,
	-1000, 2087, -1000, -1000, 754, -1000, -1000, -1000, -1000, -1000,
	555, -1000, 2287, 574, 574, 574, 1689, -1000, 697, 1677,
	-1000, -1000, -1000, -1000, -1000, 2321, 2328, 23665, 2321, -310,
	-20, 2327, 2326, 2357, -1000, 1675, 694, -304, -1000, -1000,
	691, -1000, -1000, -1000, -304, -1000, 691, -1000, -1000, 1440,
	-1000, 110, -1000, -1000, -1000, -1000, -1000, -1000, 9, -1000,
	31488, -1000, 1553, 1545, 73, -1000, 1240, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8021, -1000, -1000, -1000, 1529, -1000, -1000, 8021,
	1672, 1542, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2331, -1000, 2324, -1000, 1667,
	1665, -310, -1000, -1000, -1000, -1000, -1000, -1000, 2905, -1000,
	967, -1000, -1000, 1540, 19, -1000, -1000, -1000, 1539, 1538,
	1384, -1000, -1000, 1396, 955, 34, -1000, -1000, -1000, -1000,
	-1000, -1000, 1340, 31488, 1836, -1000, 1141, 1141, 1141, 31488,
	1664, 692, -1000, 1663, 1661, 357, 1161, 1159, -1000, 1356,
	18455, 23144, 22623, 696, -1000, 896, -1000, -1000, -1000, 2337,
	-1000, -1000, 2337, -1000, -1000, 3093, -1000, -1000, 1291, 9584,
	-1000, -1000, 1534, 17413, 510, 550, 1835, -1000, 242, 2356,
	-1000, 1239, 1207, -1000, 31488, -1000, 1833, 1933, 196, 1832,
	-1000, 1831, 1829, 31488, 1463, -1000, -1000, -1000, -1000, -1000,
	-1000, 306, 957, -1000, 1533, 1531, -1000, 19, 1530, -1000,
	-1000, -1000, 31488, 657, 657, 2331, 31488, 6448, -1000, -1000,
	8021, 1827, -1000, 8021, -1000, -1000, -1000, -1000, -1000, 1826,
	2199, -1000, -1000, -1000, -1000, -1000, -1000, 8021, 8021, -1000,
	-1000, -312, 1528, -1000, -1000, 2323, 1523, 1446, 31488, -1000,
	691, 691, 674, -1000, -1000, -92, -1000, -1000, -1000, 1434,
	-1000, 1415, -53, -1000, 76, 8021, -1000, -1000, -312, -239,
	-1000, -1000, -1000, -1000, 217, -1000, -1000, 121, -1000, -1000,
	1345, 366, -1000, -1000, 657, 21581, 17934, 17413, 1503, -1000,
	32661, 11679, 87, 32661, 571, 1137, -1000, 1347, -1000, 1337,
	-1000, 2337, 696, 896, -1000, -1000, 1076, -1000, -1000, -1000,
	-1000, 3084, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1335, 1825, -129, -1000, -1000,
	1824, 21581, 262, 262, 21581, 21581, 21581, 1823, 415, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2296, -1000, -1000,
	1240, 31488, 1240, 22102, -1000, 2320, 2318, 1240, 609, -315,
	1334, -1000, 1498, -24, -1000, -1000, 631, -318, -40, -11,
	-1000, -1000, -1000, 1659, -1000, 3321, -1000, -1000, -1000, 609,
	-315, 31488, 339, 1494, -1000, -1000, 116, -1000, -1000, 956,
	-1000, 1819, 8021, -1000, -1000, -1000, 351, 32642, -1000, -1000,
	-1000, -92, 351, 322, 163, -1000, 1331, -1000, -1000, 2331,
	-1000, 1561, 8021, 1818, -232, 21581, 954, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 952, 949, 924, 21581, -1000, -1000,
	-1000, 240, -1000, 872, 863, -1000, -1000, -1000, -1000, -1000,
	1808, -1000, -1000, 2317, -1000, 1493, 385, -36, -11, -1000,
	2316, -27, 2315, 2314, -1000, -1000, 4363, -306, -57, 266,
	-1000, 2220, -1000, -1000, 8, -1000, -1000, -1000, 21581, 2188,
	1406, 206, 2311, 32661, -1000, -1000, 206, -1000, 175, -1000,
	1135, -1000, 1330, -1000, 2296, -1000, 1388, -1000, 2062, -1000,
	52, 855, -1000, -1000, -1000, -1000, 850, -1000, -1000, -1000,
	21060, 31488, 1446, -1000, 1807, 1329, -20, -32, 2309, -1000,
	1446, 2306, 1446, 1446, 1223, -1000, -1000, -1000, -1000, -1000,
	1492, -1000, 166, -1000, -1000, 2188, -1000, 2305, 225, -1000,
	-1000, -1000, -1000, 1323, -1000, -1000, 415, -1000, 2061, 2051,
	2341, -1000, -1000, -1000, -1000, 166, 166, 166, 166, 81,
	-1000, -1000, 841, -1000, -1000, 2258, 16892, -43, -1000, -1000,
	-1000, 1469, -1000, 1446, -1000, -1000, 4363, -1000, -1000, 1141,
	1412, 151, -1000, -1000, -1000, 20539, 214, 251, 229, -1000,
	362, -1000, -1000, -1000, -1000, 2355, -1000, 2352, 504, 504,
	-1000, -1000, 31488, -1000, 31488, -1000, 838, -1000, -1000, -1000,
	895, -1000, -1000, -1000, -1000, -1000, 1310, -1000, 31488, -1000,
	31488, 212, 1307, 9584, 1805, 9584, 1804, 218, 1797, -1000,
	-1000, -1000, 1339, 249, -1000, -1000, 600, -1000, 1121, -1000,
	20018, 31488, -1000, -1000, 836, 1796, 2304, -1000, 1655, 31488,
	1565, 31488, 1794, 1105, 9584, -1000, -1000, -1000, 31488, 5927,
	-1000, 683, -1000, -1000, 343, 220, -1000, 835, -1000, 834,
	19497, 1304, 1147, -1000, -1000, 1240, 31488, 808, -1000, 31488,
	208, -1000, -1000, -1000, 783, -1000, -1000, -1000, -1000, 343,
	2113, -1000, 1297, -1000, -1000, 32587, 487, -1000, -1000, 32587,
	207, -1000, 337, 1738, -1000, -1000, 772, -1000, 31488, 521,
	8021, -1000, 207, 32661, -1000, 8021, 758, -1000, 32661, 729,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 125, 2886, 202, 148, 144, 201, 2885, 2884, 2207,
	2196, 2883, 2882, 2869, 2867, 2859, 2858, 2853, 2843, 2840,
	2827, 2825, 2824, 2820, 2816, 2814, 2812, 2811, 2810, 2808,
	2806, 2802, 2801, 2800, 2798, 200, 2797, 2796, 2794, 2793,
	2791, 2790, 2789, 2787, 2785, 2784, 2783, 2782, 2779, 2778,
	2776, 2775, 2774, 2768, 2765, 2761, 2759, 2758, 2756, 2754,
	2751, 2749, 2747, 130, 2746, 2195, 2745, 2744, 2740, 2738,
	2737, 2736, 2730, 172, 2728, 2727, 2726, 2725, 2723, 2720,
	2718, 2717, 2710, 2709, 2708, 2707, 2704, 2702, 2701, 2700,
	2699, 151, 2698, 2697, 146, 2695, 2694, 2692, 2691, 2690,
	199, 176, 56, 2688, 37, 2687, 2685, 2684, 2683, 2682,
	68, 2681, 2680, 121, 159, 207, 400, 211, 204, 155,
	132, 83, 2677, 2212, 2676, 120, 183, 119, 20, 2675,
	134, 2674, 114, 34, 23, 203, 108, 40, 117, 93,
	2673, 187, 70, 2668, 80, 2666, 2665, 205, 160, 2664,
	90, 2663, 2661, 2660, 2659, 164, 157, 2657, 2655, 94,
	2641, 2635, 100, 2634, 52, 2633, 127, 212, 86, 88,
	2627, 2626, 2625, 71, 2624, 2623, 2622, 2621, 139, 2619,
	2617, 97, 66, 2615, 2613, 2609, 51, 2608, 54, 2605,
	55, 2604, 2603, 2602, 2601, 57, 2599, 2598, 11, 19,
	21, 2597, 18, 2596, 129, 2595, 3, 2593, 178, 45,
	74, 107, 2592, 383, 2591, 2590, 2586, 118, 2585, 441,
	2584, 2582, 2581, 2580, 2578, 36, 2577, 165, 39, 2576,
	72, 92, 105, 177, 168, 2575, 2574, 2573, 141, 67,
	46, 0, 2572, 123, 2570, 2569, 2568, 208, 2567, 191,
	188, 190, 98, 210, 140, 2566, 2564, 65, 2563, 128,
	73, 91, 9, 2562, 175, 2560, 866, 142, 2558, 170,
	2557, 133, 2, 113, 2555, 2553, 32, 228, 2552, 2551,
	2550, 89, 2548, 2547, 96, 104, 2546, 2542, 2541, 33,
	2539, 28, 26, 2536, 76, 2534, 223, 2532, 186, 95,
	150, 154, 111, 179, 184, 64, 58, 2531, 749, 115,
	75, 24, 2529, 181, 2528, 206, 197, 2527, 169, 2522,
	198, 312, 171, 2521, 153, 10, 30, 27, 2519, 7,
	2518, 110, 166, 2517, 2516, 16, 2515, 17, 2514, 2513,
	2512, 2510, 5, 2509, 2508, 2506, 1, 6, 2505, 4,
	182, 2504, 2503, 2501, 2500, 38, 109, 2499, 135, 189,
	2498, 2497, 69, 2496, 2495, 2494, 696, 2493, 2491, 2490,
	2488, 2487, 2486, 2484, 2474, 2473, 2472, 77, 44, 2471,
	2470, 2467, 2466, 59, 106, 2465, 2463, 2456, 2452, 29,
	138, 2450, 15, 2449, 25, 22, 31, 2448, 103, 2441,
	12, 156, 2440, 2439, 14, 2437, 2423, 8, 13, 2422,
	2421, 84, 2420, 63, 41, 124, 78, 2419, 60, 174,
	112, 2418, 2416, 196, 194, 167, 2415, 136, 195, 215,
	2414, 173, 2413, 2412, 2411, 2410, 2406, 2405, 757, 2403,
	2401, 192, 47, 62, 85, 2400, 2399, 2394, 61, 126,
	82, 81, 162, 2393, 161, 2392, 2386, 79, 2384, 2383,
	2382, 2380, 2377, 158, 2376, 2372, 2371, 193, 163, 2333,
}

//line mysql_sql.y:9090
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 462, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 98, 460, 460, 460, 461,
	461, 95, 96, 84, 97, 410, 410, 409, 409, 408,
	408, 363, 363, 407, 407, 407, 406, 406, 406, 405,
	405, 404, 404, 403, 403, 401, 401, 402, 400, 399,
	399, 399, 397, 397, 397, 393, 393, 395, 394, 394,
	396, 388, 388, 391, 391, 389, 389, 389, 389, 392,
	387, 387, 387, 386, 386, 83, 83, 83, 310, 310,
	82, 82, 324, 324, 324, 324, 324, 322, 322, 322,
	322, 322, 322, 321, 321, 320, 320, 325, 325, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 74,
	74, 74, 74, 77, 77, 77, 78, 319, 319, 319,
	75, 76, 76, 309, 309, 314, 314, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 318,
	318, 318, 316, 316, 315, 315, 317, 317, 68, 68,
	68, 71, 70, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 69, 69, 69, 69, 69, 69, 64, 64,
	64, 64, 64, 63, 63, 65, 65, 306, 306, 305,
	79, 79, 80, 464, 464, 463, 465, 465, 465, 465,
	81, 87, 87, 87, 87, 87, 87, 87, 86, 86,
	89, 89, 88, 90, 73, 73, 73, 73, 73, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 434, 434,
	434, 436, 436, 245, 246, 466, 248, 244, 244, 244,
	430, 430, 431, 432, 433, 433, 433, 85, 7, 7,
	7, 7, 7, 7, 62, 67, 203, 203, 204, 204,
	204, 205, 205, 205, 205, 205, 60, 66, 66, 447,
	447, 61, 454, 454, 366, 366, 259, 259, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 370, 371, 255, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 42, 41, 41, 41, 295, 295, 40, 467,
	467, 234, 234, 50, 51, 52, 53, 54, 55, 56,
	39, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	59, 59, 382, 382, 469, 469, 469, 57, 58, 365,
	365, 365, 48, 47, 46, 45, 44, 44, 38, 38,
	37, 37, 43, 108, 109, 252, 252, 252, 254, 254,
	250, 468, 468, 337, 337, 253, 253, 36, 36, 36,
	36, 251, 251, 233, 249, 249, 249, 8, 8, 6,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 19, 20, 22, 303, 303, 300, 21, 14,
	13, 16, 12, 15, 17, 18, 18, 5, 5, 5,
	5, 9, 9, 10, 120, 120, 168, 168, 442, 442,
	438, 438, 439, 439, 439, 440, 440, 441, 441, 91,
	376, 376, 376, 376, 376, 376, 4, 143, 143, 142,
	142, 375, 375, 375, 375, 375, 375, 307, 307, 419,
	419, 419, 420, 141, 141, 136, 136, 377, 377, 273,
	421, 421, 385, 385, 384, 384, 383, 383, 139, 139,
	140, 140, 123, 123, 101, 101, 390, 390, 390, 390,
	398, 398, 362, 362, 195, 195, 228, 228, 229, 229,
	113, 113, 114, 114, 114, 114, 114, 114, 427, 427,
	429, 429, 428, 138, 138, 134, 134, 135, 135, 135,
	133, 133, 132, 131, 131, 130, 128, 128, 128, 129,
	129, 129, 116, 116, 116, 115, 115, 115, 115, 115,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 117, 117, 435, 435, 435, 367, 367, 367,
	373, 373, 210, 210, 211, 211, 209, 209, 118, 118,
	119, 119, 119, 119, 208, 208, 207, 121, 121, 127,
	126, 126, 122, 122, 122, 122, 218, 218, 217, 217,
	217, 217, 94, 99, 99, 100, 146, 146, 216, 215,
	215, 215, 145, 145, 144, 144, 137, 137, 125, 125,
	125, 125, 214, 124, 212, 459, 459, 458, 458, 457,
	455, 455, 455, 456, 456, 456, 456, 412, 412, 412,
	412, 412, 239, 239, 239, 243, 243, 242, 242, 242,
	242, 242, 247, 3, 3, 3, 3, 3, 26, 26,
	26, 26, 26, 26, 26, 26, 32, 154, 155, 33,
	156, 156, 157, 157, 158, 158, 159, 160, 161, 161,
	161, 161, 31, 147, 147, 148, 148, 149, 149, 150,
	151, 151, 151, 153, 152, 30, 23, 443, 446, 444,
	444, 448, 448, 448, 449, 449, 449, 450, 450, 24,
	105, 110, 110, 107, 112, 112, 112, 112, 112, 106,
	445, 451, 451, 451, 304, 304, 301, 302, 302, 299,
	298, 298, 298, 453, 453, 452, 452, 452, 240, 240,
	25, 294, 294, 296, 297, 297, 297, 288, 288, 288,
	288, 29, 292, 292, 293, 293, 293, 293, 293, 289,
	289, 291, 291, 287, 287, 287, 287, 287, 28, 111,
	111, 286, 286, 284, 284, 282, 282, 283, 283, 281,
	281, 281, 285, 285, 27, 27, 27, 103, 102, 102,
	102, 231, 231, 230, 230, 104, 34, 180, 180, 351,
	351, 351, 351, 351, 369, 369, 369, 352, 352, 352,
	353, 353, 353, 354, 354, 354, 354, 354, 368, 368,
	326, 326, 327, 327, 327, 330, 330, 343, 343, 344,
	344, 342, 342, 349, 349, 348, 348, 347, 347, 346,
	346, 345, 345, 345, 345, 340, 340, 339, 339, 328,
	328, 328, 328, 328, 329, 329, 329, 338, 338, 341,
	341, 186, 186, 187, 187, 187, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 417, 417, 418, 189, 189,
	189, 193, 193, 193, 193, 193, 193, 188, 188, 190,
	190, 169, 169, 167, 167, 162, 162, 163, 163, 164,
	164, 165, 165, 166, 166, 166, 166, 166, 166, 312,
	312, 415, 415, 416, 416, 411, 411, 411, 414, 414,
	414, 414, 414, 413, 413, 170, 226, 226, 226, 241,
	241, 241, 241, 225, 225, 225, 185, 185, 184, 184,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 311, 311, 256, 256, 257,
	257, 202, 201, 201, 201, 201, 201, 199, 200, 198,
	198, 198, 198, 198, 197, 197, 196, 196, 196, 290,
	290, 194, 194, 192, 192, 192, 191, 191, 191, 350,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 224, 265, 265, 270, 270, 426,
	426, 425, 171, 171, 171, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 181, 181, 181, 335, 335, 335,
	335, 335, 336, 336, 336, 333, 333, 334, 334, 274,
	275, 275, 374, 374, 331, 331, 332, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 381, 381, 381, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 437, 437, 437, 422, 422, 422, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 222, 222,
	222, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 276, 276, 277, 277,
	378, 378, 378, 378, 378, 378, 379, 379, 380, 380,
	380, 380, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 263, 219, 219, 219, 278, 271, 271, 272, 272,
	266, 266, 266, 266, 266, 266, 266, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 267,
	267, 269, 269, 280, 280, 280, 279, 279, 279, 279,
	279, 279, 279, 183, 183, 183, 183, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 173, 173,
	173, 173, 177, 177, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 178, 178,
	178, 178, 176, 176, 176, 176, 176, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 92, 93, 93, 175, 227, 227, 355,
	355, 358, 358, 356, 356, 357, 359, 359, 359, 360,
	360, 360, 361, 361, 361, 364, 364, 232, 232, 232,
	238, 238, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 5, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 1, 3, 2, 2,
	1, 2, 2, 2, 3, 2, 7, 7, 8, 0,
	4, 7, 0, 3, 0, 2, 0, 1, 1, 1,
	1, 4, 2, 2, 3, 3, 4, 5, 3, 4,
	4, 2, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 0, 2, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 4, 3, 4, 5, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 7, 7, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	8, 0, 2, 6, 0, 2, 2, 3, 3, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 0, 2, 0, 1, 1,
	2, 4, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 2, 2, 2, 0, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 5, 0, 1, 3,
	0, 1, 0, 2, 0, 1, 6, 8, 6, 5,
	5, 6, 6, 6, 6, 5, 6, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 4, 4, 4, 3, 4, 6,
	6, 7, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 2, 2, 4, 6,
	2, 2, 4, 6, 4, 2, 0, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 1, 1, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 1, 3, 4,
	4, 5, 4, 5, 3, 4, 5, 6, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -462, -2, -1, -95, -3, -96, -4, -91, -5,
	-6, -8, -72, -86, -88, -90, -89, -35, -7, -85,
	-63, -64, -68, -74, -79, -82, -83, -84, -97, -92,
	-93, -94, -113, -98, 543, -26, -25, -24, -23, -105,
	407, 12, 454, -9, -10, -427, -11, 236, -244, -245,
	-246, -248, -466, -36, -37, -38, -44, -45, -46, -47,
	-48, -57, -58, -59, -39, -40, -41, -42, -50, -51,
	-52, -53, -54, -55, -56, -43, -108, -109, -61, -60,
	-66, -62, -67, -107, 211, -65, 61, -69, -70, -71,
	-75, -76, -77, -78, -80, -81, 338, 344, 397, 541,
	542, 46, -114, -116, 544, -27, -28, -29, -30, -31,
	-32, -34, -33, 207, 14, 487, -12, -15, -13, -16,
	-14, -21, -22, -20, -17, -19, -106, -18, 231, 230,
	37, 294, 295, 296, 342, 229, 208, 13, 139, 140,
	142, 143, 30, 41, 320, -115, 67, 209, -117, 10,
	546, -156, -241, 70, 78, -235, -237, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 457, 528, 529, 530, 531, 318, 319,
	484, 248, 272, 368, 275, 282, 139, 158, 152, 180,
	172, 147, 252, 287, 253, 77, 142, 440, 88, 419,
	394, 145, 267, 269, 271, 274, 254, 168, 163, 266,
	250, 541, 161, 255, 39, 256, 185, 257, 258, 489,
	415, 317, 421, 279, 392, 162, 416, 270, 418, 187,
	191, 432, 344, 156, 157, 423, 434, 184, 228, 42,
	486, 240, 435, 189, 183, 179, 443, 283, 281, 182,
	155, 178, 251, 50, 193, 192, 194, 388, 389, 390,
	391, 259, 260, 332, 431, 175, 164, 322, 148, 22,
	438, 235, 420, 345, 261, 276, 284, 188, 190, 242,
	247, 488, 396, 246, 280, 436, 160, 239, 268, 234,
	439, 149, 338, 347, 262, 143, 273, 433, 442, 49,
	360, 154, 146, 225, 140, 244, 249, 11, 263, 264,
	265, 286, 285, 277, 176, 241, 181, 166, 153, 177,
	141, 243, 441, 361, 539, 320, 377, 174, 171, 245,
	218, 437, 422, 144, 381, 362, 169, 288, 535, 536,
	537, 333, 316, 289, 290, 167, 232, 413, 414, 291,
	293, 387, 309, 363, 395, 369, 364, 200, 297, 425,
	186, 538, 298, 299, 300, 417, 301, 302, 303, 545,
	-123, 38, -167, -241, -123, -65, -10, -9, -115, -116,
	-167, 215, -249, 23, 392, -73, 393, 211, 67, -241,
	-5, -4, -91, -63, -113, -247, -241, 294, 294, -247,
	215, -241, 246, 376, -366, 221, -321, -294, 247, -320,
	-296, -323, -297, 31, 207, 209, 208, 243, 14, 342,
	217, 12, 10, 343, 229, 24, 25, 27, 13, 344,
	346, 28, 347, 350, 351, 352, 41, 355, 356, 236,
	70, 78, 73, 254, -155, -241, -272, -266, 95, 237,
	-268, -261, -262, -264, -407, -401, -260, 67, 121, 122,
	129, 96, -263, -350, 35, 98, 494, 455, -220, -221,
	-222, -223, -224, -241, -402, -400, 73, 79, 82, 85,
	86, 84, 83, 165, 81, 74, 133, 134, -116, 70,
	-422, 502, -236, 523, 528, 529, 530, 531, 522, 46,
	-372, -380, 214, -378, 132, 170, 232, 166, 12, 127,
	387, 167, 499, 519, 457, 503, 526, 496, 497, 491,
	492, 493, 495, 504, 506, 518, -381, 514, 524, 525,
	512, 527, 72, 71, 517, 516, 505, 500, 501, 507,
	490, 498, 508, 509, 515, 520, 521, 326, 88, 327,
	328, 447, 321, 329, 221, 392, 55, 330, 331, 332,
	333, 334, 454, 335, 56, 336, 325, 236, 377, 337,
	169, 186, 459, 458, 460, 451, 448, 446, 449, 450,
	452, 453, 510, 511, 513, -317, -315, -241, -99, -100,
	533, -132, -133, -213, 19, 6, 7, 8, 9, -460,
	394, 488, 297, 242, 339, 218, 318, 377, 301, 246,
	-288, -286, -368, 291, 287, 216, 226, 225, 89, 447,
	214, 353, -438, -439, 204, 205, 206, -429, 480, -428,
	-241, 328, 26, 215, 339, 425, 426, 427, 428, 429,
	430, -49, -382, -365, 422, 421, -253, 414, 420, 412,
	424, 415, 319, 303, 302, 207, 481, -232, 363, 395,
	242, 444, 445, 340, 396, 432, 433, 416, 88, 173,
	170, 218, 215, 318, 447, 377, 301, -438, 144, 141,
	-308, 144, 94, 149, 148, -308, 246, 376, 40, -314,
	387, -313, -315, 432, 433, 443, 71, 72, 431, -232,
	88, 413, 413, -133, -213, -132, -114, -116, -94, -427,
	216, 318, 377, 246, 217, 215, 218, 447, 294, 339,
	242, 301, -367, -435, 31, -373, 201, 202, 203, 32,
	33, -1, 67, 135, 73, -139, 238, -167, 135, -139,
	-133, -132, -133, -167, -225, -241, 394, 104, -73, -73,
	393, -430, -431, -432, -434, 211, 393, 392, 135, 15,
	-247, -247, 65, -167, -296, 246, -321, -294, 35, 64,
	136, 219, 136, 64, 67, 340, 318, 377, 341, 447,
	215, 353, 218, 246, 354, 318, 377, 215, 218, 447,
	246, 318, 215, 218, 377, 246, 354, 412, 413, 218,
	26, 345, 348, 349, 413, -386, 443, 136, 94, 91,
	92, 93, -266, 111, -279, 104, 105, 106, 107, 108,
	109, 110, 118, 117, 128, 121, 122, 123, 124, 125,
	126, 127, 119, 120, 114, 95, 112, 116, 113, 97,
	-116, -266, -272, 46, -264, -264, -264, -264, -350, -270,
	-266, 67, 67, 135, 73, -266, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -379, 67,
	67, -276, -277, 67, 67, -260, -225, 67, 73, 73,
	67, 67, 67, 73, -277, -277, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 136, -173, -177, -174, -176, -175,
	-179, -178, 170, 171, 132, 174, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 30, 186, 232, 166,
	167, 168, 169, 187, 152, 172, 485, 195, 153, 196,
	154, 197, 155, 198, 156, 157, 199, 158, 161, 162,
	163, 160, 135, -133, 136, 67, -101, 38, -135, 21,
	-117, -116, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 79, -154, -241, -156, -147, -241, -284, 221, -284,
	-284, -284, -284, 217, -284, 215, 215, 215, -284, -440,
	151, 136, -429, -138, 67, -252, 112, 116, 23, 244,
	244, 281, -467, -468, 15, 114, -250, -468, -250, -250,
	-252, -469, 217, 423, 42, 245, 244, -134, -135, -134,
	417, 413, -337, 418, 419, -254, -468, -253, -252, -252,
	-253, -252, -252, -252, 215, 218, 447, 301, -467, 244,
	-467, 30, 30, -366, -167, -366, 481, -233, -241, -366,
	-366, -441, 220, 436, 487, 147, 148, 149, -296, 246,
	246, 136, 104, 23, -316, 104, 115, -315, -315, -315,
	-316, -316, -188, 40, -240, 132, -241, 73, -188, 40,
	-464, -463, -167, -134, -117, -116, 68, 68, 68, -366,
	-366, -366, -366, -366, -366, -366, -366, -247, -147, -156,
	221, -366, -118, -119, 123, -266, -241, -118, -271, -272,
	-241, 38, -375, 46, -113, 67, 30, 67, -241, -376,
	46, -113, 67, 30, -134, -101, -135, 135, 79, 73,
	-73, 68, 136, -433, 85, 86, -436, 184, 176, -241,
	-87, 73, -3, -4, -5, -6, -35, -63, -113, -403,
	-401, 67, 31, 386, 64, 15, -322, 215, 447, 339,
	242, 218, 318, -320, -303, -300, -298, -240, -296, -299,
	-298, -325, -225, 413, -102, 398, 293, -266, -266, -266,
	-266, -266, 84, 95, 316, 85, 86, -261, -280, 31,
	289, 290, -262, -262, -262, -262, -262, -262, -262, -262,
	-262, -262, -262, -262, -269, -278, -350, 67, 114, 112,
	116, 113, 97, -264, -264, -262, -262, 68, 136, -426,
	-425, 99, -266, -266, -241, -423, -424, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 330, 325,
	331, 329, 321, 337, 332, 333, 169, 478, 479, 472,
	473, 474, 475, 476, 477, -271, -271, -266, -423, -271,
	-219, 32, 31, -272, -272, -272, 68, -266, -437, 314,
	313, 315, -136, -241, -271, 68, 68, 68, 79, -272,
	-272, -271, -262, -271, -424, -219, -219, -272, -272, -219,
	-219, -219, -219, 123, -219, -219, -219, -219, -219, -219,
	-219, -219, 68, -315, 40, -361, 361, 360, -355, -357,
	67, -356, 67, -356, -356, -356, 67, 67, -358, 67,
	-358, -358, -355, -359, 67, -359, -360, 67, -359, -241,
	-134, -100, -384, -383, -266, 40, 534, -101, -266, -131,
	-130, -266, -461, 73, 34, 67, 67, 135, -167, 95,
	-443, -241, -304, -301, -298, -241, -294, -241, -241, -284,
	-284, -284, -167, -441, -428, 34, -137, -241, -209, 16,
	-264, -264, -298, 246, -467, -252, -234, -233, -254, -249,
	-254, -254, -209, -468, -252, -252, -254, -250, -209, -241,
	413, -209, -209, -337, -251, -241, -251, -284, -233, -234,
	-234, -167, -203, -204, 212, 209, -206, 358, 248, -285,
	252, 77, 253, 394, 254, 217, 256, 257, 258, 228,
	259, 260, 261, 387, 262, 263, 264, 265, 341, 6,
	304, 40, -443, -443, 30, -304, -241, -126, -121, -125,
	-122, -127, -212, -214, -124, 67, -167, -116, -241, 437,
	438, 145, 148, 147, 31, 386, -319, 386, 31, -294,
	-313, -309, 73, 387, -299, -318, 64, 132, -383, -316,
	-316, -316, -318, -318, 131, 136, -465, 436, 437, 204,
	-101, -169, -167, -443, -303, -294, -241, -169, -169, -241,
	67, 35, -241, -208, 136, -207, 15, -242, -241, 34,
	73, 135, -208, 68, 73, -307, 64, -377, -273, -421,
	533, -141, 68, -136, -419, -420, -136, -140, -241, -377,
	-141, 68, -419, -101, -101, -241, 23, -73, -431, 135,
	136, -137, -322, -302, -299, -324, 123, -241, -310, 136,
	487, 547, 71, 219, -453, -452, 378, 68, 136, -387,
	220, 454, 73, 548, 200, 84, 316, 85, 86, -350,
	-272, -269, -264, -264, -262, -262, -267, 233, -267, 94,
	-266, -265, -425, 101, -266, 34, 136, 65, 135, 68,
	68, 15, 15, 68, -266, 68, 68, 68, 68, 15,
	15, -266, 68, 135, 68, 68, 68, 68, 65, 68,
	136, 68, 136, -272, -266, 68, 68, -266, -266, -266,
	-272, 68, -266, -266, -266, -266, -266, -266, -266, -266,
	-332, 408, -266, -364, 362, 79, 79, -227, 73, -227,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -128,
	36, 37, -155, -157, -158, -159, -160, -161, 114, 137,
	138, -148, -149, -150, -151, -173, -225, 171, 174, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	232, 166, 167, 168, 169, 187, 152, 172, 153, 154,
	155, 156, 157, 158, 161, 162, 163, 160, -241, -138,
	35, -446, 365, -454, 136, 40, -452, 447, -287, 65,
	-111, 15, -167, -167, -167, -180, 34, 15, -120, -168,
	-241, 67, 68, 136, -266, -295, 65, -241, -234, -209,
	-167, -241, -209, -209, -252, -254, -254, -250, 135, -233,
	-138, 136, -164, -170, -165, -225, -257, -166, 224, 222,
	226, -416, 89, 227, 278, 90, 217, -205, 217, 90,
	223, 227, 222, -238, 104, -238, -232, 131, -238, -238,
	-238, -238, 255, 255, -238, -238, -238, -238, -238, -238,
	-238, -238, -238, -238, -238, -238, -238, -238, 67, -447,
	365, 30, 324, -454, -112, 318, 30, -215, -216, -217,
	-218, 53, 57, 59, 54, 55, 56, 60, 30, 136,
	-239, -243, 34, -241, 73, -239, -116, -121, -126, -239,
	67, 146, 149, 149, 148, 219, 67, 104, -318, -318,
	-318, 40, -240, -463, 443, 437, 136, 64, -148, -156,
	-209, -119, -121, -241, 73, -241, 123, -209, -390, 418,
	39, 136, 67, 68, 136, 46, 136, 104, 68, 136,
	68, 46, 135, 394, -241, -401, 68, -324, 136, 219,
	135, 135, -300, 344, -240, -302, 20, 487, -225, 38,
	-231, -230, 73, 548, 68, -267, -267, 94, -264, -261,
	68, 102, -266, 100, -171, -173, 360, 361, -172, -178,
	132, 170, 232, 169, 168, 166, 360, 361, -188, -241,
	-266, -266, 68, -266, -266, 15, -241, -188, -262, -266,
	-133, 68, -331, -332, -331, 68, 68, 68, 68, -331,
	68, 68, 68, 68, 68, 68, 68, 68, 67, 68,
	68, 68, 136, 68, 68, 68, 136, 68, 136, -383,
	-390, -266, -266, -130, -129, 43, 352, 68, 136, -225,
	68, 136, -173, 34, -449, 420, 367, -238, -259, -258,
	320, 41, -370, 387, 373, 374, -301, 246, -241, 64,
	308, 309, 310, 311, -282, -283, -281, -285, -443, 67,
	67, 67, -351, 298, -173, -167, -120, -241, 15, 136,
	-442, 135, -1, -241, -294, -252, -209, -468, -209, -252,
	-252, -254, -241, 34, -204, -173, -166, -241, 90, -415,
	-416, -284, -415, 90, 67, -241, -241, -241, 90, 90,
	79, 79, -238, -238, 79, 73, 73, 73, -238, -238,
	79, 73, -243, 79, 79, 79, 79, 40, 73, -193,
	40, 266, 270, 267, 268, 269, 79, 40, 79, 40,
	79, 40, -241, 67, -417, -418, 73, -449, -238, 324,
	104, -259, -110, 77, 31, -142, 212, 209, -443, -306,
	-305, -225, -125, -125, -125, -125, 53, 53, 53, 58,
	53, 58, 53, -217, -306, -127, -138, -243, 68, -459,
	-458, -457, -455, 61, 220, 62, -271, 149, -302, -255,
	73, -309, -167, -167, 68, -211, 17, 135, -211, -398,
	404, 399, 401, 90, -273, -385, -384, 46, -113, -136,
	-377, -420, -383, -241, 46, -113, -377, -241, 79, 15,
	-299, -294, 123, 123, -241, 345, -310, 73, 366, 73,
	215, 549, 136, 104, -231, -261, -266, 68, -181, 157,
	156, -181, 68, -356, -356, -355, -358, -355, -181, -181,
	68, 68, 23, 68, 68, 68, -266, 68, 68, 136,
	-374, 456, -331, -331, -331, -331, -331, -331, -331, -331,
	-331, -331, -331, -331, -331, -275, -274, 238, 73, 79,
	79, -398, 44, 45, 73, 73, -159, -173, 213, -150,
	40, -113, -450, 77, -444, 73, -241, -451, 77, 368,
	134, 322, 40, 369, 370, 384, 317, 79, 79, 375,
	-445, -241, -143, 318, -167, -281, -232, 131, 257, 301,
	-162, -163, -164, -162, -162, -352, 300, 20, 79, 122,
	-139, 65, 135, -121, -168, -241, 123, 68, -209, -241,
	-209, -209, -252, -113, -185, -184, -182, 84, 95, 40,
	358, -183, 77, 131, 271, 249, 272, -202, -256, 64,
	364, 222, 89, 90, 346, -257, -411, -413, -241, -413,
	-241, -411, -411, -284, -266, -241, -188, -188, 73, 73,
	-189, 249, -169, 68, 136, 104, -450, -444, 104, 73,
	-451, 73, 136, -142, -142, -209, 136, 104, -145, -144,
	64, 65, -146, 64, -144, 53, 53, -209, -457, -456,
	23, -416, -416, -416, 68, 68, -210, 18, 20, 123,
	-210, -362, 535, -394, -396, 399, 20, 20, 13, 68,
	-377, -377, -294, -310, 387, -167, -230, 73, 549, -266,
	68, -266, 68, 73, -133, 20, 68, 68, -362, -152,
	-173, -260, 73, -448, 378, 73, 73, 79, 40, 79,
	134, 371, -371, -110, -142, 67, -238, -238, -238, -241,
	68, 136, 68, 68, -353, 237, 79, 122, 79, 122,
	79, -239, -121, -241, -209, -442, 135, -209, -209, -182,
	84, -262, 73, -190, -240, 132, -191, 40, 270, 266,
	-192, 40, 250, 251, -194, 67, 278, 13, 90, 90,
	-167, 67, 65, 288, 67, 67, 67, -413, 68, 250,
	251, 68, -418, 73, -448, 73, -443, -133, -305, -383,
	-266, 67, -266, 67, 53, 19, 17, -266, -272, -195,
	536, 73, 20, 73, -392, 73, -306, -104, -388, -337,
	68, 68, -331, -334, -333, -336, 405, 280, 411, -272,
	-195, 486, 20, 487, 321, 40, 79, 40, 372, -289,
	-291, -225, 67, -188, -190, 73, -186, -187, -206, -164,
	-103, -102, -186, -354, 140, 79, 122, 79, 79, -209,
	-209, 79, 67, -378, -290, 67, -289, -414, 308, 309,
	310, 312, 311, -414, -289, -289, -289, 67, -312, -311,
	279, 95, -134, -137, -412, -241, 222, 20, 20, -228,
	537, 79, 73, 401, -363, 538, -397, 404, -391, -389,
	399, 400, 401, 402, 68, -335, 97, 371, 375, -266,
	-228, -153, -241, 73, 366, 73, 321, 68, 136, -355,
	-266, -326, 238, 136, -206, -104, -326, -369, 148, 299,
	487, 79, 122, 79, -133, 68, -266, -276, -197, -196,
	483, -289, 68, 68, 68, 68, -289, 279, 68, 68,
	136, 67, 20, 73, -399, 220, -395, -396, 403, -389,
	20, 401, 20, 20, -335, 533, 409, 410, 409, 410,
	34, 387, -292, -291, -128, 68, -327, 287, 20, -206,
	-327, 299, 79, 122, 79, -134, 68, -201, -199, -200,
	64, 416, 276, 277, 68, -292, -292, -292, -292, 68,
	-241, 222, -229, -241, -392, -406, 67, 79, -394, -393,
	-395, 20, -392, 20, -392, -392, 94, 73, -293, 228,
	77, 487, 306, 307, -128, 20, -328, 280, 281, -329,
	-341, 283, 79, -311, -200, 64, -199, 64, 14, 13,
	-202, 68, 136, -410, 30, 68, -405, -404, -226, -400,
	-241, 404, 405, 73, -392, -335, -238, 73, 305, -225,
	67, -339, 284, 67, -337, 67, -337, 90, 309, -198,
	273, 274, 30, 148, -198, -241, -409, -408, -407, 68,
	136, 135, 79, -241, -325, -330, 285, 79, -262, 67,
	-262, 67, -338, 282, 67, 84, 40, 275, 136, 104,
	-404, -241, 68, -343, 67, 20, 68, -325, 68, -325,
	67, 104, -262, -408, 40, -266, 135, -344, -342, 238,
	-329, 68, 68, 68, -325, 79, 68, -241, 68, 136,
	-241, -340, 286, 68, -342, -345, 46, 79, -349, -346,
	67, -206, 240, 114, -349, -206, -348, -347, 285, 241,
	67, 68, 136, -241, 237, 67, -272, -347, -346, -272,
	68, 68,
}

var yyDef = [...]int{
	34, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 0, 703, 704, 705, 706, 707,
	0, 0, 0, 477, 478, 0, 449, 0, 0, 0,
	0, 0, 0, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 298, 299,
	300, 301, 302, 303, 0, 233, 229, 208, 209, 210,
	169, 170, 171, 172, 240, 241, 324, 0, 0, 0,
	0, 0, 560, -2, 36, 708, 709, 710, 711, 712,
	713, 714, 715, -2, 490, 0, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 461, 287, 288,
	289, 283, 284, 286, 285, -2, 0, 490, 222, 0,
	213, 213, 0, 0, 0, 580, 0, 0, 595, 617,
	34, 0, 720, 999, 1000, 1001, 1002, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 0,
	538, 0, 543, 963, 538, 234, 479, 480, 580, 580,
	447, 0, 269, 0, 1458, 273, 0, 0, 0, 444,
	264, 265, 266, 267, 268, 0, 702, 0, 0, 260,
	0, 228, 1517, 0, 0, 0, 0, 0, 0, 113,
	791, 115, 793, 119, 126, 0, 0, 131, 132, 135,
	136, 137, 138, 139, 0, 143, 0, 145, 148, 0,
	150, 151, 0, 154, 155, 156, 0, 166, 167, 168,
	794, 795, 796, -2, 44, 718, 1383, 1278, 0, 1285,
	1286, 1297, 1308, 1072, 1073, 1074, 1075, 0, 0, 0,
	0, 0, 1082, 1083, 0, 1097, 1617, 0, 1089, 1090,
	1091, 1092, 1093, 53, 65, 66, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 0, 1251, 1059, 999,
	0, 1625, 0, 1645, 1650, 1651, 1652, 1653, 1644, 0,
	0, 1236, 0, 1226, 0, 0, -2, -2, 0, 0,
	1585, -2, 1622, 1641, 1649, 1626, 1648, 1619, 1620, 1614,
	1615, 1616, 1618, 1627, 1629, 1640, 0, 1636, 1646, 1647,
	0, 0, 67, 68, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1242, -2, 1244,
	1245, 1247, 1248, 1249, 1250, -2, 1253, 1254, 1255, -2,
	-2, 1258, 1259, 1260, 1261, 1262, 1263, 1266, -2, 1268,
	-2, -2, 1238, 1239, 1240, 1241, 1230, 1231, 1232, 1233,
	1234, 1235, -2, -2, -2, 0, 206, 204, 580, 653,
	0, -2, 0, 0, 0, 600, 603, 606, 609, 0,
	37, 38, 0, 0, 0, 823, 823, 823, 823, 823,
	0, 823, 0, 0, 0, 823, 798, 799, 800, 821,
	822, 869, 495, 491, 492, 493, 494, 568, 0, 570,
	573, 425, 373, 0, 0, 0, 385, 379, 0, 0,
	0, 425, 0, 0, 575, 575, 0, 428, 435, 425,
	425, -2, 425, 425, 425, 0, 391, 392, 393, 379,
	0, 379, 397, 398, 399, 410, 411, 436, 1407, 0,
	0, 324, 0, 324, 0, 324, 324, 497, 223, 224,
	212, 214, 0, 218, 0, 211, 1517, 0, 0, 180,
	1585, 185, 0, 1465, 1531, 1480, 0, 0, 1498, 0,
	-2, 0, 250, 575, 0, 581, 0, 580, 0, 0,
	324, 324, 324, 324, 324, 324, 324, 324, 0, 0,
	0, 324, 0, 0, 618, 619, 614, 615, 616, 620,
	621, 3, 1276, 0, 0, 0, 0, 542, 0, 0,
	575, -2, 0, 448, 270, 1003, 0, 0, 274, 275,
	0, 0, 290, 0, 293, 278, 279, 280, 0, 0,
	262, 263, 0, 0, 230, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 123, 120, 127, 130, 140,
	147, 0, 159, 161, 164, 121, 128, 133, 134, 141,
	162, 122, 124, 125, 129, 163, 165, 142, 146, 160,
	144, 149, 152, 153, 158, 0, 94, 0, 0, 0,
	0, 0, 1284, 0, 0, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1278, 0, 0, 1078, 1079, 1080, 1081, 1084, 0,
	1098, 0, 0, 0, 1337, 0, 1276, 1276, 0, 1276,
	1272, 0, 0, 0, 0, 0, 0, 1276, 1212, 0,
	0, 1214, 1227, 0, 0, 1216, 1217, 0, 1220, 1221,
	1276, 0, 1276, 1225, 1208, 1209, 0, 1272, 1272, 0,
	0, 1272, 1272, 1272, 1272, 1272, 1272, 1272, 1272, 1272,
	1272, 1272, 1272, 0, 0, 1384, 1402, 1339, 1340, 1341,
	1389, 1343, 1393, 1393, 1393, 1393, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 0, 0, 1382, 1362, 1391,
	1391, 1391, 1389, 1386, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1396, 1396,
	1399, 1396, 0, 575, 0, 0, 563, 0, 544, 0,
	597, 599, 0, 601, 602, 604, 605, 607, 608, 610,
	611, 39, 0, 717, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 823, 823, 823, 0, 497,
	496, 0, 569, 0, 0, 626, 0, 0, 0, 379,
	425, 384, 381, 380, 431, 432, 428, 0, 428, 428,
	626, 0, 404, 405, 406, 425, 425, 412, 576, 413,
	414, 428, 0, 433, 434, 626, 0, 0, 626, 626,
	0, 422, 423, 424, 0, 0, 823, 0, 381, 395,
	381, 1408, 1409, 0, 832, 0, 0, 0, 443, 0,
	0, 0, 498, 0, 0, 216, 0, 221, 173, 0,
	0, 0, 0, 0, 0, 202, 203, 0, 0, 0,
	0, 0, 193, 196, 957, 958, 788, 789, 197, 198,
	242, 243, 0, 544, 596, 598, 592, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 475,
	0, 0, 634, 628, 630, 697, 53, 634, 0, 1277,
	721, 0, 517, 530, 512, 0, 519, 0, 964, 499,
	530, 501, 0, 519, 544, 566, 544, 0, 271, 0,
	276, 0, 0, 292, 294, 295, 296, 281, 282, 445,
	258, 259, 251, 252, 253, 254, 255, 256, 257, 261,
	63, 0, 231, 232, 0, 0, 0, 107, 108, 109,
	110, 111, 112, 114, 98, 465, 467, 780, 792, 0,
	783, 0, 117, 157, 90, 0, 0, 1279, 1280, 1281,
	1282, 1283, 1287, 0, 1289, 1291, 1293, 1295, 0, 1313,
	-2, -2, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1298, 1311, 1312, 0, 0, 0,
	0, 0, 0, 1309, 1309, 1304, 0, 1076, 0, 1095,
	1099, 0, 0, 0, 54, 1271, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 0, 0, 1278, 0, 0,
	0, 1273, 1274, 0, 0, 0, 1167, 0, 0, 1173,
	1174, 1175, 0, 525, 0, 1237, 1213, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 1405, 1403, 1404, 1342, 1390,
	0, 1367, 0, 1368, 1369, 1370, 0, 0, 1363, 0,
	1364, 1365, 1366, 1358, 0, 1359, 1360, 0, 1361, 205,
	652, 654, 0, 534, 536, 537, 0, 564, 577, 582,
	583, 586, 35, 40, 0, -2, 735, 0, 573, 0,
	0, 747, 322, 774, 0, 0, 790, 813, 819, 0,
	0, 0, 847, 0, 571, 0, 0, 666, 372, 0,
	426, 427, 376, 1517, 381, 626, 386, 382, 387, 430,
	388, 389, 390, 0, 626, 626, 425, 428, 415, 429,
	428, 418, 419, 0, 437, 441, 438, 0, 440, 394,
	396, 573, 305, 306, 0, 0, 310, 1410, 1410, 0,
	1410, 1410, 1410, 1410, 0, 0, 1410, 1410, 1410, 1410,
	1410, 1410, 1410, 1410, 1410, 1410, 1410, 1410, 1410, 1410,
	0, 833, 319, 0, 0, 322, 764, 639, 0, 640,
	641, 637, 668, 692, 692, 0, 692, 672, 963, 225,
	226, 0, 0, 220, 174, 175, 0, 177, 178, 179,
	186, 181, 183, 0, 0, 187, 199, 200, 201, 0,
	0, 0, 191, 192, 0, 0, 245, 246, 248, 0,
	562, 462, 961, 463, 464, 468, 0, 470, 471, 472,
	735, 0, 769, 626, 0, 635, 0, 631, 698, 0,
	700, 0, 626, 41, 546, 506, 0, 511, 527, 0,
	531, 0, 0, 523, 516, 520, 0, 0, 540, 500,
	0, 0, 505, 565, 567, 1004, 0, 277, 291, 0,
	0, 0, 0, 101, 777, 0, 102, 106, 96, 0,
	0, 0, 782, 0, 779, 784, 0, 116, 0, 0,
	91, 92, 838, 843, 0, 1288, 1290, 1292, 1294, 1296,
	0, 1299, 1309, 1309, 1305, 0, 1300, 0, 1302, 0,
	1279, 0, 1100, 0, 0, 0, 0, 0, 0, 1157,
	1158, 0, 0, 1162, 0, 1164, 1165, 1166, 1168, 0,
	0, 0, 1172, 0, 1211, 1229, 1215, 1218, 0, 1222,
	0, 1224, 0, 580, 0, 1134, 1134, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 1385, 1338, 1406, 0, 0, 0, 1387, 0,
	0, 0, 0, 0, 655, 546, 0, 0, 0, 589,
	587, 588, 0, 0, 723, 724, 726, 0, 729, 730,
	731, 0, 736, 737, 739, 740, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1450, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 734, 0,
	824, 754, 1410, 326, 0, 0, 776, 0, 0, 0,
	-2, 0, 0, 0, 0, 849, 0, 0, 0, 484,
	488, 34, 574, 0, 627, 374, 0, 375, 425, 383,
	626, 963, 407, 408, 626, 425, 425, 428, 0, 439,
	0, 832, 308, 969, 970, 0, 0, 972, 1029, 0,
	981, 823, 981, 0, 0, 983, 984, 309, 0, 0,
	0, 0, 0, 0, 1411, 0, 1410, 1410, 0, 0,
	0, 0, 1410, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	1410, 0, 0, 326, 761, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 658, 0, 0, 0, 0, 0,
	573, 693, 0, 695, 696, 670, -2, 0, 639, 675,
	1276, 227, 215, 217, 0, 0, 0, 0, 188, 189,
	190, 194, 195, 244, 247, 249, 0, 0, 0, 476,
	624, 629, 636, 699, 701, 54, 632, 624, 550, 0,
	0, 530, 532, 0, 0, 530, 0, 0, 539, 0,
	0, 530, 0, 0, 446, 64, 297, 0, 0, 0,
	0, 0, 466, 0, 781, 98, 0, 0, 118, 0,
	0, 841, 0, 843, 1275, 1301, 1303, 0, 1310, 1306,
	1077, 1085, 1096, 0, 0, 1102, 1114, 1114, 0, 1105,
	1393, 1393, 1108, 1389, 1391, 1389, 1114, 1114, 0, 55,
	0, 0, 1163, 0, 0, 0, 526, 0, 0, 0,
	1132, 1134, 1139, 1135, 1140, 1134, 1134, 1134, 1134, 1145,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1130, 1395,
	1394, 1380, 0, 1381, 1392, 1397, 0, 1400, 0, 535,
	550, 578, 579, 584, 585, 0, 0, 0, 728, 0,
	0, 0, 741, 0, 757, 755, 756, 0, 771, 327,
	328, 329, 330, 0, 0, 0, 775, 0, 507, 0,
	814, 815, 816, 817, 818, -2, 827, 0, 0, 965,
	965, 965, 857, 0, 848, 538, 0, -2, 0, 0,
	486, 0, 0, 667, 377, 626, 400, 0, 416, 626,
	626, 425, 442, 0, 307, -2, 971, 1030, 993, 993,
	982, 993, 993, 823, 0, 311, 312, 313, 0, 315,
	916, 917, 0, 0, 920, 921, 922, 923, 0, 0,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	951, 952, 953, 954, 955, 956, 936, 937, 938, 939,
	940, 941, 948, 0, 0, 945, 0, 757, 0, 0,
	0, 771, 763, 0, 765, 766, 0, 0, 509, 626,
	237, 0, 662, 656, 0, 645, 660, 661, 648, 0,
	650, 0, 646, 647, 626, 638, 669, 694, 671, 674,
	676, 677, 683, 0, 0, 0, 0, 219, 176, 0,
	346, 182, 962, 469, 474, 622, 0, 0, 622, 552,
	78, 0, 0, 0, 528, 0, 533, 530, 515, 524,
	514, 521, 522, 541, 530, 504, 503, 1005, 272, 0,
	778, 98, 103, 104, 105, 99, 97, 785, 0, 787,
	0, 839, 843, 0, 0, 1307, 1101, 1086, 1103, 1115,
	1116, 1104, 1087, 1106, 1107, 1109, 1110, 1111, 1112, 1113,
	1088, 1159, 0, 1161, 1169, 1170, 0, 1219, 1223, 0,
	0, 0, 1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 580, 1131, 0, 1388, 0,
	0, 552, 590, 591, 716, 719, 725, 727, 0, 738,
	0, 745, 746, 0, 0, 749, 750, 759, 0, 0,
	0, 332, 333, 0, 0, 0, 345, 341, 342, 343,
	323, 770, 761, 0, 0, 828, 1410, 1410, 1410, 0,
	0, 966, 967, 0, 0, 860, 0, 0, 851, 0,
	692, 0, 0, 626, 485, 488, 489, 572, 378, 626,
	420, 417, 626, 304, 995, -2, 1008, 1010, 0, 0,
	1013, 1014, 0, 0, 0, 0, 1051, 1020, 0, 0,
	1024, 0, 1325, 1326, 0, 1028, 0, 985, 994, 0,
	994, 0, 0, 993, 0, 314, 918, 919, 924, 925,
	942, 0, 0, 944, 0, 0, 316, 0, 0, 317,
	321, 762, 0, 767, 768, 580, 0, 0, 642, 663,
	0, 0, 643, 0, 644, 649, 651, 236, 678, 0,
	0, 680, 681, 682, 673, 184, 612, 0, 0, 633,
	613, 554, 0, 551, 79, 0, 0, 0, 0, 529,
	513, 502, 100, 95, 786, 81, 842, 844, 840, 0,
	1171, 0, 1134, 1133, 1127, 0, 1398, 1401, 554, 0,
	744, 742, 758, 748, 0, 772, 773, 0, 334, 335,
	0, 338, 344, 760, 508, 0, 0, 0, 0, 820,
	-2, 0, 0, -2, 863, 0, 858, 0, 850, 0,
	853, 626, 626, -2, 482, 487, 0, 401, 421, 1009,
	1011, 1012, 1015, 1016, 959, 960, 1017, 1056, 1057, 1058,
	1018, 1053, 1054, 1055, 1019, 0, 0, 0, 1323, 1324,
	1049, 0, 0, 0, 0, 0, 0, 0, 979, 949,
	950, 943, 946, 947, 320, 318, 510, 575, 238, 239,
	664, 0, 657, 687, 684, 0, 0, 623, 625, 556,
	0, 553, 0, 547, 549, 89, 518, 51, 72, 0,
	1160, 1210, 1137, 0, 1128, 0, 1122, 1123, 1124, 1129,
	556, 0, 0, 0, 331, 336, 0, 339, 340, 0,
	809, 1389, 0, 829, 830, 831, 870, -2, 913, 968,
	835, 81, 870, 854, 0, 861, 0, 859, 852, 580,
	483, 0, 0, 1226, 1044, 0, 0, 986, 988, 989,
	990, 991, 992, 987, 0, 0, 0, 0, 978, 980,
	1025, 0, 235, 0, 0, 688, 690, 685, 686, 42,
	0, 555, 80, 0, 43, 0, 69, 0, 82, 83,
	0, 0, 0, 0, 1136, 1125, 0, 0, 0, 0,
	545, 0, 743, 751, 0, 753, 337, 802, 0, 586,
	0, 872, 0, 832, 915, 837, 872, 846, 0, 856,
	0, 865, 0, 862, 575, 1052, 0, 1023, 1032, 1045,
	0, 0, 802, 802, 802, 802, 0, 1026, 665, 679,
	0, 0, 0, 52, 56, 0, 78, 75, 0, 84,
	0, 0, 0, 0, 0, 1117, 1118, 1120, 1119, 1121,
	0, 752, 801, 810, 811, 586, 834, 0, 909, 914,
	836, 855, 864, 0, 867, 481, 1021, 1031, 1033, 1034,
	0, 1046, 1047, 1048, 1050, 973, 974, 975, 976, 0,
	689, 691, 0, 558, 548, 45, 0, 0, 73, 74,
	76, 0, 85, 0, 87, 88, 0, 732, 803, 1410,
	0, 0, 807, 808, 812, 0, 897, 0, 0, 903,
	0, 910, 866, 1022, 1035, 0, 1036, 0, 0, 0,
	977, 557, 0, 845, 0, 57, 0, 59, 61, 62,
	996, 70, 71, 77, 86, 1126, 0, 805, 0, 873,
	0, 875, 0, 0, 0, 0, 0, 907, 0, 1037,
	1039, 1040, 0, 0, 1038, 559, 46, 47, 0, 58,
	0, 0, 804, 806, 0, 877, 0, 898, 0, 0,
	0, 0, 0, 0, 0, 1041, 1043, 1042, 0, 0,
	60, 997, 874, 871, 0, 909, 899, 0, 901, 0,
	0, 0, 0, 48, 49, 50, 0, 0, 879, 0,
	895, 900, 902, 904, 0, 908, 906, 998, 878, 0,
	891, 876, 0, 905, 880, -2, 0, 896, 881, -2,
	0, 889, 0, 0, 882, 890, 0, 885, 0, 0,
	0, 884, 0, -2, 892, 0, 0, 886, -2, 0,
	894, 893,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 546,
	105, 104, 106, 3, 547, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 548, 117, 549, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:678
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:684
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:720
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:725
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:731
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:751
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:757
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:764
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:772
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:778
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:796
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:847
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:851
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:857
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:876
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:890
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:894
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:898
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:911
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:917
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:926
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:937
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:941
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:947
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:951
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:957
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:967
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:991
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1010
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1014
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1018
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1023
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1027
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1034
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1042
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1049
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1054
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1061
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1070
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1094
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1098
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1110
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1128
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1145
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1168
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1172
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1181
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1185
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1191
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1204
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1228
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1255
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1274
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1280
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1287
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1304
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1308
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1312
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1316
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1320
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1324
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1331
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1335
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1341
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1357
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1361
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1391
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1395
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1399
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1403
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1407
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1411
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1415
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1419
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1423
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1427
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1431
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1435
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1439
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1443
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1447
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1451
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1455
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1459
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1463
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1467
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1471
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1475
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1479
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1483
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1487
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1491
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1495
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1499
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1503
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1507
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1511
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1515
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1519
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1523
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1527
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1531
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1535
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1539
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1543
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1547
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1551
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1555
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1559
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1563
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1598
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1628
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1632
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1636
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1642
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1652
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1659
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1683
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1692
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1700
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1708
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1731
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1776
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1783
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1790
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1813
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1817
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1823
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1833
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1837
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1848
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1867
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1905
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1909
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1962
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1969
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1991
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1995
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2017
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2021
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2027
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2033
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2037
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2041
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2045
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2063
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2069
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2095
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2115
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2139
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2147
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2202
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2208
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2221
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2261
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2265
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2271
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2359
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2370
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2403
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2463
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2467
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2471
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2475
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2485
		{
			yyVAL.item = nil
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2490
		{
			yyVAL.item = nil
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2552
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2563
		{
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2567
		{
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2572
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2581
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2593
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2626
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2634
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2646
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2671
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2681
		{
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2683
		{
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2692
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2731
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2762
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2774
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2778
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2816
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2823
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2832
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2841
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2845
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2851
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2893
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2897
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2903
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2909
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2913
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2917
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2927
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2950
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2977
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2981
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2996
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3027
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3033
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3048
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3066
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3071
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3107
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3118
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3122
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3128
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3133
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3140
		{
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3142
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3145
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3154
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3158
		{
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3172
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3185
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3193
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3207
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3227
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3240
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3246
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3250
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3256
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3269
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3277
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3291
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3310
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3314
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3323
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3327
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3342
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3346
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3356
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3362
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3366
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3372
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3377
		{
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3388
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3392
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3399
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3408
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3414
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3418
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3424
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3428
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3464
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3482
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3501
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3518
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3531
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3535
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3540
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3544
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3551
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3556
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3573
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3611
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3615
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3621
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3633
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3642
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3648
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3665
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3671
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3677
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3681
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3692
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3696
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3700
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3705
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3709
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3713
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3727
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3741
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3803
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3820
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3828
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3844
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3852
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3860
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3876
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3911
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3915
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3919
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3945
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3954
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3973
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3979
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3983
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3988
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3992
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3997
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4005
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4011
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4019
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4027
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4037
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4052
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4061
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4070
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4080
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4084
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4102
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4106
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4122
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4126
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4148
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4154
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4158
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4162
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4172
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4182
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4188
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4192
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4198
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4212
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4225
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4231
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4268
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4272
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4278
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4296
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4301
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4309
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4322
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4326
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4330
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4334
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4339
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4347
		{
			yyVAL.str = yyDollar[2].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4353
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4363
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4367
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4381
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4430
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4446
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4451
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4457
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4464
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4468
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4474
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4480
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4489
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4497
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4516
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4521
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4538
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4550
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4558
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4564
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4570
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4576
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4605
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4615
		{
			yyVAL.str = yyDollar[1].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4619
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4625
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4638
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4646
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4652
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4659
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4673
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4705
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4709
		{
			yyVAL.str = yyDollar[2].str
		}
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4729
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4735
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4741
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4765
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4770
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4776
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4784
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4890
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4894
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4910
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4914
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4920
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4930
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4934
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4947
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4960
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4975
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4982
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4991
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4995
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5001
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5015
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5019
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5028
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5032
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5046
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5069
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5091
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5095
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5103
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5107
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5113
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5117
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5123
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5128
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5137
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5141
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5145
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5155
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5170
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5193
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5199
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5203
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5209
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5213
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5217
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5232
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5244
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5253
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5266
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5273
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5302
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5306
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5311
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5315
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5322
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5346
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5360
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5368
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5375
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5389
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5419
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5430
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5437
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5448
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5489
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5503
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5521
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5534
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5540
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5544
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5550
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5559
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5573
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5579
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5583
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5596
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5605
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5609
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5618
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5627
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5632
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5636
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5646
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5650
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5669
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5677
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5696
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5705
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5715
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5725
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5729
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5747
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5753
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5757
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5761
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5787
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5792
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5796
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5800
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5804
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5820
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5824
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5828
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5832
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5836
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5840
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5844
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5848
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5856
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5860
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5864
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5868
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5872
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5887
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5891
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5897
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5902
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5906
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5910
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5924
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5954
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5963
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5968
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5974
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5985
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5991
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5995
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6001
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6013
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6037
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6060
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6093
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6097
		{
			yyVAL.str = yyDollar[1].str
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6107
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6113
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6119
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6133
		{
			yyVAL.str = ""
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6137
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6143
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6149
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6153
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6157
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6163
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6167
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6171
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6181
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6185
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6189
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6198
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6204
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6208
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6214
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6218
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6222
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6226
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6230
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6234
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6239
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6243
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6247
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6251
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6255
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6259
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6263
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6267
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6286
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6295
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6305
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6309
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6315
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6341
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6348
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6355
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6364
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6370
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6388
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6392
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6408
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6412
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6421
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6426
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6430
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6446
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6452
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6456
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6460
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6464
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6468
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6472
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6476
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6480
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6484
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6488
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6500
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6506
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6510
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6514
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6534
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6538
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6546
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6550
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6568
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6572
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6581
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6585
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6593
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6597
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6603
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6616
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6631
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6635
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6641
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6651
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6711
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6723
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6767
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6799
		{
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6805
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6809
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6813
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6819
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6823
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6845
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6852
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6865
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6872
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6881
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6886
		{
			yyVAL.str = ","
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6890
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6902
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6912
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6923
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6942
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6961
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6981
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7011
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7021
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7031
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7041
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7051
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7071
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7088
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7112
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7120
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7130
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7147
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7155
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7163
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7171
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7179
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7190
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7223
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7245
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7305
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7316
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7324
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7338
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7350
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7358
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7368
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7378
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7386
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7397
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7406
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7415
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7423
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7433
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7441
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7455
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7465
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7484
		{
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7486
		{
		}
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7527
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7561
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7567
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7571
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7586
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7684
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7702
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7708
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7719
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7723
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7727
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7733
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7737
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7741
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7745
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7749
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7753
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7757
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7763
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7767
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7771
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7775
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7781
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7785
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7798
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7803
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7807
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7811
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7815
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7819
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7823
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7837
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7841
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7859
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7864
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7882
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7919
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7945
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8036
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8051
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8078
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8120
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8185
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8197
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8217
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8237
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8337
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8349
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8385
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8433
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8446
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8459
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8474
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8482
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8491
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8524
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8529
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8535
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8542
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8546
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8551
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8555
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8561
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8567
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8574
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8581
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8590
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8597
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8604
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8613
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8617
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8627
		{
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8629
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8639
		{
			yyVAL.str = ""
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

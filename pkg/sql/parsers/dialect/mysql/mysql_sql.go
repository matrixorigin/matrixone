// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PUBLICATION = 57620
const SUBSCRIPTIONS = 57621
const PUBLICATIONS = 57622
const PROPERTIES = 57623
const PARSER = 57624
const VISIBLE = 57625
const INVISIBLE = 57626
const BTREE = 57627
const HASH = 57628
const RTREE = 57629
const BSI = 57630
const ZONEMAP = 57631
const LEADING = 57632
const BOTH = 57633
const TRAILING = 57634
const UNKNOWN = 57635
const EXPIRE = 57636
const ACCOUNT = 57637
const ACCOUNTS = 57638
const UNLOCK = 57639
const DAY = 57640
const NEVER = 57641
const PUMP = 57642
const MYSQL_COMPATBILITY_MODE = 57643
const SECOND = 57644
const ASCII = 57645
const COALESCE = 57646
const COLLATION = 57647
const HOUR = 57648
const MICROSECOND = 57649
const MINUTE = 57650
const MONTH = 57651
const QUARTER = 57652
const REPEAT = 57653
const REVERSE = 57654
const ROW_COUNT = 57655
const WEEK = 57656
const REVOKE = 57657
const FUNCTION = 57658
const PRIVILEGES = 57659
const TABLESPACE = 57660
const EXECUTE = 57661
const SUPER = 57662
const GRANT = 57663
const OPTION = 57664
const REFERENCES = 57665
const REPLICATION = 57666
const SLAVE = 57667
const CLIENT = 57668
const USAGE = 57669
const RELOAD = 57670
const FILE = 57671
const TEMPORARY = 57672
const ROUTINE = 57673
const EVENT = 57674
const SHUTDOWN = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const ENGINES = 57682
const LOW_CARDINALITY = 57683
const ADMIN_NAME = 57684
const RANDOM = 57685
const SUSPEND = 57686
const ATTRIBUTE = 57687
const HISTORY = 57688
const REUSE = 57689
const CURRENT = 57690
const OPTIONAL = 57691
const FAILED_LOGIN_ATTEMPTS = 57692
const PASSWORD_LOCK_TIME = 57693
const UNBOUNDED = 57694
const SECONDARY = 57695
const USER = 57696
const IDENTIFIED = 57697
const CIPHER = 57698
const ISSUER = 57699
const X509 = 57700
const SUBJECT = 57701
const SAN = 57702
const REQUIRE = 57703
const SSL = 57704
const NONE = 57705
const PASSWORD = 57706
const MAX_QUERIES_PER_HOUR = 57707
const MAX_UPDATES_PER_HOUR = 57708
const MAX_CONNECTIONS_PER_HOUR = 57709
const MAX_USER_CONNECTIONS = 57710
const FORMAT = 57711
const VERBOSE = 57712
const CONNECTION = 57713
const TRIGGERS = 57714
const PROFILES = 57715
const LOAD = 57716
const INFILE = 57717
const TERMINATED = 57718
const OPTIONALLY = 57719
const ENCLOSED = 57720
const ESCAPED = 57721
const STARTING = 57722
const LINES = 57723
const ROWS = 57724
const IMPORT = 57725
const MODUMP = 57726
const OVER = 57727
const PRECEDING = 57728
const FOLLOWING = 57729
const GROUPS = 57730
const DATABASES = 57731
const TABLES = 57732
const EXTENDED = 57733
const FULL = 57734
const PROCESSLIST = 57735
const FIELDS = 57736
const COLUMNS = 57737
const OPEN = 57738
const ERRORS = 57739
const WARNINGS = 57740
const INDEXES = 57741
const SCHEMAS = 57742
const NODE = 57743
const LOCKS = 57744
const TABLE_NUMBER = 57745
const COLUMN_NUMBER = 57746
const TABLE_VALUES = 57747
const TABLE_SIZE = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const LOCAL = 57761
const EVENTS = 57762
const PLUGINS = 57763
const CURRENT_TIMESTAMP = 57764
const DATABASE = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const UTC_DATE = 57769
const UTC_TIME = 57770
const UTC_TIMESTAMP = 57771
const REPLACE = 57772
const CONVERT = 57773
const SEPARATOR = 57774
const TIMESTAMPDIFF = 57775
const CURRENT_DATE = 57776
const CURRENT_USER = 57777
const CURRENT_ROLE = 57778
const SECOND_MICROSECOND = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const HOUR_MICROSECOND = 57782
const HOUR_SECOND = 57783
const HOUR_MINUTE = 57784
const DAY_MICROSECOND = 57785
const DAY_SECOND = 57786
const DAY_MINUTE = 57787
const DAY_HOUR = 57788
const YEAR_MONTH = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_MONTH = 57793
const SQL_TSI_QUARTER = 57794
const SQL_TSI_YEAR = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MINUTE = 57797
const RECURSIVE = 57798
const CONFIG = 57799
const DRAINER = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const ADDDATE = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const CAST = 57812
const COUNT = 57813
const APPROX_COUNT_DISTINCT = 57814
const APPROX_PERCENTILE = 57815
const CURDATE = 57816
const CURTIME = 57817
const DATE_ADD = 57818
const DATE_SUB = 57819
const EXTRACT = 57820
const GROUP_CONCAT = 57821
const MAX = 57822
const MID = 57823
const MIN = 57824
const NOW = 57825
const POSITION = 57826
const SESSION_USER = 57827
const STD = 57828
const STDDEV = 57829
const MEDIAN = 57830
const STDDEV_POP = 57831
const STDDEV_SAMP = 57832
const SUBDATE = 57833
const SUBSTR = 57834
const SUBSTRING = 57835
const SUM = 57836
const SYSDATE = 57837
const SYSTEM_USER = 57838
const TRANSLATE = 57839
const TRIM = 57840
const VARIANCE = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const AVG = 57844
const ARROW = 57845
const ROW = 57846
const OUTFILE = 57847
const HEADER = 57848
const MAX_FILE_SIZE = 57849
const FORCE_QUOTE = 57850
const PARALLEL = 57851
const UNUSED = 57852
const BINDINGS = 57853
const DO = 57854
const DECLARE = 57855
const KILL = 57856
const QUERY_RESULT = 57857

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8737

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 100,
	21, 571,
	-2, 552,
	-1, 108,
	214, 773,
	-2, 822,
	-1, 128,
	42, 399,
	214, 399,
	241, 406,
	242, 406,
	416, 399,
	-2, 431,
	-1, 447,
	290, 93,
	392, 93,
	-2, 1385,
	-1, 505,
	67, 1191,
	-2, 1525,
	-1, 506,
	67, 1209,
	-2, 1496,
	-1, 510,
	67, 1210,
	-2, 1524,
	-1, 532,
	67, 1123,
	-2, 1580,
	-1, 533,
	67, 1124,
	-2, 1579,
	-1, 534,
	67, 1125,
	-2, 1569,
	-1, 535,
	67, 1544,
	-2, 1564,
	-1, 536,
	67, 1545,
	-2, 1565,
	-1, 537,
	67, 1546,
	-2, 1571,
	-1, 538,
	67, 1547,
	-2, 1554,
	-1, 539,
	67, 1548,
	-2, 1562,
	-1, 540,
	67, 1549,
	-2, 1572,
	-1, 541,
	67, 1550,
	-2, 1573,
	-1, 542,
	67, 1551,
	-2, 1578,
	-1, 543,
	67, 1552,
	-2, 1583,
	-1, 544,
	67, 1553,
	-2, 1584,
	-1, 546,
	67, 1188,
	-2, 1377,
	-1, 553,
	67, 1197,
	-2, 1403,
	-1, 557,
	67, 1201,
	-2, 1442,
	-1, 558,
	67, 1202,
	-2, 1520,
	-1, 566,
	67, 1212,
	-2, 1505,
	-1, 568,
	67, 1214,
	-2, 1515,
	-1, 569,
	67, 1215,
	-2, 1538,
	-1, 580,
	67, 1105,
	-2, 1574,
	-1, 581,
	67, 1106,
	-2, 1575,
	-1, 582,
	67, 1107,
	-2, 1576,
	-1, 589,
	21, 572,
	-2, 535,
	-1, 646,
	411, 431,
	412, 431,
	-2, 400,
	-1, 695,
	104, 1377,
	115, 1377,
	135, 1377,
	-2, 1352,
	-1, 733,
	21, 572,
	-2, 535,
	-1, 832,
	21, 571,
	-2, 1013,
	-1, 1167,
	67, 1259,
	-2, 1522,
	-1, 1168,
	67, 1260,
	-2, 1523,
	-1, 1375,
	1, 308,
	68, 308,
	533, 308,
	-2, 808,
	-1, 1613,
	68, 1338,
	136, 1338,
	-2, 1507,
	-1, 1614,
	68, 1338,
	136, 1338,
	-2, 1506,
	-1, 1615,
	68, 1316,
	136, 1316,
	-2, 1493,
	-1, 1616,
	68, 1317,
	136, 1317,
	-2, 1498,
	-1, 1617,
	68, 1318,
	136, 1318,
	-2, 1430,
	-1, 1618,
	68, 1319,
	136, 1319,
	-2, 1424,
	-1, 1619,
	68, 1320,
	136, 1320,
	-2, 1368,
	-1, 1620,
	68, 1321,
	136, 1321,
	-2, 1495,
	-1, 1621,
	68, 1322,
	136, 1322,
	-2, 1428,
	-1, 1622,
	68, 1323,
	136, 1323,
	-2, 1423,
	-1, 1623,
	68, 1324,
	136, 1324,
	-2, 1416,
	-1, 1625,
	68, 1327,
	136, 1327,
	-2, 1538,
	-1, 1626,
	68, 1307,
	136, 1307,
	-2, 1525,
	-1, 1627,
	68, 1336,
	136, 1336,
	-2, 1496,
	-1, 1628,
	68, 1336,
	136, 1336,
	-2, 1524,
	-1, 1629,
	68, 1336,
	136, 1336,
	-2, 1386,
	-1, 1630,
	68, 1334,
	136, 1334,
	-2, 1515,
	-1, 1631,
	68, 1331,
	136, 1331,
	-2, 1408,
	-1, 1632,
	67, 1289,
	68, 1289,
	136, 1289,
	354, 1289,
	355, 1289,
	356, 1289,
	-2, 1367,
	-1, 1633,
	67, 1290,
	68, 1290,
	136, 1290,
	354, 1290,
	355, 1290,
	356, 1290,
	-2, 1369,
	-1, 1634,
	67, 1293,
	68, 1293,
	136, 1293,
	354, 1293,
	355, 1293,
	356, 1293,
	-2, 1497,
	-1, 1635,
	67, 1295,
	68, 1295,
	136, 1295,
	354, 1295,
	355, 1295,
	356, 1295,
	-2, 1480,
	-1, 1636,
	67, 1297,
	68, 1297,
	136, 1297,
	354, 1297,
	355, 1297,
	356, 1297,
	-2, 1429,
	-1, 1637,
	67, 1299,
	68, 1299,
	136, 1299,
	354, 1299,
	355, 1299,
	356, 1299,
	-2, 1412,
	-1, 1638,
	67, 1300,
	68, 1300,
	136, 1300,
	354, 1300,
	355, 1300,
	356, 1300,
	-2, 1413,
	-1, 1639,
	67, 1302,
	68, 1302,
	136, 1302,
	354, 1302,
	355, 1302,
	356, 1302,
	-2, 1366,
	-1, 1640,
	68, 1341,
	136, 1341,
	354, 1341,
	355, 1341,
	356, 1341,
	-2, 1391,
	-1, 1641,
	68, 1341,
	136, 1341,
	354, 1341,
	355, 1341,
	356, 1341,
	-2, 1404,
	-1, 1642,
	68, 1344,
	136, 1344,
	354, 1344,
	355, 1344,
	356, 1344,
	-2, 1387,
	-1, 1643,
	68, 1341,
	136, 1341,
	354, 1341,
	355, 1341,
	356, 1341,
	-2, 1465,
	-1, 1656,
	1, 801,
	68, 801,
	533, 801,
	-2, 808,
	-1, 1762,
	21, 571,
	-2, 663,
	-1, 1929,
	1, 802,
	68, 802,
	533, 802,
	-2, 808,
	-1, 1938,
	65, 479,
	136, 479,
	-2, 917,
	-1, 1955,
	275, 981,
	-2, 960,
	-1, 2198,
	275, 981,
	-2, 961,
	-1, 2325,
	88, 808,
	131, 808,
	168, 808,
	171, 808,
	-2, 865,
	-1, 2328,
	88, 808,
	131, 808,
	168, 808,
	171, 808,
	-2, 865,
	-1, 2331,
	65, 479,
	136, 479,
	-2, 918,
	-1, 2419,
	88, 808,
	131, 808,
	168, 808,
	171, 808,
	-2, 866,
	-1, 2691,
	68, 837,
	136, 837,
	-2, 808,
	-1, 2695,
	68, 837,
	136, 837,
	-2, 808,
	-1, 2709,
	68, 841,
	136, 841,
	-2, 808,
	-1, 2714,
	68, 842,
	136, 842,
	-2, 808,
}

const yyPrivate = 57344

const yyLast = 31451

var yyAct = [...]int{
	476, 2703, 2695, 2674, 1233, 456, 2694, 1376, 2585, 458,
	2632, 1148, 2521, 478, 2602, 2624, 2210, 2396, 2539, 2444,
	2540, 1603, 2391, 2512, 2528, 2277, 2532, 2412, 2463, 2411,
	2278, 2413, 859, 590, 2394, 2486, 1295, 2454, 2432, 502,
	149, 149, 1941, 1337, 2418, 1000, 149, 393, 400, 2341,
	2180, 400, 1793, 1144, 2020, 2308, 1151, 1053, 1690, 2019,
	2006, 1438, 2220, 2021, 2199, 1756, 2013, 1611, 2016, 1408,
	460, 2269, 2275, 1829, 1507, 1476, 1695, 411, 2042, 2252,
	2152, 2178, 2155, 1455, 405, 2219, 727, 2150, 2062, 1663,
	1930, 1609, 694, 1503, 961, 1379, 449, 1291, 585, 1485,
	1484, 450, 455, 1286, 1477, 1232, 1305, 1828, 2056, 1431,
	1502, 626, 976, 700, 1757, 1411, 1912, 1959, 1908, 1409,
	1745, 1691, 703, 30, 2101, 3, 397, 19, 396, 7,
	394, 8, 1313, 1709, 704, 43, 585, 1662, 1325, 1796,
	896, 395, 6, 1142, 1416, 725, 1339, 1504, 149, 1535,
	459, 457, 1081, 1607, 1514, 398, 31, 1649, 1591, 1870,
	1197, 1062, 1347, 467, 1133, 448, 1181, 389, 1480, 491,
	100, 744, 698, 989, 1296, 1349, 1147, 99, 1348, 1483,
	941, 43, 1141, 686, 148, 148, 1435, 1461, 2419, 1764,
	384, 1364, 1324, 1032, 386, 625, 587, 1203, 1202, 16,
	413, 9, 414, 985, 4, 1080, 1001, 623, 138, 959,
	1045, 141, 2095, 383, 589, 1350, 100, 642, 2095, 1521,
	399, 652, 1831, 1511, 144, 143, 687, 2459, 2455, 1794,
	2276, 1309, 2568, 1479, 854, 588, 1223, 860, 142, 142,
	39, 130, 109, 598, 2404, 142, 764, 1816, 1508, 2403,
	978, 142, 382, 39, 130, 109, 2576, 2496, 142, 1824,
	1034, 409, 142, 2124, 142, 1100, 30, 1653, 142, 724,
	19, 403, 7, 142, 8, 39, 130, 109, 43, 1519,
	1780, 1097, 1093, 798, 142, 6, 1781, 1015, 1910, 1016,
	1797, 1449, 729, 662, 2077, 139, 139, 410, 1090, 31,
	98, 2620, 1099, 997, 2070, 911, 1419, 1420, 139, 702,
	2618, 1035, 1360, 100, 1118, 139, 145, 701, 1150, 1092,
	98, 139, 796, 1004, 584, 139, 1003, 1006, 1007, 791,
	139, 575, 697, 574, 576, 577, 599, 578, 579, 696,
	1909, 139, 1006, 1007, 2569, 2570, 1871, 2461, 2543, 2544,
	801, 802, 803, 800, 1086, 2472, 2606, 2607, 2464, 2465,
	2466, 2467, 2279, 2279, 2063, 2514, 2514, 2517, 2064, 1018,
	2065, 2457, 1811, 747, 1153, 738, 591, 1432, 2527, 2288,
	1424, 1129, 2309, 1134, 1219, 1138, 149, 737, 1216, 1515,
	614, 2316, 1218, 1215, 1217, 1221, 1222, 1736, 2409, 667,
	1220, 666, 400, 400, 2575, 149, 2166, 899, 779, 1137,
	780, 1648, 1588, 1280, 1279, 2478, 732, 734, 736, 1238,
	2156, 794, 795, 1903, 2090, 919, 923, 925, 927, 929,
	930, 932, 2217, 936, 933, 934, 935, 2088, 782, 914,
	915, 916, 917, 897, 898, 920, 108, 900, 140, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 912,
	918, 793, 1821, 747, 767, 731, 834, 128, 922, 924,
	926, 928, 931, 1915, 2010, 995, 1152, 2471, 1738, 2578,
	2579, 671, 1139, 2473, 2542, 2177, 759, 2481, 2406, 2171,
	1741, 2613, 2160, 402, 1159, 1162, 1163, 733, 668, 709,
	708, 710, 2164, 1136, 913, 1160, 401, 777, 2361, 1520,
	1524, 1526, 1527, 616, 1017, 699, 602, 1027, 1447, 1448,
	789, 790, 2533, 613, 612, 43, 43, 2622, 2688, 707,
	735, 2704, 2642, 2587, 1226, 1227, 1228, 1229, 1230, 1231,
	1224, 1225, 2583, 2584, 606, 2587, 2649, 2617, 984, 755,
	749, 748, 2446, 2503, 2161, 2162, 2354, 670, 740, 741,
	100, 100, 702, 2653, 2627, 1991, 778, 1719, 2349, 2163,
	701, 2433, 2434, 2435, 2437, 2436, 1718, 712, 2234, 2345,
	1921, 714, 2367, 2368, 1041, 611, 2158, 1040, 757, 610,
	1509, 1509, 1509, 999, 998, 600, 605, 1020, 705, 2705,
	983, 958, 960, 982, 1924, 1925, 1926, 1927, 2675, 756,
	1135, 2487, 2292, 603, 836, 837, 838, 839, 2094, 713,
	938, 2300, 752, 753, 728, 626, 669, 1536, 2711, 1844,
	1845, 832, 840, 2699, 601, 781, 772, 962, 774, 701,
	749, 748, 409, 967, 2511, 1006, 1007, 1033, 617, 1817,
	742, 890, 1696, 1699, 1006, 1007, 1771, 706, 1512, 2577,
	1005, 1699, 2571, 2572, 2093, 764, 775, 971, 149, 970,
	1029, 969, 604, 404, 2146, 40, 1523, 996, 2044, 2046,
	2628, 1522, 784, 2048, 785, 1433, 1510, 1002, 588, 585,
	585, 585, 408, 973, 1057, 1057, 2167, 149, 963, 964,
	965, 966, 2479, 968, 2405, 2157, 758, 1768, 110, 110,
	40, 2091, 787, 400, 960, 110, 1084, 1084, 1428, 1825,
	1161, 110, 1038, 1087, 2410, 1422, 711, 1423, 110, 1425,
	1130, 1095, 110, 2445, 110, 768, 1525, 1767, 110, 1421,
	2623, 615, 673, 110, 1064, 763, 1914, 1055, 1055, 870,
	871, 1116, 1059, 921, 110, 674, 2698, 444, 770, 699,
	446, 946, 2103, 2102, 1057, 445, 1057, 737, 2159, 2672,
	773, 776, 620, 621, 622, 2350, 2351, 1700, 1101, 1770,
	1769, 783, 1693, 1036, 1037, 1700, 1694, 1697, 1992, 1994,
	1995, 1996, 1993, 2654, 769, 2710, 1703, 943, 1149, 1918,
	1919, 799, 2347, 945, 2625, 2626, 2346, 2717, 2184, 991,
	992, 663, 1025, 1917, 592, 2249, 589, 788, 2245, 764,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 975, 1799, 2045, 2326, 1192, 1193, 1698, 1340,
	786, 1063, 717, 722, 723, 1795, 1201, 1597, 1028, 986,
	990, 990, 990, 1340, 2175, 1247, 1651, 1816, 1019, 1146,
	1021, 1008, 1755, 771, 1011, 663, 1905, 1253, 1254, 1066,
	986, 2716, 986, 1256, 383, 799, 677, 43, 1124, 1940,
	1261, 1262, 1121, 1091, 1039, 1939, 43, 1098, 993, 1564,
	585, 665, 1563, 1120, 664, 1009, 1010, 100, 1012, 1013,
	1014, 100, 1051, 1052, 1131, 1127, 1804, 1125, 1713, 1164,
	1107, 1065, 100, 382, 1102, 1048, 1049, 1050, 1111, 1112,
	1702, 100, 1085, 1078, 676, 1706, 1704, 1601, 679, 678,
	1705, 799, 1281, 1077, 801, 802, 803, 800, 1302, 799,
	1143, 1103, 1754, 1783, 1783, 665, 589, 2636, 664, 1508,
	2707, 1123, 1650, 1122, 1246, 1234, 1119, 1237, 2689, 1755,
	799, 1248, 149, 1140, 1323, 1057, 1327, 1145, 1329, 1330,
	2684, 2678, 1255, 2249, 1257, 626, 762, 2176, 1338, 2122,
	1190, 1191, 1057, 987, 1303, 592, 1029, 2677, 1602, 2658,
	1183, 393, 1568, 2634, 2596, 2550, 801, 802, 803, 800,
	2545, 1284, 1306, 1287, 1288, 2505, 1940, 1115, 1546, 1499,
	719, 720, 721, 1293, 1294, 1114, 1365, 1365, 2708, 1029,
	1029, 2504, 1029, 1322, 1848, 149, 1517, 1323, 1323, 1363,
	2501, 1057, 1406, 1418, 801, 802, 803, 800, 2685, 1517,
	2500, 1600, 2499, 585, 1328, 1057, 2498, 2482, 1755, 1236,
	936, 933, 934, 935, 2369, 1517, 1853, 1517, 1852, 1851,
	1849, 2635, 2597, 2483, 1331, 1332, 1333, 1427, 2483, 2236,
	1258, 1323, 1057, 2506, 1454, 149, 149, 1458, 2039, 1545,
	1460, 1894, 988, 1892, 1466, 1890, 1402, 1403, 149, 1667,
	761, 1464, 1888, 1247, 1247, 1487, 1876, 1832, 2483, 1445,
	1247, 1247, 939, 730, 1132, 1494, 1320, 1814, 2483, 1298,
	2483, 1301, 1367, 1808, 2483, 2483, 1276, 974, 1195, 1429,
	1806, 1850, 1783, 1801, 1310, 1666, 1042, 2334, 1598, 1338,
	1451, 1341, 1342, 1057, 1506, 1572, 1304, 2237, 1434, 2185,
	1354, 1326, 2058, 1571, 451, 1562, 1755, 1516, 1108, 1895,
	1453, 1893, 2315, 1889, 1942, 1819, 1361, 1362, 1343, 1457,
	1889, 1766, 762, 1444, 799, 799, 1334, 1352, 1353, 1371,
	1335, 1472, 1500, 1488, 675, 1667, 1818, 1810, 1683, 1359,
	1358, 1802, 1369, 1559, 1370, 1351, 1345, 816, 1807, 1529,
	618, 1802, 1482, 1667, 1533, 1534, 1597, 1368, 986, 1482,
	1547, 1498, 1417, 799, 1469, 1319, 1104, 1326, 1366, 937,
	1355, 799, 1462, 799, 1375, 1517, 1109, 845, 750, 1456,
	1456, 990, 1407, 1405, 2189, 764, 1430, 730, 2085, 730,
	1240, 1239, 1456, 979, 1346, 1044, 1189, 980, 1442, 1443,
	2667, 987, 2655, 43, 1710, 1450, 1854, 1855, 1143, 1356,
	1357, 1186, 1188, 1185, 1452, 1187, 1046, 2250, 2241, 1439,
	1440, 1441, 702, 2238, 1569, 2096, 2011, 1047, 1489, 702,
	701, 1576, 1805, 1470, 1773, 739, 1496, 701, 100, 1839,
	1491, 1497, 1492, 1198, 1493, 817, 818, 819, 820, 821,
	822, 823, 816, 1259, 1260, 1321, 1501, 1263, 1264, 1265,
	1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 680,
	819, 820, 821, 822, 823, 816, 1043, 2610, 449, 737,
	1644, 672, 1267, 1198, 800, 1542, 803, 800, 2357, 1528,
	2356, 2066, 149, 149, 149, 1664, 2682, 1969, 1531, 1532,
	988, 1537, 1968, 1963, 1958, 1671, 1029, 2338, 2693, 1183,
	1612, 1674, 1530, 2652, 832, 2681, 1676, 1541, 2643, 1024,
	1251, 1026, 701, 1030, 1031, 1604, 1605, 2407, 1029, 479,
	488, 1252, 2638, 2558, 737, 480, 2426, 487, 481, 485,
	484, 482, 483, 1708, 2312, 815, 814, 824, 825, 817,
	818, 819, 820, 821, 822, 823, 816, 2651, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1689, 2408, 1079, 2313, 801,
	802, 803, 800, 2014, 1759, 1759, 1418, 1759, 1841, 2115,
	801, 802, 803, 800, 1686, 801, 802, 803, 800, 489,
	2002, 2165, 2141, 1645, 814, 824, 825, 817, 818, 819,
	820, 821, 822, 823, 816, 1057, 149, 2314, 2140, 1593,
	807, 808, 809, 810, 811, 812, 813, 805, 2081, 486,
	737, 2060, 1863, 1084, 2114, 1418, 1555, 2000, 1788, 2001,
	1790, 2537, 1712, 1986, 1985, 2151, 1658, 1659, 1660, 1984,
	1761, 1652, 1765, 1606, 1685, 1763, 1981, 801, 802, 803,
	800, 1612, 1550, 1673, 801, 802, 803, 800, 1778, 1812,
	1675, 1975, 1506, 1677, 1678, 1972, 1999, 1971, 1672, 1057,
	2612, 1057, 1711, 1057, 1714, 1715, 1716, 1717, 737, 1554,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1787, 1680, 1681, 1682, 801, 802,
	803, 800, 801, 802, 803, 800, 1684, 1057, 1857, 1826,
	824, 825, 817, 818, 819, 820, 821, 822, 823, 816,
	1864, 1596, 1998, 1739, 1822, 1057, 1988, 1595, 801, 802,
	803, 800, 1866, 1544, 444, 1594, 1590, 446, 1589, 990,
	1105, 956, 445, 2392, 2608, 1762, 2573, 2509, 2480, 2456,
	1063, 2417, 2390, 701, 2388, 2520, 2373, 804, 2371, 2491,
	1055, 1997, 2007, 1868, 1856, 1987, 833, 1779, 1785, 1679,
	2340, 2311, 1843, 1784, 842, 1786, 2310, 1792, 1055, 2531,
	2307, 2297, 1865, 1823, 2706, 2291, 1774, 1775, 1776, 1830,
	801, 802, 803, 800, 1417, 847, 2244, 2242, 2232, 2231,
	2398, 1837, 801, 802, 803, 800, 2397, 2145, 2139, 1815,
	1813, 1057, 1820, 2366, 1922, 2092, 2061, 2051, 1323, 1896,
	1989, 1982, 1938, 801, 802, 803, 800, 1978, 1944, 801,
	802, 803, 800, 2294, 1977, 1976, 801, 802, 803, 800,
	1906, 1833, 1834, 2118, 1953, 1143, 1847, 2117, 1836, 593,
	594, 595, 596, 1957, 531, 530, 801, 802, 803, 800,
	1599, 1592, 592, 1965, 1966, 1967, 801, 802, 803, 800,
	801, 802, 803, 800, 1473, 1970, 1471, 1932, 1288, 1316,
	1106, 869, 865, 1759, 864, 846, 1293, 1294, 726, 2328,
	2327, 2325, 1872, 2003, 2302, 1900, 2301, 1877, 2116, 1897,
	2296, 2283, 1323, 737, 1418, 1418, 1418, 1418, 1945, 2268,
	2267, 1068, 1931, 1885, 2190, 737, 1418, 1955, 2120, 1759,
	2113, 801, 802, 803, 800, 2105, 142, 2100, 2055, 130,
	109, 1960, 1057, 1960, 2022, 1904, 801, 802, 803, 800,
	1891, 1887, 1911, 149, 149, 1886, 2022, 1577, 30, 1920,
	1961, 1943, 19, 1567, 7, 1565, 8, 1561, 1560, 1937,
	43, 1558, 1552, 1247, 1549, 1247, 1936, 6, 2076, 2035,
	1548, 2080, 1956, 1250, 1962, 1884, 1298, 1057, 1301, 1883,
	2087, 31, 1947, 139, 142, 1882, 1949, 1326, 1249, 1069,
	1067, 2666, 2660, 2650, 2647, 100, 2645, 1983, 801, 802,
	803, 800, 801, 802, 803, 800, 1973, 1974, 801, 802,
	803, 800, 1979, 1980, 2008, 2557, 2012, 2507, 1952, 861,
	1083, 1083, 1306, 2023, 2024, 2025, 2026, 2075, 1283, 2037,
	2009, 2036, 2047, 2038, 2034, 2442, 589, 2430, 2427, 2073,
	2381, 139, 2049, 2052, 2379, 2079, 2364, 2363, 2108, 2362,
	2110, 2359, 1948, 2360, 1881, 2084, 2353, 2320, 2089, 2126,
	1292, 2059, 2072, 1285, 2067, 2074, 737, 2069, 977, 2004,
	2083, 1964, 2154, 1417, 1417, 1417, 1417, 801, 802, 803,
	800, 1935, 2169, 1946, 149, 1417, 1934, 2053, 2054, 1933,
	1297, 1950, 1951, 1300, 737, 737, 737, 1612, 2098, 2097,
	1418, 1664, 1289, 2188, 1154, 1155, 1156, 1157, 1158, 2192,
	2109, 1800, 2106, 2107, 862, 1772, 1734, 2071, 1880, 2221,
	2223, 1665, 2221, 2221, 2078, 1689, 1689, 1689, 1184, 2228,
	2104, 100, 139, 1459, 1057, 1057, 1879, 1318, 100, 2111,
	2112, 801, 802, 803, 800, 1290, 2142, 1128, 1199, 1200,
	1094, 940, 888, 887, 1235, 886, 885, 2147, 1241, 801,
	802, 803, 800, 884, 883, 149, 882, 881, 880, 2186,
	2154, 879, 878, 877, 2218, 876, 2181, 2182, 1323, 1323,
	2173, 875, 2222, 2183, 2174, 1931, 1878, 1055, 1055, 2125,
	2187, 2229, 2230, 2127, 2128, 2129, 2130, 874, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 1875, 2224, 2225, 801,
	802, 803, 800, 873, 2259, 1874, 872, 868, 2226, 1857,
	867, 866, 863, 2149, 858, 857, 855, 854, 2172, 801,
	802, 803, 800, 853, 852, 1670, 1873, 100, 801, 802,
	803, 800, 2592, 851, 850, 1307, 2246, 2247, 2235, 1311,
	2240, 849, 1314, 2191, 149, 2243, 2239, 2193, 2194, 801,
	802, 803, 800, 1869, 848, 2257, 844, 843, 766, 1417,
	2196, 2253, 2254, 1655, 2274, 754, 2590, 2541, 2256, 1923,
	2261, 2264, 2265, 2266, 100, 1782, 801, 802, 803, 800,
	1475, 2273, 815, 814, 824, 825, 817, 818, 819, 820,
	821, 822, 823, 816, 765, 2258, 2284, 2031, 2028, 1456,
	1860, 1566, 2032, 2285, 2027, 2033, 2029, 1751, 1752, 2287,
	2286, 2030, 2384, 2692, 2383, 2143, 2144, 2248, 1838, 2290,
	1809, 1803, 1323, 801, 802, 803, 800, 82, 2324, 1902,
	1401, 2148, 2260, 1277, 1759, 1418, 2331, 1194, 42, 41,
	1307, 801, 802, 803, 800, 146, 1307, 1307, 2382, 1742,
	1798, 1604, 1605, 2195, 1827, 942, 1088, 1057, 2339, 1646,
	801, 802, 803, 800, 2305, 2303, 760, 2526, 149, 2306,
	1954, 379, 1747, 1750, 1751, 1752, 1748, 2223, 1749, 1753,
	1907, 2333, 380, 381, 1336, 1317, 378, 2318, 2289, 2599,
	2319, 1835, 1240, 1239, 954, 955, 1323, 952, 953, 2329,
	737, 950, 951, 1737, 2330, 948, 949, 2218, 1404, 1023,
	2342, 792, 1022, 2337, 815, 814, 824, 825, 817, 818,
	819, 820, 821, 822, 823, 816, 2386, 2263, 1495, 981,
	944, 2022, 2375, 737, 1747, 1750, 1751, 1752, 1748, 2365,
	1749, 1753, 2661, 2581, 2564, 2562, 2372, 2534, 2370, 2519,
	2518, 2516, 2508, 2453, 2452, 2374, 2401, 2389, 2321, 2322,
	2323, 2281, 2377, 2376, 2022, 2280, 593, 594, 595, 596,
	2271, 737, 1057, 1057, 947, 592, 2270, 737, 2387, 592,
	2057, 1340, 2400, 2332, 2594, 2593, 2593, 2393, 2082, 2335,
	1539, 1657, 2336, 1543, 1551, 751, 2594, 2355, 2282, 994,
	50, 1446, 1061, 1, 1417, 1315, 2402, 597, 1689, 2040,
	737, 2041, 2358, 737, 737, 737, 2262, 2043, 1513, 1735,
	1647, 2168, 2416, 2423, 2333, 1055, 2342, 2420, 972, 2415,
	1338, 619, 2450, 1553, 2422, 1242, 1113, 1557, 716, 2431,
	746, 1110, 2439, 2440, 2441, 2428, 745, 743, 1196, 493,
	2438, 1478, 2005, 2449, 2477, 1570, 2474, 2598, 1573, 1574,
	1575, 2631, 2556, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 2447, 1586, 2448, 2601, 1126, 477, 1708, 2510, 2460,
	2560, 737, 2462, 2395, 1518, 797, 2068, 638, 525, 500,
	2475, 856, 1096, 737, 2664, 1089, 2123, 718, 499, 2317,
	2484, 1916, 609, 715, 639, 1587, 2399, 2488, 2490, 2489,
	2497, 2493, 2458, 1278, 1299, 1282, 2702, 2691, 2673, 2659,
	2586, 2687, 2502, 2616, 2648, 2470, 2424, 2425, 2468, 2469,
	2641, 2582, 415, 1426, 737, 1668, 583, 684, 2443, 1474,
	416, 2515, 2513, 815, 814, 824, 825, 817, 818, 819,
	820, 821, 822, 823, 816, 1669, 2530, 2551, 2554, 2574,
	2429, 2529, 607, 1654, 608, 1929, 2535, 1928, 1165, 806,
	1182, 2298, 2299, 2546, 2547, 2548, 2549, 841, 454, 1540,
	466, 2555, 1913, 2211, 2050, 2567, 2536, 2561, 2559, 2563,
	49, 2565, 2566, 48, 2202, 47, 46, 1465, 153, 495,
	152, 2553, 2603, 2580, 475, 474, 473, 2588, 2605, 2591,
	2589, 472, 1746, 1744, 1743, 1413, 1412, 2595, 2212, 1463,
	1701, 2604, 1372, 2538, 2494, 2495, 2352, 1990, 2348, 2344,
	2233, 2205, 737, 2197, 1307, 1307, 1307, 2609, 2200, 2198,
	2204, 895, 891, 2215, 2216, 893, 894, 892, 2630, 2201,
	1846, 2619, 2621, 1842, 1687, 1688, 2179, 1083, 957, 2633,
	2629, 2476, 2304, 2614, 2639, 1610, 737, 1608, 2255, 2251,
	2170, 1486, 1312, 2637, 2644, 1901, 2646, 2640, 1414, 1410,
	1740, 1656, 74, 73, 80, 2206, 2605, 2657, 120, 37,
	2421, 586, 32, 27, 5, 29, 737, 1149, 737, 2604,
	2656, 28, 14, 15, 13, 1117, 2668, 2663, 12, 2665,
	18, 26, 911, 25, 2633, 2669, 24, 737, 92, 91,
	2676, 23, 90, 2683, 89, 88, 2686, 1149, 2680, 1149,
	2662, 87, 22, 11, 86, 85, 84, 1840, 21, 2690,
	79, 628, 77, 20, 78, 1858, 1859, 75, 1149, 2697,
	1861, 1862, 2700, 2701, 76, 2709, 60, 59, 58, 2611,
	2713, 2712, 2714, 1867, 71, 70, 2715, 2697, 69, 68,
	67, 66, 2701, 2214, 142, 1692, 39, 130, 109, 815,
	814, 824, 825, 817, 818, 819, 820, 821, 822, 823,
	816, 65, 1307, 637, 135, 1898, 1899, 1314, 57, 56,
	2208, 123, 55, 663, 54, 136, 72, 64, 63, 62,
	98, 911, 61, 53, 899, 52, 51, 107, 889, 106,
	105, 104, 2207, 2209, 103, 83, 102, 33, 34, 35,
	36, 139, 919, 923, 925, 927, 929, 930, 932, 117,
	936, 933, 934, 935, 116, 118, 914, 915, 916, 917,
	897, 898, 920, 119, 900, 114, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 912, 918, 112, 115,
	113, 111, 44, 10, 17, 922, 924, 926, 928, 931,
	2, 0, 0, 665, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 131, 132, 0, 133, 134, 2203, 0, 0, 0,
	0, 913, 2213, 899, 0, 0, 0, 0, 0, 0,
	650, 0, 0, 0, 0, 1223, 0, 0, 629, 0,
	0, 919, 923, 925, 927, 929, 930, 932, 0, 936,
	933, 934, 935, 0, 0, 914, 915, 916, 917, 897,
	898, 920, 0, 900, 655, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 912, 918, 2121, 0, 108,
	129, 140, 0, 81, 922, 924, 926, 928, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 122, 121, 0, 0, 1307, 0, 45, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	913, 649, 648, 0, 0, 0, 815, 814, 824, 825,
	817, 818, 819, 820, 821, 822, 823, 816, 647, 0,
	0, 0, 0, 0, 0, 0, 2099, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 630, 658,
	0, 0, 0, 0, 0, 124, 125, 126, 2119, 815,
	814, 824, 825, 817, 818, 819, 820, 821, 822, 823,
	816, 0, 653, 1219, 0, 0, 0, 1216, 137, 0,
	0, 1218, 1215, 1217, 1221, 1222, 1538, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	127, 0, 94, 0, 654, 659, 0, 0, 0, 815,
	814, 824, 825, 817, 818, 819, 820, 821, 822, 823,
	816, 644, 0, 646, 662, 0, 0, 0, 643, 641,
	640, 0, 645, 631, 632, 633, 634, 635, 636, 0,
	660, 661, 0, 0, 0, 827, 0, 831, 0, 0,
	0, 0, 656, 657, 0, 95, 0, 0, 0, 2227,
	921, 0, 828, 830, 826, 38, 829, 815, 814, 824,
	825, 817, 818, 819, 820, 821, 822, 823, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 40, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1226, 1227, 1228, 1229, 1230, 1231, 1224,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 507, 0, 0, 0, 0, 921,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 498, 0,
	0, 312, 266, 96, 97, 101, 0, 554, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	2293, 0, 492, 531, 530, 479, 488, 2295, 0, 208,
	151, 480, 0, 487, 481, 485, 484, 482, 483, 0,
	546, 0, 0, 0, 0, 0, 0, 452, 465, 2522,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 0, 0, 0, 0, 508,
	0, 464, 0, 0, 503, 489, 490, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 486, 506, 510, 220, 568,
	504, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 569, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 1307, 0, 0, 2378, 0,
	0, 2380, 0, 0, 501, 0, 0, 343, 0, 0,
	552, 0, 0, 0, 316, 2385, 0, 251, 0, 0,
	0, 505, 0, 302, 284, 565, 453, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 219, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 355, 234, 191, 192, 338, 550, 280, 0,
	0, 564, 545, 547, 548, 551, 555, 556, 557, 558,
	559, 561, 563, 567, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 2523, 0, 2485,
	0, 2524, 0, 566, 0, 0, 0, 347, 0, 0,
	0, 0, 2492, 509, 270, 271, 272, 273, 553, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 2525, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 0,
	0, 575, 549, 574, 576, 577, 573, 578, 579, 560,
	471, 0, 513, 571, 570, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2525, 0, 193,
	0, 253, 0, 294, 232, 538, 518, 519, 520, 470,
	521, 516, 517, 539, 511, 535, 536, 494, 514, 522,
	534, 523, 537, 540, 541, 580, 581, 529, 582, 526,
	542, 533, 532, 524, 512, 543, 544, 497, 496, 527,
	528, 515, 320, 507, 0, 351, 352, 353, 373, 337,
	0, 224, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	227, 0, 0, 252, 0, 0, 0, 498, 0, 0,
	312, 266, 0, 0, 0, 2525, 554, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 0,
	0, 492, 531, 530, 479, 488, 0, 0, 208, 151,
	480, 0, 487, 481, 485, 484, 482, 483, 0, 546,
	0, 0, 0, 0, 0, 0, 452, 465, 0, 469,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 0, 0, 0, 0, 508, 0,
	464, 0, 0, 503, 489, 490, 0, 0, 199, 317,
	333, 209, 308, 346, 214, 315, 204, 281, 304, 0,
	0, 201, 331, 314, 263, 246, 247, 200, 0, 299,
	225, 238, 221, 279, 486, 506, 510, 220, 568, 504,
	341, 203, 0, 340, 278, 327, 332, 264, 258, 202,
	329, 262, 257, 250, 229, 569, 242, 290, 256, 291,
	243, 268, 267, 269, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 343, 0, 0, 552,
	0, 0, 0, 316, 0, 0, 251, 0, 0, 0,
	505, 0, 302, 284, 565, 453, 0, 300, 254, 328,
	292, 334, 318, 342, 296, 293, 194, 319, 223, 265,
	205, 207, 219, 226, 228, 230, 231, 274, 275, 287,
	307, 321, 322, 323, 222, 215, 301, 216, 240, 217,
	195, 309, 218, 197, 288, 326, 0, 236, 297, 261,
	198, 260, 289, 325, 324, 206, 350, 356, 357, 361,
	0, 362, 0, 0, 0, 370, 375, 376, 377, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 1244, 1243,
	1245, 355, 234, 191, 192, 338, 550, 280, 0, 0,
	564, 545, 547, 548, 551, 555, 556, 557, 558, 559,
	561, 563, 567, 305, 0, 0, 0, 0, 0, 245,
	286, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 336, 348, 365, 368,
	0, 0, 0, 196, 367, 0, 0, 0, 0, 0,
	0, 0, 566, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 509, 270, 271, 272, 273, 553, 0, 213,
	366, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 233,
	239, 374, 241, 212, 285, 235, 345, 248, 0, 371,
	0, 0, 0, 0, 0, 277, 244, 310, 249, 255,
	298, 344, 283, 303, 210, 335, 311, 259, 0, 0,
	575, 549, 574, 576, 577, 573, 578, 579, 560, 471,
	0, 513, 571, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	253, 0, 294, 232, 538, 518, 519, 520, 470, 521,
	516, 517, 539, 511, 535, 536, 494, 514, 522, 534,
	523, 537, 540, 541, 580, 581, 529, 582, 526, 542,
	533, 532, 524, 512, 543, 544, 497, 496, 527, 528,
	515, 320, 507, 0, 351, 352, 353, 373, 337, 0,
	224, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 227,
	0, 0, 252, 0, 0, 0, 498, 0, 0, 312,
	266, 0, 0, 0, 0, 554, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	492, 531, 530, 479, 488, 0, 0, 208, 151, 480,
	0, 487, 481, 485, 484, 482, 483, 0, 546, 0,
	0, 0, 0, 0, 0, 452, 465, 0, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 0, 0, 0, 0, 508, 0, 464,
	0, 0, 503, 489, 490, 0, 0, 199, 317, 333,
	209, 308, 346, 214, 315, 204, 281, 304, 0, 0,
	201, 331, 314, 263, 246, 247, 200, 0, 299, 225,
	238, 221, 279, 486, 506, 510, 220, 568, 504, 341,
	203, 0, 340, 278, 327, 332, 264, 258, 202, 329,
	262, 257, 250, 229, 569, 242, 290, 256, 291, 243,
	268, 267, 269, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 343, 0, 0, 552, 0,
	0, 0, 316, 0, 0, 251, 0, 0, 0, 505,
	0, 302, 284, 565, 453, 0, 300, 254, 328, 292,
	334, 318, 342, 296, 293, 194, 319, 223, 265, 205,
	207, 219, 226, 228, 230, 231, 274, 275, 287, 307,
	321, 322, 323, 222, 215, 301, 216, 240, 217, 195,
	309, 218, 197, 288, 326, 0, 236, 297, 261, 198,
	260, 289, 325, 324, 206, 350, 356, 357, 361, 0,
	362, 0, 0, 0, 370, 375, 376, 377, 0, 0,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 0,
	355, 234, 191, 192, 338, 550, 280, 0, 0, 564,
	545, 547, 548, 551, 555, 556, 557, 558, 559, 561,
	563, 567, 305, 0, 0, 0, 0, 0, 245, 286,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 336, 348, 365, 368, 0,
	0, 0, 196, 367, 0, 2523, 0, 0, 0, 2524,
	0, 566, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 509, 270, 271, 272, 273, 553, 0, 213, 366,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 233, 239,
	374, 241, 212, 285, 235, 345, 248, 0, 371, 0,
	0, 0, 0, 0, 277, 244, 310, 249, 255, 298,
	344, 283, 303, 210, 335, 311, 259, 0, 0, 575,
	549, 574, 576, 577, 573, 578, 579, 560, 471, 0,
	513, 571, 570, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 253,
	0, 294, 232, 538, 518, 519, 520, 470, 521, 516,
	517, 539, 511, 535, 536, 494, 514, 522, 534, 523,
	537, 540, 541, 580, 581, 529, 582, 526, 542, 533,
	532, 524, 512, 543, 544, 497, 496, 527, 528, 515,
	320, 507, 0, 351, 352, 353, 373, 337, 0, 224,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 227, 1308,
	0, 252, 0, 0, 0, 498, 0, 0, 312, 266,
	0, 0, 0, 0, 554, 562, 0, 0, 0, 0,
	0, 0, 0, 1436, 0, 0, 461, 0, 0, 492,
	531, 530, 479, 488, 0, 0, 208, 151, 480, 0,
	487, 481, 485, 484, 482, 483, 0, 546, 0, 0,
	0, 0, 0, 0, 452, 465, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 0, 0, 0, 0, 508, 0, 464, 0,
	0, 1437, 489, 490, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 486, 506, 510, 220, 568, 504, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 569, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 0, 0, 343, 0, 0, 552, 0, 0,
	0, 316, 0, 0, 251, 0, 0, 0, 505, 0,
	302, 284, 565, 453, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 0, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 550, 280, 0, 0, 564, 545,
	547, 548, 551, 555, 556, 557, 558, 559, 561, 563,
	567, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	509, 270, 271, 272, 273, 553, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 575, 549,
	574, 576, 577, 573, 578, 579, 560, 471, 0, 513,
	571, 570, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 0,
	294, 232, 538, 518, 519, 520, 470, 521, 516, 517,
	539, 511, 535, 536, 494, 514, 522, 534, 523, 537,
	540, 541, 580, 581, 529, 582, 526, 542, 533, 532,
	524, 512, 543, 544, 497, 496, 527, 528, 515, 142,
	320, 507, 351, 352, 353, 373, 337, 0, 224, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 227, 0,
	0, 252, 0, 0, 0, 835, 0, 0, 312, 266,
	0, 0, 0, 0, 554, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 492,
	531, 530, 479, 488, 0, 0, 208, 151, 480, 0,
	487, 481, 485, 484, 482, 483, 0, 546, 0, 0,
	0, 0, 0, 0, 452, 465, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 0, 0, 0, 0, 508, 0, 464, 0,
	0, 503, 489, 490, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 486, 506, 510, 220, 568, 504, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 569, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 0, 0, 343, 0, 0, 552, 0, 0,
	0, 316, 0, 0, 251, 0, 0, 0, 505, 0,
	302, 284, 565, 453, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 0, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 550, 280, 0, 0, 564, 545,
	547, 548, 551, 555, 556, 557, 558, 559, 561, 563,
	567, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	509, 270, 271, 272, 273, 553, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 575, 549,
	574, 576, 577, 573, 578, 579, 560, 471, 0, 513,
	571, 570, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 110,
	294, 232, 538, 518, 519, 520, 470, 521, 516, 517,
	539, 511, 535, 536, 494, 514, 522, 534, 523, 537,
	540, 541, 580, 581, 529, 582, 526, 542, 533, 532,
	524, 512, 543, 544, 497, 496, 527, 528, 515, 320,
	507, 0, 351, 352, 353, 373, 337, 0, 224, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 227, 2670, 0,
	252, 0, 0, 0, 498, 0, 0, 312, 266, 0,
	0, 0, 0, 554, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 0, 0, 492, 531,
	530, 479, 488, 0, 0, 208, 151, 480, 0, 487,
	481, 485, 484, 482, 483, 0, 546, 0, 0, 0,
	0, 0, 0, 452, 465, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 0, 0, 0, 0, 508, 0, 464, 0, 0,
	503, 489, 490, 0, 0, 199, 317, 333, 209, 308,
	346, 214, 315, 204, 281, 304, 0, 0, 201, 331,
	314, 263, 246, 247, 200, 0, 299, 225, 238, 221,
	279, 486, 506, 510, 220, 568, 504, 341, 203, 0,
	340, 278, 327, 332, 264, 258, 202, 329, 262, 257,
	250, 229, 569, 242, 290, 256, 291, 243, 268, 267,
	269, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 0, 343, 0, 0, 552, 0, 0, 0,
	316, 0, 0, 251, 0, 0, 0, 505, 0, 302,
	284, 565, 453, 0, 300, 254, 328, 292, 334, 318,
	342, 296, 293, 194, 319, 223, 265, 205, 207, 219,
	226, 228, 230, 231, 274, 275, 287, 307, 321, 322,
	323, 222, 215, 301, 216, 240, 217, 195, 309, 218,
	197, 288, 326, 0, 236, 297, 261, 198, 260, 289,
	325, 324, 206, 350, 356, 357, 361, 0, 362, 0,
	0, 0, 370, 375, 376, 377, 0, 0, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 355, 234,
	191, 192, 338, 550, 280, 0, 0, 564, 545, 547,
	548, 551, 555, 556, 557, 558, 559, 561, 563, 567,
	305, 0, 0, 0, 0, 0, 245, 286, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 336, 348, 365, 368, 0, 0, 0,
	196, 367, 0, 0, 0, 0, 0, 0, 0, 566,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 509,
	270, 271, 272, 273, 553, 0, 213, 366, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 233, 239, 374, 241,
	212, 285, 235, 345, 248, 0, 371, 0, 0, 0,
	0, 0, 277, 244, 310, 249, 255, 298, 344, 283,
	303, 210, 335, 311, 259, 0, 0, 575, 549, 574,
	576, 577, 573, 578, 579, 560, 471, 0, 513, 571,
	570, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 253, 0, 294,
	232, 538, 518, 519, 520, 470, 521, 516, 517, 539,
	511, 535, 536, 494, 514, 522, 534, 523, 537, 540,
	541, 580, 581, 529, 582, 526, 542, 533, 532, 524,
	512, 543, 544, 497, 496, 527, 528, 515, 320, 507,
	0, 351, 352, 353, 373, 337, 0, 224, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 227, 1308, 0, 252,
	0, 0, 0, 498, 0, 0, 312, 266, 0, 0,
	0, 0, 554, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 492, 531, 530,
	479, 488, 0, 0, 208, 151, 480, 0, 487, 481,
	485, 484, 482, 483, 0, 546, 0, 0, 0, 0,
	0, 0, 452, 465, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 462, 463,
	0, 0, 0, 0, 508, 0, 464, 0, 0, 503,
	489, 490, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	486, 506, 510, 220, 568, 504, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 569, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 343, 0, 0, 552, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 505, 0, 302, 284,
	565, 453, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 550, 280, 0, 0, 564, 545, 547, 548,
	551, 555, 556, 557, 558, 559, 561, 563, 567, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 566, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 509, 270,
	271, 272, 273, 553, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 575, 549, 574, 576,
	577, 573, 578, 579, 560, 471, 0, 513, 571, 570,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 0, 294, 232,
	538, 518, 519, 520, 470, 521, 516, 517, 539, 511,
	535, 536, 494, 514, 522, 534, 523, 537, 540, 541,
	580, 581, 529, 582, 526, 542, 533, 532, 524, 512,
	543, 544, 497, 496, 527, 528, 515, 320, 507, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 227, 0, 0, 252, 0,
	0, 0, 498, 0, 0, 312, 266, 0, 0, 0,
	0, 554, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 0, 0, 492, 531, 530, 479,
	488, 0, 0, 208, 151, 480, 0, 487, 481, 485,
	484, 482, 483, 0, 546, 0, 0, 0, 0, 0,
	0, 452, 465, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 1082,
	0, 0, 0, 508, 0, 464, 0, 0, 503, 489,
	490, 0, 0, 199, 317, 333, 209, 308, 346, 214,
	315, 204, 281, 304, 0, 0, 201, 331, 314, 263,
	246, 247, 200, 0, 299, 225, 238, 221, 279, 486,
	506, 510, 220, 568, 504, 341, 203, 0, 340, 278,
	327, 332, 264, 258, 202, 329, 262, 257, 250, 229,
	569, 242, 290, 256, 291, 243, 268, 267, 269, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 343, 0, 0, 552, 0, 0, 0, 316, 0,
	0, 251, 0, 0, 0, 505, 0, 302, 284, 565,
	453, 0, 300, 254, 328, 292, 334, 318, 342, 296,
	293, 194, 319, 223, 265, 205, 207, 219, 226, 228,
	230, 231, 274, 275, 287, 307, 321, 322, 323, 222,
	215, 301, 216, 240, 217, 195, 309, 218, 197, 288,
	326, 0, 236, 297, 261, 198, 260, 289, 325, 324,
	206, 350, 356, 357, 361, 0, 362, 0, 0, 0,
	370, 375, 376, 377, 0, 0, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 355, 234, 191, 192,
	338, 550, 280, 0, 0, 564, 545, 547, 548, 551,
	555, 556, 557, 558, 559, 561, 563, 567, 305, 0,
	0, 0, 0, 0, 245, 286, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 336, 348, 365, 368, 0, 0, 0, 196, 367,
	0, 0, 0, 0, 0, 0, 0, 566, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 509, 270, 271,
	272, 273, 553, 0, 213, 366, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 233, 239, 374, 241, 212, 285,
	235, 345, 248, 0, 371, 0, 0, 0, 0, 0,
	277, 244, 310, 249, 255, 298, 344, 283, 303, 210,
	335, 311, 259, 0, 0, 575, 549, 574, 576, 577,
	573, 578, 579, 560, 471, 0, 513, 571, 570, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 253, 0, 294, 232, 538,
	518, 519, 520, 470, 521, 516, 517, 539, 511, 535,
	536, 494, 514, 522, 534, 523, 537, 540, 541, 580,
	581, 529, 582, 526, 542, 533, 532, 524, 512, 543,
	544, 497, 496, 527, 528, 515, 0, 0, 0, 351,
	352, 353, 373, 337, 0, 224, 320, 507, 0, 0,
	1556, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 227, 0, 0, 252, 0, 0,
	0, 498, 0, 0, 312, 266, 0, 0, 0, 0,
	554, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 492, 531, 530, 479, 488,
	0, 0, 208, 151, 480, 0, 487, 481, 485, 484,
	482, 483, 0, 546, 0, 0, 0, 0, 0, 0,
	452, 465, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 462, 463, 0, 0,
	0, 0, 508, 0, 464, 0, 0, 503, 489, 490,
	0, 0, 199, 317, 333, 209, 308, 346, 214, 315,
	204, 281, 304, 0, 0, 201, 331, 314, 263, 246,
	247, 200, 0, 299, 225, 238, 221, 279, 486, 506,
	510, 220, 568, 504, 341, 203, 0, 340, 278, 327,
	332, 264, 258, 202, 329, 262, 257, 250, 229, 569,
	242, 290, 256, 291, 243, 268, 267, 269, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 0, 0,
	343, 0, 0, 552, 0, 0, 0, 316, 0, 0,
	251, 0, 0, 0, 505, 0, 302, 284, 565, 453,
	0, 300, 254, 328, 292, 334, 318, 342, 296, 293,
	194, 319, 223, 265, 205, 207, 219, 226, 228, 230,
	231, 274, 275, 287, 307, 321, 322, 323, 222, 215,
	301, 216, 240, 217, 195, 309, 218, 197, 288, 326,
	0, 236, 297, 261, 198, 260, 289, 325, 324, 206,
	350, 356, 357, 361, 0, 362, 0, 0, 0, 370,
	375, 376, 377, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 355, 234, 191, 192, 338,
	550, 280, 0, 0, 564, 545, 547, 548, 551, 555,
	556, 557, 558, 559, 561, 563, 567, 305, 0, 0,
	0, 0, 0, 245, 286, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	336, 348, 365, 368, 0, 0, 0, 196, 367, 0,
	0, 0, 0, 0, 0, 0, 566, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 509, 270, 271, 272,
	273, 553, 0, 213, 366, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 233, 239, 374, 241, 212, 285, 235,
	345, 248, 0, 371, 0, 0, 0, 0, 0, 277,
	244, 310, 249, 255, 298, 344, 283, 303, 210, 335,
	311, 259, 0, 0, 575, 549, 574, 576, 577, 573,
	578, 579, 560, 471, 0, 513, 571, 570, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 253, 0, 294, 232, 538, 518,
	519, 520, 470, 521, 516, 517, 539, 511, 535, 536,
	494, 514, 522, 534, 523, 537, 540, 541, 580, 581,
	529, 582, 526, 542, 533, 532, 524, 512, 543, 544,
	497, 496, 527, 528, 515, 320, 507, 0, 351, 352,
	353, 373, 337, 0, 224, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 227, 0, 0, 252, 0, 0, 0,
	498, 0, 0, 312, 266, 0, 0, 0, 0, 554,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 0, 0, 492, 531, 530, 479, 488, 0,
	0, 208, 151, 480, 0, 487, 481, 485, 484, 482,
	483, 0, 546, 0, 0, 0, 0, 0, 0, 452,
	465, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 0, 0, 0,
	0, 508, 0, 464, 0, 0, 503, 489, 490, 0,
	0, 199, 317, 333, 209, 308, 346, 214, 315, 204,
	281, 304, 0, 0, 201, 331, 314, 263, 246, 247,
	200, 0, 299, 225, 238, 221, 279, 486, 506, 510,
	220, 568, 504, 341, 203, 0, 340, 278, 327, 332,
	264, 258, 202, 329, 262, 257, 250, 229, 569, 242,
	290, 256, 291, 243, 268, 267, 269, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 343,
	0, 0, 552, 0, 0, 0, 316, 0, 0, 251,
	0, 0, 0, 505, 0, 302, 284, 565, 453, 0,
	300, 254, 328, 292, 334, 318, 342, 296, 293, 194,
	319, 223, 265, 205, 207, 219, 226, 228, 230, 231,
	274, 275, 287, 307, 321, 322, 323, 222, 215, 301,
	216, 240, 217, 195, 309, 218, 197, 288, 326, 0,
	236, 297, 261, 198, 260, 289, 325, 324, 206, 350,
	356, 357, 361, 0, 362, 0, 0, 0, 370, 375,
	376, 377, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 355, 234, 191, 192, 338, 550,
	280, 0, 0, 564, 545, 547, 548, 551, 555, 556,
	557, 558, 559, 561, 563, 567, 305, 0, 0, 0,
	0, 0, 245, 286, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 336,
	348, 365, 368, 0, 0, 0, 196, 367, 0, 0,
	0, 0, 0, 0, 0, 566, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 509, 270, 271, 272, 273,
	553, 0, 213, 366, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 233, 239, 374, 241, 212, 285, 235, 345,
	248, 0, 371, 0, 0, 0, 0, 0, 277, 244,
	310, 249, 255, 298, 344, 283, 303, 210, 335, 311,
	259, 0, 0, 575, 549, 574, 576, 577, 573, 578,
	579, 560, 471, 0, 513, 571, 570, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 253, 0, 294, 232, 538, 518, 519,
	520, 470, 521, 516, 517, 539, 511, 535, 536, 494,
	514, 522, 534, 523, 537, 540, 541, 580, 581, 529,
	582, 526, 542, 533, 532, 524, 512, 543, 544, 497,
	496, 527, 528, 515, 320, 507, 0, 351, 352, 353,
	373, 337, 0, 224, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 468, 0,
	0, 0, 227, 0, 0, 252, 0, 0, 0, 498,
	0, 0, 312, 266, 0, 0, 0, 0, 554, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 492, 531, 530, 479, 488, 0, 0,
	208, 151, 480, 0, 487, 481, 485, 484, 482, 483,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 462, 463, 0, 0, 0, 0,
	508, 0, 464, 0, 0, 503, 489, 490, 0, 0,
	199, 317, 333, 209, 308, 346, 214, 315, 204, 281,
	304, 0, 0, 201, 331, 314, 263, 246, 247, 200,
	0, 299, 225, 238, 221, 279, 486, 506, 510, 220,
	568, 504, 341, 203, 0, 340, 278, 327, 332, 264,
	258, 202, 329, 262, 257, 250, 229, 569, 242, 290,
	256, 291, 243, 268, 267, 269, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 0, 0, 343, 0,
	0, 552, 0, 0, 0, 316, 0, 0, 251, 0,
	0, 0, 505, 0, 302, 284, 565, 0, 0, 300,
	254, 328, 292, 334, 318, 342, 296, 293, 194, 319,
	223, 265, 205, 207, 219, 226, 228, 230, 231, 274,
	275, 287, 307, 321, 322, 323, 222, 215, 301, 216,
	240, 217, 195, 309, 218, 197, 288, 326, 0, 236,
	297, 261, 198, 260, 289, 325, 324, 206, 350, 1167,
	1168, 361, 0, 362, 0, 0, 0, 370, 375, 376,
	377, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 355, 234, 191, 192, 338, 550, 280,
	0, 0, 564, 545, 547, 548, 551, 555, 556, 557,
	558, 559, 561, 563, 567, 305, 0, 0, 0, 0,
	0, 245, 286, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 336, 348,
	365, 368, 0, 0, 0, 196, 367, 0, 0, 0,
	0, 0, 0, 0, 566, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 509, 270, 271, 272, 273, 553,
	0, 213, 366, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 233, 239, 374, 241, 212, 285, 235, 345, 248,
	0, 371, 0, 0, 0, 0, 0, 277, 244, 310,
	249, 255, 298, 344, 283, 303, 210, 335, 311, 259,
	0, 0, 575, 549, 574, 576, 577, 573, 578, 579,
	560, 471, 0, 513, 571, 570, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 253, 0, 294, 232, 538, 518, 519, 520,
	470, 521, 516, 517, 539, 511, 535, 536, 494, 514,
	522, 534, 523, 537, 540, 541, 580, 581, 529, 582,
	526, 542, 533, 532, 524, 512, 543, 544, 497, 496,
	527, 528, 515, 320, 507, 0, 351, 352, 353, 373,
	337, 0, 224, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 498, 0,
	0, 312, 266, 0, 0, 0, 0, 554, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 531, 530, 479, 488, 0, 0, 208,
	151, 480, 0, 487, 481, 485, 484, 482, 483, 0,
	546, 0, 0, 0, 0, 0, 0, 452, 465, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 0, 0, 0, 0, 508,
	0, 464, 0, 0, 503, 489, 490, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 486, 506, 510, 220, 568,
	504, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 569, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 0, 0, 343, 0, 0,
	552, 0, 0, 0, 316, 0, 0, 251, 0, 0,
	0, 505, 0, 302, 284, 565, 453, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 219, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 355, 234, 191, 192, 338, 550, 280, 0,
	0, 564, 545, 547, 548, 551, 555, 556, 557, 558,
	559, 561, 563, 567, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 0, 0, 0,
	0, 0, 0, 566, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 509, 270, 271, 272, 273, 553, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 0, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 0,
	0, 575, 549, 574, 576, 577, 573, 578, 579, 560,
	471, 0, 513, 571, 570, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 253, 0, 294, 232, 538, 518, 519, 520, 470,
	521, 516, 517, 539, 511, 535, 536, 494, 514, 522,
	534, 523, 537, 540, 541, 580, 581, 529, 582, 526,
	542, 533, 532, 524, 512, 543, 544, 497, 496, 527,
	528, 515, 320, 507, 0, 351, 352, 353, 373, 337,
	0, 224, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	227, 0, 0, 252, 0, 0, 0, 498, 0, 0,
	312, 266, 0, 0, 0, 0, 554, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 0,
	0, 492, 531, 530, 479, 488, 0, 0, 208, 151,
	480, 0, 487, 481, 485, 484, 482, 483, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 463, 0, 0, 0, 0, 508, 0,
	464, 0, 0, 503, 489, 490, 0, 0, 199, 317,
	333, 209, 308, 346, 214, 315, 204, 281, 304, 0,
	0, 201, 331, 314, 263, 246, 247, 200, 0, 299,
	225, 238, 221, 279, 486, 506, 510, 220, 568, 504,
	341, 203, 0, 340, 278, 327, 332, 264, 258, 202,
	329, 262, 257, 250, 229, 569, 242, 290, 256, 291,
	243, 268, 267, 269, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 343, 0, 0, 552,
	0, 0, 0, 316, 0, 0, 251, 0, 0, 0,
	505, 0, 302, 284, 565, 0, 0, 300, 254, 328,
	292, 334, 318, 342, 296, 293, 194, 319, 223, 265,
	205, 207, 219, 226, 228, 230, 231, 274, 275, 287,
	307, 321, 322, 323, 222, 215, 301, 216, 240, 217,
	195, 309, 218, 197, 288, 326, 0, 236, 297, 261,
	198, 260, 289, 325, 324, 206, 350, 356, 357, 361,
	0, 362, 0, 0, 0, 370, 375, 376, 377, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	0, 355, 234, 191, 192, 338, 550, 280, 0, 0,
	564, 545, 547, 548, 551, 555, 556, 557, 558, 559,
	561, 563, 567, 305, 0, 0, 0, 0, 0, 245,
	286, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 336, 348, 365, 368,
	0, 0, 0, 196, 367, 0, 0, 0, 0, 0,
	0, 0, 566, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 509, 270, 271, 272, 273, 553, 0, 213,
	366, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 233,
	239, 374, 241, 212, 285, 235, 345, 248, 0, 371,
	0, 0, 0, 0, 0, 277, 244, 310, 249, 255,
	298, 344, 283, 303, 210, 335, 311, 259, 0, 0,
	575, 549, 574, 576, 577, 573, 578, 579, 560, 471,
	0, 513, 571, 570, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	253, 0, 294, 232, 538, 518, 519, 520, 470, 521,
	516, 517, 539, 511, 535, 536, 494, 514, 522, 534,
	523, 537, 540, 541, 580, 581, 529, 582, 526, 542,
	533, 532, 524, 512, 543, 544, 497, 496, 527, 528,
	515, 0, 0, 0, 351, 352, 353, 373, 337, 0,
	224, 142, 320, 39, 130, 109, 0, 0, 0, 0,
	0, 0, 0, 282, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	312, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 208, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 317,
	333, 209, 308, 346, 214, 315, 204, 281, 304, 0,
	0, 201, 331, 314, 263, 246, 247, 200, 0, 299,
	225, 238, 221, 279, 0, 330, 358, 220, 349, 0,
	341, 203, 0, 340, 278, 327, 332, 264, 258, 202,
	329, 262, 257, 250, 229, 372, 242, 290, 256, 291,
	243, 268, 267, 269, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 251, 0, 0, 0,
	359, 0, 302, 284, 0, 0, 0, 300, 254, 328,
	292, 334, 318, 342, 296, 293, 194, 319, 223, 265,
	205, 207, 219, 226, 228, 230, 231, 274, 275, 287,
	307, 321, 322, 323, 222, 215, 301, 216, 240, 217,
	195, 309, 218, 197, 288, 326, 0, 236, 297, 261,
	198, 260, 289, 325, 324, 206, 350, 356, 357, 361,
	0, 362, 0, 0, 0, 370, 375, 376, 377, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	0, 355, 234, 191, 192, 338, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 354, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 245,
	286, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 336, 348, 365, 368,
	0, 0, 0, 196, 367, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 363, 270, 271, 272, 273, 388, 390, 213,
	366, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 233,
	239, 374, 241, 212, 285, 235, 345, 248, 0, 371,
	0, 0, 0, 0, 0, 277, 244, 310, 249, 255,
	298, 344, 283, 303, 210, 335, 311, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 40, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	253, 110, 294, 232, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 0, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 320, 0, 0, 351, 352, 353, 373, 337, 0,
	224, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	911, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 312,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 208, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 899, 0, 0, 0, 0, 199, 317, 333,
	209, 308, 346, 214, 315, 204, 281, 304, 0, 0,
	1632, 1634, 1635, 1636, 1637, 1638, 1639, 0, 1643, 1640,
	1641, 1642, 279, 0, 1627, 1628, 1629, 1630, 897, 1613,
	1633, 0, 1614, 278, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1631, 290, 256, 291, 243,
	268, 267, 269, 922, 924, 926, 928, 931, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 251, 0, 0, 0, 1626,
	0, 302, 284, 0, 0, 0, 300, 254, 328, 292,
	334, 318, 342, 296, 293, 194, 319, 223, 265, 205,
	207, 219, 226, 228, 230, 231, 274, 275, 287, 307,
	321, 322, 323, 222, 215, 301, 216, 240, 217, 195,
	309, 218, 197, 288, 326, 0, 236, 297, 261, 198,
	260, 289, 325, 324, 206, 350, 356, 357, 361, 0,
	362, 0, 0, 0, 370, 375, 376, 377, 0, 0,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 0,
	355, 234, 191, 192, 338, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 354, 0, 0,
	0, 0, 305, 0, 0, 0, 0, 0, 245, 286,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 336, 348, 365, 368, 0,
	0, 0, 196, 367, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 363, 270, 271, 272, 273, 237, 0, 213, 366,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 233, 239,
	374, 241, 212, 285, 235, 345, 248, 0, 371, 0,
	0, 0, 0, 0, 277, 244, 310, 249, 255, 298,
	344, 283, 303, 210, 335, 311, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 921, 253,
	0, 294, 232, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 0, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	320, 0, 0, 351, 352, 353, 373, 337, 0, 224,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 312, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 208, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 1696, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 0, 330, 358, 220, 349, 0, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 372, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 343, 0, 0, 0, 1693, 0,
	1692, 316, 1694, 1697, 251, 0, 0, 0, 359, 0,
	302, 284, 0, 0, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 1698, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 354, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	363, 270, 271, 272, 273, 237, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 0,
	294, 232, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 0, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 320,
	0, 0, 351, 352, 353, 373, 337, 0, 224, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 0, 0, 0, 227, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 312, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 1468, 0, 0, 0, 208, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 801,
	802, 803, 800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 317, 333, 209, 308,
	346, 214, 315, 204, 281, 304, 0, 0, 201, 331,
	314, 263, 246, 247, 200, 0, 299, 225, 238, 221,
	279, 0, 330, 358, 220, 349, 0, 341, 203, 0,
	340, 278, 327, 332, 264, 258, 202, 329, 262, 257,
	250, 229, 372, 242, 290, 256, 291, 243, 268, 267,
	269, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 251, 0, 0, 0, 359, 0, 302,
	284, 0, 0, 0, 300, 254, 328, 292, 334, 318,
	342, 296, 293, 194, 319, 223, 265, 205, 207, 219,
	226, 228, 230, 231, 274, 275, 287, 307, 321, 322,
	323, 222, 215, 301, 216, 240, 217, 195, 309, 218,
	197, 288, 326, 0, 236, 297, 261, 198, 260, 289,
	325, 324, 206, 350, 356, 357, 361, 0, 362, 0,
	0, 0, 370, 375, 376, 377, 0, 0, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 355, 234,
	191, 192, 338, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 354, 0, 0, 0, 0,
	305, 0, 0, 0, 0, 0, 245, 286, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 336, 348, 365, 368, 0, 0, 0,
	196, 367, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 363,
	270, 271, 272, 273, 237, 0, 213, 366, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 233, 239, 374, 241,
	212, 285, 235, 345, 248, 0, 371, 0, 0, 0,
	0, 0, 277, 244, 310, 249, 255, 298, 344, 283,
	303, 210, 335, 311, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 253, 0, 294,
	232, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 0, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 320, 0,
	0, 351, 352, 353, 373, 337, 0, 224, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 683, 0, 252,
	0, 0, 0, 0, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 691, 692,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 665, 341, 203, 664, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	681, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 682, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 685, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 693, 688, 689, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 0, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 142, 320, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 98, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 1490, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 110, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 142, 320, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 98, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 1481, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 110, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 142, 320, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 98, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 110, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 320, 0, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 312, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 691, 692, 0,
	0, 0, 0, 208, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 317, 333, 209, 308, 346, 214,
	315, 204, 281, 304, 0, 0, 201, 331, 314, 263,
	246, 247, 200, 0, 299, 225, 238, 221, 279, 0,
	330, 358, 220, 349, 665, 341, 203, 664, 340, 278,
	327, 332, 264, 258, 202, 329, 262, 257, 250, 229,
	372, 242, 290, 256, 291, 243, 268, 267, 269, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 251, 0, 0, 0, 359, 0, 302, 284, 0,
	0, 0, 300, 254, 328, 292, 334, 318, 342, 296,
	293, 194, 319, 223, 265, 205, 207, 219, 226, 228,
	230, 231, 274, 275, 287, 307, 321, 322, 323, 222,
	215, 301, 216, 240, 217, 195, 309, 218, 197, 288,
	326, 0, 236, 297, 261, 198, 260, 289, 325, 324,
	206, 350, 356, 357, 361, 0, 362, 0, 0, 0,
	370, 375, 376, 377, 0, 0, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 355, 234, 191, 192,
	338, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 354, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 245, 286, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 336, 348, 365, 368, 0, 0, 0, 196, 367,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 363, 270, 271,
	272, 273, 237, 0, 213, 366, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 233, 239, 374, 241, 212, 285,
	235, 345, 248, 0, 371, 0, 0, 0, 0, 0,
	693, 688, 689, 249, 255, 298, 344, 283, 303, 210,
	335, 311, 690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 253, 0, 294, 232, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 0, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 320, 0, 0, 351,
	352, 353, 373, 337, 0, 224, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 312, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 208, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 317, 333, 209, 308, 346, 214, 315,
	204, 281, 304, 0, 0, 201, 331, 314, 263, 246,
	247, 200, 0, 299, 225, 238, 221, 279, 0, 330,
	358, 220, 349, 0, 341, 203, 0, 340, 278, 327,
	332, 264, 258, 202, 329, 262, 257, 250, 229, 372,
	242, 290, 256, 291, 243, 268, 267, 269, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 2017, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	251, 0, 0, 0, 359, 0, 302, 284, 0, 0,
	0, 300, 254, 328, 292, 334, 318, 342, 296, 293,
	194, 319, 223, 265, 205, 207, 219, 226, 228, 230,
	231, 274, 275, 287, 307, 321, 322, 323, 222, 215,
	301, 216, 240, 217, 195, 309, 218, 197, 288, 326,
	0, 236, 297, 261, 198, 260, 289, 325, 324, 206,
	350, 356, 357, 361, 0, 362, 0, 0, 0, 370,
	375, 376, 377, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 355, 234, 191, 192, 338,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 354, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 245, 286, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	336, 348, 365, 368, 0, 0, 0, 196, 367, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 363, 270, 271, 272,
	273, 237, 0, 213, 366, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 233, 239, 374, 241, 212, 285, 235,
	345, 248, 0, 371, 0, 0, 0, 0, 0, 277,
	244, 310, 249, 255, 298, 344, 283, 303, 210, 335,
	311, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 253, 0, 294, 232, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	0, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 320, 0, 0, 351, 352,
	353, 373, 337, 0, 224, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 1060, 0, 252, 0, 0, 0,
	0, 0, 0, 312, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 1058, 0, 0,
	0, 208, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	0, 199, 317, 333, 209, 308, 346, 214, 315, 204,
	281, 304, 0, 0, 201, 331, 314, 263, 246, 247,
	200, 0, 299, 225, 238, 221, 279, 0, 330, 358,
	220, 349, 0, 341, 203, 0, 340, 278, 327, 332,
	264, 258, 202, 329, 262, 257, 250, 229, 372, 242,
	290, 256, 291, 243, 268, 267, 269, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 251,
	0, 0, 0, 359, 0, 302, 284, 0, 0, 0,
	300, 254, 328, 292, 334, 318, 342, 296, 293, 194,
	319, 223, 265, 205, 207, 219, 226, 228, 230, 231,
	274, 275, 287, 307, 321, 322, 323, 222, 215, 301,
	216, 240, 217, 195, 309, 218, 197, 288, 326, 0,
	236, 297, 261, 198, 260, 289, 325, 324, 206, 350,
	356, 357, 361, 0, 362, 0, 0, 0, 370, 375,
	376, 377, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 355, 234, 191, 192, 338, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 354, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 245, 286, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 336,
	348, 365, 368, 0, 0, 0, 196, 367, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 363, 270, 271, 272, 273,
	237, 0, 213, 366, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 233, 239, 374, 241, 212, 285, 235, 345,
	248, 0, 371, 0, 0, 0, 0, 0, 277, 244,
	310, 249, 255, 298, 344, 283, 303, 210, 335, 311,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 253, 0, 294, 232, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 0,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 320, 0, 0, 351, 352, 353,
	373, 337, 0, 224, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 1054, 0, 252, 0, 0, 0, 0,
	0, 0, 312, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 1058, 0, 0, 0,
	208, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1056, 0, 0, 0, 0,
	199, 317, 333, 209, 308, 346, 214, 315, 204, 281,
	304, 0, 0, 201, 331, 314, 263, 246, 247, 200,
	0, 299, 225, 238, 221, 279, 0, 330, 358, 220,
	349, 0, 341, 203, 0, 340, 278, 327, 332, 264,
	258, 202, 329, 262, 257, 250, 229, 372, 242, 290,
	256, 291, 243, 268, 267, 269, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 251, 0,
	0, 0, 359, 0, 302, 284, 0, 0, 0, 300,
	254, 328, 292, 334, 318, 342, 296, 293, 194, 319,
	223, 265, 205, 207, 219, 226, 228, 230, 231, 274,
	275, 287, 307, 321, 322, 323, 222, 215, 301, 216,
	240, 217, 195, 309, 218, 197, 288, 326, 0, 236,
	297, 261, 198, 260, 289, 325, 324, 206, 350, 356,
	357, 361, 0, 362, 0, 0, 0, 370, 375, 376,
	377, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 355, 234, 191, 192, 338, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	354, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 245, 286, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 336, 348,
	365, 368, 0, 0, 0, 196, 367, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 363, 270, 271, 272, 273, 237,
	0, 213, 366, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 233, 239, 374, 241, 212, 285, 235, 345, 248,
	0, 371, 0, 0, 0, 0, 0, 277, 244, 310,
	249, 255, 298, 344, 283, 303, 210, 335, 311, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 253, 0, 294, 232, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 0, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 320, 0, 0, 351, 352, 353, 373,
	337, 0, 224, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 312, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2600, 0, 150, 531, 0, 0, 0, 0, 0, 208,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 0, 330, 358, 220, 349,
	0, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 372, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 251, 0, 0,
	0, 359, 0, 302, 284, 0, 0, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 219, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 355, 234, 191, 192, 338, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 354,
	0, 0, 0, 0, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 363, 270, 271, 272, 273, 237, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 0, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 253, 0, 294, 232, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 0, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 320, 0, 0, 351, 352, 353, 373, 337,
	0, 224, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	312, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 1058, 0, 0, 0, 208, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2343, 0, 0, 0, 0, 199, 317,
	333, 209, 308, 346, 214, 315, 204, 281, 304, 0,
	0, 201, 331, 314, 263, 246, 247, 200, 0, 299,
	225, 238, 221, 279, 0, 330, 358, 220, 349, 0,
	341, 203, 0, 340, 278, 327, 332, 264, 258, 202,
	329, 262, 257, 250, 229, 372, 242, 290, 256, 291,
	243, 268, 267, 269, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 251, 0, 0, 0,
	359, 0, 302, 284, 0, 0, 0, 300, 254, 328,
	292, 334, 318, 342, 296, 293, 194, 319, 223, 265,
	205, 207, 219, 226, 228, 230, 231, 274, 275, 287,
	307, 321, 322, 323, 222, 215, 301, 216, 240, 217,
	195, 309, 218, 197, 288, 326, 0, 236, 297, 261,
	198, 260, 289, 325, 324, 206, 350, 356, 357, 361,
	0, 362, 0, 0, 0, 370, 375, 376, 377, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	0, 355, 234, 191, 192, 338, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 354, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 245,
	286, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 336, 348, 365, 368,
	0, 0, 0, 196, 367, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 363, 270, 271, 272, 273, 237, 0, 213,
	366, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 233,
	239, 374, 241, 212, 285, 235, 345, 248, 0, 371,
	0, 0, 0, 0, 0, 277, 244, 310, 249, 255,
	298, 344, 283, 303, 210, 335, 311, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	253, 0, 294, 232, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 0, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 320, 0, 0, 351, 352, 353, 373, 337, 0,
	224, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 312,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 1058, 0, 0, 0, 208, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 199, 317, 333,
	209, 308, 346, 214, 315, 204, 281, 304, 0, 0,
	201, 331, 314, 263, 246, 247, 200, 0, 299, 225,
	238, 221, 279, 0, 330, 358, 220, 349, 0, 341,
	203, 0, 340, 278, 327, 332, 264, 258, 202, 329,
	262, 257, 250, 229, 372, 242, 290, 256, 291, 243,
	268, 267, 269, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 251, 0, 0, 0, 359,
	0, 302, 284, 0, 0, 0, 300, 254, 328, 292,
	334, 318, 342, 296, 293, 194, 319, 223, 265, 205,
	207, 219, 226, 228, 230, 231, 274, 275, 287, 307,
	321, 322, 323, 222, 215, 301, 216, 240, 217, 195,
	309, 218, 197, 288, 326, 0, 236, 297, 261, 198,
	260, 289, 325, 324, 206, 350, 356, 357, 361, 0,
	362, 0, 0, 0, 370, 375, 376, 377, 0, 0,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 0,
	355, 234, 191, 192, 338, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 354, 0, 0,
	0, 0, 305, 0, 0, 0, 0, 0, 245, 286,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 336, 348, 365, 368, 0,
	0, 0, 196, 367, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 363, 270, 271, 272, 273, 237, 0, 213, 366,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 233, 239,
	374, 241, 212, 285, 235, 345, 248, 0, 371, 0,
	0, 0, 0, 0, 277, 244, 310, 249, 255, 298,
	344, 283, 303, 210, 335, 311, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 253,
	0, 294, 232, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 0, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	320, 0, 0, 351, 352, 353, 373, 337, 0, 224,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 227, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 312, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 1760, 0, 0, 0, 208, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 0, 330, 358, 220, 349, 0, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 372, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 251, 0, 0, 0, 359, 0,
	302, 284, 0, 0, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 0, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 354, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	363, 270, 271, 272, 273, 237, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 0,
	294, 232, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 0, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 320,
	0, 0, 351, 352, 353, 373, 337, 0, 224, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 1777, 0,
	252, 0, 0, 0, 0, 0, 0, 312, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 1058, 0, 0, 0, 208, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 317, 333, 209, 308,
	346, 214, 315, 204, 281, 304, 0, 0, 201, 331,
	314, 263, 246, 247, 200, 0, 299, 225, 238, 221,
	279, 0, 330, 358, 220, 349, 0, 341, 203, 0,
	340, 278, 327, 332, 264, 258, 202, 329, 262, 257,
	250, 229, 372, 242, 290, 256, 291, 243, 268, 267,
	269, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 251, 0, 0, 0, 359, 0, 302,
	284, 0, 0, 0, 300, 254, 328, 292, 334, 318,
	342, 296, 293, 194, 319, 223, 265, 205, 207, 219,
	226, 228, 230, 231, 274, 275, 287, 307, 321, 322,
	323, 222, 215, 301, 216, 240, 217, 195, 309, 218,
	197, 288, 326, 0, 236, 297, 261, 198, 260, 289,
	325, 324, 206, 350, 356, 357, 361, 0, 362, 0,
	0, 0, 370, 375, 376, 377, 0, 0, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 355, 234,
	191, 192, 338, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 354, 0, 0, 0, 0,
	305, 0, 0, 0, 0, 0, 245, 286, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 336, 348, 365, 368, 0, 0, 0,
	196, 367, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 363,
	270, 271, 272, 273, 237, 0, 213, 366, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 233, 239, 374, 241,
	212, 285, 235, 345, 248, 0, 371, 0, 0, 0,
	0, 0, 277, 244, 310, 249, 255, 298, 344, 283,
	303, 210, 335, 311, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 253, 0, 294,
	232, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 0, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 320, 0,
	0, 351, 352, 353, 373, 337, 0, 224, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 0, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 320, 0, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 312, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 531, 0, 0,
	0, 0, 0, 208, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 317, 333, 209, 308, 346, 214,
	315, 204, 281, 304, 0, 0, 201, 331, 314, 263,
	246, 247, 200, 0, 299, 225, 238, 221, 279, 0,
	330, 358, 220, 349, 0, 341, 203, 0, 340, 278,
	327, 332, 264, 258, 202, 329, 262, 257, 250, 229,
	372, 242, 290, 256, 291, 243, 268, 267, 269, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 251, 0, 0, 0, 359, 0, 302, 284, 0,
	0, 0, 300, 254, 328, 292, 334, 318, 342, 296,
	293, 194, 319, 223, 265, 205, 207, 219, 226, 228,
	230, 231, 274, 275, 287, 307, 321, 322, 323, 222,
	215, 301, 216, 240, 217, 195, 309, 218, 197, 288,
	326, 0, 236, 297, 261, 198, 260, 289, 325, 324,
	206, 350, 356, 357, 361, 0, 362, 0, 0, 0,
	370, 375, 376, 377, 0, 0, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 355, 234, 191, 192,
	338, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 354, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 245, 286, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 336, 348, 365, 368, 0, 0, 0, 196, 367,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 363, 270, 271,
	272, 273, 237, 0, 213, 366, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 233, 239, 374, 241, 212, 285,
	235, 345, 248, 0, 371, 0, 0, 0, 0, 0,
	277, 244, 310, 249, 255, 298, 344, 283, 303, 210,
	335, 311, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 253, 0, 294, 232, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 0, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 320, 0, 0, 351,
	352, 353, 373, 337, 0, 224, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 312, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2615, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 208, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 317, 333, 209, 308, 346, 214, 315,
	204, 281, 304, 0, 0, 201, 331, 314, 263, 246,
	247, 200, 0, 299, 225, 238, 221, 279, 0, 330,
	358, 220, 349, 0, 341, 203, 0, 340, 278, 327,
	332, 264, 258, 202, 329, 262, 257, 250, 229, 372,
	242, 290, 256, 291, 243, 268, 267, 269, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	251, 0, 0, 0, 359, 0, 302, 284, 0, 0,
	0, 300, 254, 328, 292, 334, 318, 342, 296, 293,
	194, 319, 223, 265, 205, 207, 219, 226, 228, 230,
	231, 274, 275, 287, 307, 321, 322, 323, 222, 215,
	301, 216, 240, 217, 195, 309, 218, 197, 288, 326,
	0, 236, 297, 261, 198, 260, 289, 325, 324, 206,
	350, 356, 357, 361, 0, 362, 0, 0, 0, 370,
	375, 376, 377, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 355, 234, 191, 192, 338,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 354, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 245, 286, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	336, 348, 365, 368, 0, 0, 0, 196, 367, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 363, 270, 271, 272,
	273, 237, 0, 213, 366, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 233, 239, 374, 241, 212, 285, 235,
	345, 248, 0, 371, 0, 0, 0, 0, 0, 277,
	244, 310, 249, 255, 298, 344, 283, 303, 210, 335,
	311, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 253, 0, 294, 232, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	0, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 320, 0, 0, 351, 352,
	353, 373, 337, 0, 224, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 312, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 208, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 317, 333, 209, 308, 346, 214, 315, 204,
	281, 304, 0, 0, 201, 331, 314, 263, 246, 247,
	200, 0, 299, 225, 238, 221, 279, 0, 330, 358,
	220, 349, 0, 341, 203, 0, 340, 278, 327, 332,
	264, 258, 202, 329, 262, 257, 250, 229, 372, 242,
	290, 256, 291, 243, 268, 267, 269, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 2552, 0, 0, 316, 0, 0, 251,
	0, 0, 0, 359, 0, 302, 284, 0, 0, 0,
	300, 254, 328, 292, 334, 318, 342, 296, 293, 194,
	319, 223, 265, 205, 207, 219, 226, 228, 230, 231,
	274, 275, 287, 307, 321, 322, 323, 222, 215, 301,
	216, 240, 217, 195, 309, 218, 197, 288, 326, 0,
	236, 297, 261, 198, 260, 289, 325, 324, 206, 350,
	356, 357, 361, 0, 362, 0, 0, 0, 370, 375,
	376, 377, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 355, 234, 191, 192, 338, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 354, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 245, 286, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 336,
	348, 365, 368, 0, 0, 0, 196, 367, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 363, 270, 271, 272, 273,
	237, 0, 213, 366, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 233, 239, 374, 241, 212, 285, 235, 345,
	248, 0, 371, 0, 0, 0, 0, 0, 277, 244,
	310, 249, 255, 298, 344, 283, 303, 210, 335, 311,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 253, 0, 294, 232, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 0,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 320, 0, 0, 351, 352, 353,
	373, 337, 0, 224, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 312, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2414, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	208, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 317, 333, 209, 308, 346, 214, 315, 204, 281,
	304, 0, 0, 201, 331, 314, 263, 246, 247, 200,
	0, 299, 225, 238, 221, 279, 0, 330, 358, 220,
	349, 0, 341, 203, 0, 340, 278, 327, 332, 264,
	258, 202, 329, 262, 257, 250, 229, 372, 242, 290,
	256, 291, 243, 268, 267, 269, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 251, 0,
	0, 0, 359, 0, 302, 284, 0, 0, 0, 300,
	254, 328, 292, 334, 318, 342, 296, 293, 194, 319,
	223, 265, 205, 207, 219, 226, 228, 230, 231, 274,
	275, 287, 307, 321, 322, 323, 222, 215, 301, 216,
	240, 217, 195, 309, 218, 197, 288, 326, 0, 236,
	297, 261, 198, 260, 289, 325, 324, 206, 350, 356,
	357, 361, 0, 362, 0, 0, 0, 370, 375, 376,
	377, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 355, 234, 191, 192, 338, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	354, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 245, 286, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 336, 348,
	365, 368, 0, 0, 0, 196, 367, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 363, 270, 271, 272, 273, 237,
	0, 213, 366, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 233, 239, 374, 241, 212, 285, 235, 345, 248,
	0, 371, 0, 0, 0, 0, 0, 277, 244, 310,
	249, 255, 298, 344, 283, 303, 210, 335, 311, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 253, 0, 294, 232, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 0, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 320, 0, 0, 351, 352, 353, 373,
	337, 0, 224, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 312, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 208,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 0, 330, 358, 220, 349,
	0, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 372, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 2451, 0, 0, 316, 0, 0, 251, 0, 0,
	0, 359, 0, 302, 284, 0, 0, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 219, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 355, 234, 191, 192, 338, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 354,
	0, 0, 0, 0, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 363, 270, 271, 272, 273, 237, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 0, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 253, 0, 294, 232, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 0, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 320, 0, 0, 351, 352, 353, 373, 337,
	0, 224, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	312, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 208, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 317,
	333, 209, 308, 346, 214, 315, 204, 281, 304, 0,
	0, 201, 331, 314, 263, 246, 247, 200, 0, 299,
	225, 238, 221, 279, 0, 330, 358, 220, 349, 0,
	341, 203, 0, 340, 278, 327, 332, 264, 258, 202,
	329, 262, 257, 250, 229, 372, 242, 290, 256, 291,
	243, 268, 267, 269, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 316, 0, 0, 251, 0, 0, 0,
	359, 0, 302, 284, 0, 0, 0, 300, 254, 328,
	292, 334, 318, 342, 296, 293, 194, 319, 223, 265,
	205, 207, 219, 226, 228, 230, 231, 274, 275, 287,
	307, 321, 322, 323, 222, 215, 301, 216, 240, 217,
	195, 309, 218, 197, 288, 326, 0, 236, 297, 261,
	198, 260, 289, 325, 324, 206, 350, 356, 357, 361,
	0, 362, 0, 0, 0, 370, 375, 376, 377, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	0, 355, 234, 191, 192, 338, 0, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 354, 0,
	0, 0, 0, 305, 0, 0, 0, 0, 0, 245,
	286, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 336, 348, 365, 368,
	0, 0, 0, 196, 367, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 363, 270, 271, 272, 273, 237, 0, 213,
	366, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 233,
	239, 374, 241, 212, 285, 235, 345, 248, 0, 371,
	0, 0, 0, 0, 0, 277, 244, 310, 249, 255,
	298, 344, 283, 303, 210, 335, 311, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	253, 0, 294, 232, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 0, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 320, 0, 0, 351, 352, 353, 373, 337, 0,
	224, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 312,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 208, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 317, 333,
	209, 308, 346, 214, 315, 204, 281, 304, 0, 0,
	201, 331, 314, 263, 246, 247, 200, 0, 299, 225,
	238, 221, 279, 0, 330, 358, 220, 349, 0, 341,
	203, 0, 340, 278, 327, 332, 264, 258, 202, 329,
	262, 257, 250, 229, 372, 242, 290, 256, 291, 243,
	268, 267, 269, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 316, 0, 0, 251, 0, 0, 0, 359,
	0, 302, 284, 0, 0, 0, 300, 254, 328, 292,
	334, 318, 342, 296, 293, 194, 319, 223, 265, 205,
	207, 219, 226, 228, 230, 231, 274, 275, 287, 307,
	321, 322, 323, 222, 215, 301, 216, 240, 217, 195,
	309, 218, 197, 288, 326, 0, 236, 297, 261, 198,
	260, 289, 325, 324, 206, 350, 356, 357, 361, 0,
	362, 0, 0, 0, 370, 375, 376, 377, 0, 0,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 0,
	355, 234, 191, 192, 338, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 354, 0, 0,
	0, 0, 305, 0, 0, 0, 0, 0, 245, 286,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 336, 348, 365, 368, 0,
	0, 0, 196, 367, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 363, 270, 271, 272, 273, 237, 0, 213, 366,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 233, 239,
	374, 241, 212, 285, 235, 345, 248, 0, 371, 0,
	0, 0, 0, 0, 277, 244, 310, 249, 255, 298,
	344, 283, 303, 210, 335, 311, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 253,
	0, 294, 232, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 0, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	320, 0, 0, 351, 352, 353, 373, 337, 0, 224,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 312, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 208, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 0, 330, 358, 220, 349, 0, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 372, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 251, 0, 0, 0, 359, 0,
	302, 284, 0, 0, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 0, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 354, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	363, 270, 271, 272, 273, 237, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 0,
	294, 232, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 0, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 320,
	0, 0, 351, 352, 353, 373, 337, 0, 224, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 312, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 2153, 0, 0, 0, 208, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 317, 333, 209, 308,
	346, 214, 315, 204, 281, 304, 0, 0, 201, 331,
	314, 263, 246, 247, 200, 0, 299, 225, 238, 221,
	279, 0, 330, 358, 220, 349, 0, 341, 203, 0,
	340, 278, 327, 332, 264, 258, 202, 329, 262, 257,
	250, 229, 372, 242, 290, 256, 291, 243, 268, 267,
	269, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 251, 0, 0, 0, 359, 0, 302,
	284, 0, 0, 0, 300, 254, 328, 292, 334, 318,
	342, 296, 293, 194, 319, 223, 265, 205, 207, 219,
	226, 228, 230, 231, 274, 275, 287, 307, 321, 322,
	323, 222, 215, 301, 216, 240, 217, 195, 309, 218,
	197, 288, 326, 0, 236, 297, 261, 198, 260, 289,
	325, 324, 206, 350, 356, 357, 361, 0, 362, 0,
	0, 0, 370, 375, 376, 377, 0, 0, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 355, 234,
	191, 192, 338, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 354, 0, 0, 0, 0,
	305, 0, 0, 0, 0, 0, 245, 286, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 336, 348, 365, 368, 0, 0, 0,
	196, 367, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 363,
	270, 271, 272, 273, 237, 0, 213, 366, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 233, 239, 374, 241,
	212, 285, 235, 345, 248, 0, 371, 0, 0, 0,
	0, 0, 277, 244, 310, 249, 255, 298, 344, 283,
	303, 210, 335, 311, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 253, 0, 294,
	232, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 0, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 320, 0,
	0, 351, 352, 353, 373, 337, 0, 224, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 253, 0, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 320, 0, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 312, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 1058,
	0, 0, 0, 208, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 317, 333, 209, 308, 346, 214,
	315, 204, 281, 304, 0, 0, 201, 331, 314, 263,
	246, 247, 200, 0, 299, 225, 238, 221, 279, 0,
	330, 358, 220, 349, 0, 341, 203, 0, 340, 278,
	327, 332, 264, 258, 202, 329, 262, 257, 250, 229,
	372, 242, 290, 256, 291, 243, 268, 267, 269, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 251, 0, 0, 0, 359, 0, 302, 284, 0,
	0, 0, 300, 254, 328, 292, 334, 318, 342, 296,
	293, 194, 319, 223, 265, 205, 207, 219, 226, 228,
	230, 231, 274, 275, 287, 307, 321, 322, 323, 222,
	215, 301, 216, 240, 217, 195, 309, 218, 197, 288,
	326, 0, 236, 297, 261, 198, 260, 289, 325, 324,
	206, 350, 356, 357, 361, 0, 362, 0, 0, 0,
	370, 375, 376, 377, 0, 0, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 355, 234, 191, 192,
	338, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 354, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 245, 286, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 336, 348, 365, 368, 0, 0, 0, 196, 367,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 363, 270, 271,
	272, 273, 237, 0, 213, 366, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 233, 239, 374, 241, 212, 285,
	235, 345, 248, 0, 371, 0, 0, 0, 0, 0,
	277, 244, 310, 249, 255, 298, 344, 283, 303, 210,
	335, 311, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 253, 0, 294, 232, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 0, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 320, 0, 0, 351,
	352, 353, 373, 337, 0, 224, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 312, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 1760, 0,
	0, 0, 208, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 317, 333, 209, 308, 346, 214, 315,
	204, 281, 304, 0, 0, 201, 331, 314, 263, 246,
	247, 200, 0, 299, 225, 238, 221, 279, 0, 330,
	358, 220, 349, 0, 341, 203, 0, 340, 278, 327,
	332, 264, 258, 202, 329, 262, 257, 250, 229, 372,
	242, 290, 256, 291, 243, 268, 267, 269, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	251, 0, 0, 0, 359, 0, 302, 284, 0, 0,
	0, 300, 254, 328, 292, 334, 318, 342, 296, 293,
	194, 319, 223, 265, 205, 207, 219, 226, 228, 230,
	231, 274, 275, 287, 307, 321, 322, 323, 222, 215,
	301, 216, 240, 217, 195, 309, 218, 197, 288, 326,
	0, 236, 297, 261, 198, 260, 289, 325, 324, 206,
	350, 356, 357, 361, 0, 362, 0, 0, 0, 370,
	375, 376, 377, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 355, 234, 191, 192, 338,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 354, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 245, 286, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	336, 348, 365, 368, 0, 0, 0, 196, 367, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 363, 270, 271, 272,
	273, 237, 0, 213, 366, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 233, 239, 374, 241, 212, 285, 235,
	345, 248, 0, 371, 0, 0, 0, 0, 0, 277,
	244, 310, 249, 255, 298, 344, 283, 303, 210, 335,
	311, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 253, 0, 294, 232, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	0, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 320, 0, 0, 351, 352,
	353, 373, 337, 0, 224, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 312, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 208, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 317, 333, 209, 308, 346, 214, 315, 204,
	281, 304, 0, 0, 201, 331, 314, 263, 246, 247,
	200, 0, 299, 225, 238, 221, 279, 0, 330, 358,
	220, 349, 0, 341, 203, 0, 340, 278, 327, 332,
	264, 258, 202, 329, 262, 257, 250, 229, 372, 242,
	290, 256, 291, 243, 268, 267, 269, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 251,
	0, 0, 0, 359, 0, 302, 284, 0, 0, 0,
	300, 254, 328, 292, 334, 318, 342, 296, 293, 194,
	319, 223, 265, 205, 207, 219, 226, 228, 230, 231,
	274, 275, 287, 307, 321, 322, 323, 222, 215, 301,
	216, 240, 217, 195, 309, 218, 197, 288, 326, 0,
	236, 297, 261, 198, 260, 289, 325, 324, 206, 350,
	356, 357, 361, 0, 362, 0, 0, 0, 370, 375,
	376, 377, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 355, 234, 191, 192, 338, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 354, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 245, 286, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 336,
	348, 365, 368, 0, 0, 0, 196, 367, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 363, 270, 271, 272, 273,
	237, 0, 213, 366, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 233, 239, 374, 241, 212, 285, 235, 345,
	248, 0, 371, 0, 0, 0, 0, 0, 277, 244,
	310, 249, 255, 298, 344, 283, 303, 210, 335, 311,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 253, 0, 294, 232, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 0,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 320, 0, 0, 351, 352, 353,
	373, 337, 0, 224, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 312, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	208, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 317, 333, 209, 308, 346, 214, 315, 204, 281,
	304, 0, 0, 201, 331, 314, 263, 246, 247, 200,
	0, 299, 225, 238, 221, 279, 0, 330, 358, 220,
	349, 0, 341, 203, 0, 340, 278, 327, 332, 264,
	258, 202, 329, 262, 257, 250, 229, 372, 242, 290,
	256, 291, 243, 268, 267, 269, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 251, 0,
	0, 0, 359, 0, 302, 284, 0, 0, 0, 300,
	254, 328, 292, 334, 318, 342, 296, 293, 194, 319,
	223, 265, 205, 207, 219, 226, 228, 230, 231, 274,
	275, 287, 307, 321, 322, 323, 222, 215, 301, 216,
	240, 217, 195, 309, 218, 197, 288, 326, 0, 236,
	297, 261, 198, 260, 289, 325, 324, 206, 350, 356,
	357, 361, 0, 362, 0, 0, 0, 370, 375, 376,
	377, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 355, 234, 191, 192, 338, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	354, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 245, 286, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 336, 348,
	365, 368, 0, 0, 0, 196, 367, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 363, 270, 271, 272, 273, 237,
	0, 213, 366, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 233, 239, 374, 241, 212, 285, 235, 345, 248,
	0, 371, 0, 0, 0, 0, 0, 277, 244, 310,
	249, 255, 298, 344, 283, 303, 210, 335, 311, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 253, 0, 294, 232, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 0, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 320, 0, 0, 351, 352, 353, 373,
	337, 0, 224, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 312, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 1789, 0, 0, 0, 208,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 0, 330, 358, 220, 349,
	0, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 372, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 251, 0, 0,
	0, 359, 0, 302, 284, 0, 0, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 219, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 0, 355, 234, 191, 192, 338, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 354,
	0, 0, 0, 0, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 363, 270, 271, 272, 273, 237, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 0, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 253, 0, 294, 232, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 0, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 0, 0, 0, 351, 352, 353, 373, 337,
	320, 224, 0, 0, 1661, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 312, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 208, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 317, 333, 209,
	308, 346, 214, 315, 204, 281, 304, 0, 0, 201,
	331, 314, 263, 246, 247, 200, 0, 299, 225, 238,
	221, 279, 0, 330, 358, 220, 349, 0, 341, 203,
	0, 340, 278, 327, 332, 264, 258, 202, 329, 262,
	257, 250, 229, 372, 242, 290, 256, 291, 243, 268,
	267, 269, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 316, 0, 0, 251, 0, 0, 0, 359, 0,
	302, 284, 0, 0, 0, 300, 254, 328, 292, 334,
	318, 342, 296, 293, 194, 319, 223, 265, 205, 207,
	219, 226, 228, 230, 231, 274, 275, 287, 307, 321,
	322, 323, 222, 215, 301, 216, 240, 217, 195, 309,
	218, 197, 288, 326, 0, 236, 297, 261, 198, 260,
	289, 325, 324, 206, 350, 356, 357, 361, 0, 362,
	0, 0, 0, 370, 375, 376, 377, 0, 0, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 0, 355,
	234, 191, 192, 338, 0, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 354, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 245, 286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 336, 348, 365, 368, 0, 0,
	0, 196, 367, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	363, 270, 271, 272, 273, 237, 0, 213, 366, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 233, 239, 374,
	241, 212, 285, 235, 345, 248, 0, 371, 0, 0,
	0, 0, 0, 277, 244, 310, 249, 255, 298, 344,
	283, 303, 210, 335, 311, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 253, 0,
	294, 232, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 0, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 320,
	0, 0, 351, 352, 353, 373, 337, 0, 224, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	252, 0, 0, 0, 0, 0, 0, 312, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 1058, 0, 0, 0, 208, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 317, 333, 209, 308,
	346, 214, 315, 204, 281, 304, 0, 0, 201, 331,
	314, 263, 246, 247, 200, 0, 299, 225, 238, 221,
	279, 0, 330, 358, 220, 349, 0, 341, 203, 0,
	340, 278, 327, 332, 264, 258, 202, 329, 262, 257,
	250, 229, 372, 242, 290, 256, 291, 243, 268, 267,
	269, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	316, 0, 0, 251, 0, 0, 0, 359, 0, 302,
	284, 0, 0, 0, 300, 254, 328, 292, 334, 318,
	342, 1344, 293, 194, 319, 223, 265, 205, 207, 219,
	226, 228, 230, 231, 274, 275, 287, 307, 321, 322,
	323, 222, 215, 301, 216, 240, 217, 195, 309, 218,
	197, 288, 326, 0, 236, 297, 261, 198, 260, 289,
	325, 324, 206, 350, 356, 357, 361, 0, 362, 0,
	0, 0, 370, 375, 376, 377, 0, 0, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 0, 355, 234,
	191, 192, 338, 0, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 354, 0, 0, 0, 0,
	305, 0, 0, 0, 0, 0, 245, 286, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 336, 348, 365, 368, 0, 0, 0,
	196, 367, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 363,
	270, 271, 272, 273, 237, 0, 213, 366, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 233, 239, 374, 241,
	212, 285, 235, 345, 248, 0, 371, 0, 0, 0,
	0, 0, 277, 244, 310, 249, 255, 298, 344, 283,
	303, 210, 335, 311, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 253, 0, 294,
	232, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 0, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 320, 0,
	0, 351, 352, 353, 373, 337, 0, 224, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 312, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 208, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 317, 333, 209, 308, 346,
	214, 315, 204, 281, 304, 0, 0, 201, 331, 314,
	263, 246, 247, 200, 0, 299, 225, 238, 221, 279,
	0, 330, 358, 220, 349, 0, 341, 203, 0, 340,
	278, 327, 332, 264, 258, 202, 329, 262, 257, 250,
	229, 372, 242, 290, 256, 291, 243, 268, 267, 269,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 316,
	0, 0, 251, 0, 0, 0, 359, 0, 302, 284,
	0, 0, 0, 300, 254, 328, 292, 334, 318, 342,
	296, 293, 194, 319, 223, 265, 205, 207, 219, 226,
	228, 230, 231, 274, 275, 287, 307, 321, 322, 323,
	222, 215, 301, 216, 240, 217, 195, 309, 218, 197,
	288, 326, 0, 236, 297, 261, 198, 260, 289, 325,
	324, 206, 350, 356, 357, 361, 0, 362, 0, 0,
	0, 370, 375, 376, 377, 0, 0, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 0, 355, 234, 191,
	192, 338, 0, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 354, 0, 0, 0, 0, 305,
	0, 0, 0, 0, 0, 245, 286, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 336, 348, 365, 368, 0, 0, 0, 196,
	367, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 363, 270,
	271, 272, 273, 237, 0, 213, 366, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 233, 239, 374, 241, 212,
	285, 235, 345, 248, 0, 371, 0, 0, 0, 0,
	0, 277, 244, 310, 249, 255, 298, 344, 283, 303,
	210, 335, 311, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 193, 0, 253, 0, 294, 232,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 0, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 320, 0, 0,
	351, 352, 353, 373, 337, 0, 224, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 252, 0,
	0, 0, 0, 0, 0, 312, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 208, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 317, 333, 209, 308, 346, 214,
	315, 204, 281, 304, 0, 0, 201, 331, 314, 263,
	246, 247, 200, 0, 299, 225, 238, 221, 279, 0,
	330, 358, 220, 349, 0, 341, 203, 0, 340, 278,
	327, 332, 264, 258, 202, 329, 262, 257, 250, 229,
	372, 242, 290, 256, 291, 243, 268, 267, 269, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 316, 0,
	0, 251, 0, 0, 0, 359, 0, 302, 284, 0,
	0, 0, 300, 254, 328, 292, 334, 318, 342, 406,
	293, 194, 319, 223, 265, 205, 207, 219, 226, 228,
	230, 231, 274, 275, 287, 307, 321, 322, 323, 222,
	215, 301, 216, 240, 217, 195, 309, 218, 197, 288,
	326, 0, 236, 297, 261, 198, 260, 289, 325, 324,
	206, 350, 356, 357, 361, 0, 362, 0, 0, 0,
	370, 375, 376, 377, 0, 0, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 355, 234, 191, 192,
	338, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 354, 0, 0, 0, 0, 305, 0,
	0, 0, 0, 0, 245, 286, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 336, 348, 365, 368, 0, 0, 0, 196, 367,
	0, 0, 0, 0, 0, 0, 407, 339, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 363, 270, 271,
	272, 273, 237, 0, 213, 366, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 233, 239, 374, 241, 212, 285,
	235, 345, 248, 0, 371, 0, 0, 0, 0, 0,
	277, 244, 310, 249, 255, 298, 344, 283, 303, 210,
	335, 311, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 253, 0, 294, 232, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 0, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 320, 0, 0, 351,
	352, 353, 373, 337, 0, 224, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 252, 0, 0,
	0, 0, 0, 0, 312, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 208, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 317, 333, 209, 308, 346, 214, 315,
	204, 281, 304, 0, 0, 201, 331, 314, 263, 246,
	247, 200, 0, 299, 225, 238, 221, 279, 0, 330,
	358, 220, 349, 0, 341, 203, 0, 340, 278, 327,
	332, 264, 258, 202, 329, 262, 257, 250, 229, 372,
	242, 290, 256, 291, 243, 268, 267, 269, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	343, 0, 0, 0, 0, 0, 0, 316, 0, 0,
	251, 0, 0, 0, 359, 0, 302, 284, 0, 0,
	0, 300, 254, 328, 292, 334, 318, 342, 296, 293,
	194, 319, 223, 265, 205, 207, 219, 226, 228, 230,
	231, 274, 275, 287, 307, 321, 322, 323, 222, 215,
	301, 216, 240, 217, 195, 309, 218, 197, 288, 326,
	0, 236, 297, 261, 198, 260, 289, 325, 324, 206,
	350, 356, 357, 361, 0, 362, 0, 0, 0, 370,
	375, 376, 377, 0, 0, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 0, 355, 234, 191, 192, 338,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 354, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 245, 286, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	336, 348, 365, 368, 0, 0, 0, 196, 367, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 363, 270, 271, 272,
	273, 237, 0, 213, 366, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 233, 239, 374, 241, 212, 285, 235,
	345, 248, 0, 371, 0, 0, 0, 0, 0, 277,
	244, 310, 249, 255, 298, 344, 283, 303, 210, 335,
	311, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 253, 0, 294, 232, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	0, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 320, 0, 0, 351, 352,
	353, 373, 337, 0, 224, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 227, 0, 0, 252, 0, 0, 0,
	0, 0, 0, 312, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 208, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 317, 333, 209, 308, 346, 214, 315, 204,
	281, 304, 0, 0, 201, 331, 314, 263, 246, 247,
	200, 0, 299, 225, 238, 221, 279, 0, 330, 358,
	220, 349, 0, 341, 203, 0, 340, 278, 327, 332,
	264, 258, 202, 329, 262, 257, 250, 229, 372, 242,
	290, 256, 291, 243, 268, 267, 269, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 316, 0, 0, 251,
	0, 0, 0, 359, 0, 302, 284, 0, 0, 0,
	300, 254, 328, 292, 334, 318, 342, 296, 293, 194,
	319, 223, 265, 205, 207, 219, 226, 228, 230, 231,
	274, 275, 287, 307, 321, 322, 323, 222, 215, 301,
	216, 240, 217, 195, 309, 218, 197, 288, 326, 0,
	236, 297, 261, 198, 260, 289, 325, 324, 206, 350,
	356, 357, 361, 0, 362, 0, 0, 0, 370, 375,
	376, 377, 0, 0, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 0, 355, 234, 191, 192, 338, 0,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 354, 0, 0, 0, 0, 305, 0, 0, 0,
	0, 0, 245, 286, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 336,
	348, 365, 368, 0, 0, 0, 196, 367, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 363, 270, 271, 272, 273,
	237, 0, 213, 366, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 233, 239, 374, 241, 212, 285, 235, 345,
	248, 0, 371, 0, 0, 0, 0, 0, 277, 244,
	310, 249, 255, 298, 344, 283, 303, 210, 335, 311,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 253, 0, 294, 232, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 0,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 320, 0, 0, 351, 352, 353,
	373, 337, 0, 224, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 312, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	208, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 317, 333, 209, 308, 346, 214, 315, 204, 281,
	304, 0, 0, 201, 331, 314, 263, 246, 247, 200,
	0, 299, 225, 238, 221, 279, 0, 330, 358, 220,
	349, 0, 341, 203, 0, 340, 278, 327, 332, 264,
	258, 202, 329, 262, 257, 250, 229, 372, 242, 290,
	256, 291, 243, 268, 267, 269, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 316, 0, 0, 251, 0,
	0, 0, 359, 0, 302, 284, 0, 0, 0, 300,
	254, 328, 292, 334, 318, 342, 296, 293, 194, 319,
	223, 265, 205, 207, 219, 226, 228, 230, 231, 274,
	275, 287, 307, 321, 322, 323, 222, 215, 301, 216,
	240, 217, 195, 309, 218, 197, 288, 326, 0, 236,
	297, 261, 198, 260, 289, 325, 324, 206, 350, 356,
	357, 361, 0, 362, 0, 0, 0, 370, 375, 376,
	377, 0, 0, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 0, 355, 234, 191, 192, 338, 0, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	354, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 245, 286, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 336, 348,
	365, 368, 0, 0, 0, 196, 367, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 363, 270, 271, 272, 273, 237,
	0, 213, 366, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 233, 239, 374, 241, 212, 285, 235, 345, 248,
	0, 371, 0, 0, 0, 0, 0, 277, 244, 310,
	249, 255, 298, 344, 283, 303, 210, 335, 311, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 253, 0, 294, 232, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 0, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 320, 0, 0, 351, 352, 353, 373,
	337, 0, 224, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 312, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 208,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	317, 333, 209, 308, 346, 214, 315, 204, 281, 304,
	0, 0, 201, 331, 314, 263, 246, 247, 200, 0,
	299, 225, 238, 221, 279, 0, 330, 358, 220, 349,
	0, 341, 203, 0, 340, 278, 327, 332, 264, 258,
	202, 329, 262, 257, 250, 229, 372, 242, 290, 256,
	291, 243, 268, 267, 269, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 316, 0, 0, 251, 0, 0,
	0, 359, 0, 302, 284, 0, 0, 0, 300, 254,
	328, 292, 334, 318, 342, 296, 293, 194, 319, 223,
	265, 205, 207, 447, 226, 228, 230, 231, 274, 275,
	287, 307, 321, 322, 323, 222, 215, 301, 216, 240,
	217, 195, 309, 218, 197, 288, 326, 0, 236, 297,
	261, 198, 260, 289, 325, 324, 206, 350, 356, 357,
	361, 0, 362, 0, 0, 0, 370, 375, 376, 377,
	0, 0, 0, 0, 0, 364, 801, 802, 803, 800,
	0, 0, 355, 234, 191, 192, 338, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 354,
	0, 0, 0, 0, 305, 0, 0, 0, 0, 0,
	245, 286, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 336, 348, 365,
	368, 0, 0, 0, 196, 367, 0, 0, 1399, 0,
	0, 0, 0, 339, 0, 0, 0, 347, 0, 0,
	0, 0, 1223, 363, 270, 271, 272, 273, 237, 0,
	213, 366, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 0, 0, 0, 360,
	233, 239, 374, 241, 212, 285, 235, 345, 248, 0,
	371, 0, 0, 0, 0, 0, 277, 244, 310, 249,
	255, 298, 344, 283, 303, 210, 335, 311, 259, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 253, 0, 294, 232, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 0, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 1399, 0, 0, 351, 352, 353, 373, 337,
	1219, 224, 0, 0, 1216, 0, 0, 0, 1218, 1215,
	1217, 1221, 1222, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 1373, 0, 1399, 0, 1385, 0, 0, 0,
	0, 0, 0, 2696, 0, 0, 0, 1389, 0, 0,
	0, 0, 1399, 1381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 1401, 0,
	0, 1380, 1382, 1384, 0, 1386, 1387, 1388, 1390, 1391,
	1392, 1394, 1395, 1396, 1397, 0, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 1381, 0, 0, 0, 0, 0, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1226, 1227, 1228, 1229, 1230, 1231, 1224, 1225, 0, 0,
	0, 0, 426, 0, 425, 432, 422, 1398, 0, 0,
	0, 0, 0, 0, 1707, 0, 429, 430, 0, 431,
	435, 0, 0, 417, 1377, 0, 0, 0, 0, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1389, 0, 1393, 0, 0, 0, 0, 0, 0,
	1383, 0, 444, 0, 0, 446, 0, 0, 0, 0,
	445, 1378, 0, 0, 0, 1380, 1382, 1384, 0, 1386,
	1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 0,
	0, 0, 1385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1389, 0, 1378, 1400, 0, 0, 1380, 1382, 1384,
	0, 1386, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396,
	1397, 1378, 0, 0, 0, 1380, 1382, 1384, 0, 1386,
	1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 0,
	0, 1398, 0, 0, 0, 426, 0, 425, 432, 422,
	0, 0, 0, 0, 0, 0, 1400, 0, 1377, 429,
	430, 0, 431, 435, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 1400, 0, 440, 418, 420, 419,
	0, 0, 0, 0, 0, 0, 424, 1393, 0, 0,
	0, 0, 0, 1398, 1383, 0, 0, 0, 428, 0,
	426, 0, 425, 432, 422, 443, 0, 0, 0, 0,
	1377, 1398, 421, 0, 429, 430, 412, 431, 435, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 1377, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	444, 0, 0, 446, 1383, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 423, 427,
	433, 0, 434, 436, 0, 0, 437, 438, 439, 0,
	0, 441, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 420, 419, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 0, 0, 0, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 418, 420, 419, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 427, 433, 0, 434, 436, 0, 0, 437,
	438, 439, 0, 0, 441, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 423, 427, 433, 0,
	434, 436, 0, 0, 437, 438, 439, 0, 0, 441,
	442,
}

var yyPact = [...]int{
	2714, -1000, -308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -216, 29184,
	29184, -1000, -1000, 1756, -1000, 28675, 9831, 29693, 215, 202,
	29693, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 460, -1000, 28166, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 424, 30882, 30202, 7784, 29693, -286, -1000,
	2310, -145, -1000, -1000, -1000, -1000, -1000, -1000, 301, 570,
	27657, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2665, 186,
	570, 600, 616, 782, 782, 11867, -68, -75, 2310, 274,
	286, -1000, 811, 2714, 29693, 1655, 389, 29693, -1000, 1092,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 389, -1000,
	-1000, -1000, 2310, 2310, -1000, 29693, 29693, -13, 1171, -1000,
	228, 263, 254, 1083, -1000, -1000, -1000, -1000, -1000, 2330,
	-1000, 29693, 29693, 2050, 29693, -1000, 1504, 345, 31100, 2181,
	1026, 529, 2080, -1000, -1000, 2041, -1000, 130, 423, 195,
	469, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114, -1000,
	2235, -1000, -1000, 122, -1000, -1000, 79, -1000, -1000, -1000,
	-85, -1000, -1000, -1000, -1000, -1000, -1000, -153, -1000, -1000,
	665, 1334, 7784, -1000, 1346, -1000, 3000, -1000, -1000, -1000,
	-1000, 5229, 9311, 9311, 9311, 9311, -1000, -1000, 1905, 7784,
	2040, 2039, -1000, -1000, -1000, -1000, 1082, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1652,
	8802, -1000, 2037, 2024, 2017, 2016, 2007, 2006, 2000, 1999,
	1998, 1997, 1792, 1887, 1995, 1651, 1649, 1994, 1993, 1990,
	1648, 1792, 1792, 1989, 1986, 1970, 1954, 1948, 1946, 1945,
	1944, 1941, 1940, 1939, 1937, 1936, 1929, 1928, 1926, 1925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2632, -1000, 1074, 966, -1000, 1924, 2167,
	2259, 1814, 2304, 2224, 2220, 2216, 2213, 1502, -1000, -1000,
	29693, 29693, 419, 419, 419, 419, 419, 429, 419, 458,
	456, 454, -1000, -1000, -1000, -1000, -1000, -1000, 544, -1000,
	-1000, -1000, -1000, 981, 29693, -1000, 1841, 1121, 2256, 362,
	359, 270, -1000, 1226, 1226, 1226, 1226, 1121, 261, 352,
	2259, 2259, -84, -116, 1121, 1121, -116, 1121, 1121, 1121,
	74, -1000, -1000, -1000, 1226, 356, 1226, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2232, 2229, 424, 29693, 43, 29693,
	424, 424, 430, -1000, -169, -1000, -1000, 638, -1000, 575,
	-1000, 1504, 344, 341, 990, 1212, -1000, 1152, 29693, 29693,
	29693, 1152, 1152, 15433, 14924, -1000, 29693, -1000, 2259, 1814,
	-1000, 1762, 1683, 1761, 1814, 424, 424, 424, 424, 424,
	424, 424, 29693, 29693, 424, 6756, 6756, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 316, 2168, 252, 1923, -1000,
	29693, 235, 2259, 2167, 2259, -1000, -1000, 1071, 1501, 1647,
	-1000, -1000, 228, 1080, -1000, 833, -1000, -1000, -1000, -1000,
	29693, 241, -1000, -1000, 1623, 1920, -1000, 350, 840, 1089,
	-1000, 170, 31045, 24086, 1504, 24086, 29693, -1000, -1000, -1000,
	-1000, -1000, -1000, -89, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 84, -1000, 7784,
	7784, 7784, 7784, 7784, -1000, 410, 8293, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9311, 9311, 9311, 9311, 9311, 9311,
	9311, 9311, 9311, 9311, 9311, 9311, 1901, 1139, 9311, 9311,
	9311, 9311, 1683, 2119, 982, 167, -1000, -1000, -1000, -1000,
	-1000, 1184, 1334, 7784, 7784, 29693, -1000, 30415, 7784, 7784,
	2708, 7784, 2211, 3701, 29693, 7784, -1000, 1760, 1745, -1000,
	-1000, 1292, 7784, 7784, -1000, -1000, 7784, 9311, 7784, -1000,
	-1000, -1000, 69, 2211, 2211, 7784, 7784, 2211, 2211, 2211,
	1199, 2211, 2211, 2211, 2211, 2211, 2211, 2211, 2211, 29693,
	2143, 59, -1000, -1000, -1000, 1801, -1000, 1836, 1836, 1836,
	1836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1875, 1918, -1000, -1000, 1833, 1833, 1833, 1801, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1863, 1863, 1866, 1863, 29693, 2259, -286,
	6247, -1000, -291, 2167, 7784, -1000, -1000, 7784, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1646, 2201, -1000, 1910,
	1070, 29693, 1200, 29693, 24086, 29693, 1504, 29693, 29693, 419,
	419, 419, 430, -1000, 29693, 981, 2200, 29693, 2315, 9311,
	9311, 27148, 1226, 1121, -1000, 29693, -1000, -1000, -1000, 1226,
	29693, 1226, 1226, 2315, 1226, -1000, -1000, -1000, 1121, 1121,
	-1000, -1000, -1000, -1000, 1226, 1226, -1000, -1000, -95, 2315,
	2315, -69, -1000, -1000, -1000, 29693, 29693, 419, 29693, 29693,
	-1000, 29693, -1000, -1000, 29693, 30562, 29693, 29693, 2228, -1000,
	24086, 29693, 22050, -1000, -124, 596, 579, 582, -1000, -1000,
	349, 687, 13906, 304, 24086, 4719, -1000, -1000, 1152, 1152,
	1152, 4719, 4719, 1032, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 963, -1000, 89, 2167, -1000, -1000, -1000, -1000, -1000,
	29693, 24086, 1504, 29693, 29693, 29693, 29693, -1000, 1906, 29693,
	1076, -1000, -1000, 11358, 1069, 1076, 1643, 29693, 1641, 2066,
	-288, -1000, 12887, 29693, 29693, -1000, -1000, -288, -1000, 12377,
	29693, 2167, -1000, 2167, 29693, -1000, 2255, -1000, 228, 164,
	-1000, -1000, -1000, -1000, -1000, -1000, 1066, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 873, -1000, 29693, -1000,
	-1000, 170, 24086, 25104, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 112, -1000, -1000, 152, -1000, 442, 17, 1079, -1000,
	-1000, 62, 146, 478, 1334, -1000, 1233, 1233, 1230, -1000,
	426, -1000, -1000, -1000, -1000, 1905, -1000, -1000, -1000, 1431,
	1316, -1000, 1187, 1187, 1059, 1059, 1059, 1059, 1059, 1164,
	1164, -1000, -1000, -1000, 5229, 1901, 9311, 9311, 9311, 9311,
	397, 397, 2892, 2942, -1000, 7784, 1224, -1000, 7784, 1539,
	943, 1065, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1742, 665, 1736, 1477, 2329, 1734, 7784, -1000,
	-1000, 1451, 7275, -1000, -1000, -1000, 1733, 1048, 1730, -1000,
	-1000, -1000, 1729, 1077, 824, 1727, 2015, 1725, 856, 7784,
	7784, 1075, 1067, 7784, 7784, 7784, 7784, 1719, 7784, 7784,
	7784, 7784, 7784, 7784, 7784, 7784, -1000, 7784, 56, -1000,
	-1000, -1000, -1000, 1499, -1000, 1497, -1000, -1000, -1000, 1628,
	1628, -1000, 1496, -1000, -1000, -1000, -1000, 1488, -1000, -1000,
	1482, -1000, -1000, -1000, -1000, 1060, -1000, 1334, -1000, 1627,
	-1000, 905, 852, -1000, 1329, -1000, -1000, 29693, 10340, 29693,
	1841, 2174, 52, -1000, 816, -1000, 17, -173, 683, 2048,
	2326, 29693, 29693, 29693, 26639, -1000, 1894, 1057, -1000, -1000,
	7784, -1000, -1000, 2010, 29693, 29693, 2315, -1000, -1000, -1000,
	29693, -1000, -1000, -1000, -1000, 29693, 2315, 2315, 1121, 1226,
	1226, -1000, -1000, 1226, -1000, 1043, -1000, 29693, -1000, -1000,
	-1000, 1841, -1000, 10849, 706, 30768, -1000, 1140, 1140, 777,
	1140, 1140, 1140, 1140, 324, 315, 1140, 1140, 1140, 1140,
	1140, 1140, 1140, 1140, 1140, 1140, 1140, 1140, 1140, 1140,
	1889, -1000, 38, 2223, 160, 816, 178, 2169, 912, -1000,
	-1000, -1000, -1000, 17469, 17469, 13397, 17469, -1000, 1094, -1000,
	-1000, 593, 560, 633, -1000, -1000, 440, -1000, -1000, 683,
	-1000, -1000, -1000, 1888, 1170, -1000, -1000, 1887, -1000, 4719,
	4719, 4719, -1000, -1000, 17978, 29693, -1000, -156, -1000, -144,
	-1000, -1000, 813, 683, 2061, 808, -1000, 808, -1000, 10340,
	-1000, 2315, 6756, -1000, 22050, -1000, -1000, 26122, -1000, 25613,
	2315, -295, 807, -121, -1000, 2161, 697, -1000, 1884, -1000,
	1055, 2125, -1000, 770, -1000, 1168, 1052, -1000, 697, 1045,
	2124, 770, -1000, -1000, 1042, -16, -1000, -1000, 29693, 1623,
	1039, 25104, 721, -1000, 433, 1041, 1020, -1000, 24086, 124,
	24086, -1000, 24086, -1000, -1000, 239, -1000, 29693, 2166, -1000,
	-1000, -1000, 1556, -313, -1000, -1000, -1000, -1000, -1000, 1029,
	-1000, 397, 397, 2892, 2147, -1000, 9311, -1000, 9311, 2100,
	1177, -1000, 7784, 1318, 275, 892, 16960, 29693, -1000, -1000,
	7784, 7784, -1000, 2082, -1000, 7784, 7784, 1447, -1000, 29693,
	-1000, -1000, -1000, -1000, 16960, -1000, 9311, -1000, 7784, 795,
	2035, -56, -56, 2008, 1987, 1978, 1028, -56, 1958, 1908,
	1890, 1826, 1757, 1751, 1747, 1685, 1334, -1000, -1000, 1717,
	1713, 1024, -1000, 1017, 1712, 1015, 1013, 6247, -1000, -121,
	7784, 7784, 7784, 2136, -1000, -1000, 77, 1707, 730, -1000,
	-1000, -1000, 2731, 1836, 1836, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1875, -1000, -1000, 1833, 1833, 1833,
	1801, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1863, 1863, 1866, 1863, -1000, 2196, -1000, -73, 1140, 432,
	24086, 337, -1000, 29693, 2055, 302, 2140, 29693, 1862, 1859,
	1854, 29693, 870, -1000, 1019, 2714, -1000, 29693, 1334, -1000,
	1504, -1000, 1121, -1000, -1000, 2315, 968, -1000, -1000, 2315,
	1121, 1121, 1226, 29693, -1000, 2186, -1000, -1000, -1000, 2731,
	563, -1000, 29693, 1254, 571, 419, 571, 1253, 1844, -1000,
	-1000, -1000, 29693, 29693, 29693, 1252, 1247, 30786, -1000, 1428,
	-1000, 1426, 1140, 1140, 1422, 1602, 1601, 1594, 1140, 1140,
	1407, 1588, 24595, 1400, 1395, 1394, 1526, 1587, 525, 1522,
	1427, 1390, 29693, 1842, 1529, -73, 1140, 156, 1162, 432,
	1336, 14415, 29693, 22050, 22050, 22050, 22050, -1000, 2101, 2095,
	-1000, 2103, 2094, 2102, 29693, 22050, 1841, -1000, 24595, -1000,
	-1000, -1000, 1683, 1010, 2231, 617, 7784, -1000, -1000, -1000,
	536, 24086, 1584, 304, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29693, 29693, 1700, 2313, -1000, 726, -1000, -1000,
	1007, -1000, 2313, -1000, 1382, 1583, -34, -25, 1241, -288,
	6247, 258, 29693, -288, 29693, 6247, -1000, 29693, 248, -288,
	29693, 1379, -1000, -1000, -1000, 2323, 24086, 1504, 1105, 23577,
	-1000, 98, -1000, 111, 351, 1582, -1000, 451, 82, -1000,
	1161, 1556, -1000, -1000, -1000, 9311, -1000, -1000, -1000, -1000,
	1334, 7784, 1699, -1000, 608, 608, 1697, -1000, 1836, 1836,
	-1000, 1801, 1833, 1801, 608, 608, 1692, -1000, 1396, 1670,
	-1000, 1619, 1615, 7784, -1000, 1690, 2849, 843, -186, -56,
	-1000, 1832, -1000, -56, -56, -56, -56, -1000, -56, -56,
	-56, -56, -56, -56, -56, -56, -1000, -1000, -1000, 1575,
	-1000, -1000, -1000, 1369, -1000, 1353, -1000, -34, 1334, 1334,
	-1000, -1000, 2121, 1574, 463, 10340, 2141, 229, 1398, -1000,
	-1000, 23068, 343, -1000, -1000, -1000, 452, 191, 1352, 327,
	-1000, 29693, 177, 29693, -1000, -1000, -1000, -1000, -1000, 2140,
	-1000, 723, 190, 10849, 10849, 10849, 389, 743, 1004, 22050,
	29693, -1000, 21541, 1686, -1000, 683, 2315, -1000, 29693, -1000,
	2315, 2315, 1121, -1000, 229, 2504, -1000, -1000, 29693, 29693,
	-1000, 29693, 29693, 419, 7784, -1000, -1000, -1000, 29693, -1000,
	-1000, -1000, -1000, 16960, 16960, -1000, -1000, -1000, -1000, 1566,
	1565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 332, 29693, 1001, -1000, 1159, 1398, 23068,
	1154, 1564, 343, -1000, 1563, -1000, 682, 29693, 29693, -1000,
	837, -1000, 1153, 2047, 2054, 2047, -1000, -1000, -1000, -1000,
	2092, -1000, 2001, -1000, -1000, 837, -1000, -1000, -1000, -1000,
	-1000, 617, -1000, 2254, 571, 571, 571, 1682, -1000, 721,
	1681, -1000, -1000, -1000, -1000, -1000, 2308, 2300, 22559, 2308,
	-1000, -295, -293, -30, 2295, 2291, 2335, -1000, 1673, 711,
	-288, -1000, -1000, 697, -1000, -1000, -1000, -288, -1000, 697,
	-1000, -1000, 1504, -1000, 110, -1000, -1000, -1000, -1000, -1000,
	-1000, -2, -1000, 29693, -1000, 1556, 1552, 76, -1000, 1334,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7784, -1000, -1000, -1000, 1605,
	-1000, -1000, 7784, 1672, 1548, -1000, 386, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1668, 1666, -293, -1000, -1000, -1000, 2731, -1000, 1296, -1000,
	-1000, 1547, 10, -1000, -1000, -1000, 1543, 1538, 1305, -1000,
	-1000, 1368, 1018, 26, -1000, -1000, -1000, -1000, -1000, -1000,
	1336, 29693, 1830, -1000, 1140, 1140, 1140, 29693, 1663, 699,
	-1000, 1662, 1661, 17469, 22050, 21541, 823, -1000, 992, -1000,
	-1000, -1000, 2315, -1000, -1000, 2315, -1000, -1000, 2504, -1000,
	-1000, 1263, 9311, -1000, -1000, 1537, 16451, 539, 528, 1829,
	-1000, 281, 2334, -1000, 1240, 1238, -1000, 29693, -1000, 1824,
	1828, 223, 1822, -1000, 1820, 1819, 29693, 1585, -1000, -1000,
	-1000, -1000, -1000, -1000, 335, 986, -1000, 1529, 1525, -1000,
	10, 1523, -1000, -1000, -1000, 29693, 682, 682, 2306, 29693,
	6247, -1000, -1000, 7784, 1817, -1000, 7784, -1000, -1000, -1000,
	-1000, -1000, 1813, 2145, -1000, -1000, -1000, -1000, -1000, -1000,
	7784, 7784, -1000, -1000, -1000, -295, 1521, -1000, -1000, 2287,
	1519, 1510, 29693, -1000, 697, 697, 683, -1000, -1000, -69,
	-1000, -1000, -1000, 1578, -1000, 1572, -56, -1000, 2306, -1000,
	2286, -1000, -1000, -295, -230, -1000, -1000, -1000, -1000, 224,
	-1000, -1000, 173, -1000, -1000, 1327, 358, -1000, -1000, 682,
	20523, 16960, 16451, 1518, -1000, 30786, 10849, 84, 30786, 2315,
	823, 992, -1000, -1000, 1101, -1000, -1000, -1000, -1000, 2892,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1297, 1811, -108, -1000, -1000, 1810, 20523,
	269, 269, 20523, 20523, 20523, 1808, 457, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2259, -1000, -1000, 1334, 29693,
	1334, 21032, -1000, 2284, 2283, 1334, 665, -297, -1000, 1516,
	-24, -1000, -1000, 679, -299, -51, -35, -1000, -1000, -1000,
	78, 7784, -297, 29693, 342, 1515, -1000, -1000, 172, -1000,
	-1000, 979, -1000, 1801, 7784, -1000, -1000, -1000, 376, 30768,
	-1000, -1000, -69, 376, 2306, -1000, 1531, 7784, 1792, -219,
	20523, 978, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 974,
	972, 962, 20523, -1000, -1000, -1000, 277, -1000, 953, 937,
	-1000, -1000, -1000, -1000, -1000, 1790, -1000, 2282, -1000, 1514,
	427, -31, -35, -1000, 2281, -28, 2280, 2279, 1527, -1000,
	3192, -1000, -1000, -1000, 665, -1000, 2183, -1000, -1000, -3,
	-1000, -1000, -1000, 20523, 2165, 1551, 238, 2277, -1000, 238,
	2259, -1000, 1403, -1000, 2053, -1000, 75, 932, -1000, -1000,
	-1000, -1000, 927, -1000, -1000, -1000, 20014, 29693, 1510, -1000,
	1788, 1294, -30, -32, 2275, -1000, 1510, 2274, 1510, 1510,
	-1000, -1000, 4210, -289, -59, 259, 1513, -1000, 179, -1000,
	-1000, 2165, -1000, 2273, 265, -1000, -1000, 457, -1000, 2052,
	2018, 2321, -1000, -1000, -1000, -1000, 179, 179, 179, 179,
	92, -1000, -1000, 926, -1000, -1000, 2209, 15942, -42, -1000,
	-1000, -1000, 1511, -1000, 1510, -1000, -1000, 1223, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1140, 1437, 192, -1000, -1000,
	-1000, 19505, 266, 243, 234, -1000, 437, -1000, -1000, -1000,
	2333, -1000, 2322, 534, 534, -1000, -1000, 29693, -1000, 29693,
	-1000, 925, -1000, -1000, -1000, 812, -1000, -1000, -1000, -1000,
	4210, 1293, -1000, 29693, -1000, 29693, 250, 1279, 9311, 1769,
	9311, 1767, 267, 1766, -1000, -1000, -1000, 1313, 291, -1000,
	-1000, 657, -1000, 1138, -1000, 18996, 29693, -1000, -1000, -1000,
	921, 1765, 2272, -1000, 2612, 29693, 2376, 29693, 1764, 1136,
	9311, -1000, -1000, -1000, 29693, 5738, -1000, 634, -1000, -1000,
	373, 253, -1000, 919, -1000, 903, 18487, 1276, 1268, -1000,
	-1000, 1334, 29693, 902, -1000, 29693, 245, -1000, -1000, -1000,
	890, -1000, -1000, -1000, -1000, 373, 2117, -1000, 1269, -1000,
	-1000, 30716, 519, -1000, -1000, 30716, 249, -1000, 361, 1557,
	-1000, -1000, 882, -1000, 29693, 561, 7784, -1000, 249, 30786,
	-1000, 7784, 803, -1000, 30786, 739, -1000, -1000,
}

var yyPgo = [...]int{
	0, 125, 2830, 204, 141, 130, 201, 2824, 2823, 2189,
	2188, 2822, 2821, 2820, 2819, 2818, 2805, 2803, 2795, 2794,
	2789, 2780, 2779, 2778, 2777, 2776, 2774, 2771, 2770, 2769,
	2767, 199, 2766, 2765, 2763, 2762, 2759, 2758, 2757, 2756,
	2754, 2752, 2749, 2748, 2743, 2741, 2721, 2720, 2719, 2718,
	2715, 2714, 2708, 2707, 2706, 2704, 2697, 2694, 126, 2693,
	2177, 2692, 2690, 2688, 2686, 2685, 2684, 2683, 167, 2682,
	2681, 2675, 2674, 2672, 2671, 2669, 2668, 2666, 2663, 2661,
	2660, 2658, 2655, 2654, 2653, 2652, 128, 2651, 2645, 122,
	2644, 2643, 2642, 2641, 196, 180, 56, 2640, 34, 2639,
	2638, 2634, 2633, 2632, 66, 2631, 2630, 155, 177, 208,
	169, 211, 205, 152, 137, 69, 2629, 2195, 2628, 119,
	189, 115, 21, 2625, 132, 2622, 113, 33, 45, 206,
	99, 43, 112, 86, 2621, 168, 68, 2620, 79, 2619,
	2618, 209, 153, 2617, 91, 2615, 2612, 2611, 2608, 165,
	81, 2606, 50, 2605, 121, 144, 89, 83, 2604, 2603,
	2600, 67, 2597, 2596, 2595, 2592, 140, 2591, 124, 64,
	2590, 2589, 2583, 44, 188, 57, 2580, 49, 2579, 2578,
	2577, 2576, 52, 2575, 2574, 15, 18, 20, 2573, 16,
	2572, 2570, 7, 2569, 187, 146, 71, 108, 2566, 376,
	2565, 2564, 2563, 120, 2562, 419, 2561, 2556, 2555, 2554,
	31, 2552, 158, 37, 2551, 73, 107, 92, 178, 162,
	2550, 2549, 2548, 133, 65, 53, 0, 2547, 114, 2546,
	2545, 2543, 220, 2540, 194, 173, 191, 250, 217, 175,
	2534, 2533, 58, 2532, 116, 70, 102, 5, 2530, 151,
	2529, 1144, 149, 2528, 166, 2527, 105, 4, 104, 2522,
	2521, 32, 237, 2520, 2519, 2518, 90, 2517, 2515, 94,
	95, 2514, 2513, 2512, 29, 2510, 27, 24, 2509, 77,
	2505, 202, 2490, 176, 93, 143, 138, 110, 182, 192,
	63, 54, 2489, 1174, 109, 74, 19, 2488, 183, 2487,
	226, 210, 2486, 186, 2483, 200, 297, 164, 2482, 147,
	11, 35, 26, 2481, 8, 2480, 159, 2479, 2478, 12,
	2475, 17, 2474, 2473, 2471, 2470, 3, 2469, 2468, 2467,
	2, 1, 2466, 6, 163, 36, 103, 2465, 97, 174,
	2464, 2463, 72, 2462, 2455, 2454, 692, 2453, 2452, 2451,
	2449, 2448, 2447, 2446, 2445, 2442, 75, 39, 2441, 2439,
	2438, 2437, 61, 106, 2436, 2435, 2434, 2433, 28, 139,
	2432, 22, 2430, 25, 23, 30, 2429, 88, 2428, 13,
	150, 2426, 2425, 14, 2424, 2412, 9, 10, 2411, 2407,
	85, 2403, 62, 38, 117, 76, 2402, 60, 179, 100,
	2401, 2399, 198, 197, 160, 2398, 134, 195, 207, 2397,
	171, 2396, 2391, 2390, 2388, 2386, 2385, 1190, 2381, 2378,
	193, 42, 59, 80, 2371, 2370, 2369, 55, 118, 87,
	82, 154, 2368, 157, 2367, 2366, 78, 2361, 2359, 2357,
	2355, 2353, 161, 2352, 2351, 2350, 203, 215, 2349,
}

//line mysql_sql.y:8737
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 441, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 92, 439, 439, 439, 440, 440,
	90, 90, 90, 79, 91, 389, 389, 388, 388, 387,
	387, 343, 343, 386, 386, 386, 385, 385, 385, 384,
	384, 383, 383, 382, 382, 380, 380, 381, 379, 378,
	378, 378, 376, 376, 376, 372, 372, 374, 373, 373,
	375, 367, 367, 370, 370, 368, 368, 368, 368, 371,
	366, 366, 366, 365, 365, 78, 78, 78, 295, 295,
	77, 77, 309, 309, 309, 309, 309, 307, 307, 307,
	307, 307, 307, 306, 306, 305, 305, 310, 310, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 69,
	69, 69, 69, 72, 72, 72, 73, 304, 304, 304,
	70, 71, 71, 294, 294, 299, 299, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 303,
	303, 303, 301, 301, 300, 300, 302, 302, 63, 63,
	63, 66, 65, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 64, 64, 64, 64, 64, 64, 59, 59,
	59, 59, 59, 58, 58, 60, 60, 291, 291, 290,
	74, 74, 75, 443, 443, 442, 444, 444, 444, 444,
	76, 82, 82, 82, 82, 82, 82, 82, 81, 81,
	84, 84, 83, 85, 68, 68, 68, 68, 68, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 413, 413,
	413, 415, 415, 230, 231, 445, 233, 229, 229, 229,
	409, 409, 410, 411, 412, 412, 412, 80, 7, 7,
	7, 7, 7, 7, 57, 62, 190, 190, 190, 191,
	191, 191, 191, 191, 55, 61, 61, 426, 426, 56,
	433, 433, 346, 346, 244, 244, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 349, 350, 240, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 38,
	37, 37, 37, 280, 280, 36, 446, 446, 219, 219,
	45, 46, 47, 48, 49, 50, 51, 35, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 54, 54, 361,
	361, 448, 448, 448, 52, 53, 345, 345, 345, 43,
	42, 41, 40, 40, 34, 34, 33, 33, 39, 102,
	103, 237, 237, 237, 239, 239, 235, 447, 447, 321,
	321, 238, 238, 32, 32, 32, 32, 236, 236, 218,
	234, 234, 234, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 18, 20, 288, 288,
	285, 19, 14, 13, 16, 12, 15, 17, 5, 5,
	5, 5, 9, 9, 10, 114, 114, 156, 156, 421,
	421, 417, 417, 418, 418, 418, 419, 419, 420, 420,
	86, 355, 355, 355, 355, 355, 355, 4, 137, 137,
	136, 136, 354, 354, 354, 354, 354, 354, 292, 292,
	398, 398, 398, 399, 135, 135, 130, 130, 356, 356,
	258, 400, 400, 364, 364, 363, 363, 362, 362, 133,
	133, 134, 134, 117, 117, 95, 95, 369, 369, 369,
	369, 377, 377, 342, 342, 182, 182, 213, 213, 214,
	214, 107, 107, 108, 108, 108, 108, 108, 108, 406,
	406, 408, 408, 407, 132, 132, 128, 128, 129, 129,
	129, 127, 127, 126, 125, 125, 124, 122, 122, 122,
	123, 123, 123, 110, 110, 110, 109, 109, 109, 109,
	109, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 111, 111, 414, 414, 414, 347, 347,
	347, 352, 352, 196, 196, 197, 197, 195, 195, 112,
	112, 113, 113, 113, 113, 194, 194, 193, 115, 115,
	121, 120, 120, 116, 116, 116, 116, 204, 204, 203,
	203, 203, 203, 89, 93, 93, 94, 140, 140, 202,
	201, 201, 201, 139, 139, 138, 138, 131, 131, 119,
	119, 119, 119, 200, 118, 198, 438, 438, 437, 437,
	436, 434, 434, 434, 435, 435, 435, 435, 391, 391,
	391, 391, 391, 224, 224, 224, 228, 228, 227, 227,
	227, 227, 227, 232, 3, 3, 3, 3, 3, 24,
	24, 24, 24, 24, 24, 30, 148, 149, 29, 141,
	141, 142, 142, 143, 143, 144, 145, 145, 145, 147,
	146, 28, 21, 422, 425, 423, 423, 427, 427, 427,
	428, 428, 428, 429, 429, 22, 99, 104, 104, 101,
	106, 106, 106, 106, 106, 100, 424, 430, 430, 430,
	289, 289, 286, 287, 287, 284, 283, 283, 283, 432,
	432, 431, 431, 431, 225, 225, 23, 279, 279, 281,
	282, 282, 282, 273, 273, 273, 273, 27, 277, 277,
	278, 278, 278, 278, 278, 274, 274, 276, 276, 272,
	272, 272, 272, 272, 26, 105, 105, 271, 271, 269,
	269, 267, 267, 268, 268, 266, 266, 266, 270, 270,
	25, 25, 25, 97, 96, 96, 96, 216, 216, 215,
	215, 98, 348, 348, 311, 311, 312, 312, 312, 315,
	315, 327, 327, 328, 328, 326, 326, 333, 333, 332,
	332, 331, 331, 330, 330, 329, 329, 329, 329, 324,
	324, 323, 323, 313, 313, 313, 313, 313, 314, 314,
	314, 322, 322, 325, 325, 173, 173, 174, 174, 174,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 396,
	396, 397, 176, 176, 176, 180, 180, 180, 180, 180,
	180, 175, 175, 177, 177, 157, 157, 155, 155, 150,
	150, 151, 151, 152, 152, 153, 153, 154, 154, 154,
	154, 154, 154, 297, 297, 394, 394, 395, 395, 390,
	390, 390, 393, 393, 393, 393, 393, 392, 392, 158,
	211, 211, 211, 226, 226, 226, 226, 210, 210, 210,
	172, 172, 171, 171, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 296,
	296, 241, 241, 242, 242, 189, 188, 188, 188, 188,
	188, 186, 187, 185, 185, 185, 185, 185, 184, 184,
	183, 183, 183, 275, 275, 181, 181, 179, 179, 179,
	178, 178, 178, 334, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 250, 250, 255,
	255, 405, 405, 404, 159, 159, 159, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 168, 168, 168, 319,
	319, 319, 319, 319, 320, 320, 320, 317, 317, 318,
	318, 259, 260, 260, 353, 353, 316, 316, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 360, 360, 360, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	416, 416, 416, 401, 401, 401, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 208, 208, 208, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 261, 261, 262, 262, 357, 357, 357, 357, 357,
	357, 358, 358, 359, 359, 359, 359, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 248, 205, 205, 205,
	263, 256, 256, 257, 257, 251, 251, 251, 251, 251,
	251, 251, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 252, 252, 254, 254, 265, 265,
	265, 264, 264, 264, 264, 264, 264, 264, 170, 170,
	170, 170, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 161, 161, 161, 161, 165, 165, 167,
	167, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 166, 166, 166, 166, 164, 164, 164,
	164, 164, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 87, 88,
	88, 163, 212, 212, 335, 335, 338, 338, 336, 336,
	337, 339, 339, 339, 340, 340, 340, 341, 341, 341,
	344, 344, 217, 217, 217, 223, 223, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 3, 2, 4, 4, 4, 4, 4, 1, 1,
	1, 3, 2, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 0, 2,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 7, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 8, 0, 2, 6,
	0, 2, 2, 3, 3, 4, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 1, 0, 1, 1, 1, 11, 0, 2,
	3, 2, 3, 1, 1, 1, 3, 3, 4, 0,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	11, 9, 11, 2, 2, 4, 5, 1, 3, 0,
	3, 5, 0, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 0, 1, 1, 3, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 4, 1,
	3, 3, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 1, 7, 7, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 4, 6, 2, 2, 4, 6, 4,
	2, 0, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 1,
	3, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	1, 1, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 4, 4, 5, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -441, -2, -1, -3, -90, -4, -86, -5, -6,
	-8, -67, -81, -83, -85, -84, -31, -7, -80, -58,
	-59, -63, -69, -74, -77, -78, -79, -91, -87, -88,
	-89, -107, -92, -24, -23, -22, -21, -99, 401, 12,
	447, -9, -10, -406, -11, 233, -229, -230, -231, -233,
	-445, -32, -33, -34, -40, -41, -42, -43, -52, -53,
	-54, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -51, -39, -102, -103, -56, -55, -61, -57, -62,
	-101, 209, -60, 61, -64, -65, -66, -70, -71, -72,
	-73, -75, -76, 332, 338, 391, 529, 530, 46, -108,
	-110, 531, -25, -26, -27, -28, -29, -30, 205, 14,
	480, -12, -15, -13, -16, -14, -19, -20, -18, -17,
	-100, 228, 227, 37, 291, 292, 293, 336, 226, 206,
	13, 137, 138, 140, 141, 30, 41, 314, -109, 67,
	207, -111, 10, 533, 440, 532, -117, 38, -155, -226,
	70, 78, -220, -222, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	450, 312, 313, 477, 245, 269, 362, 272, 279, 137,
	156, 150, 178, 170, 145, 249, 284, 250, 77, 140,
	433, 88, 412, 388, 143, 264, 266, 268, 271, 251,
	166, 161, 263, 247, 529, 159, 252, 39, 253, 183,
	254, 255, 482, 408, 311, 414, 276, 386, 160, 409,
	267, 411, 185, 189, 425, 338, 154, 155, 416, 427,
	182, 225, 42, 479, 237, 428, 187, 181, 177, 436,
	280, 278, 180, 153, 176, 248, 50, 191, 190, 192,
	382, 383, 384, 385, 256, 257, 326, 424, 173, 162,
	316, 146, 22, 431, 232, 413, 339, 258, 273, 281,
	186, 188, 239, 244, 481, 390, 243, 277, 429, 158,
	236, 265, 231, 432, 147, 332, 341, 259, 141, 270,
	426, 435, 49, 354, 152, 144, 222, 138, 241, 246,
	11, 260, 261, 262, 283, 282, 274, 174, 238, 179,
	164, 151, 175, 139, 240, 434, 355, 527, 314, 371,
	172, 169, 242, 215, 430, 415, 142, 375, 356, 167,
	285, 523, 524, 525, 327, 310, 286, 287, 165, 229,
	407, 288, 290, 381, 303, 357, 389, 363, 358, 198,
	294, 418, 184, 526, 410, 295, 296, 297, -117, -60,
	-10, -9, -109, -110, -155, 213, -234, 23, 386, -68,
	387, 209, 67, -226, -5, -4, -86, -58, -107, -232,
	-226, 291, 291, -232, 213, -226, 243, 370, -346, 218,
	-306, -279, 244, -305, -281, -308, -282, 31, 205, 207,
	206, 240, 14, 336, 214, 12, 10, 337, 226, 24,
	25, 27, 13, 338, 340, 28, 341, 344, 345, 346,
	41, 349, 350, 233, 70, 78, 73, 251, -149, -226,
	-257, -251, 95, 234, -253, -246, -247, -249, -386, -380,
	-245, 67, 121, 122, 129, 96, -248, -334, 35, 98,
	487, 448, -206, -207, -208, -209, -226, -381, -379, 73,
	79, 82, 85, 86, 84, 83, 163, 81, 74, 133,
	134, -110, 70, -401, 495, -221, 516, 515, 46, -351,
	-359, 212, -357, 132, 168, 229, 164, 12, 127, 381,
	165, 492, 512, 450, 496, 519, 489, 490, 484, 485,
	486, 488, 497, 499, 511, -360, 507, 517, 518, 505,
	72, 71, 510, 509, 498, 493, 494, 500, 483, 491,
	501, 502, 508, 513, 514, 320, 88, 321, 322, 440,
	315, 323, 218, 386, 55, 324, 325, 326, 327, 328,
	447, 329, 56, 330, 319, 233, 371, 331, 167, 184,
	452, 451, 453, 444, 441, 439, 442, 443, 445, 446,
	503, 504, 506, -302, -300, -226, -93, -94, 521, -126,
	-127, -199, 19, 6, 7, 8, 9, -439, 388, 481,
	294, 333, 215, 312, 371, 295, 243, -273, -271, -348,
	288, 284, 223, 222, 89, 440, 212, 347, -417, -418,
	202, 203, 204, -408, 473, -407, -226, 322, 26, 213,
	333, 418, 419, 420, 421, 422, 423, -44, -361, -345,
	415, 414, -238, 413, 406, 417, 408, 313, 297, 296,
	205, 474, -217, 357, 389, 239, 437, 438, 334, 390,
	425, 426, 409, 88, 171, 168, 215, 213, 312, 440,
	371, 295, -417, 142, 139, -293, 142, 94, 147, 146,
	-293, 243, 370, 40, -299, 381, -298, -300, 425, 426,
	436, 71, 72, 424, -217, 88, 407, 407, -127, -199,
	-126, -108, -110, -89, -406, 312, 371, 243, 214, 213,
	215, 440, 291, 333, 295, -347, -414, 31, -352, 199,
	200, 201, 32, 33, -1, -226, 73, -133, 235, -155,
	135, -133, -127, -126, -127, -155, -210, -226, 388, 104,
	-68, -68, 387, -409, -410, -411, -413, 209, 387, 386,
	135, 15, -232, -232, 65, -155, -281, 243, -306, -279,
	35, 64, 136, 216, 136, 64, 67, 334, 312, 371,
	335, 440, 213, 347, 215, 243, 348, 312, 371, 213,
	215, 440, 243, 312, 213, 215, 371, 243, 348, 406,
	407, 215, 26, 339, 342, 343, 407, -365, 436, 136,
	94, 91, 92, 93, -251, 111, -264, 104, 105, 106,
	107, 108, 109, 110, 118, 117, 128, 121, 122, 123,
	124, 125, 126, 127, 119, 120, 114, 95, 112, 116,
	113, 97, -110, -251, -257, 46, -249, -249, -249, -249,
	-334, -255, -251, 67, 67, 135, 73, -251, 67, 67,
	67, 67, 67, 67, 67, 67, -358, 67, 67, -261,
	-262, 67, 67, 67, 73, 73, 67, 67, 67, 73,
	-262, -262, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 136,
	-161, -165, -162, -164, -163, -167, -166, 168, 169, 132,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 30, 184, 229, 164, 165, 166, 167, 185, 150,
	170, 478, 193, 151, 194, 152, 195, 153, 196, 154,
	155, 197, 156, 159, 160, 161, 158, 135, -127, 136,
	67, -95, 38, -129, 21, -111, -110, 20, 31, 32,
	31, 32, 31, 32, 31, 32, 79, -148, -226, -141,
	-226, -269, 218, -269, -269, -269, -269, 214, -269, 213,
	213, 213, -419, 149, 136, -408, -132, 67, -237, 112,
	116, 23, 241, 241, 278, -446, -447, 15, 114, -235,
	-447, -235, -235, -237, -448, 214, 416, 42, 242, 241,
	-128, -129, -128, 410, 407, -321, 411, 412, -238, -237,
	-237, -238, -237, -237, -237, 213, 215, 440, 295, -446,
	241, -446, 30, 30, -346, -155, -346, 474, -218, -226,
	-346, -346, -420, 217, 429, 480, 145, 146, 147, -281,
	243, 243, 136, 104, 23, -301, 104, 115, -300, -300,
	-300, -301, -301, -175, 40, -225, 132, -226, 73, -175,
	40, -443, -442, -155, -128, -111, -110, 68, 68, 68,
	-346, -346, -346, -346, -346, -346, -346, -232, -141, -346,
	-112, -113, 123, -251, -226, -112, 38, 407, 38, -354,
	46, -107, 67, 30, 67, -226, -355, 46, -107, 67,
	30, -128, -95, -129, 135, 79, 73, -68, 68, 136,
	-412, 85, 86, -415, 182, 174, -226, -82, 73, -3,
	-4, -5, -6, -31, -58, -107, -382, -380, 67, 31,
	380, 64, 15, -307, 213, 440, 333, 239, 215, 312,
	-305, -288, -285, -283, -225, -281, -284, -283, -310, -210,
	407, -96, 392, 290, -251, -251, -251, -251, -251, 84,
	95, 310, 85, 86, -246, -265, 31, 286, 287, -247,
	-247, -247, -247, -247, -247, -247, -247, -247, -247, -247,
	-247, -254, -263, -334, 67, 114, 112, 116, 113, 97,
	-249, -249, -247, -247, 68, 136, -405, -404, 99, -251,
	-251, -226, -402, -403, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 324, 319, 325, 323, 315,
	331, 326, 327, 167, 471, 472, 465, 466, 467, 468,
	469, 470, -256, -257, -256, -251, -402, -256, -205, 32,
	31, -251, -416, 308, 307, 309, -130, -226, -256, 68,
	68, 68, 79, -257, -257, -256, -247, -256, -403, -205,
	-205, -257, -257, -205, -205, -205, -205, 123, -205, -205,
	-205, -205, -205, -205, -205, -205, -300, 40, -341, 355,
	354, -335, -337, 67, -336, 67, -336, -336, -336, 67,
	67, -338, 67, -338, -338, -335, -339, 67, -339, -340,
	67, -339, -226, -128, -94, -363, -362, -251, 40, 522,
	-95, -251, -125, -124, -251, -440, 73, 34, 67, 135,
	-155, 95, -422, -226, -289, -286, -283, -226, -279, -226,
	-226, -269, -269, -269, -420, -407, 34, -131, -226, -195,
	16, -249, -249, -283, 243, -446, -237, -219, -218, -239,
	-447, -234, -239, -239, -195, -447, -237, -237, -239, -235,
	407, -195, -195, -321, -236, -226, -236, -269, -218, -219,
	-219, -155, -190, 210, 207, -174, -192, 352, 245, -270,
	249, 77, 250, 388, 251, 214, 253, 254, 255, 225,
	256, 257, 258, 381, 259, 260, 261, 262, 335, 6,
	298, 40, -422, -422, 30, -289, -226, -120, -115, -119,
	-116, -121, -198, -200, -118, 67, -155, -110, -226, 430,
	431, 143, 146, 145, 31, 380, -304, 380, 31, -279,
	-298, -294, 73, 381, -284, -303, 64, 132, -362, -301,
	-301, -301, -303, -303, 131, 136, -444, 429, 430, 202,
	-95, -422, -288, -279, -226, -157, -155, -157, -226, 67,
	-226, -194, 136, -193, 15, -227, -226, 34, 73, 135,
	-194, 73, -157, 73, -292, 64, -356, -258, -400, 521,
	-135, 68, -130, -398, -399, -130, -134, -226, -356, -135,
	68, -398, -95, -95, -226, 23, -68, -410, 135, 136,
	-131, -307, -287, -284, -309, 123, -226, -295, 136, 480,
	534, 71, 216, -432, -431, 372, 68, 136, -366, 217,
	447, 73, 535, 198, 84, 310, 85, 86, -334, -257,
	-254, -249, -249, -247, -247, -252, 230, -252, 94, -251,
	-250, -404, 101, -251, 34, 136, 65, 135, 68, 68,
	15, 15, 68, -251, 68, 15, 15, -251, 68, 135,
	68, 68, 68, 68, 65, 68, 136, 68, 136, -257,
	-251, 68, 68, -251, -251, -251, -257, 68, -251, -251,
	-251, -251, -251, -251, -251, -251, -251, -344, 356, 79,
	79, -212, 73, -212, 79, 79, 79, 136, 68, 73,
	136, 22, 136, -122, 36, 37, -149, -142, -143, -144,
	-145, -161, -210, 169, 172, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 229, 164, 165, 166,
	167, 185, 150, 170, 151, 152, 153, 154, 155, 156,
	159, 160, 161, 158, -226, -132, 35, -425, 359, -433,
	136, 40, -431, 440, -272, 65, -105, 15, -155, -155,
	-155, 15, -114, -156, -226, 67, 68, 136, -251, -280,
	65, -226, -219, -195, -226, -155, -226, -195, -195, -237,
	-239, -239, -235, 135, -218, -132, -152, -158, -153, -210,
	-242, -154, 221, 219, 223, -395, 89, 224, 275, 90,
	214, -191, 214, 90, 220, 224, 219, 136, -192, -223,
	104, -223, -217, 131, -223, -223, -223, -223, 252, 252,
	-223, -223, -223, -223, -223, -223, -223, -223, -223, -223,
	-223, -223, -223, -223, 67, -426, 359, 30, 318, -433,
	-106, 312, 30, -201, -202, -203, -204, 53, 57, 59,
	54, 55, 56, 60, 30, 136, -224, -228, 34, -226,
	73, -224, -110, -115, -120, -224, 67, 144, 147, 147,
	146, 216, 67, 104, -303, -303, -303, 40, -225, -442,
	436, 430, 64, 136, -142, -195, -113, -115, -226, 73,
	-226, 123, -195, -182, 524, 38, -369, 411, 39, 136,
	67, 68, 136, 46, 136, 104, 68, 136, 68, 46,
	135, 388, -226, -380, 68, -309, 136, 216, 135, 135,
	-285, 338, -225, -287, 20, 480, -210, 38, -216, -215,
	73, 535, 68, -252, -252, 94, -249, -246, 68, 102,
	-251, 100, -159, -161, 354, 355, -160, -166, 132, 168,
	229, 167, 166, 164, 354, 355, -175, -226, -251, -251,
	68, -251, -251, 15, -226, -175, -247, -251, -127, 68,
	-316, 402, -316, 68, 68, 68, 68, -316, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 136,
	68, 68, 68, 136, 68, 136, -362, -369, -251, -251,
	-124, -123, 43, 346, 68, 136, -161, 34, -428, 413,
	361, -223, -244, -243, 314, 41, -349, 381, 367, 368,
	-286, 243, -226, 64, 302, 303, 304, 305, -267, -268,
	-266, -270, -422, 67, 67, 67, -155, -114, -226, 15,
	136, -421, 135, -1, -226, -279, -237, -195, -447, -195,
	-237, -237, -239, -226, 34, -161, -154, -226, 90, -394,
	-395, -269, -394, 90, 67, -226, -226, -226, 90, 90,
	-192, 79, 79, -223, -223, 79, 73, 73, 73, -223,
	-223, 79, 73, -228, 79, 79, 79, 79, 40, 73,
	-180, 40, 263, 267, 264, 265, 266, 79, 40, 79,
	40, 79, 40, -226, 67, -396, -397, 73, -428, -223,
	318, 104, -244, -104, 77, 31, -136, 210, 207, -422,
	-291, -290, -210, -119, -119, -119, -119, 53, 53, 53,
	58, 53, 58, 53, -203, -291, -121, -132, -228, 68,
	-438, -437, -436, -434, 61, 217, 62, -256, 147, -287,
	-240, 73, -294, -155, -155, 68, -197, 17, 135, -197,
	79, 73, -377, 398, 393, 395, 90, -258, -364, -363,
	46, -107, -130, -356, -399, -362, -226, 46, -107, -356,
	-226, 79, 15, -284, -279, 123, 123, -226, 339, -295,
	73, 360, 73, 213, 536, 136, 104, -216, -246, -251,
	68, -168, 155, 154, -168, 68, -336, -336, -335, -338,
	-335, -168, -168, 68, 68, 23, 68, 68, 68, -251,
	68, 68, 136, -353, 449, -316, 67, -316, -316, -316,
	-316, -316, -316, -316, -316, -316, -316, -316, -316, 73,
	79, 79, -377, 44, 45, 73, 211, -144, 40, -107,
	-429, 77, -423, 73, -226, -430, 77, 362, 134, 316,
	40, 363, 364, 378, 311, 79, 79, 369, -424, -226,
	-137, 312, -155, -266, -217, 131, 254, 295, -150, -151,
	-152, -150, -150, -133, 65, 135, -115, -156, -226, 123,
	68, -195, -226, -195, -195, -237, -107, -172, -171, -169,
	84, 95, 40, 352, -170, 77, 131, 268, 246, 269,
	-189, -241, 64, 358, 219, 89, 90, 340, -242, -390,
	-392, -226, -392, -226, -390, -390, -269, -251, -226, -175,
	-175, 73, 73, -176, 246, -157, 68, 136, 104, -429,
	-423, 104, 73, -430, 73, 136, -136, -136, -195, 136,
	104, -139, -138, 64, 65, -140, 64, -138, 53, 53,
	-195, -436, -435, 23, -395, -395, -395, 68, 68, -196,
	18, 20, 123, -196, -182, -342, 523, -373, -375, 393,
	20, 20, 13, 68, -356, -356, -279, -295, 381, -155,
	-215, 73, 536, -251, 68, -251, 68, 73, -260, -259,
	235, 68, 68, -342, -146, -161, -245, 73, -427, 372,
	73, 73, 79, 40, 79, 134, 365, -350, -104, -136,
	67, -223, -223, -223, -226, 68, 136, 68, 68, -224,
	-115, -226, -195, -421, 135, -195, -195, -169, 84, -247,
	73, -177, -225, 132, -178, 40, 267, 263, -179, 40,
	247, 248, -181, 67, 275, 13, 90, 90, -155, 67,
	65, 285, 67, 67, 67, -392, 68, 247, 248, 68,
	-397, 73, -427, 73, -422, -127, -290, -362, -251, 67,
	-251, 67, 53, 19, 17, -251, -257, -182, 73, 20,
	73, -371, 73, -291, -98, -367, -321, 68, 68, -316,
	-127, 20, -182, 479, 20, 480, 315, 40, 79, 40,
	366, -274, -276, -210, 67, -175, -177, 73, -173, -174,
	-152, -97, -96, -173, -195, -195, 79, 67, -357, -275,
	67, -274, -393, 302, 303, 304, 306, 305, -393, -274,
	-274, -274, 67, -297, -296, 276, 95, -128, -131, -391,
	-226, 219, 20, 20, -213, 525, 73, 395, -343, 526,
	-376, 398, -370, -368, 393, 394, 395, 396, -318, -317,
	-320, 399, 277, 405, -257, -213, -147, -226, 73, 360,
	73, 315, 68, 136, -335, -251, -311, 235, -98, -311,
	-127, 68, -251, -261, -184, -183, 476, -274, 68, 68,
	68, 68, -274, 276, 68, 68, 136, 67, 20, 73,
	-378, 217, -374, -375, 397, -368, 20, 395, 20, 20,
	68, -319, 97, 365, 369, -251, 34, 381, -277, -276,
	-122, 68, -312, 284, 20, -312, -128, 68, -188, -186,
	-187, 64, 409, 273, 274, 68, -277, -277, -277, -277,
	68, -226, 219, -214, -226, -371, -385, 67, 79, -373,
	-372, -374, 20, -371, 20, -371, -371, -319, 521, 403,
	404, 403, 404, 73, -278, 225, 77, 480, 300, 301,
	-122, 20, -313, 277, 278, -314, -325, 280, -296, -187,
	64, -186, 64, 14, 13, -189, 68, 136, -389, 30,
	68, -384, -383, -211, -379, -226, 398, 399, 73, -371,
	94, -223, 73, 299, -210, 67, -323, 281, 67, -321,
	67, -321, 90, 303, -185, 270, 271, 30, 146, -185,
	-226, -388, -387, -386, 68, 136, 135, -319, 79, -226,
	-310, -315, 282, 79, -247, 67, -247, 67, -322, 279,
	67, 84, 40, 272, 136, 104, -383, -226, 68, -327,
	67, 20, 68, -310, 68, -310, 67, 104, -247, -387,
	40, -251, 135, -328, -326, 235, -314, 68, 68, 68,
	-310, 79, 68, -226, 68, 136, -226, -324, 283, 68,
	-326, -329, 46, 79, -333, -330, 67, -192, 237, 114,
	-333, -192, -332, -331, 282, 238, 67, 68, 136, -226,
	234, 67, -257, -331, -330, -257, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 694, 695, 696, 697, 698, 0, 0,
	0, 468, 469, 0, 445, 0, 0, 0, 0, 0,
	0, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 298, 299, 300, 301, 302,
	303, 0, 233, 229, 208, 209, 210, 169, 170, 171,
	172, 240, 241, 322, 0, 0, 0, 0, 0, 551,
	-2, 35, 699, 700, 701, 702, 703, 704, -2, 481,
	0, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 287, 288, 289, 283, 284, 286, 285, -2, 0,
	481, 222, 0, 213, 213, 0, 0, 0, 571, 0,
	0, 586, 608, 33, 0, 0, 529, 0, 534, 917,
	953, 954, 955, 956, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 529, 234,
	470, 471, 571, 571, 443, 0, 269, 0, 1403, 273,
	0, 0, 0, 440, 264, 265, 266, 267, 268, 0,
	693, 0, 0, 260, 0, 228, 1462, 0, 0, 0,
	0, 0, 0, 113, 767, 115, 769, 119, 126, 0,
	0, 131, 132, 135, 136, 137, 138, 139, 0, 143,
	0, 145, 148, 0, 150, 151, 0, 154, 155, 156,
	0, 166, 167, 168, 770, 771, 772, -2, 44, 707,
	1328, 1223, 0, 1230, 1231, 1242, 1253, 1026, 1027, 1028,
	1029, 0, 0, 0, 0, 0, 1036, 1037, 0, 1049,
	1558, 0, 1043, 1044, 1045, 1046, 53, 65, 66, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 0,
	1196, 1013, 953, 0, 1566, 0, 1586, 1585, 0, 0,
	1181, 0, 1171, 0, 0, -2, -2, 0, 0, 1529,
	-2, 1563, 1582, 1590, 1567, 1589, 1560, 1561, 1555, 1556,
	1557, 1559, 1568, 1570, 1581, 0, 1577, 1587, 1588, 0,
	67, 68, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1187, -2, 1189, 1190, 1192,
	1193, 1194, 1195, -2, 1198, 1199, 1200, -2, -2, 1203,
	1204, 1205, 1206, 1207, 1208, 1211, -2, 1213, -2, -2,
	1183, 1184, 1185, 1186, 1175, 1176, 1177, 1178, 1179, 1180,
	-2, -2, -2, 0, 206, 204, 571, 644, 0, -2,
	0, 0, 0, 591, 594, 597, 600, 0, 36, 37,
	0, 0, 799, 799, 799, 799, 799, 0, 799, 0,
	0, 0, 774, 775, 776, 797, 798, 823, 486, 482,
	483, 484, 485, 559, 0, 561, 564, 421, 370, 0,
	0, 0, 382, 376, 0, 0, 0, 421, 0, 0,
	566, 566, 0, 431, 421, 421, -2, 421, 421, 421,
	0, 388, 389, 390, 376, 0, 376, 394, 395, 396,
	407, 408, 432, 1352, 0, 0, 322, 0, 322, 0,
	322, 322, 488, 223, 224, 212, 214, 0, 218, 0,
	211, 1462, 0, 0, 180, 1529, 185, 0, 1410, 1476,
	1425, 0, 0, 1443, 0, -2, 0, 250, 566, 0,
	572, 0, 571, 0, 0, 322, 322, 322, 322, 322,
	322, 322, 0, 0, 322, 0, 0, 609, 610, 605,
	606, 607, 611, 612, 3, 0, 0, 0, 0, 533,
	0, 0, 566, -2, 0, 444, 270, 957, 0, 0,
	274, 275, 0, 0, 290, 0, 293, 278, 279, 280,
	0, 0, 262, 263, 0, 0, 230, 0, 0, 0,
	323, 0, 0, 0, 0, 0, 0, 123, 120, 127,
	130, 140, 147, 0, 159, 161, 164, 121, 128, 133,
	134, 141, 162, 122, 124, 125, 129, 163, 165, 142,
	146, 160, 144, 149, 152, 153, 158, 0, 94, 0,
	0, 0, 0, 0, 1229, 0, 0, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 1223, 0, 0, 1032, 1033, 1034, 1035,
	1038, 0, 1050, 0, 0, 0, 1282, 0, 1221, 1221,
	0, 1221, 1217, 0, 0, 1221, 1159, 0, 0, 1161,
	1172, 0, 0, 0, 1165, 1166, 1221, 0, 1221, 1170,
	1155, 1156, 0, 1217, 1217, 0, 0, 1217, 1217, 1217,
	1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217, 0,
	1329, 1347, 1284, 1285, 1286, 1334, 1288, 1338, 1338, 1338,
	1338, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	0, 0, 1327, 1307, 1336, 1336, 1336, 1334, 1331, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1341, 1341, 1344, 1341, 0, 566, 0,
	0, 554, 0, 535, 0, 588, 590, 0, 592, 593,
	595, 596, 598, 599, 601, 602, 38, 0, 706, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 799,
	799, 799, 488, 487, 0, 560, 0, 0, 617, 0,
	0, 0, 376, 421, 381, 378, 377, 427, 428, 424,
	0, 424, 424, 617, 0, 401, 402, 403, 421, 421,
	409, 567, 410, 411, 424, 0, 429, 430, 0, 617,
	617, 0, 418, 419, 420, 0, 0, 799, 0, 378,
	392, 378, 1353, 1354, 0, 808, 0, 0, 0, 439,
	0, 0, 0, 489, 0, 0, 216, 0, 221, 173,
	0, 0, 0, 0, 0, 0, 202, 203, 0, 0,
	0, 0, 0, 193, 196, 911, 912, 764, 765, 197,
	198, 242, 243, 0, 535, 587, 589, 583, 584, 585,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 0,
	625, 619, 621, 688, 53, 625, 0, 0, 0, 508,
	521, 503, 0, 510, 0, 918, 490, 521, 492, 0,
	510, 535, 557, 535, 0, 271, 0, 276, 0, 0,
	292, 294, 295, 296, 281, 282, 441, 258, 259, 251,
	252, 253, 254, 255, 256, 257, 261, 63, 0, 231,
	232, 0, 0, 0, 107, 108, 109, 110, 111, 112,
	114, 98, 458, 460, 756, 768, 0, 759, 0, 117,
	157, 90, 0, 0, 1224, 1225, 1226, 1227, 1228, 1232,
	0, 1234, 1236, 1238, 1240, 0, 1258, -2, -2, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1243, 1256, 1257, 0, 0, 0, 0, 0, 0,
	1254, 1254, 1249, 0, 1030, 0, 1047, 1051, 0, 0,
	0, 54, 1216, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 0, 1222, 0, 1223, 0, 0, 0, 1218,
	1219, 0, 0, 1120, 1121, 1122, 0, 516, 0, 1182,
	1160, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 1350, 1348,
	1349, 1287, 1335, 0, 1312, 0, 1313, 1314, 1315, 0,
	0, 1308, 0, 1309, 1310, 1311, 1303, 0, 1304, 1305,
	0, 1306, 205, 643, 645, 0, 525, 527, 528, 0,
	555, 568, 573, 574, 577, 34, 39, 0, 711, 0,
	564, 0, 0, 723, 320, 750, 0, 0, 766, 789,
	795, 0, 0, 0, 0, 562, 0, 0, 657, 369,
	0, 422, 423, 373, 1462, 378, 617, 383, 379, 384,
	0, 426, 385, 386, 387, 0, 617, 617, 421, 424,
	424, 414, 415, 0, 433, 437, 434, 0, 436, 391,
	393, 564, 305, 0, 0, -2, 867, 1355, 1355, 0,
	1355, 1355, 1355, 1355, 0, 0, 1355, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355,
	0, 809, 317, 0, 0, 320, 740, 630, 0, 631,
	632, 628, 659, 683, 683, 0, 683, 663, 917, 225,
	226, 0, 0, 220, 174, 175, 0, 177, 178, 179,
	186, 181, 183, 0, 0, 187, 199, 200, 201, 0,
	0, 0, 191, 192, 0, 0, 245, 246, 248, 0,
	553, 456, 457, 461, 0, 463, 915, 464, 465, 711,
	745, 617, 0, 626, 0, 622, 689, 0, 691, 0,
	617, 545, 0, 537, 497, 0, 502, 518, 0, 522,
	0, 0, 514, 507, 511, 0, 0, 531, 491, 0,
	0, 496, 556, 558, 958, 0, 277, 291, 0, 0,
	0, 0, 101, 753, 0, 102, 106, 96, 0, 0,
	0, 758, 0, 755, 760, 0, 116, 0, 0, 91,
	92, 814, 819, 0, 1233, 1235, 1237, 1239, 1241, 0,
	1244, 1254, 1254, 1250, 0, 1245, 0, 1247, 0, 1224,
	0, 1052, 0, 0, 0, 0, 0, 0, 1108, 1109,
	0, 0, 1113, 0, 1115, 0, 0, 0, 1119, 0,
	1158, 1174, 1162, 1163, 0, 1167, 0, 1169, 0, 571,
	0, 1086, 1086, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 1330, 1283, 1351, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 646, 537,
	0, 0, 0, 580, 578, 579, 0, 0, 712, 713,
	715, 716, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1395, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 710, 0, 800, 730, 1355, 324,
	0, 0, 752, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 475, 479, 33, 565, 0, 618, 371,
	0, 372, 421, 380, 425, 617, 917, 404, 405, 617,
	421, 421, 424, 0, 435, 0, 306, 923, 924, 0,
	0, 926, 983, 0, 935, 799, 935, 0, 0, 937,
	938, 307, 0, 0, 0, 0, 0, 808, 869, 0,
	1356, 0, 1355, 1355, 0, 0, 0, 0, 1355, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 1355, 0, 0, 324,
	737, 0, 0, 0, 0, 0, 0, 650, 0, 0,
	649, 0, 0, 0, 0, 0, 564, 684, 0, 686,
	687, 661, -2, 0, 630, 666, 1221, 227, 215, 217,
	0, 0, 0, 0, 188, 189, 190, 194, 195, 244,
	247, 249, 0, 0, 0, 615, 620, 627, 690, 692,
	54, 623, 615, 40, 0, 0, 541, 0, 0, 521,
	523, 0, 0, 521, 0, 0, 530, 0, 0, 521,
	0, 0, 442, 64, 297, 0, 0, 0, 0, 0,
	459, 0, 757, 98, 0, 0, 118, 0, 0, 817,
	0, 819, 1220, 1246, 1248, 0, 1255, 1251, 1031, 1039,
	1048, 0, 0, 1054, 1066, 1066, 0, 1057, 1338, 1338,
	1060, 1334, 1336, 1334, 1066, 1066, 0, 55, 0, 0,
	1114, 0, 0, 0, 517, 0, 0, 0, 1084, 1086,
	1090, 0, 1091, 1086, 1086, 1086, 1086, 1096, 1086, 1086,
	1086, 1086, 1086, 1086, 1086, 1086, 1340, 1339, 1325, 0,
	1326, 1337, 1342, 0, 1345, 0, 526, 541, 569, 570,
	575, 576, 0, 0, 0, 0, 717, 0, 733, 731,
	732, 0, 747, 325, 326, 327, 328, 0, 0, 0,
	751, 0, 498, 0, 790, 791, 792, 793, 794, -2,
	803, 0, 0, 919, 919, 919, 529, 0, -2, 0,
	0, 477, 0, 0, 658, 374, 617, 397, 0, 412,
	617, 617, 421, 438, 0, -2, 925, 984, 947, 947,
	936, 947, 947, 799, 0, 309, 310, 311, 0, 313,
	868, 870, 871, 0, 0, 874, 875, 876, 877, 0,
	0, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 905, 906, 907, 908, 909, 910, 890, 891, 892,
	893, 894, 895, 902, 0, 0, 899, 0, 733, 0,
	0, 0, 747, 739, 0, 741, 742, 0, 0, 500,
	617, 237, 0, 653, 647, 0, 636, 651, 652, 639,
	0, 641, 0, 637, 638, 617, 629, 660, 685, 662,
	665, 667, 668, 674, 0, 0, 0, 0, 219, 176,
	0, 344, 182, 462, 916, 467, 613, 0, 0, 613,
	546, 545, 543, 78, 0, 0, 0, 519, 0, 524,
	521, 506, 515, 505, 512, 513, 532, 521, 495, 494,
	959, 272, 0, 754, 98, 103, 104, 105, 99, 97,
	761, 0, 763, 0, 815, 819, 0, 0, 1252, 1053,
	1040, 1055, 1067, 1068, 1056, 1041, 1058, 1059, 1061, 1062,
	1063, 1064, 1065, 1042, 1110, 0, 1112, 1116, 1117, 0,
	1164, 1168, 0, 0, 0, 1089, 1082, 1092, 1093, 1094,
	1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1333,
	0, 0, 543, 581, 582, 705, 0, 714, 0, 721,
	722, 0, 0, 725, 726, 735, 0, 0, 0, 330,
	331, 0, 0, 0, 343, 339, 340, 341, 321, 746,
	737, 0, 0, 804, 1355, 1355, 1355, 0, 0, 920,
	921, 0, 0, 683, 0, 0, 617, 476, 479, 480,
	563, 375, 617, 416, 413, 617, 304, 949, -2, 962,
	964, 0, 0, 967, 968, 0, 0, 0, 0, 1005,
	974, 0, 0, 978, 0, 1270, 1271, 0, 982, 0,
	939, 948, 0, 948, 0, 0, 947, 0, 312, 872,
	873, 878, 879, 896, 0, 0, 898, 0, 0, 314,
	0, 0, 315, 319, 738, 0, 743, 744, 571, 0,
	0, 633, 654, 0, 0, 634, 0, 635, 640, 642,
	236, 669, 0, 0, 671, 672, 673, 664, 184, 603,
	0, 0, 624, 604, 41, 545, 0, 542, 79, 0,
	0, 0, 0, 520, 504, 493, 100, 95, 762, 81,
	818, 820, 816, 0, 1118, 0, 1086, 1085, 571, 1083,
	0, 1343, 1346, 545, 0, 720, 718, 734, 724, 0,
	748, 749, 0, 332, 333, 0, 336, 342, 736, 499,
	0, 0, 0, 0, 796, -2, 0, 0, -2, 617,
	617, -2, 473, 478, 0, 398, 417, 963, 965, 966,
	969, 970, 913, 914, 971, 1010, 1011, 1012, 972, 1007,
	1008, 1009, 973, 0, 0, 0, 1268, 1269, 1003, 0,
	0, 0, 0, 0, 0, 0, 933, 903, 904, 897,
	900, 901, 318, 316, 501, 566, 238, 239, 655, 0,
	648, 678, 675, 0, 0, 614, 616, 547, 544, 0,
	538, 540, 89, 509, 51, 72, 0, 1111, 1157, 1088,
	1079, 0, 547, 0, 0, 0, 329, 334, 0, 337,
	338, 0, 785, 1334, 0, 805, 806, 807, 824, -2,
	922, 811, 81, 824, 571, 474, 0, 0, 1171, 998,
	0, 0, 940, 942, 943, 944, 945, 946, 941, 0,
	0, 0, 0, 932, 934, 979, 0, 235, 0, 0,
	679, 681, 676, 677, 42, 0, 80, 0, 43, 0,
	69, 0, 82, 83, 0, 0, 0, 0, 0, 1080,
	0, 1074, 1075, 1076, 1081, 536, 0, 719, 727, 0,
	729, 335, 778, 0, 577, 0, 826, 0, 813, 826,
	566, 1006, 0, 977, 986, 999, 0, 0, 778, 778,
	778, 778, 0, 980, 656, 670, 0, 0, 0, 52,
	56, 0, 78, 75, 0, 84, 0, 0, 0, 0,
	1087, 1077, 0, 0, 0, 0, 0, 728, 777, 786,
	787, 577, 810, 0, 863, 812, 472, 975, 985, 987,
	988, 0, 1000, 1001, 1002, 1004, 927, 928, 929, 930,
	0, 680, 682, 0, 549, 539, 45, 0, 0, 73,
	74, 76, 0, 85, 0, 87, 88, 0, 1069, 1070,
	1072, 1071, 1073, 708, 779, 1355, 0, 0, 783, 784,
	788, 0, 851, 0, 0, 857, 0, 864, 976, 989,
	0, 990, 0, 0, 0, 931, 548, 0, 821, 0,
	57, 0, 59, 61, 62, 950, 70, 71, 77, 86,
	0, 0, 781, 0, 827, 0, 829, 0, 0, 0,
	0, 0, 861, 0, 991, 993, 994, 0, 0, 992,
	550, 46, 47, 0, 58, 0, 0, 1078, 780, 782,
	0, 831, 0, 852, 0, 0, 0, 0, 0, 0,
	0, 995, 997, 996, 0, 0, 60, 951, 828, 825,
	0, 863, 853, 0, 855, 0, 0, 0, 0, 48,
	49, 50, 0, 0, 833, 0, 849, 854, 856, 858,
	0, 862, 860, 952, 832, 0, 845, 830, 0, 859,
	834, -2, 0, 850, 835, -2, 0, 843, 0, 0,
	836, 844, 0, 839, 0, 0, 0, 838, 0, -2,
	846, 0, 0, 840, -2, 0, 848, 847,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 533,
	105, 104, 106, 3, 534, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 535, 117, 536, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:646
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:652
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:687
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:692
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:698
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:718
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:724
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:739
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:745
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:754
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:819
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:825
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:829
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:835
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:842
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:850
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:854
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:868
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:872
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:876
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:889
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:895
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:904
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:915
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:919
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:925
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:929
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:935
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:939
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:945
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:969
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:988
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:992
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:996
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1020
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1032
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1039
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1048
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1072
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1076
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1088
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1106
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1123
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1146
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1150
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1193
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1210
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1220
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1252
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1258
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1265
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1273
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1282
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1286
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1290
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1294
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1298
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1302
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1309
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1313
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1319
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1326
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1335
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1339
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1501
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1505
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1509
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1513
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1517
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1521
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1525
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1529
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1533
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1537
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1541
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1567
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1606
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1620
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1643
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1686
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1709
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1732
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1739
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1754
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1761
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1768
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1801
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1805
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1811
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1815
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1826
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1903
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1910
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1916
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1923
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1930
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1947
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1969
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1973
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1995
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1999
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2005
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2011
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2019
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2023
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2047
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2057
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2061
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2067
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2073
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2083
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2105
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2125
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2135
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2180
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2186
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2239
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2246
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2250
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2326
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2332
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2358
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2367
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2376
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2392
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2458
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2463
		{
			yyVAL.item = nil
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2507
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2524
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2530
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2535
		{
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2539
		{
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2571
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2577
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2583
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2589
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2618
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2622
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2626
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2630
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2643
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2653
		{
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2655
		{
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2664
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2674
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2683
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2687
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2691
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2709
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2737
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2741
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2786
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2795
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2799
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2808
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2814
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2827
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2831
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2837
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2842
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2856
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2860
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2866
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2876
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2880
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2886
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2890
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2929
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2933
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2967
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2979
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3002
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3014
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3030
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3043
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3054
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3058
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3064
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3069
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3076
		{
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3078
		{
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3081
		{
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3090
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3094
		{
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3099
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3108
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3121
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3129
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3143
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3163
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3176
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3182
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3186
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3192
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3205
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3213
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3227
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3246
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3250
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3259
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3263
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3278
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3282
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3288
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3292
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3298
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3302
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3308
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3313
		{
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3324
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3328
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3344
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3350
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3354
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3360
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3364
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3369
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3400
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3418
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3454
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3467
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3471
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3476
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3480
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3487
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3492
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3509
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3517
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3547
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3551
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3569
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3578
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3584
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3588
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3601
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3607
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3613
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3617
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3628
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3632
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3636
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3641
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3645
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3649
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3663
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3677
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3739
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3756
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3764
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3772
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3796
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3804
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3822
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3833
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3847
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3851
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3855
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3868
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3890
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3905
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3909
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3915
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3919
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3924
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3928
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3933
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3941
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3955
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3973
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3979
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3997
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4016
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4020
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4030
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4034
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4038
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4042
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4048
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4062
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4068
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4078
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4084
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4090
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4094
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4098
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4108
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4118
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4124
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4128
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4134
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4161
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4173
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4186
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4204
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4208
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4214
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4228
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4232
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4237
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4245
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4258
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4262
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4266
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4270
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4275
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4279
		{
			yyVAL.str = yyDollar[1].str
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4283
		{
			yyVAL.str = yyDollar[2].str
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4289
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4295
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4299
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4303
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4307
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4311
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4317
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 705:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4358
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4364
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4383
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4388
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4405
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4411
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4425
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4431
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4437
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4454
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4466
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4472
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4486
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4492
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4499
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4505
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4513
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4526
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4534
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4549
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4561
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4572
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4576
		{
			yyVAL.str = yyDollar[2].str
		}
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4602
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4608
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4623
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4632
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4637
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4643
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4651
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4757
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4761
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4767
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4777
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4781
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4787
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4797
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4801
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4805
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4814
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4820
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4827
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4833
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4842
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4858
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4862
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4882
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4886
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4890
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4895
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4899
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4913
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4936
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4958
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4962
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4970
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4974
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4980
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4984
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4990
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5022
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5037
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5047
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5060
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5066
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5070
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5076
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5084
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5089
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5099
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5133
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5140
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5150
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5158
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5169
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5173
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5178
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5182
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5189
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5213
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5227
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5234
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5245
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5258
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5264
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5268
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5283
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5297
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5303
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5307
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5313
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5320
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5329
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5333
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5342
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5351
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5356
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5360
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5370
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5374
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5385
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5393
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5401
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5409
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5420
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5429
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5439
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5449
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5453
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5458
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5471
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5477
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5481
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5485
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5495
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5503
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5511
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5516
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5524
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5528
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5548
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5556
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5560
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5564
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5572
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5580
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5588
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5592
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5611
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5615
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5621
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5626
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5630
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5634
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5644
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5652
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5656
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5660
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5678
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5687
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5692
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5709
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5715
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5719
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5725
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5737
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5761
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5784
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5803
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5811
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5817
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5821
		{
			yyVAL.str = yyDollar[1].str
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5831
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5837
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5843
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5857
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5861
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5873
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5877
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5881
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5899
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5905
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5909
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5922
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5928
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5932
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5938
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5942
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5954
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5958
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5967
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5971
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5975
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5979
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5983
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5987
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6004
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6019
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6023
		{
			yyVAL.str = yyDollar[1].str
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6029
		{
			yyVAL.str = ""
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6033
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6039
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6058
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6065
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6088
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6094
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6104
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6108
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6112
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6116
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6121
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6128
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6132
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6136
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6145
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6150
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6154
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6170
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6176
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6180
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6188
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6192
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6196
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6200
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6204
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6208
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6212
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6216
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6220
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6224
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6270
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6279
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6287
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6296
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6309
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6313
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6317
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6326
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6335
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6341
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6345
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6351
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6361
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6378
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6395
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6433
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6462
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6477
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6494
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6509
		{
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6515
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6519
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6523
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6529
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6533
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6545
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6549
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6562
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6575
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6582
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6587
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6591
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6596
		{
			yyVAL.str = ","
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6600
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6619
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6649
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6658
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6688
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6708
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6728
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6738
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6748
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6758
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6795
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6819
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6837
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6845
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6854
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6875
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6887
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6898
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6920
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6956
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6968
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6980
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7006
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7013
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7025
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7033
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7041
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7052
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7061
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7070
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7078
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7088
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7096
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7120
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7139
		{
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7141
		{
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7182
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7193
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7197
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7201
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7216
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7222
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7226
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7241
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7327
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7331
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7357
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7363
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7367
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7374
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7378
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7382
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7404
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7408
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7412
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7418
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7440
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7453
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7478
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7492
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7503
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7514
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7519
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7537
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7549
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7600
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7626
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7639
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7652
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7678
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7706
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7733
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7775
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7852
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7872
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7892
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7928
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7980
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7992
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8004
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8016
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8028
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8052
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8064
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8076
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8088
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8101
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8114
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8129
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8137
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8146
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8156
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8179
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8184
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8190
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8197
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8201
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8206
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8210
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8216
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8222
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8229
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8236
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8245
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8252
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8259
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8282
		{
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8294
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const CONNECTOR = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const DECODE = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const QUERY_RESULT = 57920

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"DECODE",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10360

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 698,
	-2, 679,
	-1, 132,
	233, 1032,
	235, 955,
	-2, 996,
	-1, 155,
	42, 517,
	235, 517,
	262, 524,
	263, 524,
	451, 517,
	-2, 550,
	-1, 191,
	599, 1744,
	-2, 433,
	-1, 526,
	314, 133,
	425, 133,
	-2, 1656,
	-1, 590,
	81, 1453,
	-2, 1798,
	-1, 591,
	81, 1471,
	-2, 1769,
	-1, 595,
	81, 1472,
	-2, 1797,
	-1, 621,
	81, 1383,
	-2, 1866,
	-1, 622,
	81, 1384,
	-2, 1865,
	-1, 623,
	81, 1385,
	-2, 1855,
	-1, 624,
	81, 1829,
	-2, 1850,
	-1, 625,
	81, 1830,
	-2, 1851,
	-1, 626,
	81, 1831,
	-2, 1857,
	-1, 627,
	81, 1832,
	-2, 1839,
	-1, 628,
	81, 1833,
	-2, 1848,
	-1, 629,
	81, 1834,
	-2, 1858,
	-1, 630,
	81, 1835,
	-2, 1859,
	-1, 631,
	81, 1836,
	-2, 1864,
	-1, 632,
	81, 1837,
	-2, 1869,
	-1, 633,
	81, 1838,
	-2, 1870,
	-1, 635,
	81, 1450,
	-2, 1644,
	-1, 639,
	81, 1455,
	-2, 1657,
	-1, 642,
	81, 1459,
	-2, 1675,
	-1, 646,
	81, 1463,
	-2, 1715,
	-1, 647,
	81, 1464,
	-2, 1793,
	-1, 655,
	81, 1474,
	-2, 1778,
	-1, 656,
	81, 1475,
	-2, 1822,
	-1, 657,
	81, 1476,
	-2, 1788,
	-1, 658,
	81, 1477,
	-2, 1812,
	-1, 669,
	81, 1361,
	-2, 1860,
	-1, 670,
	81, 1362,
	-2, 1861,
	-1, 671,
	81, 1363,
	-2, 1862,
	-1, 675,
	21, 699,
	-2, 662,
	-1, 756,
	446, 550,
	447, 550,
	-2, 518,
	-1, 800,
	122, 1644,
	133, 1644,
	153, 1644,
	-2, 1619,
	-1, 904,
	21, 699,
	-2, 662,
	-1, 1004,
	21, 698,
	-2, 1258,
	-1, 1123,
	513, 997,
	514, 997,
	-2, 873,
	-1, 1377,
	81, 1521,
	-2, 1795,
	-1, 1378,
	81, 1522,
	-2, 1796,
	-1, 1517,
	82, 845,
	-2, 851,
	-1, 1901,
	82, 1605,
	154, 1605,
	-2, 1780,
	-1, 1902,
	82, 1605,
	154, 1605,
	-2, 1779,
	-1, 1903,
	82, 1583,
	154, 1583,
	-2, 1766,
	-1, 1904,
	82, 1584,
	154, 1584,
	-2, 1771,
	-1, 1905,
	82, 1585,
	154, 1585,
	-2, 1703,
	-1, 1906,
	82, 1586,
	154, 1586,
	-2, 1697,
	-1, 1907,
	82, 1587,
	154, 1587,
	-2, 1635,
	-1, 1908,
	82, 1588,
	154, 1588,
	-2, 1768,
	-1, 1909,
	82, 1589,
	154, 1589,
	-2, 1701,
	-1, 1910,
	82, 1590,
	154, 1590,
	-2, 1696,
	-1, 1911,
	82, 1591,
	154, 1591,
	-2, 1689,
	-1, 1913,
	82, 1594,
	154, 1594,
	-2, 1812,
	-1, 1914,
	82, 1574,
	154, 1574,
	-2, 1798,
	-1, 1915,
	82, 1603,
	154, 1603,
	-2, 1769,
	-1, 1916,
	82, 1603,
	154, 1603,
	-2, 1797,
	-1, 1917,
	82, 1603,
	154, 1603,
	-2, 1658,
	-1, 1918,
	82, 1601,
	154, 1601,
	-2, 1788,
	-1, 1919,
	82, 1598,
	154, 1598,
	-2, 1680,
	-1, 1920,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1634,
	-1, 1921,
	81, 1556,
	82, 1556,
	154, 1556,
	383, 1556,
	384, 1556,
	385, 1556,
	-2, 1636,
	-1, 1922,
	81, 1559,
	82, 1559,
	154, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	-2, 1770,
	-1, 1923,
	81, 1561,
	82, 1561,
	154, 1561,
	383, 1561,
	384, 1561,
	385, 1561,
	-2, 1753,
	-1, 1924,
	81, 1563,
	82, 1563,
	154, 1563,
	383, 1563,
	384, 1563,
	385, 1563,
	-2, 1702,
	-1, 1925,
	81, 1565,
	82, 1565,
	154, 1565,
	383, 1565,
	384, 1565,
	385, 1565,
	-2, 1685,
	-1, 1926,
	81, 1566,
	82, 1566,
	154, 1566,
	383, 1566,
	384, 1566,
	385, 1566,
	-2, 1686,
	-1, 1927,
	81, 1568,
	82, 1568,
	154, 1568,
	383, 1568,
	384, 1568,
	385, 1568,
	-2, 1633,
	-1, 1928,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1663,
	-1, 1929,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1676,
	-1, 1930,
	82, 1611,
	154, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	-2, 1659,
	-1, 1931,
	82, 1611,
	154, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	-2, 1718,
	-1, 1932,
	82, 1608,
	154, 1608,
	383, 1608,
	384, 1608,
	385, 1608,
	-2, 1738,
	-1, 1948,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	275, 990,
	-2, 983,
	-1, 2087,
	21, 698,
	-2, 792,
	-1, 2284,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	275, 990,
	-2, 984,
	-1, 2304,
	79, 608,
	154, 608,
	-2, 1145,
	-1, 2641,
	191, 990,
	299, 1226,
	-2, 1198,
	-1, 2782,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1088,
	-1, 2784,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1088,
	-1, 2794,
	79, 608,
	154, 608,
	-2, 1146,
	-1, 2802,
	191, 990,
	299, 1226,
	-2, 1199,
	-1, 2929,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1089,
	-1, 3291,
	82, 1050,
	154, 1050,
	-2, 990,
	-1, 3295,
	82, 1050,
	154, 1050,
	-2, 990,
	-1, 3309,
	82, 1054,
	154, 1054,
	-2, 990,
	-1, 3314,
	82, 1055,
	154, 1055,
	-2, 990,
}

const yyPrivate = 57344

const yyLast = 38391

var yyAct = [...]int{
	557, 1598, 3295, 3294, 3303, 3274, 182, 1296, 1358, 535,
	3166, 537, 559, 3227, 530, 3192, 3245, 3174, 2659, 3175,
	545, 2877, 3086, 1876, 2969, 3100, 2816, 1037, 3078, 1354,
	2882, 1217, 2722, 3104, 2912, 2913, 2910, 3004, 587, 2723,
	442, 3039, 799, 676, 2880, 2293, 2778, 1286, 2994, 3087,
	449, 3089, 454, 454, 539, 1552, 2762, 2917, 454, 470,
	479, 1158, 2307, 479, 1989, 1361, 2928, 2609, 2872, 2748,
	167, 2803, 2420, 2421, 2931, 1684, 1687, 2593, 2751, 2403,
	2343, 2656, 2638, 1652, 2413, 2607, 2081, 2720, 2419, 2289,
	1992, 2645, 1781, 1750, 2691, 2708, 2442, 1899, 2416, 2577,
	2275, 2574, 484, 2572, 2610, 1699, 2644, 490, 1897, 1889,
	2285, 2479, 528, 1960, 1497, 1880, 2323, 1277, 1210, 898,
	529, 2065, 1759, 1758, 1724, 534, 2129, 2516, 1133, 1680,
	1751, 1131, 1879, 2462, 1655, 732, 2082, 1295, 2070, 1653,
	1777, 2259, 55, 1282, 1581, 805, 2325, 1990, 1776, 1590,
	2264, 178, 8, 177, 7, 1505, 1959, 6, 1527, 442,
	1290, 2146, 852, 1352, 2191, 1809, 1778, 1251, 36, 538,
	2109, 1895, 448, 1226, 114, 1196, 1939, 2221, 1287, 1166,
	793, 1985, 182, 1564, 182, 1147, 843, 844, 1563, 2612,
	2611, 527, 1391, 1407, 837, 838, 1788, 2222, 763, 842,
	546, 529, 1343, 26, 35, 803, 1754, 15, 915, 1740,
	13, 1714, 1757, 1351, 1167, 1258, 536, 2089, 792, 1526,
	441, 1195, 14, 463, 731, 673, 32, 476, 1193, 1414,
	1413, 492, 466, 493, 23, 16, 1159, 168, 10, 1250,
	1076, 478, 1143, 1107, 709, 1554, 1102, 164, 729, 1785,
	713, 161, 839, 840, 841, 3029, 1795, 751, 2247, 2247,
	1357, 675, 475, 2247, 1038, 2765, 471, 2715, 2180, 473,
	2135, 2132, 2133, 1510, 2130, 1265, 1261, 835, 836, 166,
	836, 474, 1093, 1179, 836, 472, 450, 2870, 2475, 1263,
	973, 974, 975, 972, 2473, 1729, 3000, 165, 51, 157,
	133, 2019, 2995, 2873, 482, 809, 2721, 459, 973, 974,
	975, 972, 1501, 1032, 3091, 158, 1753, 674, 8, 2027,
	7, 3157, 150, 684, 834, 936, 159, 165, 2294, 165,
	51, 157, 133, 2292, 165, 2749, 165, 806, 2899, 2167,
	165, 2806, 165, 3050, 1782, 113, 165, 2175, 1534, 165,
	824, 1094, 2894, 3122, 1310, 1118, 1117, 1536, 1303, 488,
	101, 2540, 165, 51, 157, 133, 162, 808, 489, 1793,
	1521, 1123, 1943, 1344, 1448, 2494, 1348, 2107, 970, 2818,
	165, 51, 157, 133, 1307, 2449, 2450, 3051, 1300, 1697,
	2487, 2108, 2809, 2448, 113, 2897, 162, 113, 162, 1197,
	1347, 1199, 2804, 162, 1328, 1309, 1095, 2826, 2827, 1302,
	1664, 162, 2147, 2805, 2890, 162, 1155, 1175, 162, 664,
	1176, 663, 665, 666, 685, 667, 668, 2095, 3210, 951,
	2094, 162, 952, 2096, 781, 1665, 1666, 1511, 1512, 1164,
	1165, 677, 118, 119, 2261, 120, 121, 772, 3208, 162,
	2810, 1162, 963, 454, 2262, 1161, 1164, 1165, 3178, 3179,
	954, 1577, 1360, 454, 908, 968, 802, 801, 3094, 3153,
	3093, 3152, 3092, 3151, 3094, 3093, 3156, 3092, 1867, 1349,
	3002, 479, 479, 2724, 454, 3196, 3197, 3080, 3080, 819,
	815, 810, 814, 817, 3005, 3006, 3007, 3008, 2480, 3083,
	2998, 2260, 1346, 903, 905, 2481, 1178, 2482, 2724, 1363,
	132, 156, 163, 2162, 99, 1264, 1262, 822, 909, 2359,
	1675, 813, 918, 3097, 2733, 1681, 2752, 1789, 1671, 1339,
	2588, 2759, 155, 149, 148, 949, 2059, 1737, 846, 57,
	2904, 2825, 132, 1993, 163, 2889, 976, 2267, 1006, 1938,
	3024, 720, 2891, 1271, 1270, 1005, 2507, 3159, 3160, 2578,
	2828, 2250, 3096, 1014, 155, 2505, 918, 2586, 2814, 966,
	967, 965, 820, 523, 777, 902, 525, 776, 2172, 823,
	907, 524, 2025, 939, 2871, 2474, 1021, 2407, 2062, 908,
	2811, 2815, 2813, 2812, 2061, 931, 811, 3027, 950, 2066,
	151, 152, 153, 804, 2901, 3177, 904, 3203, 956, 1153,
	2602, 957, 809, 3047, 2582, 1794, 2620, 1345, 3110, 821,
	1362, 3212, 2583, 2584, 2657, 2658, 160, 2300, 2820, 2821,
	2412, 1187, 2833, 1695, 1696, 481, 476, 476, 2585, 959,
	2840, 480, 3168, 1041, 806, 1945, 109, 3105, 3207, 3288,
	154, 3304, 110, 1142, 3236, 3243, 961, 962, 1092, 812,
	2843, 1177, 3023, 782, 2970, 2971, 2972, 2974, 2973, 2960,
	2828, 475, 475, 953, 808, 471, 471, 3268, 473, 473,
	778, 2036, 2807, 809, 1798, 1800, 1801, 2035, 2819, 2949,
	474, 474, 1783, 2661, 472, 472, 1100, 449, 1103, 3028,
	911, 912, 2735, 2511, 922, 1042, 1783, 2246, 454, 111,
	2273, 1783, 920, 919, 955, 806, 1073, 2056, 2057, 928,
	50, 773, 924, 925, 3164, 3165, 2580, 3168, 1369, 1372,
	1373, 732, 1140, 2955, 818, 2279, 2280, 2281, 2282, 1370,
	1206, 1205, 929, 780, 836, 808, 1139, 836, 1012, 836,
	836, 3158, 960, 836, 836, 1138, 920, 919, 1008, 1009,
	1010, 1011, 3305, 2131, 1784, 2600, 1796, 3048, 3049, 52,
	913, 816, 3299, 2294, 477, 3248, 3275, 958, 454, 3040,
	1189, 1266, 1163, 1157, 1156, 899, 442, 442, 2557, 2786,
	1995, 1810, 477, 1164, 1165, 442, 442, 1988, 2868, 1221,
	1221, 2111, 454, 3311, 775, 674, 134, 774, 1108, 2898,
	488, 3077, 1160, 1164, 1165, 2005, 2824, 1194, 779, 2444,
	2446, 479, 1103, 449, 2653, 1154, 1254, 1254, 1219, 1219,
	2168, 1223, 2099, 2589, 52, 2023, 134, 182, 134, 2900,
	1253, 1253, 1786, 134, 3213, 134, 442, 2266, 2176, 134,
	1682, 134, 52, 3025, 1660, 134, 930, 487, 134, 2508,
	2579, 1050, 1051, 1136, 1998, 1228, 112, 39, 1141, 1101,
	1114, 134, 936, 49, 5, 1151, 2823, 116, 117, 2510,
	2654, 2660, 2567, 1169, 1170, 1121, 1172, 1173, 1174, 134,
	2360, 2601, 2361, 2362, 1120, 1294, 2905, 1297, 3298, 1272,
	1674, 804, 1305, 2270, 2271, 1119, 453, 453, 1672, 1340,
	483, 3249, 461, 1078, 1797, 1215, 1216, 2581, 2269, 722,
	1799, 723, 1326, 2962, 1994, 1080, 2357, 2657, 2658, 1996,
	1149, 1150, 1128, 2951, 2518, 2517, 1221, 2950, 1221, 908,
	2249, 2459, 2460, 1883, 1109, 1110, 1111, 1112, 1113, 1105,
	1115, 2378, 2379, 675, 1098, 935, 1122, 1144, 1148, 1148,
	1148, 2956, 2957, 1188, 1371, 1311, 1201, 1203, 2387, 1885,
	1884, 1275, 1106, 1278, 1279, 1213, 1214, 3310, 2008, 1130,
	1144, 1144, 2445, 1997, 1988, 2010, 1364, 1365, 1366, 1367,
	1368, 1514, 1999, 1096, 1097, 1246, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1180, 1181,
	1515, 1168, 1402, 1403, 1171, 1284, 1285, 1882, 2004, 1412,
	1513, 1204, 2002, 726, 727, 728, 1267, 687, 1321, 1322,
	1409, 1410, 1411, 1461, 2048, 1451, 1452, 1453, 1445, 3246,
	3247, 809, 2009, 688, 2936, 809, 1455, 724, 1467, 3251,
	3317, 1468, 1229, 1292, 2079, 1359, 1892, 1470, 1555, 971,
	1239, 459, 1244, 1555, 1477, 1478, 1255, 1301, 1245, 1289,
	773, 1308, 1293, 2377, 1256, 3316, 3307, 2655, 1356, 1893,
	1894, 2305, 476, 2688, 1717, 3016, 936, 2149, 3017, 2625,
	1499, 2684, 1335, 3289, 1503, 678, 1337, 1506, 2775, 1870,
	1104, 2167, 678, 3011, 1374, 827, 832, 833, 454, 2663,
	1525, 1221, 1529, 1530, 2022, 1532, 1533, 475, 691, 1941,
	1325, 471, 971, 454, 473, 1342, 1221, 1334, 1324, 1842,
	732, 1331, 1841, 1553, 1330, 1495, 474, 3284, 1221, 3278,
	472, 3019, 1313, 3272, 1189, 1312, 1317, 971, 3308, 470,
	675, 3277, 1498, 775, 2080, 1460, 774, 2255, 1333, 1332,
	1443, 1444, 1329, 1447, 2306, 1791, 1350, 721, 1576, 690,
	1355, 1462, 3018, 693, 692, 3255, 1582, 1582, 2080, 1189,
	3229, 1189, 1189, 2252, 1469, 454, 1471, 1525, 1525, 2154,
	3186, 1221, 1649, 1650, 1662, 2080, 1353, 1821, 1524, 1393,
	2688, 3180, 1580, 2111, 971, 783, 3132, 3071, 442, 3285,
	1221, 1791, 2388, 2390, 2391, 2392, 2389, 1400, 1401, 2306,
	1782, 1531, 1715, 1791, 3070, 1499, 973, 974, 975, 972,
	1499, 1499, 1663, 1940, 3066, 454, 1525, 1221, 971, 1704,
	3065, 454, 454, 1708, 1709, 1074, 3064, 1791, 1983, 1712,
	1713, 3063, 3230, 3031, 1719, 1446, 973, 974, 975, 972,
	1600, 182, 3187, 936, 182, 182, 1875, 182, 1561, 1562,
	1846, 1874, 1820, 3032, 1727, 1644, 1645, 1730, 3032, 3072,
	1733, 1773, 1472, 1735, 1693, 1571, 1572, 1129, 1405, 1207,
	1145, 1690, 1691, 829, 830, 831, 1964, 3231, 2797, 2626,
	1496, 2923, 2538, 1461, 1461, 1761, 3032, 900, 2847, 2464,
	1461, 1461, 3032, 2672, 1676, 1768, 2308, 906, 3032, 1502,
	1668, 1583, 1670, 3032, 1701, 3032, 2170, 1565, 2603, 1567,
	1568, 1728, 1688, 1689, 1731, 1732, 2169, 1734, 927, 1553,
	2161, 2439, 1573, 1221, 1780, 1703, 1706, 1707, 1520, 1574,
	1683, 1556, 1557, 1144, 1550, 1341, 1549, 973, 974, 975,
	972, 1535, 1585, 1537, 1538, 1539, 1980, 1570, 1837, 1586,
	1587, 1528, 1566, 2924, 2228, 2220, 1822, 1772, 1148, 2758,
	2111, 1560, 2181, 2165, 3012, 2673, 1545, 944, 3013, 2158,
	946, 1722, 2156, 2151, 1774, 1519, 2144, 1569, 1558, 2983,
	2604, 1762, 1803, 1873, 2142, 1314, 1146, 2140, 1807, 1808,
	1648, 1651, 1575, 2080, 2138, 1578, 1579, 1018, 947, 921,
	1813, 1584, 1667, 1817, 1669, 1756, 1677, 901, 1473, 1474,
	1475, 934, 1756, 1479, 1480, 1481, 1482, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 809, 971, 971, 1995, 1998,
	1702, 1528, 809, 1963, 971, 1964, 3016, 933, 901, 3017,
	1871, 2152, 1852, 1828, 2157, 2152, 896, 1723, 2145, 1698,
	1851, 1835, 894, 1725, 1840, 1831, 2143, 806, 2845, 2139,
	1692, 1847, 988, 1849, 806, 1830, 2139, 476, 2630, 1848,
	1856, 1742, 1829, 940, 1853, 1854, 1855, 1353, 2502, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 808, 1790, 1318,
	2130, 3111, 3019, 2621, 808, 2937, 1763, 528, 942, 908,
	1933, 454, 475, 1765, 2789, 1964, 471, 3264, 1771, 473,
	945, 948, 1870, 934, 971, 3252, 454, 809, 454, 454,
	454, 474, 971, 3018, 1775, 472, 971, 971, 2787, 2713,
	1961, 1770, 1766, 2020, 1767, 3112, 941, 971, 2091, 2938,
	1968, 1189, 1116, 3030, 971, 2953, 2952, 1811, 2790, 806,
	1965, 1973, 2764, 2689, 1450, 1449, 1802, 1999, 1450, 1449,
	1791, 1319, 1994, 1988, 1993, 1189, 1991, 1996, 1804, 2622,
	1211, 1134, 2788, 560, 570, 1135, 1393, 1209, 2015, 808,
	1815, 1212, 561, 1145, 569, 562, 566, 565, 563, 564,
	2682, 2677, 2674, 1805, 1806, 2188, 2595, 2409, 987, 986,
	996, 997, 989, 990, 991, 992, 993, 994, 995, 988,
	901, 943, 1185, 2623, 1184, 1900, 1186, 1844, 1190, 1191,
	1192, 1997, 2277, 2021, 996, 997, 989, 990, 991, 992,
	993, 994, 995, 988, 1935, 2248, 1227, 567, 2084, 2084,
	1662, 2084, 991, 992, 993, 994, 995, 988, 1234, 1235,
	1236, 1237, 1238, 2155, 1240, 1241, 1242, 1243, 2101, 442,
	442, 1248, 1249, 1499, 1483, 1499, 1125, 908, 1476, 568,
	1866, 1868, 1869, 1221, 454, 1124, 1208, 1399, 973, 974,
	975, 972, 1976, 1499, 1499, 2124, 454, 910, 1886, 2716,
	689, 908, 449, 1396, 1398, 1395, 1254, 1397, 1662, 1146,
	1982, 2119, 2105, 2121, 1408, 1942, 1816, 182, 1726, 1408,
	1253, 989, 990, 991, 992, 993, 994, 995, 988, 1523,
	1259, 1041, 1726, 2088, 2097, 2086, 2098, 2090, 2466, 1969,
	973, 974, 975, 972, 1977, 3012, 3150, 1978, 972, 3088,
	2965, 2134, 2964, 1833, 2102, 2103, 1979, 2483, 1981, 973,
	974, 975, 972, 2163, 2000, 2001, 1780, 2006, 2714, 2349,
	1952, 1987, 1986, 1221, 2348, 1221, 2331, 1221, 973, 974,
	975, 972, 908, 975, 972, 1148, 1259, 2125, 2329, 2907,
	2908, 2118, 809, 1042, 3267, 2944, 1020, 1970, 1971, 3293,
	2902, 2113, 1465, 2756, 2173, 2399, 3281, 1974, 1975, 1019,
	2397, 3237, 1221, 2207, 3232, 2063, 1466, 1900, 3170, 1832,
	3141, 2189, 694, 3113, 806, 3056, 3052, 2395, 2214, 2092,
	2208, 2209, 2996, 1221, 973, 974, 975, 972, 2211, 2212,
	2940, 1219, 2939, 2206, 2216, 973, 974, 975, 972, 1201,
	1203, 2217, 2791, 2755, 808, 3266, 2903, 2106, 2198, 2757,
	2587, 2398, 1219, 2498, 2215, 2478, 2396, 973, 974, 975,
	972, 2477, 2114, 2117, 2115, 1499, 2190, 2382, 2241, 2242,
	1506, 2218, 908, 2394, 2381, 2380, 893, 889, 890, 891,
	892, 2372, 2203, 2366, 2202, 2201, 2199, 2026, 2177, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2192, 2192, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2179,
	2049, 2050, 2051, 2052, 2053, 2174, 2054, 2160, 2186, 2384,
	2365, 1221, 2166, 2164, 2274, 2364, 2171, 2239, 2363, 1745,
	1525, 2290, 1744, 454, 973, 974, 975, 972, 1743, 2304,
	2116, 3171, 1522, 2126, 1739, 2310, 1738, 1315, 2200, 2123,
	1091, 2182, 2183, 973, 974, 975, 972, 1540, 2276, 2763,
	2414, 2319, 1260, 2197, 2195, 2573, 908, 973, 974, 975,
	972, 3202, 2878, 3198, 2328, 2383, 3154, 523, 2256, 3099,
	525, 908, 908, 908, 1582, 524, 2911, 908, 2253, 2339,
	2340, 2341, 908, 3075, 2345, 2346, 3060, 2347, 3055, 3054,
	1279, 3026, 2997, 2286, 2946, 2920, 2906, 2185, 2876, 2223,
	2224, 2243, 2874, 2854, 2240, 2229, 2851, 2849, 2287, 1588,
	2084, 2404, 2754, 1353, 979, 980, 981, 982, 983, 984,
	985, 977, 2753, 2750, 2400, 2301, 2740, 2683, 1600, 2679,
	1284, 1285, 442, 2670, 1819, 2669, 2257, 1525, 908, 1662,
	1662, 1662, 1662, 2596, 2564, 2311, 2563, 2562, 1881, 2509,
	908, 1662, 2326, 2476, 2084, 2453, 2326, 572, 115, 1700,
	2322, 2393, 1292, 115, 2385, 1700, 1700, 1705, 2312, 2272,
	1221, 2204, 2205, 2375, 2531, 2333, 2316, 2317, 1289, 2373,
	2369, 1293, 454, 454, 8, 2303, 7, 3306, 2334, 2335,
	2309, 2368, 2367, 2338, 620, 619, 3119, 182, 2344, 1872,
	1747, 2213, 182, 2321, 1741, 1509, 1508, 2324, 973, 974,
	975, 972, 2330, 460, 1316, 2470, 115, 2472, 2337, 1049,
	1045, 3103, 2435, 1461, 1044, 1461, 3115, 897, 2493, 2318,
	686, 3009, 2497, 2530, 2927, 1499, 2784, 2783, 1221, 1818,
	1499, 2504, 165, 2782, 157, 133, 2374, 973, 974, 975,
	972, 2774, 2739, 2728, 2422, 2719, 1877, 1878, 2314, 973,
	974, 975, 972, 2718, 2707, 2706, 2422, 2467, 2631, 2536,
	2405, 1528, 2471, 2529, 2521, 2514, 2520, 2515, 2423, 2424,
	2425, 2426, 2461, 2437, 2410, 2436, 2254, 2434, 2313, 2251,
	2438, 2141, 2315, 973, 974, 975, 972, 1498, 2535, 2447,
	2137, 2454, 2492, 675, 2136, 1857, 2327, 1850, 1845, 1843,
	2263, 162, 2408, 973, 974, 975, 972, 2490, 2451, 2524,
	807, 2526, 2468, 2496, 115, 2469, 908, 2465, 973, 974,
	975, 972, 1839, 1838, 2576, 2486, 1836, 2506, 1827, 115,
	1824, 115, 1823, 1746, 2591, 2489, 2501, 1494, 2491, 454,
	2484, 987, 986, 996, 997, 989, 990, 991, 992, 993,
	994, 995, 988, 908, 809, 1493, 1492, 908, 908, 908,
	1464, 809, 1463, 1454, 165, 1233, 1662, 1961, 2500, 2629,
	2513, 1231, 3263, 2512, 1434, 2633, 2522, 2523, 3257, 3244,
	2488, 3241, 2519, 2355, 2356, 3239, 2643, 2495, 2646, 2599,
	2646, 2646, 2527, 2528, 3140, 908, 1039, 2370, 2371, 1825,
	3073, 3062, 3057, 1274, 2978, 2963, 2525, 2650, 2959, 2665,
	2884, 2566, 2558, 2862, 2860, 2835, 1221, 1221, 2834, 2286,
	2662, 2406, 2565, 2561, 2568, 2831, 2830, 2766, 2664, 2615,
	2614, 1283, 1900, 162, 1276, 1934, 973, 974, 975, 972,
	1132, 2401, 2616, 2617, 2618, 1219, 1219, 2666, 2667, 2627,
	1951, 2332, 1953, 1954, 1955, 2598, 2592, 2541, 2542, 2298,
	2297, 809, 454, 2543, 2544, 2545, 2546, 2576, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2651, 2642, 1525, 1525,
	2628, 2641, 2624, 2296, 1288, 1972, 999, 2571, 1003, 1291,
	1280, 973, 974, 975, 972, 2238, 2647, 2648, 3282, 2652,
	2150, 2100, 2055, 1962, 1000, 1002, 998, 2636, 1001, 987,
	986, 996, 997, 989, 990, 991, 992, 993, 994, 995,
	988, 1950, 1394, 809, 162, 2207, 1710, 1518, 1517, 1430,
	1338, 1304, 1281, 1075, 2717, 1427, 3218, 2883, 1072, 1429,
	1426, 1428, 1432, 1433, 1071, 1070, 1069, 1431, 1068, 2637,
	1067, 987, 986, 996, 997, 989, 990, 991, 992, 993,
	994, 995, 988, 973, 974, 975, 972, 2671, 2676, 2675,
	2680, 454, 2681, 2837, 1066, 1065, 2685, 2686, 1064, 1063,
	2696, 1062, 2698, 2737, 1061, 1060, 1059, 2678, 679, 680,
	681, 682, 1058, 678, 1057, 2703, 2704, 2705, 2700, 973,
	974, 975, 972, 1056, 1055, 1054, 2736, 1053, 1227, 973,
	974, 975, 972, 2738, 1052, 115, 115, 807, 2632, 1048,
	1700, 2712, 2634, 2635, 986, 996, 997, 989, 990, 991,
	992, 993, 994, 995, 988, 2649, 1047, 1046, 1043, 1036,
	1035, 2729, 2534, 1033, 1032, 1031, 1030, 1029, 2730, 1028,
	3131, 2533, 2605, 2606, 2732, 1027, 1026, 1025, 1024, 2741,
	1023, 1022, 1017, 2770, 1232, 2290, 1016, 2731, 973, 974,
	975, 972, 1015, 938, 895, 2779, 908, 973, 974, 975,
	972, 2692, 2693, 3129, 2746, 2084, 1662, 2794, 1004, 1437,
	1438, 1439, 1440, 1441, 1442, 1435, 1436, 3127, 3125, 2832,
	1967, 908, 1947, 926, 2532, 3216, 2743, 3176, 2695, 2278,
	2643, 2112, 1749, 937, 908, 2697, 2428, 2431, 2429, 2427,
	2772, 2773, 2432, 2430, 908, 2745, 2687, 2864, 3292, 1221,
	973, 974, 975, 972, 2865, 2159, 2433, 2761, 2076, 2077,
	2153, 2699, 1126, 1547, 1548, 1525, 1542, 1543, 1544, 908,
	451, 2594, 2796, 1499, 2771, 100, 54, 2639, 1219, 2640,
	2846, 2781, 53, 2245, 1499, 2024, 2829, 2859, 2842, 2793,
	2861, 2792, 1636, 809, 2569, 182, 2822, 1268, 2867, 2237,
	2559, 2560, 2148, 2863, 2866, 2351, 1877, 1878, 908, 2178,
	1077, 2856, 2352, 2353, 2354, 2838, 2841, 1298, 1936, 2747,
	1711, 2836, 932, 455, 2844, 973, 974, 975, 972, 3095,
	2892, 456, 457, 2848, 2852, 2850, 809, 2800, 458, 2853,
	2613, 2236, 2857, 2570, 2320, 1081, 2858, 908, 1221, 1221,
	2839, 3189, 2258, 2855, 1957, 2235, 908, 1551, 3059, 1516,
	2344, 2668, 2776, 2064, 2930, 2869, 2930, 973, 974, 975,
	972, 1450, 1449, 1089, 1090, 2234, 2060, 1219, 2918, 2916,
	2879, 973, 974, 975, 972, 2422, 1647, 2295, 964, 1087,
	1088, 1221, 2893, 2302, 1085, 1086, 2945, 2895, 1183, 2233,
	2921, 973, 974, 975, 972, 1182, 2232, 2702, 2110, 454,
	1769, 908, 908, 1083, 1084, 908, 908, 1137, 1079, 3258,
	2918, 3162, 3147, 2922, 2422, 973, 974, 975, 972, 2933,
	2981, 2934, 973, 974, 975, 972, 2980, 2796, 2975, 2231,
	3145, 1553, 3106, 2988, 3085, 2967, 2968, 2829, 2947, 2976,
	2977, 2992, 2993, 2795, 2943, 3084, 3082, 2822, 2230, 2798,
	3074, 2991, 2799, 2914, 2990, 973, 974, 975, 972, 2875,
	2742, 2726, 1230, 2227, 2725, 3022, 2710, 460, 2011, 1082,
	2226, 2767, 2768, 2769, 973, 974, 975, 972, 2225, 3015,
	2984, 2709, 2463, 1555, 3220, 3219, 2986, 2885, 2985, 973,
	974, 975, 972, 2499, 115, 2779, 973, 974, 975, 972,
	3034, 3042, 2219, 1949, 973, 974, 975, 972, 3010, 1826,
	3014, 923, 3020, 3219, 3220, 2961, 2727, 2914, 2914, 2455,
	678, 2914, 2914, 169, 3, 1152, 62, 2, 973, 974,
	975, 972, 3033, 3261, 1198, 2093, 2456, 2457, 2210, 1694,
	1225, 3035, 1, 3038, 3043, 1507, 3045, 2187, 3044, 908,
	3036, 3037, 683, 1221, 2440, 3053, 115, 2441, 2701, 2443,
	115, 3259, 1787, 2411, 973, 974, 975, 972, 2058, 1937,
	3058, 115, 1404, 973, 974, 975, 972, 2590, 1127, 725,
	1456, 115, 1219, 3067, 3068, 1323, 987, 986, 996, 997,
	989, 990, 991, 992, 993, 994, 995, 988, 973, 974,
	975, 972, 3090, 908, 1021, 826, 917, 1320, 2941, 2942,
	916, 3081, 3079, 3107, 987, 986, 996, 997, 989, 990,
	991, 992, 993, 994, 995, 988, 914, 3102, 2072, 2075,
	2076, 2077, 2073, 908, 2074, 2078, 3098, 1406, 3101, 574,
	1221, 1752, 3116, 3134, 3137, 679, 680, 681, 682, 3109,
	678, 2925, 2926, 2402, 2376, 2067, 3117, 2987, 3188, 3124,
	3126, 3128, 3130, 3226, 3139, 2914, 3138, 3123, 3191, 1219,
	1336, 3133, 558, 3076, 3146, 3001, 3148, 3149, 3144, 1221,
	3143, 3142, 3003, 2881, 1792, 3114, 969, 2485, 747, 3172,
	611, 585, 2072, 2075, 2076, 2077, 2073, 3161, 2074, 2078,
	1034, 1306, 1299, 2597, 2539, 828, 584, 2760, 1219, 2268,
	3169, 3195, 2458, 3046, 825, 748, 1736, 2982, 2999, 2914,
	3181, 1269, 3182, 3194, 3183, 1273, 3184, 2935, 2785, 3185,
	2619, 2299, 3302, 908, 3291, 973, 974, 975, 972, 3199,
	3273, 3090, 3256, 3200, 3167, 3287, 3206, 3242, 2888, 2914,
	2886, 2887, 3235, 3163, 494, 1673, 440, 790, 3225, 2979,
	3214, 1748, 495, 3217, 3215, 3209, 3211, 1966, 3155, 3061,
	705, 3228, 1946, 706, 3233, 708, 908, 3221, 3222, 3223,
	3224, 2284, 2283, 1375, 3234, 978, 1392, 2555, 3238, 2556,
	3240, 1013, 533, 1814, 2265, 2817, 2452, 61, 60, 59,
	58, 3195, 3254, 1718, 190, 576, 189, 3250, 2909, 3136,
	908, 3193, 908, 3194, 1434, 556, 3253, 555, 3260, 554,
	3262, 553, 552, 2071, 3265, 2069, 1700, 2068, 1657, 1656,
	1716, 2342, 2336, 3228, 908, 3269, 2007, 3271, 2012, 3276,
	2537, 1589, 3280, 3283, 3173, 3120, 3286, 3121, 2958, 3204,
	2386, 1661, 1541, 2003, 1606, 3069, 2358, 1603, 1602, 2350,
	2954, 3290, 2948, 3297, 1633, 2288, 2777, 3301, 2929, 3300,
	2801, 2802, 2808, 1956, 851, 3309, 847, 849, 850, 848,
	2196, 3297, 3314, 3313, 3312, 1984, 3301, 2608, 1891, 3315,
	1890, 1888, 1359, 987, 986, 996, 997, 989, 990, 991,
	992, 993, 994, 995, 988, 1887, 1099, 3021, 2744, 1898,
	1896, 2694, 2184, 2690, 1760, 3108, 1504, 2244, 115, 1658,
	1654, 115, 115, 1948, 115, 2896, 1359, 1546, 1359, 698,
	1944, 3118, 98, 147, 48, 2734, 987, 986, 996, 997,
	989, 990, 991, 992, 993, 994, 995, 988, 89, 88,
	1359, 97, 145, 47, 174, 173, 176, 175, 172, 2127,
	807, 2128, 171, 1257, 1812, 170, 2932, 807, 672, 1430,
	38, 37, 33, 12, 11, 1427, 115, 34, 21, 1429,
	1426, 1428, 1432, 1433, 22, 20, 1327, 1431, 987, 986,
	996, 997, 989, 990, 991, 992, 993, 994, 995, 988,
	19, 25, 31, 30, 108, 107, 29, 106, 105, 104,
	103, 102, 28, 18, 42, 592, 41, 40, 9, 96,
	94, 27, 95, 92, 334, 93, 90, 73, 3201, 72,
	71, 86, 85, 84, 83, 82, 81, 547, 79, 80,
	746, 279, 70, 69, 304, 68, 67, 66, 91, 77,
	87, 78, 1004, 76, 75, 74, 65, 435, 64, 436,
	63, 131, 583, 130, 128, 363, 318, 129, 127, 126,
	125, 643, 651, 124, 123, 122, 43, 44, 45, 46,
	141, 140, 142, 540, 144, 146, 573, 620, 619, 560,
	570, 143, 138, 256, 188, 437, 136, 438, 561, 139,
	569, 562, 566, 565, 563, 564, 137, 635, 135, 56,
	17, 24, 4, 0, 531, 544, 0, 548, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1437,
	1438, 1439, 1440, 1441, 1442, 1435, 1436, 0, 0, 0,
	0, 541, 542, 0, 0, 0, 0, 593, 0, 543,
	0, 0, 588, 567, 571, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 568, 591, 595, 273, 657,
	589, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 658, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 394, 0,
	0, 641, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 590, 2966, 354, 336, 654, 532, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 2087, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 1458, 1457, 1459, 406,
	286, 239, 240, 446, 639, 332, 0, 0, 0, 0,
	653, 634, 636, 637, 640, 644, 645, 646, 647, 648,
	650, 652, 656, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 594, 0, 0, 322, 323, 324,
	325, 642, 0, 261, 417, 347, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 664, 638,
	663, 665, 666, 662, 667, 668, 649, 551, 0, 598,
	660, 659, 661, 0, 0, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 0, 346, 284, 867, 0, 627, 604,
	605, 606, 549, 607, 601, 602, 603, 628, 596, 624,
	625, 575, 599, 608, 623, 609, 626, 629, 630, 669,
	670, 615, 671, 612, 631, 622, 621, 610, 597, 632,
	633, 582, 577, 613, 614, 600, 616, 617, 618, 550,
	578, 579, 580, 581, 0, 0, 0, 402, 403, 404,
	425, 388, 0, 443, 0, 165, 51, 157, 133, 775,
	0, 0, 774, 0, 0, 447, 439, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 113, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 101, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 738, 0, 0, 0, 0, 875, 879, 881, 883,
	885, 886, 888, 0, 893, 889, 890, 891, 892, 0,
	870, 871, 872, 873, 853, 854, 876, 0, 856, 0,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	868, 874, 0, 0, 0, 0, 0, 0, 0, 878,
	880, 882, 884, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 758, 1661, 1661, 1661, 1661,
	118, 119, 0, 120, 121, 0, 0, 0, 1661, 0,
	0, 757, 0, 0, 0, 0, 869, 0, 0, 0,
	0, 0, 733, 0, 505, 504, 511, 501, 0, 0,
	0, 0, 1434, 737, 768, 0, 508, 509, 0, 510,
	514, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 115, 0, 0, 764, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 156,
	163, 0, 99, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	155, 149, 148, 765, 769, 0, 523, 57, 0, 525,
	0, 0, 0, 0, 524, 0, 0, 0, 0, 0,
	0, 754, 0, 752, 756, 772, 0, 0, 0, 753,
	750, 749, 0, 755, 740, 741, 739, 742, 743, 744,
	745, 0, 770, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 767, 0, 867, 2193,
	2194, 0, 0, 0, 0, 0, 0, 0, 151, 152,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 160, 0, 115, 1430, 0, 0,
	0, 0, 0, 1427, 0, 0, 0, 1429, 1426, 1428,
	1432, 1433, 0, 0, 109, 1431, 0, 0, 154, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 0, 497, 499, 498,
	0, 0, 0, 0, 0, 0, 0, 503, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	0, 761, 0, 0, 0, 0, 522, 111, 855, 0,
	0, 0, 845, 500, 0, 0, 0, 491, 50, 0,
	0, 0, 0, 0, 0, 877, 0, 0, 875, 879,
	881, 883, 885, 886, 888, 0, 893, 889, 890, 891,
	892, 0, 870, 871, 872, 873, 853, 854, 876, 0,
	856, 0, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 868, 874, 0, 0, 0, 52, 0, 0,
	0, 878, 880, 882, 884, 887, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439,
	1440, 1441, 1442, 1435, 1436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 506, 512,
	0, 513, 515, 0, 0, 516, 517, 518, 0, 0,
	520, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 0, 0, 112, 39, 334, 0, 0, 0,
	0, 49, 0, 0, 0, 116, 117, 0, 0, 547,
	0, 0, 0, 279, 1500, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 583, 0, 0, 363, 318, 0,
	0, 0, 0, 643, 651, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 540, 0, 0, 573, 620,
	619, 560, 570, 0, 0, 256, 188, 437, 115, 438,
	561, 0, 569, 562, 566, 565, 563, 564, 0, 635,
	0, 0, 0, 0, 0, 0, 531, 544, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 541, 542, 0, 0, 0, 0, 593,
	0, 543, 0, 1661, 1686, 567, 571, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 568, 591, 595,
	273, 657, 589, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 658, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 877, 0, 0,
	394, 0, 115, 641, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 590, 0, 354, 336, 654, 532,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 639, 332, 0, 0,
	0, 0, 653, 634, 636, 637, 640, 644, 645, 646,
	647, 648, 650, 652, 656, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 594, 0, 0, 322,
	323, 324, 325, 642, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	664, 638, 663, 665, 666, 662, 667, 668, 649, 551,
	0, 598, 660, 659, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	627, 604, 605, 606, 549, 607, 601, 602, 603, 628,
	596, 624, 625, 575, 599, 608, 623, 609, 626, 629,
	630, 669, 670, 615, 671, 612, 631, 622, 621, 610,
	597, 632, 633, 582, 577, 613, 614, 600, 616, 617,
	618, 550, 578, 579, 580, 581, 165, 592, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 547,
	0, 0, 0, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 1007, 0, 0, 363, 318, 0,
	0, 0, 0, 643, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 573, 620,
	619, 560, 570, 0, 0, 256, 188, 437, 0, 438,
	561, 0, 569, 562, 566, 565, 563, 564, 0, 635,
	0, 0, 0, 0, 0, 0, 531, 544, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 0, 0, 0, 0, 593,
	0, 543, 0, 0, 588, 567, 571, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 568, 591, 595,
	273, 657, 589, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 658, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	394, 0, 0, 641, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 590, 0, 354, 336, 654, 532,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 639, 332, 0, 0,
	0, 0, 653, 634, 636, 637, 640, 644, 645, 646,
	647, 648, 650, 652, 656, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 594, 0, 0, 322,
	323, 324, 325, 642, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	664, 638, 663, 665, 666, 662, 667, 668, 649, 551,
	0, 598, 660, 659, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 134, 346, 284, 0, 0,
	627, 604, 605, 606, 549, 607, 601, 602, 603, 628,
	596, 624, 625, 575, 599, 608, 623, 609, 626, 629,
	630, 669, 670, 615, 671, 612, 631, 622, 621, 610,
	597, 632, 633, 582, 577, 613, 614, 600, 616, 617,
	618, 550, 578, 579, 580, 581, 0, 592, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 547,
	0, 0, 0, 279, 3270, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 583, 0, 0, 363, 318, 0,
	0, 0, 0, 643, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 573, 620,
	619, 560, 570, 0, 0, 256, 188, 437, 0, 438,
	561, 0, 569, 562, 566, 565, 563, 564, 0, 635,
	0, 0, 0, 0, 0, 0, 531, 544, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 0, 0, 0, 0, 593,
	0, 543, 0, 0, 588, 567, 571, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 568, 591, 595,
	273, 657, 589, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 658, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	394, 0, 0, 641, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 590, 0, 354, 336, 654, 532,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 639, 332, 0, 0,
	0, 0, 653, 634, 636, 637, 640, 644, 645, 646,
	647, 648, 650, 652, 656, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 594, 0, 0, 322,
	323, 324, 325, 642, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	664, 638, 663, 665, 666, 662, 667, 668, 649, 551,
	0, 598, 660, 659, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	627, 604, 605, 606, 549, 607, 601, 602, 603, 628,
	596, 624, 625, 575, 599, 608, 623, 609, 626, 629,
	630, 669, 670, 615, 671, 612, 631, 622, 621, 610,
	597, 632, 633, 582, 577, 613, 614, 600, 616, 617,
	618, 550, 578, 579, 580, 581, 0, 592, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 547,
	0, 0, 0, 279, 1500, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 583, 0, 0, 363, 318, 0,
	0, 0, 0, 643, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 573, 620,
	619, 560, 570, 0, 0, 256, 188, 437, 0, 438,
	561, 0, 569, 562, 566, 565, 563, 564, 0, 635,
	0, 0, 0, 0, 0, 0, 531, 544, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 0, 0, 0, 0, 593,
	0, 543, 0, 0, 588, 567, 571, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 568, 591, 595,
	273, 657, 589, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 658, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	394, 0, 0, 641, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 590, 0, 354, 336, 654, 532,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 639, 332, 0, 0,
	0, 0, 653, 634, 636, 637, 640, 644, 645, 646,
	647, 648, 650, 652, 656, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 594, 0, 0, 322,
	323, 324, 325, 642, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	664, 638, 663, 665, 666, 662, 667, 668, 649, 551,
	0, 598, 660, 659, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	627, 604, 605, 606, 549, 607, 601, 602, 603, 628,
	596, 624, 625, 575, 599, 608, 623, 609, 626, 629,
	630, 669, 670, 615, 671, 612, 631, 622, 621, 610,
	597, 632, 633, 582, 577, 613, 614, 600, 616, 617,
	618, 550, 578, 579, 580, 581, 0, 592, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 547,
	0, 0, 0, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 583, 0, 0, 363, 318, 0,
	0, 0, 0, 643, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 573, 620,
	619, 560, 570, 0, 0, 256, 188, 437, 0, 438,
	561, 0, 569, 562, 566, 565, 563, 564, 0, 635,
	0, 0, 0, 0, 0, 0, 531, 544, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 542, 1252, 0, 0, 0, 593,
	0, 543, 0, 0, 588, 567, 571, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 568, 591, 595,
	273, 657, 589, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 658, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	394, 0, 0, 641, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 590, 0, 354, 336, 654, 532,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 639, 332, 0, 0,
	0, 0, 653, 634, 636, 637, 640, 644, 645, 646,
	647, 648, 650, 652, 656, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 594, 0, 0, 322,
	323, 324, 325, 642, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	664, 638, 663, 665, 666, 662, 667, 668, 649, 551,
	0, 598, 660, 659, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	627, 604, 605, 606, 549, 607, 601, 602, 603, 628,
	596, 624, 625, 575, 599, 608, 623, 609, 626, 629,
	630, 669, 670, 615, 671, 612, 631, 622, 621, 610,
	597, 632, 633, 582, 577, 613, 614, 600, 616, 617,
	618, 550, 578, 579, 580, 581, 0, 0, 0, 402,
	403, 404, 425, 388, 592, 443, 0, 1834, 0, 0,
	0, 0, 0, 334, 0, 0, 0, 447, 439, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 583, 0, 0, 363, 318, 0, 0, 0, 0,
	643, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 573, 620, 619, 560, 570,
	0, 0, 256, 188, 437, 0, 438, 561, 0, 569,
	562, 566, 565, 563, 564, 0, 635, 0, 0, 0,
	0, 0, 0, 531, 544, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 0, 0, 0, 0, 593, 0, 543, 0,
	0, 588, 567, 571, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 568, 591, 595, 273, 657, 589,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 658, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 394, 0, 0,
	641, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 590, 0, 354, 336, 654, 532, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 639, 332, 0, 0, 0, 0, 653,
	634, 636, 637, 640, 644, 645, 646, 647, 648, 650,
	652, 656, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 594, 0, 0, 322, 323, 324, 325,
	642, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 664, 638, 663,
	665, 666, 662, 667, 668, 649, 551, 0, 598, 660,
	659, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 627, 604, 605,
	606, 549, 607, 601, 602, 603, 628, 596, 624, 625,
	575, 599, 608, 623, 609, 626, 629, 630, 669, 670,
	615, 671, 612, 631, 622, 621, 610, 597, 632, 633,
	582, 577, 613, 614, 600, 616, 617, 618, 550, 578,
	579, 580, 581, 0, 592, 0, 402, 403, 404, 425,
	388, 0, 443, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 547, 0, 0, 0,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 583, 0, 0, 363, 318, 0, 0, 0, 0,
	643, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 573, 620, 619, 560, 570,
	0, 0, 256, 188, 437, 0, 438, 561, 0, 569,
	562, 566, 565, 563, 564, 0, 635, 0, 0, 0,
	0, 0, 0, 531, 544, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 0, 0, 0, 0, 593, 0, 543, 0,
	0, 588, 567, 571, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 568, 591, 595, 273, 657, 589,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 658, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 394, 0, 0,
	641, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 590, 0, 354, 336, 654, 532, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 639, 332, 0, 0, 0, 0, 653,
	634, 636, 637, 640, 644, 645, 646, 647, 648, 650,
	652, 656, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 594, 0, 0, 322, 323, 324, 325,
	642, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 664, 638, 663,
	665, 666, 662, 667, 668, 649, 551, 0, 598, 660,
	659, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 627, 604, 605,
	606, 549, 607, 601, 602, 603, 628, 596, 624, 625,
	575, 599, 608, 623, 609, 626, 629, 630, 669, 670,
	615, 671, 612, 631, 622, 621, 610, 597, 632, 633,
	582, 577, 613, 614, 600, 616, 617, 618, 550, 578,
	579, 580, 581, 0, 592, 0, 402, 403, 404, 425,
	388, 0, 443, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 1376, 0, 447, 439, 547, 0, 0, 0,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 583, 0, 0, 363, 318, 0, 0, 0, 0,
	643, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 573, 620, 619, 560, 570,
	0, 0, 256, 188, 437, 0, 438, 561, 0, 569,
	562, 566, 565, 563, 564, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 544, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 0, 0, 0, 0, 593, 0, 543, 0,
	0, 588, 567, 571, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 568, 591, 595, 273, 657, 589,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 658, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 394, 0, 0,
	641, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 590, 0, 354, 336, 654, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 1377, 1378, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 639, 332, 0, 0, 0, 0, 653,
	634, 636, 637, 640, 644, 645, 646, 647, 648, 650,
	652, 656, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 594, 0, 0, 322, 323, 324, 325,
	642, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 664, 638, 663,
	665, 666, 662, 667, 668, 649, 551, 0, 598, 660,
	659, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 627, 604, 605,
	606, 549, 607, 601, 602, 603, 628, 596, 624, 625,
	575, 599, 608, 623, 609, 626, 629, 630, 669, 670,
	615, 671, 612, 631, 622, 621, 610, 597, 632, 633,
	582, 577, 613, 614, 600, 616, 617, 618, 550, 578,
	579, 580, 581, 0, 592, 0, 402, 403, 404, 425,
	388, 0, 443, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 547, 0, 0, 0,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 583, 0, 0, 363, 318, 0, 0, 0, 0,
	643, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 620, 619, 560, 570,
	0, 0, 256, 188, 437, 0, 438, 561, 0, 569,
	562, 566, 565, 563, 564, 0, 635, 0, 0, 0,
	0, 0, 0, 531, 544, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 0, 0, 0, 0, 593, 0, 543, 0,
	0, 588, 567, 571, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 568, 591, 595, 273, 657, 589,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 658, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 394, 0, 0,
	641, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 590, 0, 354, 336, 654, 532, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 639, 332, 0, 0, 0, 0, 653,
	634, 636, 637, 640, 644, 645, 646, 647, 648, 650,
	652, 656, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 594, 0, 0, 322, 323, 324, 325,
	642, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 664, 638, 663,
	665, 666, 662, 667, 668, 649, 551, 0, 598, 660,
	659, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 627, 604, 605,
	606, 549, 607, 601, 602, 603, 628, 596, 624, 625,
	575, 599, 608, 623, 609, 626, 629, 630, 669, 670,
	615, 671, 612, 631, 622, 621, 610, 597, 632, 633,
	582, 577, 613, 614, 600, 616, 617, 618, 550, 578,
	579, 580, 581, 0, 592, 0, 402, 403, 404, 425,
	388, 0, 443, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 547, 0, 0, 0,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 583, 0, 0, 363, 318, 0, 0, 0, 0,
	643, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 573, 620, 619, 560, 570,
	0, 0, 256, 188, 437, 0, 438, 561, 0, 569,
	562, 566, 565, 563, 564, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 544, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 542, 0, 0, 0, 0, 593, 0, 543, 0,
	0, 588, 567, 571, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 568, 591, 595, 273, 657, 589,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 658, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 394, 0, 0,
	641, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 590, 0, 354, 336, 654, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 639, 332, 0, 0, 0, 0, 653,
	634, 636, 637, 640, 644, 645, 646, 647, 648, 650,
	652, 656, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 594, 0, 0, 322, 323, 324, 325,
	642, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 664, 638, 663,
	665, 666, 662, 667, 668, 649, 551, 0, 598, 660,
	659, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 627, 604, 605,
	606, 549, 607, 601, 602, 603, 628, 596, 624, 625,
	575, 599, 608, 623, 609, 626, 629, 630, 669, 670,
	615, 671, 612, 631, 622, 621, 610, 597, 632, 633,
	582, 577, 613, 614, 600, 616, 617, 618, 550, 578,
	579, 580, 581, 0, 0, 0, 402, 403, 404, 425,
	388, 0, 443, 165, 51, 157, 133, 0, 0, 0,
	0, 0, 0, 334, 447, 439, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 150, 0,
	279, 0, 159, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 436, 0,
	0, 113, 0, 0, 363, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 162, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 437, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 0, 381, 409, 273, 400, 0,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 424, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 0,
	99, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	180, 0, 0, 0, 367, 0, 0, 303, 155, 149,
	148, 410, 0, 354, 336, 57, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 151, 152, 153, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 389, 272, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 405, 183, 0,
	0, 434, 191, 0, 0, 0, 154, 0, 192, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 414, 0, 0, 322, 323, 324, 325,
	289, 0, 261, 417, 347, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 134, 346, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 402, 403, 404, 425,
	388, 334, 193, 39, 181, 184, 186, 185, 0, 49,
	5, 0, 0, 116, 194, 439, 0, 0, 279, 0,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 436, 0, 0, 0,
	0, 0, 363, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1040, 0, 0, 187, 0, 0, 560, 570, 0, 0,
	256, 188, 437, 0, 438, 561, 0, 569, 562, 566,
	565, 563, 564, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 0, 0, 0, 247, 368, 384, 257,
	359, 397, 262, 366, 252, 333, 356, 0, 0, 249,
	382, 365, 315, 298, 299, 248, 0, 351, 277, 290,
	274, 331, 568, 381, 409, 273, 400, 0, 392, 251,
	0, 391, 330, 378, 383, 316, 310, 250, 380, 314,
	309, 302, 281, 424, 294, 342, 308, 343, 295, 320,
	319, 321, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 303, 0, 0, 0, 410,
	0, 354, 336, 0, 0, 0, 352, 306, 379, 344,
	385, 369, 393, 348, 345, 242, 370, 276, 317, 253,
	255, 271, 278, 280, 282, 283, 326, 327, 339, 358,
	371, 372, 373, 275, 263, 353, 264, 292, 265, 243,
	268, 267, 269, 360, 270, 245, 340, 377, 0, 288,
	349, 313, 246, 312, 341, 376, 375, 254, 401, 407,
	408, 0, 0, 413, 0, 0, 0, 421, 426, 427,
	428, 430, 431, 432, 433, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 406, 286, 239, 240,
	446, 272, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 405, 0, 0, 0, 434,
	445, 0, 0, 0, 0, 0, 444, 338, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 387, 399, 416, 419, 0, 0, 0,
	0, 244, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 414, 0, 0, 322, 323, 324, 325, 289, 0,
	261, 417, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 412, 285, 291, 429, 293, 260, 337, 287, 396,
	300, 0, 422, 0, 423, 0, 0, 0, 0, 329,
	296, 297, 361, 301, 307, 350, 395, 335, 355, 258,
	386, 362, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 237, 266, 0, 241, 0, 305,
	0, 346, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 402, 403, 404, 425, 388, 0,
	443, 0, 0, 0, 165, 51, 157, 133, 0, 0,
	0, 0, 447, 439, 334, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 436,
	0, 0, 0, 0, 0, 363, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 437, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 0, 381, 409, 273, 400,
	0, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 424, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 410, 0, 354, 336, 0, 0, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 0, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 406,
	286, 239, 240, 446, 272, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 405, 0,
	0, 0, 434, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 414, 0, 0, 322, 323, 324,
	325, 465, 467, 261, 417, 347, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 134, 346, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 334, 0, 238,
	233, 234, 235, 236, 0, 867, 0, 402, 403, 404,
	425, 388, 0, 443, 279, 0, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 447, 439, 0, 0, 0,
	435, 0, 436, 0, 0, 0, 0, 0, 363, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 437, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 247, 368, 384, 257, 359, 397, 262, 366,
	252, 333, 356, 0, 0, 1920, 1922, 1923, 1924, 1925,
	1926, 1927, 0, 1932, 1928, 1929, 1930, 1931, 0, 1915,
	1916, 1917, 1918, 853, 1901, 1921, 0, 1902, 330, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1919, 342, 308, 343, 295, 320, 319, 321, 878, 880,
	882, 884, 887, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 303, 0, 0, 0, 1914, 0, 354, 336, 0,
	0, 0, 352, 306, 379, 344, 385, 369, 393, 348,
	345, 242, 370, 276, 317, 253, 255, 271, 278, 280,
	282, 283, 326, 327, 339, 358, 371, 372, 373, 275,
	263, 353, 264, 292, 265, 243, 268, 267, 269, 360,
	270, 245, 340, 377, 0, 288, 349, 313, 246, 312,
	341, 376, 375, 254, 401, 407, 408, 0, 0, 413,
	0, 0, 0, 421, 426, 427, 428, 430, 431, 432,
	433, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 406, 286, 239, 240, 446, 272, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 405, 0, 0, 0, 434, 445, 0, 0, 0,
	0, 0, 444, 338, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 387,
	399, 416, 419, 0, 0, 0, 0, 244, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 414, 0, 0,
	322, 323, 324, 325, 289, 0, 261, 417, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 412, 285, 291,
	429, 293, 260, 337, 287, 396, 300, 0, 422, 0,
	423, 0, 0, 0, 0, 329, 296, 297, 361, 301,
	307, 350, 395, 335, 355, 258, 386, 362, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 867, 0, 374, 0,
	237, 266, 0, 241, 877, 305, 0, 346, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	334, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	402, 403, 404, 425, 388, 0, 443, 279, 0, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 447, 439,
	0, 0, 0, 435, 0, 436, 0, 0, 0, 0,
	0, 363, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 855, 0, 0, 256,
	188, 437, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1995, 1998, 875, 879, 881, 883,
	885, 886, 888, 0, 893, 889, 890, 891, 892, 0,
	870, 871, 872, 873, 853, 854, 876, 0, 856, 0,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	868, 874, 0, 0, 0, 0, 0, 0, 0, 878,
	880, 882, 884, 887, 0, 247, 368, 384, 257, 359,
	397, 262, 366, 252, 333, 356, 0, 0, 249, 382,
	365, 315, 298, 299, 248, 0, 351, 277, 290, 274,
	331, 0, 381, 409, 273, 400, 869, 392, 251, 0,
	391, 330, 378, 383, 316, 310, 250, 380, 314, 309,
	302, 281, 424, 294, 342, 308, 343, 295, 320, 319,
	321, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 394, 0, 0, 0, 1994, 0,
	1993, 367, 1991, 1996, 303, 0, 0, 0, 410, 0,
	354, 336, 0, 0, 0, 352, 306, 379, 344, 385,
	369, 393, 348, 345, 242, 370, 276, 317, 253, 255,
	271, 278, 280, 282, 283, 326, 327, 339, 358, 371,
	372, 373, 275, 263, 353, 264, 292, 265, 243, 268,
	267, 269, 360, 270, 245, 340, 377, 1997, 288, 349,
	313, 246, 312, 341, 376, 375, 254, 401, 407, 408,
	0, 0, 413, 0, 0, 0, 421, 426, 427, 428,
	430, 431, 432, 433, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 406, 286, 239, 240, 446,
	272, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 405, 0, 0, 0, 434, 445,
	0, 0, 0, 0, 0, 444, 338, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 387, 399, 416, 419, 0, 0, 0, 0,
	244, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	414, 0, 0, 322, 323, 324, 325, 289, 0, 261,
	417, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	412, 285, 291, 429, 293, 260, 337, 287, 396, 300,
	0, 422, 0, 423, 0, 877, 0, 0, 329, 296,
	297, 361, 301, 307, 350, 395, 335, 355, 258, 386,
	362, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 237, 266, 0, 241, 0, 305, 0,
	346, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	334, 0, 0, 402, 403, 404, 425, 388, 0, 443,
	0, 0, 1720, 0, 0, 0, 0, 279, 0, 0,
	304, 447, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 436, 0, 0, 0, 0,
	0, 363, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1721, 0, 0, 0, 256,
	188, 437, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 973, 974, 975, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 368, 384, 257, 359,
	397, 262, 366, 252, 333, 356, 0, 0, 249, 382,
	365, 315, 298, 299, 248, 0, 351, 277, 290, 274,
	331, 0, 381, 409, 273, 400, 0, 392, 251, 0,
	391, 330, 378, 383, 316, 310, 250, 380, 314, 309,
	302, 281, 424, 294, 342, 308, 343, 295, 320, 319,
	321, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 303, 0, 0, 0, 410, 0,
	354, 336, 0, 0, 0, 352, 306, 379, 344, 385,
	369, 393, 348, 345, 242, 370, 276, 317, 253, 255,
	271, 278, 280, 282, 283, 326, 327, 339, 358, 371,
	372, 373, 275, 263, 353, 264, 292, 265, 243, 268,
	267, 269, 360, 270, 245, 340, 377, 0, 288, 349,
	313, 246, 312, 341, 376, 375, 254, 401, 407, 408,
	0, 0, 413, 0, 0, 0, 421, 426, 427, 428,
	430, 431, 432, 433, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 406, 286, 239, 240, 446,
	272, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 405, 0, 0, 0, 434, 445,
	0, 0, 0, 0, 0, 444, 338, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 387, 399, 416, 419, 0, 0, 0, 0,
	244, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	414, 0, 0, 322, 323, 324, 325, 289, 0, 261,
	417, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	412, 285, 291, 429, 293, 260, 337, 287, 396, 300,
	0, 422, 0, 423, 0, 0, 0, 0, 329, 296,
	297, 361, 301, 307, 350, 395, 335, 355, 258, 386,
	362, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 237, 266, 0, 241, 0, 305, 0,
	346, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 334, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 402, 403, 404, 425, 388, 0, 443,
	279, 789, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 447, 439, 0, 0, 0, 435, 0, 436, 0,
	0, 0, 0, 0, 363, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 796, 797, 0, 0,
	0, 0, 256, 188, 437, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 368,
	784, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 0, 381, 409, 273, 400, 775,
	392, 251, 774, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 424, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 410, 0, 354, 336, 0, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 787, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 272, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 405, 0, 0,
	0, 434, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 788, 0, 390, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 791, 0, 0, 322, 323, 324, 325,
	289, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 798, 785, 794, 786, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 334, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 402, 403, 404, 425,
	388, 0, 443, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 0, 0, 0, 435,
	0, 436, 0, 0, 0, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	394, 0, 0, 0, 2018, 2016, 0, 367, 0, 2017,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 0, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 113, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 1764, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 134, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 0, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 113, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 1755, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 134, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 165, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 0, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 113, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 134, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 334,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 279, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 435, 0, 436, 0, 0, 0, 0, 0,
	363, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 796, 797, 0, 0, 0, 0, 256, 188,
	437, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 368, 384, 257, 359, 397,
	262, 366, 252, 333, 356, 0, 0, 249, 382, 365,
	315, 298, 299, 248, 0, 351, 277, 290, 274, 331,
	0, 381, 409, 273, 400, 775, 392, 251, 774, 391,
	330, 378, 383, 316, 310, 250, 380, 314, 309, 302,
	281, 424, 294, 342, 308, 343, 295, 320, 319, 321,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 303, 0, 0, 0, 410, 0, 354,
	336, 0, 0, 0, 352, 306, 379, 344, 385, 369,
	393, 348, 345, 242, 370, 276, 317, 253, 255, 271,
	278, 280, 282, 283, 326, 327, 339, 358, 371, 372,
	373, 275, 263, 353, 264, 292, 265, 243, 268, 267,
	269, 360, 270, 245, 340, 377, 0, 288, 349, 313,
	246, 312, 341, 376, 375, 254, 401, 407, 408, 0,
	0, 413, 0, 0, 0, 421, 426, 427, 428, 430,
	431, 432, 433, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 406, 286, 239, 240, 446, 272,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 405, 0, 0, 0, 434, 445, 0,
	0, 0, 0, 0, 444, 338, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 387, 399, 416, 419, 0, 0, 0, 0, 244,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 414,
	0, 0, 322, 323, 324, 325, 289, 0, 261, 417,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 412,
	285, 291, 429, 293, 260, 337, 287, 396, 300, 0,
	422, 0, 423, 0, 0, 0, 0, 798, 1678, 794,
	1679, 301, 307, 350, 395, 335, 355, 258, 386, 362,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 237, 266, 0, 241, 0, 305, 0, 346,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 334, 0, 238, 233, 234, 235, 236, 0,
	0, 2415, 402, 403, 404, 425, 388, 0, 443, 279,
	0, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	447, 439, 0, 0, 0, 435, 0, 436, 0, 0,
	0, 0, 0, 363, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 437, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 368, 384,
	257, 359, 397, 262, 366, 252, 333, 356, 0, 0,
	249, 382, 365, 315, 298, 299, 248, 0, 351, 277,
	290, 274, 331, 0, 381, 409, 273, 400, 0, 392,
	251, 0, 391, 330, 378, 383, 316, 310, 250, 380,
	314, 309, 302, 281, 424, 294, 342, 308, 343, 295,
	320, 319, 321, 0, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 2418, 0, 0,
	2417, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 303, 0, 0, 0,
	410, 0, 354, 336, 0, 0, 0, 352, 306, 379,
	344, 385, 369, 393, 348, 345, 242, 370, 276, 317,
	253, 255, 271, 278, 280, 282, 283, 326, 327, 339,
	358, 371, 372, 373, 275, 263, 353, 264, 292, 265,
	243, 268, 267, 269, 360, 270, 245, 340, 377, 0,
	288, 349, 313, 246, 312, 341, 376, 375, 254, 401,
	407, 408, 0, 0, 413, 0, 0, 0, 421, 426,
	427, 428, 430, 431, 432, 433, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 406, 286, 239,
	240, 446, 272, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 405, 0, 0, 0,
	434, 445, 0, 0, 0, 0, 0, 444, 338, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 387, 399, 416, 419, 0, 0,
	0, 0, 244, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 414, 0, 0, 322, 323, 324, 325, 289,
	0, 261, 417, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 285, 291, 429, 293, 260, 337, 287,
	396, 300, 0, 422, 0, 423, 0, 0, 0, 0,
	329, 296, 297, 361, 301, 307, 350, 395, 335, 355,
	258, 386, 362, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 237, 266, 0, 241, 0,
	305, 0, 346, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 334, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 402, 403, 404, 425, 388,
	0, 443, 279, 1224, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 447, 439, 0, 0, 0, 435, 0,
	436, 0, 0, 0, 0, 0, 363, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1222, 0, 0, 0, 256, 188, 437, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	247, 368, 384, 257, 359, 397, 262, 366, 252, 333,
	356, 0, 0, 249, 382, 365, 315, 298, 299, 248,
	0, 351, 277, 290, 274, 331, 0, 381, 409, 273,
	400, 0, 392, 251, 0, 391, 330, 378, 383, 316,
	310, 250, 380, 314, 309, 302, 281, 424, 294, 342,
	308, 343, 295, 320, 319, 321, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 303,
	0, 0, 0, 410, 0, 354, 336, 0, 0, 0,
	352, 306, 379, 344, 385, 369, 393, 348, 345, 242,
	370, 276, 317, 253, 255, 271, 278, 280, 282, 283,
	326, 327, 339, 358, 371, 372, 373, 275, 263, 353,
	264, 292, 265, 243, 268, 267, 269, 360, 270, 245,
	340, 377, 0, 288, 349, 313, 246, 312, 341, 376,
	375, 254, 401, 407, 408, 0, 0, 413, 0, 0,
	0, 421, 426, 427, 428, 430, 431, 432, 433, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	406, 286, 239, 240, 446, 272, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 405,
	0, 0, 0, 434, 445, 0, 0, 0, 0, 0,
	444, 338, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 387, 399, 416,
	419, 0, 0, 0, 0, 244, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 414, 0, 0, 322, 323,
	324, 325, 289, 0, 261, 417, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 412, 285, 291, 429, 293,
	260, 337, 287, 396, 300, 0, 422, 0, 423, 0,
	0, 0, 0, 329, 296, 297, 361, 301, 307, 350,
	395, 335, 355, 258, 386, 362, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 237, 266,
	0, 241, 0, 305, 0, 346, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 334, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 402, 403,
	404, 425, 388, 0, 443, 279, 1218, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 447, 439, 0, 0,
	0, 435, 0, 436, 0, 0, 0, 0, 0, 363,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 1222, 0, 0, 0, 256, 188, 437,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 247, 368, 384, 257, 359, 397, 262,
	366, 252, 333, 356, 0, 0, 249, 382, 365, 315,
	298, 299, 248, 0, 351, 277, 290, 274, 331, 0,
	381, 409, 273, 400, 0, 392, 251, 0, 391, 330,
	378, 383, 316, 310, 250, 380, 314, 309, 302, 281,
	424, 294, 342, 308, 343, 295, 320, 319, 321, 0,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 303, 0, 0, 0, 410, 0, 354, 336,
	0, 0, 0, 352, 306, 379, 344, 385, 369, 393,
	348, 345, 242, 370, 276, 317, 253, 255, 271, 278,
	280, 282, 283, 326, 327, 339, 358, 371, 372, 373,
	275, 263, 353, 264, 292, 265, 243, 268, 267, 269,
	360, 270, 245, 340, 377, 0, 288, 349, 313, 246,
	312, 341, 376, 375, 254, 401, 407, 408, 0, 0,
	413, 0, 0, 0, 421, 426, 427, 428, 430, 431,
	432, 433, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 406, 286, 239, 240, 446, 272, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 405, 0, 0, 0, 434, 445, 0, 0,
	0, 0, 0, 444, 338, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	387, 399, 416, 419, 0, 0, 0, 0, 244, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 414, 0,
	0, 322, 323, 324, 325, 289, 0, 261, 417, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 412, 285,
	291, 429, 293, 260, 337, 287, 396, 300, 0, 422,
	0, 423, 0, 0, 0, 0, 329, 296, 297, 361,
	301, 307, 350, 395, 335, 355, 258, 386, 362, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 237, 266, 0, 241, 0, 305, 0, 346, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 334, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 402, 403, 404, 425, 388, 0, 443, 279, 0,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 447,
	439, 0, 0, 0, 435, 0, 436, 0, 0, 0,
	0, 0, 363, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3190, 0, 187, 620, 0, 0, 0, 0, 0,
	256, 188, 437, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 368, 384, 257,
	359, 397, 262, 366, 252, 333, 356, 0, 0, 249,
	382, 365, 315, 298, 299, 248, 0, 351, 277, 290,
	274, 331, 0, 381, 409, 273, 400, 0, 392, 251,
	0, 391, 330, 378, 383, 316, 310, 250, 380, 314,
	309, 302, 281, 424, 294, 342, 308, 343, 295, 320,
	319, 321, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 303, 0, 0, 0, 410,
	0, 354, 336, 0, 0, 0, 352, 306, 379, 344,
	385, 369, 393, 348, 345, 242, 370, 276, 317, 253,
	255, 271, 278, 280, 282, 283, 326, 327, 339, 358,
	371, 372, 373, 275, 263, 353, 264, 292, 265, 243,
	268, 267, 269, 360, 270, 245, 340, 377, 0, 288,
	349, 313, 246, 312, 341, 376, 375, 254, 401, 407,
	408, 0, 0, 413, 0, 0, 0, 421, 426, 427,
	428, 430, 431, 432, 433, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 406, 286, 239, 240,
	446, 272, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 405, 0, 0, 0, 434,
	445, 0, 0, 0, 0, 0, 444, 338, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 387, 399, 416, 419, 0, 0, 0,
	0, 244, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 414, 0, 0, 322, 323, 324, 325, 289, 0,
	261, 417, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 412, 285, 291, 429, 293, 260, 337, 287, 396,
	300, 0, 422, 0, 423, 0, 0, 0, 0, 329,
	296, 297, 361, 301, 307, 350, 395, 335, 355, 258,
	386, 362, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 237, 266, 0, 241, 0, 305,
	0, 346, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 334, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 402, 403, 404, 425, 388, 0,
	443, 279, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 447, 439, 0, 0, 0, 435, 0, 436,
	0, 0, 0, 0, 0, 363, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 1222,
	0, 0, 0, 256, 188, 437, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 0, 381, 409, 273, 400,
	0, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 424, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 410, 0, 354, 336, 0, 0, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 0, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 406,
	286, 239, 240, 446, 272, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 405, 0,
	0, 0, 434, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 414, 0, 0, 322, 323, 324,
	325, 289, 0, 261, 417, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 0, 346, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 334, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 402, 403, 404,
	425, 388, 0, 443, 279, 0, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 447, 439, 0, 0, 0,
	435, 0, 436, 0, 0, 0, 0, 0, 363, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1222, 0, 0, 0, 256, 188, 437, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2919, 0, 0, 0, 0,
	0, 0, 247, 368, 384, 257, 359, 397, 262, 366,
	252, 333, 356, 0, 0, 249, 382, 365, 315, 298,
	299, 248, 0, 351, 277, 290, 274, 331, 0, 381,
	409, 273, 400, 0, 392, 251, 0, 391, 330, 378,
	383, 316, 310, 250, 380, 314, 309, 302, 281, 424,
	294, 342, 308, 343, 295, 320, 319, 321, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 303, 0, 0, 0, 410, 0, 354, 336, 0,
	0, 0, 352, 306, 379, 344, 385, 369, 393, 348,
	345, 242, 370, 276, 317, 253, 255, 271, 278, 280,
	282, 283, 326, 327, 339, 358, 371, 372, 373, 275,
	263, 353, 264, 292, 265, 243, 268, 267, 269, 360,
	270, 245, 340, 377, 0, 288, 349, 313, 246, 312,
	341, 376, 375, 254, 401, 407, 408, 0, 0, 413,
	0, 0, 0, 421, 426, 427, 428, 430, 431, 432,
	433, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 406, 286, 239, 240, 446, 272, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 405, 0, 0, 0, 434, 445, 0, 0, 0,
	0, 0, 444, 338, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 387,
	399, 416, 419, 0, 0, 0, 0, 244, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 414, 0, 0,
	322, 323, 324, 325, 289, 0, 261, 417, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 412, 285, 291,
	429, 293, 260, 337, 287, 396, 300, 0, 422, 0,
	423, 0, 0, 0, 0, 329, 296, 297, 361, 301,
	307, 350, 395, 335, 355, 258, 386, 362, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	237, 266, 0, 241, 0, 305, 0, 346, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 334, 0, 0,
	402, 403, 404, 425, 388, 0, 443, 0, 0, 2083,
	0, 0, 0, 0, 279, 0, 0, 304, 447, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 436, 0, 0, 0, 0, 0, 363, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2085, 0, 0, 0, 256, 188, 437, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 368, 384, 257, 359, 397, 262, 366,
	252, 333, 356, 0, 0, 249, 382, 365, 315, 298,
	299, 248, 0, 351, 277, 290, 274, 331, 0, 381,
	409, 273, 400, 0, 392, 251, 0, 391, 330, 378,
	383, 316, 310, 250, 380, 314, 309, 302, 281, 424,
	294, 342, 308, 343, 295, 320, 319, 321, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 303, 0, 0, 0, 410, 0, 354, 336, 0,
	0, 0, 352, 306, 379, 344, 385, 369, 393, 348,
	345, 242, 370, 276, 317, 253, 255, 271, 278, 280,
	282, 283, 326, 327, 339, 358, 371, 372, 373, 275,
	263, 353, 264, 292, 265, 243, 268, 267, 269, 360,
	270, 245, 340, 377, 0, 288, 349, 313, 246, 312,
	341, 376, 375, 254, 401, 407, 408, 0, 0, 413,
	0, 0, 0, 421, 426, 427, 428, 430, 431, 432,
	433, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 406, 286, 239, 240, 446, 272, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 405, 0, 0, 0, 434, 445, 0, 0, 0,
	0, 0, 444, 338, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 387,
	399, 416, 419, 0, 0, 0, 0, 244, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 414, 0, 0,
	322, 323, 324, 325, 289, 0, 261, 417, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 412, 285, 291,
	429, 293, 260, 337, 287, 396, 300, 0, 422, 0,
	423, 0, 0, 0, 0, 329, 296, 297, 361, 301,
	307, 350, 395, 335, 355, 258, 386, 362, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	237, 266, 0, 241, 0, 305, 0, 346, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	334, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	402, 403, 404, 425, 388, 0, 443, 279, 2104, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 447, 439,
	0, 0, 0, 435, 0, 436, 0, 0, 0, 0,
	0, 363, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 437, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 368, 384, 257, 359,
	397, 262, 366, 252, 333, 356, 0, 0, 249, 382,
	365, 315, 298, 299, 248, 0, 351, 277, 290, 274,
	331, 0, 381, 409, 273, 400, 0, 392, 251, 0,
	391, 330, 378, 383, 316, 310, 250, 380, 314, 309,
	302, 281, 424, 294, 342, 308, 343, 295, 320, 319,
	321, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 303, 0, 0, 0, 410, 0,
	354, 336, 0, 0, 0, 352, 306, 379, 344, 385,
	369, 393, 348, 345, 242, 370, 276, 317, 253, 255,
	271, 278, 280, 282, 283, 326, 327, 339, 358, 371,
	372, 373, 275, 263, 353, 264, 292, 265, 243, 268,
	267, 269, 360, 270, 245, 340, 377, 0, 288, 349,
	313, 246, 312, 341, 376, 375, 254, 401, 407, 408,
	0, 0, 413, 0, 0, 0, 421, 426, 427, 428,
	430, 431, 432, 433, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 406, 286, 239, 240, 446,
	272, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 405, 0, 0, 0, 434, 445,
	0, 0, 0, 0, 0, 444, 338, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 387, 399, 416, 419, 0, 0, 0, 0,
	244, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	414, 0, 0, 322, 323, 324, 325, 289, 0, 261,
	417, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	412, 285, 291, 429, 293, 260, 337, 287, 396, 300,
	0, 422, 0, 423, 0, 0, 0, 0, 329, 296,
	297, 361, 301, 307, 350, 395, 335, 355, 258, 386,
	362, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 237, 266, 0, 241, 0, 305, 0,
	346, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 334, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 402, 403, 404, 425, 388, 0, 443,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 447, 439, 0, 0, 0, 435, 0, 436, 0,
	0, 0, 0, 0, 363, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3279, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 437, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 0, 381, 409, 273, 400, 0,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 424, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 410, 0, 354, 336, 0, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 272, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 405, 0, 0,
	0, 434, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 414, 0, 0, 322, 323, 324, 325,
	289, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 334, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 402, 403, 404, 425,
	388, 0, 443, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 0, 0, 0, 435,
	0, 436, 0, 0, 0, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 620,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 334,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 279, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 435, 0, 436, 0, 0, 0, 0, 0,
	363, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3205, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	437, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 368, 384, 257, 359, 397,
	262, 366, 252, 333, 356, 0, 0, 249, 382, 365,
	315, 298, 299, 248, 0, 351, 277, 290, 274, 331,
	0, 381, 409, 273, 400, 0, 392, 251, 0, 391,
	330, 378, 383, 316, 310, 250, 380, 314, 309, 302,
	281, 424, 294, 342, 308, 343, 295, 320, 319, 321,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 303, 0, 0, 0, 410, 0, 354,
	336, 0, 0, 0, 352, 306, 379, 344, 385, 369,
	393, 348, 345, 242, 370, 276, 317, 253, 255, 271,
	278, 280, 282, 283, 326, 327, 339, 358, 371, 372,
	373, 275, 263, 353, 264, 292, 265, 243, 268, 267,
	269, 360, 270, 245, 340, 377, 0, 288, 349, 313,
	246, 312, 341, 376, 375, 254, 401, 407, 408, 0,
	0, 413, 0, 0, 0, 421, 426, 427, 428, 430,
	431, 432, 433, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 406, 286, 239, 240, 446, 272,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 405, 0, 0, 0, 434, 445, 0,
	0, 0, 0, 0, 444, 338, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 387, 399, 416, 419, 0, 0, 0, 0, 244,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 414,
	0, 0, 322, 323, 324, 325, 289, 0, 261, 417,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 412,
	285, 291, 429, 293, 260, 337, 287, 396, 300, 0,
	422, 0, 423, 0, 0, 0, 0, 329, 296, 297,
	361, 301, 307, 350, 395, 335, 355, 258, 386, 362,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 237, 266, 0, 241, 0, 305, 0, 346,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 334, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 402, 403, 404, 425, 388, 0, 443, 279,
	0, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	447, 439, 0, 0, 0, 435, 0, 436, 0, 0,
	0, 0, 0, 363, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 437, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 368, 384,
	257, 359, 397, 262, 366, 252, 333, 356, 0, 0,
	249, 382, 365, 315, 298, 299, 248, 0, 351, 277,
	290, 274, 331, 0, 381, 409, 273, 400, 0, 392,
	251, 0, 391, 330, 378, 383, 316, 310, 250, 380,
	314, 309, 302, 281, 424, 294, 342, 308, 343, 295,
	320, 319, 321, 0, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	3135, 0, 0, 367, 0, 0, 303, 0, 0, 0,
	410, 0, 354, 336, 0, 0, 0, 352, 306, 379,
	344, 385, 369, 393, 348, 345, 242, 370, 276, 317,
	253, 255, 271, 278, 280, 282, 283, 326, 327, 339,
	358, 371, 372, 373, 275, 263, 353, 264, 292, 265,
	243, 268, 267, 269, 360, 270, 245, 340, 377, 0,
	288, 349, 313, 246, 312, 341, 376, 375, 254, 401,
	407, 408, 0, 0, 413, 0, 0, 0, 421, 426,
	427, 428, 430, 431, 432, 433, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 406, 286, 239,
	240, 446, 272, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 405, 0, 0, 0,
	434, 445, 0, 0, 0, 0, 0, 444, 338, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 387, 399, 416, 419, 0, 0,
	0, 0, 244, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 414, 0, 0, 322, 323, 324, 325, 289,
	0, 261, 417, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 285, 291, 429, 293, 260, 337, 287,
	396, 300, 0, 422, 0, 423, 0, 0, 0, 0,
	329, 296, 297, 361, 301, 307, 350, 395, 335, 355,
	258, 386, 362, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 237, 266, 0, 241, 0,
	305, 0, 346, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 334, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 402, 403, 404, 425, 388,
	0, 443, 279, 0, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 447, 439, 0, 0, 0, 435, 0,
	436, 0, 0, 0, 0, 0, 363, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2915, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 437, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 368, 384, 257, 359, 397, 262, 366, 252, 333,
	356, 0, 0, 249, 382, 365, 315, 298, 299, 248,
	0, 351, 277, 290, 274, 331, 0, 381, 409, 273,
	400, 0, 392, 251, 0, 391, 330, 378, 383, 316,
	310, 250, 380, 314, 309, 302, 281, 424, 294, 342,
	308, 343, 295, 320, 319, 321, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 303,
	0, 0, 0, 410, 0, 354, 336, 0, 0, 0,
	352, 306, 379, 344, 385, 369, 393, 348, 345, 242,
	370, 276, 317, 253, 255, 271, 278, 280, 282, 283,
	326, 327, 339, 358, 371, 372, 373, 275, 263, 353,
	264, 292, 265, 243, 268, 267, 269, 360, 270, 245,
	340, 377, 0, 288, 349, 313, 246, 312, 341, 376,
	375, 254, 401, 407, 408, 0, 0, 413, 0, 0,
	0, 421, 426, 427, 428, 430, 431, 432, 433, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	406, 286, 239, 240, 446, 272, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 405,
	0, 0, 0, 434, 445, 0, 0, 0, 0, 0,
	444, 338, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 387, 399, 416,
	419, 0, 0, 0, 0, 244, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 414, 0, 0, 322, 323,
	324, 325, 289, 0, 261, 417, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 412, 285, 291, 429, 293,
	260, 337, 287, 396, 300, 0, 422, 0, 423, 0,
	0, 0, 0, 329, 296, 297, 361, 301, 307, 350,
	395, 335, 355, 258, 386, 362, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 237, 266,
	0, 241, 0, 305, 0, 346, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 334, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 402, 403,
	404, 425, 388, 0, 443, 279, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 447, 439, 0, 0,
	0, 435, 0, 436, 0, 0, 0, 0, 0, 363,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2780, 0, 0, 0, 256, 188, 437,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 368, 384, 257, 359, 397, 262,
	366, 252, 333, 356, 0, 0, 249, 382, 365, 315,
	298, 299, 248, 0, 351, 277, 290, 274, 331, 0,
	381, 409, 273, 400, 0, 392, 251, 0, 391, 330,
	378, 383, 316, 310, 250, 380, 314, 309, 302, 281,
	424, 294, 342, 308, 343, 295, 320, 319, 321, 0,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 303, 0, 0, 0, 410, 0, 354, 336,
	0, 0, 0, 352, 306, 379, 344, 385, 369, 393,
	348, 345, 242, 370, 276, 317, 253, 255, 271, 278,
	280, 282, 283, 326, 327, 339, 358, 371, 372, 373,
	275, 263, 353, 264, 292, 265, 243, 268, 267, 269,
	360, 270, 245, 340, 377, 0, 288, 349, 313, 246,
	312, 341, 376, 375, 254, 401, 407, 408, 0, 0,
	413, 0, 0, 0, 421, 426, 427, 428, 430, 431,
	432, 433, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 406, 286, 239, 240, 446, 272, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 405, 0, 0, 0, 434, 445, 0, 0,
	0, 0, 0, 444, 338, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	387, 399, 416, 419, 0, 0, 0, 0, 244, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 414, 0,
	0, 322, 323, 324, 325, 289, 0, 261, 417, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 412, 285,
	291, 429, 293, 260, 337, 287, 396, 300, 0, 422,
	0, 423, 0, 0, 0, 0, 329, 296, 297, 361,
	301, 307, 350, 395, 335, 355, 258, 386, 362, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 237, 266, 0, 241, 0, 305, 0, 346, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 334, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 402, 403, 404, 425, 388, 0, 443, 279, 0,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 447,
	439, 0, 0, 0, 435, 0, 436, 0, 0, 0,
	0, 0, 363, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 437, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 368, 384, 257,
	359, 397, 262, 366, 252, 333, 356, 0, 0, 249,
	382, 365, 315, 298, 299, 248, 0, 351, 277, 290,
	274, 331, 0, 381, 409, 273, 400, 0, 392, 251,
	0, 391, 330, 378, 383, 316, 310, 250, 380, 314,
	309, 302, 281, 424, 294, 342, 308, 343, 295, 320,
	319, 321, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 2989,
	0, 0, 367, 0, 0, 303, 0, 0, 0, 410,
	0, 354, 336, 0, 0, 0, 352, 306, 379, 344,
	385, 369, 393, 348, 345, 242, 370, 276, 317, 253,
	255, 271, 278, 280, 282, 283, 326, 327, 339, 358,
	371, 372, 373, 275, 263, 353, 264, 292, 265, 243,
	268, 267, 269, 360, 270, 245, 340, 377, 0, 288,
	349, 313, 246, 312, 341, 376, 375, 254, 401, 407,
	408, 0, 0, 413, 0, 0, 0, 421, 426, 427,
	428, 430, 431, 432, 433, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 406, 286, 239, 240,
	446, 272, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 405, 0, 0, 0, 434,
	445, 0, 0, 0, 0, 0, 444, 338, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 387, 399, 416, 419, 0, 0, 0,
	0, 244, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 414, 0, 0, 322, 323, 324, 325, 289, 0,
	261, 417, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 412, 285, 291, 429, 293, 260, 337, 287, 396,
	300, 0, 422, 0, 423, 0, 0, 0, 0, 329,
	296, 297, 361, 301, 307, 350, 395, 335, 355, 258,
	386, 362, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 237, 266, 0, 241, 0, 305,
	0, 346, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 334, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 402, 403, 404, 425, 388, 0,
	443, 279, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 447, 439, 0, 0, 0, 435, 0, 436,
	0, 0, 0, 0, 0, 363, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 437, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 0, 381, 409, 273, 400,
	0, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 424, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 410, 0, 354, 336, 0, 0, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 0, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 406,
	286, 239, 240, 446, 272, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 405, 0,
	0, 0, 434, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 414, 0, 0, 322, 323, 324,
	325, 289, 0, 261, 417, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 0, 346, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 334, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 402, 403, 404,
	425, 388, 0, 443, 279, 0, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 447, 439, 0, 0, 0,
	435, 0, 436, 0, 0, 0, 0, 0, 363, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 437, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 368, 384, 257, 359, 397, 262, 366,
	252, 333, 356, 0, 0, 249, 382, 365, 315, 298,
	299, 248, 0, 351, 277, 290, 274, 331, 0, 381,
	409, 273, 400, 0, 392, 251, 0, 391, 330, 378,
	383, 316, 310, 250, 380, 314, 309, 302, 281, 424,
	294, 342, 308, 343, 295, 320, 319, 321, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 303, 0, 0, 0, 410, 0, 354, 336, 0,
	0, 0, 352, 306, 379, 344, 385, 369, 393, 348,
	345, 242, 370, 276, 317, 253, 255, 271, 278, 280,
	282, 283, 326, 327, 339, 358, 371, 372, 373, 275,
	263, 353, 264, 292, 265, 243, 268, 267, 269, 360,
	270, 245, 340, 377, 0, 288, 349, 313, 246, 312,
	341, 376, 375, 254, 401, 407, 408, 0, 0, 413,
	0, 0, 0, 421, 426, 427, 428, 430, 431, 432,
	433, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 406, 286, 239, 240, 446, 272, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 405, 0, 0, 0, 434, 445, 0, 0, 0,
	0, 0, 444, 338, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 387,
	399, 416, 419, 0, 0, 0, 0, 244, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 414, 0, 0,
	322, 323, 324, 325, 289, 0, 261, 417, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 412, 285, 291,
	429, 293, 260, 337, 287, 396, 300, 0, 422, 0,
	423, 0, 0, 0, 0, 329, 296, 297, 361, 301,
	307, 350, 395, 335, 355, 258, 386, 362, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	237, 266, 0, 241, 0, 305, 0, 346, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	334, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	402, 403, 404, 425, 388, 0, 443, 279, 0, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 447, 439,
	0, 0, 0, 435, 0, 436, 0, 0, 0, 0,
	0, 363, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2291, 0, 0, 0, 256,
	188, 437, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 368, 384, 257, 359,
	397, 262, 366, 252, 333, 356, 0, 0, 249, 382,
	365, 315, 298, 299, 248, 0, 351, 277, 290, 274,
	331, 0, 381, 409, 273, 400, 0, 392, 251, 0,
	391, 330, 378, 383, 316, 310, 250, 380, 314, 309,
	302, 281, 424, 294, 342, 308, 343, 295, 320, 319,
	321, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 303, 0, 0, 0, 410, 0,
	354, 336, 0, 0, 0, 352, 306, 379, 344, 385,
	369, 393, 348, 345, 242, 370, 276, 317, 253, 255,
	271, 278, 280, 282, 283, 326, 327, 339, 358, 371,
	372, 373, 275, 263, 353, 264, 292, 265, 243, 268,
	267, 269, 360, 270, 245, 340, 377, 0, 288, 349,
	313, 246, 312, 341, 376, 375, 254, 401, 407, 408,
	0, 0, 413, 0, 0, 0, 421, 426, 427, 428,
	430, 431, 432, 433, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 406, 286, 239, 240, 446,
	272, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 405, 0, 0, 0, 434, 445,
	0, 0, 0, 0, 0, 444, 338, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 387, 399, 416, 419, 0, 0, 0, 0,
	244, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	414, 0, 0, 322, 323, 324, 325, 289, 0, 261,
	417, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	412, 285, 291, 429, 293, 260, 337, 287, 396, 300,
	0, 422, 0, 423, 0, 0, 0, 0, 329, 296,
	297, 361, 301, 307, 350, 395, 335, 355, 258, 386,
	362, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 237, 266, 0, 241, 0, 305, 0,
	346, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 334, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 402, 403, 404, 425, 388, 0, 443,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 447, 439, 0, 0, 0, 435, 0, 436, 0,
	0, 0, 0, 0, 363, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 437, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 0, 381, 409, 273, 400, 0,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 424, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 410, 0, 354, 336, 0, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 272, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 405, 0, 0,
	0, 434, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 414, 0, 0, 322, 323, 324, 325,
	289, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 334, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 402, 403, 404, 425,
	388, 0, 443, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 0, 0, 0, 435,
	0, 436, 0, 0, 0, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 2575, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 334,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 279, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 435, 0, 436, 0, 0, 0, 0, 0,
	363, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	437, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 368, 384, 257, 359, 397,
	262, 366, 252, 333, 356, 0, 0, 249, 382, 365,
	315, 298, 299, 248, 0, 351, 277, 290, 274, 331,
	0, 381, 409, 273, 400, 0, 392, 251, 0, 391,
	330, 378, 383, 316, 310, 250, 380, 314, 309, 302,
	281, 424, 294, 342, 308, 343, 295, 320, 319, 321,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 303, 0, 0, 0, 410, 0, 354,
	336, 0, 0, 0, 352, 306, 379, 344, 385, 369,
	393, 348, 345, 242, 370, 276, 317, 253, 255, 271,
	278, 280, 282, 283, 326, 327, 339, 358, 371, 372,
	373, 275, 263, 353, 264, 292, 265, 243, 268, 267,
	269, 360, 270, 245, 340, 377, 0, 288, 349, 313,
	246, 312, 341, 376, 375, 254, 401, 407, 408, 0,
	0, 413, 0, 0, 0, 421, 426, 427, 428, 430,
	431, 432, 433, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 406, 286, 239, 240, 446, 272,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 405, 0, 0, 0, 434, 445, 0,
	0, 0, 0, 0, 444, 338, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 387, 399, 416, 419, 0, 0, 0, 0, 244,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 414,
	0, 0, 322, 323, 324, 325, 289, 0, 261, 417,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 412,
	285, 291, 429, 293, 260, 337, 287, 396, 300, 0,
	422, 0, 423, 0, 0, 0, 0, 329, 296, 297,
	361, 301, 307, 350, 395, 335, 355, 258, 386, 362,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 237, 266, 0, 241, 0, 305, 0, 346,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 334, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 402, 403, 404, 425, 388, 0, 443, 279,
	0, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	447, 439, 0, 0, 0, 435, 0, 436, 0, 0,
	0, 0, 0, 363, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1222, 0, 0,
	0, 256, 188, 437, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 368, 384,
	257, 359, 397, 262, 366, 252, 333, 356, 0, 0,
	249, 382, 365, 315, 298, 299, 248, 0, 351, 277,
	290, 274, 331, 0, 381, 409, 273, 400, 0, 392,
	251, 0, 391, 330, 378, 383, 316, 310, 250, 380,
	314, 309, 302, 281, 424, 294, 342, 308, 343, 295,
	320, 319, 321, 0, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 303, 0, 0, 0,
	410, 0, 354, 336, 0, 0, 0, 352, 306, 379,
	344, 385, 369, 393, 348, 345, 242, 370, 276, 317,
	253, 255, 271, 278, 280, 282, 283, 326, 327, 339,
	358, 371, 372, 373, 275, 263, 353, 264, 292, 265,
	243, 268, 267, 269, 360, 270, 245, 340, 377, 0,
	288, 349, 313, 246, 312, 341, 376, 375, 254, 401,
	407, 408, 0, 0, 413, 0, 0, 0, 421, 426,
	427, 428, 430, 431, 432, 433, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 406, 286, 239,
	240, 446, 272, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 405, 0, 0, 0,
	434, 445, 0, 0, 0, 0, 0, 444, 338, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 387, 399, 416, 419, 0, 0,
	0, 0, 244, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 414, 0, 0, 322, 323, 324, 325, 289,
	0, 261, 417, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 285, 291, 429, 293, 260, 337, 287,
	396, 300, 0, 422, 0, 423, 0, 0, 0, 0,
	329, 296, 297, 361, 301, 307, 350, 395, 335, 355,
	258, 386, 362, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 237, 266, 0, 241, 0,
	305, 0, 346, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 334, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 402, 403, 404, 425, 388,
	0, 443, 279, 0, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 447, 439, 0, 0, 0, 435, 0,
	436, 0, 0, 0, 0, 0, 363, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2085, 0, 0, 0, 256, 188, 437, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 368, 384, 257, 359, 397, 262, 366, 252, 333,
	356, 0, 0, 249, 382, 365, 315, 298, 299, 248,
	0, 351, 277, 290, 274, 331, 0, 381, 409, 273,
	400, 0, 392, 251, 0, 391, 330, 378, 383, 316,
	310, 250, 380, 314, 309, 302, 281, 424, 294, 342,
	308, 343, 295, 320, 319, 321, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 303,
	0, 0, 0, 410, 0, 354, 336, 0, 0, 0,
	352, 306, 379, 344, 385, 369, 393, 348, 345, 242,
	370, 276, 317, 253, 255, 271, 278, 280, 282, 283,
	326, 327, 339, 358, 371, 372, 373, 275, 263, 353,
	264, 292, 265, 243, 268, 267, 269, 360, 270, 245,
	340, 377, 0, 288, 349, 313, 246, 312, 341, 376,
	375, 254, 401, 407, 408, 0, 0, 413, 0, 0,
	0, 421, 426, 427, 428, 430, 431, 432, 433, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	406, 286, 239, 240, 446, 272, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 405,
	0, 0, 0, 434, 445, 0, 0, 0, 0, 0,
	444, 338, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 387, 399, 416,
	419, 0, 0, 0, 0, 244, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 414, 0, 0, 322, 323,
	324, 325, 289, 0, 261, 417, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 412, 285, 291, 429, 293,
	260, 337, 287, 396, 300, 0, 422, 0, 423, 0,
	0, 0, 0, 329, 296, 297, 361, 301, 307, 350,
	395, 335, 355, 258, 386, 362, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 237, 266,
	0, 241, 0, 305, 0, 346, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 334, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 402, 403,
	404, 425, 388, 0, 443, 279, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 447, 439, 0, 0,
	0, 435, 0, 436, 0, 0, 0, 0, 0, 363,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 437,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 368, 384, 257, 359, 397, 262,
	366, 252, 333, 356, 0, 0, 249, 382, 365, 315,
	298, 299, 248, 0, 351, 277, 290, 274, 331, 0,
	381, 409, 273, 400, 0, 392, 251, 0, 391, 330,
	378, 383, 316, 310, 250, 380, 314, 309, 302, 281,
	424, 294, 342, 308, 343, 295, 320, 319, 321, 0,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 303, 0, 0, 0, 410, 0, 354, 336,
	0, 0, 0, 352, 306, 379, 344, 385, 369, 393,
	348, 345, 242, 370, 276, 317, 253, 255, 271, 278,
	280, 282, 283, 326, 327, 339, 358, 371, 372, 373,
	275, 263, 353, 264, 292, 265, 243, 268, 267, 269,
	360, 270, 245, 340, 377, 0, 288, 349, 313, 246,
	312, 341, 376, 375, 254, 401, 407, 408, 0, 0,
	413, 0, 0, 0, 421, 426, 427, 428, 430, 431,
	432, 433, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 406, 286, 239, 240, 446, 272, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 405, 0, 0, 0, 434, 445, 0, 0,
	0, 0, 0, 444, 338, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	387, 399, 416, 419, 0, 0, 0, 0, 244, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 414, 0,
	0, 322, 323, 324, 325, 289, 0, 261, 417, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 412, 285,
	291, 429, 293, 260, 337, 287, 396, 300, 0, 422,
	0, 423, 0, 0, 0, 0, 329, 296, 297, 361,
	301, 307, 350, 395, 335, 355, 258, 386, 362, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 237, 266, 0, 241, 0, 305, 0, 346, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 334, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 402, 403, 404, 425, 388, 0, 443, 279, 0,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 447,
	439, 0, 0, 0, 435, 0, 436, 0, 0, 0,
	0, 0, 363, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 437, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 368, 384, 257,
	359, 397, 262, 366, 252, 333, 356, 0, 0, 249,
	382, 365, 315, 298, 299, 248, 0, 351, 277, 290,
	274, 331, 0, 381, 409, 273, 400, 0, 392, 251,
	0, 391, 330, 378, 383, 316, 310, 250, 380, 314,
	309, 302, 281, 424, 294, 342, 308, 343, 295, 320,
	319, 321, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 303, 0, 0, 0, 410,
	0, 354, 336, 0, 0, 0, 352, 306, 379, 344,
	385, 369, 393, 348, 345, 242, 370, 276, 317, 253,
	255, 271, 278, 280, 282, 283, 326, 327, 339, 358,
	371, 372, 373, 275, 263, 353, 264, 292, 265, 243,
	268, 267, 269, 360, 270, 245, 340, 377, 0, 288,
	349, 313, 246, 312, 341, 376, 375, 254, 401, 407,
	408, 0, 0, 413, 0, 0, 0, 421, 426, 427,
	428, 430, 431, 432, 433, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 406, 286, 239, 240,
	446, 272, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 405, 0, 0, 0, 434,
	445, 0, 0, 0, 0, 0, 444, 338, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 387, 399, 416, 419, 0, 0, 0,
	0, 244, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 398, 0, 0, 0, 0,
	0, 414, 0, 0, 322, 323, 324, 325, 289, 0,
	261, 417, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 412, 285, 291, 429, 293, 260, 337, 287, 396,
	300, 0, 422, 0, 423, 0, 0, 0, 0, 329,
	296, 297, 361, 301, 307, 350, 395, 335, 355, 258,
	386, 362, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 237, 266, 0, 241, 0, 305,
	0, 346, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 334, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 402, 403, 404, 425, 388, 0,
	443, 279, 0, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 447, 439, 0, 0, 0, 435, 0, 436,
	0, 0, 0, 0, 0, 363, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 2120,
	0, 0, 0, 256, 188, 437, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 0, 381, 409, 273, 400,
	0, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 424, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 410, 0, 354, 336, 0, 0, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 0, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 406,
	286, 239, 240, 446, 272, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 405, 0,
	0, 0, 434, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 414, 0, 0, 322, 323, 324,
	325, 289, 0, 261, 417, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 0, 346, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 1958, 238,
	233, 234, 235, 236, 334, 0, 0, 402, 403, 404,
	425, 388, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 0, 304, 447, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 436,
	0, 0, 0, 0, 0, 363, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 437, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	368, 384, 257, 359, 397, 262, 366, 252, 333, 356,
	0, 0, 249, 382, 365, 315, 298, 299, 248, 0,
	351, 277, 290, 274, 331, 0, 381, 409, 273, 400,
	0, 392, 251, 0, 391, 330, 378, 383, 316, 310,
	250, 380, 314, 309, 302, 281, 424, 294, 342, 308,
	343, 295, 320, 319, 321, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 303, 0,
	0, 0, 410, 0, 354, 336, 0, 0, 0, 352,
	306, 379, 344, 385, 369, 393, 348, 345, 242, 370,
	276, 317, 253, 255, 271, 278, 280, 282, 283, 326,
	327, 339, 358, 371, 372, 373, 275, 263, 353, 264,
	292, 265, 243, 268, 267, 269, 360, 270, 245, 340,
	377, 0, 288, 349, 313, 246, 312, 341, 376, 375,
	254, 401, 407, 408, 0, 0, 413, 0, 0, 0,
	421, 426, 427, 428, 430, 431, 432, 433, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 406,
	286, 239, 240, 446, 272, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 405, 0,
	0, 0, 434, 445, 0, 0, 0, 0, 0, 444,
	338, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 387, 399, 416, 419,
	0, 0, 0, 0, 244, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 398, 0,
	0, 0, 0, 0, 414, 0, 0, 322, 323, 324,
	325, 289, 0, 261, 417, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 285, 291, 429, 293, 260,
	337, 287, 396, 300, 0, 422, 0, 423, 0, 0,
	0, 0, 329, 296, 297, 361, 301, 307, 350, 395,
	335, 355, 258, 386, 362, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 237, 266, 0,
	241, 0, 305, 0, 346, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 334, 0, 238,
	233, 234, 235, 236, 0, 1646, 0, 402, 403, 404,
	425, 388, 0, 443, 279, 0, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 447, 439, 0, 0, 0,
	435, 0, 436, 0, 0, 0, 0, 0, 363, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 437, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 368, 384, 257, 359, 397, 262, 366,
	252, 333, 356, 0, 0, 249, 382, 365, 315, 298,
	299, 248, 0, 351, 277, 290, 274, 331, 0, 381,
	409, 273, 400, 0, 392, 251, 0, 391, 330, 378,
	383, 316, 310, 250, 380, 314, 309, 302, 281, 424,
	294, 342, 308, 343, 295, 320, 319, 321, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 303, 0, 0, 0, 410, 0, 354, 336, 0,
	0, 0, 352, 306, 379, 344, 385, 369, 393, 348,
	345, 242, 370, 276, 317, 253, 255, 271, 278, 280,
	282, 283, 326, 327, 339, 358, 371, 372, 373, 275,
	263, 353, 264, 292, 265, 243, 268, 267, 269, 360,
	270, 245, 340, 377, 0, 288, 349, 313, 246, 312,
	341, 376, 375, 254, 401, 407, 408, 0, 0, 413,
	0, 0, 0, 421, 426, 427, 428, 430, 431, 432,
	433, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 406, 286, 239, 240, 446, 272, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 405, 0, 0, 0, 434, 445, 0, 0, 0,
	0, 0, 444, 338, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 387,
	399, 416, 419, 0, 0, 0, 0, 244, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 398, 0, 0, 0, 0, 0, 414, 0, 0,
	322, 323, 324, 325, 289, 0, 261, 417, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 412, 285, 291,
	429, 293, 260, 337, 287, 396, 300, 0, 422, 0,
	423, 0, 0, 0, 0, 329, 296, 297, 361, 301,
	307, 350, 395, 335, 355, 258, 386, 362, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	237, 266, 0, 241, 0, 305, 0, 346, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	334, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	402, 403, 404, 425, 388, 0, 443, 279, 0, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 447, 439,
	0, 0, 0, 435, 0, 436, 0, 0, 0, 0,
	0, 363, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 437, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 368, 384, 257, 359,
	397, 262, 366, 252, 333, 356, 0, 0, 249, 382,
	365, 315, 298, 299, 248, 0, 351, 277, 290, 274,
	331, 0, 381, 409, 273, 400, 0, 392, 251, 0,
	391, 330, 378, 383, 316, 310, 250, 380, 314, 309,
	302, 281, 424, 294, 342, 308, 343, 295, 320, 319,
	321, 0, 0, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 303, 0, 0, 0, 410, 0,
	354, 336, 0, 0, 0, 352, 306, 379, 344, 385,
	369, 393, 1559, 345, 242, 370, 276, 317, 253, 255,
	271, 278, 280, 282, 283, 326, 327, 339, 358, 371,
	372, 373, 275, 263, 353, 264, 292, 265, 243, 268,
	267, 269, 360, 270, 245, 340, 377, 0, 288, 349,
	313, 246, 312, 341, 376, 375, 254, 401, 407, 408,
	0, 0, 413, 0, 0, 0, 421, 426, 427, 428,
	430, 431, 432, 433, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 406, 286, 239, 240, 446,
	272, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 405, 0, 0, 0, 434, 445,
	0, 0, 0, 0, 0, 444, 338, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 387, 399, 416, 419, 0, 0, 0, 0,
	244, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 398, 0, 0, 0, 0, 0,
	414, 0, 0, 322, 323, 324, 325, 289, 0, 261,
	417, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	412, 285, 291, 429, 293, 260, 337, 287, 396, 300,
	0, 422, 0, 423, 0, 0, 0, 0, 329, 296,
	297, 361, 301, 307, 350, 395, 335, 355, 258, 386,
	362, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 237, 266, 0, 241, 0, 305, 0,
	346, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 334, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 402, 403, 404, 425, 388, 0, 443,
	279, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 447, 439, 0, 0, 0, 435, 0, 436, 0,
	0, 0, 0, 0, 363, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 437, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 368,
	384, 257, 359, 397, 262, 366, 252, 333, 356, 0,
	0, 249, 382, 365, 315, 298, 299, 248, 0, 351,
	277, 290, 274, 331, 0, 381, 409, 273, 400, 0,
	392, 251, 0, 391, 330, 378, 383, 316, 310, 250,
	380, 314, 309, 302, 281, 424, 294, 342, 308, 343,
	295, 320, 319, 321, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	1247, 0, 0, 0, 367, 0, 0, 303, 0, 0,
	0, 410, 0, 354, 336, 0, 0, 0, 352, 306,
	379, 344, 385, 369, 393, 348, 345, 242, 370, 276,
	317, 253, 255, 271, 278, 280, 282, 283, 326, 327,
	339, 358, 371, 372, 373, 275, 263, 353, 264, 292,
	265, 243, 268, 267, 269, 360, 270, 245, 340, 377,
	0, 288, 349, 313, 246, 312, 341, 376, 375, 254,
	401, 407, 408, 0, 0, 413, 0, 0, 0, 421,
	426, 427, 428, 430, 431, 432, 433, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 406, 286,
	239, 240, 446, 272, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 405, 0, 0,
	0, 434, 445, 0, 0, 0, 0, 0, 444, 338,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 387, 399, 416, 419, 0,
	0, 0, 0, 244, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 398, 0, 0,
	0, 0, 0, 414, 0, 0, 322, 323, 324, 325,
	289, 0, 261, 417, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 412, 285, 291, 429, 293, 260, 337,
	287, 396, 300, 0, 422, 0, 423, 0, 0, 0,
	0, 329, 296, 297, 361, 301, 307, 350, 395, 335,
	355, 258, 386, 362, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 237, 266, 0, 241,
	0, 305, 0, 346, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 334, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 402, 403, 404, 425,
	388, 0, 443, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 447, 439, 0, 0, 0, 435,
	0, 436, 0, 0, 0, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 334,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 279, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 435, 0, 436, 0, 0, 0, 0, 0,
	363, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	437, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 368, 384, 257, 359, 397,
	262, 366, 252, 333, 356, 0, 0, 249, 382, 365,
	315, 298, 299, 248, 0, 351, 277, 290, 274, 331,
	0, 381, 409, 273, 400, 0, 392, 251, 0, 391,
	330, 378, 383, 316, 310, 250, 380, 314, 309, 302,
	281, 424, 294, 342, 308, 343, 295, 320, 319, 321,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 303, 0, 0, 0, 410, 0, 354,
	336, 0, 0, 0, 352, 306, 379, 344, 385, 369,
	393, 485, 345, 242, 370, 276, 317, 253, 255, 271,
	278, 280, 282, 283, 326, 327, 339, 358, 371, 372,
	373, 275, 263, 353, 264, 292, 265, 243, 268, 267,
	269, 360, 270, 245, 340, 377, 0, 288, 349, 313,
	246, 312, 341, 376, 375, 254, 401, 407, 408, 0,
	0, 413, 0, 0, 0, 421, 426, 427, 428, 430,
	431, 432, 433, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 406, 286, 239, 240, 446, 272,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 405, 0, 0, 0, 434, 445, 0,
	0, 0, 0, 0, 444, 338, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 387, 399, 416, 419, 0, 0, 0, 0, 244,
	418, 0, 0, 0, 0, 0, 0, 486, 0, 390,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 414,
	0, 0, 322, 323, 324, 325, 289, 0, 261, 417,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 412,
	285, 291, 429, 293, 260, 337, 287, 396, 300, 0,
	422, 0, 423, 0, 0, 0, 0, 329, 296, 297,
	361, 301, 307, 350, 395, 335, 355, 258, 386, 362,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 237, 266, 0, 241, 0, 305, 0, 346,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 334, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 402, 403, 404, 425, 388, 0, 443, 279,
	0, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	447, 439, 0, 0, 0, 435, 0, 436, 0, 0,
	0, 0, 0, 363, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 437, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 368, 384,
	257, 359, 397, 262, 366, 252, 333, 356, 0, 0,
	249, 382, 365, 315, 298, 299, 248, 0, 351, 277,
	290, 274, 331, 0, 381, 409, 273, 400, 0, 392,
	251, 0, 391, 330, 378, 383, 316, 310, 250, 380,
	314, 309, 302, 281, 424, 294, 342, 308, 343, 295,
	320, 319, 321, 0, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 462, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 303, 0, 0, 0,
	410, 0, 354, 336, 0, 0, 0, 352, 306, 379,
	344, 385, 369, 393, 348, 345, 242, 370, 276, 317,
	253, 255, 271, 278, 280, 282, 283, 326, 327, 339,
	358, 371, 372, 373, 275, 263, 353, 264, 292, 265,
	243, 268, 267, 269, 360, 270, 245, 340, 377, 0,
	288, 349, 313, 246, 312, 341, 376, 375, 254, 401,
	407, 408, 0, 0, 413, 0, 0, 0, 421, 426,
	427, 428, 430, 431, 432, 433, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 406, 286, 239,
	240, 446, 272, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 405, 0, 0, 0,
	434, 445, 0, 0, 0, 0, 0, 444, 338, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 387, 399, 416, 419, 0, 0,
	0, 0, 244, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 414, 0, 0, 322, 323, 324, 325, 289,
	0, 261, 417, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 285, 291, 429, 293, 260, 337, 287,
	396, 300, 0, 422, 0, 423, 0, 0, 0, 0,
	329, 296, 297, 361, 301, 307, 350, 395, 335, 355,
	258, 386, 362, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 237, 266, 0, 241, 0,
	305, 0, 346, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 334, 238, 233, 234,
	235, 236, 0, 0, 0, 402, 403, 404, 425, 388,
	0, 443, 452, 279, 0, 0, 304, 0, 0, 0,
	0, 0, 0, 447, 439, 0, 0, 0, 0, 435,
	0, 436, 0, 0, 0, 0, 0, 363, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 437, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 368, 384, 257, 359, 397, 262, 366, 252,
	333, 356, 0, 0, 249, 382, 365, 315, 298, 299,
	248, 0, 351, 277, 290, 274, 331, 0, 381, 409,
	273, 400, 0, 392, 251, 0, 391, 330, 378, 383,
	316, 310, 250, 380, 314, 309, 302, 281, 424, 294,
	342, 308, 343, 295, 320, 319, 321, 0, 0, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 367, 0, 0,
	303, 0, 0, 0, 410, 0, 354, 336, 0, 0,
	0, 352, 306, 379, 344, 385, 369, 393, 348, 345,
	242, 370, 276, 317, 253, 255, 271, 278, 280, 282,
	283, 326, 327, 339, 358, 371, 372, 373, 275, 263,
	353, 264, 292, 265, 243, 268, 267, 269, 360, 270,
	245, 340, 377, 0, 288, 349, 313, 246, 312, 341,
	376, 375, 254, 401, 407, 408, 0, 0, 413, 0,
	0, 0, 421, 426, 427, 428, 430, 431, 432, 433,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 406, 286, 239, 240, 446, 272, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	405, 0, 0, 0, 434, 445, 0, 0, 0, 0,
	0, 444, 338, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 387, 399,
	416, 419, 0, 0, 0, 0, 244, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 414, 0, 0, 322,
	323, 324, 325, 289, 0, 261, 417, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 412, 285, 291, 429,
	293, 260, 337, 287, 396, 300, 0, 422, 0, 423,
	0, 0, 0, 0, 329, 296, 297, 361, 301, 307,
	350, 395, 335, 355, 258, 386, 362, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 237,
	266, 0, 241, 0, 305, 0, 346, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 334,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 402,
	403, 404, 425, 388, 0, 443, 279, 0, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 447, 439, 0,
	0, 0, 435, 0, 436, 0, 0, 0, 0, 0,
	363, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	437, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 368, 384, 257, 359, 397,
	262, 366, 252, 333, 356, 0, 0, 249, 382, 365,
	315, 298, 299, 248, 0, 351, 277, 290, 274, 331,
	0, 381, 409, 273, 400, 0, 392, 251, 0, 391,
	330, 378, 383, 316, 310, 250, 380, 314, 309, 302,
	281, 424, 294, 342, 308, 343, 295, 320, 319, 321,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 303, 0, 0, 0, 410, 0, 354,
	336, 0, 0, 0, 352, 306, 379, 344, 385, 369,
	393, 348, 345, 242, 370, 276, 317, 253, 255, 271,
	278, 280, 282, 283, 326, 327, 339, 358, 371, 372,
	373, 275, 263, 353, 264, 292, 265, 243, 268, 267,
	269, 360, 270, 245, 340, 377, 0, 288, 349, 313,
	246, 312, 341, 376, 375, 254, 401, 407, 408, 0,
	0, 413, 0, 0, 0, 421, 426, 427, 428, 430,
	431, 432, 433, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 406, 286, 239, 240, 446, 272,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 405, 0, 0, 0, 434, 445, 0,
	0, 0, 0, 0, 444, 338, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 387, 399, 416, 419, 0, 0, 0, 0, 244,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 398, 0, 0, 0, 0, 0, 414,
	0, 0, 322, 323, 324, 325, 289, 0, 261, 417,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 412,
	285, 291, 429, 293, 260, 337, 287, 396, 300, 0,
	422, 0, 423, 0, 0, 0, 0, 329, 296, 297,
	361, 301, 307, 350, 395, 335, 355, 258, 386, 362,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 237, 266, 0, 241, 0, 305, 0, 346,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 334, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 402, 403, 404, 425, 388, 0, 443, 279,
	0, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	447, 439, 0, 0, 0, 435, 0, 436, 0, 0,
	0, 0, 0, 363, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 437, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 368, 1202,
	257, 359, 397, 262, 366, 252, 333, 356, 0, 0,
	249, 382, 365, 315, 298, 299, 248, 0, 351, 277,
	290, 274, 331, 0, 381, 409, 273, 400, 0, 392,
	251, 0, 391, 330, 378, 383, 316, 310, 250, 380,
	314, 309, 302, 281, 424, 294, 342, 308, 343, 295,
	320, 319, 321, 0, 0, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 367, 0, 0, 303, 0, 0, 0,
	410, 0, 354, 336, 0, 0, 0, 352, 306, 379,
	344, 385, 369, 393, 348, 345, 242, 370, 276, 317,
	253, 255, 271, 278, 280, 282, 283, 326, 327, 339,
	358, 371, 372, 373, 275, 263, 353, 264, 292, 265,
	243, 268, 267, 269, 360, 270, 245, 340, 377, 0,
	288, 349, 313, 246, 312, 341, 376, 375, 254, 401,
	407, 408, 0, 0, 413, 0, 0, 0, 421, 426,
	427, 428, 430, 431, 432, 433, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 406, 286, 239,
	240, 446, 272, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 405, 0, 0, 0,
	434, 445, 0, 0, 0, 0, 0, 444, 338, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 387, 399, 416, 419, 0, 0,
	0, 0, 244, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 398, 0, 0, 0,
	0, 0, 414, 0, 0, 322, 323, 324, 325, 289,
	0, 261, 417, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 412, 285, 291, 429, 293, 260, 337, 287,
	396, 300, 0, 422, 0, 423, 0, 0, 0, 0,
	329, 296, 297, 361, 301, 307, 350, 395, 335, 355,
	258, 386, 362, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 237, 266, 0, 241, 0,
	305, 0, 346, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 334, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 402, 403, 404, 425, 388,
	0, 443, 279, 0, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 447, 439, 0, 0, 0, 435, 0,
	436, 0, 0, 0, 0, 0, 363, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 437, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 368, 1200, 257, 359, 397, 262, 366, 252, 333,
	356, 0, 0, 249, 382, 365, 315, 298, 299, 248,
	0, 351, 277, 290, 274, 331, 0, 381, 409, 273,
	400, 0, 392, 251, 0, 391, 330, 378, 383, 316,
	310, 250, 380, 314, 309, 302, 281, 424, 294, 342,
	308, 343, 295, 320, 319, 321, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 303,
	0, 0, 0, 410, 0, 354, 336, 0, 0, 0,
	352, 306, 379, 344, 385, 369, 393, 348, 345, 242,
	370, 276, 317, 253, 255, 271, 278, 280, 282, 283,
	326, 327, 339, 358, 371, 372, 373, 275, 263, 353,
	264, 292, 265, 243, 268, 267, 269, 360, 270, 245,
	340, 377, 0, 288, 349, 313, 246, 312, 341, 376,
	375, 254, 401, 407, 408, 0, 0, 413, 0, 0,
	0, 421, 426, 427, 428, 430, 431, 432, 433, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	406, 286, 239, 240, 446, 272, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 405,
	0, 0, 0, 434, 445, 0, 0, 0, 0, 0,
	444, 338, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 387, 399, 416,
	419, 0, 0, 0, 0, 244, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 398,
	0, 0, 0, 0, 0, 414, 0, 0, 322, 323,
	324, 325, 289, 0, 261, 417, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 412, 285, 291, 429, 293,
	260, 337, 287, 396, 300, 0, 422, 0, 423, 0,
	0, 0, 0, 329, 296, 297, 361, 301, 307, 350,
	395, 335, 355, 258, 386, 362, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 237, 266,
	0, 241, 0, 305, 0, 346, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 334, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 402, 403,
	404, 425, 388, 0, 443, 279, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 447, 439, 0, 0,
	0, 435, 0, 436, 0, 0, 0, 0, 0, 363,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 437,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 368, 384, 257, 359, 397, 262,
	366, 252, 333, 356, 0, 0, 249, 382, 365, 315,
	298, 299, 248, 0, 351, 277, 290, 274, 331, 0,
	381, 409, 273, 400, 0, 392, 251, 0, 391, 330,
	378, 383, 316, 310, 250, 380, 314, 309, 302, 281,
	424, 294, 342, 308, 343, 295, 320, 319, 321, 0,
	0, 0, 0, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 367,
	0, 0, 303, 0, 0, 0, 410, 0, 354, 336,
	0, 0, 0, 352, 306, 379, 344, 385, 369, 393,
	348, 345, 242, 370, 276, 317, 253, 255, 526, 278,
	280, 282, 283, 326, 327, 339, 358, 371, 372, 373,
	275, 263, 353, 264, 292, 265, 243, 268, 267, 269,
	360, 270, 245, 340, 377, 0, 288, 349, 313, 246,
	312, 341, 376, 375, 254, 401, 407, 408, 0, 0,
	413, 0, 0, 0, 421, 426, 427, 428, 430, 431,
	432, 433, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 406, 286, 239, 240, 446, 272, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 405, 0, 0, 0, 434, 445, 0, 0,
	0, 0, 0, 444, 338, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	387, 399, 416, 419, 0, 0, 0, 0, 244, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 398, 0, 0, 0, 0, 0, 414, 0,
	0, 322, 323, 324, 325, 289, 0, 261, 417, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 412, 285,
	291, 429, 293, 260, 337, 287, 396, 300, 722, 422,
	723, 423, 0, 0, 0, 0, 329, 296, 297, 361,
	301, 307, 350, 395, 335, 355, 258, 386, 362, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 237, 266, 0, 241, 0, 305, 0, 346, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 402, 403, 404, 425, 388, 1634, 443, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 447,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1636, 1605, 0, 0, 1634, 0, 0, 0, 0, 0,
	1637, 1638, 0, 0, 0, 718, 0, 712, 0, 699,
	0, 0, 0, 0, 0, 0, 715, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 1636, 0,
	0, 0, 0, 696, 0, 0, 0, 704, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3296,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 1611,
	0, 711, 0, 0, 0, 710, 0, 0, 0, 0,
	0, 695, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1627, 0,
	0, 0, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 720,
	0, 0, 0, 1634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 1595, 1597, 1594, 0,
	1591, 0, 0, 0, 0, 1615, 0, 1636, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1609, 1643, 0, 0,
	1610, 1612, 1614, 1615, 1616, 1617, 1618, 1622, 1623, 1624,
	1626, 1629, 1630, 1631, 1621, 0, 0, 0, 1611, 0,
	0, 1619, 1628, 1620, 0, 0, 0, 0, 0, 1636,
	717, 0, 0, 1599, 1609, 1643, 0, 0, 1610, 1612,
	1614, 0, 1616, 1617, 1618, 1622, 1623, 1624, 1626, 1629,
	1630, 1631, 0, 0, 0, 1635, 0, 0, 0, 1619,
	1628, 1620, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 1592, 1593, 0, 0,
	1611, 3041, 0, 0, 0, 1627, 505, 504, 511, 501,
	0, 0, 0, 1635, 1632, 0, 0, 0, 508, 509,
	0, 510, 514, 0, 0, 496, 0, 0, 0, 0,
	0, 1608, 0, 0, 0, 519, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 1627, 0, 1608,
	0, 1613, 0, 0, 0, 0, 1607, 0, 523, 0,
	0, 525, 1615, 1640, 1639, 0, 524, 0, 0, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 1613,
	0, 0, 0, 1609, 1643, 0, 0, 1610, 1612, 1614,
	0, 1616, 1617, 1618, 1622, 1623, 1624, 1626, 1629, 1630,
	1631, 0, 0, 0, 0, 1601, 0, 0, 1619, 1628,
	1620, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1642, 1635, 0, 1641, 1609, 1643, 0, 0, 1610,
	1612, 1614, 0, 1616, 1617, 1618, 1622, 1623, 1624, 1626,
	1629, 1630, 1631, 505, 504, 511, 501, 0, 0, 0,
	1619, 1628, 1620, 0, 0, 508, 509, 0, 510, 514,
	0, 1632, 496, 0, 0, 0, 0, 0, 0, 497,
	499, 498, 519, 0, 0, 0, 0, 0, 1608, 503,
	0, 0, 0, 0, 1635, 1607, 0, 0, 0, 0,
	0, 507, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 1625,
	0, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	506, 512, 0, 513, 515, 0, 0, 516, 517, 518,
	0, 0, 520, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 499, 498, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 502, 506, 512, 0,
	513, 515, 0, 0, 516, 517, 518, 0, 0, 520,
	521,
}

var yyPact = [...]int{
	285, -1000, -1000, -1000, -317, 10181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35277,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35277,
	-309, 34734, 34734, -1000, -1000, 2160, -1000, 34190, 11312, 35277,
	326, 320, 35277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 677,
	-1000, 33647, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 571,
	4172, 36906, 7931, -256, -1000, 3069, -98, 2073, 865, 884,
	1007, 1007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37303, 801, 33104, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3831, 341, 801, 13491, 26,
	25, 3069, 334, 257, -1000, 1074, 4003, 158, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7931,
	7931, 10181, -346, 10181, 7931, 35277, 35277, -1000, -1000, -1000,
	-1000, 571, 4172, 7931, 2073, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 25,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4278, -1000, 1319, -1000, -1000, -1000, -1000, -1000, 2533, 1313,
	2070, 529, 35277, -1000, 1305, 529, -1000, -1000, -1000, 3069,
	3069, -1000, 35277, 35277, 97, 1585, -1000, 368, 350, 337,
	1266, -1000, -1000, -1000, -1000, -1000, -1000, 432, 2925, -1000,
	35277, 35277, 2564, 35277, -1000, 1913, 478, 37824, 2707, 1379,
	718, 2575, -1000, -1000, 2532, -1000, 220, 1154, 196, 375,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 216, -1000, 2782,
	-1000, -1000, 203, -1000, -1000, 198, -1000, -1000, -1000, 24,
	-1000, -1000, -1000, -1000, -1000, -1000, -95, -1000, -1000, 905,
	1736, 7931, -1000, 1922, -1000, 2314, -1000, -1000, -1000, -1000,
	5124, 9611, 9611, 9611, 9611, -1000, -1000, 2383, 7931, 2531,
	2525, 2521, -1000, -1000, -1000, -1000, -1000, 1264, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1719, -1000, -1000,
	-1000, 9051, -1000, 2520, 2519, 2517, 2516, 2515, 2514, 2508,
	2506, 2505, 2504, 2503, 2502, 2499, 2498, 2255, 10739, 2497,
	2067, 2063, 2496, 2495, 2478, 2062, 2255, 2255, 2473, 2466,
	2464, 2463, 2462, 2453, 2451, 2445, 2444, 2443, 2440, 2438,
	2437, 2434, 2433, 2409, 2407, 2405, 2404, 2403, 2397, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1091, -1000, 2392, 2692, 2817, 2292, 2879, 2802,
	2783, 2778, 2762, 1874, -1000, -1000, 64, -1000, -115, -1000,
	-1000, 828, -1000, 787, -1000, 35277, 35277, 35277, 864, 569,
	569, 569, 569, 569, 569, 635, 569, 35277, -158, 672,
	661, 652, 569, -1000, -1000, -1000, -1000, -1000, -1000, -113,
	-1000, 1573, 1564, 2624, 763, -1000, -1000, -1000, -1000, 1133,
	35277, -1000, 2299, 1461, 1461, 2814, 493, 484, 470, 1461,
	351, -1000, 1587, 1587, 1587, 1587, 1461, 374, 521, 2817,
	2817, 10, 1587, 3, 1461, 1461, 3, 1461, 1461, 1461,
	184, -308, -1000, -1000, -1000, 1587, 1587, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2795, 2788, 571, 35277, 120, 35277,
	571, 571, 571, 579, -65, 36363, 35820, 1913, 477, 476,
	1135, 1574, -1000, 1468, 35277, 35277, 1468, 1468, 17886, 17343,
	-1000, 35277, -1000, 2817, 2292, -1000, 2229, 2522, 2223, 2292,
	571, 571, 571, 571, 571, 175, 571, 571, 571, 571,
	35277, 35277, 32561, 571, 571, 6804, 6804, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10181, 1680, 1865, 157,
	-68, -312, 200, -1000, -1000, 35277, 2677, 170, -1000, -1000,
	-1000, 2262, -1000, 2293, 2293, 2293, 2293, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2349, 2391, -1000, -1000,
	2290, 2290, 2290, 2262, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2343,
	2343, 2348, 2348, 2343, 35277, 7931, 35277, 2699, 328, 2390,
	-1000, 35277, 324, 2817, 2692, 2817, -1000, -1000, 1252, 1871,
	2057, -1000, -1000, 368, 1427, -1000, 926, -1000, -1000, -1000,
	-1000, 35277, -95, 317, -1000, -1000, 2039, 2389, -1000, 498,
	1277, 1109, -1000, 140, 38011, 28210, 1913, 28210, 35277, -1000,
	-1000, -1000, -1000, -1000, -1000, 21, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 195,
	-1000, 7931, 7931, 7931, 7931, 7931, -1000, 627, 8491, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9611, 9611, 9611, 9611,
	9611, 9611, 9611, 9611, 9611, 9611, 9611, 9611, 2381, 1583,
	9611, 9611, 9611, 9611, 2522, 2920, 1134, 232, -1000, -1000,
	-1000, -1000, -1000, 1613, 1736, 7931, 7931, 7931, 35277, -1000,
	-1000, 3057, 7931, 7931, 4005, 7931, 2760, 7931, 7931, 7931,
	2221, 3432, 35277, 7931, -1000, 2220, 2218, -1000, -1000, 1730,
	7931, -1000, -1000, 7931, -1000, -1000, 7931, 9611, 7931, -1000,
	-1000, -1000, 2127, 2760, 2760, 1547, 7931, 7931, 2760, 2760,
	2760, 1543, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	2214, 2213, 2195, 2817, -256, 6244, -1000, -262, 2692, 7931,
	-1000, -1000, 7931, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2049, 2048, -324, -30, 857, 825, 845, -1000, 2745,
	-1000, 2387, 2386, 1242, 569, -1000, -114, 35277, 1627, 35277,
	28210, 35277, 35277, 1913, 35277, 35277, -173, 569, -157, 569,
	569, 569, 35277, -1000, 2634, 28210, 2628, 579, -1000, 35277,
	1133, 2743, 35277, 2896, 9611, 9611, -1000, 32018, 1587, 1461,
	1461, -1000, -1000, 35277, -1000, -1000, -1000, 1587, 35277, 1587,
	1587, 2896, 1587, -1000, -1000, -1000, 1461, 1461, -1000, -1000,
	-1000, -1000, 1587, 1587, -1000, -1000, 2896, 35277, 20, 2896,
	2896, -7, -1000, -1000, -1000, 35277, 35277, 569, 35277, -1000,
	35277, 35277, -1000, -1000, 35277, 37480, 35277, 31475, 2776, -1000,
	28210, 35277, 35277, 25495, -1000, 1078, -1000, -55, -1000, -32,
	-65, 1468, -65, 1468, -1000, 497, 489, 16257, 438, 28210,
	4564, -1000, -1000, 1468, 1468, 4564, 4564, 1331, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1130, -1000, 167, 2692, -1000,
	-1000, -1000, -1000, -1000, 35277, 35277, 28210, 1913, 35277, 571,
	35277, 35277, 35277, 35277, -1000, 2385, -1000, 2705, 35277, 35277,
	1068, -1000, -1000, 12948, 1238, 1068, -1000, 1624, -1000, 7931,
	10181, -288, 7931, 10181, 10181, 7931, 10181, -1000, 7931, 152,
	-1000, -1000, -1000, -1000, 1870, -1000, 1868, -1000, -1000, -1000,
	2047, 2047, -1000, 1862, -1000, -1000, -1000, -1000, 1856, -1000,
	-1000, 1853, -1000, -1000, -1000, 2191, 905, -1000, 2043, 2574,
	-257, -1000, 15154, 35277, 35277, -1000, -1000, -257, -1000, 14594,
	35277, 2692, -1000, 2692, 35277, -1000, 2807, -1000, 368, 293,
	-1000, -1000, -1000, -1000, -1000, -1000, 1224, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1127, -1000, 35277, -1000,
	-1000, 140, 28210, 29296, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 190, -1000, -1000, 164, -1000, 605, 124, 1426, -1000,
	-1000, 131, 169, 696, 1736, -1000, 1683, 1683, 1647, -1000,
	583, -1000, -1000, -1000, -1000, 2383, -1000, -1000, -1000, 1507,
	2428, -1000, 1521, 1521, 1336, 1336, 1336, 1336, 1336, 1592,
	1592, -1000, -1000, -1000, 5124, 2381, 9611, 9611, 9611, 9611,
	540, 540, 2146, 3283, -1000, 7931, 1608, -1000, 7931, 2135,
	2030, 1118, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2190, 2188, 2323, 2923, 2186, 7931, -1000,
	-1000, 1410, 1403, 1393, -1000, 1747, 7371, -1000, -1000, -1000,
	2184, 1215, 2181, -1000, -1000, -1000, 2180, 1392, 1050, 2157,
	1483, 2156, 1116, 7931, 7931, 7931, 2155, 1388, 1380, 7931,
	7931, 7931, 7931, 2153, 7931, 7931, 7931, 7931, 7931, 7931,
	7931, 7931, 42, 42, 42, -1000, -1000, 1378, -1000, 1736,
	-1000, 2042, -1000, 1249, 1112, -1000, 2150, -1000, -1000, -1000,
	1991, -1000, -1000, 853, 776, 803, 35277, 924, 11855, 35277,
	35277, -1000, 2299, 2703, 160, -1000, 1079, -1000, 124, -105,
	331, 932, 2563, 2917, 2380, 35277, 569, 35277, 35277, 35277,
	2740, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30932,
	-1000, 2362, 1371, -1000, -1000, 7931, -1000, -1000, 2561, 35277,
	35277, 2896, 2896, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35277, 2896, 2896, 1461, 1587, -1000, -1000, 1587, -1000, -1000,
	1587, -1000, 1213, -1000, 35277, -1000, -1000, -1000, 2299, 1094,
	-1000, 1342, 556, 556, 781, 743, 2878, 14034, -1000, 1431,
	965, 598, 2663, 218, -1000, 1431, -206, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 414, 408, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 875, 1431, 1431,
	1431, 1431, 1431, -1000, 1431, 2361, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 449, 147, 2766, 249, 243, 1079, 2753,
	260, 3055, 1024, -1000, -1000, -1000, -1000, 20065, 20065, 15714,
	20065, -1000, 1477, -65, -39, -1000, -1000, 1078, 4564, 1078,
	4564, -1000, -1000, 595, -1000, -1000, 932, -1000, 35277, 35277,
	-1000, -1000, 2360, 1556, -1000, -1000, 10739, -1000, 4564, 4564,
	-1000, -1000, 20608, 35277, -1000, -96, -1000, -76, 2805, 1049,
	-1000, -1000, 1066, 932, 2573, 35277, 1049, 1049, -1000, -1000,
	11855, 35277, -1000, -1000, 2896, 6804, -1000, 25495, -1000, -1000,
	30382, -1000, 29839, 2896, 1586, -1000, 10181, 1846, 154, -1000,
	182, -316, 153, 1642, 151, 1736, -1000, -1000, 2152, 2148,
	1332, -1000, 1325, 2139, 1322, 1314, -1000, -34, -1000, 2683,
	933, -1000, 2359, -1000, 1311, 2620, -1000, 1035, -1000, 1551,
	1310, -1000, 933, 1307, 2615, 1035, 2805, -1000, 1187, 92,
	-1000, -1000, 35277, 2039, 1301, 29296, 947, -1000, 593, 1183,
	1173, -1000, 28210, 211, 28210, -1000, 28210, -1000, -1000, 327,
	-1000, 35277, 2691, -1000, -1000, -1000, 1991, -329, -1000, -1000,
	-1000, -1000, -1000, 1300, -1000, 540, 540, 2146, 3231, -1000,
	9611, -1000, 9611, 2895, 1496, -1000, 7931, 1769, 3926, 3926,
	1718, 18972, 35277, -1000, -1000, 7931, 7931, -1000, 2886, -1000,
	-1000, -1000, -1000, 7931, 7931, 2115, -1000, 35277, -1000, -1000,
	-1000, -1000, 18972, -1000, 9611, -1000, 7931, 1084, 2850, 1293,
	42, 42, 42, 2826, 2818, 2811, 1292, 42, 2796, 2777,
	2744, 2737, 2713, 2693, 2679, 2637, -1000, 2354, -1000, -1000,
	6244, -1000, -34, 7931, 7931, 7931, 2660, -1000, -1000, 109,
	-1000, 1533, -1000, -1000, -1000, 773, 186, 2137, 1029, -1000,
	-1000, 35277, -1000, -1000, -1000, 2134, 1003, -1000, -1000, -1000,
	12336, 2293, 2293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2349, -1000, -1000, 2290, 2290, 2290, 2262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2343, 2343,
	2348, 2348, 2343, -1000, 2299, 2738, -1000, 53, 1431, 506,
	28210, 446, -1000, 35277, 1884, 1520, 2571, 406, 2672, 35277,
	26038, 252, 35277, 2342, 2319, 2318, 308, 12336, 35277, 1065,
	-1000, 1163, 4003, -1000, 35277, 1736, -1000, 1913, -1000, 1461,
	-1000, -1000, 2896, 1274, -1000, -1000, 2896, 1461, 1461, 1587,
	35277, -1000, 2730, 37480, -1000, 35277, -1000, -1000, -1000, 684,
	-1000, 757, 569, 35277, 1691, 757, 1679, 2310, -1000, -1000,
	35277, 35277, 35277, 35277, -1000, -1000, 35277, -1000, 35277, 35277,
	35277, 35277, -1000, 35277, 35277, -1000, 35277, 1677, 1672, 2685,
	-1000, 1431, 1431, 735, -1000, -1000, 479, -1000, 1852, 1849,
	1844, 1807, 2035, 2034, 2023, 1431, 1431, 1805, 2022, 28753,
	2016, 907, 1799, 1798, 1791, 1899, 2007, 928, -1000, 2004,
	1797, 1780, 1775, 35277, 2300, 1954, -1000, -1000, 53, 1431,
	242, 35277, 1495, 506, 316, 1889, 16800, 35277, 25495, 25495,
	25495, 25495, -1000, 2592, 2589, -1000, 2591, 2590, 2609, 35277,
	25495, 2299, -1000, 28753, -1000, -1000, -1000, 2522, 1259, 2991,
	744, 7931, -1000, -1000, -73, -85, -1000, -1000, -1000, 28210,
	1998, 438, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2935, 35277, 35277, 647, 2130, -1000, 2894, -1000, 1000, -1000,
	-1000, 1156, -1000, 2894, 1633, -318, 10181, 1610, 1390, -1000,
	7931, 10181, 7931, -289, 228, -296, -1000, -1000, -1000, 1996,
	-1000, -1000, -1000, 1785, -1000, 1779, 67, 79, 1660, -257,
	6244, 330, 35277, -257, 35277, 6244, -1000, 35277, 315, -257,
	-1000, 35277, 1777, -1000, -1000, -1000, 2907, 28210, 1913, 1357,
	27667, -1000, 197, -1000, 185, 469, 1992, -1000, 646, 105,
	1991, -1000, -1000, -1000, 9611, -1000, -1000, -1000, -1000, 1736,
	7931, 2125, -1000, 760, 760, 2124, 2122, -1000, 2293, 2293,
	-1000, 2262, 2290, 2262, 760, 760, 2121, -1000, 2081, 2562,
	-1000, 2509, 2500, 7931, -1000, 2117, 3188, 1148, -125, 42,
	42, -1000, -1000, -1000, -1000, 42, 42, 42, 42, -1000,
	42, 42, 42, 42, 42, 42, 42, 42, 532, -1000,
	67, 1736, 1736, -1000, -1000, 2676, -1000, 1991, 1990, -1000,
	1989, 1987, 924, 12336, 651, 11855, 2674, 2729, 322, 1894,
	-1000, -1000, -1000, 27124, 468, -1000, -1000, -1000, 574, 229,
	1774, 434, -1000, 35277, 260, 2640, 1494, 1986, 35277, -1000,
	-1000, -1000, -1000, -1000, 2672, -1000, 616, 288, 1246, -1000,
	1431, 1431, 12398, 2726, 2289, 2288, 12398, 12398, 12398, 295,
	1493, -1000, 529, 1010, 1146, 25495, 35277, -1000, 24952, 2116,
	-1000, 932, 2896, -1000, 35277, -1000, 2896, 2896, 1461, -1000,
	322, -1000, 2653, 12336, -1000, 35277, -1000, 35277, -1000, 35277,
	35277, 569, 7931, 2653, 35277, 587, -1000, -1000, 850, 297,
	581, 581, 955, -1000, 2690, -1000, -1000, -1000, 35277, -1000,
	-1000, -1000, -1000, -1000, -1000, 18972, 18972, 2751, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1978, 1976, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35277, 1231, -1000, 1490, 1894, 27124, 1489, 1468, 1972,
	468, 1884, 1488, -1000, 1970, -1000, 937, 35277, 35277, -1000,
	1046, -1000, 1451, 2543, 2570, 2543, -1000, -1000, -1000, -1000,
	2588, -1000, 2455, -1000, -1000, 1046, -1000, -1000, -1000, -1000,
	-1000, 744, -1000, 2804, 757, 757, 757, 2113, -1000, -1000,
	-1000, 947, 2112, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2892, 2876, 26581, 2892, -1000, -318, 1430, -1000,
	1661, 148, 1590, 35277, -1000, -1000, -1000, 2111, 2103, -269,
	82, 2874, 2871, 2932, -1000, 2101, 945, -257, -1000, -1000,
	933, -1000, -1000, -1000, -257, -1000, 933, -1000, -1000, 1913,
	-1000, 171, -1000, -1000, -1000, -1000, -1000, -1000, 112, -1000,
	35277, -1000, 104, -1000, 1736, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7931, -1000, -1000, -1000, 2441, -1000, -1000, 7931, 2100,
	1969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2939, -1000, 2870, -269, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12336, -1000, 1506,
	322, -186, -1000, 1966, 123, -1000, -1000, -1000, 1965, 1955,
	1767, -1000, -1000, 1773, 1227, 136, -1000, -1000, -1000, -1000,
	-1000, -1000, 1889, 1888, 1450, -332, -1000, 2286, -1000, 1431,
	1431, 1431, 35277, -1000, 26038, 1506, 1506, 2099, 944, -1000,
	-1000, -1000, -1000, 322, 23866, 12398, 2091, 2085, 2084, 534,
	1452, 1428, -1000, 1766, 20065, 25495, 24952, 1041, -1000, 1145,
	-1000, -1000, -1000, 2896, -1000, -1000, 2896, -1000, -1000, -1000,
	35277, 301, 2285, -1000, 2284, 2560, 323, 2277, 2274, 35277,
	2431, -1000, 2653, 35277, 600, 2668, -1000, -1000, -1000, -1000,
	-1000, 360, -1000, 35277, -1000, -1000, 1329, -1000, 18972, -1000,
	-1000, 1226, -1000, 1954, 1950, -1000, 123, 1949, 4564, -1000,
	-1000, 2640, 1946, -1000, 35277, 937, 937, 2939, 35277, 6244,
	-1000, -1000, 7931, 2273, -1000, 7931, -1000, -1000, -1000, -1000,
	-1000, 2272, 2656, -1000, -1000, -1000, -1000, -1000, -1000, 7931,
	7931, -1000, -1000, 559, 10181, -297, 227, -1000, -1000, -1000,
	-273, 1945, -1000, -1000, 2869, 1941, 1905, 35277, -1000, 933,
	933, 932, -1000, -1000, -7, -1000, 2395, -1000, 2268, 42,
	-1000, 113, 7931, -273, -168, -1000, -1000, -186, -1000, 336,
	-1000, -1000, 318, -1000, -1000, 262, -1000, -1000, 1770, 500,
	-1000, -1000, -1000, 1939, 1697, 1919, 23323, 18972, 19515, 1938,
	-1000, -1000, -1000, -1000, -193, 12398, -1000, 1219, -1000, 1431,
	1431, 2082, 37739, 195, 37739, 886, 1419, -1000, 1756, -1000,
	1754, -1000, 2896, 1041, 1145, -1000, -1000, 1347, -1000, -1000,
	-1000, -1000, 301, -1000, -1000, 1704, 9611, -1000, -1000, 1937,
	19515, 649, 1444, 1443, 693, 2267, -1000, 370, 2931, -1000,
	-1000, -1000, 732, 2264, -1000, 1655, 1653, -1000, 35277, -1000,
	23323, 23323, 335, 335, 23323, 23323, 2263, 581, -1000, -1000,
	9611, -1000, -1000, -1000, -1000, 1431, 1250, -1000, -1000, -1000,
	-1000, -1000, -1000, 1888, -1000, -1000, 2817, -1000, -1000, 1736,
	35277, 1736, 24409, -1000, 2864, 2861, 1736, 905, -1000, -318,
	35277, 35277, -275, 1746, -1000, 1935, 72, -1000, -1000, 929,
	-282, 49, 68, -1000, -1000, -1000, 2079, -1000, 989, -1000,
	-1000, -1000, 905, -275, 35277, -1000, 363, -1000, -1000, 463,
	1934, -1000, -1000, 255, -1000, -1000, -1000, -1000, -1000, 101,
	-1000, 1441, 1171, -1000, 2262, 7931, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 23866, 1506, 1506, -193, 523, 37677,
	-1000, 965, -1000, -7, 523, 447, 247, -1000, 1740, -1000,
	-1000, 2939, -1000, -1000, -1000, 2146, -1000, -1000, -1000, -1000,
	-1000, -1000, 1932, 1931, -1000, -1000, -1000, -1000, -1000, 1739,
	2261, -57, 2748, 1929, -1000, -1000, 2260, 1169, 1164, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1158, 1152, 23323, -1000,
	-1000, 2146, 18972, 1431, -1000, -1000, 1142, 1125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2259, -1000, -1000, 2860, -1000,
	1926, 573, 57, 68, -1000, 2856, 71, 2855, 2844, -1000,
	-1000, 1360, -259, 40, 38, 37, -1000, -1000, -1000, 7931,
	-1000, 2715, -1000, 194, -1000, 111, -1000, -1000, -1000, 1919,
	1912, -1000, 23323, 2690, 2069, -1000, -1000, -1000, -1000, 339,
	2842, 37739, -1000, 1431, -1000, 339, -1000, 298, -1000, 1415,
	-1000, 1737, -1000, 2817, -1000, -1000, 2074, 7931, 2255, 1431,
	2044, -164, 23323, 2559, 2558, 2544, 2511, 1124, -1000, 18972,
	-1000, -1000, 22780, 35277, 1905, -1000, 2253, 1734, 82, 58,
	2840, -1000, 1905, 2822, 1905, 1905, 1645, -1000, 35, 33,
	31, -1000, -1000, -1000, -1000, 1909, -1000, -1000, -1000, -1000,
	230, -1000, -1000, 2690, -1000, 2821, 423, -1000, 18972, -1000,
	-1000, -1000, 1732, -1000, -1000, -1000, 1879, -1000, 35277, -1000,
	2569, -1000, 161, 1119, 230, 335, 230, 335, 230, 335,
	230, 335, 191, -1000, -1000, -1000, 1108, -1000, -1000, 2741,
	18429, 54, -1000, -1000, -1000, 1906, -1000, 1905, -1000, -1000,
	1360, -1000, -1000, -1000, -1000, -1000, 1431, 1904, 281, -1000,
	-1000, -1000, 22237, 343, 367, 347, -1000, 514, -1000, -1000,
	-1000, 581, -1000, -1000, 2567, 2398, 2900, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35277, -1000, 35277,
	-1000, 1098, -1000, -1000, -1000, 1144, -1000, -1000, -1000, -1000,
	-1000, 1728, -1000, 35277, -1000, 35277, 348, 1725, 9611, 2244,
	9611, 2240, 352, 2238, -1000, -1000, 2930, -1000, 2928, 745,
	745, 230, 230, 230, 230, -1000, 895, -1000, 1413, -1000,
	21694, 35277, -1000, -1000, 1093, 2237, 2819, -1000, 2909, 35277,
	2881, 35277, 2231, 1405, 9611, -1000, -1000, -1000, 1764, 381,
	-1000, 35277, 5684, -1000, 990, -1000, -1000, 520, 338, -1000,
	1069, -1000, 1057, 21151, 1720, 2356, -1000, -1000, -1000, -1000,
	-1000, 1736, 35277, 1055, -1000, 35277, 342, -1000, -1000, -1000,
	1011, -1000, -1000, -1000, -1000, 520, 2608, -1000, 1713, -1000,
	-1000, 37518, 640, -1000, -1000, 37518, 345, -1000, 503, 2036,
	-1000, -1000, 994, -1000, 35277, 722, 7931, -1000, 345, 37739,
	-1000, 7931, 993, -1000, 37739, 968, -1000, -1000,
}

var yyPgo = [...]int{
	0, 157, 2953, 237, 153, 3542, 70, 238, 210, 207,
	235, 3541, 3540, 2702, 2696, 3539, 3538, 3536, 3529, 3526,
	3522, 3522, 3521, 3515, 3514, 3512, 3511, 3510, 3509, 3508,
	3507, 3506, 3505, 3504, 3503, 3500, 3499, 3498, 3497, 3494,
	3493, 3491, 234, 3490, 3488, 3486, 3485, 3484, 3483, 3481,
	3480, 3479, 3478, 3477, 3476, 3475, 3473, 3472, 3470, 3469,
	3468, 3466, 3465, 3464, 3463, 3462, 3461, 3460, 3459, 3457,
	3456, 3455, 3453, 3452, 203, 3451, 2695, 3450, 3449, 3448,
	3447, 3446, 3444, 3443, 232, 3442, 3441, 3440, 3439, 3438,
	3437, 3436, 3435, 3434, 3433, 3432, 226, 3431, 3430, 3416,
	3415, 3414, 3408, 222, 3407, 151, 204, 3404, 3403, 3402,
	3401, 3400, 3398, 225, 240, 65, 3396, 44, 3395, 215,
	3393, 124, 3392, 126, 3391, 3389, 3388, 3387, 3386, 3385,
	3384, 3383, 3382, 3381, 3379, 3378, 3364, 3363, 3362, 3360,
	84, 3359, 250, 3357, 69, 3355, 3353, 121, 168, 174,
	251, 2087, 247, 239, 167, 156, 83, 3350, 2690, 3349,
	139, 217, 134, 23, 3347, 155, 3346, 145, 43, 61,
	236, 122, 55, 131, 119, 3344, 206, 98, 94, 3343,
	3341, 170, 246, 171, 3340, 108, 3339, 3338, 3337, 3336,
	191, 172, 3335, 3321, 109, 3320, 3318, 85, 3317, 67,
	190, 147, 189, 3315, 854, 113, 105, 104, 164, 3310,
	97, 3309, 3308, 3307, 3306, 162, 3304, 3303, 127, 71,
	3302, 3301, 3300, 66, 3298, 45, 3296, 3295, 31, 3294,
	57, 3292, 3290, 3289, 3288, 3287, 3286, 3284, 3283, 3282,
	3280, 3278, 68, 3277, 3275, 16, 17, 19, 3274, 26,
	3271, 149, 3268, 3266, 3262, 82, 80, 3261, 81, 1,
	46, 89, 3260, 211, 245, 95, 133, 3259, 441, 3258,
	3257, 3255, 138, 3253, 374, 3252, 3251, 3249, 3247, 3245,
	116, 3241, 209, 48, 3239, 115, 132, 3238, 36, 42,
	183, 188, 3236, 3235, 3234, 301, 181, 86, 29, 0,
	3233, 136, 3230, 3229, 3228, 241, 3227, 223, 185, 144,
	128, 257, 179, 3226, 3225, 64, 3224, 150, 54, 51,
	125, 9, 20, 216, 3223, 14, 165, 3222, 192, 3221,
	137, 7, 130, 3219, 3217, 27, 264, 3216, 3215, 3213,
	110, 3212, 3211, 243, 74, 3205, 3203, 3202, 3200, 34,
	3199, 35, 25, 3198, 107, 3197, 233, 3192, 260, 140,
	163, 158, 148, 213, 219, 73, 72, 3191, 1710, 129,
	92, 18, 3189, 218, 3187, 180, 118, 3186, 75, 3185,
	231, 368, 202, 3184, 166, 8, 41, 33, 3183, 10,
	3182, 177, 197, 3181, 3180, 22, 49, 3178, 30, 3177,
	3176, 3175, 3174, 5, 3172, 3170, 3164, 2, 4, 3162,
	3, 200, 3161, 3160, 3158, 3157, 47, 117, 3155, 143,
	178, 160, 3151, 87, 3148, 3146, 3145, 857, 3144, 244,
	3143, 3142, 3139, 3137, 3136, 3135, 3134, 3132, 3131, 93,
	38, 3130, 3121, 3120, 3118, 76, 114, 3117, 3116, 3114,
	3113, 37, 161, 3112, 21, 3110, 32, 28, 39, 3105,
	111, 3103, 12, 169, 3102, 3100, 15, 3098, 3094, 11,
	13, 3093, 3088, 106, 3087, 91, 24, 146, 90, 3084,
	3083, 79, 212, 123, 3071, 3069, 230, 229, 193, 3067,
	142, 224, 248, 3056, 208, 3040, 3037, 3036, 3035, 3015,
	3010, 1047, 3009, 3008, 228, 62, 88, 101, 3007, 2999,
	2998, 78, 141, 103, 99, 56, 77, 2993, 100, 196,
	2992, 176, 2989, 2988, 96, 2987, 2984, 2982, 2975, 2972,
	173, 2970, 2969, 175, 221, 2965, 2964, 2957, 2956, 242,
	214, 2955,
}

//line mysql_sql.y:10360
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 537, 537, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 527, 527, 527, 528,
	528, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 472, 472, 471, 471, 470,
	470, 424, 424, 469, 469, 469, 468, 468, 468, 467,
	467, 466, 466, 465, 465, 463, 463, 464, 462, 461,
	461, 461, 459, 459, 459, 455, 455, 457, 456, 456,
	458, 450, 450, 453, 453, 451, 451, 451, 451, 454,
	449, 449, 449, 448, 448, 95, 95, 95, 370, 370,
	94, 94, 384, 384, 384, 384, 384, 382, 382, 382,
	382, 382, 382, 381, 381, 380, 380, 385, 385, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 85,
	85, 85, 85, 85, 90, 90, 90, 534, 534, 533,
	533, 535, 535, 535, 535, 536, 536, 88, 88, 88,
	89, 379, 379, 379, 86, 87, 87, 369, 369, 374,
	374, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 378, 378, 378, 376, 376, 375,
	375, 377, 377, 79, 79, 79, 82, 81, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 366, 366, 365, 91, 91, 92, 531, 531,
	530, 532, 532, 532, 532, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 497, 497, 497, 499, 499, 303,
	304, 538, 306, 302, 302, 302, 493, 493, 494, 495,
	496, 496, 496, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 238, 238, 238,
	233, 233, 233, 233, 234, 234, 235, 235, 236, 236,
	236, 236, 237, 237, 296, 296, 255, 255, 255, 257,
	257, 256, 254, 252, 252, 252, 252, 252, 252, 253,
	253, 253, 258, 258, 71, 77, 77, 77, 510, 510,
	72, 521, 521, 427, 427, 317, 317, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 432, 433, 313, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 49, 52, 48, 48, 48,
	355, 355, 47, 539, 539, 291, 291, 60, 59, 51,
	61, 62, 63, 64, 65, 66, 46, 58, 58, 58,
	58, 58, 58, 58, 58, 69, 69, 444, 444, 541,
	541, 541, 67, 68, 426, 426, 426, 57, 56, 55,
	54, 53, 53, 45, 45, 44, 44, 50, 134, 135,
	310, 310, 310, 312, 312, 308, 540, 540, 398, 398,
	311, 311, 43, 43, 43, 43, 70, 309, 309, 290,
	307, 307, 307, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 24,
	25, 27, 363, 363, 360, 26, 18, 17, 17, 21,
	20, 16, 16, 19, 22, 23, 23, 9, 9, 9,
	9, 13, 13, 14, 155, 155, 205, 205, 505, 505,
	501, 501, 502, 502, 502, 503, 503, 504, 504, 103,
	438, 438, 438, 438, 438, 438, 8, 177, 177, 437,
	437, 437, 437, 437, 437, 367, 367, 482, 482, 482,
	483, 176, 176, 171, 171, 439, 439, 332, 484, 484,
	447, 447, 446, 446, 445, 445, 174, 174, 175, 175,
	158, 158, 114, 114, 452, 452, 452, 452, 460, 460,
	423, 423, 242, 242, 283, 283, 284, 284, 148, 148,
	149, 149, 149, 149, 149, 149, 490, 490, 492, 492,
	491, 173, 173, 169, 169, 170, 170, 170, 168, 168,
	167, 166, 166, 165, 163, 163, 163, 164, 164, 164,
	181, 181, 151, 151, 151, 150, 150, 150, 150, 150,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 152, 152, 498, 498, 498, 428, 428, 428,
	435, 435, 265, 265, 266, 266, 264, 264, 153, 153,
	154, 154, 154, 154, 263, 263, 262, 156, 156, 162,
	161, 161, 157, 157, 157, 157, 273, 273, 272, 272,
	272, 272, 106, 112, 112, 113, 180, 180, 271, 270,
	270, 270, 179, 179, 178, 178, 172, 172, 160, 160,
	160, 160, 269, 159, 267, 526, 526, 525, 525, 524,
	522, 522, 522, 523, 523, 523, 523, 474, 474, 474,
	474, 474, 297, 297, 297, 301, 301, 300, 300, 300,
	300, 300, 305, 7, 7, 7, 7, 7, 7, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	189, 190, 38, 191, 191, 192, 192, 193, 193, 194,
	195, 196, 196, 196, 196, 36, 182, 182, 183, 183,
	184, 184, 185, 186, 186, 186, 188, 187, 35, 35,
	28, 141, 141, 142, 142, 142, 142, 144, 144, 239,
	239, 239, 143, 143, 145, 145, 145, 506, 509, 507,
	507, 511, 511, 511, 512, 512, 512, 512, 513, 513,
	29, 131, 136, 516, 516, 516, 515, 515, 517, 517,
	518, 518, 287, 287, 288, 288, 139, 140, 140, 138,
	133, 147, 147, 147, 147, 147, 132, 137, 508, 514,
	514, 514, 364, 364, 361, 362, 362, 359, 358, 358,
	358, 520, 520, 519, 519, 519, 298, 298, 30, 354,
	354, 356, 357, 357, 357, 348, 348, 348, 348, 34,
	352, 352, 353, 353, 353, 353, 353, 349, 349, 351,
	351, 347, 347, 347, 347, 347, 33, 146, 146, 346,
	346, 343, 343, 341, 341, 342, 342, 340, 340, 340,
	344, 344, 41, 40, 40, 40, 345, 345, 32, 32,
	32, 116, 115, 115, 115, 286, 286, 285, 285, 117,
	39, 217, 217, 412, 412, 412, 412, 412, 430, 430,
	430, 413, 413, 413, 414, 414, 414, 415, 415, 415,
	415, 415, 429, 429, 431, 431, 431, 386, 386, 387,
	387, 387, 390, 390, 404, 404, 405, 405, 403, 403,
	410, 410, 409, 409, 408, 408, 407, 407, 406, 406,
	406, 406, 401, 401, 400, 400, 388, 388, 388, 388,
	388, 389, 389, 389, 399, 399, 402, 402, 227, 227,
	261, 261, 225, 225, 226, 226, 260, 260, 223, 223,
	224, 224, 224, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 480, 480,
	481, 229, 229, 240, 240, 240, 240, 240, 240, 228,
	228, 230, 230, 206, 206, 204, 204, 197, 197, 198,
	198, 199, 199, 199, 203, 203, 202, 202, 202, 202,
	200, 200, 201, 201, 201, 201, 201, 201, 372, 372,
	477, 477, 478, 478, 473, 473, 473, 476, 476, 476,
	476, 476, 479, 479, 479, 475, 475, 207, 281, 281,
	281, 299, 299, 299, 299, 280, 280, 280, 222, 222,
	221, 221, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 371, 371, 314, 314, 315, 315,
	249, 248, 248, 248, 248, 248, 246, 247, 245, 245,
	245, 245, 245, 244, 244, 243, 243, 243, 350, 350,
	241, 241, 232, 232, 232, 231, 231, 231, 411, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 279, 279, 279, 324, 324, 329,
	329, 489, 489, 488, 208, 208, 208, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 218, 218, 218, 395,
	395, 395, 395, 396, 396, 396, 396, 397, 397, 397,
	393, 393, 394, 394, 333, 334, 334, 436, 436, 391,
	391, 392, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 443, 443, 443, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	500, 500, 500, 485, 485, 485, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 277, 277, 277, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 335, 335, 336, 336, 440, 440, 440,
	440, 440, 440, 441, 441, 442, 442, 442, 442, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 322, 274,
	274, 274, 337, 330, 330, 331, 331, 325, 325, 325,
	325, 325, 325, 325, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 326, 326, 328, 328,
	339, 339, 339, 338, 338, 338, 338, 338, 338, 338,
	220, 220, 220, 220, 319, 319, 319, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 210,
	210, 210, 210, 214, 214, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 215,
	215, 215, 215, 215, 213, 213, 213, 213, 213, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 104, 105, 105, 212, 282,
	282, 416, 416, 419, 419, 417, 417, 418, 420, 420,
	420, 421, 421, 421, 422, 422, 422, 425, 425, 289,
	289, 289, 295, 295, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 8,
	7, 1, 2, 2, 3, 3, 3, 0, 4, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 1, 0, 2,
	7, 8, 8, 0, 3, 3, 0, 2, 0, 3,
	0, 5, 1, 3, 0, 3, 3, 0, 2, 9,
	6, 0, 2, 2, 3, 3, 4, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 7, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 4, 5, 1, 3, 0, 3, 5,
	10, 0, 2, 0, 3, 2, 4, 3, 0, 2,
	1, 0, 2, 3, 0, 2, 3, 0, 3, 2,
	4, 3, 0, 1, 0, 1, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 1, 3,
	3, 3, 0, 4, 1, 3, 3, 3, 0, 1,
	1, 3, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 4, 1, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 1, 1, 1, 1, 7, 9, 7, 9,
	2, 1, 7, 9, 7, 9, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 3, 1, 3,
	5, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 2,
	3, 3, 2, 2, 1, 5, 6, 4, 1, 1,
	1, 5, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 6, 1,
	1, 1, 1, 1, 4, 4, 4, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	1, 6, 8, 6, 6, 5, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 4,
	5, 3, 4, 5, 6, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -529, -537, -2, -5, 589, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 582,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 588,
	435, 13, 484, -13, -14, -490, -15, 254, -302, -303,
	-304, -306, -538, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 229,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 361,
	367, 424, 581, 60, -149, -151, 592, 593, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 225, 15, 521, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 249, 248,
	37, 315, 316, 317, 365, 247, 226, 14, 30, 41,
	341, -150, 81, 227, -152, 12, 596, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	239, 583, -299, 357, 584, 586, 585, 84, 92, -292,
	-294, 361, 367, 581, 593, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 487, 568, 569, 570, 571, 515, 567, 339,
	340, 518, 266, 290, 392, 296, 303, 157, 176, 170,
	198, 190, 165, 270, 308, 271, 91, 160, 470, 105,
	447, 421, 163, 285, 287, 289, 516, 292, 291, 293,
	295, 272, 342, 186, 181, 284, 268, 179, 273, 39,
	274, 203, 275, 276, 523, 443, 338, 449, 300, 419,
	180, 444, 288, 446, 205, 209, 461, 462, 174, 175,
	451, 464, 202, 246, 42, 520, 258, 465, 207, 201,
	197, 473, 304, 302, 200, 173, 196, 269, 64, 211,
	210, 212, 415, 416, 417, 418, 277, 278, 355, 460,
	193, 182, 343, 166, 22, 468, 253, 448, 368, 279,
	297, 305, 206, 208, 260, 265, 522, 423, 264, 301,
	466, 178, 257, 286, 252, 469, 167, 370, 280, 161,
	294, 463, 472, 63, 383, 172, 164, 243, 158, 262,
	267, 281, 282, 283, 513, 307, 306, 298, 194, 259,
	199, 184, 171, 195, 159, 261, 471, 384, 579, 341,
	402, 192, 189, 263, 236, 467, 450, 162, 406, 385,
	187, 309, 575, 576, 577, 356, 337, 310, 311, 185,
	250, 441, 442, 314, 412, 330, 386, 422, 393, 387,
	218, 318, 453, 455, 204, 578, 319, 320, 321, 445,
	322, 323, 324, 325, 360, 55, 57, 93, 95, 594,
	-377, -375, -299, 581, 367, 361, 341, 593, -191, -299,
	595, -158, 38, -204, -299, -158, -76, -14, -13, -150,
	-151, -204, 233, -307, 23, 419, -84, 420, 229, 81,
	-299, -9, -96, -8, -103, -74, -148, 424, -305, -299,
	315, 315, -305, 233, -299, 264, 400, -427, 239, -381,
	-354, 265, -380, -356, -383, -357, 31, 225, 227, 226,
	261, 15, 365, 235, 13, 12, 366, 247, 24, 25,
	27, 14, 367, 369, 28, 370, 373, 374, 375, 41,
	378, 379, 254, 84, 92, 87, 272, -190, -299, -331,
	-325, 112, 255, -327, -320, -321, -323, -469, -463, -318,
	81, 139, 140, 147, 113, -322, -411, 35, 115, 530,
	567, 485, -275, -276, -277, -278, -279, -299, -464, -462,
	87, 96, 99, 102, 103, 101, 100, 151, 183, 98,
	88, 152, -151, 84, -485, 539, -293, 560, 568, 569,
	570, 571, 559, 60, -434, -442, 232, -440, 150, 188,
	250, 184, 13, 145, 412, 185, 536, 556, 487, 540,
	563, 532, 533, 534, 527, 528, 529, 531, 541, 543,
	555, -443, 551, 561, 562, 549, 564, 565, 566, 86,
	85, 554, 553, 542, 537, 538, 544, 526, 535, 545,
	546, 552, 557, 558, 349, 105, 350, 351, 477, 342,
	352, 239, 419, 69, 353, 354, 355, 356, 357, 484,
	358, 70, 359, 348, 254, 402, 360, 187, 204, 489,
	488, 490, 481, 478, 476, 479, 480, 482, 483, 547,
	548, 550, -112, -113, 573, -167, -168, -268, 11, 6,
	7, 8, 9, -527, 421, 522, 87, 162, 159, -368,
	162, 111, 167, 166, -368, 318, 260, 362, -141, 236,
	339, 402, 322, 93, 264, -348, -346, 516, -345, -429,
	312, 308, 234, -142, 244, 243, 106, 477, 232, 108,
	376, 303, 55, 57, -501, -502, 222, 223, 224, -492,
	510, -491, -299, 351, 95, 26, 233, 362, 260, 455,
	453, 454, 456, 457, 458, 459, -58, -444, -426, 450,
	449, -311, 442, 448, 440, 452, 443, 340, 324, 323,
	225, 590, 511, -289, 386, 422, 474, 475, 363, 423,
	461, 463, 444, 105, 191, 188, 236, 233, 339, 477,
	402, 93, 322, -501, 159, 461, 463, 264, 400, 40,
	-374, 412, -373, -375, 462, 473, 85, 86, 460, -289,
	105, 441, 441, -168, -268, -167, -149, -151, -106, -490,
	234, 339, 402, 264, 235, 233, 514, 236, 477, 232,
	315, 362, 260, 322, 93, -428, -498, 31, -435, 219,
	220, 221, 32, 33, -1, 119, 596, -325, -325, -6,
	599, -6, -325, -299, -299, 154, -210, -214, -211, -213,
	-212, -216, -215, 188, 189, 150, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 30, 204, 250,
	184, 185, 186, 187, 205, 170, 190, 519, 213, 171,
	214, 172, 215, 173, 216, 174, 175, 217, 176, 179,
	180, 181, 182, 178, 153, 81, 153, 87, -174, 256,
	-204, 153, -174, -168, -167, -168, -204, -280, -299, 421,
	122, -84, -84, 420, -493, -494, -495, -497, 229, 420,
	419, 153, 272, 16, -305, -305, 79, -204, -356, 264,
	-381, -354, 35, 78, 154, 237, 154, 78, 81, 363,
	339, 402, 364, 477, 233, 376, 236, 264, 377, 339,
	402, 233, 236, 477, 264, 339, 233, 236, 402, 264,
	377, 440, 441, 236, 26, 368, 371, 372, 441, -448,
	473, 154, 111, 108, 109, 110, -325, 129, -338, 122,
	123, 124, 125, 126, 127, 128, 136, 135, 146, 139,
	140, 141, 142, 143, 144, 145, 137, 138, 132, 112,
	130, 134, 131, 114, -151, -325, -331, 60, -323, -323,
	-323, -323, -411, -329, -325, 81, 81, 81, 153, 100,
	87, -325, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -441, 81, 81, -335, -336, 81,
	81, -318, -280, 81, 87, 87, 81, 81, 81, 87,
	-336, -336, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -168, 154, 81, -114, 38, -170, 21,
	-152, -151, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 96, 594, 218, 466, 521, 165, 166, 167, -189,
	-299, -191, -182, -299, 236, -142, 108, -343, 239, -343,
	-343, -343, -343, -343, 235, -343, -204, 514, 513, 233,
	233, 233, -343, 484, 122, 122, 58, -503, 169, 154,
	-492, -173, 81, -310, 130, 134, -310, 23, 262, 262,
	262, -310, 302, -539, -540, 16, 132, -308, -540, -308,
	-308, -310, -541, 235, 451, 42, 263, 262, -169, -170,
	-169, 445, 441, -398, 446, 447, -312, -540, -311, -310,
	-310, -311, -310, -310, -310, 233, 236, 477, 322, 591,
	-539, -539, 30, 30, -427, -204, -427, 511, -290, -299,
	-427, -427, -427, -504, 238, -534, -533, 464, -536, 466,
	159, -375, 159, -375, -356, 264, 264, 154, 122, 23,
	-376, 122, 133, -375, -375, -376, -376, -228, 40, -298,
	150, -299, 87, -228, 40, -531, -530, -204, -169, -152,
	-151, 82, 82, 82, -427, -427, -427, -427, -427, -429,
	-427, -427, -427, -427, -305, -182, -191, 239, -427, -427,
	-153, -154, 141, -325, -299, -153, -3, -120, -119, 116,
	117, 119, 584, 357, 583, 587, 581, -375, 40, -422,
	384, 383, -416, -418, 81, -417, 81, -417, -417, -417,
	81, 81, -419, 81, -419, -419, -416, -420, 81, -420,
	-421, 81, -421, -420, -299, -330, -331, -299, 38, -437,
	60, -148, 81, 30, 81, -299, -438, 60, -148, 81,
	30, -169, -114, -170, 153, 96, 87, -84, 82, 154,
	-496, 102, 103, -499, 202, 194, -299, -99, 87, -7,
	-8, -9, -10, -42, -74, -148, -465, -463, 81, 31,
	411, 78, 16, -382, 233, 477, 362, 260, 236, 339,
	-380, -363, -360, -358, -298, -356, -359, -358, -385, -280,
	441, -115, 425, 314, -325, -325, -325, -325, -325, 101,
	112, 337, 102, 103, -320, -339, 31, 310, 311, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -328, -337, -411, 81, 132, 130, 134, 131, 114,
	-323, -323, -321, -321, 82, 154, -489, -488, 116, -325,
	-325, -325, -299, -486, -487, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 353, 348, 354, 352,
	342, 360, 355, 356, 187, 508, 509, 502, 503, 504,
	505, 506, 507, -330, -330, -325, -486, -330, -274, 32,
	31, -331, -331, -331, 82, -325, -500, 335, 334, 336,
	-171, -299, -330, 82, 82, 82, 96, -331, -331, -330,
	-321, -330, -487, -274, -274, -274, 141, -331, -331, -274,
	-274, -274, -274, 141, -274, -274, -274, -274, -274, -274,
	-274, -274, 82, 82, 82, -169, -113, -446, -445, -325,
	40, 574, -114, -325, -166, -165, -325, -528, 87, 87,
	597, 467, 468, 163, 166, 165, 34, 81, 81, 153,
	-343, 484, -204, 112, -506, -299, -364, -361, -358, -299,
	-299, -354, -299, -299, 521, -343, 514, -343, -343, -343,
	-204, -239, 52, 53, 54, -358, -143, 55, 56, -504,
	-491, 34, -172, -299, -264, 17, -323, -323, -358, 264,
	-539, -310, -310, -291, -290, -312, -307, -312, -312, -264,
	-540, -310, -310, -312, -308, -264, -299, 441, -264, -264,
	-398, -309, -299, -309, -343, -290, -291, -291, -204, -250,
	-251, 230, 346, 347, 228, 226, 11, 227, -259, 303,
	-344, 485, -234, -235, 76, 41, -237, 388, 381, 266,
	270, 91, 271, 421, 272, 235, 274, 275, 276, 291,
	293, 246, 277, 278, 279, 412, 280, 158, 292, 281,
	282, 283, 364, -229, 6, 325, 40, 50, 51, 434,
	433, 524, 521, 267, -506, -506, 30, 30, -364, -299,
	-299, -161, -156, -160, -157, -162, -267, -269, -159, 81,
	-204, -151, -299, 154, 465, 467, 468, -534, -376, -534,
	-376, 31, 411, -379, 411, 31, -354, -373, 461, 463,
	-369, 87, 412, -359, -378, 78, 150, -445, -376, -376,
	-378, -378, 149, 154, -532, 466, 467, 222, -114, -206,
	-204, -506, -363, -354, -299, -427, -206, -206, -299, -299,
	81, 35, -299, -299, -263, 154, -262, 16, -300, -299,
	34, 87, 153, -263, -121, -119, 118, -325, -6, 583,
	-325, -6, -6, -325, -6, -325, -425, 385, 96, 96,
	-282, 87, -282, 96, 96, 96, 82, 87, -367, 78,
	-439, -332, -484, 573, -176, 82, -171, -482, -483, -171,
	-175, -299, -439, -176, 82, -482, -114, -114, -299, 23,
	-84, -494, 153, 154, -172, -382, -362, -359, -384, 141,
	-299, -370, 154, 521, 600, 85, 237, -520, -519, 403,
	82, 154, -449, 238, 484, 87, 597, 218, 101, 337,
	102, 103, -411, -331, -328, -323, -323, -321, -321, -326,
	251, -326, 111, -325, -324, -488, 118, -325, 34, 34,
	154, 79, 153, 82, 82, 16, 16, 82, -325, 82,
	82, 82, 82, 16, 16, -325, 82, 153, 82, 82,
	82, 82, 79, 82, 154, 82, 154, -331, -325, -331,
	82, 82, 82, -325, -325, -325, -331, 82, -325, -325,
	-325, -325, -325, -325, -325, -325, -392, 436, -392, -392,
	154, 82, 87, 154, 22, 154, -163, 36, 37, -286,
	-285, 87, 164, 167, 167, 166, -190, -192, -193, -194,
	-195, -196, 132, 155, 156, -183, -184, -185, -186, -210,
	-280, 189, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 250, 184, 185, 186, 187, 205,
	170, 190, 171, 172, 173, 174, 175, 176, 179, 180,
	181, 182, 178, -299, -204, -173, 35, -509, 389, -521,
	154, 40, -519, 477, -139, 314, -347, 79, -146, 16,
	81, -204, -343, -204, -204, -204, -217, 34, 16, -155,
	-205, -299, 81, 82, 154, -325, -355, 79, -299, -291,
	-264, -264, -204, -299, -264, -264, -310, -312, -312, -308,
	153, -290, -173, 154, -203, -296, -200, -202, 241, -315,
	-201, 244, -478, 242, 240, 106, 245, 299, 107, 235,
	-296, -296, 241, -238, 237, 34, -296, -253, 235, 299,
	242, 20, -252, 235, 107, -299, 241, 245, 240, -295,
	122, -289, 149, 237, 42, 364, -295, 525, -295, -295,
	-295, -295, -295, -295, -295, 273, 273, -295, -295, -295,
	-295, -295, -295, -295, -295, -295, -295, -295, 159, -295,
	-295, -295, -295, -295, -295, 81, 268, 269, -510, 389,
	30, 345, 345, -521, 30, -147, 339, 30, -270, -271,
	-272, -273, 67, 71, 73, 68, 69, 70, 74, 30,
	154, -297, -301, 34, -299, 87, -297, -151, -156, -161,
	-297, 81, -533, -535, 469, 466, 472, -378, -378, 237,
	81, 122, -378, -378, 40, -298, -530, 473, 467, -181,
	23, 154, 78, -206, -183, -191, -264, -154, -156, -299,
	87, -299, 141, -264, 119, -6, 117, -125, -124, -123,
	120, 581, 587, 119, 119, 119, 82, 82, 82, 154,
	82, 82, 82, 154, 82, 154, -452, 446, 39, 154,
	81, 82, 154, 60, 154, 122, 82, 154, 82, 60,
	-181, 153, 421, -299, -463, 82, -384, 154, 237, 153,
	153, -360, 367, -298, -362, 20, 521, -280, 38, -286,
	597, 82, -326, -326, 111, -323, -320, 82, 119, -325,
	117, -208, -210, 383, 384, -208, -209, -215, 150, 188,
	250, 187, 186, 184, 383, 384, -228, -299, -325, -325,
	82, -325, -325, 16, -299, -228, -321, -325, -168, 82,
	82, -391, -392, -391, -391, 82, 82, 82, 82, -391,
	82, 82, 82, 82, 82, 82, 82, 82, 81, -445,
	-452, -325, -325, -165, -164, 43, 598, 154, 122, 167,
	375, 82, 154, -280, 82, 154, -210, -173, 34, -512,
	448, 391, 401, -295, -317, -316, 341, 41, -432, 412,
	397, 398, -361, 264, -299, -518, 94, 122, 78, 329,
	330, 331, 332, -341, -342, -340, -344, -506, -227, -261,
	-299, 87, 81, -225, 521, -204, 81, 81, 81, -412,
	319, -210, -204, -155, -299, 16, 154, -505, 153, -1,
	-299, -354, -310, -264, -540, -264, -310, -310, -312, -299,
	34, -251, -207, -280, -201, -477, -478, -343, -299, 107,
	-477, 107, 81, -207, -280, -280, -254, -309, -280, -299,
	-299, -299, -257, -256, -280, -299, -299, -299, 107, 107,
	-233, 40, 47, 48, 49, -295, -295, 191, -236, 40,
	411, 413, 414, 96, 96, 96, 96, 87, 87, 87,
	-295, -295, 96, 87, -301, 87, -479, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -240, 40, 284, 288,
	285, 286, 287, 87, 96, 40, 96, 40, 96, 40,
	-299, 81, -480, -481, 87, -512, -295, 345, -375, 122,
	-317, -517, 314, -140, 91, 31, -177, 230, 227, -506,
	-366, -365, -280, -160, -160, -160, -160, 67, 67, 67,
	72, 67, 72, 67, -272, -366, -162, -173, -301, 82,
	-526, -525, -524, -522, 75, 238, 76, -330, 466, 470,
	471, -362, -313, 87, -369, 14, -204, -204, -431, 294,
	295, 82, -266, 18, 153, -266, 115, -6, -121, -123,
	-325, -6, -325, 583, 357, 584, 87, 96, 96, -460,
	431, 426, 428, 107, -332, -447, -446, 60, -148, -171,
	-439, -483, -445, -299, 60, -148, -439, -299, 96, 16,
	-359, -354, 141, 141, -299, 368, -370, 87, 390, 87,
	233, 598, -286, -320, -325, 82, -218, 175, 174, -218,
	82, 82, -417, -417, -416, -419, -416, -218, -218, 82,
	82, 23, 82, 82, 82, -325, 82, 82, 154, -436,
	486, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -334, -333, 256, -460, 44,
	45, -285, 87, 87, 87, -194, -210, 231, -185, 40,
	34, -148, -513, 91, -507, 87, -299, -514, 91, 392,
	152, 343, 40, 393, 394, 409, 338, 96, 96, 399,
	-508, -299, -147, -516, 51, 122, 87, -204, -340, -289,
	149, 275, 322, 82, 154, -295, -295, -197, -198, -199,
	-207, -200, -202, 34, 81, 81, -197, -197, -197, -413,
	321, 20, 96, 140, -174, 79, 153, -156, -205, -299,
	141, 82, -264, -299, -264, -264, -310, -148, -255, 44,
	46, -210, -475, -299, -473, -475, -299, -473, -473, -343,
	-325, -255, -207, 237, 30, 227, -258, 327, 328, -371,
	300, 112, -371, 154, -163, -299, -228, -228, 30, 87,
	87, -206, 82, 154, 122, -513, -507, 122, -376, 87,
	-514, -518, 122, 87, 154, -177, -177, -264, 154, 122,
	-179, -178, 78, 79, -180, 78, -178, 67, 67, -264,
	-524, -523, 23, -478, -478, -478, 82, 82, -265, 19,
	20, 141, -265, 119, 117, 119, 119, -299, 82, 82,
	-423, 575, -456, -458, 426, 20, 20, 14, 82, -439,
	-439, -354, -370, 412, -204, 598, -325, 82, -325, 82,
	87, -168, 20, -423, -187, -210, -318, -148, -144, 521,
	87, -511, 403, 87, 87, 96, 40, 96, 152, 395,
	-433, -140, -515, 91, 122, 597, 81, -295, -295, -295,
	-299, -261, -318, -318, 82, 154, -148, -226, -260, -299,
	87, -197, 82, 82, 82, -414, 255, 96, 140, 96,
	140, 96, -297, -156, -299, -264, -505, 153, -264, -264,
	-280, -222, -221, -219, 101, 112, 40, 381, -220, 91,
	149, 289, 292, 291, 267, 290, -249, -314, 78, 387,
	327, 328, -344, 575, 515, 240, 106, 107, 369, -315,
	81, 81, 79, 309, 81, 81, -475, 82, -255, -280,
	40, -258, 40, 300, -256, 149, -228, 82, -481, 87,
	-511, 87, -378, -516, 87, -506, -168, -365, -445, -325,
	81, -325, 81, 67, 11, 18, -325, -331, 239, -6,
	584, 357, -242, 576, 87, 20, 87, -454, 87, -366,
	-117, -450, -398, 82, 82, -391, -394, -393, -397, 432,
	301, 439, -331, -242, 520, -144, -145, 59, 473, 20,
	521, 342, 40, 96, 40, 396, 87, 102, 103, -287,
	-288, 87, -349, -351, -280, 81, -228, -230, -298, 150,
	87, -225, -199, 82, 154, -295, -295, 82, -223, -224,
	-259, -344, -116, -115, -223, -415, 158, 96, 140, 96,
	96, -264, -264, -219, 101, -321, 87, -230, -231, 40,
	288, 284, 122, 122, -232, 40, 268, 269, -241, 81,
	299, 14, 191, 81, 107, 107, -204, -349, -349, -476,
	329, 330, 331, 333, 332, -476, -349, -349, 81, -372,
	-371, -321, -295, 149, -515, -169, -172, -474, -299, 240,
	20, 20, -299, -299, -283, 577, 96, 87, 428, -424,
	578, -459, 431, -453, -451, 426, 427, 428, 429, 82,
	-396, 114, 395, 399, -319, -322, 96, 99, 183, 152,
	-283, -188, -299, 299, 87, 390, 87, 342, 598, 154,
	122, 82, 154, -416, -325, -260, -318, -318, -225, -386,
	256, 154, -259, -289, -117, -386, -430, 166, 320, 521,
	96, 140, 96, -168, 87, 87, 96, 81, -440, 30,
	87, -350, 81, 82, 82, 82, 82, -349, -228, -295,
	82, 82, 154, 81, 20, 87, -461, 238, -457, -458,
	430, -451, 20, 428, 20, 20, -395, -396, 399, -319,
	-322, 573, 437, 437, 437, 34, 368, 412, -288, 87,
	-352, -351, -163, 82, -387, 308, 20, -259, -295, -387,
	320, 96, 140, 96, -169, 82, -325, -335, -295, 82,
	-244, -243, 517, -349, -352, 79, -352, 79, -352, 79,
	-352, 79, 82, -228, -299, 240, -284, -299, -454, -468,
	81, 96, -456, -455, -457, 20, -454, 20, -454, -454,
	111, 438, 438, 438, 87, -353, 246, 91, 521, 327,
	328, -163, 20, -388, 301, 302, -389, -402, 304, -228,
	96, 82, -299, -248, -246, -247, 78, 444, 297, 298,
	82, -476, -476, -476, -476, -249, 82, 154, -472, 30,
	82, -467, -466, -281, -462, -299, 431, 432, 87, -454,
	-395, -295, 87, 326, -280, 81, -400, 305, 81, -398,
	81, -398, 107, 330, -371, -247, 78, -246, 78, 15,
	14, -352, -352, -352, -352, -299, -471, -470, -469, 82,
	154, 153, 96, -299, -385, -390, 306, 96, -321, 81,
	-321, 81, -399, 303, 81, -245, 294, 295, 30, 166,
	-245, 154, 122, -466, -299, 82, -404, 81, 20, 82,
	-385, 82, -385, 81, 122, -321, 101, 40, 296, -470,
	40, -325, 153, -405, -403, 256, -389, 82, 82, 82,
	-385, 96, 82, -299, 82, 154, -299, -401, 307, 82,
	-403, -406, 60, 96, -410, -407, 81, -259, 258, 132,
	-410, -259, -409, -408, 306, 259, 81, 82, 154, -299,
	255, 81, -331, -408, -407, -331, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 823, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 597, 598, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 678, -2, 56, 0, 277, 0,
	268, 268, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 610, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 610, 0, 0,
	0, 698, 0, 0, 715, 737, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1191, 1192, 1193,
	1194, -2, 1684, 1662, 1827, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828,
	0, 261, 259, 1662, 1684, 1744, 1777, 1827, 0, 843,
	0, 656, 0, 661, 1145, 656, 289, 599, 600, 698,
	698, 563, 0, 325, 0, 1675, 329, 0, 0, 0,
	560, 319, 320, 321, 322, 323, 324, 0, 0, 822,
	0, 0, 315, 0, 283, 1735, 0, 0, 0, 0,
	0, 0, 153, 949, 155, 951, 159, 166, 0, 0,
	171, 172, 175, 176, 177, 178, 179, 0, 183, 0,
	185, 188, 0, 190, 191, 0, 194, 195, 196, 0,
	206, 207, 208, 952, 953, 954, -2, 84, 841, 1595,
	1485, 0, 1492, 1493, 1504, 1515, 1271, 1272, 1273, 1274,
	0, 0, 0, 0, 0, 1281, 1282, 0, 1299, 1843,
	1882, 0, 1289, 1290, 1291, 1292, 1293, 93, 105, 106,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 0, 1545, 1546,
	1547, 1458, 1258, 1191, 0, 1852, 0, 1872, 1877, 1878,
	1879, 1880, 1871, 0, 0, 1443, 0, 1433, 0, 0,
	-2, -2, 0, 0, 1802, -2, 1849, 1868, 1876, 1853,
	1875, 1845, 1846, 1847, 1840, 1841, 1842, 1844, 1854, 1856,
	1867, 0, 1863, 1873, 1874, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1449, -2, 1451, 1452, 1454, -2,
	1456, 1457, -2, 1460, 1461, 1462, -2, -2, 1465, 1466,
	1467, 1468, 1469, 1470, 1473, -2, -2, -2, -2, 1445,
	1446, 1447, 1448, 1437, 1438, 1439, 1440, 1441, 1442, -2,
	-2, -2, 698, 773, 0, -2, 0, 0, 0, 720,
	723, 726, 729, 0, 57, 58, 0, 278, 279, 267,
	269, 0, 273, 0, 266, 0, 0, 0, 0, 981,
	981, 981, 981, 981, 981, 0, 981, 0, 0, 0,
	0, 0, 981, 871, 956, 957, 958, 979, 980, 0,
	1033, 0, 0, 0, 615, 611, 612, 613, 614, 686,
	0, 688, 691, 540, 540, 487, 0, 0, 0, 540,
	0, 501, 493, 0, 0, 0, 540, 0, 0, 693,
	693, 0, 543, 550, 540, 540, -2, 540, 540, 540,
	0, 0, 507, 508, 509, 493, 493, 512, 513, 514,
	525, 526, 551, 1619, 0, 0, 433, 0, 433, 0,
	433, 433, 433, 617, 1772, 1682, 1749, 1735, 0, 0,
	234, 1802, 239, 0, 1683, 1698, 0, 0, 1716, 0,
	-2, 0, 305, 693, 0, 699, 0, 698, 0, 0,
	433, 433, 433, 433, 433, 1032, 433, 433, 433, 433,
	0, 0, 0, 433, 433, 0, 0, 738, 739, 734,
	735, 736, 740, 741, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 63, 62, 0, 1596, 1614, 1550, 1551,
	1552, 1601, 1554, 1605, 1605, 1605, 1605, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 0, 0, 1594, 1574,
	1603, 1603, 1603, 1601, 1598, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1608,
	1608, 1611, 1611, 1608, 0, 1483, 0, 0, 0, 0,
	660, 0, 0, 693, -2, 0, 564, 326, 1195, 0,
	0, 330, 331, 0, 0, 346, 0, 349, 334, 335,
	336, 0, 133, 0, 317, 318, 0, 0, 285, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 163,
	160, 167, 170, 180, 187, 0, 199, 201, 204, 161,
	168, 173, 174, 181, 202, 162, 164, 165, 169, 203,
	205, 182, 186, 200, 184, 189, 192, 193, 198, 0,
	134, 0, 0, 0, 0, 0, 1491, 0, 0, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1485, 0, 0, 1277, 1278,
	1279, 1280, 1283, 0, 1300, 0, 0, 0, 0, 1544,
	1548, 0, 1483, 1483, 0, 1483, 1479, 0, 0, 0,
	0, 0, 0, 1483, 1419, 0, 0, 1421, 1434, 0,
	0, 1423, 1424, 0, 1427, 1428, 1483, 0, 1483, 1432,
	1415, 1416, 0, 1479, 1479, 1479, 0, 0, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	0, 0, 0, 693, 0, 0, 681, 0, 662, 0,
	717, 719, 0, 721, 722, 724, 725, 727, 728, 730,
	731, 59, 0, 0, 0, 0, 271, 0, 276, 0,
	840, 0, 0, 856, 981, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 981,
	981, 981, 0, -2, 0, 0, 0, 617, 616, 0,
	687, 0, 0, 746, 0, 0, 486, 0, 493, 540,
	540, 499, 500, 495, 494, 546, 547, 543, 0, 543,
	543, 746, 0, 519, 520, 521, 540, 540, 527, 694,
	528, 529, 543, 0, 548, 549, 746, 0, 0, 746,
	746, 0, 537, 538, 539, 0, 0, 981, 0, 556,
	495, 495, 1620, 1621, 0, 990, 0, 0, 0, 559,
	0, 0, 0, 0, 618, 214, 217, 0, 220, 0,
	1772, 0, 1772, 0, 227, 0, 0, 0, 0, 0,
	0, 257, 258, 0, 0, 0, 0, 248, 251, 1139,
	1140, 946, 947, 252, 253, 297, 298, 0, 662, 716,
	718, 712, 713, 714, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 593, 0, 595, 0, 0, 0,
	754, 748, 750, 817, 93, 754, 8, 80, 77, 0,
	19, 0, 0, 19, 19, 0, 19, 262, 0, 1617,
	1615, 1616, 1553, 1602, 0, 1579, 0, 1580, 1581, 1582,
	0, 0, 1575, 0, 1576, 1577, 1578, 1569, 0, 1570,
	1571, 0, 1572, 1573, 260, 0, 1484, 844, 0, 635,
	648, 630, 0, 637, 0, 1146, 619, 648, 621, 0,
	637, 662, 684, 662, 0, 327, 0, 332, 0, 0,
	348, 350, 351, 352, 337, 338, 561, 313, 314, 306,
	307, 308, 309, 310, 311, 312, 316, 103, 0, 286,
	287, 0, 0, 0, 147, 148, 149, 150, 151, 152,
	154, 138, 582, 584, 938, 950, 0, 941, 0, 157,
	197, 130, 0, 0, 1486, 1487, 1488, 1489, 1490, 1494,
	0, 1496, 1498, 1500, 1502, 0, 1520, -2, -2, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1505, 1518, 1519, 0, 0, 0, 0, 0, 0,
	1516, 1516, 1511, 0, 1275, 0, 1297, 1301, 0, 0,
	0, 0, 94, 1478, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 0, 0, 1485, 0, 0, 0, 1480,
	1481, 0, 0, 0, 1374, 0, 0, 1380, 1381, 1382,
	0, 643, 0, 1444, 1420, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 774, 0, 652, 654,
	655, 0, 682, 695, 700, 701, 704, 55, 60, 53,
	1007, 280, 281, 0, 0, 275, 0, -2, 858, 0,
	0, 873, 691, 0, 0, 887, 431, 932, 0, 0,
	0, 948, 971, 977, 0, 0, 981, 0, 0, 0,
	1011, 874, 879, 880, 881, 875, 876, 882, 883, 0,
	689, 0, 0, 786, 485, 0, 541, 542, 490, 1735,
	495, 746, 746, 502, 496, 503, 545, 504, 505, 506,
	0, 746, 746, 540, 543, 530, 544, 543, 533, 534,
	0, 552, 557, 553, 0, 555, 510, 511, 691, 362,
	363, 404, 404, 404, 387, 404, 0, 0, 375, 1622,
	0, 0, 0, 0, 384, 1622, 0, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 0, 0, 1622, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 1622, 1622, 1622, 0, 1622, 1622,
	1622, 1622, 1622, 1125, 1622, 0, 991, 394, 395, 396,
	397, 402, 403, 0, 428, 0, 0, 0, 431, 0,
	921, 759, 0, 760, 761, 757, 788, 812, 812, 0,
	812, 792, 1145, 0, 0, 225, 226, 215, 0, 216,
	0, 228, 229, 0, 231, 232, 233, 240, 1682, 1749,
	235, 237, 0, 0, 241, 254, 255, 256, 0, 0,
	246, 247, 0, 0, 300, 301, 303, 0, 710, 579,
	1143, 580, 581, 585, 0, 0, 588, 590, 591, 592,
	858, 0, 926, 927, 746, 0, 755, 0, 751, 818,
	0, 820, 0, 746, 0, 78, 19, 0, 71, 68,
	0, 0, 0, 0, 0, 1597, 1549, 1618, 0, 0,
	0, 1599, 0, 0, 0, 0, 61, 664, 626, 0,
	629, 645, 0, 649, 0, 0, 641, 634, 638, 0,
	0, 658, 620, 0, 0, 625, 710, 685, 1196, 0,
	333, 347, 0, 0, 0, 0, 141, 935, 0, 142,
	146, 136, 0, 0, 0, 940, 0, 937, 942, 0,
	156, 0, 0, 131, 132, 1002, 1007, 0, 1495, 1497,
	1499, 1501, 1503, 0, 1506, 1516, 1516, 1512, 0, 1507,
	0, 1509, 0, 1486, 0, 1302, 0, 0, 0, 0,
	0, 0, 0, 1364, 1365, 0, 0, 1369, 0, 1371,
	1372, 1373, 1375, 0, 0, 0, 1379, 0, 1418, 1436,
	1422, 1425, 0, 1429, 0, 1431, 0, 698, 0, 0,
	1339, 1339, 1339, 0, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 1295, 1296,
	0, 775, 664, 0, 0, 0, 707, 705, 706, 0,
	1005, 0, 282, 270, 272, 0, 0, 0, 846, 847,
	849, 0, 852, 853, 854, 0, 859, 860, 862, 863,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1667, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 857, 691, 0, 982, 894, 1622, 435,
	0, 0, 934, 0, 910, 0, 0, 0, -2, 0,
	0, 1082, 0, 0, 0, 0, 1013, 0, 0, 0,
	604, 608, 23, 692, 0, 747, 488, 0, 489, 540,
	497, 498, 746, 1145, 522, 523, 746, 540, 540, 543,
	0, 554, 0, 990, 365, 0, 1154, 1155, 405, 0,
	1161, 1170, 981, 1228, 0, 1170, 0, 0, 1172, 1173,
	0, 0, 0, 0, 388, 389, 0, 374, 0, 0,
	0, 0, 373, 0, 0, 415, 0, 0, 0, 0,
	1623, 1622, 1622, 0, 382, 383, 0, 386, 0, 0,
	0, 0, 0, 0, 0, 1622, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1116, 0,
	0, 0, 0, 0, 0, 0, 1131, 1132, 894, 1622,
	0, 0, 0, 435, 908, 917, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 778, 0, 0, 0, 0,
	0, 691, 813, 0, 815, 816, 790, -2, 0, 759,
	795, 1483, 218, 219, 0, 0, 224, 242, 244, 0,
	0, 0, 243, 245, 249, 250, 299, 302, 304, 680,
	0, 0, 0, 1034, 0, 596, 744, 749, 756, 819,
	821, 94, 752, 744, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1607, 1606, 1592, 0,
	1593, 1604, 1609, 0, 1612, 0, 668, 0, 0, 648,
	650, 0, 0, 648, 0, 0, 657, 0, 0, 648,
	683, 0, 0, 562, 104, 353, 0, 0, 0, 0,
	0, 583, 0, 939, 138, 0, 0, 158, 0, 0,
	1007, 1482, 1508, 1510, 0, 1517, 1513, 1276, 1284, 1298,
	0, 0, 1304, 1316, 1316, 0, 0, 1307, 1605, 1605,
	1310, 1601, 1603, 1601, 1316, 1316, 0, 95, 0, 0,
	1370, 0, 0, 0, 644, 0, 0, 0, 1337, 1339,
	1339, 1345, 1340, 1346, 1347, 1339, 1339, 1339, 1339, 1352,
	1339, 1339, 1339, 1339, 1339, 1339, 1339, 1339, 1335, 653,
	668, 696, 697, 702, 703, 0, 54, 1007, 0, 274,
	0, 0, 851, 0, 0, 0, 864, 0, 0, 898,
	895, 896, 897, 0, 929, 436, 437, 438, 439, 0,
	0, 0, 933, 0, 921, 903, 0, 0, 0, 972,
	973, 974, 975, 976, -2, 985, 0, 0, 0, 1078,
	1622, 1622, 1147, 0, 0, 0, 1147, 1147, 1147, 1021,
	0, 1012, 656, 0, -2, 0, 0, 606, 0, 0,
	787, 491, 746, 515, 0, 531, 746, 746, 540, 558,
	0, 364, 406, 0, 1160, 1185, 1171, 1185, 1229, 1185,
	1185, 981, 0, 406, 0, 0, 376, 412, 0, 0,
	0, 0, 372, 409, 704, 413, 414, 416, 0, 418,
	378, 390, 391, 392, 393, 0, 0, 0, 385, 398,
	399, 400, 401, 1093, 1094, 1095, 1098, 1099, 1100, 1101,
	0, 0, 1104, 1105, 1106, 1107, 1108, 1182, 1183, 1184,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1133, 1134, 1135,
	1136, 1137, 1138, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 0, 0, 1128, 0, 898, 0, 0, 0, 0,
	929, 910, 0, 920, 0, 922, 923, 0, 0, 627,
	746, 292, 0, 782, 776, 0, 765, 780, 781, 768,
	0, 770, 0, 766, 767, 746, 758, 789, 814, 791,
	794, 796, 797, 803, 0, 0, 0, 0, 221, 222,
	223, 230, 0, 455, 236, 711, 1144, 586, 587, 1035,
	1036, 594, 742, 0, 0, 742, 76, 79, 0, 74,
	0, 0, 0, 0, 66, 64, 1600, 0, 0, 670,
	118, 0, 0, 0, 646, 0, 651, 648, 633, 642,
	632, 639, 640, 659, 648, 624, 623, 1197, 328, 0,
	936, 138, 143, 144, 145, 139, 137, 943, 0, 945,
	0, 1003, 0, 1514, 1303, 1285, 1305, 1317, 1318, 1306,
	1286, 1287, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1288,
	1366, 0, 1368, 1376, 1377, 0, 1426, 1430, 0, 0,
	0, 1343, 1344, 1348, 1349, 1350, 1351, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 698, 1336, 0, 670, 708,
	709, 1006, 1008, 839, 842, 848, 850, 0, 861, 0,
	0, 877, 870, 0, 0, 889, 890, 900, 0, 0,
	0, 441, 442, 0, 0, 0, 454, 450, 451, 452,
	432, 928, 917, 906, 0, 0, 916, 0, 986, 1622,
	1622, 1622, 0, 992, 0, 0, 0, 0, 1148, 1149,
	1151, 1152, 1153, 0, 0, 1147, 0, 0, 0, 1024,
	0, 0, 1015, 0, 812, 0, 0, 746, 605, 608,
	609, 690, 492, 746, 535, 532, 746, 361, 377, 407,
	0, -2, 0, 1186, 0, 1174, 1186, 0, 0, 1185,
	0, 366, 406, 0, 0, 0, 419, 422, 423, 420,
	1224, 0, 421, 0, 411, 417, 1096, 1097, 0, 1102,
	1103, 0, 1127, 0, 0, 424, 0, 0, 0, 425,
	430, 903, 0, 918, 0, 924, 925, 698, 0, 0,
	762, 783, 0, 0, 763, 0, 764, 769, 771, 291,
	798, 0, 0, 800, 801, 802, 793, 238, 732, 0,
	0, 753, 733, 0, 19, 0, 0, 69, 1610, 1613,
	672, 0, 669, 119, 0, 0, 0, 0, 647, 631,
	622, 140, 135, 944, 121, 1004, 0, 1378, 0, 1339,
	1338, 1332, 0, 672, 0, 867, 865, 877, 869, 884,
	899, 888, 0, 930, 931, 0, 443, 444, 0, 447,
	453, 901, 902, 0, 0, 914, 0, 0, 0, 0,
	978, 1079, 1080, 1081, 1082, 0, 995, 0, 1084, 1622,
	1622, 0, -2, 0, -2, 1027, 0, 1022, 0, 1014,
	0, 1017, 746, 746, -2, 602, 607, 0, 516, 536,
	408, 1187, -2, 1200, 1202, 0, 991, 1205, 1206, 0,
	0, 0, 0, 0, 0, 1250, 1214, 0, 0, 1218,
	1219, 1220, 0, 0, 1223, 0, 1532, 1533, 0, 1227,
	0, 0, 0, 0, 0, 0, 0, 1168, 367, 368,
	0, 370, 371, 1225, 410, 1622, 380, 1126, 1129, 1130,
	429, 426, 427, 906, 909, 628, 693, 293, 294, 784,
	0, 777, 807, 804, 0, 0, 743, 745, 70, 75,
	0, 0, 674, 0, 671, 0, 665, 667, 129, 636,
	91, 112, 0, 1367, 1417, 1342, 0, 1333, 0, 1327,
	1328, 1329, 1334, 674, 0, 868, 0, 885, 886, 0,
	0, 440, 445, 0, 448, 449, 907, 904, 905, 0,
	912, 0, 0, 967, 1601, 0, 987, 988, 1141, 1142,
	989, 993, 1150, 1083, 0, 0, 0, 1082, 1037, -2,
	1090, 0, 999, 121, 1037, 1018, 0, 1025, 0, 1023,
	1016, 698, 603, 1201, 1203, 1204, 1207, 1208, 1209, 1255,
	1256, 1257, 0, 0, 1212, 1252, 1253, 1254, 1213, 0,
	0, 0, 0, 0, 1530, 1531, 1248, 0, 0, 1175,
	1177, 1178, 1179, 1180, 1181, 1176, 0, 0, 0, 1167,
	1169, 369, 0, 1622, 919, 290, 0, 0, 808, 810,
	805, 806, 65, 67, 82, 0, 673, 120, 0, 83,
	0, 109, 0, 122, 123, 0, 0, 0, 0, 1341,
	1330, 0, 0, 0, 0, 0, 1534, 1535, 1536, 0,
	663, 0, 866, 0, 891, 0, 893, 446, 911, 914,
	0, 960, 0, 704, 0, 1085, 1086, 1087, 994, 1039,
	0, 990, 1092, 1622, 1001, 1039, 1010, 0, 1020, 0,
	1029, 0, 1026, 693, 1210, 1211, 0, 0, 1433, 1622,
	0, 1243, 0, 960, 960, 960, 960, 0, 379, 0,
	785, 799, 0, 0, 0, 92, 96, 0, 118, 115,
	0, 124, 0, 0, 0, 0, 0, 1319, 0, 0,
	0, 1323, 1324, 1325, 1326, 0, 878, 892, 913, 915,
	959, 968, 969, 704, 998, 0, 1076, 1091, 0, 1000,
	1019, 1028, 0, 1031, 601, 1251, 0, 1217, 0, 1222,
	1231, 1244, 0, 0, 1156, 0, 1158, 0, 1162, 0,
	1164, 0, 0, 381, 809, 811, 0, 676, 666, 85,
	0, 0, 113, 114, 116, 0, 125, 0, 127, 128,
	0, 1320, 1321, 1322, 855, 961, 1622, 0, 0, 965,
	966, 970, 0, 1064, 0, 0, 1070, 0, 1077, 1096,
	1030, 1215, 1221, 1230, 1232, 1233, 0, 1245, 1246, 1247,
	1249, 960, 960, 960, 960, 1166, 675, 0, 1009, 0,
	97, 0, 99, 101, 102, 1188, 110, 111, 117, 126,
	1331, 0, 963, 0, 1040, 0, 1042, 0, 0, 0,
	0, 0, 1074, 0, 1216, 1234, 0, 1235, 0, 0,
	0, 1157, 1159, 1163, 1165, 677, 86, 87, 0, 98,
	0, 0, 962, 964, 0, 1044, 0, 1065, 0, 0,
	0, 0, 0, 0, 0, 1236, 1238, 1239, 0, 0,
	1237, 0, 0, 100, 1189, 1041, 1038, 0, 1076, 1066,
	0, 1068, 0, 0, 0, 0, 1240, 1242, 1241, 88,
	89, 90, 0, 0, 1046, 0, 1062, 1067, 1069, 1071,
	0, 1075, 1073, 1190, 1045, 0, 1058, 1043, 0, 1072,
	1047, -2, 0, 1063, 1048, -2, 0, 1056, 0, 0,
	1049, 1057, 0, 1052, 0, 0, 0, 1051, 0, -2,
	1059, 0, 0, 1053, -2, 0, 1061, 1060,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 599, 596,
	123, 122, 124, 3, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 597, 135, 598, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:751
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:764
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:874
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:921
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1131
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1141
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1207
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1241
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1257
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1332
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1344
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1384
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1435
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1625
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1647
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1651
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1894
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1933
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2210
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2214
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2394
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2398
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2586
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2640
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2644
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2676
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2685
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2695
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2757
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2786
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2817
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2821
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2847
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2851
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2938
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2942
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2990
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2996
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3040
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3122
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3127
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3213
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3217
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3346
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3348
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3501
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3574
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3580
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3598
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3622
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3649
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3653
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3668
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3780
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3808
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3814
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3819
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3826
		{
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3828
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3831
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3840
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3844
		{
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3849
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3858
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3871
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3879
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3913
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3923
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3927
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3933
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3946
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3954
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3987
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3991
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4000
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4023
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4029
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4033
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4039
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4049
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4054
		{
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4085
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4091
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4095
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4105
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4159
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4184
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4195
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4208
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4212
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4217
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4221
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4233
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4246
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4258
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4288
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4292
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4319
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4348
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4358
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4399
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4415
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4429
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4603
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4661
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4671
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4680
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4685
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4707
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4725
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4768
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4772
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4786
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4790
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4794
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4800
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4810
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4820
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4842
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4846
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4850
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4880
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4886
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4900
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4919
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4993
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5010
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5014
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5018
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5022
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5027
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5041
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5051
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5055
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5063
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5069
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5115
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5121
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5137
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5142
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5195
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5207
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5212
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5229
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5267
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5303
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = "OR REPLACE"
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5313
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5317
		{
			yyVAL.str = "DEFINER = "
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5321
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5326
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5542
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5546
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5551
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5555
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5562
		{
			yyVAL.str = yyDollar[3].str
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5567
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5571
		{
			yyVAL.str = yyDollar[2].str
		}
	case 919:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5650
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5775
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5779
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5795
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5799
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5815
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5832
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5851
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5860
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5876
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5880
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5886
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5917
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5931
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5954
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5998
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6002
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6008
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6078
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6084
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6088
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6094
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6117
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6203
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6210
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6239
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6243
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6248
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6252
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6259
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6270
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6283
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6297
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6326
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6333
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6341
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6374
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6399
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6439
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6453
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6460
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6467
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6471
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6484
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6490
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6494
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6500
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6509
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6523
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6529
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6533
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6539
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6546
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6555
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6559
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6568
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6573
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6582
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6586
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6596
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6600
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6611
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6646
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6675
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6679
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6694
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6698
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6717
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6723
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6727
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6827
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6909
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6913
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6919
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6925
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6929
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6955
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6973
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6982
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6987
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7004
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7010
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7014
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7018
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7024
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7028
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7034
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7043
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7052
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7075
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7100
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7114
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7120
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7129
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7138
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7147
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7156
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7180
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7194
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7200
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7206
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7225
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7229
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7286
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7290
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7296
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7300
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7351
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7355
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7367
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7406
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7415
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7425
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7429
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7435
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7447
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7454
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7461
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7468
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7475
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7484
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7490
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7500
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7504
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7508
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7517
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7541
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7546
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7550
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7566
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.NewDecodeExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7695
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7704
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7708
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7716
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7720
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7726
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7742
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7755
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7764
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7770
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7774
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7780
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7789
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7801
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7835
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7848
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7861
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7887
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7917
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7934
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7949
		{
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7956
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7960
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7964
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7970
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7974
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7978
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7982
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7988
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7992
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7996
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8002
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8010
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8024
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8031
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8040
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8045
		{
			yyVAL.str = ","
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8049
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8061
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8098
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8176
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8186
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8236
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8246
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8285
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8309
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8317
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8335
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8344
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8352
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8360
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8368
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8502
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8521
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8528
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8547
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8555
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8575
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8583
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8594
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8603
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8612
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8620
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8638
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8648
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8652
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8662
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8681
		{
		}
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8683
		{
		}
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8724
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8735
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8739
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8743
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8749
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8758
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8764
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8768
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8775
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8779
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8783
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8791
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8795
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8799
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8803
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8825
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8837
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8889
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8905
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8920
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8924
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8930
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8938
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8942
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8946
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8950
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8954
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8978
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8991
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9006
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9019
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9024
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9028
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9032
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9036
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9040
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9047
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9051
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9065
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9069
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9076
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9087
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9092
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9147
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9160
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9238
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9251
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9279
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9306
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9348
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9384
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9437
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9449
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9469
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9489
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9509
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9538
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9551
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9564
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9673
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9685
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9711
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9726
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9734
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9743
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9753
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9776
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9781
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9787
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9794
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9798
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9803
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9807
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9813
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9819
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9826
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9833
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9842
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9849
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9856
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9865
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9869
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9873
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9879
		{
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9881
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9891
		{
			yyVAL.str = ""
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT = 57860
const APPROX_COUNT_DISTINCT = 57861
const APPROX_PERCENTILE = 57862
const CURDATE = 57863
const CURTIME = 57864
const DATE_ADD = 57865
const DATE_SUB = 57866
const EXTRACT = 57867
const GROUP_CONCAT = 57868
const MAX = 57869
const MID = 57870
const MIN = 57871
const NOW = 57872
const POSITION = 57873
const SESSION_USER = 57874
const STD = 57875
const STDDEV = 57876
const MEDIAN = 57877
const STDDEV_POP = 57878
const STDDEV_SAMP = 57879
const SUBDATE = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const SUM = 57883
const SYSDATE = 57884
const SYSTEM_USER = 57885
const TRANSLATE = 57886
const TRIM = 57887
const VARIANCE = 57888
const VAR_POP = 57889
const VAR_SAMP = 57890
const AVG = 57891
const RANK = 57892
const ROW_NUMBER = 57893
const DENSE_RANK = 57894
const BIT_CAST = 57895
const NEXTVAL = 57896
const SETVAL = 57897
const CURRVAL = 57898
const LASTVAL = 57899
const ARROW = 57900
const ROW = 57901
const OUTFILE = 57902
const HEADER = 57903
const MAX_FILE_SIZE = 57904
const FORCE_QUOTE = 57905
const PARALLEL = 57906
const UNUSED = 57907
const BINDINGS = 57908
const DO = 57909
const DECLARE = 57910
const LOOP = 57911
const WHILE = 57912
const LEAVE = 57913
const ITERATE = 57914
const UNTIL = 57915
const CALL = 57916
const SPBEGIN = 57917
const BACKEND = 57918
const SERVERS = 57919
const KILL = 57920
const BACKUP = 57921
const FILESYSTEM = 57922
const QUERY_RESULT = 57923

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10398

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 698,
	-2, 679,
	-1, 132,
	235, 1033,
	237, 955,
	-2, 996,
	-1, 155,
	42, 517,
	237, 517,
	264, 524,
	265, 524,
	454, 517,
	-2, 550,
	-1, 191,
	602, 1749,
	-2, 433,
	-1, 528,
	316, 133,
	427, 133,
	428, 133,
	-2, 1659,
	-1, 592,
	81, 1454,
	-2, 1803,
	-1, 593,
	81, 1472,
	-2, 1774,
	-1, 597,
	81, 1473,
	-2, 1802,
	-1, 623,
	81, 1384,
	-2, 1871,
	-1, 624,
	81, 1385,
	-2, 1870,
	-1, 625,
	81, 1386,
	-2, 1860,
	-1, 626,
	81, 1834,
	-2, 1855,
	-1, 627,
	81, 1835,
	-2, 1856,
	-1, 628,
	81, 1836,
	-2, 1862,
	-1, 629,
	81, 1837,
	-2, 1844,
	-1, 630,
	81, 1838,
	-2, 1853,
	-1, 631,
	81, 1839,
	-2, 1863,
	-1, 632,
	81, 1840,
	-2, 1864,
	-1, 633,
	81, 1841,
	-2, 1869,
	-1, 634,
	81, 1842,
	-2, 1874,
	-1, 635,
	81, 1843,
	-2, 1875,
	-1, 637,
	81, 1451,
	-2, 1647,
	-1, 641,
	81, 1456,
	-2, 1660,
	-1, 644,
	81, 1460,
	-2, 1678,
	-1, 648,
	81, 1464,
	-2, 1720,
	-1, 649,
	81, 1465,
	-2, 1798,
	-1, 657,
	81, 1475,
	-2, 1783,
	-1, 658,
	81, 1476,
	-2, 1827,
	-1, 659,
	81, 1477,
	-2, 1793,
	-1, 660,
	81, 1478,
	-2, 1817,
	-1, 671,
	81, 1362,
	-2, 1865,
	-1, 672,
	81, 1363,
	-2, 1866,
	-1, 673,
	81, 1364,
	-2, 1867,
	-1, 677,
	21, 699,
	-2, 662,
	-1, 758,
	449, 550,
	450, 550,
	-2, 518,
	-1, 802,
	122, 1647,
	133, 1647,
	153, 1647,
	-2, 1622,
	-1, 908,
	21, 699,
	-2, 662,
	-1, 1008,
	21, 698,
	-2, 1259,
	-1, 1127,
	516, 997,
	517, 997,
	-2, 873,
	-1, 1384,
	81, 1522,
	-2, 1800,
	-1, 1385,
	81, 1523,
	-2, 1801,
	-1, 1524,
	82, 845,
	-2, 851,
	-1, 1909,
	82, 1608,
	154, 1608,
	-2, 1785,
	-1, 1910,
	82, 1608,
	154, 1608,
	-2, 1784,
	-1, 1911,
	82, 1584,
	154, 1584,
	-2, 1771,
	-1, 1912,
	82, 1585,
	154, 1585,
	-2, 1776,
	-1, 1913,
	82, 1586,
	154, 1586,
	-2, 1708,
	-1, 1914,
	82, 1587,
	154, 1587,
	-2, 1702,
	-1, 1915,
	82, 1588,
	154, 1588,
	-2, 1638,
	-1, 1916,
	82, 1589,
	154, 1589,
	-2, 1773,
	-1, 1917,
	82, 1590,
	154, 1590,
	-2, 1706,
	-1, 1918,
	82, 1591,
	154, 1591,
	-2, 1701,
	-1, 1919,
	82, 1592,
	154, 1592,
	-2, 1692,
	-1, 1920,
	82, 1608,
	154, 1608,
	-2, 1693,
	-1, 1921,
	82, 1608,
	154, 1608,
	-2, 1694,
	-1, 1923,
	82, 1597,
	154, 1597,
	-2, 1817,
	-1, 1924,
	82, 1575,
	154, 1575,
	-2, 1803,
	-1, 1925,
	82, 1606,
	154, 1606,
	-2, 1774,
	-1, 1926,
	82, 1606,
	154, 1606,
	-2, 1802,
	-1, 1927,
	82, 1606,
	154, 1606,
	-2, 1661,
	-1, 1928,
	82, 1604,
	154, 1604,
	-2, 1793,
	-1, 1929,
	82, 1601,
	154, 1601,
	-2, 1683,
	-1, 1930,
	81, 1556,
	82, 1556,
	154, 1556,
	385, 1556,
	386, 1556,
	387, 1556,
	-2, 1637,
	-1, 1931,
	81, 1557,
	82, 1557,
	154, 1557,
	385, 1557,
	386, 1557,
	387, 1557,
	-2, 1639,
	-1, 1932,
	81, 1560,
	82, 1560,
	154, 1560,
	385, 1560,
	386, 1560,
	387, 1560,
	-2, 1775,
	-1, 1933,
	81, 1562,
	82, 1562,
	154, 1562,
	385, 1562,
	386, 1562,
	387, 1562,
	-2, 1758,
	-1, 1934,
	81, 1564,
	82, 1564,
	154, 1564,
	385, 1564,
	386, 1564,
	387, 1564,
	-2, 1707,
	-1, 1935,
	81, 1566,
	82, 1566,
	154, 1566,
	385, 1566,
	386, 1566,
	387, 1566,
	-2, 1688,
	-1, 1936,
	81, 1567,
	82, 1567,
	154, 1567,
	385, 1567,
	386, 1567,
	387, 1567,
	-2, 1689,
	-1, 1937,
	81, 1569,
	82, 1569,
	154, 1569,
	385, 1569,
	386, 1569,
	387, 1569,
	-2, 1636,
	-1, 1938,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1666,
	-1, 1939,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1679,
	-1, 1940,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1662,
	-1, 1941,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1723,
	-1, 1942,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1743,
	-1, 1958,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	277, 990,
	-2, 983,
	-1, 2097,
	21, 698,
	-2, 792,
	-1, 2295,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	277, 990,
	-2, 984,
	-1, 2315,
	79, 608,
	154, 608,
	-2, 1146,
	-1, 2653,
	191, 990,
	301, 1227,
	-2, 1199,
	-1, 2795,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1089,
	-1, 2797,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1089,
	-1, 2807,
	79, 608,
	154, 608,
	-2, 1147,
	-1, 2815,
	191, 990,
	301, 1227,
	-2, 1200,
	-1, 2943,
	105, 990,
	149, 990,
	188, 990,
	191, 990,
	-2, 1090,
	-1, 3307,
	82, 1051,
	154, 1051,
	-2, 990,
	-1, 3311,
	82, 1051,
	154, 1051,
	-2, 990,
	-1, 3325,
	82, 1055,
	154, 1055,
	-2, 990,
	-1, 3330,
	82, 1056,
	154, 1056,
	-2, 990,
}

const yyPrivate = 57344

const yyLast = 38568

var yyAct = [...]int{
	559, 1605, 3311, 3310, 3319, 3290, 182, 1302, 1364, 3182,
	537, 539, 561, 3243, 532, 3208, 3261, 3190, 2671, 3191,
	547, 3102, 2029, 1884, 2829, 3116, 2890, 3093, 2983, 1360,
	2895, 3120, 2927, 3018, 2734, 1041, 1221, 2924, 2735, 589,
	444, 3054, 2926, 1162, 2893, 678, 2304, 2791, 1292, 801,
	451, 3008, 456, 456, 3103, 3105, 1559, 2775, 456, 472,
	481, 1999, 2816, 481, 541, 2931, 1367, 2945, 2942, 2885,
	2621, 2318, 2761, 2432, 2431, 2764, 1694, 2354, 1691, 2605,
	2414, 2668, 2657, 2091, 2619, 2300, 167, 2650, 2430, 2424,
	1659, 1907, 2732, 492, 1757, 1788, 2720, 2453, 2703, 2002,
	2427, 2286, 486, 2589, 2584, 2586, 2656, 2622, 902, 2296,
	1905, 1897, 530, 1706, 1214, 2075, 2528, 55, 2334, 1888,
	531, 2490, 1887, 536, 1758, 1784, 1766, 1765, 1970, 2139,
	1504, 1731, 2473, 1687, 1783, 734, 807, 2092, 1288, 1662,
	2080, 795, 2270, 1135, 1588, 2336, 2275, 2000, 6, 1597,
	1171, 178, 8, 177, 7, 1534, 1969, 1512, 2156, 444,
	854, 538, 1296, 1561, 1111, 2202, 1358, 36, 1660, 1785,
	1817, 2119, 540, 450, 1230, 1151, 1255, 1293, 114, 1200,
	1570, 443, 182, 2624, 182, 1903, 845, 846, 1949, 2623,
	1795, 529, 1414, 1398, 839, 840, 2232, 1571, 1301, 844,
	548, 531, 1995, 2233, 1349, 765, 35, 805, 919, 1761,
	26, 1747, 1764, 15, 1262, 1170, 1357, 14, 1199, 1721,
	794, 2099, 465, 1533, 1197, 32, 478, 733, 1421, 675,
	1420, 13, 494, 468, 23, 1254, 16, 10, 168, 711,
	480, 1080, 1163, 495, 161, 731, 715, 1106, 1363, 1792,
	3044, 164, 677, 842, 1042, 1802, 2778, 753, 2727, 1147,
	2191, 2145, 2143, 1517, 2258, 2258, 2258, 2140, 841, 477,
	843, 1265, 473, 2142, 1269, 837, 476, 838, 166, 1097,
	811, 2883, 838, 838, 474, 452, 1183, 1267, 2486, 2484,
	475, 1736, 3014, 977, 978, 979, 976, 3009, 2886, 2733,
	461, 1508, 3107, 484, 1036, 1760, 676, 2037, 165, 51,
	157, 133, 686, 2913, 2303, 836, 3065, 2185, 8, 940,
	7, 165, 51, 157, 133, 2305, 158, 2819, 165, 826,
	1098, 2762, 165, 150, 165, 1541, 2908, 159, 165, 165,
	165, 808, 977, 978, 979, 976, 1316, 2177, 3173, 1281,
	165, 165, 51, 157, 133, 1789, 113, 1309, 3138, 1543,
	3066, 1122, 1121, 490, 2552, 2831, 491, 1528, 1127, 810,
	1953, 101, 165, 51, 157, 133, 1313, 162, 2822, 2117,
	2505, 1455, 2498, 2911, 1800, 1099, 113, 1306, 2817, 2105,
	162, 974, 2104, 2839, 2840, 2106, 1334, 1315, 113, 2818,
	1704, 162, 1179, 162, 2118, 1180, 1671, 162, 1308, 162,
	2460, 2461, 2459, 679, 687, 1672, 1673, 1518, 1519, 162,
	162, 666, 3226, 665, 667, 668, 783, 669, 670, 1201,
	2272, 1203, 2157, 1159, 1350, 774, 2823, 1354, 1166, 3224,
	2273, 162, 1165, 1168, 1169, 1168, 1169, 3194, 3195, 955,
	1584, 1366, 956, 118, 119, 456, 120, 121, 2904, 972,
	804, 1353, 967, 803, 3110, 456, 912, 3110, 3169, 3109,
	821, 817, 812, 816, 819, 3109, 3168, 3095, 3108, 3167,
	958, 3108, 1875, 481, 481, 3016, 456, 2491, 2271, 3212,
	3213, 1182, 3019, 3020, 3021, 3022, 2736, 2492, 824, 2493,
	3095, 3098, 815, 3012, 2736, 3172, 2172, 907, 909, 913,
	1370, 1804, 3113, 2745, 1268, 1266, 2918, 2600, 2765, 1796,
	2772, 1678, 1345, 132, 156, 163, 2069, 99, 1688, 2838,
	3039, 2003, 2370, 2590, 848, 2261, 132, 922, 163, 722,
	1355, 1948, 970, 971, 1744, 155, 149, 148, 980, 2841,
	1010, 1682, 57, 822, 2518, 953, 2827, 1009, 155, 3112,
	825, 2516, 969, 1352, 2182, 1018, 906, 943, 779, 922,
	2598, 778, 1275, 1274, 2035, 806, 2884, 813, 2824, 2828,
	2826, 2825, 2418, 935, 911, 2485, 3175, 3176, 1025, 811,
	2903, 912, 2072, 2071, 3042, 3193, 2915, 2905, 2278, 908,
	823, 2076, 3228, 3219, 525, 2614, 2594, 527, 2290, 2291,
	2292, 2293, 526, 151, 152, 153, 2833, 2834, 954, 2669,
	2670, 1369, 1368, 3062, 2632, 2595, 2596, 2853, 1157, 3126,
	483, 1801, 2311, 2423, 1137, 482, 1191, 478, 478, 160,
	814, 2597, 2846, 3320, 3121, 1702, 1703, 1181, 1955, 3304,
	808, 1376, 1379, 1380, 3252, 1045, 1096, 784, 2841, 109,
	811, 3223, 1377, 154, 3259, 110, 1146, 965, 966, 3184,
	2820, 1806, 1808, 1809, 780, 2856, 2832, 3038, 810, 1351,
	477, 477, 2974, 473, 473, 2046, 2673, 476, 476, 1790,
	3180, 3181, 3284, 3184, 957, 474, 474, 3043, 1104, 451,
	1107, 475, 475, 915, 916, 1012, 1013, 1014, 1015, 1046,
	456, 2748, 2522, 2257, 2896, 2121, 820, 1790, 2592, 2045,
	1077, 808, 111, 928, 929, 1790, 2963, 924, 923, 926,
	3264, 932, 2969, 734, 50, 2398, 2284, 782, 838, 2066,
	2067, 838, 838, 1210, 3064, 1209, 838, 1161, 1160, 810,
	1016, 838, 933, 818, 3321, 838, 1818, 2305, 1144, 924,
	923, 917, 1143, 1142, 3291, 479, 3315, 1791, 1803, 2141,
	2984, 2985, 2986, 2988, 2987, 3055, 903, 2569, 3327, 3063,
	456, 3174, 1193, 52, 1167, 2799, 479, 1998, 444, 444,
	1168, 1169, 2881, 1112, 2455, 2457, 1164, 444, 444, 676,
	2912, 1225, 1225, 489, 456, 2837, 948, 1168, 1169, 950,
	490, 2008, 3092, 781, 2521, 1198, 2665, 2914, 1270, 2178,
	134, 2186, 2601, 481, 1107, 451, 52, 3229, 1258, 1258,
	1223, 1223, 2109, 134, 2033, 3040, 2591, 951, 1227, 182,
	134, 1793, 1257, 1257, 134, 1158, 134, 52, 444, 1232,
	134, 134, 134, 1054, 1055, 1689, 934, 2470, 2471, 2519,
	1118, 1125, 134, 134, 1124, 2836, 3265, 1113, 1114, 1115,
	1116, 1117, 1105, 1119, 2919, 806, 2672, 1123, 485, 1126,
	112, 39, 940, 724, 134, 725, 2579, 49, 5, 1378,
	1805, 116, 117, 2976, 3314, 1148, 1152, 1152, 1152, 1300,
	2277, 1303, 1276, 1679, 1346, 2371, 1311, 2372, 2373, 1807,
	2666, 2593, 944, 1219, 1220, 2368, 2669, 2670, 1148, 1148,
	1132, 1082, 1153, 1154, 2530, 2529, 1332, 2015, 2260, 1205,
	1207, 1084, 3031, 1681, 1891, 3032, 1110, 946, 1217, 1218,
	1225, 2009, 1225, 912, 1102, 2005, 677, 1109, 1521, 949,
	952, 1317, 2005, 2008, 3326, 1522, 2281, 2282, 2018, 2456,
	2389, 2390, 2970, 2971, 1998, 2020, 1890, 939, 728, 729,
	730, 2280, 2965, 1667, 1520, 945, 2964, 689, 1134, 1192,
	2058, 2399, 2401, 2402, 2403, 2400, 1893, 1892, 3034, 1271,
	1371, 1372, 1373, 1374, 1375, 2950, 3262, 3263, 1250, 1327,
	1328, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1172, 1290, 1291, 1175, 1409, 1410, 3033,
	811, 690, 2019, 1419, 811, 455, 455, 1184, 1185, 1100,
	1101, 463, 726, 1208, 1416, 1417, 1418, 1468, 3333, 1458,
	1459, 1460, 1452, 775, 3267, 1562, 2089, 2771, 975, 2316,
	1462, 947, 1474, 3332, 2700, 1475, 461, 1243, 1233, 1298,
	940, 1365, 1477, 1248, 1259, 2159, 1108, 1362, 1484, 1485,
	1307, 1249, 1295, 960, 1314, 1299, 961, 1260, 2696, 2637,
	680, 2004, 2388, 2009, 1900, 478, 2006, 2612, 2004, 1998,
	2003, 1331, 2001, 2006, 1506, 1341, 3323, 2788, 1510, 1330,
	1724, 1513, 2747, 1343, 963, 1878, 1381, 1901, 1902, 2667,
	975, 2177, 456, 1951, 1532, 1225, 1536, 1537, 693, 1539,
	1540, 1502, 829, 834, 835, 975, 777, 456, 477, 776,
	1225, 473, 2014, 723, 734, 476, 2012, 1560, 1340, 1348,
	2007, 1337, 1225, 474, 3305, 677, 1562, 2007, 1193, 475,
	1318, 1323, 1319, 472, 2317, 1850, 1505, 3031, 1849, 1336,
	3032, 3288, 1339, 1467, 1338, 1335, 1407, 1408, 3324, 692,
	2090, 1356, 1583, 695, 694, 3026, 2675, 775, 3300, 959,
	1589, 1589, 2090, 1193, 1361, 1193, 1193, 2317, 1359, 456,
	785, 1532, 1532, 2090, 3294, 1225, 1656, 1657, 1669, 2266,
	3293, 680, 1531, 1400, 3271, 1279, 1587, 1282, 1283, 2263,
	3245, 1538, 444, 3034, 1225, 2613, 1798, 964, 1284, 1285,
	3202, 2032, 2164, 975, 2121, 1450, 1451, 1950, 1454, 1506,
	975, 3196, 1789, 3027, 1506, 1506, 1469, 3104, 1722, 456,
	1532, 1225, 962, 1711, 3033, 456, 456, 1715, 1716, 1476,
	3301, 1478, 1149, 1719, 1720, 3148, 1670, 1607, 1726, 1453,
	777, 1993, 1883, 776, 3086, 182, 1798, 1854, 182, 182,
	3085, 182, 1798, 1527, 1780, 3081, 1798, 940, 1734, 1651,
	1652, 1737, 3246, 2700, 1740, 1479, 1542, 1742, 1544, 1545,
	1546, 1700, 3203, 1148, 977, 978, 979, 976, 1697, 1698,
	1563, 1564, 3080, 3047, 1683, 3079, 1133, 1577, 1503, 1468,
	1468, 1768, 831, 832, 833, 3078, 1468, 1468, 1152, 1576,
	1675, 1775, 1677, 1412, 1509, 1590, 3046, 3047, 1708, 1211,
	1347, 2937, 1695, 1696, 1582, 1710, 3087, 1585, 1586, 1690,
	2550, 2997, 1974, 1581, 1078, 1560, 1591, 3047, 2860, 1225,
	1787, 1735, 2684, 937, 1738, 1739, 1556, 1741, 1713, 1714,
	3247, 1557, 2615, 1535, 2450, 1593, 1594, 1572, 1150, 1574,
	1575, 1140, 2810, 2858, 3047, 1573, 1145, 3047, 1552, 2638,
	1592, 1829, 1580, 1155, 2475, 2319, 1699, 3047, 2239, 905,
	1565, 1173, 1174, 2231, 1176, 1177, 1178, 2192, 3047, 2175,
	2168, 1781, 1567, 2938, 2180, 2166, 938, 2179, 1769, 1811,
	977, 978, 979, 976, 2161, 2171, 1815, 1816, 1655, 1658,
	2121, 2154, 1990, 1674, 2685, 1676, 811, 1821, 904, 938,
	1825, 1845, 1684, 811, 2616, 1763, 2090, 1830, 910, 1480,
	1481, 1482, 1763, 1535, 1486, 1487, 1488, 1489, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1828, 1709, 3027, 931,
	975, 2152, 3028, 1779, 2150, 975, 1729, 2148, 1973, 975,
	1836, 1974, 2162, 1526, 1705, 1320, 1732, 2167, 1843, 1730,
	1022, 1879, 1860, 1882, 925, 2642, 2162, 808, 1855, 1359,
	1857, 1859, 478, 2155, 808, 905, 1856, 1864, 900, 1749,
	898, 1861, 1862, 1863, 1848, 992, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 2513, 810, 3127, 1839, 1838, 811,
	2951, 1837, 810, 1797, 530, 1770, 912, 1943, 456, 1772,
	1324, 2140, 2101, 2153, 1778, 477, 2149, 1213, 473, 2149,
	1974, 2802, 476, 456, 1138, 456, 456, 456, 1139, 3280,
	474, 2633, 1782, 1878, 975, 2800, 475, 1971, 1777, 1773,
	3128, 1774, 1215, 975, 2952, 1813, 1814, 1978, 1193, 977,
	978, 979, 976, 1216, 1457, 1456, 975, 1975, 1983, 1819,
	808, 1149, 1188, 1810, 1190, 2803, 1194, 1195, 1196, 975,
	975, 3268, 1193, 975, 2030, 1798, 1812, 1457, 1456, 2801,
	3045, 3023, 1325, 1400, 905, 2025, 1823, 2967, 810, 995,
	996, 997, 998, 999, 992, 1881, 1238, 1239, 1240, 1241,
	1242, 2966, 1244, 1245, 1246, 1247, 2777, 2634, 2701, 1252,
	1253, 2694, 2689, 2686, 2607, 2036, 1212, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 1908, 2420, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2031, 2059, 2060,
	2061, 2062, 2063, 2288, 2064, 2094, 2094, 1669, 2094, 2259,
	2190, 2635, 2165, 1945, 993, 994, 995, 996, 997, 998,
	999, 992, 2111, 1120, 1490, 1129, 444, 444, 691, 1128,
	1506, 914, 1506, 2725, 912, 2199, 2134, 1150, 1733, 1415,
	1225, 456, 2477, 1874, 1876, 1877, 1530, 1483, 1962, 3166,
	1506, 1506, 1415, 456, 1824, 1894, 979, 976, 912, 451,
	1263, 976, 1733, 1258, 2224, 1669, 1952, 2979, 2129, 2115,
	2131, 2978, 1980, 1981, 182, 2494, 2360, 1257, 1152, 1992,
	2359, 2342, 1984, 1985, 977, 978, 979, 976, 1979, 2096,
	2340, 2100, 3283, 1189, 2107, 2728, 2108, 2098, 1045, 977,
	978, 979, 976, 1989, 1000, 1001, 993, 994, 995, 996,
	997, 998, 999, 992, 2112, 2113, 2958, 1231, 1568, 1569,
	2173, 2916, 1997, 1787, 811, 2921, 2922, 1472, 1996, 1991,
	1225, 1406, 1225, 1024, 1225, 1578, 1579, 1987, 3309, 912,
	1988, 1473, 2010, 2011, 2769, 2016, 1023, 1403, 1405, 1402,
	696, 1404, 1046, 3282, 3187, 2128, 977, 978, 979, 976,
	2135, 2183, 977, 978, 979, 976, 2123, 1205, 1207, 1841,
	1225, 2218, 2410, 2144, 3297, 2408, 1908, 2917, 3253, 2200,
	977, 978, 979, 976, 2073, 808, 2225, 3248, 2219, 2220,
	2102, 1225, 977, 978, 979, 976, 2222, 2223, 3186, 1223,
	2770, 2726, 3157, 2227, 2406, 3129, 2217, 3071, 3067, 2228,
	3010, 2395, 2954, 810, 2953, 2116, 2209, 2804, 2768, 2599,
	1223, 977, 978, 979, 976, 2126, 2509, 2226, 2409, 2489,
	2201, 2407, 2125, 1506, 2133, 1840, 2252, 2253, 1513, 2127,
	912, 2229, 2488, 2124, 897, 893, 894, 895, 896, 2776,
	2214, 2393, 2213, 2212, 2210, 2392, 2391, 2187, 2203, 2203,
	2405, 977, 978, 979, 976, 2383, 2189, 2394, 2184, 991,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 2377, 2376, 2375, 2197, 2170, 2374, 1752, 1852, 1751,
	1750, 1225, 2176, 2174, 2285, 2250, 2181, 1746, 1745, 1321,
	1532, 2301, 1095, 456, 977, 978, 979, 976, 2287, 2315,
	2425, 2274, 2585, 2136, 525, 2321, 3218, 527, 2211, 2891,
	2196, 3214, 526, 3170, 2193, 2194, 3115, 2925, 3101, 2208,
	3090, 2330, 3075, 2206, 3070, 3069, 912, 3041, 3011, 2960,
	2267, 1885, 1886, 1833, 2339, 2934, 977, 978, 979, 976,
	2920, 912, 912, 912, 1589, 1264, 2889, 912, 2264, 2350,
	2351, 2352, 912, 2887, 2356, 2357, 2297, 2358, 983, 984,
	985, 986, 987, 988, 989, 981, 2867, 2864, 1359, 2251,
	2862, 2254, 2415, 574, 115, 2767, 2766, 1712, 2298, 115,
	2094, 2763, 3135, 2753, 2366, 2367, 2234, 2235, 2695, 2312,
	2691, 1607, 2240, 2682, 2411, 1290, 1291, 2681, 2381, 2382,
	2608, 2322, 444, 977, 978, 979, 976, 1532, 912, 1669,
	1669, 1669, 1669, 2576, 2575, 1529, 2574, 3119, 2268, 1889,
	912, 1669, 2417, 2523, 2094, 977, 978, 979, 976, 462,
	1547, 2337, 115, 2333, 1298, 2337, 2283, 2543, 2520, 2487,
	1225, 2215, 2216, 977, 978, 979, 976, 1295, 2344, 2464,
	1299, 2320, 456, 456, 8, 2314, 7, 2404, 2396, 2386,
	2345, 2346, 2384, 2380, 2325, 2349, 2379, 182, 2378, 1880,
	2355, 1754, 182, 2332, 622, 621, 2324, 2335, 1748, 1516,
	2326, 2341, 1515, 1322, 1053, 2481, 1049, 2483, 2348, 1048,
	901, 3131, 1595, 1468, 2446, 1468, 2542, 2338, 2504, 688,
	3024, 2941, 2508, 2797, 2898, 1506, 2796, 2795, 1225, 2787,
	1506, 2515, 977, 978, 979, 976, 2752, 2385, 2740, 2731,
	1263, 2730, 977, 978, 979, 976, 2433, 2719, 2718, 1535,
	977, 978, 979, 976, 2643, 2329, 809, 2548, 2433, 2541,
	115, 2416, 1707, 2419, 2533, 1986, 2526, 2532, 1707, 1707,
	2421, 1827, 2527, 2478, 2472, 115, 2897, 115, 2482, 2445,
	2447, 2449, 2265, 2262, 677, 2448, 2151, 1505, 165, 2547,
	157, 133, 2503, 2147, 2462, 2465, 2146, 2434, 2435, 2436,
	2437, 1865, 977, 978, 979, 976, 1858, 1853, 2501, 1851,
	1283, 2536, 1847, 2538, 2507, 1846, 2476, 912, 2480, 2479,
	1284, 1285, 2512, 1844, 1826, 2588, 1835, 1832, 1831, 811,
	2517, 1753, 1501, 1500, 2495, 2603, 811, 1499, 1471, 2500,
	456, 2497, 2502, 1470, 1461, 977, 978, 979, 976, 1237,
	2458, 165, 1235, 2511, 912, 3322, 3279, 162, 912, 912,
	912, 3273, 3260, 3257, 2524, 3255, 3156, 1669, 1971, 2525,
	2641, 3234, 2531, 1043, 2617, 2618, 2645, 3088, 3077, 2499,
	3072, 1278, 2539, 2540, 2992, 2977, 2506, 2655, 2973, 2658,
	2875, 2658, 2658, 2873, 2848, 2847, 912, 2611, 977, 978,
	979, 976, 2537, 3232, 2850, 2844, 2578, 2843, 2662, 2779,
	2677, 3147, 2750, 2297, 2627, 2626, 1289, 1225, 1225, 1280,
	162, 2674, 1136, 2570, 2412, 2577, 2343, 2580, 2573, 2676,
	977, 978, 979, 976, 2309, 1908, 2308, 811, 977, 978,
	979, 976, 2628, 2629, 2630, 2307, 1223, 1223, 1294, 1297,
	1286, 2604, 3298, 2678, 2679, 2610, 2249, 2639, 2160, 2110,
	2065, 1972, 1960, 456, 1401, 162, 1717, 1525, 2588, 2654,
	1524, 1344, 2636, 1310, 1287, 1079, 2653, 2553, 2554, 1532,
	1532, 1076, 2663, 2555, 2556, 2557, 2558, 2583, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2640, 2659, 2660, 811,
	1075, 1074, 1073, 2664, 1072, 991, 990, 1000, 1001, 993,
	994, 995, 996, 997, 998, 999, 992, 2546, 562, 572,
	1071, 1070, 1069, 1068, 1067, 1066, 2218, 563, 1065, 571,
	564, 568, 567, 565, 566, 2729, 1064, 2644, 1063, 1062,
	1061, 2646, 2647, 977, 978, 979, 976, 1060, 1059, 2649,
	1058, 1944, 1057, 1056, 1052, 1051, 1050, 2661, 1047, 1040,
	1039, 1037, 2195, 115, 115, 809, 1961, 1036, 1963, 1964,
	1965, 2687, 456, 2688, 2693, 2692, 2683, 1035, 1034, 2697,
	2698, 1033, 569, 1032, 2690, 2708, 991, 990, 1000, 1001,
	993, 994, 995, 996, 997, 998, 999, 992, 1031, 1030,
	2712, 1982, 1029, 1028, 1027, 2715, 2716, 2717, 2749, 2534,
	2535, 2545, 1026, 1021, 570, 2751, 1020, 1019, 942, 3192,
	2544, 899, 3145, 2724, 991, 990, 1000, 1001, 993, 994,
	995, 996, 997, 998, 999, 992, 1008, 977, 978, 979,
	976, 3143, 2248, 2741, 3141, 2699, 977, 978, 979, 976,
	2742, 2704, 2705, 2247, 2743, 2845, 1977, 1957, 2744, 930,
	2711, 2707, 2710, 2754, 2323, 2783, 2246, 2301, 977, 978,
	979, 976, 2327, 2328, 2289, 2122, 1756, 2792, 912, 977,
	978, 979, 976, 941, 2780, 2781, 2782, 2094, 1669, 2807,
	2709, 2245, 977, 978, 979, 976, 2759, 2442, 2439, 2440,
	2438, 2244, 2443, 912, 2441, 681, 682, 683, 684, 3308,
	680, 2243, 2655, 2756, 2169, 2163, 912, 977, 978, 979,
	976, 2758, 1130, 453, 1231, 2256, 912, 977, 978, 979,
	976, 1225, 2785, 2786, 2606, 2877, 1707, 977, 978, 979,
	976, 100, 2878, 2444, 2774, 2086, 2087, 1532, 1554, 1555,
	811, 912, 2784, 54, 53, 1506, 2242, 1549, 1550, 1551,
	1223, 2034, 2794, 2809, 2158, 2842, 1506, 2859, 2855, 2872,
	2805, 2835, 2874, 1085, 2571, 2572, 457, 182, 2806, 2241,
	2880, 1236, 977, 978, 979, 976, 2879, 2651, 1643, 2652,
	912, 2876, 2581, 811, 2849, 2869, 1272, 458, 2854, 2188,
	2760, 1081, 2851, 2857, 1304, 977, 978, 979, 976, 459,
	460, 1885, 1886, 2906, 2863, 1946, 2861, 1718, 2362, 2865,
	936, 2813, 3111, 2866, 2870, 2363, 2364, 2365, 2871, 2238,
	912, 1225, 1225, 2625, 2852, 2868, 2582, 2331, 2269, 912,
	1967, 1558, 1523, 2789, 2355, 1457, 1456, 2944, 3205, 2944,
	1093, 1094, 3074, 2808, 2680, 977, 978, 979, 976, 2811,
	1223, 2932, 2812, 2882, 2892, 2939, 2940, 2930, 2074, 2433,
	1091, 1092, 2070, 1654, 1225, 1187, 2907, 1089, 1090, 1186,
	2959, 1087, 1088, 2909, 2935, 968, 2714, 2120, 1776, 1141,
	1083, 3274, 456, 2721, 912, 912, 3178, 3163, 912, 912,
	1234, 3161, 3122, 2932, 3100, 462, 3099, 3097, 2433, 2936,
	3089, 3005, 3004, 2947, 2995, 2888, 2948, 2237, 2755, 2994,
	2738, 2737, 2722, 2236, 1560, 2989, 3002, 2842, 2957, 2809,
	2021, 2996, 115, 2835, 3006, 3007, 2981, 2982, 2230, 2961,
	2990, 2991, 2221, 977, 978, 979, 976, 1086, 2928, 977,
	978, 979, 976, 2474, 1562, 2198, 3236, 3235, 3235, 3037,
	2510, 1959, 1834, 2999, 977, 978, 979, 976, 977, 978,
	979, 976, 927, 3030, 2998, 1411, 3236, 2975, 2739, 2466,
	3000, 977, 978, 979, 976, 2077, 2306, 680, 1156, 2792,
	169, 3, 2313, 62, 3049, 3057, 115, 2, 1202, 2899,
	115, 977, 978, 979, 976, 2103, 1701, 3025, 3029, 3035,
	1229, 115, 2928, 2928, 2648, 1, 2928, 2928, 1514, 2955,
	2956, 115, 2082, 2085, 2086, 2087, 2083, 3048, 2084, 2088,
	685, 1441, 681, 682, 683, 684, 3050, 680, 3053, 2451,
	3060, 2452, 3059, 912, 2713, 3058, 2454, 1225, 1794, 2422,
	2068, 3068, 1947, 2602, 3051, 3052, 3277, 2082, 2085, 2086,
	2087, 2083, 1131, 2084, 2088, 3073, 727, 1463, 1329, 828,
	3084, 921, 1326, 920, 918, 1413, 1223, 576, 1759, 2413,
	2387, 3001, 3204, 3083, 3242, 3082, 990, 1000, 1001, 993,
	994, 995, 996, 997, 998, 999, 992, 3106, 912, 1025,
	3155, 3096, 3207, 1342, 560, 3094, 3091, 3015, 3123, 991,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 3159, 3118, 3017, 2894, 1799, 973, 2496, 912, 749,
	3117, 3124, 3114, 613, 587, 1225, 1038, 3132, 3150, 3153,
	1312, 1305, 3125, 2551, 830, 2467, 2468, 3134, 586, 2773,
	2279, 2469, 3061, 827, 3140, 3142, 3144, 3146, 750, 3133,
	1743, 2928, 3130, 3013, 1223, 1273, 3154, 1277, 2949, 2798,
	3139, 3149, 3160, 2631, 3162, 1225, 3164, 3165, 3158, 2310,
	3318, 3307, 3289, 3272, 3183, 3188, 3303, 3222, 1437, 3258,
	2902, 2900, 2901, 3177, 1434, 3251, 3179, 496, 1436, 1433,
	1435, 1439, 1440, 1680, 1223, 442, 1438, 3211, 792, 2993,
	1755, 3185, 497, 1976, 3171, 3076, 2928, 707, 1956, 3210,
	3197, 708, 3198, 3201, 3199, 710, 3200, 2295, 2294, 912,
	1382, 982, 1399, 2567, 2568, 1017, 535, 3106, 3216, 1822,
	3215, 2276, 2830, 2463, 61, 3217, 2928, 60, 59, 58,
	1725, 190, 578, 189, 3241, 2923, 3230, 3152, 3209, 3233,
	3231, 3225, 3227, 558, 557, 556, 555, 3244, 554, 2081,
	3249, 2079, 912, 3237, 3238, 3239, 3240, 2078, 1664, 1663,
	3250, 1723, 2353, 2347, 2017, 3254, 2022, 3256, 1596, 3189,
	3136, 1668, 3137, 2972, 2397, 1548, 2013, 3211, 3270, 1613,
	2369, 1610, 1609, 3266, 2361, 2968, 912, 2962, 912, 3210,
	1640, 2299, 3269, 2609, 3276, 2790, 3278, 2943, 2814, 2815,
	2821, 3281, 1966, 853, 849, 851, 852, 850, 2207, 3244,
	912, 3285, 1994, 3287, 3292, 2620, 1899, 1898, 3296, 3299,
	1896, 1895, 3302, 1103, 3036, 2757, 1906, 3220, 1904, 1444,
	1445, 1446, 1447, 1448, 1449, 1442, 1443, 3306, 115, 3313,
	2706, 115, 115, 3317, 115, 3316, 2702, 1767, 1511, 2255,
	1665, 3325, 1661, 1958, 2910, 1553, 700, 3313, 3330, 3329,
	3328, 1954, 3317, 98, 147, 3331, 48, 89, 88, 97,
	1365, 145, 47, 174, 173, 176, 175, 3275, 172, 2137,
	2138, 171, 809, 1261, 170, 2946, 674, 38, 37, 809,
	33, 12, 11, 34, 21, 22, 20, 2549, 115, 1333,
	19, 25, 31, 30, 1365, 108, 1365, 107, 29, 106,
	105, 104, 103, 102, 28, 18, 1707, 42, 41, 40,
	594, 9, 96, 94, 27, 95, 92, 93, 1365, 336,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 549, 90, 73, 72, 279, 71, 86, 306,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 437, 85, 438, 84, 83, 585, 82, 81,
	365, 320, 79, 80, 748, 1008, 645, 653, 70, 69,
	68, 67, 66, 91, 77, 87, 78, 76, 542, 75,
	74, 575, 622, 621, 562, 572, 65, 64, 256, 188,
	439, 63, 440, 563, 131, 571, 564, 568, 567, 565,
	566, 1003, 637, 1007, 130, 128, 129, 127, 126, 533,
	546, 125, 550, 124, 123, 2746, 122, 43, 44, 1004,
	1006, 1002, 45, 1005, 991, 990, 1000, 1001, 993, 994,
	995, 996, 997, 998, 999, 992, 543, 544, 46, 141,
	140, 142, 595, 144, 545, 146, 143, 590, 569, 573,
	138, 136, 139, 137, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 135, 56, 249, 384, 367,
	317, 298, 299, 248, 17, 353, 277, 290, 274, 333,
	570, 593, 597, 273, 659, 591, 394, 251, 24, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 660, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 4, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 396, 0, 0, 643, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 592,
	0, 356, 338, 656, 534, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	2097, 0, 0, 1465, 1464, 1466, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 1820, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 366, 389, 401, 418, 421, 0, 1668, 0,
	0, 244, 420, 0, 0, 0, 0, 115, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2980, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 871, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 0, 0, 0, 0, 0, 777, 0, 0,
	776, 0, 0, 449, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 740, 0, 0, 879, 883, 885, 887, 889, 890,
	892, 0, 897, 893, 894, 895, 896, 0, 874, 875,
	876, 877, 855, 856, 880, 0, 858, 0, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 870, 872, 868,
	869, 878, 0, 0, 0, 0, 0, 0, 0, 882,
	884, 886, 888, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 1668, 1668, 1668, 1668, 873, 0, 0, 0,
	0, 0, 735, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 771, 115, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 754, 758, 774, 0, 0, 0,
	755, 752, 751, 0, 757, 742, 743, 741, 744, 745,
	746, 747, 0, 772, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 594, 768, 769, 0, 2204,
	2205, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 279, 1507, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 437, 0, 438,
	0, 0, 585, 0, 0, 365, 320, 0, 0, 0,
	0, 645, 653, 115, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 542, 0, 0, 575, 622, 621, 562,
	572, 0, 0, 256, 188, 439, 0, 440, 563, 0,
	571, 564, 568, 567, 565, 566, 0, 637, 0, 0,
	0, 0, 0, 0, 533, 546, 0, 550, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 0, 115, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 595, 0, 545,
	0, 0, 1693, 569, 573, 0, 881, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 570, 593, 597, 273, 659,
	591, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 660, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	396, 0, 0, 643, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 592, 0, 356, 338, 656, 534,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	115, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 165, 594, 0,
	404, 405, 406, 427, 390, 0, 445, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 1011, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 534, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 594, 0, 404, 405, 406, 427, 390, 0, 445,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 549, 0, 0, 0, 279, 3286, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 585, 0,
	0, 365, 320, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 439, 0, 440, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	533, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 570, 593, 597, 273, 659, 591, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 660, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 396, 0, 0, 643,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	592, 0, 356, 338, 656, 534, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 641, 334, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 596, 0, 0, 324, 325, 326, 327, 644,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 629, 606, 607,
	608, 551, 609, 603, 604, 605, 630, 598, 626, 627,
	577, 601, 610, 625, 611, 628, 631, 632, 671, 672,
	617, 673, 614, 633, 624, 623, 612, 599, 634, 635,
	584, 579, 615, 616, 602, 618, 619, 620, 552, 580,
	581, 582, 583, 0, 594, 0, 404, 405, 406, 427,
	390, 0, 445, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 549, 0, 0, 0,
	279, 1507, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 585, 0, 0, 365, 320, 0, 0, 0, 0,
	645, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 575, 622, 621, 562, 572,
	0, 0, 256, 188, 439, 0, 440, 563, 0, 571,
	564, 568, 567, 565, 566, 0, 637, 0, 0, 0,
	0, 0, 0, 533, 546, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 544, 0, 0, 0, 0, 595, 0, 545, 0,
	0, 590, 569, 573, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 570, 593, 597, 273, 659, 591,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 660, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 396,
	0, 0, 643, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 592, 0, 356, 338, 656, 534, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 641, 334, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 596, 0, 0, 324, 325,
	326, 327, 644, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	629, 606, 607, 608, 551, 609, 603, 604, 605, 630,
	598, 626, 627, 577, 601, 610, 625, 611, 628, 631,
	632, 671, 672, 617, 673, 614, 633, 624, 623, 612,
	599, 634, 635, 584, 579, 615, 616, 602, 618, 619,
	620, 552, 580, 581, 582, 583, 0, 594, 0, 404,
	405, 406, 427, 390, 0, 445, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 549,
	0, 0, 0, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 585, 0, 0, 365, 320, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 439, 0, 440,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 533, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 1256, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 570, 593, 597,
	273, 659, 591, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 660, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 396, 0, 0, 643, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 592, 0, 356, 338,
	656, 534, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 641, 334,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 596, 0,
	0, 324, 325, 326, 327, 644, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	0, 0, 404, 405, 406, 427, 390, 594, 445, 0,
	1842, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	449, 441, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 585, 0, 0, 365, 320, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 439, 0, 440,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 533, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 570, 593, 597,
	273, 659, 591, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 660, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 396, 0, 0, 643, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 592, 0, 356, 338,
	656, 534, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 641, 334,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 596, 0,
	0, 324, 325, 326, 327, 644, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	594, 0, 404, 405, 406, 427, 390, 0, 445, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 549, 0, 0, 0, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 585, 0, 0,
	365, 320, 0, 0, 0, 0, 645, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 575, 622, 621, 562, 572, 0, 0, 256, 188,
	439, 0, 440, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 637, 0, 0, 0, 0, 0, 0, 533,
	546, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 595, 0, 545, 0, 0, 590, 569, 573,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	570, 593, 597, 273, 659, 591, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 660, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 396, 0, 0, 643, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 592,
	0, 356, 338, 656, 534, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 594, 0, 404, 405, 406, 427, 390,
	0, 445, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 449, 441, 549, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	585, 0, 0, 365, 320, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 593, 597, 273, 659, 591, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 660, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 396, 0,
	0, 643, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 592, 0, 356, 338, 656, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 1384, 1385, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 641, 334, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 596, 0, 0, 324, 325, 326,
	327, 644, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 594, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 549, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 641, 334, 0,
	0, 0, 0, 655, 636, 638, 639, 642, 646, 647,
	648, 649, 650, 652, 654, 658, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 596, 0, 0,
	324, 325, 326, 327, 644, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 666, 640, 665, 667, 668, 664, 669, 670,
	651, 553, 0, 600, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 629, 606, 607, 608, 551, 609, 603, 604,
	605, 630, 598, 626, 627, 577, 601, 610, 625, 611,
	628, 631, 632, 671, 672, 617, 673, 614, 633, 624,
	623, 612, 599, 634, 635, 584, 579, 615, 616, 602,
	618, 619, 620, 552, 580, 581, 582, 583, 0, 594,
	0, 404, 405, 406, 427, 390, 0, 445, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 549, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 585, 0, 0, 365,
	320, 0, 0, 0, 0, 645, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	575, 622, 621, 562, 572, 0, 0, 256, 188, 439,
	0, 440, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 595, 0, 545, 0, 0, 590, 569, 573, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 570,
	593, 597, 273, 659, 591, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	660, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 396, 0, 0, 643, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 592, 0,
	356, 338, 656, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	641, 334, 0, 0, 0, 0, 655, 636, 638, 639,
	642, 646, 647, 648, 649, 650, 652, 654, 658, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	596, 0, 0, 324, 325, 326, 327, 644, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 666, 640, 665, 667, 668,
	664, 669, 670, 651, 553, 0, 600, 662, 661, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 629, 606, 607, 608, 551,
	609, 603, 604, 605, 630, 598, 626, 627, 577, 601,
	610, 625, 611, 628, 631, 632, 671, 672, 617, 673,
	614, 633, 624, 623, 612, 599, 634, 635, 584, 579,
	615, 616, 602, 618, 619, 620, 552, 580, 581, 582,
	583, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 165, 51, 157, 133, 0, 0, 0, 0, 0,
	0, 336, 449, 441, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 150, 0, 279, 0,
	159, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 113,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
	162, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 0,
	99, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	180, 0, 0, 0, 369, 0, 0, 305, 155, 149,
	148, 412, 0, 356, 338, 57, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 151, 152, 153, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 391, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 183, 0,
	0, 436, 191, 0, 0, 0, 154, 0, 192, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 134, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 336, 193, 39, 181, 184, 186, 185, 0,
	49, 5, 0, 0, 116, 194, 441, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1044, 0, 0, 187, 0, 0, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 0, 0, 0, 165, 51,
	157, 133, 0, 0, 0, 0, 449, 441, 336, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 467, 469, 261,
	419, 349, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	134, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 871, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 0,
	1942, 1938, 1939, 1940, 1941, 0, 1925, 1926, 1927, 1928,
	855, 1909, 1931, 0, 1910, 332, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1922, 1923, 1920, 1921, 1929,
	344, 310, 345, 295, 322, 321, 323, 882, 884, 886,
	888, 891, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 1924, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 881, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 2005, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 396, 0, 0, 0,
	2004, 0, 2003, 369, 2001, 2006, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 2007,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 0, 238, 233,
	234, 235, 236, 336, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 0, 0, 1727, 0, 0, 0, 0,
	279, 0, 0, 306, 449, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1728, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 977,
	978, 979, 976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 791, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 798, 799, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 786, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 777, 394, 251, 776, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 789, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 790,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 793, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	800, 787, 796, 788, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 396, 0, 0, 0, 2028, 2026, 0, 369, 0,
	2027, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 0, 238, 233, 234, 235, 236, 165, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 113, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 1771, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	134, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 165, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 0, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 113,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 1762, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 134, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 238,
	233, 234, 235, 236, 165, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	0, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 113, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1666, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 134, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 798, 799, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 777, 394, 251, 776,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 800, 1685, 796, 1686, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 2426, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 2429, 0, 0, 2428, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	1228, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1226, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 1222, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 1226, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3206, 0, 187, 622, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1226, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 1226, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2933, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 238, 233, 234, 235, 236, 336,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 0,
	0, 2093, 0, 0, 0, 0, 279, 0, 0, 306,
	449, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 2095, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 2114, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1226, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3295, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	622, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3221, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 3151,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2929, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 2793, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 3003, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2302, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2587, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1226, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2095, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 2130, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	1968, 238, 233, 234, 235, 236, 336, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 0, 306, 449, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	1653, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 1226, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 1566, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 1251, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	487, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 488, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 464, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 336,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 454, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 1206, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 1204, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 528, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	165, 51, 157, 133, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 158, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 159,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 101, 307, 0, 348, 284, 0, 162,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 871, 0,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 0, 0, 0, 118, 119, 0, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 1641, 0, 0,
	0, 0, 1603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 156, 163, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 1611, 857, 0,
	0, 0, 847, 0, 0, 0, 0, 155, 149, 148,
	0, 0, 1618, 0, 57, 0, 0, 0, 879, 883,
	885, 887, 889, 890, 892, 0, 897, 893, 894, 895,
	896, 0, 874, 875, 876, 877, 855, 856, 880, 0,
	858, 0, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 870, 872, 868, 869, 878, 0, 0, 0, 0,
	0, 0, 0, 882, 884, 886, 888, 891, 0, 0,
	0, 0, 0, 0, 0, 151, 152, 153, 0, 1634,
	977, 978, 979, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 154, 0, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	1604, 1601, 0, 1598, 0, 0, 0, 0, 1622, 1441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 1616,
	1650, 0, 0, 1617, 1619, 1621, 50, 1623, 1624, 1625,
	1629, 1630, 1631, 1633, 1636, 1637, 1638, 0, 0, 0,
	0, 0, 0, 0, 1626, 1635, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 724, 1642, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 1599,
	1600, 0, 0, 0, 0, 0, 0, 0, 507, 506,
	513, 503, 134, 0, 0, 705, 0, 1639, 0, 0,
	510, 511, 0, 512, 516, 0, 0, 498, 718, 0,
	721, 0, 0, 0, 1615, 0, 0, 521, 0, 0,
	0, 1614, 0, 0, 0, 0, 1437, 0, 0, 0,
	0, 0, 1434, 0, 0, 0, 1436, 1433, 1435, 1439,
	1440, 0, 0, 0, 1438, 1632, 0, 0, 0, 0,
	0, 0, 112, 39, 1620, 0, 0, 0, 0, 49,
	0, 857, 0, 116, 117, 0, 0, 1647, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 879, 883, 885, 887, 889, 890, 892, 0, 897,
	893, 894, 895, 896, 0, 874, 875, 876, 877, 855,
	856, 880, 0, 858, 0, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 870, 872, 868, 869, 878, 1608,
	0, 0, 0, 1641, 0, 0, 882, 884, 886, 888,
	891, 1437, 0, 0, 0, 0, 720, 1434, 714, 0,
	701, 1436, 1433, 1435, 1439, 1440, 0, 717, 716, 1438,
	0, 0, 0, 0, 0, 1649, 0, 1643, 1648, 0,
	0, 0, 0, 873, 698, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 0, 1641, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1444, 1445, 1446,
	1447, 1448, 1449, 1442, 1443, 0, 0, 0, 3312, 0,
	0, 0, 0, 499, 501, 500, 0, 723, 1618, 1643,
	0, 0, 713, 505, 0, 0, 712, 0, 0, 0,
	0, 0, 697, 0, 0, 509, 704, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1618, 0, 0, 0, 0, 0, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 0, 0, 0, 0,
	722, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1444, 1445, 1446, 1447, 1448, 1449, 1442, 1443,
	507, 506, 513, 503, 0, 0, 703, 0, 0, 0,
	0, 0, 510, 511, 0, 512, 516, 0, 0, 498,
	0, 0, 0, 3056, 0, 0, 0, 1634, 0, 521,
	0, 0, 0, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 508, 514, 0, 515, 517, 0,
	0, 518, 519, 520, 1622, 0, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 1643, 0, 0,
	0, 0, 525, 0, 0, 527, 0, 0, 0, 0,
	526, 0, 719, 0, 0, 1616, 1650, 0, 0, 1617,
	1619, 1621, 0, 1623, 1624, 1625, 1629, 1630, 1631, 1633,
	1636, 1637, 1638, 0, 0, 0, 1622, 0, 0, 0,
	1626, 1635, 1627, 0, 0, 0, 0, 1628, 1618, 0,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 1616, 1650, 0,
	0, 1617, 1619, 1621, 1642, 1623, 1624, 1625, 1629, 1630,
	1631, 1633, 1636, 1637, 1638, 0, 0, 0, 507, 506,
	513, 503, 1626, 1635, 1627, 0, 0, 0, 0, 0,
	510, 511, 0, 512, 516, 0, 0, 498, 0, 0,
	0, 0, 0, 1639, 0, 1634, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 0, 0, 0,
	1615, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 499, 501, 500, 0, 0,
	0, 0, 0, 0, 0, 505, 0, 0, 0, 0,
	525, 1632, 0, 527, 0, 1639, 0, 509, 526, 0,
	1620, 0, 0, 0, 524, 0, 0, 0, 0, 0,
	0, 502, 1615, 0, 0, 493, 0, 0, 0, 1614,
	0, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 1616, 1650, 0, 0, 1617,
	1619, 1621, 0, 1623, 1624, 1625, 1629, 1630, 1631, 1633,
	1636, 1637, 1638, 0, 0, 0, 0, 0, 0, 0,
	1626, 1635, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 504, 508, 514, 0, 515,
	517, 0, 0, 518, 519, 520, 0, 0, 522, 523,
	0, 0, 0, 499, 501, 500, 0, 0, 0, 0,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1639, 0, 509, 0, 0, 0, 0,
	0, 0, 524, 0, 0, 0, 0, 0, 0, 502,
	1615, 0, 0, 0, 0, 0, 0, 1614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 508, 514, 0, 515, 517, 0,
	0, 518, 519, 520, 0, 0, 522, 523,
}

var yyPact = [...]int{
	296, -1000, -1000, -1000, -321, 9889, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35123,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35123,
	-313, 34577, 34577, -1000, -1000, 2226, -1000, 34030, 11026, 35123,
	318, 313, 35123, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 643,
	-1000, 33484, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 569,
	38028, 36761, 7627, -270, -1000, 2976, -111, 2082, 815, 862,
	1007, 1007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37642, 744, 32938, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3779, 333, 744, 13217, 19,
	16, 2976, 326, 236, -1000, 1091, 37208, 156, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7627,
	7627, 9889, -349, 9889, 7627, 35123, 35123, -1000, -1000, -1000,
	-1000, 569, 38028, 7627, 2082, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37298, -1000, 1347, -1000, -1000, -1000, -1000, -1000,
	2490, 1345, 2073, 518, 35123, -1000, 1342, 518, -1000, -1000,
	-1000, 2976, 2976, -1000, 35123, 35123, 86, 1569, -1000, 360,
	339, 338, 1331, -1000, -1000, -1000, -1000, -1000, -1000, 455,
	2906, -1000, 35123, 35123, 2530, 35123, -1000, 1890, 486, 38186,
	2735, 1275, 728, 2555, -1000, -1000, 2487, -1000, 202, 571,
	214, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 224,
	-1000, 2809, -1000, -1000, 192, -1000, -1000, 169, -1000, -1000,
	-1000, 15, -1000, -1000, -1000, -1000, -1000, -1000, -85, -1000,
	-1000, 894, 1651, 7627, -1000, 1906, -1000, 3369, -1000, -1000,
	-1000, -1000, 4805, 9316, 9316, 9316, 9316, -1000, -1000, 2334,
	7627, 2486, 2485, 2482, -1000, -1000, -1000, -1000, -1000, 1327,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1706,
	-1000, -1000, -1000, 8753, -1000, 2481, 2473, 2472, 2471, 2468,
	2467, 2452, 2450, 2447, 2446, 2436, 2430, 2429, 2428, 2242,
	10450, 2427, 2072, 2069, 2425, 2424, 2423, 2067, 2242, 2242,
	2422, 2421, 2419, 2417, 2416, 2409, 2408, 2407, 2405, 2397,
	2394, 2393, 2392, 2391, 2390, 2389, 2373, 2371, 2370, 2369,
	2350, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1190, -1000, 2344, 2713, 2819, 2289,
	2877, 2800, 2796, 2789, 2769, 1866, -1000, -1000, 59, -1000,
	-139, -1000, -1000, 864, -1000, 777, -1000, 35123, 35123, 35123,
	828, 552, 552, 552, 552, 552, 552, 623, 552, 35123,
	-155, 642, 629, 626, 552, -1000, -1000, -1000, -1000, -1000,
	-1000, -119, -1000, 1567, 1563, 2614, 751, -1000, -1000, -1000,
	-1000, 1152, 35123, -1000, 2291, 1414, 1414, 2816, 499, 498,
	494, 1414, 362, -1000, 1565, 1565, 1565, 1565, 1414, 391,
	483, 2819, 2819, -6, 1565, -12, 1414, 1414, -12, 1414,
	1414, 1414, 167, -308, -1000, -1000, -1000, 1565, 1565, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2799, 2795, 569, 35123,
	122, 35123, 569, 569, 569, 575, -38, 36215, 35669, 1890,
	479, 477, 1175, 1514, -1000, 1440, 35123, 35123, 1440, 1440,
	17636, 17090, -1000, 35123, -1000, 2819, 2289, -1000, 2220, 2649,
	2217, 2289, 569, 569, 569, 569, 569, 161, 569, 569,
	569, 569, 35123, 35123, 32392, 569, 569, 6494, 6494, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9889, 2074,
	1898, 152, -72, -316, 234, -1000, -1000, 35123, 2706, 187,
	-1000, -1000, -1000, 2250, -1000, 2288, 2288, 2288, 2288, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2288, 2288,
	2319, 2343, -1000, -1000, 2285, 2285, 2285, 2250, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2317, 2317, 2318, 2318, 2317, 35123, 7627,
	35123, 2716, 327, 2342, -1000, 35123, 316, 2819, 2713, 2819,
	-1000, -1000, 1322, 1863, 2066, -1000, -1000, 360, 1448, -1000,
	897, -1000, -1000, -1000, -1000, 35123, -85, 309, -1000, -1000,
	2059, 2340, -1000, 491, 1252, 1123, -1000, 199, 37716, 28017,
	1890, 28017, 35123, -1000, -1000, -1000, -1000, -1000, -1000, 7,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 194, -1000, 7627, 7627, 7627, 7627, 7627,
	-1000, 550, 8190, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9316, 9316, 9316, 9316, 9316, 9316, 9316, 9316, 9316, 9316,
	9316, 9316, 2333, 1677, 9316, 9316, 9316, 9316, 2649, 2843,
	1169, 223, -1000, -1000, -1000, -1000, -1000, 1583, 1651, 7627,
	7627, 7627, 35123, -1000, -1000, 37422, 7627, 7627, 37527, 7627,
	2764, 7627, 7627, 7627, 2212, 3377, 35123, 7627, -1000, 2211,
	2206, -1000, -1000, 1705, 7627, -1000, -1000, 7627, -1000, -1000,
	7627, 9316, 7627, -1000, -1000, -1000, 2794, 2764, 2764, 1566,
	7627, 7627, 2764, 2764, 2764, 1543, 2764, 2764, 2764, 2764,
	2764, 2764, 2764, 2764, 2205, 2201, 2200, 2819, -270, 5931,
	-1000, -276, 2713, 7627, -1000, -1000, 7627, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2065, 2062, -337, -53, 811,
	782, 790, -1000, 2758, -1000, 2339, 2336, 1320, 552, -1000,
	-120, 35123, 1594, 35123, 28017, 35123, 35123, 1890, 35123, 35123,
	-189, 552, -158, 552, 552, 552, 35123, -1000, 2655, 28017,
	2643, 575, -1000, 35123, 1152, 2757, 35123, 2887, 9316, 9316,
	-1000, 31846, 1565, 1414, 1414, -1000, -1000, 35123, -1000, -1000,
	-1000, 1565, 35123, 1565, 1565, 2887, 1565, -1000, -1000, -1000,
	1414, 1414, -1000, -1000, -1000, -1000, 1565, 1565, -1000, -1000,
	2887, 35123, 6, 2887, 2887, -4, -1000, -1000, -1000, 35123,
	35123, 552, 35123, -1000, 35123, 35123, -1000, -1000, 35123, 37371,
	35123, 31300, 2793, -1000, 28017, 35123, 35123, 25287, -1000, 1102,
	-1000, -62, -1000, -55, -38, 1440, -38, 1440, -1000, 490,
	520, 15998, 441, 28017, 4242, -1000, -1000, 1440, 1440, 4242,
	4242, 1237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1137,
	-1000, 176, 2713, -1000, -1000, -1000, -1000, -1000, 35123, 35123,
	28017, 1890, 35123, 569, 35123, 35123, 35123, 35123, -1000, 2335,
	-1000, 2732, 35123, 35123, 1084, -1000, -1000, 12671, 1313, 1084,
	-1000, 1604, -1000, 7627, 9889, -295, 7627, 9889, 9889, 7627,
	9889, -1000, 7627, 157, -1000, -1000, -1000, -1000, 1862, -1000,
	1861, -1000, -1000, -1000, -1000, -1000, 2061, 2061, -1000, 1854,
	-1000, -1000, -1000, -1000, 1853, -1000, -1000, 1851, -1000, -1000,
	-1000, 2199, 894, -1000, 2054, 2548, -271, -1000, 14889, 35123,
	35123, -1000, -1000, -271, -1000, 14326, 35123, 2713, -1000, 2713,
	35123, -1000, 2815, -1000, 360, 306, -1000, -1000, -1000, -1000,
	-1000, -1000, 1310, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1120, -1000, 35123, -1000, -1000, 199, 28017, 29109,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, -1000,
	164, -1000, 602, 114, 1441, -1000, -1000, 144, 168, 90,
	670, 1651, -1000, 1606, 1606, 1610, -1000, 570, -1000, -1000,
	-1000, -1000, 2334, -1000, -1000, -1000, 1627, 2900, -1000, 1468,
	1468, 1359, 1359, 1359, 1359, 1359, 1535, 1535, -1000, -1000,
	-1000, 4805, 2333, 9316, 9316, 9316, 9316, 503, 503, 2439,
	3615, -1000, 7627, 1596, -1000, 7627, 2240, 2187, 1302, 1284,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2196, 2195, 1987, 2896, 2194, 7627, -1000, -1000, 1439, 1436,
	1435, -1000, 1813, 7064, -1000, -1000, -1000, 2191, 1278, 2183,
	-1000, -1000, -1000, 2180, 1422, 1076, 2177, 1794, 2175, 1113,
	7627, 7627, 7627, 2174, 1409, 1400, 7627, 7627, 7627, 7627,
	2169, 7627, 7627, 7627, 7627, 7627, 7627, 7627, 7627, 43,
	43, 43, -1000, -1000, 1399, -1000, 1651, -1000, 2052, -1000,
	1461, 1108, -1000, 1965, -1000, -1000, -1000, 2002, -1000, -1000,
	802, 767, 820, 35123, 952, 11572, 35123, 35123, -1000, 2291,
	2730, 150, -1000, 1073, -1000, 114, -110, 332, 906, 2528,
	2895, 2331, 35123, 552, 35123, 35123, 35123, 2756, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30754, -1000, 2330, 1386,
	-1000, -1000, 7627, -1000, -1000, 2527, 35123, 35123, 2887, 2887,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35123, 2887, 2887,
	1414, 1565, -1000, -1000, 1565, -1000, -1000, 1565, -1000, 1269,
	-1000, 35123, -1000, -1000, -1000, 2291, 1107, -1000, 846, 544,
	544, 893, 721, 2860, 13763, -1000, 1472, 1072, 595, 2669,
	208, -1000, 1472, -221, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 444, 410, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 821, 1472, 1472, 1472, 1472, 1472,
	-1000, 1472, 2329, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	469, 135, 2792, 246, 245, 1073, 2788, 260, 2905, 1016,
	-1000, -1000, -1000, -1000, 19827, 19827, 15452, 19827, -1000, 1451,
	-38, -80, -1000, -1000, 1102, 4242, 1102, 4242, -1000, -1000,
	593, -1000, -1000, 906, -1000, 35123, 35123, -1000, -1000, 2328,
	1560, -1000, -1000, 10450, -1000, 4242, 4242, -1000, -1000, 20373,
	35123, -1000, -97, -1000, -66, 2814, 1070, -1000, -1000, 1078,
	906, 2547, 35123, 1070, 1070, -1000, -1000, 11572, 35123, -1000,
	-1000, 2887, 6494, -1000, 25287, -1000, -1000, 30201, -1000, 29655,
	2887, 1577, -1000, 9889, 1856, 147, -1000, 185, -317, 143,
	1714, 142, 1651, -1000, -1000, 2164, 2161, 1385, -1000, 1382,
	2154, 1379, 1339, -1000, -17, -1000, 2675, 911, -1000, 2327,
	-1000, 1332, 2605, -1000, 1068, -1000, 1550, 1323, -1000, 911,
	1318, 2604, 1068, 2814, -1000, 1262, 83, -1000, -1000, 35123,
	2059, 1317, 29109, 957, -1000, 580, 1254, 1251, -1000, 28017,
	195, 28017, -1000, 28017, -1000, -1000, 297, -1000, 35123, 2711,
	-1000, -1000, -1000, 2002, 1548, -340, -1000, -1000, -1000, -1000,
	-1000, 1315, -1000, 503, 503, 2439, 2401, -1000, 9316, -1000,
	9316, 2823, 1576, -1000, 7627, 1773, 3874, 3874, 1726, 18728,
	35123, -1000, -1000, 7627, 7627, -1000, 2810, -1000, -1000, -1000,
	-1000, 7627, 7627, 1708, -1000, 35123, -1000, -1000, -1000, -1000,
	18728, -1000, 9316, -1000, 7627, 1069, 2806, 1311, 43, 43,
	43, 2791, 2785, 2697, 1306, 43, 2647, 2624, 2579, 2569,
	2559, 2534, 2521, 2510, -1000, 2325, -1000, -1000, 5931, -1000,
	-17, 7627, 7627, 7627, 2632, -1000, -1000, 112, -1000, 1547,
	-1000, -1000, -1000, 761, 158, 2151, 1055, -1000, -1000, 35123,
	-1000, -1000, -1000, 2150, 1045, -1000, -1000, -1000, 37651, 2288,
	2288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2288, 2288, 2319, -1000, -1000, 2285, 2285, 2285, 2250, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2317, 2317,
	2318, 2318, 2317, -1000, 2291, 2754, -1000, 37, 1472, 557,
	28017, 470, -1000, 35123, 1874, 1541, 2546, 277, 2698, 35123,
	25833, 233, 35123, 2314, 2305, 2303, 311, 37651, 35123, 1033,
	-1000, 1232, 37208, -1000, 35123, 1651, -1000, 1890, -1000, 1414,
	-1000, -1000, 2887, 1236, -1000, -1000, 2887, 1414, 1414, 1565,
	35123, -1000, 2753, 37371, -1000, 35123, -1000, -1000, -1000, 839,
	-1000, 704, 552, 35123, 1643, 704, 1634, 2295, -1000, -1000,
	35123, 35123, 35123, 35123, -1000, -1000, 35123, -1000, 35123, 35123,
	35123, 35123, -1000, 35123, 35123, -1000, 35123, 1633, 1629, 2728,
	-1000, 1472, 1472, 724, -1000, -1000, 492, -1000, 1850, 1847,
	1846, 1845, 2051, 2049, 2046, 1472, 1472, 1829, 2045, 28563,
	2042, 916, 1820, 1819, 1815, 1831, 2041, 695, -1000, 2040,
	1824, 1795, 1792, 35123, 2293, 1955, -1000, -1000, 37, 1472,
	235, 35123, 1523, 557, 317, 1879, 16544, 35123, 25287, 25287,
	25287, 25287, -1000, 2583, 2581, -1000, 2582, 2580, 2626, 35123,
	25287, 2291, -1000, 28563, -1000, -1000, -1000, 2649, 1282, 2940,
	719, 7627, -1000, -1000, -57, -63, -1000, -1000, -1000, 28017,
	2032, 441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2915, 35123, 35123, 561, 2142, -1000, 2885, -1000, 1039, -1000,
	-1000, 1231, -1000, 2885, 1587, -322, 9889, 1580, 1411, -1000,
	7627, 9889, 7627, -297, 226, -299, -1000, -1000, -1000, 2022,
	-1000, -1000, -1000, 1806, -1000, 1793, 53, 68, 1628, -271,
	5931, 322, 35123, -271, 35123, 5931, -1000, 35123, 320, -271,
	-1000, 35123, 1790, -1000, -1000, -1000, 2894, 28017, 1890, 1373,
	27471, -1000, 191, -1000, 193, 467, 2021, -1000, 579, 111,
	2006, 2002, -1000, -1000, -1000, 9316, -1000, -1000, -1000, -1000,
	1651, 7627, 2140, -1000, 750, 750, 2135, 2132, -1000, 2288,
	2288, -1000, 2250, 2285, 2250, 750, 750, 2127, -1000, 2084,
	2488, -1000, 2479, 2385, 7627, -1000, 2125, 3285, 1186, -125,
	43, 43, -1000, -1000, -1000, -1000, 43, 43, 43, 43,
	-1000, 43, 43, 43, 43, 43, 43, 43, 43, 519,
	-1000, 53, 1651, 1651, -1000, -1000, 2680, -1000, 2002, 1999,
	-1000, 1997, 1996, 952, 37651, 653, 11572, 2702, 2752, 328,
	1881, -1000, -1000, -1000, 26925, 442, -1000, -1000, -1000, 566,
	230, 1783, 421, -1000, 35123, 260, 2633, 1512, 1983, 35123,
	-1000, -1000, -1000, -1000, -1000, 2698, -1000, 938, 281, 1280,
	-1000, 1472, 1472, 12118, 2749, 2284, 2283, 12118, 12118, 12118,
	301, 1531, -1000, 518, 1000, 1226, 25287, 35123, -1000, 24741,
	2122, -1000, 906, 2887, -1000, 35123, -1000, 2887, 2887, 1414,
	-1000, 328, -1000, 2693, 37651, -1000, 35123, -1000, 35123, -1000,
	35123, 35123, 552, 7627, 2693, 35123, 577, -1000, -1000, 880,
	290, 574, 574, 1022, -1000, 2725, -1000, -1000, -1000, 35123,
	-1000, -1000, -1000, -1000, -1000, -1000, 18728, 18728, 2774, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1980, 1976, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35123, 1270, -1000, 1511, 1881, 26925, 1510, 1440,
	1973, 442, 1874, 1509, -1000, 1971, -1000, 924, 35123, 35123,
	-1000, 1129, -1000, 1506, 2523, 2533, 2523, -1000, -1000, -1000,
	-1000, 2573, -1000, 2545, -1000, -1000, 1129, -1000, -1000, -1000,
	-1000, -1000, 719, -1000, 2813, 704, 704, 704, 2116, -1000,
	-1000, -1000, 957, 2115, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2824, 2852, 26379, 2824, -1000, -322, 1574,
	-1000, 1744, 139, 1636, 35123, -1000, -1000, -1000, 2109, 2107,
	-279, 75, 2851, 2850, 2914, -1000, 2106, 951, -271, -1000,
	-1000, 911, -1000, -1000, -1000, -271, -1000, 911, -1000, -1000,
	1890, -1000, 165, -1000, -1000, -1000, -1000, -1000, -1000, 99,
	-1000, 35123, -1000, 948, 110, -1000, 1651, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7627, -1000, -1000, -1000, 2280, -1000, -1000,
	7627, 2104, 1966, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2926, -1000, 2848,
	-279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37651,
	-1000, 2381, 328, -193, -1000, 1964, 113, -1000, -1000, -1000,
	1959, 1958, 1782, -1000, -1000, 1764, 895, 123, -1000, -1000,
	-1000, -1000, -1000, -1000, 1879, 1818, 1504, -344, -1000, 2278,
	-1000, 1472, 1472, 1472, 35123, -1000, 25833, 2381, 2381, 2097,
	943, -1000, -1000, -1000, -1000, 328, 23649, 12118, 2095, 2094,
	2091, 528, 1459, 1445, -1000, 1781, 19827, 25287, 24741, 1028,
	-1000, 1219, -1000, -1000, -1000, 2887, -1000, -1000, 2887, -1000,
	-1000, -1000, 35123, 287, 2276, -1000, 2274, 2526, 331, 2264,
	2263, 35123, 2272, -1000, 2693, 35123, 587, 2678, -1000, -1000,
	-1000, -1000, -1000, 373, -1000, 35123, -1000, -1000, 1224, -1000,
	18728, -1000, -1000, 1266, -1000, 1955, 1953, -1000, 113, 1950,
	4242, -1000, -1000, 2633, 1949, -1000, 35123, 924, 924, 2926,
	35123, 5931, -1000, -1000, 7627, 2262, -1000, 7627, -1000, -1000,
	-1000, -1000, -1000, 2259, 2674, -1000, -1000, -1000, -1000, -1000,
	-1000, 7627, 7627, -1000, -1000, 551, 9889, -306, 217, -1000,
	-1000, -1000, -281, 1936, -1000, -1000, 2845, 1929, 1892, 35123,
	-1000, 911, 911, 906, -1000, -1000, -4, 440, -1000, 2144,
	-1000, 2092, 43, -1000, 155, 7627, -281, -187, -1000, -1000,
	-193, -1000, 324, -1000, -1000, 293, -1000, -1000, 252, -1000,
	-1000, 1741, 476, -1000, -1000, -1000, 1923, 1683, 1900, 23103,
	18728, 19274, 1918, -1000, -1000, -1000, -1000, -199, 12118, -1000,
	1249, -1000, 1472, 1472, 2089, 38067, 194, 38067, 837, 1424,
	-1000, 1778, -1000, 1776, -1000, 2887, 1028, 1219, -1000, -1000,
	1344, -1000, -1000, -1000, -1000, 287, -1000, -1000, 1675, 9316,
	-1000, -1000, 1912, 19274, 686, 1499, 1485, 692, 2257, -1000,
	381, 2913, -1000, -1000, -1000, 702, 2254, -1000, 1624, 1620,
	-1000, 35123, -1000, 23103, 23103, 439, 439, 23103, 23103, 2253,
	574, -1000, -1000, 9316, -1000, -1000, -1000, -1000, 1472, 1192,
	-1000, -1000, -1000, -1000, -1000, -1000, 1818, -1000, -1000, 2819,
	-1000, -1000, 1651, 35123, 1651, 24195, -1000, 2842, 2841, 1651,
	894, -1000, -322, 35123, 35123, -283, 1774, -1000, 1911, 72,
	-1000, -1000, 900, -289, 51, 63, 1479, -1000, -1000, -1000,
	2088, -1000, 1061, -1000, -1000, -1000, 894, -283, 35123, -1000,
	376, -1000, -1000, 443, 1910, -1000, -1000, 250, -1000, -1000,
	-1000, -1000, -1000, 96, -1000, 1478, 1244, -1000, 2250, 7627,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23649, 2381,
	2381, -199, 517, 37909, -1000, 1072, -1000, -4, 517, 457,
	220, -1000, 1772, -1000, -1000, 2926, -1000, -1000, -1000, 2439,
	-1000, -1000, -1000, -1000, -1000, -1000, 1908, 1907, -1000, -1000,
	-1000, -1000, -1000, 1771, 2249, -58, 2772, 1905, -1000, -1000,
	2247, 1233, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1220, 1193, 23103, -1000, -1000, 2439, 18728, 1472, -1000, -1000,
	1188, 1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2246,
	-1000, -1000, 2840, -1000, 1903, 572, 67, 63, -1000, 2837,
	70, 2836, 2834, 1901, -1000, -1000, 836, -274, 41, 29,
	24, -1000, -1000, -1000, 7627, -1000, 2738, -1000, 189, -1000,
	98, -1000, -1000, -1000, 1900, 1899, -1000, 23103, 2725, 2005,
	-1000, -1000, -1000, -1000, 334, 2832, 38067, -1000, 1472, -1000,
	334, -1000, 307, -1000, 1420, -1000, 1769, -1000, 2819, -1000,
	-1000, 2079, 7627, 2242, 1472, 1970, -162, 23103, 2515, 2512,
	2493, 2282, 1173, -1000, 18728, -1000, -1000, 22557, 35123, 1892,
	-1000, 2235, 1766, 75, 44, 2831, -1000, 1892, 2827, 1892,
	1892, -1000, 1598, -1000, 38, 35, 27, -1000, -1000, -1000,
	-1000, 1896, -1000, -1000, -1000, -1000, 257, -1000, -1000, 2725,
	-1000, 2826, 387, -1000, 18728, -1000, -1000, -1000, 1762, -1000,
	-1000, -1000, 1732, -1000, 35123, -1000, 2491, -1000, 148, 1149,
	257, 439, 257, 439, 257, 439, 257, 439, 178, -1000,
	-1000, -1000, 1138, -1000, -1000, 2768, 18182, 55, -1000, -1000,
	-1000, 1894, -1000, 1892, -1000, -1000, 836, -1000, -1000, -1000,
	-1000, -1000, 1472, 1889, 275, -1000, -1000, -1000, 22011, 354,
	358, 341, -1000, 495, -1000, -1000, -1000, 574, -1000, -1000,
	2275, 2243, 2892, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35123, -1000, 35123, -1000, 1128, -1000, -1000,
	-1000, 1207, -1000, -1000, -1000, -1000, -1000, 1751, -1000, 35123,
	-1000, 35123, 346, 1742, 9316, 2234, 9316, 2232, 359, 2231,
	-1000, -1000, 2912, -1000, 2893, 700, 700, 257, 257, 257,
	257, -1000, 890, -1000, 1469, -1000, 21465, 35123, -1000, -1000,
	1122, 2230, 2821, -1000, 3265, 35123, 2924, 35123, 2225, 1427,
	9316, -1000, -1000, -1000, 1712, 394, -1000, 35123, 5368, -1000,
	1008, -1000, -1000, 506, 363, -1000, 1118, -1000, 1112, 20919,
	1738, 2320, -1000, -1000, -1000, -1000, -1000, 1651, 35123, 1096,
	-1000, 35123, 340, -1000, -1000, -1000, 1062, -1000, -1000, -1000,
	-1000, 506, 2599, -1000, 1702, -1000, -1000, 37857, 634, -1000,
	-1000, 37857, 335, -1000, 493, 2224, -1000, -1000, 1014, -1000,
	35123, 697, 7627, -1000, 335, 38067, -1000, 7627, 971, -1000,
	38067, 956, -1000, -1000,
}

var yyPgo = [...]int{
	0, 148, 2940, 238, 153, 3592, 86, 237, 231, 213,
	236, 3568, 3554, 2704, 2703, 3546, 3545, 3533, 3532, 3531,
	3530, 3530, 3526, 3525, 3523, 3521, 3520, 3519, 3518, 3502,
	3498, 3497, 3496, 3494, 3493, 3491, 3488, 3487, 3486, 3485,
	3484, 3474, 234, 3471, 3467, 3466, 3460, 3459, 3457, 3456,
	3455, 3454, 3453, 3452, 3451, 3450, 3449, 3448, 3444, 3443,
	3442, 3439, 3438, 3436, 3435, 3433, 3418, 3417, 3415, 3414,
	3413, 3397, 3396, 3395, 210, 3394, 2691, 3393, 3392, 3391,
	3389, 3388, 3387, 3385, 233, 3384, 3383, 3382, 3381, 3380,
	3379, 3378, 3377, 3375, 3373, 3372, 225, 3371, 3370, 3369,
	3366, 3365, 3364, 217, 3363, 151, 206, 3362, 3361, 3360,
	3358, 3357, 3356, 229, 241, 66, 3355, 44, 3354, 214,
	3353, 131, 3351, 129, 3350, 3349, 3348, 3346, 3345, 3344,
	3343, 3342, 3341, 3339, 3338, 3337, 3336, 3334, 3333, 3331,
	89, 3326, 246, 3325, 72, 3324, 3323, 115, 167, 178,
	244, 2043, 251, 235, 176, 156, 90, 3322, 2673, 3320,
	168, 221, 139, 23, 3319, 157, 3318, 136, 45, 43,
	242, 126, 56, 143, 108, 3317, 209, 100, 98, 3316,
	3310, 171, 247, 185, 3298, 110, 3296, 3295, 3294, 3293,
	191, 173, 3291, 3290, 111, 3287, 3286, 84, 3285, 70,
	189, 147, 183, 3282, 973, 128, 113, 107, 165, 3278,
	91, 3277, 3276, 3275, 3274, 160, 3273, 3272, 116, 62,
	3270, 3269, 3268, 68, 3267, 46, 3265, 3261, 36, 3260,
	65, 3257, 3255, 3254, 3252, 3251, 3250, 3249, 3246, 3245,
	3244, 3243, 69, 3242, 3240, 16, 17, 19, 3239, 24,
	3238, 149, 3236, 3234, 3233, 87, 77, 3232, 81, 1,
	47, 85, 3231, 219, 163, 96, 132, 3229, 413, 3228,
	3227, 3221, 140, 3219, 381, 3218, 3216, 3215, 3214, 3213,
	118, 3208, 211, 51, 3207, 119, 122, 3205, 37, 49,
	197, 180, 3203, 3202, 3201, 22, 202, 83, 29, 0,
	3200, 137, 3199, 3198, 3197, 240, 3194, 222, 175, 144,
	634, 257, 215, 3193, 3192, 61, 3191, 146, 64, 55,
	123, 10, 20, 161, 3189, 14, 170, 3186, 193, 3185,
	198, 7, 124, 3184, 3183, 35, 254, 3182, 3181, 3180,
	109, 3178, 3177, 164, 67, 3175, 3171, 3168, 3167, 42,
	3165, 32, 25, 3164, 93, 3163, 243, 3162, 248, 125,
	166, 155, 134, 216, 223, 73, 74, 3160, 1688, 133,
	95, 18, 3159, 220, 3158, 141, 114, 3155, 78, 3153,
	232, 366, 204, 3147, 169, 8, 41, 31, 3146, 9,
	3145, 196, 203, 3142, 3141, 21, 54, 3140, 30, 3139,
	3137, 3136, 3134, 5, 3133, 3132, 3131, 2, 4, 3130,
	3, 200, 3129, 3123, 3119, 3118, 48, 349, 3117, 138,
	177, 162, 3115, 92, 3113, 3110, 3108, 803, 3103, 239,
	3102, 3101, 3100, 3099, 3098, 3094, 3093, 3091, 3090, 94,
	39, 3086, 3084, 3083, 3079, 76, 130, 3077, 3076, 3075,
	3074, 33, 158, 3073, 26, 3071, 34, 27, 38, 3057,
	121, 3056, 12, 172, 3054, 3053, 15, 3052, 3050, 11,
	13, 3034, 3032, 106, 3031, 82, 28, 145, 99, 3030,
	3029, 80, 212, 127, 3028, 3027, 230, 228, 192, 3025,
	117, 227, 245, 3024, 208, 3023, 3022, 3021, 3019, 3018,
	3017, 1032, 3016, 3012, 224, 71, 88, 105, 3003, 3002,
	3000, 75, 142, 104, 103, 57, 79, 2999, 101, 190,
	2998, 188, 2996, 2994, 97, 2991, 2989, 2980, 2968, 2965,
	174, 2960, 2956, 179, 218, 2955, 2948, 2947, 2943, 259,
	150, 2938,
}

//line mysql_sql.y:10398
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 537, 537, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 527, 527, 527, 528,
	528, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 472, 472, 471, 471, 470,
	470, 424, 424, 469, 469, 469, 468, 468, 468, 467,
	467, 466, 466, 465, 465, 463, 463, 464, 462, 461,
	461, 461, 459, 459, 459, 455, 455, 457, 456, 456,
	458, 450, 450, 453, 453, 451, 451, 451, 451, 454,
	449, 449, 449, 448, 448, 95, 95, 95, 370, 370,
	94, 94, 384, 384, 384, 384, 384, 382, 382, 382,
	382, 382, 382, 381, 381, 380, 380, 385, 385, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 85,
	85, 85, 85, 85, 90, 90, 90, 534, 534, 533,
	533, 535, 535, 535, 535, 536, 536, 88, 88, 88,
	89, 379, 379, 379, 86, 87, 87, 369, 369, 374,
	374, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 378, 378, 378, 376, 376, 375,
	375, 377, 377, 79, 79, 79, 82, 81, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 366, 366, 365, 91, 91, 92, 531, 531,
	530, 532, 532, 532, 532, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 497, 497, 497, 499, 499, 303,
	304, 538, 306, 302, 302, 302, 493, 493, 494, 495,
	496, 496, 496, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 238, 238, 238,
	233, 233, 233, 233, 234, 234, 235, 235, 236, 236,
	236, 236, 237, 237, 296, 296, 255, 255, 255, 257,
	257, 256, 254, 252, 252, 252, 252, 252, 252, 253,
	253, 253, 258, 258, 71, 77, 77, 77, 510, 510,
	72, 521, 521, 427, 427, 317, 317, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 432, 433, 313, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 49, 52, 48, 48, 48,
	355, 355, 47, 539, 539, 291, 291, 60, 59, 51,
	61, 62, 63, 64, 65, 66, 46, 58, 58, 58,
	58, 58, 58, 58, 58, 69, 69, 444, 444, 541,
	541, 541, 67, 68, 426, 426, 426, 57, 56, 55,
	54, 53, 53, 45, 45, 44, 44, 50, 134, 135,
	310, 310, 310, 312, 312, 308, 540, 540, 398, 398,
	311, 311, 43, 43, 43, 43, 70, 309, 309, 290,
	307, 307, 307, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 24,
	25, 27, 363, 363, 360, 26, 18, 17, 17, 21,
	20, 16, 16, 19, 22, 23, 23, 9, 9, 9,
	9, 13, 13, 14, 155, 155, 205, 205, 505, 505,
	501, 501, 502, 502, 502, 503, 503, 504, 504, 103,
	438, 438, 438, 438, 438, 438, 8, 177, 177, 437,
	437, 437, 437, 437, 437, 367, 367, 482, 482, 482,
	483, 176, 176, 171, 171, 439, 439, 332, 484, 484,
	447, 447, 446, 446, 445, 445, 174, 174, 175, 175,
	158, 158, 114, 114, 452, 452, 452, 452, 460, 460,
	423, 423, 242, 242, 283, 283, 284, 284, 148, 148,
	149, 149, 149, 149, 149, 149, 490, 490, 492, 492,
	491, 173, 173, 169, 169, 170, 170, 170, 168, 168,
	167, 166, 166, 165, 163, 163, 163, 164, 164, 164,
	181, 181, 151, 151, 151, 150, 150, 150, 150, 150,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 152, 152, 498, 498, 498, 428, 428, 428,
	435, 435, 265, 265, 266, 266, 264, 264, 153, 153,
	154, 154, 154, 154, 263, 263, 262, 156, 156, 162,
	161, 161, 157, 157, 157, 157, 273, 273, 272, 272,
	272, 272, 106, 112, 112, 113, 180, 180, 271, 270,
	270, 270, 179, 179, 178, 178, 172, 172, 160, 160,
	160, 160, 269, 159, 267, 526, 526, 525, 525, 524,
	522, 522, 522, 523, 523, 523, 523, 474, 474, 474,
	474, 474, 297, 297, 297, 301, 301, 300, 300, 300,
	300, 300, 305, 7, 7, 7, 7, 7, 7, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	189, 190, 38, 191, 191, 192, 192, 193, 193, 194,
	195, 196, 196, 196, 196, 36, 182, 182, 183, 183,
	184, 184, 185, 186, 186, 186, 188, 187, 35, 35,
	28, 141, 141, 142, 142, 142, 142, 144, 144, 239,
	239, 239, 143, 143, 145, 145, 145, 506, 509, 507,
	507, 511, 511, 511, 512, 512, 512, 512, 513, 513,
	29, 131, 136, 516, 516, 516, 515, 515, 517, 517,
	518, 518, 287, 287, 288, 288, 139, 140, 140, 138,
	133, 147, 147, 147, 147, 147, 132, 137, 508, 514,
	514, 514, 364, 364, 361, 362, 362, 359, 358, 358,
	358, 520, 520, 519, 519, 519, 298, 298, 30, 354,
	354, 356, 357, 357, 357, 348, 348, 348, 348, 34,
	352, 352, 353, 353, 353, 353, 353, 349, 349, 351,
	351, 347, 347, 347, 347, 347, 33, 146, 146, 346,
	346, 343, 343, 341, 341, 342, 342, 340, 340, 340,
	344, 344, 41, 40, 40, 40, 345, 345, 32, 32,
	32, 116, 115, 115, 115, 115, 286, 286, 285, 285,
	117, 39, 217, 217, 412, 412, 412, 412, 412, 430,
	430, 430, 413, 413, 413, 414, 414, 414, 415, 415,
	415, 415, 415, 429, 429, 431, 431, 431, 386, 386,
	387, 387, 387, 390, 390, 404, 404, 405, 405, 403,
	403, 410, 410, 409, 409, 408, 408, 407, 407, 406,
	406, 406, 406, 401, 401, 400, 400, 388, 388, 388,
	388, 388, 389, 389, 389, 399, 399, 402, 402, 227,
	227, 261, 261, 225, 225, 226, 226, 260, 260, 223,
	223, 224, 224, 224, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 480,
	480, 481, 229, 229, 240, 240, 240, 240, 240, 240,
	228, 228, 230, 230, 206, 206, 204, 204, 197, 197,
	198, 198, 199, 199, 199, 203, 203, 202, 202, 202,
	202, 200, 200, 201, 201, 201, 201, 201, 201, 372,
	372, 477, 477, 478, 478, 473, 473, 473, 476, 476,
	476, 476, 476, 479, 479, 479, 475, 475, 207, 281,
	281, 281, 299, 299, 299, 299, 280, 280, 280, 222,
	222, 221, 221, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 371, 371, 314, 314, 315,
	315, 249, 248, 248, 248, 248, 248, 246, 247, 245,
	245, 245, 245, 245, 244, 244, 243, 243, 243, 350,
	350, 241, 241, 232, 232, 232, 231, 231, 231, 411,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 279, 279, 279, 324, 324,
	329, 329, 489, 489, 488, 208, 208, 208, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 218, 218, 218,
	395, 395, 395, 395, 396, 396, 396, 396, 397, 397,
	397, 393, 393, 394, 394, 333, 334, 334, 436, 436,
	391, 391, 392, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 443, 443, 443, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 500, 500, 500, 485, 485, 485, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 277, 277, 277, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 335, 335, 336, 336, 440, 440,
	440, 440, 440, 440, 441, 441, 442, 442, 442, 442,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 322,
	274, 274, 274, 337, 330, 330, 331, 331, 325, 325,
	325, 325, 325, 325, 325, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 326, 326, 328,
	328, 339, 339, 339, 338, 338, 338, 338, 338, 338,
	338, 220, 220, 220, 220, 319, 319, 319, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	210, 210, 210, 210, 214, 214, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	215, 215, 215, 215, 215, 213, 213, 213, 213, 213,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 104, 105,
	105, 212, 282, 282, 416, 416, 419, 419, 417, 417,
	418, 420, 420, 420, 421, 421, 421, 422, 422, 422,
	425, 425, 289, 289, 289, 295, 295, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 8,
	7, 1, 2, 2, 3, 3, 3, 0, 4, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 1, 0, 2,
	7, 8, 8, 0, 3, 3, 0, 2, 0, 3,
	0, 5, 1, 3, 0, 3, 3, 0, 2, 9,
	6, 0, 2, 2, 3, 3, 4, 4, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 1, 0, 1, 1, 1, 11,
	0, 2, 3, 2, 3, 1, 1, 1, 3, 3,
	4, 0, 2, 2, 2, 2, 6, 0, 4, 1,
	1, 0, 3, 0, 1, 1, 2, 4, 4, 4,
	0, 1, 7, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 8, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 3, 2, 4, 3, 0,
	2, 1, 0, 2, 3, 0, 2, 3, 0, 3,
	2, 4, 3, 0, 1, 0, 1, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 1,
	3, 3, 3, 0, 4, 1, 3, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 6, 5, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -529, -537, -2, -5, 592, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 585,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 591,
	438, 13, 487, -13, -14, -490, -15, 256, -302, -303,
	-304, -306, -538, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 231,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 363,
	369, 426, 584, 60, -149, -151, 595, 596, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 227, 15, 524, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 251, 250,
	37, 317, 318, 319, 367, 249, 228, 14, 30, 41,
	343, -150, 81, 229, -152, 12, 599, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	241, 586, -299, 359, 587, 589, 588, 84, 92, -292,
	-294, 363, 369, 584, 596, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 490, 571, 572, 573, 574, 518, 570, 341,
	342, 521, 268, 292, 394, 298, 305, 157, 176, 170,
	198, 190, 165, 272, 310, 273, 91, 160, 473, 105,
	450, 423, 163, 287, 289, 291, 519, 294, 293, 295,
	297, 274, 344, 186, 181, 286, 270, 179, 275, 39,
	276, 203, 277, 278, 526, 446, 340, 452, 302, 421,
	180, 447, 290, 449, 207, 211, 464, 465, 174, 175,
	454, 467, 202, 205, 206, 248, 42, 523, 260, 468,
	209, 201, 197, 476, 306, 304, 200, 173, 196, 271,
	64, 213, 212, 214, 417, 418, 419, 420, 279, 280,
	357, 463, 193, 182, 345, 166, 22, 471, 255, 451,
	370, 281, 299, 307, 208, 210, 262, 267, 525, 425,
	266, 303, 469, 178, 259, 288, 254, 472, 167, 372,
	282, 161, 296, 466, 475, 63, 385, 172, 164, 245,
	158, 264, 269, 283, 284, 285, 516, 309, 308, 300,
	194, 261, 199, 184, 171, 195, 159, 263, 474, 386,
	582, 343, 404, 192, 189, 265, 238, 470, 453, 162,
	408, 387, 187, 311, 578, 579, 580, 358, 339, 312,
	313, 185, 252, 444, 445, 316, 414, 332, 388, 424,
	395, 389, 220, 320, 456, 458, 204, 581, 321, 322,
	323, 448, 324, 325, 326, 327, 362, 55, 57, 93,
	95, 597, -377, -375, -299, 584, 369, 363, 343, 596,
	-191, -299, 598, -158, 38, -204, -299, -158, -76, -14,
	-13, -150, -151, -204, 235, -307, 23, 421, -84, 422,
	231, 81, -299, -9, -96, -8, -103, -74, -148, 426,
	-305, -299, 317, 317, -305, 235, -299, 266, 402, -427,
	241, -381, -354, 267, -380, -356, -383, -357, 31, 227,
	229, 228, 263, 15, 367, 237, 13, 12, 368, 249,
	24, 25, 27, 14, 369, 371, 28, 372, 375, 376,
	377, 41, 380, 381, 256, 84, 92, 87, 274, -190,
	-299, -331, -325, 112, 257, -327, -320, -321, -323, -469,
	-463, -318, 81, 139, 140, 147, 113, -322, -411, 35,
	115, 533, 570, 488, -275, -276, -277, -278, -279, -299,
	-464, -462, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -151, 84, -485, 542, -293, 563,
	571, 572, 573, 574, 562, 60, -434, -442, 234, -440,
	150, 188, 252, 184, 13, 145, 414, 185, 539, 559,
	490, 543, 566, 535, 536, 537, 530, 531, 532, 534,
	544, 546, 558, -443, 554, 564, 565, 552, 567, 568,
	569, 86, 85, 557, 556, 545, 540, 541, 547, 529,
	538, 548, 549, 555, 560, 561, 351, 105, 352, 353,
	480, 344, 354, 241, 421, 69, 355, 356, 357, 358,
	359, 487, 360, 70, 361, 350, 256, 404, 362, 187,
	204, 492, 491, 493, 484, 481, 479, 482, 483, 485,
	486, 550, 551, 553, -112, -113, 576, -167, -168, -268,
	11, 6, 7, 8, 9, -527, 423, 525, 87, 162,
	159, -368, 162, 111, 167, 166, -368, 320, 262, 364,
	-141, 238, 341, 404, 324, 93, 266, -348, -346, 519,
	-345, -429, 314, 310, 236, -142, 246, 245, 106, 480,
	234, 108, 378, 305, 55, 57, -501, -502, 224, 225,
	226, -492, 513, -491, -299, 353, 95, 26, 235, 364,
	262, 458, 456, 457, 459, 460, 461, 462, -58, -444,
	-426, 453, 452, -311, 445, 451, 443, 455, 446, 342,
	326, 325, 227, 593, 514, -289, 388, 424, 477, 478,
	365, 425, 464, 466, 447, 105, 191, 188, 238, 235,
	341, 480, 404, 93, 324, -501, 159, 464, 466, 266,
	402, 40, -374, 414, -373, -375, 465, 476, 85, 86,
	463, -289, 105, 444, 444, -168, -268, -167, -149, -151,
	-106, -490, 236, 341, 404, 266, 237, 235, 517, 238,
	480, 234, 317, 364, 262, 324, 93, -428, -498, 31,
	-435, 221, 222, 223, 32, 33, -1, 119, 599, -325,
	-325, -6, 602, -6, -325, -299, -299, 154, -210, -214,
	-211, -213, -212, -216, -215, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 252, 184, 185, 186, 187, 207, 170,
	190, 522, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -174, 258, -204, 153, -174, -168, -167, -168,
	-204, -280, -299, 423, 122, -84, -84, 422, -493, -494,
	-495, -497, 231, 422, 421, 153, 274, 16, -305, -305,
	79, -204, -356, 266, -381, -354, 35, 78, 154, 239,
	154, 78, 81, 365, 341, 404, 366, 480, 235, 378,
	238, 266, 379, 341, 404, 235, 238, 480, 266, 341,
	235, 238, 404, 266, 379, 443, 444, 238, 26, 370,
	373, 374, 444, -448, 476, 154, 111, 108, 109, 110,
	-325, 129, -338, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -151, -325,
	-331, 60, -323, -323, -323, -323, -411, -329, -325, 81,
	81, 81, 153, 100, 87, -325, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -441, 81,
	81, -335, -336, 81, 81, -318, -280, 81, 87, 87,
	81, 81, 81, 87, -336, -336, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -168, 154, 81,
	-114, 38, -170, 21, -152, -151, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 96, 597, 220, 469, 524,
	165, 166, 167, -189, -299, -191, -182, -299, 238, -142,
	108, -343, 241, -343, -343, -343, -343, -343, 237, -343,
	-204, 517, 516, 235, 235, 235, -343, 487, 122, 122,
	58, -503, 169, 154, -492, -173, 81, -310, 130, 134,
	-310, 23, 264, 264, 264, -310, 304, -539, -540, 16,
	132, -308, -540, -308, -308, -310, -541, 237, 454, 42,
	265, 264, -169, -170, -169, 448, 444, -398, 449, 450,
	-312, -540, -311, -310, -310, -311, -310, -310, -310, 235,
	238, 480, 324, 594, -539, -539, 30, 30, -427, -204,
	-427, 514, -290, -299, -427, -427, -427, -504, 240, -534,
	-533, 467, -536, 469, 159, -375, 159, -375, -356, 266,
	266, 154, 122, 23, -376, 122, 133, -375, -375, -376,
	-376, -228, 40, -298, 150, -299, 87, -228, 40, -531,
	-530, -204, -169, -152, -151, 82, 82, 82, -427, -427,
	-427, -427, -427, -429, -427, -427, -427, -427, -305, -182,
	-191, 241, -427, -427, -153, -154, 141, -325, -299, -153,
	-3, -120, -119, 116, 117, 119, 587, 359, 586, 590,
	584, -375, 40, -422, 386, 385, -416, -418, 81, -417,
	81, -417, -417, -417, -417, -417, 81, 81, -419, 81,
	-419, -419, -416, -420, 81, -420, -421, 81, -421, -420,
	-299, -330, -331, -299, 38, -437, 60, -148, 81, 30,
	81, -299, -438, 60, -148, 81, 30, -169, -114, -170,
	153, 96, 87, -84, 82, 154, -496, 102, 103, -499,
	202, 194, -299, -99, 87, -7, -8, -9, -10, -42,
	-74, -148, -465, -463, 81, 31, 413, 78, 16, -382,
	235, 480, 364, 262, 238, 341, -380, -363, -360, -358,
	-298, -356, -359, -358, -385, -280, 444, -115, 428, 427,
	316, -325, -325, -325, -325, -325, 101, 112, 339, 102,
	103, -320, -339, 31, 312, 313, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -328, -337,
	-411, 81, 132, 130, 134, 131, 114, -323, -323, -321,
	-321, 82, 154, -489, -488, 116, -325, -325, -325, -299,
	-486, -487, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 355, 350, 356, 354, 344, 362, 357,
	358, 187, 511, 512, 505, 506, 507, 508, 509, 510,
	-330, -330, -325, -486, -330, -274, 32, 31, -331, -331,
	-331, 82, -325, -500, 337, 336, 338, -171, -299, -330,
	82, 82, 82, 96, -331, -331, -330, -321, -330, -487,
	-274, -274, -274, 141, -331, -331, -274, -274, -274, -274,
	141, -274, -274, -274, -274, -274, -274, -274, -274, 82,
	82, 82, -169, -113, -446, -445, -325, 40, 577, -114,
	-325, -166, -165, -325, -528, 87, 87, 600, 470, 471,
	163, 166, 165, 34, 81, 81, 153, -343, 487, -204,
	112, -506, -299, -364, -361, -358, -299, -299, -354, -299,
	-299, 524, -343, 517, -343, -343, -343, -204, -239, 52,
	53, 54, -358, -143, 55, 56, -504, -491, 34, -172,
	-299, -264, 17, -323, -323, -358, 266, -539, -310, -310,
	-291, -290, -312, -307, -312, -312, -264, -540, -310, -310,
	-312, -308, -264, -299, 444, -264, -264, -398, -309, -299,
	-309, -343, -290, -291, -291, -204, -250, -251, 232, 348,
	349, 230, 228, 11, 229, -259, 305, -344, 488, -234,
	-235, 76, 41, -237, 390, 383, 268, 272, 91, 273,
	423, 274, 237, 276, 277, 278, 293, 295, 248, 279,
	280, 281, 414, 282, 158, 294, 283, 284, 285, 366,
	-229, 6, 327, 40, 50, 51, 437, 436, 527, 524,
	269, -506, -506, 30, 30, -364, -299, -299, -161, -156,
	-160, -157, -162, -267, -269, -159, 81, -204, -151, -299,
	154, 468, 470, 471, -534, -376, -534, -376, 31, 413,
	-379, 413, 31, -354, -373, 464, 466, -369, 87, 414,
	-359, -378, 78, 150, -445, -376, -376, -378, -378, 149,
	154, -532, 469, 470, 224, -114, -206, -204, -506, -363,
	-354, -299, -427, -206, -206, -299, -299, 81, 35, -299,
	-299, -263, 154, -262, 16, -300, -299, 34, 87, 153,
	-263, -121, -119, 118, -325, -6, 586, -325, -6, -6,
	-325, -6, -325, -425, 387, 96, 96, -282, 87, -282,
	96, 96, 96, 82, 87, -367, 78, -439, -332, -484,
	576, -176, 82, -171, -482, -483, -171, -175, -299, -439,
	-176, 82, -482, -114, -114, -299, 23, -84, -494, 153,
	154, -172, -382, -362, -359, -384, 141, -299, -370, 154,
	524, 603, 85, 239, -520, -519, 405, 82, 154, -449,
	240, 487, 87, 600, 421, 220, 101, 339, 102, 103,
	-411, -331, -328, -323, -323, -321, -321, -326, 253, -326,
	111, -325, -324, -488, 118, -325, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -325, 82, 82, 82,
	82, 16, 16, -325, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -331, -325, -331, 82, 82,
	82, -325, -325, -325, -331, 82, -325, -325, -325, -325,
	-325, -325, -325, -325, -392, 439, -392, -392, 154, 82,
	87, 154, 22, 154, -163, 36, 37, -286, -285, 87,
	164, 167, 167, 166, -190, -192, -193, -194, -195, -196,
	132, 155, 156, -183, -184, -185, -186, -210, -280, 189,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	205, 206, 203, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 171, 172, 173, 174, 175, 176, 179, 180,
	181, 182, 178, -299, -204, -173, 35, -509, 391, -521,
	154, 40, -519, 480, -139, 316, -347, 79, -146, 16,
	81, -204, -343, -204, -204, -204, -217, 34, 16, -155,
	-205, -299, 81, 82, 154, -325, -355, 79, -299, -291,
	-264, -264, -204, -299, -264, -264, -310, -312, -312, -308,
	153, -290, -173, 154, -203, -296, -200, -202, 243, -315,
	-201, 246, -478, 244, 242, 106, 247, 301, 107, 237,
	-296, -296, 243, -238, 239, 34, -296, -253, 237, 301,
	244, 20, -252, 237, 107, -299, 243, 247, 242, -295,
	122, -289, 149, 239, 42, 366, -295, 528, -295, -295,
	-295, -295, -295, -295, -295, 275, 275, -295, -295, -295,
	-295, -295, -295, -295, -295, -295, -295, -295, 159, -295,
	-295, -295, -295, -295, -295, 81, 270, 271, -510, 391,
	30, 347, 347, -521, 30, -147, 341, 30, -270, -271,
	-272, -273, 67, 71, 73, 68, 69, 70, 74, 30,
	154, -297, -301, 34, -299, 87, -297, -151, -156, -161,
	-297, 81, -533, -535, 472, 469, 475, -378, -378, 239,
	81, 122, -378, -378, 40, -298, -530, 476, 470, -181,
	23, 154, 78, -206, -183, -191, -264, -154, -156, -299,
	87, -299, 141, -264, 119, -6, 117, -125, -124, -123,
	120, 584, 590, 119, 119, 119, 82, 82, 82, 154,
	82, 82, 82, 154, 82, 154, -452, 449, 39, 154,
	81, 82, 154, 60, 154, 122, 82, 154, 82, 60,
	-181, 153, 423, -299, -463, 82, -384, 154, 239, 153,
	153, -360, 369, -298, -362, 20, 524, -280, 38, -286,
	122, 600, 82, -326, -326, 111, -323, -320, 82, 119,
	-325, 117, -208, -210, 385, 386, -208, -209, -215, 150,
	188, 252, 187, 186, 184, 385, 386, -228, -299, -325,
	-325, 82, -325, -325, 16, -299, -228, -321, -325, -168,
	82, 82, -391, -392, -391, -391, 82, 82, 82, 82,
	-391, 82, 82, 82, 82, 82, 82, 82, 82, 81,
	-445, -452, -325, -325, -165, -164, 43, 601, 154, 122,
	167, 377, 82, 154, -280, 82, 154, -210, -173, 34,
	-512, 451, 393, 403, -295, -317, -316, 343, 41, -432,
	414, 399, 400, -361, 266, -299, -518, 94, 122, 78,
	331, 332, 333, 334, -341, -342, -340, -344, -506, -227,
	-261, -299, 87, 81, -225, 524, -204, 81, 81, 81,
	-412, 321, -210, -204, -155, -299, 16, 154, -505, 153,
	-1, -299, -354, -310, -264, -540, -264, -310, -310, -312,
	-299, 34, -251, -207, -280, -201, -477, -478, -343, -299,
	107, -477, 107, 81, -207, -280, -280, -254, -309, -280,
	-299, -299, -299, -257, -256, -280, -299, -299, -299, 107,
	107, -233, 40, 47, 48, 49, -295, -295, 191, -236,
	40, 413, 415, 416, 96, 96, 96, 96, 87, 87,
	87, -295, -295, 96, 87, -301, 87, -479, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -240, 40, 286,
	290, 287, 288, 289, 87, 96, 40, 96, 40, 96,
	40, -299, 81, -480, -481, 87, -512, -295, 347, -375,
	122, -317, -517, 316, -140, 91, 31, -177, 232, 229,
	-506, -366, -365, -280, -160, -160, -160, -160, 67, 67,
	67, 72, 67, 72, 67, -272, -366, -162, -173, -301,
	82, -526, -525, -524, -522, 75, 240, 76, -330, 469,
	473, 474, -362, -313, 87, -369, 14, -204, -204, -431,
	296, 297, 82, -266, 18, 153, -266, 115, -6, -121,
	-123, -325, -6, -325, 586, 359, 587, 87, 96, 96,
	-460, 434, 429, 431, 107, -332, -447, -446, 60, -148,
	-171, -439, -483, -445, -299, 60, -148, -439, -299, 96,
	16, -359, -354, 141, 141, -299, 370, -370, 87, 392,
	87, 235, 601, 87, -286, -320, -325, 82, -218, 175,
	174, -218, 82, 82, -417, -417, -416, -419, -416, -218,
	-218, 82, 82, 23, 82, 82, 82, -325, 82, 82,
	154, -436, 489, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -334, -333, 258,
	-460, 44, 45, -285, 87, 87, 87, -194, -210, 233,
	-185, 40, 34, -148, -513, 91, -507, 87, -299, -514,
	91, 394, 152, 345, 40, 395, 396, 411, 340, 96,
	96, 401, -508, -299, -147, -516, 51, 122, 87, -204,
	-340, -289, 149, 277, 324, 82, 154, -295, -295, -197,
	-198, -199, -207, -200, -202, 34, 81, 81, -197, -197,
	-197, -413, 323, 20, 96, 140, -174, 79, 153, -156,
	-205, -299, 141, 82, -264, -299, -264, -264, -310, -148,
	-255, 44, 46, -210, -475, -299, -473, -475, -299, -473,
	-473, -343, -325, -255, -207, 239, 30, 229, -258, 329,
	330, -371, 302, 112, -371, 154, -163, -299, -228, -228,
	30, 87, 87, -206, 82, 154, 122, -513, -507, 122,
	-376, 87, -514, -518, 122, 87, 154, -177, -177, -264,
	154, 122, -179, -178, 78, 79, -180, 78, -178, 67,
	67, -264, -524, -523, 23, -478, -478, -478, 82, 82,
	-265, 19, 20, 141, -265, 119, 117, 119, 119, -299,
	82, 82, -423, 578, -456, -458, 429, 20, 20, 14,
	82, -439, -439, -354, -370, 414, -204, 154, 601, -325,
	82, -325, 82, 87, -168, 20, -423, -187, -210, -318,
	-148, -144, 524, 87, -511, 405, 87, 87, 96, 40,
	96, 152, 397, -433, -140, -515, 91, 122, 600, 81,
	-295, -295, -295, -299, -261, -318, -318, 82, 154, -148,
	-226, -260, -299, 87, -197, 82, 82, 82, -414, 257,
	96, 140, 96, 140, 96, -297, -156, -299, -264, -505,
	153, -264, -264, -280, -222, -221, -219, 101, 112, 40,
	383, -220, 91, 149, 291, 294, 293, 269, 292, -249,
	-314, 78, 389, 329, 330, -344, 578, 518, 242, 106,
	107, 371, -315, 81, 81, 79, 311, 81, 81, -475,
	82, -255, -280, 40, -258, 40, 302, -256, 149, -228,
	82, -481, 87, -511, 87, -378, -516, 87, -506, -168,
	-365, -445, -325, 81, -325, 81, 67, 11, 18, -325,
	-331, 241, -6, 587, 359, -242, 579, 87, 20, 87,
	-454, 87, -366, -117, -450, -398, 274, 82, 82, -391,
	-394, -393, -397, 435, 303, 442, -331, -242, 523, -144,
	-145, 59, 476, 20, 524, 344, 40, 96, 40, 398,
	87, 102, 103, -287, -288, 87, -349, -351, -280, 81,
	-228, -230, -298, 150, 87, -225, -199, 82, 154, -295,
	-295, 82, -223, -224, -259, -344, -116, -115, -223, -415,
	158, 96, 140, 96, 96, -264, -264, -219, 101, -321,
	87, -230, -231, 40, 290, 286, 122, 122, -232, 40,
	270, 271, -241, 81, 301, 14, 191, 81, 107, 107,
	-204, -349, -349, -476, 331, 332, 333, 335, 334, -476,
	-349, -349, 81, -372, -371, -321, -295, 149, -515, -169,
	-172, -474, -299, 242, 20, 20, -299, -299, -283, 580,
	96, 87, 431, -424, 581, -459, 434, -453, -451, 429,
	430, 431, 432, 122, 82, -396, 114, 397, 401, -319,
	-322, 96, 99, 183, 152, -283, -188, -299, 301, 87,
	392, 87, 344, 601, 154, 122, 82, 154, -416, -325,
	-260, -318, -318, -225, -386, 258, 154, -259, -289, -117,
	-386, -430, 166, 322, 524, 96, 140, 96, -168, 87,
	87, 96, 81, -440, 30, 87, -350, 81, 82, 82,
	82, 82, -349, -228, -295, 82, 82, 154, 81, 20,
	87, -461, 240, -457, -458, 433, -451, 20, 431, 20,
	20, 87, -395, -396, 401, -319, -322, 576, 440, 440,
	440, 34, 370, 414, -288, 87, -352, -351, -163, 82,
	-387, 310, 20, -259, -295, -387, 322, 96, 140, 96,
	-169, 82, -325, -335, -295, 82, -244, -243, 520, -349,
	-352, 79, -352, 79, -352, 79, -352, 79, 82, -228,
	-299, 242, -284, -299, -454, -468, 81, 96, -456, -455,
	-457, 20, -454, 20, -454, -454, 111, 441, 441, 441,
	87, -353, 248, 91, 524, 329, 330, -163, 20, -388,
	303, 304, -389, -402, 306, -228, 96, 82, -299, -248,
	-246, -247, 78, 447, 299, 300, 82, -476, -476, -476,
	-476, -249, 82, 154, -472, 30, 82, -467, -466, -281,
	-462, -299, 434, 435, 87, -454, -395, -295, 87, 328,
	-280, 81, -400, 307, 81, -398, 81, -398, 107, 332,
	-371, -247, 78, -246, 78, 15, 14, -352, -352, -352,
	-352, -299, -471, -470, -469, 82, 154, 153, 96, -299,
	-385, -390, 308, 96, -321, 81, -321, 81, -399, 305,
	81, -245, 296, 297, 30, 166, -245, 154, 122, -466,
	-299, 82, -404, 81, 20, 82, -385, 82, -385, 81,
	122, -321, 101, 40, 298, -470, 40, -325, 153, -405,
	-403, 258, -389, 82, 82, 82, -385, 96, 82, -299,
	82, 154, -299, -401, 309, 82, -403, -406, 60, 96,
	-410, -407, 81, -259, 260, 132, -410, -259, -409, -408,
	308, 261, 81, 82, 154, -299, 257, 81, -331, -408,
	-407, -331, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 823, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 597, 598, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 678, -2, 56, 0, 277, 0,
	268, 268, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 610, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 610, 0, 0,
	0, 698, 0, 0, 715, 737, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1192, 1193, 1194,
	1195, -2, 1687, 1665, 1832, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1833, 0, 261, 259, 1665, 1687, 1749, 1782, 1832,
	0, 843, 0, 656, 0, 661, 1146, 656, 289, 599,
	600, 698, 698, 563, 0, 325, 0, 1678, 329, 0,
	0, 0, 560, 319, 320, 321, 322, 323, 324, 0,
	0, 822, 0, 0, 315, 0, 283, 1740, 0, 0,
	0, 0, 0, 0, 153, 949, 155, 951, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 952, 953, 954, -2, 84,
	841, 1598, 1486, 0, 1493, 1494, 1505, 1516, 1272, 1273,
	1274, 1275, 0, 0, 0, 0, 0, 1282, 1283, 0,
	1300, 1848, 1887, 0, 1290, 1291, 1292, 1293, 1294, 93,
	105, 106, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 0,
	1546, 1547, 1548, 1459, 1259, 1192, 0, 1857, 0, 1877,
	1882, 1883, 1884, 1885, 1876, 0, 0, 1444, 0, 1434,
	0, 0, -2, -2, 0, 0, 1807, -2, 1854, 1873,
	1881, 1858, 1880, 1850, 1851, 1852, 1845, 1846, 1847, 1849,
	1859, 1861, 1872, 0, 1868, 1878, 1879, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1450, -2, 1452, 1453,
	1455, -2, 1457, 1458, -2, 1461, 1462, 1463, -2, -2,
	1466, 1467, 1468, 1469, 1470, 1471, 1474, -2, -2, -2,
	-2, 1446, 1447, 1448, 1449, 1438, 1439, 1440, 1441, 1442,
	1443, -2, -2, -2, 698, 773, 0, -2, 0, 0,
	0, 720, 723, 726, 729, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 981, 981, 981, 981, 981, 981, 0, 981, 0,
	0, 0, 0, 0, 981, 871, 956, 957, 958, 979,
	980, 0, 1034, 0, 0, 0, 615, 611, 612, 613,
	614, 686, 0, 688, 691, 540, 540, 487, 0, 0,
	0, 540, 0, 501, 493, 0, 0, 0, 540, 0,
	0, 693, 693, 0, 543, 550, 540, 540, -2, 540,
	540, 540, 0, 0, 507, 508, 509, 493, 493, 512,
	513, 514, 525, 526, 551, 1622, 0, 0, 433, 0,
	433, 0, 433, 433, 433, 617, 1777, 1685, 1754, 1740,
	0, 0, 234, 1807, 239, 0, 1686, 1703, 0, 0,
	1721, 0, -2, 0, 305, 693, 0, 699, 0, 698,
	0, 0, 433, 433, 433, 433, 433, 1033, 433, 433,
	433, 433, 0, 0, 0, 433, 433, 0, 0, 738,
	739, 734, 735, 736, 740, 741, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1599, 1617,
	1551, 1552, 1553, 1604, 1555, 1608, 1608, 1608, 1608, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1608, 1608,
	0, 0, 1597, 1575, 1606, 1606, 1606, 1604, 1601, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1611, 1611, 1614, 1614, 1611, 0, 1484,
	0, 0, 0, 0, 660, 0, 0, 693, -2, 0,
	564, 326, 1196, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1492, 0, 0, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1486,
	0, 0, 1278, 1279, 1280, 1281, 1284, 0, 1301, 0,
	0, 0, 0, 1545, 1549, 0, 1484, 1484, 0, 1484,
	1480, 0, 0, 0, 0, 0, 0, 1484, 1420, 0,
	0, 1422, 1435, 0, 0, 1424, 1425, 0, 1428, 1429,
	1484, 0, 1484, 1433, 1416, 1417, 0, 1480, 1480, 1480,
	0, 0, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 0, 0, 0, 693, 0, 0,
	681, 0, 662, 0, 717, 719, 0, 721, 722, 724,
	725, 727, 728, 730, 731, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 840, 0, 0, 856, 981, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 0, 981, 981, 981, 0, -2, 0, 0,
	0, 617, 616, 0, 687, 0, 0, 746, 0, 0,
	486, 0, 493, 540, 540, 499, 500, 495, 494, 546,
	547, 543, 0, 543, 543, 746, 0, 519, 520, 521,
	540, 540, 527, 694, 528, 529, 543, 0, 548, 549,
	746, 0, 0, 746, 746, 0, 537, 538, 539, 0,
	0, 981, 0, 556, 495, 495, 1623, 1624, 0, 990,
	0, 0, 0, 559, 0, 0, 0, 0, 618, 214,
	217, 0, 220, 0, 1777, 0, 1777, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1140, 1141, 946, 947, 252, 253, 297,
	298, 0, 662, 716, 718, 712, 713, 714, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 593, 0,
	595, 0, 0, 0, 754, 748, 750, 817, 93, 754,
	8, 80, 77, 0, 19, 0, 0, 19, 19, 0,
	19, 262, 0, 1620, 1618, 1619, 1554, 1605, 0, 1580,
	0, 1581, 1582, 1583, 1593, 1594, 0, 0, 1576, 0,
	1577, 1578, 1579, 1570, 0, 1571, 1572, 0, 1573, 1574,
	260, 0, 1485, 844, 0, 635, 648, 630, 0, 637,
	0, 1147, 619, 648, 621, 0, 637, 662, 684, 662,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 561, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 582, 584,
	938, 950, 0, 941, 0, 157, 197, 130, 0, 0,
	0, 1487, 1488, 1489, 1490, 1491, 1495, 0, 1497, 1499,
	1501, 1503, 0, 1521, -2, -2, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1506, 1519,
	1520, 0, 0, 0, 0, 0, 0, 1517, 1517, 1512,
	0, 1276, 0, 1298, 1302, 0, 0, 0, 0, 94,
	1479, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	0, 0, 1486, 0, 0, 0, 1481, 1482, 0, 0,
	0, 1375, 0, 0, 1381, 1382, 1383, 0, 643, 0,
	1445, 1421, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 774, 0, 652, 654, 655, 0, 682,
	695, 700, 701, 704, 55, 60, 53, 1008, 280, 281,
	0, 0, 275, 0, -2, 858, 0, 0, 873, 691,
	0, 0, 887, 431, 932, 0, 0, 0, 948, 971,
	977, 0, 0, 981, 0, 0, 0, 1012, 874, 879,
	880, 881, 875, 876, 882, 883, 0, 689, 0, 0,
	786, 485, 0, 541, 542, 490, 1740, 495, 746, 746,
	502, 496, 503, 545, 504, 505, 506, 0, 746, 746,
	540, 543, 530, 544, 543, 533, 534, 0, 552, 557,
	553, 0, 555, 510, 511, 691, 362, 363, 404, 404,
	404, 387, 404, 0, 0, 375, 1625, 0, 0, 0,
	0, 384, 1625, 0, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 0, 0, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 1625, 0, 1625, 1625, 1625, 1625, 1625,
	1126, 1625, 0, 991, 394, 395, 396, 397, 402, 403,
	0, 428, 0, 0, 0, 431, 0, 921, 759, 0,
	760, 761, 757, 788, 812, 812, 0, 812, 792, 1146,
	0, 0, 225, 226, 215, 0, 216, 0, 228, 229,
	0, 231, 232, 233, 240, 1685, 1754, 235, 237, 0,
	0, 241, 254, 255, 256, 0, 0, 246, 247, 0,
	0, 300, 301, 303, 0, 710, 579, 1144, 580, 581,
	585, 0, 0, 588, 590, 591, 592, 858, 0, 926,
	927, 746, 0, 755, 0, 751, 818, 0, 820, 0,
	746, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1600, 1550, 1621, 0, 0, 0, 1602, 0,
	0, 0, 0, 61, 664, 626, 0, 629, 645, 0,
	649, 0, 0, 641, 634, 638, 0, 0, 658, 620,
	0, 0, 625, 710, 685, 1197, 0, 333, 347, 0,
	0, 0, 0, 141, 935, 0, 142, 146, 136, 0,
	0, 0, 940, 0, 937, 942, 0, 156, 0, 0,
	131, 132, 1002, 1008, 0, 0, 1496, 1498, 1500, 1502,
	1504, 0, 1507, 1517, 1517, 1513, 0, 1508, 0, 1510,
	0, 1487, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 1365, 1366, 0, 0, 1370, 0, 1372, 1373, 1374,
	1376, 0, 0, 0, 1380, 0, 1419, 1437, 1423, 1426,
	0, 1430, 0, 1432, 0, 698, 0, 0, 1340, 1340,
	1340, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 1296, 1297, 0, 775,
	664, 0, 0, 0, 707, 705, 706, 0, 1006, 0,
	282, 270, 272, 0, 0, 0, 846, 847, 849, 0,
	852, 853, 854, 0, 859, 860, 862, 863, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1670, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 857, 691, 0, 982, 894, 1625, 435,
	0, 0, 934, 0, 910, 0, 0, 0, -2, 0,
	0, 1083, 0, 0, 0, 0, 1014, 0, 0, 0,
	604, 608, 23, 692, 0, 747, 488, 0, 489, 540,
	497, 498, 746, 1146, 522, 523, 746, 540, 540, 543,
	0, 554, 0, 990, 365, 0, 1155, 1156, 405, 0,
	1162, 1171, 981, 1229, 0, 1171, 0, 0, 1173, 1174,
	0, 0, 0, 0, 388, 389, 0, 374, 0, 0,
	0, 0, 373, 0, 0, 415, 0, 0, 0, 0,
	1626, 1625, 1625, 0, 382, 383, 0, 386, 0, 0,
	0, 0, 0, 0, 0, 1625, 1625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 0, 0, 0, 1132, 1133, 894, 1625,
	0, 0, 0, 435, 908, 917, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 778, 0, 0, 0, 0,
	0, 691, 813, 0, 815, 816, 790, -2, 0, 759,
	795, 1484, 218, 219, 0, 0, 224, 242, 244, 0,
	0, 0, 243, 245, 249, 250, 299, 302, 304, 680,
	0, 0, 0, 1035, 0, 596, 744, 749, 756, 819,
	821, 94, 752, 744, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1610, 1609, 1595, 0,
	1596, 1607, 1612, 0, 1615, 0, 668, 0, 0, 648,
	650, 0, 0, 648, 0, 0, 657, 0, 0, 648,
	683, 0, 0, 562, 104, 353, 0, 0, 0, 0,
	0, 583, 0, 939, 138, 0, 0, 158, 0, 0,
	0, 1008, 1483, 1509, 1511, 0, 1518, 1514, 1277, 1285,
	1299, 0, 0, 1305, 1317, 1317, 0, 0, 1308, 1608,
	1608, 1311, 1604, 1606, 1604, 1317, 1317, 0, 95, 0,
	0, 1371, 0, 0, 0, 644, 0, 0, 0, 1338,
	1340, 1340, 1346, 1341, 1347, 1348, 1340, 1340, 1340, 1340,
	1353, 1340, 1340, 1340, 1340, 1340, 1340, 1340, 1340, 1336,
	653, 668, 696, 697, 702, 703, 0, 54, 1008, 0,
	274, 0, 0, 851, 0, 0, 0, 864, 0, 0,
	898, 895, 896, 897, 0, 929, 436, 437, 438, 439,
	0, 0, 0, 933, 0, 921, 903, 0, 0, 0,
	972, 973, 974, 975, 976, -2, 985, 0, 0, 0,
	1079, 1625, 1625, 1148, 0, 0, 0, 1148, 1148, 1148,
	1022, 0, 1013, 656, 0, -2, 0, 0, 606, 0,
	0, 787, 491, 746, 515, 0, 531, 746, 746, 540,
	558, 0, 364, 406, 0, 1161, 1186, 1172, 1186, 1230,
	1186, 1186, 981, 0, 406, 0, 0, 376, 412, 0,
	0, 0, 0, 372, 409, 704, 413, 414, 416, 0,
	418, 378, 390, 391, 392, 393, 0, 0, 0, 385,
	398, 399, 400, 401, 1094, 1095, 1096, 1099, 1100, 1101,
	1102, 0, 0, 1105, 1106, 1107, 1108, 1109, 1183, 1184,
	1185, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1134, 1135,
	1136, 1137, 1138, 1139, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 0, 0, 1129, 0, 898, 0, 0, 0,
	0, 929, 910, 0, 920, 0, 922, 923, 0, 0,
	627, 746, 292, 0, 782, 776, 0, 765, 780, 781,
	768, 0, 770, 0, 766, 767, 746, 758, 789, 814,
	791, 794, 796, 797, 803, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 455, 236, 711, 1145, 586, 587,
	1036, 1037, 594, 742, 0, 0, 742, 76, 79, 0,
	74, 0, 0, 0, 0, 66, 64, 1603, 0, 0,
	670, 118, 0, 0, 0, 646, 0, 651, 648, 633,
	642, 632, 639, 640, 659, 648, 624, 623, 1198, 328,
	0, 936, 138, 143, 144, 145, 139, 137, 943, 0,
	945, 0, 1004, 0, 0, 1515, 1304, 1286, 1306, 1318,
	1319, 1307, 1287, 1288, 1309, 1310, 1312, 1313, 1314, 1315,
	1316, 1289, 1367, 0, 1369, 1377, 1378, 0, 1427, 1431,
	0, 0, 0, 1344, 1345, 1349, 1350, 1351, 1352, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 698, 1337, 0,
	670, 708, 709, 1007, 1009, 839, 842, 848, 850, 0,
	861, 0, 0, 877, 870, 0, 0, 889, 890, 900,
	0, 0, 0, 441, 442, 0, 0, 0, 454, 450,
	451, 452, 432, 928, 917, 906, 0, 0, 916, 0,
	986, 1625, 1625, 1625, 0, 992, 0, 0, 0, 0,
	1149, 1150, 1152, 1153, 1154, 0, 0, 1148, 0, 0,
	0, 1025, 0, 0, 1016, 0, 812, 0, 0, 746,
	605, 608, 609, 690, 492, 746, 535, 532, 746, 361,
	377, 407, 0, -2, 0, 1187, 0, 1175, 1187, 0,
	0, 1186, 0, 366, 406, 0, 0, 0, 419, 422,
	423, 420, 1225, 0, 421, 0, 411, 417, 1097, 1098,
	0, 1103, 1104, 0, 1128, 0, 0, 424, 0, 0,
	0, 425, 430, 903, 0, 918, 0, 924, 925, 698,
	0, 0, 762, 783, 0, 0, 763, 0, 764, 769,
	771, 291, 798, 0, 0, 800, 801, 802, 793, 238,
	732, 0, 0, 753, 733, 0, 19, 0, 0, 69,
	1613, 1616, 672, 0, 669, 119, 0, 0, 0, 0,
	647, 631, 622, 140, 135, 944, 121, 0, 1005, 0,
	1379, 0, 1340, 1339, 1333, 0, 672, 0, 867, 865,
	877, 869, 884, 899, 888, 0, 930, 931, 0, 443,
	444, 0, 447, 453, 901, 902, 0, 0, 914, 0,
	0, 0, 0, 978, 1080, 1081, 1082, 1083, 0, 995,
	0, 1085, 1625, 1625, 0, -2, 0, -2, 1028, 0,
	1023, 0, 1015, 0, 1018, 746, 746, -2, 602, 607,
	0, 516, 536, 408, 1188, -2, 1201, 1203, 0, 991,
	1206, 1207, 0, 0, 0, 0, 0, 0, 1251, 1215,
	0, 0, 1219, 1220, 1221, 0, 0, 1224, 0, 1533,
	1534, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	1169, 367, 368, 0, 370, 371, 1226, 410, 1625, 380,
	1127, 1130, 1131, 429, 426, 427, 906, 909, 628, 693,
	293, 294, 784, 0, 777, 807, 804, 0, 0, 743,
	745, 70, 75, 0, 0, 674, 0, 671, 0, 665,
	667, 129, 636, 91, 112, 0, 0, 1368, 1418, 1343,
	0, 1334, 0, 1328, 1329, 1330, 1335, 674, 0, 868,
	0, 885, 886, 0, 0, 440, 445, 0, 448, 449,
	907, 904, 905, 0, 912, 0, 0, 967, 1604, 0,
	987, 988, 1142, 1143, 989, 993, 1151, 1084, 0, 0,
	0, 1083, 1038, -2, 1091, 0, 999, 121, 1038, 1019,
	0, 1026, 0, 1024, 1017, 698, 603, 1202, 1204, 1205,
	1208, 1209, 1210, 1256, 1257, 1258, 0, 0, 1213, 1253,
	1254, 1255, 1214, 0, 0, 0, 0, 0, 1531, 1532,
	1249, 0, 0, 1176, 1178, 1179, 1180, 1181, 1182, 1177,
	0, 0, 0, 1168, 1170, 369, 0, 1625, 919, 290,
	0, 0, 808, 810, 805, 806, 65, 67, 82, 0,
	673, 120, 0, 83, 0, 109, 0, 122, 123, 0,
	0, 0, 0, 0, 1342, 1331, 0, 0, 0, 0,
	0, 1535, 1536, 1537, 0, 663, 0, 866, 0, 891,
	0, 893, 446, 911, 914, 0, 960, 0, 704, 0,
	1086, 1087, 1088, 994, 1040, 0, 990, 1093, 1625, 1001,
	1040, 1011, 0, 1021, 0, 1030, 0, 1027, 693, 1211,
	1212, 0, 0, 1434, 1625, 0, 1244, 0, 960, 960,
	960, 960, 0, 379, 0, 785, 799, 0, 0, 0,
	92, 96, 0, 118, 115, 0, 124, 0, 0, 0,
	0, 1003, 0, 1320, 0, 0, 0, 1324, 1325, 1326,
	1327, 0, 878, 892, 913, 915, 959, 968, 969, 704,
	998, 0, 1077, 1092, 0, 1000, 1020, 1029, 0, 1032,
	601, 1252, 0, 1218, 0, 1223, 1232, 1245, 0, 0,
	1157, 0, 1159, 0, 1163, 0, 1165, 0, 0, 381,
	809, 811, 0, 676, 666, 85, 0, 0, 113, 114,
	116, 0, 125, 0, 127, 128, 0, 1321, 1322, 1323,
	855, 961, 1625, 0, 0, 965, 966, 970, 0, 1065,
	0, 0, 1071, 0, 1078, 1097, 1031, 1216, 1222, 1231,
	1233, 1234, 0, 1246, 1247, 1248, 1250, 960, 960, 960,
	960, 1167, 675, 0, 1010, 0, 97, 0, 99, 101,
	102, 1189, 110, 111, 117, 126, 1332, 0, 963, 0,
	1041, 0, 1043, 0, 0, 0, 0, 0, 1075, 0,
	1217, 1235, 0, 1236, 0, 0, 0, 1158, 1160, 1164,
	1166, 677, 86, 87, 0, 98, 0, 0, 962, 964,
	0, 1045, 0, 1066, 0, 0, 0, 0, 0, 0,
	0, 1237, 1239, 1240, 0, 0, 1238, 0, 0, 100,
	1190, 1042, 1039, 0, 1077, 1067, 0, 1069, 0, 0,
	0, 0, 1241, 1243, 1242, 88, 89, 90, 0, 0,
	1047, 0, 1063, 1068, 1070, 1072, 0, 1076, 1074, 1191,
	1046, 0, 1059, 1044, 0, 1073, 1048, -2, 0, 1064,
	1049, -2, 0, 1057, 0, 0, 1050, 1058, 0, 1053,
	0, 0, 0, 1052, 0, -2, 1060, 0, 0, 1054,
	-2, 0, 1062, 1061,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 602, 599,
	123, 122, 124, 3, 603, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 600, 135, 601, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:751
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:764
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:772
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:778
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:782
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:801
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:807
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:848
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:856
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:874
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:921
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:930
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:940
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1022
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1047
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1057
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1061
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1080
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1107
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1131
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1137
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1141
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1147
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1180
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1184
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1207
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1241
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1257
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1304
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1332
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1344
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1360
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1384
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1388
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1400
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1435
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1458
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1494
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1505
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1518
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1594
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1598
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1625
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1647
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1651
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1657
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1661
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1894
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1915
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1933
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1937
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1966
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2027
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2033
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2069
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2108
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2176
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2180
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2200
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2204
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2210
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2214
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2236
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2240
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2291
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2339
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2357
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2372
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2378
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2394
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2398
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2440
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2576
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2580
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2586
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2592
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2597
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2598
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2604
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2631
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2640
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2644
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2650
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2666
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2676
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2685
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2695
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2714
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2757
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2786
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2817
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2821
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2826
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2838
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2847
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2851
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2938
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2942
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2990
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2996
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3007
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3022
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3040
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3056
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3122
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3127
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3202
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3213
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3217
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3242
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3268
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3346
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3348
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3357
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3402
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3408
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3497
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3501
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3516
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3539
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3548
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3558
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3564
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3574
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3580
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3584
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3594
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3598
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3622
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3640
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3649
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3653
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3668
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3734
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3752
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3780
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3793
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3804
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3808
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3814
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3819
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3826
		{
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3828
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3831
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3840
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3844
		{
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3849
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3858
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3871
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3879
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3913
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3923
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3927
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3933
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3946
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3954
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3987
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3991
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4000
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4023
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4029
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4033
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4039
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4049
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4054
		{
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4069
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4076
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4085
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4091
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4095
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4105
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4114
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4127
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4159
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4178
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4184
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4191
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4195
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4208
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4212
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4217
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4221
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4233
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4246
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4258
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4288
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4292
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4310
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4319
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4348
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4354
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4358
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4373
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4382
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4399
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4415
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4429
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4500
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4599
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4603
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4642
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4651
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4657
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4661
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4667
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4671
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4680
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4685
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4707
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4715
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4725
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4740
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4768
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4772
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4782
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4786
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4790
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4794
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4800
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4810
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4820
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4836
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4842
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4846
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4850
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4870
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4880
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4886
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4900
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4913
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4919
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4925
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4960
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4966
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4993
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5010
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5014
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5018
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5022
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5027
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5031
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5041
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5047
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5051
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5055
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5063
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5069
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5115
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5121
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5127
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5137
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5142
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5148
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5171
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5176
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5180
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5195
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5207
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5212
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5229
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5241
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5245
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5255
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5267
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5276
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5287
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5303
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = "OR REPLACE"
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5313
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5317
		{
			yyVAL.str = "DEFINER = "
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5321
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5326
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5344
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5352
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5358
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5368
		{
			yyVAL.str = yyDollar[1].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5385
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5454
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5466
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5542
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5546
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5551
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5555
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5562
		{
			yyVAL.str = yyDollar[3].str
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5567
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5571
		{
			yyVAL.str = yyDollar[2].str
		}
	case 919:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5591
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5617
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5623
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5632
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5641
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5650
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5775
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5779
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5795
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5799
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5805
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5815
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5832
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5851
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5860
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5867
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5876
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5880
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5886
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5917
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5931
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5954
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5976
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5980
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5998
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6002
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6008
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6013
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6018
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6078
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6084
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6088
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6094
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6098
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6117
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6181
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6203
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6210
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6220
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6230
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6249
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6253
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6258
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6262
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6269
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6280
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6293
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6307
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6315
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6322
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6329
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6336
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6359
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6366
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6377
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6384
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6395
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6402
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6409
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6416
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6449
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6463
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6470
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6481
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6494
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6500
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6504
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6510
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6519
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6533
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6539
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6543
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6549
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6556
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6565
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6569
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6578
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6587
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6592
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6596
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6606
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6610
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6629
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6637
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6645
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6656
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6675
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6685
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6689
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6694
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6698
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6704
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6708
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6714
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6718
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6727
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6733
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6737
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6743
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6747
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6766
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6776
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6780
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6784
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6788
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6792
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6796
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6800
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6841
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6845
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6849
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6919
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6923
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6935
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6939
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6945
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6949
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6953
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6983
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6992
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6997
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7010
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7014
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7024
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7028
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7034
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7038
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7044
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7053
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7062
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7085
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7110
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7124
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7139
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7148
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7157
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7176
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7190
		{
			yyVAL.str = ""
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7194
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7204
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7210
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7216
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7235
		{
			yyVAL.str = ""
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7239
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7245
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7265
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7273
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7277
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7283
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7291
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7300
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7306
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7320
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7324
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7328
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7332
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7336
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7357
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7365
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7369
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7373
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7377
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7390
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7394
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7420
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7425
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7429
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7435
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7439
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7445
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7457
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7464
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7471
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7478
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7485
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7494
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7500
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7510
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7514
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7518
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7522
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7534
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7538
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7542
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7551
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7556
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7560
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7576
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7602
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7606
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7610
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7630
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7676
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7685
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7693
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7697
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7701
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7714
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7718
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7726
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7730
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7736
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7774
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7780
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7784
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7790
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7799
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7811
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7828
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7927
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7959
		{
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7966
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7970
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7974
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7980
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7984
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7988
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7992
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7998
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8002
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8006
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8012
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8020
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8034
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8041
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8050
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8055
		{
			yyVAL.str = ","
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8059
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8071
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8097
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8128
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8138
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8176
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8186
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8196
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8216
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8226
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8236
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8246
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8276
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8295
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8319
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8327
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8354
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8362
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8370
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8378
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8407
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8430
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8488
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8512
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8531
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8538
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8545
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8557
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8575
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8585
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8593
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8604
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8613
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8622
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8630
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8640
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8648
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8672
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8691
		{
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8693
		{
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8734
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8745
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8749
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8753
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8759
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8764
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8768
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8774
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8778
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8789
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8793
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8819
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8823
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8831
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8863
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8867
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8871
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8915
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8919
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8926
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8930
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8934
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8940
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8944
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8952
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8970
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8974
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8988
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9001
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9006
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9016
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9029
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9034
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9038
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9042
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9046
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9050
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9057
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9061
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9075
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9079
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9097
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9102
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9108
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9120
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9261
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9274
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9289
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9316
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9358
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9394
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9447
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9459
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9479
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9499
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9519
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9574
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9635
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9647
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9659
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9671
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9695
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9721
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9747
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9762
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9770
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9779
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9812
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9817
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9823
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9830
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9834
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9839
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9843
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9849
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9855
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9862
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9869
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9878
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9885
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9892
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9901
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9905
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9915
		{
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9917
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9927
		{
			yyVAL.str = ""
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const MYSQL_COMPATBILITY_MODE = 57638
const CONFIGURATION = 57639
const SECOND = 57640
const ASCII = 57641
const COALESCE = 57642
const COLLATION = 57643
const HOUR = 57644
const MICROSECOND = 57645
const MINUTE = 57646
const MONTH = 57647
const QUARTER = 57648
const REPEAT = 57649
const REVERSE = 57650
const ROW_COUNT = 57651
const WEEK = 57652
const REVOKE = 57653
const FUNCTION = 57654
const PRIVILEGES = 57655
const TABLESPACE = 57656
const EXECUTE = 57657
const SUPER = 57658
const GRANT = 57659
const OPTION = 57660
const REFERENCES = 57661
const REPLICATION = 57662
const SLAVE = 57663
const CLIENT = 57664
const USAGE = 57665
const RELOAD = 57666
const FILE = 57667
const TEMPORARY = 57668
const ROUTINE = 57669
const EVENT = 57670
const SHUTDOWN = 57671
const NULLX = 57672
const AUTO_INCREMENT = 57673
const APPROXNUM = 57674
const SIGNED = 57675
const UNSIGNED = 57676
const ZEROFILL = 57677
const ENGINES = 57678
const LOW_CARDINALITY = 57679
const ADMIN_NAME = 57680
const RANDOM = 57681
const SUSPEND = 57682
const ATTRIBUTE = 57683
const HISTORY = 57684
const REUSE = 57685
const CURRENT = 57686
const OPTIONAL = 57687
const FAILED_LOGIN_ATTEMPTS = 57688
const PASSWORD_LOCK_TIME = 57689
const UNBOUNDED = 57690
const SECONDARY = 57691
const USER = 57692
const IDENTIFIED = 57693
const CIPHER = 57694
const ISSUER = 57695
const X509 = 57696
const SUBJECT = 57697
const SAN = 57698
const REQUIRE = 57699
const SSL = 57700
const NONE = 57701
const PASSWORD = 57702
const MAX_QUERIES_PER_HOUR = 57703
const MAX_UPDATES_PER_HOUR = 57704
const MAX_CONNECTIONS_PER_HOUR = 57705
const MAX_USER_CONNECTIONS = 57706
const FORMAT = 57707
const VERBOSE = 57708
const CONNECTION = 57709
const TRIGGERS = 57710
const PROFILES = 57711
const LOAD = 57712
const INFILE = 57713
const TERMINATED = 57714
const OPTIONALLY = 57715
const ENCLOSED = 57716
const ESCAPED = 57717
const STARTING = 57718
const LINES = 57719
const ROWS = 57720
const IMPORT = 57721
const MODUMP = 57722
const OVER = 57723
const PRECEDING = 57724
const FOLLOWING = 57725
const GROUPS = 57726
const DATABASES = 57727
const TABLES = 57728
const EXTENDED = 57729
const FULL = 57730
const PROCESSLIST = 57731
const FIELDS = 57732
const COLUMNS = 57733
const OPEN = 57734
const ERRORS = 57735
const WARNINGS = 57736
const INDEXES = 57737
const SCHEMAS = 57738
const NODE = 57739
const LOCKS = 57740
const TABLE_NUMBER = 57741
const COLUMN_NUMBER = 57742
const TABLE_VALUES = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const LOCAL = 57756
const EVENTS = 57757
const PLUGINS = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const SEPARATOR = 57769
const TIMESTAMPDIFF = 57770
const CURRENT_DATE = 57771
const CURRENT_USER = 57772
const CURRENT_ROLE = 57773
const SECOND_MICROSECOND = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const HOUR_MICROSECOND = 57777
const HOUR_SECOND = 57778
const HOUR_MINUTE = 57779
const DAY_MICROSECOND = 57780
const DAY_SECOND = 57781
const DAY_MINUTE = 57782
const DAY_HOUR = 57783
const YEAR_MONTH = 57784
const SQL_TSI_HOUR = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_YEAR = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MINUTE = 57792
const RECURSIVE = 57793
const CONFIG = 57794
const DRAINER = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const ADDDATE = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const CAST = 57807
const COUNT = 57808
const APPROX_COUNT_DISTINCT = 57809
const APPROX_PERCENTILE = 57810
const CURDATE = 57811
const CURTIME = 57812
const DATE_ADD = 57813
const DATE_SUB = 57814
const EXTRACT = 57815
const GROUP_CONCAT = 57816
const MAX = 57817
const MID = 57818
const MIN = 57819
const NOW = 57820
const POSITION = 57821
const SESSION_USER = 57822
const STD = 57823
const STDDEV = 57824
const MEDIAN = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const SUBDATE = 57828
const SUBSTR = 57829
const SUBSTRING = 57830
const SUM = 57831
const SYSDATE = 57832
const SYSTEM_USER = 57833
const TRANSLATE = 57834
const TRIM = 57835
const VARIANCE = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const AVG = 57839
const ARROW = 57840
const ROW = 57841
const OUTFILE = 57842
const HEADER = 57843
const MAX_FILE_SIZE = 57844
const FORCE_QUOTE = 57845
const UNUSED = 57846
const BINDINGS = 57847
const DO = 57848
const DECLARE = 57849
const KILL = 57850
const QUERY_RESULT = 57851

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"CONFIGURATION",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8402

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 93,
	21, 539,
	-2, 520,
	-1, 101,
	212, 738,
	-2, 785,
	-1, 120,
	42, 371,
	212, 371,
	239, 378,
	240, 378,
	412, 371,
	-2, 400,
	-1, 430,
	288, 92,
	388, 92,
	-2, 1527,
	-1, 489,
	67, 1153,
	-2, 1667,
	-1, 490,
	67, 1171,
	-2, 1638,
	-1, 494,
	67, 1172,
	-2, 1666,
	-1, 516,
	67, 1086,
	-2, 1717,
	-1, 517,
	67, 1087,
	-2, 1716,
	-1, 518,
	67, 1088,
	-2, 1706,
	-1, 519,
	67, 1681,
	-2, 1701,
	-1, 520,
	67, 1682,
	-2, 1702,
	-1, 521,
	67, 1683,
	-2, 1708,
	-1, 522,
	67, 1684,
	-2, 1691,
	-1, 523,
	67, 1685,
	-2, 1699,
	-1, 524,
	67, 1686,
	-2, 1709,
	-1, 525,
	67, 1687,
	-2, 1710,
	-1, 526,
	67, 1688,
	-2, 1715,
	-1, 527,
	67, 1689,
	-2, 1720,
	-1, 528,
	67, 1690,
	-2, 1721,
	-1, 530,
	67, 1150,
	-2, 1519,
	-1, 537,
	67, 1159,
	-2, 1545,
	-1, 541,
	67, 1163,
	-2, 1584,
	-1, 542,
	67, 1164,
	-2, 1662,
	-1, 550,
	67, 1174,
	-2, 1647,
	-1, 552,
	67, 1176,
	-2, 1657,
	-1, 553,
	67, 1177,
	-2, 1680,
	-1, 564,
	67, 1068,
	-2, 1711,
	-1, 565,
	67, 1069,
	-2, 1712,
	-1, 566,
	67, 1070,
	-2, 1713,
	-1, 573,
	21, 540,
	-2, 503,
	-1, 627,
	407, 400,
	408, 400,
	-2, 372,
	-1, 671,
	103, 1519,
	114, 1519,
	133, 1519,
	-2, 1312,
	-1, 711,
	21, 540,
	-2, 503,
	-1, 810,
	21, 539,
	-2, 975,
	-1, 1133,
	67, 1219,
	-2, 1664,
	-1, 1134,
	67, 1220,
	-2, 1665,
	-1, 1294,
	1, 764,
	68, 764,
	527, 764,
	-2, 771,
	-1, 1421,
	133, 1322,
	-2, 1320,
	-1, 1423,
	133, 664,
	-2, 1317,
	-1, 1424,
	133, 665,
	-2, 1318,
	-1, 1718,
	68, 1298,
	134, 1298,
	-2, 1649,
	-1, 1719,
	68, 1294,
	134, 1294,
	-2, 1648,
	-1, 1720,
	68, 1276,
	134, 1276,
	-2, 1635,
	-1, 1721,
	68, 1277,
	134, 1277,
	-2, 1640,
	-1, 1722,
	68, 1278,
	134, 1278,
	-2, 1572,
	-1, 1723,
	68, 1279,
	134, 1279,
	-2, 1566,
	-1, 1724,
	68, 1280,
	134, 1280,
	-2, 1510,
	-1, 1725,
	68, 1281,
	134, 1281,
	-2, 1637,
	-1, 1726,
	68, 1282,
	134, 1282,
	-2, 1570,
	-1, 1727,
	68, 1283,
	134, 1283,
	-2, 1565,
	-1, 1728,
	68, 1284,
	134, 1284,
	-2, 1558,
	-1, 1730,
	68, 1287,
	134, 1287,
	-2, 1680,
	-1, 1731,
	68, 1267,
	134, 1267,
	-2, 1667,
	-1, 1732,
	68, 1296,
	134, 1296,
	-2, 1638,
	-1, 1733,
	68, 1296,
	134, 1296,
	-2, 1666,
	-1, 1734,
	68, 1296,
	134, 1296,
	-2, 1528,
	-1, 1735,
	68, 1294,
	134, 1294,
	-2, 1657,
	-1, 1736,
	68, 1291,
	134, 1291,
	-2, 1550,
	-1, 1737,
	67, 1249,
	68, 1249,
	134, 1249,
	350, 1249,
	351, 1249,
	352, 1249,
	-2, 1509,
	-1, 1738,
	67, 1250,
	68, 1250,
	134, 1250,
	350, 1250,
	351, 1250,
	352, 1250,
	-2, 1511,
	-1, 1739,
	67, 1253,
	68, 1253,
	134, 1253,
	350, 1253,
	351, 1253,
	352, 1253,
	-2, 1639,
	-1, 1740,
	67, 1255,
	68, 1255,
	134, 1255,
	350, 1255,
	351, 1255,
	352, 1255,
	-2, 1622,
	-1, 1741,
	67, 1257,
	68, 1257,
	134, 1257,
	350, 1257,
	351, 1257,
	352, 1257,
	-2, 1571,
	-1, 1742,
	67, 1259,
	68, 1259,
	134, 1259,
	350, 1259,
	351, 1259,
	352, 1259,
	-2, 1554,
	-1, 1743,
	67, 1260,
	68, 1260,
	134, 1260,
	350, 1260,
	351, 1260,
	352, 1260,
	-2, 1555,
	-1, 1744,
	67, 1262,
	68, 1262,
	134, 1262,
	350, 1262,
	351, 1262,
	352, 1262,
	-2, 1508,
	-1, 1745,
	68, 1301,
	134, 1301,
	350, 1301,
	351, 1301,
	352, 1301,
	-2, 1533,
	-1, 1746,
	68, 1301,
	134, 1301,
	350, 1301,
	351, 1301,
	352, 1301,
	-2, 1546,
	-1, 1747,
	68, 1304,
	134, 1304,
	350, 1304,
	351, 1304,
	352, 1304,
	-2, 1529,
	-1, 1748,
	68, 1301,
	134, 1301,
	350, 1301,
	351, 1301,
	352, 1301,
	-2, 1607,
	-1, 1762,
	1, 765,
	68, 765,
	527, 765,
	-2, 771,
	-1, 1819,
	21, 539,
	-2, 631,
	-1, 1997,
	65, 446,
	134, 446,
	-2, 880,
	-1, 2280,
	87, 771,
	129, 771,
	166, 771,
	169, 771,
	-2, 828,
	-1, 2282,
	273, 943,
	-2, 922,
	-1, 2310,
	87, 771,
	129, 771,
	166, 771,
	169, 771,
	-2, 828,
	-1, 2313,
	65, 446,
	134, 446,
	-2, 881,
	-1, 2355,
	87, 771,
	129, 771,
	166, 771,
	169, 771,
	-2, 829,
	-1, 2383,
	273, 943,
	-2, 923,
	-1, 2801,
	68, 800,
	134, 800,
	-2, 771,
	-1, 2805,
	68, 800,
	134, 800,
	-2, 771,
	-1, 2819,
	68, 804,
	134, 804,
	-2, 771,
	-1, 2824,
	68, 805,
	134, 805,
	-2, 771,
}

const yyPrivate = 57344

const yyLast = 30333

var yyAct = [...]int{
	461, 2356, 2805, 1198, 2813, 2804, 2781, 1113, 440, 2646,
	2422, 442, 2770, 2728, 463, 1816, 2685, 2711, 2609, 2712,
	2395, 2544, 2613, 2346, 2589, 2420, 2338, 1708, 1345, 1379,
	838, 2421, 1109, 2535, 2550, 1022, 2244, 976, 487, 139,
	139, 2597, 2245, 2445, 1812, 139, 377, 384, 1252, 2460,
	384, 574, 2160, 142, 2344, 2405, 2305, 2437, 2384, 1302,
	2000, 670, 2354, 382, 31, 1116, 1300, 138, 138, 2404,
	2156, 1407, 1847, 368, 1055, 1413, 1811, 1367, 389, 2019,
	1337, 2293, 1972, 2161, 2242, 2286, 1716, 444, 432, 1888,
	2165, 569, 1856, 434, 1930, 1855, 2236, 395, 1613, 2040,
	2219, 2176, 2173, 1770, 608, 2171, 1714, 2105, 705, 476,
	93, 2154, 954, 1418, 1255, 439, 1250, 1609, 2060, 1421,
	1887, 1269, 1414, 1408, 2054, 1608, 1360, 942, 569, 1197,
	1340, 1800, 1415, 2018, 1338, 1312, 1969, 1763, 139, 956,
	1974, 678, 42, 3, 674, 381, 19, 1290, 378, 8,
	699, 874, 367, 379, 6, 93, 1277, 1641, 677, 30,
	1610, 1313, 441, 1107, 1850, 443, 707, 1046, 1712, 1755,
	1769, 380, 7, 1364, 1310, 698, 966, 92, 1309, 431,
	672, 400, 631, 1620, 2359, 1696, 1161, 42, 700, 1147,
	1624, 451, 1112, 1098, 373, 722, 1814, 31, 1402, 435,
	1384, 1106, 1821, 607, 1014, 662, 919, 1289, 1326, 370,
	962, 1260, 571, 1001, 1167, 663, 1168, 16, 128, 9,
	397, 4, 392, 977, 1045, 937, 398, 623, 939, 605,
	2098, 2098, 1890, 383, 134, 1627, 1617, 133, 573, 676,
	2438, 1848, 2243, 93, 1273, 833, 2636, 131, 1410, 572,
	839, 1188, 582, 132, 2674, 38, 122, 102, 132, 2413,
	132, 366, 38, 122, 102, 132, 1188, 38, 122, 102,
	132, 1883, 132, 132, 132, 42, 132, 697, 132, 19,
	742, 1003, 8, 387, 1875, 2352, 2664, 6, 1614, 941,
	778, 1625, 30, 1065, 91, 776, 683, 682, 684, 940,
	989, 2700, 990, 1348, 1349, 7, 568, 675, 2252, 1062,
	129, 1971, 2075, 973, 91, 129, 1083, 129, 775, 982,
	983, 2698, 129, 2715, 2716, 135, 681, 129, 1851, 129,
	1064, 1058, 1004, 129, 559, 129, 558, 560, 561, 641,
	562, 563, 980, 769, 583, 979, 982, 983, 1051, 750,
	1322, 752, 1115, 774, 2454, 757, 1931, 758, 1099, 2443,
	1103, 2637, 2638, 1970, 780, 781, 782, 779, 2689, 2690,
	139, 715, 2246, 2061, 686, 2537, 2537, 597, 394, 753,
	2062, 714, 2063, 2540, 1102, 760, 384, 384, 2440, 139,
	2246, 1118, 679, 1870, 716, 1357, 1184, 1361, 713, 2612,
	2673, 1181, 725, 2260, 2294, 1183, 1180, 1182, 1186, 1187,
	2185, 1184, 1353, 1185, 687, 1094, 1181, 733, 710, 712,
	1183, 1180, 1182, 1186, 1187, 1621, 2301, 1977, 1185, 2446,
	2447, 2448, 2449, 2187, 428, 1794, 1753, 429, 2402, 2418,
	2177, 646, 1693, 1880, 2517, 746, 101, 575, 130, 812,
	2093, 755, 680, 1963, 1104, 725, 2091, 2714, 1244, 1243,
	772, 773, 771, 2182, 2183, 745, 2016, 120, 2520, 748,
	2415, 709, 2676, 2677, 2453, 1860, 1101, 594, 2184, 2725,
	2455, 751, 754, 971, 93, 93, 676, 2702, 2181, 393,
	737, 1117, 386, 385, 2511, 762, 2551, 763, 2798, 599,
	2814, 647, 2736, 2697, 2648, 747, 1631, 1633, 1634, 596,
	595, 756, 711, 2743, 961, 2671, 42, 42, 1626, 2611,
	685, 433, 2504, 2792, 991, 765, 1985, 1986, 1987, 1988,
	589, 2473, 767, 768, 2654, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1191, 1192, 1193, 1194,
	1195, 1196, 1189, 1190, 675, 810, 941, 2644, 2645, 2472,
	2648, 1191, 1192, 1193, 1194, 1195, 1196, 1189, 1190, 718,
	719, 593, 1057, 749, 1983, 592, 673, 727, 726, 759,
	2179, 584, 1100, 2704, 2705, 936, 938, 999, 1010, 1009,
	2773, 761, 975, 974, 2499, 2495, 587, 735, 993, 960,
	1928, 959, 1125, 1128, 1129, 2815, 2782, 608, 2461, 814,
	815, 816, 817, 1126, 2809, 2821, 2272, 734, 585, 730,
	731, 1615, 916, 675, 706, 1615, 2264, 2097, 766, 1615,
	727, 726, 594, 720, 1642, 943, 783, 393, 2042, 2044,
	1876, 982, 983, 2534, 818, 811, 1002, 981, 1828, 1618,
	1332, 764, 2675, 820, 868, 1284, 588, 2166, 2169, 2169,
	978, 982, 983, 946, 2101, 569, 569, 569, 1203, 2574,
	1026, 1026, 2096, 2639, 2640, 826, 2598, 2599, 2600, 2602,
	2601, 949, 948, 972, 742, 924, 388, 384, 938, 1049,
	1049, 1628, 39, 1616, 572, 1976, 2703, 39, 2150, 2610,
	1629, 1362, 1024, 1024, 2774, 951, 1028, 1827, 1826, 1060,
	1030, 2107, 2106, 1052, 2414, 1351, 944, 945, 103, 947,
	2188, 2178, 1352, 103, 598, 103, 1884, 2518, 1632, 1081,
	103, 2046, 1825, 2094, 1007, 103, 2808, 103, 103, 103,
	1356, 103, 1026, 103, 1026, 715, 848, 849, 1066, 1980,
	1981, 1824, 777, 1076, 1077, 1114, 1350, 1354, 969, 2180,
	1095, 2419, 649, 1979, 741, 985, 986, 650, 988, 1056,
	1096, 736, 576, 1063, 690, 695, 696, 963, 967, 967,
	2820, 2170, 2170, 1032, 642, 642, 2163, 2198, 367, 1849,
	2164, 2167, 2043, 1090, 968, 963, 2755, 963, 921, 2500,
	2501, 778, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 673, 93, 2497, 1156, 1157, 93,
	2496, 573, 1863, 923, 1127, 1166, 2467, 1991, 2771, 2772,
	93, 602, 603, 604, 1212, 1867, 953, 1005, 1006, 93,
	740, 1080, 2168, 1119, 992, 1218, 994, 742, 653, 1079,
	1669, 2827, 984, 1668, 1220, 987, 1999, 1225, 1226, 1706,
	2281, 1111, 42, 644, 644, 2826, 643, 643, 569, 998,
	1000, 42, 1020, 1021, 997, 1089, 1303, 2779, 1086, 1702,
	1017, 1018, 1019, 1085, 1008, 1837, 2817, 917, 1048, 1048,
	2575, 2577, 2578, 2579, 2576, 652, 1998, 366, 1092, 655,
	654, 1130, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 2799,
	1875, 2794, 1303, 1044, 1050, 1072, 1266, 778, 1067, 778,
	1043, 1031, 1245, 2785, 1810, 1757, 1251, 780, 781, 782,
	779, 778, 2784, 1387, 1108, 1965, 1068, 2759, 2730, 2722,
	692, 693, 694, 1287, 1259, 1026, 1809, 1088, 1294, 1087,
	1992, 1084, 2818, 608, 1267, 573, 1301, 964, 1199, 1026,
	1202, 1105, 1293, 1311, 1213, 2717, 1211, 2706, 377, 1110,
	1155, 1705, 1837, 2679, 1219, 1623, 1221, 2795, 1120, 1121,
	1122, 1123, 1124, 780, 781, 782, 779, 739, 2669, 1623,
	1327, 1327, 1248, 1311, 1810, 1311, 1270, 1149, 1623, 1287,
	1287, 1026, 1347, 1623, 2731, 2522, 2668, 2667, 1257, 1258,
	1614, 1325, 569, 2666, 1026, 1999, 1707, 1673, 2656, 1756,
	2529, 1163, 1164, 1165, 2528, 1605, 952, 2126, 1200, 1316,
	2216, 2522, 1206, 1837, 1159, 1286, 1652, 1287, 1026, 2680,
	1378, 139, 139, 1292, 1201, 1323, 1324, 2521, 1011, 1389,
	1810, 2342, 1385, 139, 2522, 965, 2300, 740, 699, 1212,
	1406, 780, 781, 782, 779, 1212, 1212, 1222, 1285, 1380,
	1380, 1381, 2522, 2522, 2732, 708, 1295, 1296, 1373, 2522,
	2316, 1380, 1395, 1240, 2657, 1423, 2530, 2065, 1097, 2037,
	1774, 1333, 1334, 1954, 1301, 1952, 700, 2199, 1026, 1950,
	1308, 1948, 2056, 1936, 1315, 1651, 1892, 2001, 1358, 1873,
	1865, 1346, 1907, 2522, 1318, 1319, 1320, 2066, 1271, 1329,
	1304, 963, 1275, 1424, 1262, 1278, 1265, 1878, 1274, 1375,
	1268, 1363, 1317, 1877, 1861, 1857, 1377, 1291, 914, 911,
	912, 913, 1869, 967, 1912, 1773, 1911, 1910, 1908, 1790,
	1703, 1305, 795, 2066, 1636, 1810, 1298, 1665, 1321, 1955,
	1606, 1953, 1639, 1640, 1297, 1949, 1677, 1949, 676, 778,
	1307, 1330, 778, 1331, 676, 1774, 1858, 1314, 1676, 1622,
	1073, 1653, 1604, 93, 1823, 1392, 1283, 1069, 915, 824,
	728, 1404, 708, 1291, 1371, 1372, 600, 1404, 2090, 1328,
	1862, 1858, 1205, 1204, 1336, 586, 2203, 742, 1335, 1909,
	651, 1774, 2088, 1612, 1271, 42, 1702, 1359, 1382, 964,
	1271, 1271, 1368, 1369, 1370, 957, 1013, 1674, 2768, 1015,
	1108, 1162, 778, 2756, 1681, 1973, 675, 1374, 2658, 1376,
	1016, 2217, 675, 2213, 778, 1623, 1074, 464, 473, 2089,
	708, 1393, 465, 2099, 472, 466, 470, 469, 467, 468,
	810, 1868, 1830, 1411, 1611, 717, 1422, 1898, 1602, 1288,
	1603, 2693, 1154, 1416, 779, 1417, 798, 799, 800, 801,
	802, 795, 432, 715, 1749, 2507, 139, 1152, 1153, 1151,
	1607, 2506, 1231, 1717, 2290, 1661, 139, 139, 1771, 2791,
	780, 781, 782, 779, 2285, 474, 1012, 1649, 1311, 1900,
	1630, 1162, 2064, 1647, 1751, 1638, 2490, 965, 1783, 648,
	782, 779, 2803, 1635, 1766, 1767, 1216, 645, 675, 699,
	1311, 2585, 1913, 1914, 2788, 471, 1217, 656, 2583, 2581,
	2753, 1637, 2790, 1149, 2737, 1347, 1782, 1646, 1660, 2571,
	2626, 780, 781, 782, 779, 2591, 2569, 2416, 2709, 1644,
	1709, 1710, 1648, 780, 781, 782, 779, 700, 1780, 2584,
	780, 781, 782, 779, 1026, 2298, 2582, 2580, 1784, 1785,
	780, 781, 782, 779, 715, 2568, 1049, 2570, 1347, 2567,
	2564, 1842, 2558, 1844, 1717, 2417, 1817, 1817, 2555, 1817,
	2554, 1212, 1287, 1659, 2172, 1922, 1835, 1663, 780, 781,
	782, 779, 1750, 2299, 780, 781, 782, 779, 2297, 2186,
	1818, 2145, 1822, 1656, 1675, 1820, 1188, 1678, 1679, 1680,
	2144, 2084, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1698, 1691, 2616, 2058, 1839, 796, 797, 798, 799, 800,
	801, 802, 795, 1846, 1819, 1701, 1700, 1787, 1788, 2789,
	1786, 1711, 1699, 1695, 780, 781, 782, 779, 1841, 2516,
	1694, 1853, 1070, 934, 428, 1758, 1854, 429, 1859, 1764,
	780, 781, 782, 779, 2724, 2708, 1779, 967, 1778, 1781,
	2590, 780, 781, 782, 779, 2339, 2691, 1346, 780, 781,
	782, 779, 1789, 1775, 1791, 1796, 794, 793, 803, 804,
	796, 797, 798, 799, 800, 801, 802, 795, 2652, 2651,
	1223, 1224, 675, 2348, 1227, 1228, 1229, 1230, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 701, 702, 703, 2819,
	2641, 2572, 1831, 1832, 1833, 780, 781, 782, 779, 2565,
	2561, 2659, 1838, 1840, 2560, 1792, 794, 793, 803, 804,
	796, 797, 798, 799, 800, 801, 802, 795, 1271, 1271,
	1271, 1184, 806, 2559, 809, 1671, 1181, 2119, 2519, 2492,
	1183, 1180, 1182, 1186, 1187, 1048, 2439, 2337, 1185, 807,
	808, 805, 2335, 794, 793, 803, 804, 796, 797, 798,
	799, 800, 801, 802, 795, 1871, 786, 787, 788, 789,
	790, 791, 792, 784, 2347, 1026, 2308, 1026, 2296, 1026,
	2295, 2292, 2118, 2263, 715, 1889, 2149, 2749, 2143, 2128,
	2095, 2059, 2049, 1704, 1885, 1697, 780, 781, 782, 779,
	515, 514, 2765, 1396, 780, 781, 782, 779, 1394, 1881,
	2267, 1280, 1071, 1026, 1916, 793, 803, 804, 796, 797,
	798, 799, 800, 801, 802, 795, 1923, 847, 843, 842,
	1026, 825, 780, 781, 782, 779, 704, 2796, 2190, 2543,
	1925, 2310, 2309, 132, 2122, 1024, 122, 102, 1915, 794,
	793, 803, 804, 796, 797, 798, 799, 800, 801, 802,
	795, 2280, 1024, 2274, 2273, 1924, 780, 781, 782, 779,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1191, 1192, 1193, 1194, 1195, 1196, 1189, 1190, 2256,
	2121, 2235, 2234, 2204, 2127, 2124, 1902, 2117, 2120, 2109,
	129, 2510, 1945, 2104, 1882, 2053, 1964, 1951, 1947, 1946,
	1682, 139, 780, 781, 782, 779, 1672, 1026, 1670, 1896,
	780, 781, 782, 779, 780, 781, 782, 779, 1874, 1997,
	1667, 1872, 1932, 1666, 1664, 2003, 1658, 1937, 1879, 1967,
	1956, 1655, 1654, 1215, 1259, 1214, 132, 1035, 1033, 1777,
	1944, 2012, 2816, 139, 1943, 2767, 1893, 1995, 715, 1347,
	1347, 1347, 1347, 1906, 1966, 1895, 2761, 1108, 2020, 1942,
	715, 1347, 780, 781, 782, 779, 780, 781, 782, 779,
	2020, 2013, 577, 578, 579, 580, 1990, 1760, 1941, 1026,
	2744, 780, 781, 782, 779, 576, 31, 139, 139, 2763,
	2741, 2739, 2006, 129, 840, 2625, 2008, 1899, 1257, 1258,
	780, 781, 782, 779, 2607, 2595, 1917, 1918, 2036, 1212,
	2592, 1920, 1921, 2071, 1960, 2051, 2052, 1817, 1212, 1957,
	2587, 2531, 1247, 1926, 2514, 2004, 1026, 2015, 2513, 2512,
	2509, 2503, 93, 732, 1034, 2082, 794, 793, 803, 804,
	796, 797, 798, 799, 800, 801, 802, 795, 2488, 2328,
	1989, 2326, 1271, 2303, 1982, 1958, 1959, 1278, 1346, 1346,
	1346, 1346, 2291, 955, 42, 2130, 2002, 1256, 19, 2005,
	1346, 8, 1249, 2083, 2035, 2011, 6, 2009, 2010, 2076,
	2014, 30, 2067, 2021, 2022, 2023, 2024, 2017, 2077, 1996,
	2032, 2034, 1270, 2033, 7, 2007, 2079, 1764, 2070, 1291,
	1994, 1993, 1968, 2045, 2047, 1261, 2110, 2050, 1262, 2112,
	1265, 2114, 1264, 1253, 573, 1864, 715, 822, 1829, 715,
	1772, 2057, 1150, 2175, 2087, 93, 1717, 129, 1401, 2159,
	1383, 2092, 1282, 2080, 1254, 139, 2074, 2072, 1093, 2081,
	2078, 2068, 1059, 2086, 715, 715, 2125, 918, 866, 1347,
	1771, 865, 2202, 864, 2159, 2159, 863, 862, 2206, 861,
	2102, 2100, 2108, 2191, 860, 859, 2175, 858, 857, 856,
	855, 2115, 2116, 854, 2129, 2111, 2113, 853, 2131, 2132,
	2133, 2134, 852, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 851, 850, 794, 793, 803, 804, 796, 797, 798,
	799, 800, 801, 802, 795, 846, 845, 1916, 844, 1894,
	841, 837, 836, 834, 1271, 2205, 833, 1287, 1271, 2207,
	2208, 1287, 2151, 2192, 2193, 2194, 2146, 832, 2215, 2200,
	2153, 794, 793, 803, 804, 796, 797, 798, 799, 800,
	801, 802, 795, 2227, 831, 830, 829, 139, 828, 827,
	2103, 823, 139, 2201, 2197, 2195, 2196, 821, 1346, 744,
	2220, 2221, 2747, 2713, 2223, 1984, 1836, 2226, 2212, 2214,
	2211, 1940, 2123, 1398, 2224, 2261, 2210, 743, 2225, 2250,
	2265, 2253, 2241, 2231, 2232, 2233, 2026, 2029, 2331, 2228,
	2330, 2254, 2030, 780, 781, 782, 779, 2257, 1939, 2025,
	2027, 2209, 1400, 2802, 2240, 2028, 2147, 2148, 2031, 2251,
	1806, 1807, 2069, 2284, 1866, 2152, 2255, 1938, 1399, 1962,
	780, 781, 782, 779, 2329, 93, 1765, 93, 1241, 1643,
	76, 41, 1852, 2258, 1709, 1710, 2259, 40, 2262, 780,
	781, 782, 779, 1026, 1026, 1891, 1935, 1886, 920, 1347,
	2313, 794, 793, 803, 804, 796, 797, 798, 799, 800,
	801, 802, 795, 1053, 136, 770, 1754, 715, 780, 781,
	782, 779, 2269, 363, 364, 1024, 2306, 2020, 2304, 738,
	365, 2275, 1802, 1805, 1806, 1807, 1803, 2277, 1804, 1808,
	2278, 2549, 2333, 2319, 2283, 2279, 2282, 1299, 1934, 1281,
	1212, 1817, 2289, 1933, 362, 2287, 2682, 2287, 1205, 1204,
	2314, 932, 933, 2315, 930, 931, 2317, 2322, 1795, 2318,
	780, 781, 782, 779, 2311, 780, 781, 782, 779, 2312,
	928, 929, 715, 926, 927, 996, 2406, 2408, 1929, 2406,
	2406, 995, 2159, 2288, 2320, 2324, 2323, 2230, 1601, 958,
	922, 2762, 2642, 2632, 715, 2630, 2552, 576, 1346, 1919,
	780, 781, 782, 779, 2542, 2334, 1897, 2541, 2539, 2266,
	2532, 2436, 2349, 2435, 2341, 2340, 2268, 1301, 2350, 2433,
	2336, 780, 781, 782, 779, 2403, 2343, 2248, 780, 781,
	782, 779, 2407, 2353, 2247, 2238, 925, 2237, 2351, 2055,
	1303, 2085, 2381, 2459, 2456, 1650, 1657, 2463, 2409, 2410,
	2430, 803, 804, 796, 797, 798, 799, 800, 801, 802,
	795, 2427, 2428, 2426, 2315, 2425, 729, 780, 781, 782,
	779, 2750, 1158, 2429, 577, 578, 579, 580, 2751, 93,
	970, 49, 1026, 2431, 2751, 2750, 2491, 576, 2441, 2505,
	2249, 1, 1279, 139, 780, 781, 782, 779, 581, 2457,
	1397, 2038, 2408, 2321, 2039, 2229, 2041, 1271, 2411, 1619,
	2325, 2466, 1793, 2327, 2306, 1752, 2189, 950, 601, 93,
	1207, 2508, 1078, 689, 724, 1075, 2403, 2332, 723, 721,
	2464, 2465, 2489, 2468, 2469, 2470, 2471, 1160, 2493, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 478, 2553, 1409, 2588, 2515, 2432, 2681,
	2727, 2523, 2624, 2684, 1091, 462, 2526, 2533, 2442, 2527,
	2525, 2628, 1797, 2444, 2345, 2073, 2536, 2586, 2538, 619,
	509, 2412, 794, 793, 803, 804, 796, 797, 798, 799,
	800, 801, 802, 795, 485, 1802, 1805, 1806, 1807, 1803,
	715, 1804, 1808, 715, 715, 715, 835, 1061, 1054, 1927,
	691, 2566, 484, 715, 2302, 1978, 688, 620, 1692, 1242,
	1817, 2619, 2622, 1263, 1246, 2596, 2812, 2801, 2604, 2605,
	2606, 2780, 2760, 2647, 2593, 2797, 2696, 2742, 2452, 2556,
	2557, 2615, 2450, 2603, 2614, 2562, 2563, 1026, 1026, 2623,
	2451, 2617, 2735, 2643, 399, 2618, 2631, 2635, 2633, 2634,
	2629, 1355, 2627, 567, 660, 2608, 1776, 2672, 2594, 590,
	1759, 591, 1762, 1761, 1131, 785, 1148, 2270, 139, 1024,
	1024, 2271, 2649, 2650, 819, 438, 715, 1645, 450, 1975,
	2396, 2048, 48, 47, 46, 45, 1388, 1419, 715, 480,
	141, 1420, 2621, 2686, 460, 459, 1380, 2655, 458, 457,
	1801, 2665, 1799, 2524, 2661, 1798, 2688, 1342, 1341, 1386,
	2710, 2662, 2663, 2670, 2502, 2573, 2498, 2494, 2653, 2355,
	2687, 2382, 2383, 715, 2678, 2389, 873, 869, 871, 872,
	870, 1905, 2548, 2694, 1901, 2157, 2158, 2155, 935, 2692,
	2458, 2276, 1715, 1713, 2222, 2218, 1405, 1276, 2699, 2701,
	1961, 1343, 1339, 2424, 570, 32, 27, 5, 29, 28,
	14, 2726, 2707, 15, 13, 1082, 12, 18, 26, 2718,
	2719, 2720, 2721, 25, 2729, 24, 715, 23, 84, 83,
	82, 81, 22, 2734, 11, 80, 1114, 2738, 79, 2740,
	78, 21, 73, 20, 74, 2733, 71, 72, 59, 58,
	57, 69, 68, 67, 66, 65, 64, 618, 2745, 56,
	2748, 2746, 2688, 2758, 55, 54, 53, 70, 63, 62,
	715, 2754, 715, 2752, 61, 2548, 2687, 2764, 2757, 2766,
	1114, 60, 1114, 2769, 52, 51, 2723, 50, 100, 99,
	98, 97, 96, 95, 2775, 33, 34, 2729, 715, 2776,
	35, 36, 2783, 110, 109, 2787, 111, 112, 1114, 107,
	2793, 105, 108, 106, 104, 43, 10, 17, 2, 0,
	0, 0, 2660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2800, 2807, 0, 0, 0, 2811, 0, 0,
	0, 2810, 0, 0, 0, 0, 0, 0, 0, 0,
	2822, 2807, 2824, 2823, 0, 2825, 2811, 0, 0, 0,
	0, 1535, 1577, 0, 0, 1524, 309, 1482, 1537, 1455,
	1471, 1545, 1472, 1473, 1510, 1434, 1492, 271, 1469, 0,
	0, 0, 0, 0, 0, 1527, 1426, 1458, 1459, 1428,
	1465, 1429, 1456, 1484, 216, 1454, 1495, 241, 1507, 1468,
	1489, 1543, 0, 0, 301, 255, 0, 0, 1487, 1529,
	1490, 1515, 1481, 1511, 1442, 1503, 1538, 1470, 0, 1508,
	1539, 0, 0, 2548, 0, 701, 702, 703, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 1506, 1533,
	1467, 0, 200, 1536, 1488, 1509, 0, 0, 1427, 1504,
	0, 1432, 1435, 1544, 1531, 1462, 1463, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 1491, 1512, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1460, 0,
	1500, 0, 0, 0, 1437, 1433, 2778, 1483, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 1576, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 1436, 330, 192, 1571, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 1555, 1556, 1557, 1558,
	1559, 358, 1567, 1568, 0, 1572, 1573, 1574, 1441, 0,
	1461, 1513, 0, 1425, 1598, 1522, 1530, 1480, 332, 1532,
	1477, 1476, 1562, 0, 1561, 305, 1563, 1564, 240, 1528,
	1457, 1466, 348, 1464, 291, 273, 1534, 1499, 1575, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 1560, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 1569, 0, 1570,
	344, 223, 180, 181, 327, 0, 269, 0, 1599, 1600,
	1525, 1430, 1440, 1438, 1474, 1501, 1502, 265, 343, 1517,
	1521, 1518, 1546, 294, 0, 0, 0, 0, 0, 234,
	275, 1519, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1431, 0, 302, 325, 337, 354, 357,
	1578, 1579, 1580, 185, 356, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 328, 1475, 1448, 1486, 336, 1451, 1449, 1516,
	1450, 1505, 352, 259, 260, 261, 262, 226, 0, 202,
	355, 284, 1496, 1479, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1497, 1589, 1590, 1591, 1592, 1593, 1453, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 1523, 360,
	1594, 1595, 1596, 1597, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 1447,
	1452, 1446, 1493, 1494, 1540, 1541, 1542, 1514, 1439, 1526,
	0, 1443, 1445, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 309, 491, 1498, 182, 0, 242,
	1547, 283, 221, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 483,
	0, 0, 301, 255, 0, 0, 0, 0, 538, 546,
	0, 1565, 1566, 340, 341, 342, 326, 0, 213, 1588,
	445, 0, 0, 477, 515, 514, 464, 473, 0, 0,
	197, 465, 0, 472, 466, 470, 469, 467, 468, 0,
	530, 0, 0, 0, 0, 0, 0, 436, 449, 2545,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 492, 0,
	448, 0, 0, 455, 474, 475, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 471, 490, 494, 209, 552, 488,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 553, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 0, 0, 332, 0, 0, 536,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	489, 0, 291, 273, 549, 437, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 534, 269, 0, 0, 0, 548, 529,
	531, 532, 535, 539, 540, 541, 542, 543, 545, 547,
	551, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 2546, 0, 0, 0, 2547, 0,
	550, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	493, 259, 260, 261, 262, 537, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 559, 533, 558,
	560, 561, 557, 562, 563, 544, 456, 0, 497, 555,
	554, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 522, 502, 503, 504, 454, 505, 500, 501, 523,
	495, 519, 520, 479, 498, 506, 518, 507, 521, 524,
	525, 564, 565, 513, 566, 510, 526, 517, 516, 508,
	496, 527, 528, 482, 481, 511, 512, 499, 309, 491,
	0, 340, 341, 342, 326, 0, 213, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 483, 0, 0, 301, 255, 0, 0,
	0, 0, 538, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 0, 0, 477, 515, 514,
	464, 473, 0, 0, 197, 465, 0, 472, 466, 470,
	469, 467, 468, 0, 530, 0, 0, 0, 0, 0,
	0, 436, 449, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 492, 0, 448, 0, 0, 455, 474, 475,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 471, 490,
	494, 209, 552, 488, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 553,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	332, 0, 0, 536, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 489, 0, 291, 273, 549, 437,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 1209,
	1208, 1210, 344, 223, 180, 181, 327, 534, 269, 0,
	0, 0, 548, 529, 531, 532, 535, 539, 540, 541,
	542, 543, 545, 547, 551, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 493, 259, 260, 261, 262, 537,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 559, 533, 558, 560, 561, 557, 562, 563, 544,
	456, 0, 497, 555, 554, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 522, 502, 503, 504, 454,
	505, 500, 501, 523, 495, 519, 520, 479, 498, 506,
	518, 507, 521, 524, 525, 564, 565, 513, 566, 510,
	526, 517, 516, 508, 496, 527, 528, 482, 481, 511,
	512, 499, 309, 491, 0, 340, 341, 342, 326, 0,
	213, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 483, 0, 0,
	301, 255, 0, 0, 0, 0, 538, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	0, 477, 515, 514, 464, 473, 0, 0, 197, 465,
	0, 472, 466, 470, 469, 467, 468, 0, 530, 0,
	0, 0, 0, 0, 0, 436, 449, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 492, 0, 448, 0,
	0, 455, 474, 475, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 471, 490, 494, 209, 552, 488, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 553, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 332, 0, 0, 536, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 489, 0,
	291, 273, 549, 437, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 534, 269, 0, 0, 0, 548, 529, 531, 532,
	535, 539, 540, 541, 542, 543, 545, 547, 551, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 2546, 0, 0, 0, 2547, 0, 550, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 493, 259,
	260, 261, 262, 537, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 559, 533, 558, 560, 561,
	557, 562, 563, 544, 456, 0, 497, 555, 554, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 522,
	502, 503, 504, 454, 505, 500, 501, 523, 495, 519,
	520, 479, 498, 506, 518, 507, 521, 524, 525, 564,
	565, 513, 566, 510, 526, 517, 516, 508, 496, 527,
	528, 482, 481, 511, 512, 499, 309, 491, 0, 340,
	341, 342, 326, 0, 213, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 0, 0, 216, 1272, 0, 241, 0, 0,
	0, 483, 0, 0, 301, 255, 0, 0, 0, 0,
	538, 546, 0, 0, 0, 0, 0, 0, 0, 1365,
	0, 0, 445, 0, 0, 477, 515, 514, 464, 473,
	0, 0, 197, 465, 0, 472, 466, 470, 469, 467,
	468, 0, 530, 0, 0, 0, 0, 0, 0, 436,
	449, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	492, 0, 448, 0, 0, 1366, 474, 475, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 471, 490, 494, 209,
	552, 488, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 553, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 332, 0,
	0, 536, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 489, 0, 291, 273, 549, 437, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 534, 269, 0, 0, 0,
	548, 529, 531, 532, 535, 539, 540, 541, 542, 543,
	545, 547, 551, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 550, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 493, 259, 260, 261, 262, 537, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 559,
	533, 558, 560, 561, 557, 562, 563, 544, 456, 0,
	497, 555, 554, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 522, 502, 503, 504, 454, 505, 500,
	501, 523, 495, 519, 520, 479, 498, 506, 518, 507,
	521, 524, 525, 564, 565, 513, 566, 510, 526, 517,
	516, 508, 496, 527, 528, 482, 481, 511, 512, 499,
	132, 309, 491, 340, 341, 342, 326, 0, 213, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 813, 0, 0, 301,
	255, 0, 0, 0, 0, 538, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 0, 0,
	477, 515, 514, 464, 473, 0, 0, 197, 465, 0,
	472, 466, 470, 469, 467, 468, 0, 530, 0, 0,
	0, 0, 0, 0, 436, 449, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 492, 0, 448, 0, 0,
	455, 474, 475, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 471, 490, 494, 209, 552, 488, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 553, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 0, 0, 332, 0, 0, 536, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 489, 0, 291,
	273, 549, 437, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	534, 269, 0, 0, 0, 548, 529, 531, 532, 535,
	539, 540, 541, 542, 543, 545, 547, 551, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 493, 259, 260,
	261, 262, 537, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 559, 533, 558, 560, 561, 557,
	562, 563, 544, 456, 0, 497, 555, 554, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 103, 283, 221, 522, 502,
	503, 504, 454, 505, 500, 501, 523, 495, 519, 520,
	479, 498, 506, 518, 507, 521, 524, 525, 564, 565,
	513, 566, 510, 526, 517, 516, 508, 496, 527, 528,
	482, 481, 511, 512, 499, 309, 491, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 0, 0, 216, 2777, 0, 241, 0, 0, 0,
	483, 0, 0, 301, 255, 0, 0, 0, 0, 538,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 0, 0, 477, 515, 514, 464, 473, 0,
	0, 197, 465, 0, 472, 466, 470, 469, 467, 468,
	0, 530, 0, 0, 0, 0, 0, 0, 436, 449,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 447, 0, 0, 0, 0, 492,
	0, 448, 0, 0, 455, 474, 475, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 471, 490, 494, 209, 552,
	488, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 553, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 332, 0, 0,
	536, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 489, 0, 291, 273, 549, 437, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 534, 269, 0, 0, 0, 548,
	529, 531, 532, 535, 539, 540, 541, 542, 543, 545,
	547, 551, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 493, 259, 260, 261, 262, 537, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 559, 533,
	558, 560, 561, 557, 562, 563, 544, 456, 0, 497,
	555, 554, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 522, 502, 503, 504, 454, 505, 500, 501,
	523, 495, 519, 520, 479, 498, 506, 518, 507, 521,
	524, 525, 564, 565, 513, 566, 510, 526, 517, 516,
	508, 496, 527, 528, 482, 481, 511, 512, 499, 309,
	491, 0, 340, 341, 342, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 216, 1272, 0,
	241, 0, 0, 0, 483, 0, 0, 301, 255, 0,
	0, 0, 0, 538, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 0, 0, 477, 515,
	514, 464, 473, 0, 0, 197, 465, 0, 472, 466,
	470, 469, 467, 468, 0, 530, 0, 0, 0, 0,
	0, 0, 436, 449, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 447, 0,
	0, 0, 0, 492, 0, 448, 0, 0, 455, 474,
	475, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 471,
	490, 494, 209, 552, 488, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	553, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 0,
	0, 332, 0, 0, 536, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 489, 0, 291, 273, 549,
	437, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 534, 269,
	0, 0, 0, 548, 529, 531, 532, 535, 539, 540,
	541, 542, 543, 545, 547, 551, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 493, 259, 260, 261, 262,
	537, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 559, 533, 558, 560, 561, 557, 562, 563,
	544, 456, 0, 497, 555, 554, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 522, 502, 503, 504,
	454, 505, 500, 501, 523, 495, 519, 520, 479, 498,
	506, 518, 507, 521, 524, 525, 564, 565, 513, 566,
	510, 526, 517, 516, 508, 496, 527, 528, 482, 481,
	511, 512, 499, 309, 491, 0, 340, 341, 342, 326,
	0, 213, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 483, 0,
	0, 301, 255, 0, 0, 0, 0, 538, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	0, 0, 477, 515, 514, 464, 473, 0, 0, 197,
	465, 0, 472, 466, 470, 469, 467, 468, 0, 530,
	0, 0, 0, 0, 0, 0, 436, 449, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 447, 1047, 0, 0, 0, 492, 0, 448,
	0, 0, 455, 474, 475, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 471, 490, 494, 209, 552, 488, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 553, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 332, 0, 0, 536, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 489,
	0, 291, 273, 549, 437, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 534, 269, 0, 0, 0, 548, 529, 531,
	532, 535, 539, 540, 541, 542, 543, 545, 547, 551,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 493,
	259, 260, 261, 262, 537, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 559, 533, 558, 560,
	561, 557, 562, 563, 544, 456, 0, 497, 555, 554,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	522, 502, 503, 504, 454, 505, 500, 501, 523, 495,
	519, 520, 479, 498, 506, 518, 507, 521, 524, 525,
	564, 565, 513, 566, 510, 526, 517, 516, 508, 496,
	527, 528, 482, 481, 511, 512, 499, 0, 0, 0,
	340, 341, 342, 326, 0, 213, 309, 491, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 0, 0, 216, 0, 0, 241, 0, 0,
	0, 483, 0, 0, 301, 255, 0, 0, 0, 0,
	538, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 445, 0, 0, 477, 515, 514, 464, 473,
	0, 0, 197, 465, 0, 472, 466, 470, 469, 467,
	468, 0, 530, 0, 0, 0, 0, 0, 0, 436,
	449, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	492, 0, 448, 0, 0, 455, 474, 475, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 471, 490, 494, 209,
	552, 488, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 553, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 332, 0,
	0, 536, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 489, 0, 291, 273, 549, 437, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 534, 269, 0, 0, 0,
	548, 529, 531, 532, 535, 539, 540, 541, 542, 543,
	545, 547, 551, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 550, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 493, 259, 260, 261, 262, 537, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 559,
	533, 558, 560, 561, 557, 562, 563, 544, 456, 0,
	497, 555, 554, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 522, 502, 503, 504, 454, 505, 500,
	501, 523, 495, 519, 520, 479, 498, 506, 518, 507,
	521, 524, 525, 564, 565, 513, 566, 510, 526, 517,
	516, 508, 496, 527, 528, 482, 481, 511, 512, 499,
	309, 491, 0, 340, 341, 342, 326, 0, 213, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 0, 0, 216, 0,
	0, 241, 0, 0, 0, 483, 0, 0, 301, 255,
	0, 0, 0, 0, 538, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 445, 0, 0, 477,
	515, 514, 464, 473, 0, 0, 197, 465, 0, 472,
	466, 470, 469, 467, 468, 0, 530, 0, 0, 0,
	0, 0, 0, 436, 449, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 492, 0, 448, 0, 0, 455,
	474, 475, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	471, 490, 494, 209, 552, 488, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 553, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 332, 0, 0, 536, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 489, 0, 291, 273,
	549, 437, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 534,
	269, 0, 0, 0, 548, 529, 531, 532, 535, 539,
	540, 541, 542, 543, 545, 547, 551, 294, 0, 0,
	0, 0, 0, 234, 275, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	325, 337, 354, 357, 0, 0, 0, 185, 356, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 493, 259, 260, 261,
	262, 537, 0, 202, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 222, 228, 0, 230, 201, 274, 224,
	334, 237, 0, 360, 0, 0, 0, 0, 266, 233,
	299, 238, 244, 287, 333, 272, 292, 199, 324, 300,
	248, 0, 0, 559, 533, 558, 560, 561, 557, 562,
	563, 544, 456, 0, 497, 555, 554, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 242, 0, 283, 221, 522, 502, 503,
	504, 454, 505, 500, 501, 523, 495, 519, 520, 479,
	498, 506, 518, 507, 521, 524, 525, 564, 565, 513,
	566, 510, 526, 517, 516, 508, 496, 527, 528, 482,
	481, 511, 512, 499, 309, 491, 0, 340, 341, 342,
	326, 0, 213, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 1132, 0, 0, 0, 452, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 483,
	0, 0, 301, 255, 0, 0, 0, 0, 538, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	445, 0, 0, 477, 515, 514, 464, 473, 0, 0,
	197, 465, 0, 472, 466, 470, 469, 467, 468, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 492, 0,
	448, 0, 0, 455, 474, 475, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 471, 490, 494, 209, 552, 488,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 553, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 0, 0, 332, 0, 0, 536,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	489, 0, 291, 273, 549, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 1133, 1134, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 534, 269, 0, 0, 0, 548, 529,
	531, 532, 535, 539, 540, 541, 542, 543, 545, 547,
	551, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	493, 259, 260, 261, 262, 537, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 559, 533, 558,
	560, 561, 557, 562, 563, 544, 456, 0, 497, 555,
	554, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 522, 502, 503, 504, 454, 505, 500, 501, 523,
	495, 519, 520, 479, 498, 506, 518, 507, 521, 524,
	525, 564, 565, 513, 566, 510, 526, 517, 516, 508,
	496, 527, 528, 482, 481, 511, 512, 499, 309, 491,
	0, 340, 341, 342, 326, 0, 213, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 483, 0, 0, 301, 255, 0, 0,
	0, 0, 538, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 515, 514,
	464, 473, 0, 0, 197, 465, 0, 472, 466, 470,
	469, 467, 468, 0, 530, 0, 0, 0, 0, 0,
	0, 436, 449, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 492, 0, 448, 0, 0, 455, 474, 475,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 471, 490,
	494, 209, 552, 488, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 553,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	332, 0, 0, 536, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 489, 0, 291, 273, 549, 437,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 534, 269, 0,
	0, 0, 548, 529, 531, 532, 535, 539, 540, 541,
	542, 543, 545, 547, 551, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 493, 259, 260, 261, 262, 537,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 559, 533, 558, 560, 561, 557, 562, 563, 544,
	456, 0, 497, 555, 554, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 522, 502, 503, 504, 454,
	505, 500, 501, 523, 495, 519, 520, 479, 498, 506,
	518, 507, 521, 524, 525, 564, 565, 513, 566, 510,
	526, 517, 516, 508, 496, 527, 528, 482, 481, 511,
	512, 499, 309, 491, 0, 340, 341, 342, 326, 0,
	213, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 483, 0, 0,
	301, 255, 0, 0, 0, 0, 538, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	0, 477, 515, 514, 464, 473, 0, 0, 197, 465,
	0, 472, 466, 470, 469, 467, 468, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 449, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 0, 0, 0, 0, 492, 0, 448, 0,
	0, 455, 474, 475, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 471, 490, 494, 209, 552, 488, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 553, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 332, 0, 0, 536, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 489, 0,
	291, 273, 549, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 534, 269, 0, 0, 0, 548, 529, 531, 532,
	535, 539, 540, 541, 542, 543, 545, 547, 551, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 0, 550, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 493, 259,
	260, 261, 262, 537, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 559, 533, 558, 560, 561,
	557, 562, 563, 544, 456, 0, 497, 555, 554, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 522,
	502, 503, 504, 454, 505, 500, 501, 523, 495, 519,
	520, 479, 498, 506, 518, 507, 521, 524, 525, 564,
	565, 513, 566, 510, 526, 517, 516, 508, 496, 527,
	528, 482, 481, 511, 512, 499, 0, 0, 0, 340,
	341, 342, 326, 0, 213, 132, 309, 38, 122, 102,
	0, 0, 0, 0, 0, 0, 0, 271, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 301, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 343, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 352, 259, 260, 261, 262, 372, 374, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	103, 283, 221, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 0, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	309, 0, 0, 340, 341, 342, 326, 0, 213, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 889,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 301, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 877,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 1737, 1739, 1740,
	1741, 1742, 1743, 1744, 0, 1748, 1745, 1746, 1747, 268,
	0, 1732, 1733, 1734, 1735, 875, 1718, 1738, 0, 1719,
	267, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1736, 279, 245, 280, 232, 257, 256, 258,
	900, 902, 904, 906, 909, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 1731, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 343, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 234, 275, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	325, 337, 354, 357, 0, 0, 0, 185, 356, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 352, 259, 260, 261,
	262, 226, 0, 202, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 222, 228, 0, 230, 201, 274, 224,
	334, 237, 0, 360, 0, 0, 0, 0, 266, 233,
	299, 238, 244, 287, 333, 272, 292, 199, 324, 300,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 899, 242, 0, 283, 221, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 0,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 309, 0, 0, 340, 341, 342,
	326, 0, 213, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 301, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 2166, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2170, 332, 0, 0, 0,
	2163, 0, 2162, 305, 2164, 2167, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 2168, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 343, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	352, 259, 260, 261, 262, 226, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 0, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 309, 0,
	0, 340, 341, 342, 326, 0, 213, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 301, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	1391, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 780, 781, 782,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	343, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 352, 259, 260, 261, 262, 226,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 0, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 309, 0, 0, 340, 341, 342, 326, 0,
	213, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 659, 0, 241, 0, 0, 0, 0, 0, 0,
	301, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 667, 668, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 644, 330, 192,
	643, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 657, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 658, 328, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 661, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	669, 664, 665, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 132, 309, 0, 340,
	341, 342, 326, 0, 213, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 91, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 1412, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 103, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 132, 309, 0, 340, 341, 342, 326, 0, 213,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 91, 0, 0,
	301, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 1403,
	0, 140, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 352, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 103, 283, 221, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 132, 309, 0, 340,
	341, 342, 326, 0, 213, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 91, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 103, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 326, 0, 213,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 667, 668, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 644, 330, 192, 643,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 669,
	664, 665, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 1029, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 1027, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 1023, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 1027, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	0, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 0,
	319, 347, 209, 338, 0, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	361, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 348, 0, 291, 273, 0,
	0, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 326,
	0, 213, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2683, 0, 140, 515, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 0, 319, 347, 209, 338, 0, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 361, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 348,
	0, 291, 273, 0, 0, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 326, 0, 213, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 1027,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1025, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 326, 0, 213,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 1027, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2307, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 0, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 1834, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 1027, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2786, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 0,
	319, 347, 209, 338, 0, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	361, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 348, 0, 291, 273, 0,
	0, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 326,
	0, 213, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 515, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 0, 319, 347, 209, 338, 0, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 361, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 348,
	0, 291, 273, 0, 0, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 326, 0, 213, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2695, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 326, 0, 213,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2423, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 0, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 2620, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 0,
	319, 347, 209, 338, 0, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	361, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 2434, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 348, 0, 291, 273, 0,
	0, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 326,
	0, 213, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 0, 319, 347, 209, 338, 0, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 361, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 348,
	0, 291, 273, 0, 0, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 326, 0, 213, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 309, 0, 0, 340, 341, 342, 326, 0, 213,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 0, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 242, 0, 283, 221, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	0, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 309, 0, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 301, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 2174, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	306, 322, 198, 297, 335, 203, 304, 193, 270, 293,
	0, 0, 190, 320, 303, 252, 235, 236, 189, 0,
	288, 214, 227, 210, 268, 0, 319, 347, 209, 338,
	0, 330, 192, 0, 329, 267, 316, 321, 253, 247,
	191, 318, 251, 246, 239, 218, 361, 231, 279, 245,
	280, 232, 257, 256, 258, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 305, 0, 0, 240, 0, 0,
	0, 348, 0, 291, 273, 0, 0, 0, 289, 243,
	317, 281, 323, 307, 331, 285, 282, 183, 308, 212,
	254, 194, 196, 208, 215, 217, 219, 220, 263, 264,
	276, 296, 310, 311, 312, 211, 204, 290, 205, 229,
	206, 184, 298, 207, 186, 277, 315, 0, 225, 286,
	250, 187, 249, 278, 314, 313, 195, 339, 345, 346,
	350, 0, 351, 0, 0, 0, 359, 0, 0, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 344,
	223, 180, 181, 327, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 343, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 234, 275,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 325, 337, 354, 357, 0,
	0, 0, 185, 356, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 352, 259, 260, 261, 262, 226, 0, 202, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 222, 228,
	0, 230, 201, 274, 224, 334, 237, 0, 360, 0,
	0, 0, 0, 266, 233, 299, 238, 244, 287, 333,
	272, 292, 199, 324, 300, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 242, 0,
	283, 221, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 309,
	0, 0, 340, 341, 342, 326, 0, 213, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 301, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 1027, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 306, 322, 198, 297, 335, 203,
	304, 193, 270, 293, 0, 0, 190, 320, 303, 252,
	235, 236, 189, 0, 288, 214, 227, 210, 268, 0,
	319, 347, 209, 338, 0, 330, 192, 0, 329, 267,
	316, 321, 253, 247, 191, 318, 251, 246, 239, 218,
	361, 231, 279, 245, 280, 232, 257, 256, 258, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 305, 0,
	0, 240, 0, 0, 0, 348, 0, 291, 273, 0,
	0, 0, 289, 243, 317, 281, 323, 307, 331, 285,
	282, 183, 308, 212, 254, 194, 196, 208, 215, 217,
	219, 220, 263, 264, 276, 296, 310, 311, 312, 211,
	204, 290, 205, 229, 206, 184, 298, 207, 186, 277,
	315, 0, 225, 286, 250, 187, 249, 278, 314, 313,
	195, 339, 345, 346, 350, 0, 351, 0, 0, 0,
	359, 0, 0, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 344, 223, 180, 181, 327, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 343, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 234, 275, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 325,
	337, 354, 357, 0, 0, 0, 185, 356, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 352, 259, 260, 261, 262,
	226, 0, 202, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 222, 228, 0, 230, 201, 274, 224, 334,
	237, 0, 360, 0, 0, 0, 0, 266, 233, 299,
	238, 244, 287, 333, 272, 292, 199, 324, 300, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 242, 0, 283, 221, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 0, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 309, 0, 0, 340, 341, 342, 326,
	0, 213, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 301, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 306, 322,
	198, 297, 335, 203, 304, 193, 270, 293, 0, 0,
	190, 320, 303, 252, 235, 236, 189, 0, 288, 214,
	227, 210, 268, 0, 319, 347, 209, 338, 0, 330,
	192, 0, 329, 267, 316, 321, 253, 247, 191, 318,
	251, 246, 239, 218, 361, 231, 279, 245, 280, 232,
	257, 256, 258, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 305, 0, 0, 240, 0, 0, 0, 348,
	0, 291, 273, 0, 0, 0, 289, 243, 317, 281,
	323, 307, 331, 285, 282, 183, 308, 212, 254, 194,
	196, 208, 215, 217, 219, 220, 263, 264, 276, 296,
	310, 311, 312, 211, 204, 290, 205, 229, 206, 184,
	298, 207, 186, 277, 315, 0, 225, 286, 250, 187,
	249, 278, 314, 313, 195, 339, 345, 346, 350, 0,
	351, 0, 0, 0, 359, 0, 0, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 344, 223, 180,
	181, 327, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 343, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 234, 275, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 325, 337, 354, 357, 0, 0, 0,
	185, 356, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 352,
	259, 260, 261, 262, 226, 0, 202, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 222, 228, 0, 230,
	201, 274, 224, 334, 237, 0, 360, 0, 0, 0,
	0, 266, 233, 299, 238, 244, 287, 333, 272, 292,
	199, 324, 300, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 242, 0, 283, 221,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 309, 0, 0,
	340, 341, 342, 326, 0, 213, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 301, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 1843,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 306, 322, 198, 297, 335, 203, 304, 193,
	270, 293, 0, 0, 190, 320, 303, 252, 235, 236,
	189, 0, 288, 214, 227, 210, 268, 0, 319, 347,
	209, 338, 0, 330, 192, 0, 329, 267, 316, 321,
	253, 247, 191, 318, 251, 246, 239, 218, 361, 231,
	279, 245, 280, 232, 257, 256, 258, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 305, 0, 0, 240,
	0, 0, 0, 348, 0, 291, 273, 0, 0, 0,
	289, 243, 317, 281, 323, 307, 331, 285, 282, 183,
	308, 212, 254, 194, 196, 208, 215, 217, 219, 220,
	263, 264, 276, 296, 310, 311, 312, 211, 204, 290,
	205, 229, 206, 184, 298, 207, 186, 277, 315, 0,
	225, 286, 250, 187, 249, 278, 314, 313, 195, 339,
	345, 346, 350, 0, 351, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 344, 223, 180, 181, 327, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 343,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	234, 275, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 325, 337, 354,
	357, 0, 0, 0, 185, 356, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 352, 259, 260, 261, 262, 226, 0,
	202, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	222, 228, 0, 230, 201, 274, 224, 334, 237, 0,
	360, 0, 0, 0, 0, 266, 233, 299, 238, 244,
	287, 333, 272, 292, 199, 324, 300, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	242, 0, 283, 221, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 0, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 0, 0, 0, 340, 341, 342, 326, 309, 213,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 301, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	343, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 352, 259, 260, 261, 262, 226,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 0, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 309, 0, 0, 340, 341, 342, 326, 0,
	213, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	301, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 1027, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 1306, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 352, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 309, 0, 0, 340,
	341, 342, 326, 0, 213, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 301, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 208, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 343, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 352, 259, 260, 261, 262, 226, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 0, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	309, 0, 0, 340, 341, 342, 326, 0, 213, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 301, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	390, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 343, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 234, 275, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	325, 337, 354, 357, 0, 0, 0, 185, 356, 0,
	0, 0, 0, 0, 0, 391, 328, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 352, 259, 260, 261,
	262, 226, 0, 202, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 222, 228, 0, 230, 201, 274, 224,
	334, 237, 0, 360, 0, 0, 0, 0, 266, 233,
	299, 238, 244, 287, 333, 272, 292, 199, 324, 300,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 242, 0, 283, 221, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 0,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 309, 0, 0, 340, 341, 342,
	326, 0, 213, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 301, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 306,
	322, 198, 297, 335, 203, 304, 193, 270, 293, 0,
	0, 190, 320, 303, 252, 235, 236, 189, 0, 288,
	214, 227, 210, 268, 0, 319, 347, 209, 338, 0,
	330, 192, 0, 329, 267, 316, 321, 253, 247, 191,
	318, 251, 246, 239, 218, 361, 231, 279, 245, 280,
	232, 257, 256, 258, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 332, 0, 0, 0,
	0, 0, 0, 305, 0, 0, 240, 0, 0, 0,
	348, 0, 291, 273, 0, 0, 0, 289, 243, 317,
	281, 323, 307, 331, 285, 282, 183, 308, 212, 254,
	194, 196, 208, 215, 217, 219, 220, 263, 264, 276,
	296, 310, 311, 312, 211, 204, 290, 205, 229, 206,
	184, 298, 207, 186, 277, 315, 0, 225, 286, 250,
	187, 249, 278, 314, 313, 195, 339, 345, 346, 350,
	0, 351, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 344, 223,
	180, 181, 327, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 343, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 234, 275, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 325, 337, 354, 357, 0, 0,
	0, 185, 356, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	352, 259, 260, 261, 262, 226, 0, 202, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 222, 228, 0,
	230, 201, 274, 224, 334, 237, 0, 360, 0, 0,
	0, 0, 266, 233, 299, 238, 244, 287, 333, 272,
	292, 199, 324, 300, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 242, 0, 283,
	221, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 0, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 309, 0,
	0, 340, 341, 342, 326, 0, 213, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 216, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 301, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 306, 322, 198, 297, 335, 203, 304,
	193, 270, 293, 0, 0, 190, 320, 303, 252, 235,
	236, 189, 0, 288, 214, 227, 210, 268, 0, 319,
	347, 209, 338, 0, 330, 192, 0, 329, 267, 316,
	321, 253, 247, 191, 318, 251, 246, 239, 218, 361,
	231, 279, 245, 280, 232, 257, 256, 258, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	240, 0, 0, 0, 348, 0, 291, 273, 0, 0,
	0, 289, 243, 317, 281, 323, 307, 331, 285, 282,
	183, 308, 212, 254, 194, 196, 208, 215, 217, 219,
	220, 263, 264, 276, 296, 310, 311, 312, 211, 204,
	290, 205, 229, 206, 184, 298, 207, 186, 277, 315,
	0, 225, 286, 250, 187, 249, 278, 314, 313, 195,
	339, 345, 346, 350, 0, 351, 0, 0, 0, 359,
	0, 0, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 344, 223, 180, 181, 327, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	343, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 234, 275, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 325, 337,
	354, 357, 0, 0, 0, 185, 356, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 352, 259, 260, 261, 262, 226,
	0, 202, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 222, 228, 0, 230, 201, 274, 224, 334, 237,
	0, 360, 0, 0, 0, 0, 266, 233, 299, 238,
	244, 287, 333, 272, 292, 199, 324, 300, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 242, 0, 283, 221, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 0, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 309, 0, 0, 340, 341, 342, 326, 0,
	213, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	301, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 234, 275, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 352, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 0, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 0, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 309, 0, 0, 340,
	341, 342, 326, 0, 213, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 301, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 306, 322, 198, 297, 335, 203, 304, 193, 270,
	293, 0, 0, 190, 320, 303, 252, 235, 236, 189,
	0, 288, 214, 227, 210, 268, 0, 319, 347, 209,
	338, 0, 330, 192, 0, 329, 267, 316, 321, 253,
	247, 191, 318, 251, 246, 239, 218, 361, 231, 279,
	245, 280, 232, 257, 256, 258, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 240, 0,
	0, 0, 348, 0, 291, 273, 0, 0, 0, 289,
	243, 317, 281, 323, 307, 331, 285, 282, 183, 308,
	212, 254, 194, 196, 430, 215, 217, 219, 220, 263,
	264, 276, 296, 310, 311, 312, 211, 204, 290, 205,
	229, 206, 184, 298, 207, 186, 277, 315, 0, 225,
	286, 250, 187, 249, 278, 314, 313, 195, 339, 345,
	346, 350, 0, 351, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	344, 223, 180, 181, 327, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 343, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 234,
	275, 0, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 325, 337, 354, 357,
	0, 0, 0, 185, 356, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 352, 259, 260, 261, 262, 226, 0, 202,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 222,
	228, 0, 230, 201, 274, 224, 334, 237, 0, 360,
	0, 0, 0, 0, 266, 233, 299, 238, 244, 287,
	333, 272, 292, 199, 324, 300, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 242,
	0, 283, 221, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 0, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	309, 0, 0, 340, 341, 342, 326, 0, 213, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 216, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 301, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	702, 703, 1815, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 306, 322, 198, 297, 335,
	203, 304, 193, 270, 293, 0, 0, 190, 320, 303,
	252, 235, 236, 189, 0, 288, 214, 227, 210, 268,
	0, 319, 347, 209, 338, 0, 330, 192, 0, 329,
	267, 316, 321, 253, 247, 191, 318, 251, 246, 239,
	218, 361, 231, 279, 245, 280, 232, 257, 256, 258,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 305,
	0, 0, 240, 0, 0, 0, 348, 0, 291, 273,
	0, 0, 0, 289, 243, 317, 281, 323, 307, 331,
	285, 282, 183, 308, 212, 254, 194, 196, 208, 215,
	217, 219, 220, 263, 264, 276, 296, 310, 311, 312,
	211, 204, 290, 205, 229, 206, 184, 298, 207, 186,
	277, 315, 0, 225, 286, 250, 187, 249, 278, 314,
	313, 195, 339, 345, 346, 350, 0, 351, 0, 0,
	0, 359, 0, 0, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 344, 223, 180, 181, 327, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 343, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 234, 275, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	325, 337, 354, 357, 0, 0, 0, 185, 356, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 352, 259, 260, 261,
	262, 226, 0, 202, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 222, 228, 0, 230, 201, 274, 224,
	334, 237, 0, 360, 0, 0, 0, 0, 266, 233,
	299, 238, 244, 287, 333, 272, 292, 199, 324, 300,
	248, 309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 301,
	255, 182, 0, 242, 0, 283, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 702, 703, 1815, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	326, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 306, 322, 198, 297,
	335, 203, 304, 193, 270, 293, 0, 0, 190, 320,
	303, 252, 235, 236, 189, 0, 288, 214, 227, 210,
	268, 0, 319, 347, 209, 338, 0, 330, 192, 0,
	329, 267, 316, 321, 253, 247, 191, 318, 251, 246,
	239, 218, 361, 231, 279, 245, 280, 232, 257, 256,
	258, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	305, 0, 0, 240, 0, 0, 0, 348, 0, 291,
	273, 0, 0, 0, 289, 243, 317, 281, 323, 307,
	331, 285, 282, 183, 308, 212, 254, 194, 196, 208,
	215, 217, 219, 220, 263, 264, 276, 296, 310, 311,
	312, 211, 204, 290, 205, 229, 206, 184, 298, 207,
	186, 277, 315, 0, 225, 286, 250, 187, 249, 278,
	314, 313, 195, 339, 345, 346, 350, 0, 351, 0,
	0, 0, 359, 0, 0, 0, 0, 0, 353, 0,
	0, 0, 0, 0, 0, 344, 223, 180, 181, 327,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 343, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 234, 275, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 325, 337, 354, 357, 0, 0, 0, 185, 356,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 352, 259, 260,
	261, 262, 226, 0, 202, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 222, 228, 0, 230, 201, 274,
	224, 334, 237, 0, 360, 0, 0, 0, 0, 266,
	233, 299, 238, 244, 287, 333, 272, 292, 199, 324,
	300, 248, 309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	301, 255, 182, 0, 242, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 702, 703, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 326, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 306, 322, 198,
	297, 335, 203, 304, 193, 270, 293, 0, 0, 190,
	320, 303, 252, 235, 236, 189, 0, 288, 214, 227,
	210, 268, 0, 319, 347, 209, 338, 0, 330, 192,
	0, 329, 267, 316, 321, 253, 247, 191, 318, 251,
	246, 239, 218, 361, 231, 279, 245, 280, 232, 257,
	256, 258, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 240, 0, 0, 0, 348, 0,
	291, 273, 0, 0, 0, 289, 243, 317, 281, 323,
	307, 331, 285, 282, 183, 308, 212, 254, 194, 196,
	208, 215, 217, 219, 220, 263, 264, 276, 296, 310,
	311, 312, 211, 204, 290, 205, 229, 206, 184, 298,
	207, 186, 277, 315, 0, 225, 286, 250, 187, 249,
	278, 314, 313, 195, 339, 345, 346, 350, 0, 351,
	0, 0, 0, 359, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 344, 223, 180, 181,
	327, 0, 269, 132, 0, 38, 122, 102, 0, 0,
	0, 0, 0, 265, 343, 0, 0, 0, 0, 294,
	0, 0, 0, 127, 0, 234, 275, 0, 295, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 302, 325, 337, 354, 357, 0, 0, 0, 185,
	356, 0, 0, 0, 77, 0, 0, 0, 328, 0,
	129, 0, 336, 0, 0, 0, 0, 0, 352, 259,
	260, 261, 262, 226, 0, 202, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 222, 228, 0, 230, 201,
	274, 224, 334, 237, 0, 360, 0, 889, 0, 0,
	266, 233, 299, 238, 244, 287, 333, 272, 292, 199,
	324, 300, 248, 0, 0, 0, 0, 0, 123, 124,
	0, 125, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 242, 0, 283, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 121, 130, 0,
	75, 0, 0, 0, 0, 0, 0, 877, 0, 340,
	341, 342, 326, 889, 213, 0, 0, 120, 114, 113,
	0, 0, 0, 0, 44, 897, 901, 903, 905, 907,
	908, 910, 0, 914, 911, 912, 913, 0, 0, 892,
	893, 894, 895, 875, 876, 898, 0, 878, 610, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 890,
	896, 0, 0, 0, 0, 0, 0, 0, 900, 902,
	904, 906, 909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 117, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 891, 0, 0, 0, 0, 642,
	0, 0, 0, 877, 0, 0, 0, 867, 0, 0,
	0, 85, 0, 0, 0, 119, 0, 86, 0, 889,
	0, 897, 901, 903, 905, 907, 908, 910, 0, 914,
	911, 912, 913, 0, 0, 892, 893, 894, 895, 875,
	876, 898, 0, 878, 0, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 890, 896, 0, 0, 0,
	0, 0, 0, 0, 900, 902, 904, 906, 909, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 644, 88,
	37, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 629, 0, 1903, 1904, 877,
	0, 0, 0, 611, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 897, 901, 903,
	905, 907, 908, 910, 0, 914, 911, 912, 913, 634,
	0, 892, 893, 894, 895, 875, 876, 898, 103, 878,
	2379, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 890, 896, 0, 0, 0, 0, 0, 2379, 0,
	900, 902, 904, 906, 909, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 90, 94, 0,
	0, 0, 1765, 0, 0, 0, 891, 0, 0, 0,
	628, 2806, 0, 0, 0, 0, 0, 0, 0, 2379,
	609, 2361, 0, 0, 0, 0, 0, 0, 0, 0,
	899, 612, 637, 0, 0, 0, 0, 0, 0, 2361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 638, 0,
	2361, 0, 0, 0, 0, 0, 2462, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 627, 641, 0, 0,
	0, 624, 622, 621, 0, 626, 613, 614, 615, 616,
	617, 0, 639, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 636, 899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2369, 0, 0,
	0, 630, 0, 0, 2365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2369, 0, 2358, 0, 0,
	0, 2360, 2362, 2364, 0, 2366, 2367, 2368, 2370, 2371,
	2372, 2374, 2375, 2376, 2377, 2358, 0, 0, 0, 2360,
	2362, 2364, 0, 2366, 2367, 2368, 2370, 2371, 2372, 2374,
	2375, 2376, 2377, 0, 0, 2365, 410, 0, 409, 416,
	406, 0, 0, 0, 0, 0, 2369, 2380, 0, 0,
	413, 414, 0, 415, 419, 0, 0, 401, 0, 0,
	0, 0, 899, 0, 0, 2380, 2358, 424, 0, 0,
	2360, 2362, 2364, 0, 2366, 2367, 2368, 2370, 2371, 2372,
	2374, 2375, 2376, 2377, 0, 2378, 0, 0, 0, 0,
	410, 0, 409, 416, 406, 0, 428, 0, 0, 429,
	0, 0, 2357, 2378, 413, 414, 0, 415, 419, 0,
	0, 401, 0, 0, 0, 410, 2380, 409, 416, 406,
	2357, 424, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 2373, 415, 419, 0, 0, 401, 0, 2363, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 2387, 2373,
	428, 0, 0, 429, 2378, 0, 2363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2357, 2397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2390, 0, 0, 0, 0,
	0, 2385, 0, 0, 0, 0, 2400, 2401, 0, 0,
	2373, 0, 2386, 0, 0, 0, 0, 2363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	404, 403, 0, 0, 0, 0, 0, 2391, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 0, 0, 427, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 404, 403, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 0, 0, 402, 404,
	403, 427, 0, 0, 0, 0, 0, 408, 405, 0,
	0, 0, 0, 0, 0, 2399, 0, 2162, 0, 412,
	0, 0, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 2393, 0, 0, 0, 0, 0, 407, 411,
	417, 0, 418, 420, 0, 0, 421, 422, 423, 0,
	0, 425, 426, 0, 2392, 2394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 411, 417, 0, 418, 420, 0, 0,
	421, 422, 423, 0, 0, 425, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 411, 417,
	0, 418, 420, 0, 2402, 421, 422, 423, 0, 0,
	425, 426, 0, 0, 0, 0, 2388, 0, 0, 0,
	0, 0, 2398,
}

var yyPact = [...]int{
	29153, -1000, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -201, 26497, 26497,
	-1000, -1000, 1673, -1000, 25993, 9855, 27001, 204, 203, 27001,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 475, -1000, 25489, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 421, 29896, 27505, 272, 7829,
	27001, -267, -1000, 2378, -132, -1000, -1000, -1000, -1000, -1000,
	-1000, 289, 631, 24985, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	29382, 134, 631, 622, 630, 755, 755, 11871, 2378, 268,
	85, -1000, 743, 29153, 28851, 1603, 391, 27001, -1000, 1059,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 391, -1000, -1000, -1000, 2378, 2378, -1000, 27001,
	27001, 10, 1162, -1000, 255, 250, 248, 1057, -1000, -1000,
	-1000, -1000, -1000, 2361, -1000, 27001, 27001, 1818, 27001, -1000,
	1404, 356, 29950, 2194, 923, 550, 2063, -1000, -1000, 2042,
	-1000, 135, 138, 144, 284, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 130, -1000, 2189, -1000, -1000, 127, -1000, -1000,
	122, -1000, -1000, -1000, -50, -1000, -1000, -1000, -1000, -1000,
	-136, -1000, -1000, -136, 667, 1318, 7829, -1000, 1503, -1000,
	1478, -1000, -1000, -1000, -1000, 5300, 9341, 9341, 9341, 9341,
	-1000, -1000, 1910, 7829, 2040, 1900, 2034, -1000, -1000, -1000,
	-1000, 1056, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1598, 8837, -1000, 2032, 2031, 2029,
	2028, 2027, 2010, 1999, 1996, 1995, 1994, 1777, 1993, 1596,
	1595, 1991, 1989, 1988, 1594, 1777, 1777, 1975, 1974, 1965,
	1960, 1956, 1953, 1952, 1951, 1950, 1948, 1947, 1942, 1940,
	1939, 1936, 1934, 1931, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 29343, -1000, 1055,
	753, -1000, 1930, 2160, 2279, 1776, 2326, 2252, 2249, 2233,
	2230, 1395, -1000, -1000, 27001, 27001, 88, 419, 419, 419,
	451, 419, 471, 470, -1000, -1000, -1000, -1000, -1000, -1000,
	558, -1000, -1000, -1000, -1000, 892, 27001, -1000, 1846, 1114,
	2276, 362, 360, 238, -1000, 1204, 1204, 1204, 1114, 271,
	353, 2279, 2279, -61, -66, 1114, 1114, -66, 1114, 89,
	-1000, -1000, -1000, 1204, 359, 1204, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2261, 2255, -179, 273, 421, 431, -1000,
	-143, -1000, -1000, 694, -1000, 589, -1000, 1404, 348, 347,
	914, 1203, -1000, 1126, 27001, 27001, 27001, 1126, 1126, 14898,
	14394, -1000, 2279, 1776, -1000, 1720, 1816, 1719, 1776, 421,
	421, 421, 421, 421, 421, 421, 27001, 27001, 6812, 6812,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 310, -1000,
	-1000, -1000, -1000, -1000, 2175, 264, 1925, -1000, 27001, 263,
	2279, 2160, 2279, -1000, -1000, 1054, 1394, 1579, -1000, -1000,
	255, 1112, -1000, 669, -1000, -1000, -1000, -1000, 27001, 243,
	-1000, -1000, 1569, 1921, -1000, 384, 706, 1073, -1000, 147,
	29975, 22458, 1404, 22458, 27001, -1000, -1000, -1000, -1000, -1000,
	-1000, -51, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 103, -1000, 103, 7829, 7829,
	7829, 7829, 7829, -1000, 519, 8333, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9341, 9341, 9341, 9341, 9341, 9341, 9341,
	9341, 9341, 9341, 9341, 9341, 1905, 1176, 9341, 9341, 9341,
	1816, 2314, 900, 178, -1000, -1000, -1000, -1000, -1000, 1133,
	1318, 7829, 7829, 7829, 27001, -1000, 1261, 7829, 7829, 86,
	7829, 2227, 3787, 27001, 7829, -1000, 1717, 1715, -1000, -1000,
	1258, 7829, -1000, -1000, 7829, 9341, 7829, -1000, -1000, -1000,
	101, 2227, 2227, 7829, 7829, 2227, 2227, 2227, 1171, 2227,
	2227, 2227, 2227, 2227, 2227, 2227, 2227, 27001, 2138, 108,
	-1000, -1000, -1000, 1805, -1000, 1855, 1855, 1805, 1805, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1896, 1917,
	-1000, -1000, 1850, 1850, 1850, 1805, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1888, 1888, 1895, 1888, 27001, 2279, -267, 6308, -1000,
	-273, 2160, 7829, -1000, -1000, 7829, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1578, 2215, -1000, 1915, 1053, 442,
	419, -1000, 27001, 1175, 22458, 1404, 1466, 27001, 419, 419,
	431, -1000, 27001, 892, 2213, 27001, 2334, 9341, 24481, 1204,
	1114, -1000, 27001, -1000, -1000, -1000, 1204, 27001, 1204, 2334,
	1204, -1000, -1000, -1000, 1114, 1114, -1000, -1000, -1000, -1000,
	1204, 1204, -1000, -1000, -53, 2334, 2334, -88, -1000, 27001,
	27001, 419, 27001, -1000, 27001, -1000, -1000, 437, 27001, 27001,
	22458, 20946, -1000, -122, 615, 571, 579, -1000, -1000, 381,
	364, 13890, 324, 22458, 4795, -1000, -1000, 1126, 1126, 1126,
	4795, 4795, 949, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2160, -1000, -1000, -1000, -1000, -1000, 27001, 22458, 1404, 27001,
	27001, 27001, 28851, -1000, 1913, 918, -1000, -1000, 11367, 1052,
	918, 1575, 27001, 1570, 2059, 2122, -1000, 1911, 12881, 27001,
	-1000, -1000, -268, -1000, 12376, 27001, 2160, -1000, 2160, 2825,
	-1000, 2275, -1000, 255, 195, -1000, -1000, -1000, -1000, -1000,
	-1000, 1049, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 891, -1000, 27001, -1000, -1000, 147, 22458, 1143, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 154, -1000, -1000, 165,
	-1000, 435, 57, 1111, -1000, -1000, 76, 162, 504, 76,
	1318, -1000, 1228, 1228, 1181, -1000, 423, -1000, -1000, -1000,
	-1000, 1910, -1000, -1000, -1000, 2244, 1539, -1000, 1155, 1155,
	1026, 1026, 1026, 1026, 1026, 1326, 1326, -1000, -1000, -1000,
	5300, 1905, 9341, 9341, 9341, 406, 2377, 2086, -1000, 7829,
	1213, -1000, 7829, 1273, 2287, 971, 1048, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1714, 667, 1713,
	1408, 2341, 1708, 7829, -1000, -1000, 1280, 7325, -1000, -1000,
	-1000, 1706, 1024, 1705, -1000, -1000, -1000, 1702, 785, 1690,
	1441, 1688, 883, 7829, 7829, 1110, 1098, 7829, 7829, 7829,
	7829, 1682, 7829, 7829, 7829, 7829, 7829, 7829, 7829, 7829,
	-1000, 7829, 90, -1000, -1000, -1000, -1000, 1392, -1000, 1385,
	-1000, -1000, -1000, 1562, 1562, -1000, 1384, -1000, -1000, -1000,
	-1000, 1378, -1000, -1000, 1377, -1000, -1000, -1000, -1000, 1082,
	-1000, 1318, -1000, 1560, -1000, 837, 882, -1000, 1324, -1000,
	-1000, 27001, 10359, 27001, 419, 27001, 81, -1000, 2181, 885,
	-1000, 57, 713, 1762, 2136, 27001, 27001, 23977, -1000, 1903,
	1077, -1000, -1000, 7829, -1000, 1724, 1404, 27001, 2334, -1000,
	-1000, -1000, -1000, 28851, -1000, -1000, -1000, 27001, 2334, 2334,
	1114, 1204, 1204, -1000, -1000, 1204, -1000, 1016, -1000, 27001,
	-1000, -1000, 421, 80, 2238, 885, 2452, 916, -1000, -1000,
	-1000, -1000, 28009, 28009, 13386, 28009, -1000, 1117, -1000, -1000,
	609, 587, 563, -1000, -1000, 434, -1000, -1000, 713, -1000,
	-1000, -1000, 1901, 1159, -1000, -1000, 1900, -1000, 4795, 4795,
	4795, -1000, -1000, 16914, -1000, -1000, 876, 713, 2052, 838,
	-1000, 838, -1000, 10359, 2334, 6812, -1000, 20946, -1000, -1000,
	23466, -1000, 22962, 2334, -278, 751, -79, -1000, 2143, -268,
	27001, 27001, 1067, 167, -1000, 1066, -1000, 688, -1000, 1898,
	-1000, 1042, 2118, 701, -1000, 1158, -1000, -1000, -1000, 1009,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9, -1000, -1000, 27001, 1569, 1041, 1143, 776, -1000,
	426, 1000, 994, -1000, 22458, 109, 22458, -1000, 22458, -1000,
	-1000, 251, -1000, 27001, 2159, -1000, -1000, -1000, 1552, -297,
	2157, -1000, -1000, -1000, -1000, -1000, 1038, -1000, 406, 2377,
	1966, -1000, 9341, 9341, 2248, 1166, -1000, 7829, 1210, 29237,
	-1000, 982, 15906, 27001, -1000, -1000, 7829, 7829, -1000, 2241,
	-1000, 7829, 7829, 1390, -1000, 27001, -1000, -1000, -1000, 15906,
	-1000, 9341, -1000, 7829, 156, 2220, -42, -42, 2185, 2180,
	2128, 1035, -42, 2099, 2080, 2053, 1760, 1741, 1726, 1722,
	1674, 1318, -1000, -1000, 1681, 1680, 1033, -1000, 1031, 1679,
	1027, 1025, 6308, -1000, -79, 7829, 7829, 7829, 2126, -1000,
	-1000, 111, 1678, 801, -1000, -1000, -1000, 29459, 1855, 1805,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1896,
	-1000, -1000, 1850, 1850, 1850, 1805, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1888, 1888, 1895, 1888, -1000,
	27001, 1885, -46, 1132, -1000, 386, 22458, 333, -1000, 2051,
	229, -1000, 2136, -1000, 698, -1000, 1884, 1883, 27001, 881,
	-1000, 974, 29153, -1000, 27001, 1318, -1000, 1404, -1000, 1114,
	-1000, -1000, 2334, 942, -1000, -1000, 2334, 1114, 1114, 1204,
	27001, -1000, 27001, -46, 1132, 153, 386, 27001, 20946, 20946,
	20946, 20946, -1000, 2096, 2083, -1000, 2097, 2084, 2105, 27001,
	20946, 1846, -1000, 28430, -1000, -1000, -1000, -1000, -1000, 1816,
	1021, 2179, 577, 7829, -1000, -1000, -1000, 586, 22458, 1559,
	324, -1000, -1000, -1000, -1000, -1000, 27001, 27001, 1677, 2332,
	-1000, 790, -1000, -1000, 969, -1000, 2332, -1000, 1365, 1558,
	-21, -9, 1223, 688, 701, 1019, -1000, 167, 27001, 2116,
	1881, -1000, 27001, -268, 6308, 266, -268, 27001, 6308, 2825,
	1353, -1000, -1000, -1000, 2336, 22458, 1404, 1091, 1128, -1000,
	121, -1000, 150, 377, 1557, -1000, 461, 97, -1000, 1150,
	1552, 453, -1000, -1000, 9341, -1000, -1000, -1000, -1000, 1318,
	7829, 1675, -1000, 559, 559, 1671, -1000, 1805, 1855, -1000,
	1805, 1850, 1805, 559, 559, 1669, -1000, 1554, 1670, -1000,
	1662, 1616, 7829, -1000, 1667, 1928, 893, 1666, 1556, -42,
	-1000, 1848, -1000, -42, -42, -42, -42, -1000, -42, -42,
	-42, -42, -42, -42, -42, -42, -1000, -1000, -1000, 1555,
	-1000, -1000, -1000, 1352, -1000, 1343, -1000, -21, 1318, 1318,
	-1000, -1000, 2112, 1553, 489, 10359, 2125, 1846, 10863, 1327,
	-1000, -1000, 21954, -1000, 363, -1000, -1000, -1000, 448, 104,
	1341, 355, -1000, 1608, 27001, -1000, -1000, -1000, -1000, -1000,
	1132, 1132, 1132, 10863, 10863, 391, 722, 964, 20946, 27001,
	-1000, 20442, 1665, -1000, 713, 2334, -1000, 27001, -1000, 2334,
	2334, 1114, -1000, 1846, 1327, 21954, 1140, 363, 896, -1000,
	1138, 2046, 2050, 2046, -1000, -1000, -1000, -1000, 2075, -1000,
	2064, -1000, -1000, 896, -1000, -1000, -1000, -1000, -1000, 577,
	-1000, 2274, 570, 570, 570, 1664, -1000, 776, 1663, -1000,
	-1000, -1000, -1000, -1000, 2329, 2325, 21450, 2329, -1000, -278,
	-276, 1, 2324, 2317, 2387, 260, 27001, 262, -1000, -268,
	27001, -1000, -1000, 1661, 745, -268, -1000, 688, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1404, -1000, 146, -1000, -1000,
	-1000, -1000, -1000, -1000, 26, -1000, 27001, -1000, 1552, 1550,
	96, 27001, -1000, 1318, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7829,
	-1000, -1000, -1000, 1582, -1000, -1000, 7829, -42, -1000, -1000,
	383, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1636, 1635, -276, -1000, -1000, -1000,
	29459, -1000, 1174, 2211, 1633, 726, -1000, -1000, -1000, 29459,
	569, -1000, 27001, 1215, 570, 419, 570, 1205, 1845, -1000,
	-1000, -1000, 1548, 36, -1000, -1000, -1000, 1547, 1545, 1340,
	-1000, -1000, 1335, 924, 65, -1000, -1000, -1000, -1000, -1000,
	-1000, 1836, 15906, 16410, 1543, 1614, 1613, 28009, 20946, 20442,
	860, -1000, 947, -1000, -1000, -1000, 2334, -1000, -1000, 2334,
	2209, -1000, 36, 7829, -1000, 2288, 27001, 6308, -1000, -1000,
	7829, 1834, -1000, 7829, -1000, -1000, -1000, -1000, -1000, 1832,
	2121, -1000, -1000, -1000, -1000, -1000, -1000, 7829, 7829, -1000,
	-1000, -1000, -278, 1519, -1000, -1000, 2310, 1514, 1422, 27001,
	-1000, -1000, -268, -1000, 688, 983, -1000, 688, 713, -1000,
	-1000, 167, -1000, -1000, -1000, -88, 1546, -1000, 1455, -1000,
	2288, -1000, 2308, -1000, -1000, -278, -189, -1000, -1000, 260,
	29693, 10863, 29978, -1000, -1000, 27001, 27001, -1000, 27001, 27001,
	419, 7829, -1000, -1000, 239, -1000, -1000, 160, -1000, -1000,
	1317, 399, -1000, 18930, -1000, -1000, -1000, -1000, -1000, 103,
	29693, 2334, 860, 947, -1000, -1000, 1085, -1000, -1000, 260,
	-1000, 1318, 2279, -1000, -1000, 1318, 27001, 1318, 19938, -1000,
	2303, 2301, 1318, 667, -280, -1000, 1513, -3, -1000, -1000,
	701, 688, -1000, -88, -1000, -35, 40, -1000, -1000, 79,
	7829, -280, 27001, -1000, 375, 29642, -1000, 1132, 1132, 697,
	1132, 1132, 1132, 1132, 309, 281, 1132, 1132, 1132, 1132,
	1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
	1831, -1000, -1000, 29978, -1000, -1000, 1233, 9341, -1000, -1000,
	1506, 16410, 555, 554, 1814, -1000, 249, 2386, -1000, 1202,
	1196, -1000, 27001, -1000, 1813, 1676, 211, 1812, -1000, 1811,
	1807, 27001, 1401, 371, 1505, -1000, -1000, 158, -1000, -1000,
	979, -1000, 1805, 7829, -1000, -88, 375, 2288, -1000, -1000,
	-1000, 956, 952, -1000, -1000, -1000, -1000, -1000, 1804, -1000,
	2300, -1000, 428, -17, 40, -1000, 2298, -8, 2297, 2294,
	1611, -1000, 3283, -1000, -1000, -1000, 667, -1000, 2207, -1000,
	214, 2286, 29693, -1000, 1322, 1320, 1132, 1132, 1314, 1500,
	1481, 1477, 1132, 1132, 1312, 1476, 28430, 1311, 1307, 1278,
	1309, 1468, 629, 1299, 1298, 1291, 27001, 1803, 1417, -1000,
	-1000, 2377, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1277, 1793, -100, -1000, -1000, 1788, 18930,
	379, 379, 18930, 18930, 18930, 1787, 425, -1000, 22, -1000,
	-1000, -1000, 18930, 2148, 1374, -1000, 214, 2279, -1000, -1000,
	19434, 27001, 1422, 1778, 1272, 1, -18, 2285, -1000, 1422,
	2283, 1422, 1422, -1000, -1000, 4291, -270, -38, 274, 1467,
	-1000, 2282, 282, -1000, -1000, -1000, 15906, 15906, -1000, -1000,
	-1000, -1000, 1446, 1445, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 290, 27001, 950, -1000,
	1135, 1483, 7829, 1777, -185, 18930, 945, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 939, 938, 920, 18930, -1000, -1000,
	-1000, 241, -1000, 177, -1000, -1000, 2148, -1000, -1000, -1000,
	-1000, 905, -1000, -1000, 2226, 15402, -26, -1000, -1000, -1000,
	1423, -1000, 1422, -1000, -1000, 1178, -1000, -1000, -1000, -1000,
	-1000, -1000, 18426, 224, 254, 234, -1000, 398, -1000, -1000,
	-1000, -1000, -1000, -1000, 338, 899, -1000, 1417, 1412, -1000,
	1290, -1000, 2049, -1000, 52, 897, -1000, -1000, -1000, -1000,
	871, -1000, -1000, 1132, 1411, 185, -1000, -1000, -1000, -1000,
	27001, -1000, 27001, -1000, 870, -1000, -1000, -1000, 941, -1000,
	-1000, -1000, -1000, 4291, -1000, 27001, 222, 1266, 9341, 1774,
	9341, 1773, 236, 1763, -1000, -1000, -1000, -1000, -1000, 425,
	-1000, 2048, 1563, 2381, -1000, -1000, -1000, -1000, 177, 177,
	177, 177, 102, 1262, -1000, 1466, -1000, 662, -1000, 1130,
	-1000, 17922, 27001, -1000, 869, 1739, 2281, -1000, 1771, 27001,
	1574, 27001, 1728, 1125, 9341, -1000, -1000, 2375, -1000, 2367,
	560, 560, -1000, -1000, -1000, 27001, 5804, -1000, 744, -1000,
	-1000, 373, 226, -1000, 864, -1000, 855, 17418, 1256, 1391,
	-1000, -1000, -1000, 1259, 253, -1000, -1000, -1000, 1318, 27001,
	843, -1000, 1607, 217, -1000, -1000, -1000, 841, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 373, 2107, -1000, 1244, -1000,
	-1000, 29624, 501, -1000, -1000, 29624, 220, -1000, 369, 1725,
	-1000, -1000, 818, -1000, 1469, 548, 7829, -1000, 220, 29693,
	-1000, 7829, 797, -1000, 29693, 783, -1000, -1000,
}

var yyPgo = [...]int{
	0, 143, 2788, 221, 153, 148, 219, 2787, 2786, 2187,
	2181, 2785, 2784, 2783, 2782, 2781, 2779, 2777, 2776, 2774,
	2773, 2771, 2770, 2766, 2765, 2763, 2762, 2761, 2760, 2759,
	2758, 217, 2757, 2755, 2754, 2751, 2744, 2739, 2738, 2737,
	2736, 2735, 2734, 2729, 2727, 2726, 2725, 2724, 2723, 2722,
	2721, 2720, 2719, 2718, 2717, 2716, 2714, 145, 2713, 2180,
	2712, 2711, 2710, 2708, 2705, 2704, 194, 2702, 2701, 2700,
	2699, 2698, 2697, 2695, 2693, 2688, 2687, 2686, 2685, 2684,
	2683, 2680, 171, 2679, 2678, 158, 2677, 2676, 2675, 2674,
	212, 206, 65, 2673, 54, 63, 177, 218, 109, 247,
	224, 167, 170, 80, 2672, 2214, 2671, 134, 202, 130,
	27, 2670, 156, 2667, 144, 51, 37, 223, 132, 66,
	112, 108, 2666, 198, 74, 95, 100, 2665, 2664, 225,
	168, 2663, 106, 2662, 2661, 2660, 2658, 179, 111, 2657,
	70, 2656, 83, 28, 103, 29, 2655, 2654, 2651, 86,
	2650, 2649, 2648, 2647, 151, 2646, 107, 58, 2645, 2642,
	2641, 62, 2639, 35, 2638, 56, 2637, 2636, 2635, 2634,
	72, 2632, 2631, 12, 17, 19, 2630, 20, 1, 2629,
	200, 59, 96, 124, 2628, 447, 2627, 2625, 2622, 131,
	2620, 668, 2619, 2618, 2615, 2614, 10, 2613, 185, 57,
	2612, 89, 120, 2611, 61, 174, 178, 2610, 2609, 119,
	53, 82, 113, 2607, 2606, 76, 196, 15, 32, 0,
	175, 44, 2605, 2604, 2603, 233, 2602, 209, 176, 208,
	139, 227, 135, 2601, 2600, 52, 2599, 140, 87, 115,
	8, 2598, 162, 2597, 199, 157, 2595, 189, 2594, 129,
	3, 123, 2591, 2587, 30, 250, 2586, 2585, 2584, 137,
	2583, 2582, 127, 184, 2581, 2580, 2579, 25, 2578, 31,
	22, 2577, 97, 2576, 226, 181, 192, 117, 163, 147,
	125, 201, 207, 79, 133, 1210, 126, 98, 18, 2575,
	205, 2574, 215, 204, 2573, 173, 2571, 220, 378, 193,
	2564, 160, 7, 49, 34, 2563, 9, 2562, 94, 2560,
	2552, 21, 2548, 23, 2547, 2546, 2545, 2543, 6, 2542,
	2541, 2537, 2, 4, 2536, 5, 191, 48, 116, 2534,
	114, 211, 2533, 2529, 84, 2528, 2527, 222, 2526, 1205,
	2525, 2524, 2522, 2520, 2519, 2518, 2517, 71, 38, 2516,
	2504, 2490, 2489, 77, 121, 2485, 318, 190, 2484, 43,
	164, 2483, 26, 2481, 36, 33, 42, 2478, 118, 2477,
	14, 165, 2475, 2474, 16, 2473, 2472, 11, 13, 2470,
	2469, 69, 2468, 55, 41, 85, 90, 2466, 24, 75,
	122, 2465, 2463, 214, 216, 186, 2447, 141, 203, 229,
	2439, 195, 2438, 2435, 2434, 2433, 2432, 228, 2430, 1196,
	2428, 2427, 213, 60, 92, 102, 2426, 2425, 2422, 81,
	136, 105, 101, 183, 2419, 169, 2416, 2415, 99, 2414,
	2411, 2410, 2408, 2402, 2401, 2391, 210, 161, 2390,
}

//line mysql_sql.y:8402
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 434, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 88, 432, 432, 432, 433, 433,
	86, 86, 86, 75, 74, 87, 380, 380, 379, 379,
	378, 378, 377, 377, 377, 376, 376, 376, 375, 375,
	374, 374, 373, 373, 371, 371, 372, 370, 369, 369,
	369, 367, 367, 367, 363, 363, 365, 364, 364, 366,
	358, 358, 361, 361, 359, 359, 359, 359, 362, 357,
	357, 357, 356, 356, 73, 73, 73, 287, 287, 72,
	72, 301, 301, 301, 301, 301, 299, 299, 299, 299,
	299, 299, 298, 298, 297, 297, 302, 302, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 67, 67,
	67, 67, 70, 70, 70, 71, 296, 296, 296, 68,
	69, 69, 286, 286, 291, 291, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 295, 295,
	295, 293, 293, 292, 292, 294, 294, 61, 61, 61,
	64, 63, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 62, 62, 62, 62, 62, 62, 58, 58, 58,
	58, 58, 57, 57, 59, 59, 284, 284, 283, 78,
	78, 78, 78, 78, 78, 78, 77, 77, 80, 80,
	79, 81, 66, 66, 66, 66, 66, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 404, 404, 404, 406,
	406, 223, 224, 435, 226, 222, 222, 222, 400, 400,
	401, 402, 403, 403, 403, 76, 7, 7, 7, 7,
	56, 54, 60, 418, 418, 55, 425, 425, 337, 337,
	237, 237, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 340, 341,
	233, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 38, 37, 37, 37, 273, 273, 36, 436,
	436, 206, 206, 45, 46, 47, 48, 49, 50, 35,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 53,
	53, 352, 352, 438, 438, 438, 51, 52, 336, 336,
	336, 43, 42, 41, 40, 40, 34, 34, 33, 33,
	39, 230, 230, 232, 232, 228, 437, 437, 313, 313,
	231, 231, 32, 32, 32, 229, 229, 205, 227, 227,
	227, 8, 8, 6, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 18, 20, 281, 281, 278, 19, 14,
	13, 16, 12, 15, 17, 5, 5, 5, 5, 9,
	9, 10, 102, 102, 144, 144, 413, 413, 409, 409,
	410, 410, 410, 411, 411, 412, 412, 82, 346, 346,
	346, 346, 346, 346, 4, 124, 124, 125, 125, 345,
	345, 345, 345, 345, 345, 345, 431, 431, 389, 389,
	389, 390, 123, 123, 118, 118, 347, 347, 251, 391,
	391, 355, 355, 354, 354, 353, 353, 121, 121, 122,
	122, 105, 105, 91, 91, 360, 360, 360, 360, 368,
	368, 334, 334, 170, 170, 199, 199, 200, 200, 95,
	95, 96, 96, 96, 96, 96, 96, 397, 397, 399,
	399, 398, 120, 120, 116, 116, 117, 117, 117, 115,
	115, 114, 113, 113, 112, 110, 110, 110, 111, 111,
	111, 98, 98, 98, 97, 97, 97, 97, 97, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 99, 99, 405, 405, 405, 338, 338, 338, 343,
	343, 182, 182, 183, 183, 181, 181, 100, 100, 101,
	101, 101, 101, 180, 180, 179, 103, 103, 109, 108,
	108, 104, 104, 104, 104, 190, 190, 189, 189, 189,
	189, 85, 89, 89, 90, 128, 128, 188, 187, 187,
	187, 127, 127, 126, 126, 119, 119, 107, 107, 107,
	107, 186, 106, 184, 430, 430, 429, 429, 428, 426,
	426, 426, 427, 427, 427, 427, 382, 382, 382, 382,
	382, 215, 215, 215, 221, 221, 214, 214, 214, 214,
	214, 225, 220, 220, 216, 216, 217, 217, 217, 3,
	3, 3, 3, 24, 24, 24, 24, 24, 24, 30,
	136, 137, 29, 129, 129, 130, 130, 131, 131, 132,
	133, 133, 133, 135, 134, 28, 407, 407, 21, 414,
	417, 415, 415, 419, 419, 419, 420, 420, 420, 421,
	421, 22, 416, 422, 422, 422, 282, 282, 279, 280,
	280, 277, 276, 276, 276, 424, 424, 423, 423, 423,
	218, 218, 23, 272, 272, 274, 275, 275, 266, 266,
	266, 266, 27, 270, 270, 271, 271, 271, 271, 271,
	267, 267, 269, 269, 265, 265, 265, 265, 265, 26,
	264, 264, 262, 262, 260, 260, 261, 261, 259, 259,
	259, 263, 263, 25, 25, 25, 93, 92, 92, 92,
	202, 202, 201, 201, 94, 339, 339, 303, 303, 304,
	304, 304, 307, 307, 319, 319, 320, 320, 318, 318,
	325, 325, 324, 324, 323, 323, 322, 322, 321, 321,
	321, 321, 316, 316, 315, 315, 305, 305, 305, 305,
	305, 306, 306, 306, 314, 314, 317, 317, 161, 161,
	162, 162, 162, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 387, 387, 388, 164, 164, 164, 168, 168,
	168, 168, 168, 168, 163, 163, 165, 165, 145, 145,
	143, 143, 138, 138, 139, 139, 140, 140, 141, 141,
	142, 142, 142, 142, 142, 142, 289, 289, 385, 385,
	386, 386, 381, 381, 381, 384, 384, 384, 384, 384,
	383, 383, 146, 197, 197, 197, 219, 219, 219, 196,
	196, 196, 160, 160, 159, 159, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 288, 288, 234, 234, 235, 235, 177, 176, 176,
	176, 176, 176, 174, 175, 173, 173, 173, 173, 173,
	172, 172, 171, 171, 171, 268, 268, 169, 169, 167,
	167, 167, 166, 166, 166, 326, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	243, 243, 248, 248, 396, 396, 395, 147, 147, 147,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 156,
	156, 156, 311, 311, 311, 311, 311, 312, 312, 312,
	309, 309, 310, 310, 252, 253, 253, 344, 344, 308,
	308, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 351, 351,
	351, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 408, 408, 408, 392, 392, 392, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 194, 194,
	194, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 254, 254, 255, 255, 348, 348, 348,
	348, 348, 348, 349, 349, 350, 350, 350, 350, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 241, 191,
	191, 191, 256, 249, 249, 250, 250, 244, 244, 244,
	244, 244, 244, 244, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 245, 245, 247, 247, 258, 258,
	258, 257, 257, 257, 257, 257, 257, 257, 158, 158,
	158, 158, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 149, 149, 149, 149, 153, 153, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 154, 154, 154, 154, 152, 152, 152,
	152, 152, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 83, 84,
	84, 151, 198, 198, 327, 327, 330, 330, 328, 328,
	329, 331, 331, 331, 332, 332, 332, 333, 333, 333,
	335, 335, 204, 204, 204, 211, 211, 203, 203, 212,
	212, 213, 213, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 9, 10, 2, 0, 2, 1, 3,
	3, 3, 1, 3, 5, 0, 2, 3, 1, 3,
	1, 1, 1, 3, 1, 1, 1, 1, 0, 3,
	3, 0, 3, 3, 0, 1, 3, 0, 1, 3,
	0, 2, 1, 2, 3, 4, 3, 3, 1, 0,
	1, 1, 0, 1, 8, 5, 7, 0, 3, 8,
	5, 1, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 4, 1, 3, 1, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 4, 6, 1, 1, 1, 2,
	4, 6, 1, 4, 1, 3, 3, 4, 4, 4,
	3, 3, 2, 4, 4, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	2, 2, 0, 1, 4, 2, 4, 1, 5, 3,
	2, 1, 2, 2, 4, 4, 5, 2, 1, 3,
	4, 4, 1, 2, 9, 7, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 2, 4,
	3, 3, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	9, 7, 8, 0, 4, 7, 0, 3, 0, 2,
	0, 1, 1, 1, 1, 4, 2, 2, 3, 3,
	4, 5, 3, 4, 4, 2, 2, 2, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 2, 5, 5, 0, 2, 7, 0,
	1, 0, 1, 5, 3, 2, 4, 4, 4, 4,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	3, 0, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 1, 3, 1, 1, 3,
	5, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 1, 3, 1, 4, 6,
	4, 4, 4, 3, 6, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 0, 4, 1, 3, 3,
	1, 5, 6, 5, 5, 3, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 4, 3, 4, 5, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 2, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 4, 4, 3, 2, 2, 2, 3, 2,
	3, 4, 1, 3, 4, 0, 2, 1, 1, 2,
	2, 0, 1, 2, 4, 1, 3, 1, 3, 2,
	3, 1, 4, 3, 0, 1, 1, 2, 5, 2,
	2, 2, 0, 2, 3, 3, 0, 1, 3, 1,
	3, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 0, 1, 7, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 0,
	2, 7, 1, 0, 2, 2, 1, 3, 2, 1,
	3, 2, 1, 3, 2, 0, 1, 3, 4, 3,
	1, 1, 4, 1, 3, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 5,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 11, 9, 11, 2, 2, 4, 5,
	1, 3, 0, 3, 5, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 4, 6, 6, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	6, 7, 6, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 6,
	6, 7, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 0, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 2, 1, 1, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 4, 4, 5, 3,
	4, 5, 6, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -434, -2, -1, -3, -86, -4, -82, -5, -6,
	-8, -65, -77, -79, -81, -80, -31, -7, -76, -57,
	-58, -61, -67, -72, -73, -74, -75, -87, -83, -84,
	-85, -95, -88, -24, -23, -22, -21, 397, 12, 442,
	-9, -10, -397, -11, 231, -222, -223, -224, -226, -435,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -60, -56, 207, -59, 61, -62, -63,
	-64, -68, -69, -70, -71, 328, 334, 387, 396, 523,
	524, 46, -96, -98, 525, -25, -26, -27, -28, -29,
	-30, 203, 14, 475, -12, -15, -13, -16, -14, -19,
	-20, -18, -17, 226, 225, 37, 289, 290, 291, 332,
	224, 204, 13, 135, 136, 138, 139, 30, -97, 67,
	205, -99, 10, 527, 435, 526, -105, 38, -143, -219,
	70, -207, -210, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 445,
	307, 308, 472, 243, 267, 358, 270, 277, 135, 154,
	148, 176, 168, 143, 247, 282, 248, 77, 138, 428,
	87, 408, 384, 141, 262, 264, 266, 269, 249, 164,
	159, 261, 245, 523, 157, 250, 39, 251, 181, 252,
	253, 477, 404, 306, 410, 274, 382, 158, 405, 265,
	407, 183, 187, 420, 334, 152, 153, 412, 422, 180,
	223, 42, 474, 235, 423, 185, 179, 175, 431, 278,
	276, 178, 151, 174, 246, 50, 189, 188, 190, 378,
	379, 380, 381, 254, 255, 322, 419, 171, 160, 311,
	144, 22, 426, 230, 409, 335, 256, 271, 279, 184,
	186, 237, 242, 476, 386, 241, 275, 424, 156, 234,
	263, 229, 427, 145, 328, 337, 257, 139, 268, 421,
	430, 49, 350, 150, 142, 220, 136, 239, 244, 11,
	258, 259, 260, 281, 280, 272, 172, 236, 177, 162,
	149, 173, 137, 238, 429, 351, 521, 309, 367, 170,
	167, 240, 213, 425, 411, 140, 371, 352, 165, 283,
	518, 519, 520, 323, 305, 284, 285, 163, 227, 403,
	286, 288, 377, 298, 353, 385, 359, 354, 196, 292,
	414, 182, -105, -59, -10, -9, -97, -98, -143, 211,
	-227, 23, 382, -66, 383, 207, 67, -219, -5, -4,
	-82, -57, -95, -225, -219, 289, 289, -225, 211, -219,
	241, 366, -337, 216, -298, -272, 242, -297, -274, -300,
	-275, 31, 203, 205, 204, 238, 14, 332, 212, 12,
	10, 333, 224, 24, 25, 27, 13, 334, 336, 28,
	337, 340, 341, 342, 41, 345, 346, 231, 70, 73,
	249, -137, -219, 249, -250, -244, 94, 232, -246, -239,
	-240, -242, -377, -371, -238, 67, 119, 120, 127, 95,
	-241, -326, 35, 97, 482, 130, 443, -192, -193, -194,
	-195, -219, -372, -370, 73, 78, 81, 84, 85, 83,
	82, 161, 80, 74, 131, 132, -98, 70, -392, 490,
	-208, 511, 510, 46, -342, -350, 210, -348, 166, 227,
	162, 12, 125, 377, 163, 487, 507, 445, 491, 514,
	484, 485, 479, 480, 481, 483, 492, 494, 506, -351,
	502, 512, 513, 500, 72, 71, 505, 504, 493, 488,
	489, 495, 478, 486, 496, 497, 503, 508, 509, 316,
	87, 317, 318, 435, 310, 319, 216, 382, 55, 320,
	321, 322, 323, 324, 442, 325, 56, 326, 315, 231,
	367, 327, 165, 182, 447, 446, 448, 439, 436, 434,
	437, 438, 440, 441, 498, 499, 501, -294, -292, -219,
	-89, -90, 516, -114, -115, -185, 19, 6, 7, 8,
	9, -432, 384, 476, 292, 329, -339, 307, 367, 241,
	-266, -264, 286, 282, 343, 221, 220, 88, 435, 210,
	-409, -410, 200, 201, 202, -399, 468, -398, -219, 318,
	26, 211, 329, 414, 415, 416, 417, 418, -44, -352,
	-336, 411, 410, -231, 409, 402, 413, 404, 308, 203,
	469, -204, 353, 385, 237, 432, 433, 330, 386, 420,
	421, 405, 87, 169, 166, -339, 307, 367, -409, 140,
	137, -285, 140, 93, 145, 144, -285, 241, 366, 40,
	-291, 377, -290, -292, 420, 421, 431, 71, 72, 419,
	-204, 87, -115, -185, -114, -96, -98, -85, -397, 307,
	367, 241, 212, 211, 213, 435, 289, 329, -338, -405,
	31, -343, 197, 198, 199, 32, 33, -1, -220, -217,
	-210, 70, 71, 72, 73, -121, 233, -143, 133, -121,
	-115, -114, -115, -143, -196, -219, 384, 103, -66, -66,
	383, -400, -401, -402, -404, 207, 383, 382, 133, 15,
	-225, -225, 65, -143, -274, 241, -298, -272, 35, 64,
	134, 214, 134, 64, 67, 330, 307, 367, 331, 435,
	211, 343, 213, 241, 344, 307, 367, 211, 213, 435,
	241, 307, 211, 213, 367, 241, 344, 402, 403, 213,
	26, 335, 338, 339, 403, -356, 431, -356, 134, 93,
	90, 91, 92, -244, 110, -257, 103, 104, 105, 106,
	107, 108, 109, 116, 115, 126, 119, 120, 121, 122,
	123, 124, 125, 117, 118, 113, 94, 111, 112, 96,
	-98, -244, -250, 46, -242, -242, -242, -242, -326, -248,
	-244, 67, 67, 67, 133, 73, -244, 67, 67, 67,
	67, 67, 67, 67, 67, -349, 67, 67, -254, -255,
	67, 67, 73, 73, 67, 67, 67, 73, -255, -255,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 134, -149, -153,
	-150, -152, -151, -155, -154, 166, 167, 130, 170, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 30,
	182, 227, 162, 163, 164, 165, 183, 148, 168, 473,
	191, 149, 192, 150, 193, 151, 194, 152, 153, 195,
	154, 157, 158, 159, 156, 133, -115, 134, 67, -91,
	38, -117, 21, -99, -98, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 78, -136, -219, -129, -219, -407,
	211, 468, -262, 216, -262, -262, 212, -262, 211, 211,
	-411, 147, 134, -399, -120, 67, -230, 111, 23, 239,
	239, 276, -436, -437, 15, 113, -228, -437, -228, -230,
	-438, 212, 412, 42, 240, 239, -116, -117, -116, 406,
	403, -313, 407, 408, -231, -230, -230, -231, -230, 211,
	213, 435, -436, 239, -436, 30, 30, -407, -337, 314,
	-337, -412, 215, 424, 475, 143, 144, 145, -274, 241,
	241, 134, 103, 23, -293, 103, 114, -292, -292, -292,
	-293, -293, -163, 40, -218, 130, -219, 73, -163, 40,
	-116, -99, -98, 68, 68, 68, -337, -337, -337, -337,
	-337, -337, -337, -225, -129, -100, -101, 121, -244, -219,
	-100, 38, 403, 38, -345, -124, -95, 308, 67, 67,
	-219, -346, 46, -95, 67, 30, -116, -91, -117, 133,
	78, 73, -66, 68, 134, -403, 84, 85, -406, 180,
	172, -219, -78, 73, -3, -4, -5, -6, -31, -57,
	-95, -373, -371, 67, 31, 376, 64, 15, -299, 211,
	435, 329, 237, 213, 307, -297, -281, -278, -276, -218,
	-274, -277, -276, -302, -196, 403, -92, 388, 288, -92,
	-244, -244, -244, -244, -244, 83, 94, 305, 84, 85,
	-239, -258, 31, 284, 285, -240, -240, -240, -240, -240,
	-240, -240, -240, -240, -240, -240, -240, -247, -256, -326,
	67, 113, 111, 112, 96, -242, -240, -240, 68, 134,
	-396, -395, 98, -244, -244, -244, -219, -393, -394, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	320, 315, 321, 319, 310, 327, 322, 323, 165, 466,
	467, 460, 461, 462, 463, 464, 465, -249, -250, -249,
	-244, -393, -249, -191, 32, 31, -244, -408, 303, 302,
	304, -118, -219, -249, 68, 68, 68, 78, -250, -249,
	-240, -249, -394, -191, -191, -250, -250, -191, -191, -191,
	-191, 121, -191, -191, -191, -191, -191, -191, -191, -191,
	-292, 40, -333, 351, 350, -327, -329, 67, -328, 67,
	-328, -327, -327, 67, 67, -330, 67, -330, -330, -327,
	-331, 67, -331, -332, 67, -331, -219, -116, -90, -354,
	-353, -244, 40, 517, -91, -244, -113, -112, -244, -433,
	73, 34, 67, 133, 213, -262, -414, -219, 94, -282,
	-279, -276, -272, -217, -219, -262, -262, -412, -398, 34,
	-119, -219, -181, 16, -242, -276, 241, -436, -230, -206,
	-205, -219, -232, -437, -227, -232, -181, -437, -230, -230,
	-232, -228, 403, -181, -181, -313, -229, -219, -229, -262,
	-206, -206, 213, -414, -414, -282, -108, -103, -107, -104,
	-109, -184, -186, -106, 67, -143, -98, -219, 425, 426,
	141, 144, 143, 31, 376, -296, 376, 31, -272, -290,
	-286, 73, 377, -277, -295, 64, 130, -353, -293, -293,
	-293, -295, -295, 129, -91, -414, -281, -272, -219, -145,
	-143, -145, -220, 67, -180, 134, -179, 15, -214, -219,
	34, 73, 133, -180, 73, -145, 73, -431, 64, 46,
	30, 67, -123, 68, -118, -122, -219, -347, -251, -391,
	516, -123, 68, -389, -390, -118, -91, -91, -212, -213,
	-203, -209, -216, -217, -210, 208, 31, 93, 34, 36,
	316, 348, 96, 130, 20, 97, 166, 129, 318, 443,
	317, 203, 59, 446, 448, 447, 436, 434, 369, 373,
	375, 372, 435, 402, 40, 14, 37, 225, 32, 33,
	123, 205, 100, 101, 228, 35, 226, 85, 44, 23,
	62, 15, 17, 18, 319, 368, 216, 215, 113, 388,
	212, 57, 12, 132, 38, 110, 370, 53, 89, 45,
	55, 111, 21, 437, 438, 41, 387, 396, 471, 232,
	125, 320, 321, 60, 94, 376, 83, 43, 64, 90,
	19, 58, 112, 206, 442, 56, 374, 324, 326, 336,
	468, 325, 210, 413, 10, 315, 444, 30, 224, 54,
	211, 99, 214, 84, 231, 6, 88, 13, 61, 65,
	439, 440, 441, 46, 98, 16, 327, 475, 389, 390,
	391, 392, 393, 394, 395, 191, 192, 193, 194, 195,
	273, 219, 217, 221, 222, 516, 517, 197, 198, 302,
	304, 169, 200, 201, 202, 233, 147, 7, 355, 356,
	357, 360, 361, 362, 363, 364, 365, 366, 524, 397,
	398, 399, 400, 401, 415, 416, 417, 418, 209, 313,
	314, 23, -66, -401, 133, 134, -119, -299, -280, -277,
	-301, 121, 70, -287, 134, 475, 528, 71, 214, -424,
	-423, 368, 68, 134, -357, 215, 442, 73, 529, 196,
	-357, 83, 305, 84, 85, -326, -250, -247, -242, -240,
	-240, -245, 228, 93, -244, -243, -395, 100, -244, 34,
	68, 134, 65, 133, 68, 68, 15, 15, 68, -244,
	68, 15, 15, -244, 68, 133, 68, 68, 68, 65,
	68, 134, 68, 134, -250, -244, 68, 68, -244, -244,
	-244, -250, 68, -244, -244, -244, -244, -244, -244, -244,
	-244, -244, -335, 352, 78, 78, -198, 73, -198, 78,
	78, 78, 134, 68, 73, 134, 22, 134, -110, 36,
	37, -137, -130, -131, -132, -133, -149, -196, 167, 170,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 227, 162, 163, 164, 165, 183, 148, 168, 149,
	150, 151, 152, 153, 154, 157, 158, 159, 156, -219,
	-262, -143, -417, 355, 35, -425, 134, 40, -423, -265,
	65, -260, -261, -259, -263, 40, -143, -143, 15, -102,
	-144, -219, 67, 68, 134, -244, -273, 65, -275, -206,
	-181, -220, -143, -219, -181, -181, -230, -232, -232, -228,
	133, -205, -337, -418, 355, 30, -425, 30, -187, -188,
	-189, -190, 53, 57, 59, 54, 55, 56, 60, 30,
	134, -215, -221, 34, -216, 73, -217, -210, -215, -98,
	-103, -108, -215, 67, 142, 145, 145, 144, 214, 67,
	103, -295, -295, -295, 40, -218, 64, 134, -130, -181,
	-101, -103, -219, 73, -219, 121, -181, -170, 519, 38,
	-360, 407, 39, -347, -389, -125, -414, 68, 134, -124,
	308, 68, 134, 134, 67, 68, 46, 134, 103, 133,
	384, -219, -371, 68, -301, 134, 214, 133, 133, -278,
	334, -218, -280, 20, 475, -196, 38, -202, -201, 73,
	529, 38, 68, -245, 93, -242, -239, 68, 101, -244,
	99, -147, -149, 350, 351, -148, -154, 130, 166, 227,
	165, 164, 162, 350, 351, -163, -219, -244, -244, 68,
	-244, -244, 15, -219, -163, -240, -244, -344, 444, 68,
	-308, 398, -308, 68, 68, 68, 68, -308, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 134,
	68, 68, 68, 134, 68, 134, -353, -360, -244, -244,
	-112, -111, 43, 342, 68, 134, -149, -143, 67, -420,
	409, 357, -211, 103, -237, -236, 309, 41, -340, 377,
	363, 364, -279, 241, 64, 297, 298, 299, 300, -259,
	-204, 129, 252, 67, 67, -143, -102, -219, 15, 134,
	-413, 133, -1, -219, -272, -230, -181, -437, -181, -230,
	-230, -232, -219, -143, -420, -211, 313, -237, -284, -283,
	-196, -107, -107, -107, -107, 53, 53, 53, 58, 53,
	58, 53, -189, -284, -109, -120, -221, 68, -430, -429,
	-428, -426, 61, 215, 62, -249, 145, -280, -233, 73,
	-286, -143, -143, 68, -183, 17, 133, -183, 78, 73,
	-368, 394, 389, 391, 89, 68, 134, -124, -118, 46,
	67, -219, -251, -355, -354, 46, -95, -347, -390, -353,
	-212, -209, -217, -210, 78, 15, -277, -272, 121, 121,
	70, 335, -287, 73, 356, 73, 211, 530, 134, 103,
	-202, 211, -239, -244, 68, -156, 153, 152, -156, 68,
	-327, -328, -327, -330, -327, -156, -156, 68, 68, 23,
	68, 68, 68, -244, 68, 68, 134, 68, 73, -308,
	67, -308, -308, -308, -308, -308, -308, -308, -308, -308,
	-308, -308, -308, 73, 78, 78, -368, 44, 45, 73,
	209, -132, 40, -120, -138, -139, -140, -146, -141, -196,
	-235, -142, 219, 217, 221, -386, 88, 222, 273, 89,
	212, -421, 77, -415, 73, -219, -422, 77, 358, 132,
	311, 40, 359, 360, 374, 306, 78, 78, 365, -416,
	70, -143, -211, -211, -211, -138, -138, -121, 65, 133,
	-103, -144, -219, 121, 68, -181, -219, -181, -181, -230,
	-120, -421, -415, 103, -422, -181, 134, 103, -127, -126,
	64, 65, -128, 64, -126, 53, 53, -181, -428, -427,
	23, -386, -386, -386, 68, 68, -182, 18, 20, 121,
	-182, -170, -334, 518, -364, -366, 389, 20, 20, 13,
	-95, -414, 46, -95, -347, -125, 68, -347, -272, -287,
	377, -143, -201, 73, 530, -143, -244, 68, -244, -308,
	-253, -252, 233, 68, 68, -334, -134, -149, -238, 34,
	68, 134, -149, -142, -219, 89, -385, -386, -262, -385,
	89, 67, 73, -419, 368, 73, 73, 78, 40, 78,
	132, 361, -341, 67, -163, -165, -218, 130, 73, 68,
	68, -215, -103, -219, -181, -413, 133, -181, -181, 34,
	-419, -244, -115, -283, -353, -244, 67, -244, 67, 53,
	19, 17, -244, -250, -170, 73, 20, 73, -362, 73,
	-389, -347, 68, -124, -94, -358, -313, 68, 68, -115,
	20, -170, 474, -95, -161, -162, -178, 348, 243, -263,
	247, 77, 248, 384, 249, 212, 251, 252, 253, 223,
	254, 255, 256, 377, 257, 258, 259, 260, 331, 6,
	293, -140, -160, -159, -157, 83, 94, 40, 348, -158,
	77, 129, 266, 244, 267, -177, -234, 64, 354, 217,
	88, 89, 336, -235, -381, -383, -219, -383, -219, -381,
	-381, -262, -244, 20, 475, 310, 40, 78, 40, 362,
	-267, -269, -196, 67, -93, -92, -161, -181, -181, -95,
	-116, -119, -382, -219, 217, 20, 20, -199, 520, 73,
	391, -94, -367, 394, -361, -359, 389, 390, 391, 392,
	-310, -309, -312, 395, 275, 401, -250, -199, -135, -219,
	-303, 233, 134, -178, -211, -211, -204, 129, -211, -211,
	-211, -211, 250, 250, -211, -211, -211, -211, -211, -211,
	-211, -211, -211, -211, -211, -211, -211, -211, 67, -157,
	83, -240, 73, -165, -166, 40, 265, 261, -167, 40,
	245, 246, -169, 67, 273, 13, 89, 89, -143, 67,
	65, 283, 67, 67, 67, -383, 68, 73, 356, 73,
	310, 68, 134, -327, -244, -94, -303, -115, 68, 68,
	134, 67, 20, -369, 215, -365, -366, 393, -359, 20,
	391, 20, 20, 68, -311, 96, 361, 365, -244, 34,
	-304, 282, 20, -178, 78, 78, -211, -211, 78, 73,
	73, 73, -211, -211, 78, 73, -221, 78, 78, 78,
	78, 40, 73, -168, 40, 261, 265, 262, 263, 264,
	78, 40, 78, 40, 78, 40, -219, 67, -387, -388,
	73, 78, 67, -348, -268, 67, -267, -384, 297, 298,
	299, 301, 300, -384, -267, -267, -267, 67, -289, -288,
	274, 94, 377, -270, -269, -110, 68, -304, -116, -219,
	217, -200, -219, -362, -376, 67, 78, -364, -363, -365,
	20, -362, 20, -362, -362, -311, 516, 399, 400, 399,
	400, 73, 20, -305, 275, 276, -306, -317, 278, -163,
	-163, 73, 73, -164, 244, -145, 68, 134, 103, 68,
	-244, -254, -172, -171, 471, -267, 68, 68, 68, 68,
	-267, 274, -271, 223, 77, 475, 295, 296, -110, 68,
	134, -380, 30, 68, -375, -374, -197, -370, -219, 394,
	395, 73, -362, 93, -196, 67, -315, 279, 67, -313,
	67, -313, 89, 298, 245, 246, 68, -388, 73, 68,
	-176, -174, -175, 64, 405, 271, 272, 68, -270, -270,
	-270, -270, 68, -211, 73, 294, -219, -379, -378, -377,
	68, 134, 133, -311, -302, -307, 280, 78, -240, 67,
	-240, 67, -314, 277, 67, -288, -175, 64, -174, 64,
	14, 13, -177, 78, -217, 134, 103, -374, -219, 68,
	-319, 67, 20, 68, -302, 68, -302, 67, 103, -240,
	-173, 268, 269, 30, 144, -173, -378, 40, -244, 133,
	-320, -318, 233, -306, 68, 68, 68, -302, 78, 68,
	83, 40, 270, -219, 68, 134, 70, -316, 281, 68,
	-318, -321, 46, 78, -325, -322, 67, -178, 235, 113,
	-325, -178, -324, -323, 280, 236, 67, 68, 134, 70,
	232, 67, -250, -323, -322, -250, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 669, 670, 671, 672, 0, 0, 0,
	435, 436, 0, 413, 0, 0, 0, 0, 0, 0,
	321, 322, 323, 324, 325, 326, 327, 328, 329, 330,
	331, 332, 333, 334, 335, 336, 337, 338, 339, 340,
	341, 286, 287, 288, 289, 0, 232, 228, 207, 208,
	209, 168, 169, 170, 171, 298, 0, 0, 0, 0,
	0, 0, 519, -2, 35, 673, 674, 675, 676, 677,
	678, -2, 448, 0, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 275, 276, 277, 271, 272, 274, 273,
	-2, 785, 448, 221, 0, 212, 212, 0, 539, 0,
	0, 554, 576, 33, 0, 0, 497, 0, 502, 880,
	916, 917, 918, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 497, 233, 437, 438, 539, 539, 411, 0,
	257, 0, 1545, 261, 0, 0, 0, 408, 252, 253,
	254, 255, 256, 0, 661, 0, 0, 248, 0, 227,
	1604, 0, 0, 0, 0, 0, 0, 112, 733, 114,
	735, 118, 125, 0, 0, 130, 131, 134, 135, 136,
	137, 138, 0, 142, 0, 144, 147, 0, 149, 150,
	0, 153, 154, 155, 0, 165, 166, 167, 736, 737,
	-2, 45, 681, 92, 1288, 1185, 0, 1192, 1193, 1204,
	1213, 988, 989, 990, 991, 0, 0, 0, 0, 0,
	998, 999, 0, 1012, 1695, 0, 0, 1006, 1007, 1008,
	1009, 52, 64, 65, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 0, 1158, 975, 916, 0, 1703,
	0, 1723, 1722, 0, 0, 1143, 0, 1133, 0, -2,
	-2, 0, 0, 1671, -2, 1700, 1719, 1727, 1704, 1726,
	1697, 1698, 1692, 1693, 1694, 1696, 1705, 1707, 1718, 0,
	1714, 1724, 1725, 0, 66, 67, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1149,
	-2, 1151, 1152, 1154, 1155, 1156, 1157, -2, 1160, 1161,
	1162, -2, -2, 1165, 1166, 1167, 1168, 1169, 1170, 1173,
	-2, 1175, -2, -2, 1145, 1146, 1147, 1148, 1137, 1138,
	1139, 1140, 1141, 1142, -2, -2, -2, 0, 205, 203,
	539, 612, 0, -2, 0, 0, 0, 559, 562, 565,
	568, 0, 36, 37, 0, 0, 696, 762, 762, 762,
	0, 762, 0, 0, 786, 739, 740, 741, 760, 761,
	453, 449, 450, 451, 452, 527, 0, 529, 532, 391,
	343, 0, 0, 0, 355, 349, 0, 0, 391, 0,
	0, 534, 534, 0, 400, 391, 391, -2, 391, 0,
	360, 361, 362, 349, 0, 349, 366, 367, 368, 379,
	380, 401, 1312, 0, 0, 696, 298, 298, 455, 222,
	223, 211, 213, 0, 217, 0, 210, 1604, 0, 0,
	179, 1671, 184, 0, 1552, 1618, 1567, 0, 0, 1585,
	0, -2, 534, 0, 540, 0, 539, 0, 0, 298,
	298, 298, 298, 298, 298, 298, 0, 0, 0, 0,
	577, 578, 573, 574, 575, 579, 580, 3, 0, 662,
	663, 666, 667, 668, 0, 465, 0, 501, 0, 0,
	534, -2, 0, 412, 258, 919, 0, 0, 262, 263,
	0, 0, 278, 0, 281, 266, 267, 268, 0, 0,
	250, 251, 0, 0, 229, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 122, 119, 126, 129, 139,
	146, 0, 158, 160, 163, 120, 127, 132, 133, 140,
	161, 121, 123, 124, 128, 162, 164, 141, 145, 159,
	143, 148, 151, 152, 157, 0, 93, 0, 0, 0,
	0, 0, 0, 1191, 0, 0, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1185, 0, 0, 994, 995, 996, 997, 1000, 0,
	1013, 0, 0, 0, 0, 1242, 0, 1183, 1183, 0,
	1183, 1179, 0, 0, 1183, 1122, 0, 0, 1124, 1134,
	0, 0, 1127, 1128, 1183, 0, 1183, 1132, 1118, 1119,
	0, 1179, 1179, 0, 0, 1179, 1179, 1179, 1179, 1179,
	1179, 1179, 1179, 1179, 1179, 1179, 1179, 0, 1289, 1307,
	1244, 1245, 1246, 1294, 1248, 1298, 1298, 1294, 1294, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 0, 0,
	1287, 1267, 1296, 1296, 1296, 1294, 1291, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1301, 1301, 1304, 1301, 0, 534, 0, 0, 522,
	0, 503, 0, 556, 558, 0, 560, 561, 563, 564,
	566, 567, 569, 570, 38, 0, 680, 0, 683, 0,
	762, 697, 0, 0, 0, 0, 0, 0, 762, 762,
	455, 454, 0, 528, 0, 0, 585, 0, 0, 349,
	391, 354, 351, 350, 396, 397, 393, 0, 393, 585,
	0, 373, 374, 375, 391, 391, 381, 535, 382, 383,
	393, 0, 398, 399, 0, 585, 585, 0, 390, 0,
	0, 762, 351, 364, 351, 1313, 1314, 0, 0, 0,
	0, 0, 456, 0, 0, 215, 0, 220, 172, 0,
	0, 0, 0, 0, 0, 201, 202, 0, 0, 0,
	0, 0, 192, 195, 874, 875, 730, 731, 196, 197,
	503, 555, 557, 551, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 593, 587, 589, 656, 52,
	593, 0, 0, 0, 476, 0, 470, 0, 0, 0,
	881, 457, 489, 459, 0, 478, 503, 525, 503, 0,
	259, 0, 264, 0, 0, 280, 282, 283, 284, 269,
	270, 409, 246, 247, 239, 240, 241, 242, 243, 244,
	245, 249, 62, 0, 230, 231, 0, 0, 0, 106,
	107, 108, 109, 110, 111, 113, 97, 425, 427, 722,
	734, 0, 725, 0, 116, 156, 89, 0, 0, 89,
	1186, 1187, 1188, 1189, 1190, 1194, 0, 1196, 1198, 1200,
	1202, 0, 1218, -2, -2, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 1205, 1216, 1217,
	0, 0, 0, 0, 0, 1214, 1209, 0, 992, 0,
	1010, 1014, 0, 0, 0, 0, 53, 1178, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 0, 1184, 0,
	1185, 0, 0, 0, 1180, 1181, 0, 0, 1083, 1084,
	1085, 0, 484, 0, 1144, 1123, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 1310, 1308, 1309, 1247, 1295, 0, 1272, 0,
	1273, 1274, 1275, 0, 0, 1268, 0, 1269, 1270, 1271,
	1263, 0, 1264, 1265, 0, 1266, 204, 611, 613, 0,
	493, 495, 496, 0, 523, 536, 541, 542, 545, 34,
	39, 0, 685, 0, 762, 0, 0, 699, 0, 296,
	716, 0, 732, 754, -2, 0, 0, 0, 530, 0,
	0, 625, 342, 0, 392, 346, 1604, 351, 585, 356,
	352, 407, 357, 0, 395, 358, 359, 0, 585, 585,
	391, 393, 393, 386, 387, 0, 402, 405, 403, 0,
	363, 365, 298, 293, 0, 296, 598, 0, 599, 600,
	596, 627, 651, 651, 0, 651, 631, 880, 224, 225,
	0, 0, 219, 173, 174, 0, 176, 177, 178, 185,
	180, 182, 0, 0, 186, 198, 199, 200, 0, 0,
	0, 190, 191, 0, 521, 423, 424, 428, 0, 430,
	878, 431, 432, 685, 585, 0, 594, 0, 590, 657,
	0, 659, 0, 585, 513, 0, 505, 464, 0, 489,
	478, 0, 0, 465, 482, 0, 499, 458, 486, 0,
	490, 0, 0, 463, 479, 0, 524, 526, 920, 0,
	1319, -2, 1321, -2, -2, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 0, 265, 279, 0, 0, 0, 0, 100, 719,
	0, 101, 105, 95, 0, 0, 0, 724, 0, 721,
	726, 0, 115, 0, 0, 90, 91, 777, 782, 0,
	0, 1195, 1197, 1199, 1201, 1203, 0, 1206, 1214, 1210,
	0, 1207, 0, 0, 1186, 0, 1015, 0, 0, 0,
	1003, 0, 0, 0, 1071, 1072, 0, 0, 1076, 0,
	1078, 0, 0, 0, 1082, 0, 1121, 1136, 1125, 0,
	1129, 0, 1131, 0, 1047, 0, 1049, 1049, 0, 0,
	0, 0, 1049, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 1243, 1311, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 614, 505, 0, 0, 0, 548, 546,
	547, 0, 0, 686, 687, 689, 690, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1537,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 684,
	0, 0, 706, 1315, 763, 300, 0, 0, 718, 0,
	0, 759, -2, 766, 0, 772, 0, 0, 0, 0,
	442, 446, 33, 533, 0, 586, 344, 0, 345, 391,
	353, 394, 585, 880, 376, 377, 585, 391, 391, 393,
	0, 404, 0, 706, 1315, 0, 300, 0, 0, 0,
	0, 0, 618, 0, 0, 617, 0, 0, 0, 0,
	0, 532, 652, 0, 654, 655, 664, 665, 629, -2,
	0, 598, 634, 1183, 226, 214, 216, 0, 0, 0,
	0, 187, 188, 189, 193, 194, 0, 0, 0, 583,
	588, 595, 658, 660, 53, 591, 583, 40, 0, 0,
	509, 0, 0, 469, 475, 0, 467, 465, 0, 0,
	0, 498, 0, 489, 491, 0, 489, 0, 0, 0,
	0, 410, 63, 285, 0, 0, 0, 0, 0, 426,
	0, 723, 97, 0, 0, 117, 0, 0, 780, 0,
	782, 0, 1182, 1208, 0, 1215, 1211, 993, 1001, 1011,
	0, 0, 1017, 1029, 1029, 0, 1020, 1294, 1298, 1023,
	1294, 1296, 1294, 1029, 1029, 0, 54, 0, 0, 1077,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 1049,
	1053, 0, 1054, 1049, 1049, 1049, 1049, 1059, 1049, 1049,
	1049, 1049, 1049, 1049, 1049, 1049, 1300, 1299, 1285, 0,
	1286, 1297, 1302, 0, 1305, 0, 494, 509, 537, 538,
	543, 544, 0, 0, 0, 0, 691, 532, 882, 709,
	707, 708, 0, 1316, 713, 301, 302, 303, 304, 0,
	0, 0, 717, 0, 0, 755, 756, 757, 758, 767,
	1315, 1315, 1315, 882, 882, 497, 0, -2, 0, 0,
	444, 0, 0, 626, 347, 585, 369, 0, 384, 585,
	585, 391, 406, 532, 709, 0, 0, 713, 585, 236,
	0, 621, 615, 0, 604, 619, 620, 607, 0, 609,
	0, 605, 606, 585, 597, 628, 653, 630, 633, 635,
	636, 642, 0, 0, 0, 0, 218, 175, 0, 320,
	181, 429, 879, 434, 581, 0, 0, 581, 514, 513,
	511, 77, 0, 0, 0, 466, 0, 0, 483, 489,
	0, 500, 487, 0, 492, 489, 462, 461, 480, 481,
	921, 1320, 1317, 1318, 260, 0, 720, 97, 102, 103,
	104, 98, 96, 727, 0, 729, 0, 778, 782, 0,
	0, 0, 1212, 1016, 1002, 1018, 1030, 1031, 1019, 1004,
	1021, 1022, 1024, 1025, 1026, 1027, 1028, 1005, 1073, 0,
	1075, 1079, 1080, 0, 1126, 1130, 0, 1049, 1048, 1052,
	1045, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1293, 0, 0, 511, 549, 550, 679,
	0, 688, 0, 0, 0, 883, 884, 886, 887, 0,
	0, 889, 945, 0, 898, 762, 898, 0, 0, 900,
	901, 698, 0, 0, 701, 702, 711, 0, 0, 0,
	306, 307, 0, 0, 0, 319, 315, 316, 317, 297,
	712, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	585, 443, 446, 447, 531, 348, 585, 388, 385, 585,
	0, 291, 0, 0, 295, 539, 0, 0, 601, 622,
	0, 0, 602, 0, 603, 608, 610, 235, 637, 0,
	0, 639, 640, 641, 632, 183, 571, 0, 0, 592,
	572, 41, 513, 0, 510, 78, 0, 0, 0, 478,
	471, 468, 489, 474, 473, 0, 488, 460, 99, 94,
	728, 465, 781, 783, 779, 80, 0, 1081, 0, 1051,
	539, 1046, 0, 1303, 1306, 513, 0, 694, 692, 0,
	-2, 0, -2, 888, 946, 910, 910, 899, 910, 910,
	762, 0, 710, 700, 0, 714, 715, 0, 308, 309,
	0, 312, 318, 0, 768, 769, 876, 877, 770, 0,
	-2, 585, 585, -2, 440, 445, 0, 370, 389, 0,
	294, 292, 534, 237, 238, 623, 0, 616, 646, 643,
	0, 0, 582, 584, 515, 512, 0, 506, 508, 88,
	477, 472, 466, 80, 43, 71, 0, 1074, 1120, 1042,
	0, 515, 0, 695, 787, -2, 830, 1315, 1315, 0,
	1315, 1315, 1315, 1315, 0, 0, 1315, 1315, 1315, 1315,
	1315, 1315, 1315, 1315, 1315, 1315, 1315, 1315, 1315, 1315,
	0, 885, 912, -2, 924, 926, 0, 0, 929, 930,
	0, 0, 0, 0, 967, 936, 0, 0, 940, 0,
	1230, 1231, 0, 944, 0, 902, 911, 0, 911, 0,
	0, 910, 0, 0, 0, 305, 310, 0, 313, 314,
	0, 750, 1294, 0, 774, 80, 787, 539, 441, 290,
	234, 0, 0, 647, 649, 644, 645, 42, 0, 79,
	0, 44, 68, 0, 81, 82, 0, 0, 0, 0,
	0, 1043, 0, 1037, 1038, 1039, 1044, 504, 0, 693,
	789, 0, 771, 832, 0, 0, 1315, 1315, 0, 0,
	0, 0, 1315, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 925,
	927, 928, 931, 932, 933, 972, 973, 974, 934, 969,
	970, 971, 935, 0, 0, 0, 1228, 1229, 965, 0,
	0, 0, 0, 0, 0, 0, 896, 703, 0, 705,
	311, 743, 0, 545, 0, 776, 789, 534, 624, 638,
	0, 0, 0, 55, 0, 77, 74, 0, 83, 0,
	0, 0, 0, 1050, 1040, 0, 0, 0, 0, 0,
	773, 0, 826, 831, 833, 834, 0, 0, 837, 838,
	839, 840, 0, 0, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 868, 869, 870, 871, 872, 873,
	853, 854, 855, 856, 857, 858, 865, 0, 0, 862,
	0, 0, 0, 1133, 960, 0, 0, 903, 905, 906,
	907, 908, 909, 904, 0, 0, 0, 0, 895, 897,
	941, 0, 704, 742, 751, 752, 545, 775, 439, 648,
	650, 0, 517, 507, 46, 0, 0, 72, 73, 75,
	0, 84, 0, 86, 87, 0, 1032, 1033, 1035, 1034,
	1036, 682, 0, 814, 0, 0, 820, 0, 827, 835,
	836, 841, 842, 859, 0, 0, 861, 0, 0, 968,
	0, 939, 948, 961, 0, 0, 743, 743, 743, 743,
	0, 942, 744, 1315, 0, 0, 748, 749, 753, 516,
	0, 784, 0, 56, 0, 58, 60, 61, 913, 69,
	70, 76, 85, 0, 790, 0, 792, 0, 0, 0,
	0, 0, 824, 0, 866, 867, 860, 863, 864, 937,
	947, 949, 950, 0, 962, 963, 964, 966, 890, 891,
	892, 893, 0, 0, 746, 0, 518, 47, 48, 0,
	57, 0, 0, 1041, 0, 794, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 938, 951, 0, 952, 0,
	0, 0, 894, 745, 747, 0, 0, 59, 914, 791,
	788, 0, 826, 816, 0, 818, 0, 0, 0, 0,
	953, 955, 956, 0, 0, 954, 49, 50, 51, 0,
	0, 796, 0, 812, 817, 819, 821, 0, 825, 823,
	957, 959, 958, 915, 795, 0, 808, 793, 0, 822,
	797, -2, 0, 813, 798, -2, 0, 806, 0, 0,
	799, 807, 0, 802, 0, 0, 0, 801, 0, -2,
	809, 0, 0, 803, -2, 0, 811, 810,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 527,
	104, 103, 105, 3, 528, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 529, 115, 530, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:662
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:667
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:673
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:693
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:699
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:720
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:729
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:828
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:837
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:841
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:845
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:873
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:894
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:898
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:904
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:908
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:914
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:938
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:965
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:989
		{
			yyVAL.str = ""
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:996
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1001
		{
			yyVAL.str = "\n"
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1008
		{
			yyVAL.str = yyDollar[3].str
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1017
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1041
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1045
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1051
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1075
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1092
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1123
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1202
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1227
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1234
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1242
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1278
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1282
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1288
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1295
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1304
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1308
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1314
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1318
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1322
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1326
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1330
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1334
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1338
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1342
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1346
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1522
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1529
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1536
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1545
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1583
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1589
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1595
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1599
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1606
		{
			yyVAL.str = yyDollar[3].str
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1612
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1616
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1622
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1630
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1655
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1678
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1701
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1723
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1730
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1746
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1750
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1754
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1760
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1764
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1771
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1777
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1781
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1792
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1798
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1889
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1939
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1945
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1983
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2009
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2013
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2033
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2041
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2051
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2092
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2096
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2102
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2108
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2113
		{
			yyVAL.str = "true"
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2114
		{
			yyVAL.str = "false"
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2120
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2133
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2157
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:       yyDollar[4].str,
				UpdateConfig: yyDollar[8].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2164
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2170
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2196
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2214
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2230
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2234
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2242
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2254
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2258
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2262
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2266
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2274
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2296
		{
			yyVAL.item = nil
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2301
		{
			yyVAL.item = nil
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2359
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2370
		{
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2374
		{
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2388
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2482
		{
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2484
		{
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2526
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2538
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2554
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2566
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2602
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2616
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2620
		{
			yyVAL.str = yyDollar[2].str
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2626
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2643
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2649
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2658
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2664
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2668
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2677
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2681
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2685
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2691
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2715
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2733
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2737
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2752
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2771
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2783
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2795
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2806
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2811
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2818
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2834
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2847
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2858
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2862
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2868
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2873
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2880
		{
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2882
		{
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2885
		{
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2894
		{
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2898
		{
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2903
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2912
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2919
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2925
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2933
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2947
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2967
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2980
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2986
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2990
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2996
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3004
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3010
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3017
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3026
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3034
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3042
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3066
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3089
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3093
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3108
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3112
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3122
		{
			yyVAL.str = yyDollar[3].str
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3128
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3132
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3138
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3143
		{
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3154
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3158
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3165
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3174
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3180
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3184
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3190
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3194
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3199
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3203
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3230
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3248
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3273
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3284
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3297
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3301
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3306
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3310
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3317
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3322
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3329
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3377
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3381
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3399
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3408
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3431
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3437
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3443
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3447
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3458
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3462
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3466
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3471
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3475
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3479
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3493
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3507
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3511
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3553
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3561
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3569
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3578
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3594
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3610
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3618
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3626
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3642
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3663
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3711
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3730
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3736
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3740
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3744
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3748
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3753
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3761
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3767
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3775
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3783
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3793
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3799
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3817
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3836
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3840
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3850
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3854
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3858
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3862
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3868
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3878
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3882
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3888
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3898
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3904
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3910
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3914
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3918
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3928
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3934
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3944
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3948
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3954
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3958
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3968
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3981
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3987
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3993
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4017
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4024
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4028
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4044
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4048
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4052
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4057
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4061
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4065
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4069
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4078
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4082
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4086
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4090
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4095
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4099
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4103
		{
			yyVAL.str = yyDollar[2].str
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4112
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4116
		{
			yyVAL.str = yyDollar[1].str
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4120
		{
			yyVAL.str = yyDollar[2].str
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4124
		{
			yyVAL.str = yyDollar[1].str
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4128
		{
			yyVAL.str = yyDollar[2].str
		}
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4174
		{
			yyVAL.str = yyDollar[1].str
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 682:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4187
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4199
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4204
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4210
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4217
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4221
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4227
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4233
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4237
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4241
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4247
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4253
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4270
		{
		}
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4275
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4287
		{
			yyVAL.str = yyDollar[1].str
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4293
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4303
		{
			yyVAL.str = yyDollar[1].str
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4313
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4320
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4326
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4334
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4340
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4355
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4387
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4507
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4511
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4527
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4531
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4551
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4564
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4577
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4583
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4605
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4609
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4615
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4632
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4644
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4650
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4673
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4695
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4699
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4711
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4717
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4721
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4727
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4732
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4737
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4741
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4745
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4749
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4759
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4773
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4786
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4792
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4796
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4806
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4810
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4815
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4819
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4825
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4846
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4859
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4874
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4889
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4893
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4898
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4902
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4909
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4933
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4947
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4978
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4984
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4988
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4994
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5003
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5017
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5023
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5027
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5033
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5040
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5049
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5053
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5062
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5067
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5071
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5076
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5080
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5090
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5094
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5113
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5121
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5129
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5140
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5149
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5159
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5169
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5173
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5191
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5197
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5201
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5205
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5227
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5231
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5279
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5291
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5295
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5299
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5303
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5311
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5315
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5319
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5323
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5330
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5334
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5345
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5349
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5353
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5359
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5367
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5379
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5397
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5406
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5411
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5428
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5438
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5444
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5454
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5460
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5469
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5478
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5501
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5520
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5534
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5538
		{
			yyVAL.str = yyDollar[1].str
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5548
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5554
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5560
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5574
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5581
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5587
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5591
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5595
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5623
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5629
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5643
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5651
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5655
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5679
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5683
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5687
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5704
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5719
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5723
		{
			yyVAL.str = yyDollar[1].str
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5729
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5733
		{
			yyVAL.str = yyDollar[2].str
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5739
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5751
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5758
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5765
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5788
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5794
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5800
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5804
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5821
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5828
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5832
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5836
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5845
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5850
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5854
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5870
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5876
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5912
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5920
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5924
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5930
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5934
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5938
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5942
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5954
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5958
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5962
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5966
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5970
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5974
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5979
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5987
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5991
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6003
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6007
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6016
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6020
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6024
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6028
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6037
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6046
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6052
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6056
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6062
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6072
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6089
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6119
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6132
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6173
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6188
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6205
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6220
		{
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6226
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6230
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6234
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6240
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6252
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6273
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6286
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6293
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6302
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6307
		{
			yyVAL.str = ","
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6311
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6330
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6389
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6399
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6409
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6429
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6469
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6506
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6514
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6530
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6538
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6547
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6555
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6564
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6572
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6589
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6598
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6620
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6656
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6668
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6680
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6690
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6698
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6724
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6732
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6743
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6752
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6761
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6769
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6779
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6787
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6801
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6811
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6830
		{
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6832
		{
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6873
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6906
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6912
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6916
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6923
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6931
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6969
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6973
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6981
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6985
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6989
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6993
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7005
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7009
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7013
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7017
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7021
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7025
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7029
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7039
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7045
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7056
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7060
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7064
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7070
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7074
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7078
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7082
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7086
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7090
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7094
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7122
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7140
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7144
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7148
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7160
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7185
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7196
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7201
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7207
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7219
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7231
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7321
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7334
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7347
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7388
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7411
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7445
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7493
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7510
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7522
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7542
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7562
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7598
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7686
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7698
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7710
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7722
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7734
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7771
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7799
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7807
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7816
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7849
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7854
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7860
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7867
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7871
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7876
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7880
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7886
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7892
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7899
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7906
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7915
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7922
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7929
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7938
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7946
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7952
		{
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7954
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7964
		{
			yyVAL.str = ""
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

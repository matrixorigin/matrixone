// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PUBLICATION = 57624
const SUBSCRIPTIONS = 57625
const PUBLICATIONS = 57626
const PROPERTIES = 57627
const PARSER = 57628
const VISIBLE = 57629
const INVISIBLE = 57630
const BTREE = 57631
const HASH = 57632
const RTREE = 57633
const BSI = 57634
const ZONEMAP = 57635
const LEADING = 57636
const BOTH = 57637
const TRAILING = 57638
const UNKNOWN = 57639
const EXPIRE = 57640
const ACCOUNT = 57641
const ACCOUNTS = 57642
const UNLOCK = 57643
const DAY = 57644
const NEVER = 57645
const PUMP = 57646
const MYSQL_COMPATBILITY_MODE = 57647
const SECOND = 57648
const ASCII = 57649
const COALESCE = 57650
const COLLATION = 57651
const HOUR = 57652
const MICROSECOND = 57653
const MINUTE = 57654
const MONTH = 57655
const QUARTER = 57656
const REPEAT = 57657
const REVERSE = 57658
const ROW_COUNT = 57659
const WEEK = 57660
const REVOKE = 57661
const FUNCTION = 57662
const PRIVILEGES = 57663
const TABLESPACE = 57664
const EXECUTE = 57665
const SUPER = 57666
const GRANT = 57667
const OPTION = 57668
const REFERENCES = 57669
const REPLICATION = 57670
const SLAVE = 57671
const CLIENT = 57672
const USAGE = 57673
const RELOAD = 57674
const FILE = 57675
const TEMPORARY = 57676
const ROUTINE = 57677
const EVENT = 57678
const SHUTDOWN = 57679
const NULLX = 57680
const AUTO_INCREMENT = 57681
const APPROXNUM = 57682
const SIGNED = 57683
const UNSIGNED = 57684
const ZEROFILL = 57685
const ENGINES = 57686
const LOW_CARDINALITY = 57687
const ADMIN_NAME = 57688
const RANDOM = 57689
const SUSPEND = 57690
const ATTRIBUTE = 57691
const HISTORY = 57692
const REUSE = 57693
const CURRENT = 57694
const OPTIONAL = 57695
const FAILED_LOGIN_ATTEMPTS = 57696
const PASSWORD_LOCK_TIME = 57697
const UNBOUNDED = 57698
const SECONDARY = 57699
const USER = 57700
const IDENTIFIED = 57701
const CIPHER = 57702
const ISSUER = 57703
const X509 = 57704
const SUBJECT = 57705
const SAN = 57706
const REQUIRE = 57707
const SSL = 57708
const NONE = 57709
const PASSWORD = 57710
const MAX_QUERIES_PER_HOUR = 57711
const MAX_UPDATES_PER_HOUR = 57712
const MAX_CONNECTIONS_PER_HOUR = 57713
const MAX_USER_CONNECTIONS = 57714
const FORMAT = 57715
const VERBOSE = 57716
const CONNECTION = 57717
const TRIGGERS = 57718
const PROFILES = 57719
const LOAD = 57720
const INFILE = 57721
const TERMINATED = 57722
const OPTIONALLY = 57723
const ENCLOSED = 57724
const ESCAPED = 57725
const STARTING = 57726
const LINES = 57727
const ROWS = 57728
const IMPORT = 57729
const MODUMP = 57730
const OVER = 57731
const PRECEDING = 57732
const FOLLOWING = 57733
const GROUPS = 57734
const DATABASES = 57735
const TABLES = 57736
const EXTENDED = 57737
const FULL = 57738
const PROCESSLIST = 57739
const FIELDS = 57740
const COLUMNS = 57741
const OPEN = 57742
const ERRORS = 57743
const WARNINGS = 57744
const INDEXES = 57745
const SCHEMAS = 57746
const NODE = 57747
const LOCKS = 57748
const TABLE_NUMBER = 57749
const COLUMN_NUMBER = 57750
const TABLE_VALUES = 57751
const NAMES = 57752
const GLOBAL = 57753
const SESSION = 57754
const ISOLATION = 57755
const LEVEL = 57756
const READ = 57757
const WRITE = 57758
const ONLY = 57759
const REPEATABLE = 57760
const COMMITTED = 57761
const UNCOMMITTED = 57762
const SERIALIZABLE = 57763
const LOCAL = 57764
const EVENTS = 57765
const PLUGINS = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_TIME = 57769
const LOCALTIME = 57770
const LOCALTIMESTAMP = 57771
const UTC_DATE = 57772
const UTC_TIME = 57773
const UTC_TIMESTAMP = 57774
const REPLACE = 57775
const CONVERT = 57776
const SEPARATOR = 57777
const TIMESTAMPDIFF = 57778
const CURRENT_DATE = 57779
const CURRENT_USER = 57780
const CURRENT_ROLE = 57781
const SECOND_MICROSECOND = 57782
const MINUTE_MICROSECOND = 57783
const MINUTE_SECOND = 57784
const HOUR_MICROSECOND = 57785
const HOUR_SECOND = 57786
const HOUR_MINUTE = 57787
const DAY_MICROSECOND = 57788
const DAY_SECOND = 57789
const DAY_MINUTE = 57790
const DAY_HOUR = 57791
const YEAR_MONTH = 57792
const SQL_TSI_HOUR = 57793
const SQL_TSI_DAY = 57794
const SQL_TSI_WEEK = 57795
const SQL_TSI_MONTH = 57796
const SQL_TSI_QUARTER = 57797
const SQL_TSI_YEAR = 57798
const SQL_TSI_SECOND = 57799
const SQL_TSI_MINUTE = 57800
const RECURSIVE = 57801
const CONFIG = 57802
const DRAINER = 57803
const MATCH = 57804
const AGAINST = 57805
const BOOLEAN = 57806
const LANGUAGE = 57807
const WITH = 57808
const QUERY = 57809
const EXPANSION = 57810
const ADDDATE = 57811
const BIT_AND = 57812
const BIT_OR = 57813
const BIT_XOR = 57814
const CAST = 57815
const COUNT = 57816
const APPROX_COUNT_DISTINCT = 57817
const APPROX_PERCENTILE = 57818
const CURDATE = 57819
const CURTIME = 57820
const DATE_ADD = 57821
const DATE_SUB = 57822
const EXTRACT = 57823
const GROUP_CONCAT = 57824
const MAX = 57825
const MID = 57826
const MIN = 57827
const NOW = 57828
const POSITION = 57829
const SESSION_USER = 57830
const STD = 57831
const STDDEV = 57832
const MEDIAN = 57833
const STDDEV_POP = 57834
const STDDEV_SAMP = 57835
const SUBDATE = 57836
const SUBSTR = 57837
const SUBSTRING = 57838
const SUM = 57839
const SYSDATE = 57840
const SYSTEM_USER = 57841
const TRANSLATE = 57842
const TRIM = 57843
const VARIANCE = 57844
const VAR_POP = 57845
const VAR_SAMP = 57846
const AVG = 57847
const NEXTVAL = 57848
const SETVAL = 57849
const CURRVAL = 57850
const LASTVAL = 57851
const ARROW = 57852
const ROW = 57853
const OUTFILE = 57854
const HEADER = 57855
const MAX_FILE_SIZE = 57856
const FORCE_QUOTE = 57857
const PARALLEL = 57858
const UNUSED = 57859
const BINDINGS = 57860
const DO = 57861
const DECLARE = 57862
const KILL = 57863
const QUERY_RESULT = 57864

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8944

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 99,
	21, 573,
	-2, 554,
	-1, 108,
	215, 776,
	-2, 847,
	-1, 129,
	42, 399,
	215, 399,
	242, 406,
	243, 406,
	420, 399,
	-2, 431,
	-1, 455,
	291, 93,
	396, 93,
	-2, 1414,
	-1, 517,
	67, 1220,
	-2, 1554,
	-1, 518,
	67, 1238,
	-2, 1525,
	-1, 522,
	67, 1239,
	-2, 1553,
	-1, 544,
	67, 1152,
	-2, 1612,
	-1, 545,
	67, 1153,
	-2, 1611,
	-1, 546,
	67, 1154,
	-2, 1601,
	-1, 547,
	67, 1576,
	-2, 1596,
	-1, 548,
	67, 1577,
	-2, 1597,
	-1, 549,
	67, 1578,
	-2, 1603,
	-1, 550,
	67, 1579,
	-2, 1586,
	-1, 551,
	67, 1580,
	-2, 1594,
	-1, 552,
	67, 1581,
	-2, 1604,
	-1, 553,
	67, 1582,
	-2, 1605,
	-1, 554,
	67, 1583,
	-2, 1610,
	-1, 555,
	67, 1584,
	-2, 1615,
	-1, 556,
	67, 1585,
	-2, 1616,
	-1, 558,
	67, 1217,
	-2, 1406,
	-1, 565,
	67, 1226,
	-2, 1432,
	-1, 569,
	67, 1230,
	-2, 1471,
	-1, 570,
	67, 1231,
	-2, 1549,
	-1, 578,
	67, 1241,
	-2, 1534,
	-1, 580,
	67, 1243,
	-2, 1544,
	-1, 581,
	67, 1244,
	-2, 1567,
	-1, 592,
	67, 1130,
	-2, 1606,
	-1, 593,
	67, 1131,
	-2, 1607,
	-1, 594,
	67, 1132,
	-2, 1608,
	-1, 601,
	21, 574,
	-2, 537,
	-1, 658,
	415, 431,
	416, 431,
	-2, 400,
	-1, 707,
	104, 1406,
	115, 1406,
	135, 1406,
	-2, 1381,
	-1, 746,
	21, 574,
	-2, 537,
	-1, 847,
	21, 573,
	-2, 1038,
	-1, 1187,
	67, 1288,
	-2, 1551,
	-1, 1188,
	67, 1289,
	-2, 1552,
	-1, 1399,
	1, 310,
	68, 310,
	540, 310,
	-2, 811,
	-1, 1641,
	68, 1367,
	136, 1367,
	-2, 1536,
	-1, 1642,
	68, 1367,
	136, 1367,
	-2, 1535,
	-1, 1643,
	68, 1345,
	136, 1345,
	-2, 1522,
	-1, 1644,
	68, 1346,
	136, 1346,
	-2, 1527,
	-1, 1645,
	68, 1347,
	136, 1347,
	-2, 1459,
	-1, 1646,
	68, 1348,
	136, 1348,
	-2, 1453,
	-1, 1647,
	68, 1349,
	136, 1349,
	-2, 1397,
	-1, 1648,
	68, 1350,
	136, 1350,
	-2, 1524,
	-1, 1649,
	68, 1351,
	136, 1351,
	-2, 1457,
	-1, 1650,
	68, 1352,
	136, 1352,
	-2, 1452,
	-1, 1651,
	68, 1353,
	136, 1353,
	-2, 1445,
	-1, 1653,
	68, 1356,
	136, 1356,
	-2, 1567,
	-1, 1654,
	68, 1336,
	136, 1336,
	-2, 1554,
	-1, 1655,
	68, 1365,
	136, 1365,
	-2, 1525,
	-1, 1656,
	68, 1365,
	136, 1365,
	-2, 1553,
	-1, 1657,
	68, 1365,
	136, 1365,
	-2, 1415,
	-1, 1658,
	68, 1363,
	136, 1363,
	-2, 1544,
	-1, 1659,
	68, 1360,
	136, 1360,
	-2, 1437,
	-1, 1660,
	67, 1318,
	68, 1318,
	136, 1318,
	358, 1318,
	359, 1318,
	360, 1318,
	-2, 1396,
	-1, 1661,
	67, 1319,
	68, 1319,
	136, 1319,
	358, 1319,
	359, 1319,
	360, 1319,
	-2, 1398,
	-1, 1662,
	67, 1322,
	68, 1322,
	136, 1322,
	358, 1322,
	359, 1322,
	360, 1322,
	-2, 1526,
	-1, 1663,
	67, 1324,
	68, 1324,
	136, 1324,
	358, 1324,
	359, 1324,
	360, 1324,
	-2, 1509,
	-1, 1664,
	67, 1326,
	68, 1326,
	136, 1326,
	358, 1326,
	359, 1326,
	360, 1326,
	-2, 1458,
	-1, 1665,
	67, 1328,
	68, 1328,
	136, 1328,
	358, 1328,
	359, 1328,
	360, 1328,
	-2, 1441,
	-1, 1666,
	67, 1329,
	68, 1329,
	136, 1329,
	358, 1329,
	359, 1329,
	360, 1329,
	-2, 1442,
	-1, 1667,
	67, 1331,
	68, 1331,
	136, 1331,
	358, 1331,
	359, 1331,
	360, 1331,
	-2, 1395,
	-1, 1668,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1420,
	-1, 1669,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1433,
	-1, 1670,
	68, 1373,
	136, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	-2, 1416,
	-1, 1671,
	68, 1370,
	136, 1370,
	358, 1370,
	359, 1370,
	360, 1370,
	-2, 1494,
	-1, 1684,
	1, 804,
	68, 804,
	540, 804,
	-2, 811,
	-1, 1792,
	21, 573,
	-2, 665,
	-1, 1959,
	1, 805,
	68, 805,
	540, 805,
	-2, 811,
	-1, 1971,
	65, 481,
	136, 481,
	-2, 942,
	-1, 1988,
	276, 1006,
	-2, 985,
	-1, 2236,
	276, 1006,
	-2, 986,
	-1, 2363,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2366,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 890,
	-1, 2376,
	65, 481,
	136, 481,
	-2, 943,
	-1, 2464,
	88, 811,
	131, 811,
	168, 811,
	171, 811,
	-2, 891,
	-1, 2754,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2758,
	68, 862,
	136, 862,
	-2, 811,
	-1, 2772,
	68, 866,
	136, 866,
	-2, 811,
	-1, 2777,
	68, 867,
	136, 867,
	-2, 811,
}

const yyPrivate = 57344

const yyLast = 31868

var yyAct = [...]int{
	484, 1400, 2758, 2757, 2737, 2766, 1253, 1168, 466, 2647,
	2695, 464, 2687, 2665, 486, 2579, 2436, 2441, 2248, 2601,
	1631, 2602, 2586, 2570, 2458, 2495, 2315, 2590, 2457, 2514,
	2456, 2316, 2537, 878, 2439, 1019, 2505, 1319, 2483, 1974,
	150, 150, 1362, 514, 602, 1364, 150, 401, 408, 1171,
	2463, 408, 1823, 1164, 2213, 2053, 2054, 2386, 1462, 2052,
	2039, 2346, 2258, 2237, 1720, 2046, 1432, 2049, 468, 1786,
	2313, 1859, 1501, 2307, 1440, 1532, 1725, 2075, 1639, 419,
	2290, 2185, 2188, 413, 2183, 2257, 740, 706, 1960, 2095,
	1637, 1475, 1693, 2134, 980, 457, 1858, 597, 1509, 1403,
	1502, 1528, 458, 1329, 1510, 2089, 1310, 1455, 1072, 1787,
	2211, 639, 1527, 1435, 149, 149, 996, 463, 1775, 1938,
	392, 1721, 712, 1942, 1692, 1992, 3, 716, 43, 405,
	19, 1374, 1349, 1315, 402, 8, 1337, 597, 403, 6,
	715, 30, 1252, 404, 7, 1320, 738, 915, 998, 150,
	1826, 1560, 406, 31, 1162, 1677, 1529, 1101, 1900, 1635,
	467, 98, 1081, 1009, 1372, 456, 1539, 1619, 1217, 1201,
	1153, 1373, 757, 475, 43, 465, 1505, 397, 1508, 1486,
	1161, 1064, 698, 1794, 710, 960, 1348, 1167, 1459, 2464,
	638, 1388, 599, 394, 1223, 1222, 422, 421, 16, 1005,
	1051, 9, 4, 699, 1100, 407, 139, 1546, 978, 1861,
	1020, 654, 142, 2128, 2128, 1375, 636, 664, 1536, 145,
	144, 2510, 601, 742, 2506, 1824, 2314, 1333, 2630, 873,
	1504, 600, 879, 2545, 610, 1433, 2638, 777, 1846, 2448,
	1533, 143, 1053, 2554, 143, 2449, 39, 131, 109, 2157,
	390, 143, 417, 1854, 1739, 143, 411, 39, 131, 109,
	143, 1120, 39, 131, 109, 143, 1544, 39, 131, 109,
	143, 737, 43, 1681, 19, 1810, 2546, 1117, 143, 8,
	136, 1811, 143, 6, 813, 30, 2683, 124, 7, 143,
	1113, 137, 143, 1054, 1473, 1940, 97, 31, 1119, 1016,
	596, 140, 713, 1443, 1444, 2681, 1110, 1138, 140, 1025,
	1026, 82, 140, 1827, 2110, 146, 1034, 140, 2103, 1035,
	794, 793, 140, 795, 418, 97, 611, 1112, 97, 674,
	587, 1106, 586, 588, 589, 140, 590, 591, 806, 140,
	2523, 459, 722, 717, 721, 723, 140, 1939, 1384, 140,
	1154, 797, 1170, 1158, 1023, 1243, 811, 1022, 1025, 1026,
	709, 2605, 2606, 708, 2631, 2632, 679, 1901, 2317, 678,
	2669, 2670, 2572, 720, 2512, 2096, 2572, 1157, 2575, 2508,
	816, 817, 818, 815, 2097, 2637, 2098, 132, 133, 2317,
	134, 135, 1841, 760, 150, 750, 786, 784, 603, 788,
	1173, 751, 1037, 2515, 2516, 2517, 2518, 2585, 1456, 1945,
	408, 408, 2326, 150, 1448, 1149, 2347, 799, 1540, 749,
	800, 725, 2454, 791, 2199, 2354, 1766, 789, 727, 1676,
	2529, 1616, 1258, 2189, 2123, 745, 747, 1304, 1303, 108,
	1933, 141, 2197, 2255, 1452, 718, 809, 810, 802, 2121,
	2043, 808, 683, 1159, 1851, 108, 130, 141, 780, 80,
	1768, 129, 2532, 2640, 2641, 2522, 726, 2193, 748, 680,
	2451, 2524, 1014, 744, 1156, 2685, 849, 129, 123, 122,
	2204, 1771, 792, 452, 45, 2676, 454, 768, 760, 2210,
	2542, 453, 2217, 2594, 2194, 2195, 772, 1967, 1545, 781,
	2604, 1179, 1182, 1183, 719, 1172, 410, 1239, 409, 2196,
	1046, 1236, 1180, 2406, 746, 1238, 1235, 1237, 1241, 1242,
	798, 2591, 783, 1240, 1471, 1472, 43, 43, 682, 2712,
	2680, 2751, 804, 805, 787, 790, 2767, 2705, 711, 1549,
	1551, 1552, 125, 126, 127, 2649, 1036, 2399, 2645, 2646,
	796, 2649, 1954, 1955, 1956, 1957, 803, 1004, 782, 1749,
	2497, 2191, 713, 2561, 2716, 1748, 2024, 2272, 138, 2412,
	2413, 1951, 724, 1878, 762, 761, 753, 754, 1060, 801,
	1155, 1059, 2690, 770, 1534, 1534, 92, 1534, 1018, 1017,
	128, 1039, 93, 2390, 1003, 1002, 681, 2368, 2768, 955,
	952, 953, 954, 2774, 1561, 1883, 2738, 1882, 1881, 1879,
	2762, 769, 2538, 977, 979, 765, 766, 2394, 2077, 2079,
	2330, 2127, 2338, 741, 981, 417, 785, 2569, 1052, 1847,
	2179, 713, 1801, 1537, 1025, 1026, 755, 2544, 639, 986,
	1548, 2543, 2639, 957, 2126, 94, 851, 852, 853, 854,
	855, 777, 990, 1025, 1026, 38, 1246, 1247, 1248, 1249,
	1250, 1251, 1244, 1245, 2484, 2485, 2486, 2488, 2487, 762,
	761, 1880, 1024, 989, 909, 988, 1547, 1015, 1729, 412,
	150, 993, 1048, 633, 634, 635, 1944, 2081, 1535, 1021,
	600, 1798, 2686, 675, 1057, 40, 2633, 2634, 2691, 1447,
	40, 597, 597, 597, 1107, 40, 1076, 1076, 2450, 150,
	982, 983, 984, 985, 110, 987, 1855, 110, 2200, 991,
	1457, 2530, 2190, 1797, 110, 2124, 408, 979, 110, 1104,
	1104, 1181, 776, 110, 2761, 1446, 2208, 685, 110, 1948,
	1949, 771, 2496, 110, 1115, 1445, 1083, 2192, 2136, 2135,
	686, 110, 2455, 1947, 1044, 110, 889, 890, 2470, 1074,
	1074, 1365, 110, 2717, 1136, 110, 1972, 1449, 1150, 1550,
	2780, 2773, 814, 677, 604, 2078, 676, 1076, 2287, 1076,
	750, 1121, 2283, 1082, 1726, 1729, 95, 96, 100, 711,
	2025, 2027, 2028, 2029, 2026, 1800, 1799, 1451, 1012, 1884,
	1885, 2779, 819, 1730, 1169, 1028, 1029, 2222, 1031, 1032,
	1033, 848, 1011, 962, 777, 1078, 964, 2392, 1733, 857,
	1829, 2391, 2364, 2688, 2689, 2395, 2396, 2770, 675, 1131,
	1132, 730, 735, 736, 1055, 1056, 1625, 601, 814, 1846,
	862, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1047, 995, 1679, 1592, 1212, 1213, 1591,
	2209, 1221, 1006, 1010, 1010, 1785, 1038, 1027, 1040, 814,
	1030, 1743, 2752, 2747, 1271, 1261, 1262, 1263, 1973, 604,
	1166, 1785, 1006, 43, 1006, 1070, 1071, 1973, 1277, 1278,
	1058, 814, 43, 1111, 1144, 2771, 1365, 1118, 1280, 1141,
	2741, 1285, 1286, 1140, 1067, 1068, 1069, 689, 677, 597,
	1730, 676, 2740, 1935, 2721, 1723, 1825, 1145, 1135, 1724,
	1727, 1784, 2697, 390, 1084, 1834, 1134, 814, 1147, 2659,
	1812, 1097, 1122, 1127, 1105, 1098, 2612, 2607, 1533, 1184,
	1542, 2748, 2563, 1732, 816, 817, 818, 815, 1736, 1734,
	1630, 1678, 1305, 1735, 2562, 688, 2559, 1326, 1123, 691,
	690, 2558, 1629, 1143, 1163, 1596, 1142, 1139, 1542, 2557,
	601, 1728, 2556, 1160, 1165, 2533, 1524, 2414, 1270, 1469,
	1542, 150, 1542, 1347, 1076, 1351, 2274, 1353, 1354, 2155,
	2698, 2072, 150, 1327, 994, 639, 958, 2660, 1363, 732,
	733, 734, 1076, 1215, 2534, 2534, 1048, 1254, 1007, 1257,
	2564, 401, 1489, 1152, 1812, 1203, 2287, 1272, 1330, 1210,
	1211, 1924, 1697, 1308, 2534, 1311, 1312, 1785, 1279, 2534,
	1281, 816, 817, 818, 815, 1389, 1389, 2534, 1048, 1048,
	2534, 1048, 1346, 2534, 150, 1812, 1347, 1347, 1387, 1922,
	1076, 1430, 1442, 1571, 2275, 1344, 1061, 2735, 1378, 1785,
	1151, 1256, 597, 2699, 1076, 1352, 1358, 1920, 1317, 1318,
	1103, 1103, 687, 1918, 1385, 1386, 1628, 1906, 1862, 816,
	817, 818, 815, 1355, 1356, 1357, 1282, 2379, 2353, 1925,
	150, 1347, 1076, 1844, 1480, 150, 150, 1483, 2223, 1322,
	1485, 1325, 774, 2091, 1491, 1426, 1427, 1008, 150, 1838,
	1836, 1975, 1300, 1271, 1271, 1512, 1831, 1923, 1395, 1849,
	1271, 1271, 1848, 631, 1570, 1519, 1696, 1626, 743, 1600,
	1599, 1391, 775, 1487, 777, 1919, 1840, 1713, 1587, 1590,
	1453, 1919, 1581, 1377, 1580, 814, 814, 1579, 1334, 1363,
	1477, 1328, 1371, 1076, 1531, 1382, 1174, 1175, 1176, 1177,
	1178, 1697, 1541, 1128, 1476, 1458, 1380, 1381, 1572, 1476,
	1476, 1350, 1479, 1796, 775, 1366, 1367, 1832, 1837, 499,
	99, 1523, 1476, 1468, 1832, 1360, 1481, 1482, 1383, 1368,
	1513, 1525, 1494, 1359, 1697, 1625, 831, 814, 814, 1497,
	1219, 1220, 1370, 1393, 1376, 1394, 1255, 814, 692, 1392,
	814, 1554, 814, 1343, 1265, 814, 1124, 1507, 1006, 956,
	1558, 1559, 860, 391, 1507, 763, 99, 1390, 743, 1379,
	1542, 1129, 2595, 2227, 1399, 1431, 1429, 1350, 2118, 2218,
	1010, 743, 1065, 2471, 1454, 2371, 2369, 1063, 999, 1463,
	1464, 1465, 1000, 1066, 2730, 684, 43, 1869, 2718, 1466,
	1467, 832, 833, 834, 835, 836, 837, 838, 831, 1474,
	1260, 1259, 1478, 1007, 713, 2596, 1209, 1740, 2288, 1163,
	2279, 713, 2276, 1218, 2129, 1495, 2472, 2044, 2372, 2370,
	1597, 1206, 1208, 1205, 1835, 1207, 1514, 1604, 2219, 1516,
	1803, 1331, 1522, 752, 1345, 1335, 1521, 1517, 1338, 1518,
	839, 840, 832, 833, 834, 835, 836, 837, 838, 831,
	714, 1218, 1526, 1567, 99, 1283, 1284, 2673, 1062, 1287,
	1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 2220, 457, 750, 1672, 829, 839, 840, 832, 833,
	834, 835, 836, 837, 838, 831, 150, 150, 150, 1553,
	1694, 815, 1291, 1562, 818, 815, 713, 1640, 2402, 2401,
	1701, 1048, 1008, 2099, 2002, 1555, 1704, 2001, 1996, 1203,
	1706, 1991, 1556, 1557, 2715, 1566, 834, 835, 836, 837,
	838, 831, 1048, 816, 817, 818, 815, 2383, 750, 1275,
	2756, 1738, 1871, 2744, 2452, 2706, 1331, 1632, 1633, 2701,
	1276, 2650, 1331, 1331, 2351, 452, 2035, 1703, 454, 2620,
	2597, 1893, 1719, 453, 2047, 2547, 1707, 1708, 2714, 2033,
	1686, 1687, 1688, 2599, 2148, 2477, 487, 496, 1789, 1789,
	1442, 1789, 488, 2453, 495, 489, 493, 492, 490, 491,
	2031, 2474, 1716, 2352, 1705, 2034, 816, 817, 818, 815,
	2473, 1673, 816, 817, 818, 815, 2373, 2350, 2032, 1076,
	150, 822, 823, 824, 825, 826, 827, 828, 820, 2147,
	2021, 2198, 1621, 2174, 2173, 750, 2114, 2093, 1104, 2030,
	1442, 1742, 1583, 1818, 2019, 1820, 497, 816, 817, 818,
	815, 2018, 816, 817, 818, 815, 1793, 1634, 1791, 1640,
	1795, 2017, 1715, 2014, 2008, 1710, 1711, 1680, 1575, 2020,
	2005, 2004, 1808, 2589, 1842, 1624, 494, 1531, 1623, 2443,
	1622, 1709, 1815, 1618, 1076, 1702, 1076, 1617, 1076, 1125,
	2675, 1822, 975, 750, 1082, 1582, 816, 817, 818, 815,
	2184, 1712, 816, 817, 818, 815, 1817, 1564, 2442, 2437,
	1568, 2671, 2635, 1714, 2567, 2578, 2531, 1856, 816, 817,
	818, 815, 1076, 1887, 816, 817, 818, 815, 99, 99,
	714, 816, 817, 818, 815, 1769, 2507, 2462, 1894, 1852,
	2435, 2433, 2418, 1076, 816, 817, 818, 815, 2411, 2416,
	1578, 713, 2040, 1010, 2385, 2349, 1896, 2348, 1585, 830,
	829, 839, 840, 832, 833, 834, 835, 836, 837, 838,
	831, 816, 817, 818, 815, 1074, 1598, 2345, 1594, 1601,
	1602, 1603, 1809, 2335, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1898, 1614, 1814, 1816, 1074, 2329, 1873, 847,
	1853, 1860, 1804, 1805, 1806, 2282, 2280, 1741, 2270, 1744,
	1745, 1746, 1747, 2269, 2178, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1076,
	1886, 1867, 1952, 1845, 1926, 1843, 1347, 2332, 1850, 2172,
	2125, 2094, 1971, 2084, 2022, 2015, 2011, 2010, 1977, 2009,
	1627, 1895, 2151, 543, 542, 2549, 2150, 1698, 1863, 1864,
	816, 817, 818, 815, 1986, 1620, 1498, 2149, 1877, 1936,
	1496, 1163, 2366, 1990, 1340, 816, 817, 818, 815, 816,
	817, 818, 815, 1998, 1999, 2000, 1126, 1866, 888, 2003,
	816, 817, 818, 815, 884, 1962, 883, 861, 739, 1312,
	2365, 1980, 2363, 1789, 2340, 1982, 2339, 2334, 2321, 1902,
	2306, 2305, 2228, 2036, 1907, 2153, 1969, 1930, 2146, 1968,
	1915, 2138, 1347, 750, 1442, 1442, 1442, 1442, 1927, 2133,
	1978, 2088, 1934, 965, 1961, 750, 1442, 1921, 1917, 1789,
	1317, 1318, 1916, 816, 817, 818, 815, 2055, 1988, 1605,
	1595, 1993, 1076, 1993, 1593, 1331, 1331, 1331, 416, 2055,
	1589, 1950, 1588, 150, 150, 1322, 1970, 1325, 2745, 1586,
	1994, 1577, 1976, 43, 1574, 19, 1573, 1274, 1273, 1103,
	8, 1914, 1264, 1271, 6, 1271, 30, 1088, 2109, 7,
	2068, 2113, 1989, 143, 1985, 1086, 2769, 1076, 31, 2729,
	2120, 1979, 1995, 2723, 816, 817, 818, 815, 1913, 1983,
	1984, 2713, 2016, 2710, 2708, 2619, 1350, 830, 829, 839,
	840, 832, 833, 834, 835, 836, 837, 838, 831, 2565,
	880, 816, 817, 818, 815, 2041, 1307, 2086, 2087, 1330,
	2493, 1085, 2481, 2045, 2108, 2478, 391, 2426, 2071, 2069,
	140, 2424, 2067, 2070, 143, 2409, 2106, 131, 109, 1870,
	2408, 2085, 2112, 2407, 2082, 601, 2404, 1888, 1889, 2141,
	99, 2143, 1981, 2398, 99, 1891, 1892, 2117, 2092, 2122,
	2100, 1941, 2358, 2107, 2102, 99, 750, 2105, 1897, 2080,
	2159, 1316, 2187, 1309, 99, 997, 2037, 1997, 2116, 1965,
	1964, 1963, 2202, 1321, 150, 1324, 1313, 1830, 2130, 881,
	1640, 140, 1802, 1764, 750, 750, 750, 1331, 1695, 2137,
	1928, 1929, 1338, 1442, 1694, 1204, 2226, 140, 2144, 2145,
	1484, 1342, 2230, 2131, 2104, 2139, 2140, 1569, 1719, 1719,
	1719, 2111, 2259, 2261, 1314, 2259, 2259, 2006, 2007, 1148,
	1114, 959, 2266, 2012, 2013, 907, 906, 1076, 1076, 2056,
	2057, 2058, 2059, 905, 904, 903, 2142, 2175, 902, 901,
	2297, 2042, 900, 899, 898, 2229, 2180, 897, 2205, 2231,
	2232, 896, 895, 894, 627, 893, 892, 891, 150, 2224,
	887, 886, 885, 2187, 816, 817, 818, 815, 2206, 2207,
	2405, 1347, 1347, 2256, 882, 2260, 2221, 877, 2158, 1961,
	1074, 1074, 2160, 2161, 2162, 2163, 2225, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2214, 2215, 1865, 876, 874,
	2262, 2263, 605, 606, 607, 608, 873, 872, 871, 870,
	2182, 2264, 1887, 869, 868, 604, 2655, 1912, 867, 2286,
	830, 829, 839, 840, 832, 833, 834, 835, 836, 837,
	838, 831, 1476, 866, 2298, 2267, 2268, 865, 2284, 2285,
	816, 817, 818, 815, 2278, 1911, 2277, 150, 2281, 2273,
	864, 863, 859, 858, 2233, 779, 2291, 2292, 1700, 2295,
	2234, 2296, 1683, 767, 1087, 2653, 2603, 2312, 816, 817,
	818, 815, 2299, 2294, 2302, 2303, 2304, 629, 2755, 624,
	1953, 614, 1910, 1813, 1500, 778, 2311, 2061, 626, 625,
	2064, 2060, 1331, 1909, 2062, 2065, 2322, 1331, 2066, 2063,
	1781, 1782, 1839, 2323, 1908, 816, 817, 818, 815, 618,
	1833, 1905, 81, 2325, 42, 2324, 816, 817, 818, 815,
	2328, 2327, 1904, 2176, 2177, 1347, 1932, 816, 817, 818,
	815, 2362, 147, 2132, 816, 817, 818, 815, 2429, 41,
	2428, 1425, 1789, 1442, 2376, 816, 817, 818, 815, 2181,
	623, 1441, 1301, 1828, 622, 2152, 387, 1857, 388, 1674,
	612, 1632, 1633, 773, 617, 1076, 2341, 961, 1108, 2584,
	2344, 1987, 2384, 386, 2427, 1937, 150, 1690, 2343, 1361,
	1341, 615, 2662, 389, 1767, 2261, 2378, 1260, 1259, 2356,
	2377, 2301, 2357, 973, 974, 1428, 2380, 971, 972, 2381,
	1903, 1042, 613, 1041, 1347, 969, 970, 963, 750, 2375,
	807, 2374, 714, 967, 968, 1520, 630, 1001, 2387, 714,
	2382, 2256, 2724, 816, 817, 818, 815, 2643, 99, 1899,
	2626, 2624, 2055, 2592, 2577, 2576, 2431, 2574, 2566, 2504,
	616, 750, 2503, 2446, 2434, 1890, 2319, 2410, 2318, 1868,
	2403, 2420, 816, 817, 818, 815, 2415, 2309, 966, 2265,
	2417, 604, 2308, 2419, 2421, 2055, 1214, 2422, 816, 817,
	818, 815, 816, 817, 818, 815, 2090, 1365, 2656, 750,
	1076, 1076, 2657, 2656, 2657, 750, 2432, 2400, 2115, 816,
	817, 818, 815, 1772, 1685, 1576, 2438, 605, 606, 607,
	608, 2445, 764, 2320, 847, 1013, 50, 1470, 628, 1719,
	604, 1080, 1, 1339, 2447, 609, 1777, 1780, 1781, 1782,
	1778, 2073, 1779, 1783, 2074, 750, 2300, 2076, 750, 750,
	750, 1538, 1765, 1074, 2387, 2467, 2378, 2468, 2461, 2465,
	2475, 2476, 1675, 2201, 992, 1363, 632, 2501, 1266, 1133,
	1777, 1780, 1781, 1782, 1778, 2482, 1779, 1783, 2490, 2491,
	2492, 729, 759, 1130, 2479, 2489, 1563, 758, 756, 2528,
	1216, 501, 1503, 2525, 2038, 2500, 2498, 2661, 2694, 2618,
	2664, 1146, 2359, 2360, 2361, 485, 1738, 2499, 2460, 830,
	829, 839, 840, 832, 833, 834, 835, 836, 837, 838,
	831, 2568, 750, 2511, 2526, 2622, 2513, 1043, 2440, 1045,
	2331, 1049, 1050, 2444, 750, 1543, 2535, 2333, 812, 2101,
	650, 2540, 2539, 537, 512, 875, 1116, 1109, 2156, 731,
	511, 2355, 2555, 2551, 1946, 2541, 621, 728, 651, 1615,
	2548, 2509, 1302, 1323, 2560, 1306, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 2469, 750, 1099, 2367, 2216, 1966,
	2765, 2754, 2736, 2573, 2571, 2722, 2648, 2750, 2679, 2711,
	2521, 2519, 2520, 2704, 2644, 423, 2588, 1450, 595, 696,
	2494, 1499, 2240, 2587, 424, 2613, 2616, 1699, 2593, 2636,
	2480, 619, 1682, 620, 1959, 1958, 1185, 821, 1202, 2608,
	2609, 2610, 2611, 2617, 2598, 2336, 2250, 2337, 856, 462,
	1565, 2625, 474, 2627, 2628, 2623, 2629, 2621, 1943, 2243,
	2249, 2083, 49, 48, 47, 46, 2238, 1490, 154, 503,
	2642, 2253, 2254, 153, 2615, 2666, 483, 2239, 482, 1792,
	2668, 481, 2654, 2652, 480, 2651, 1776, 1774, 1773, 1437,
	1331, 2658, 1436, 2423, 2667, 1488, 2425, 1731, 1396, 2600,
	2552, 2553, 2397, 2672, 750, 2023, 2393, 2389, 2271, 2235,
	2430, 2236, 2242, 2244, 1689, 914, 910, 912, 913, 911,
	1876, 2693, 1872, 2682, 2684, 1717, 1718, 2212, 2677, 1441,
	2692, 2696, 976, 2527, 2342, 1638, 1636, 2702, 2293, 750,
	2289, 2203, 1511, 1336, 1931, 1438, 2703, 1434, 930, 2700,
	1770, 1684, 73, 2707, 72, 2709, 79, 121, 37, 2668,
	2720, 2466, 598, 1169, 32, 27, 5, 29, 28, 750,
	14, 750, 2719, 2667, 15, 13, 2726, 1137, 2728, 12,
	18, 26, 25, 24, 91, 2731, 2696, 90, 2732, 23,
	750, 89, 88, 1169, 2739, 1169, 2746, 2743, 87, 2749,
	86, 22, 2252, 11, 1722, 85, 84, 83, 21, 78,
	76, 20, 77, 2753, 1169, 74, 2760, 75, 60, 59,
	2764, 58, 2763, 70, 69, 68, 67, 66, 2772, 2246,
	65, 649, 57, 56, 2760, 2777, 2775, 2776, 55, 2764,
	54, 2778, 71, 64, 63, 62, 61, 53, 52, 51,
	918, 2245, 2247, 107, 106, 930, 105, 104, 103, 102,
	101, 2536, 33, 34, 35, 36, 117, 116, 938, 942,
	944, 946, 948, 949, 951, 118, 955, 952, 953, 954,
	2550, 120, 933, 934, 935, 936, 916, 917, 939, 119,
	919, 114, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 931, 937, 112, 115, 113, 111, 44, 10,
	17, 941, 943, 945, 947, 950, 2, 0, 0, 0,
	0, 0, 0, 2583, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 99, 0, 0, 2241, 0,
	0, 842, 0, 846, 2251, 0, 0, 0, 932, 0,
	0, 0, 2674, 0, 0, 0, 0, 918, 843, 845,
	841, 908, 844, 830, 829, 839, 840, 832, 833, 834,
	835, 836, 837, 838, 831, 938, 942, 944, 946, 948,
	949, 951, 2583, 955, 952, 953, 954, 2727, 0, 933,
	934, 935, 936, 916, 917, 939, 0, 919, 0, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 931,
	937, 0, 0, 1441, 1441, 1441, 1441, 0, 941, 943,
	945, 947, 950, 0, 0, 1441, 0, 0, 0, 0,
	2725, 0, 0, 0, 0, 0, 830, 829, 839, 840,
	832, 833, 834, 835, 836, 837, 838, 831, 0, 0,
	0, 0, 0, 0, 0, 932, 830, 829, 839, 840,
	832, 833, 834, 835, 836, 837, 838, 831, 0, 0,
	0, 99, 0, 0, 0, 2583, 1874, 1875, 99, 830,
	829, 839, 840, 832, 833, 834, 835, 836, 837, 838,
	831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	2734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 232, 0, 0, 257,
	0, 0, 0, 510, 0, 0, 317, 271, 0, 0,
	0, 2154, 566, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 500, 543, 542,
	487, 496, 0, 0, 213, 152, 488, 99, 495, 489,
	493, 492, 490, 491, 0, 558, 0, 0, 0, 0,
	0, 0, 460, 473, 2580, 477, 0, 0, 0, 940,
	830, 829, 839, 840, 832, 833, 834, 835, 836, 837,
	838, 831, 1441, 0, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 520, 0, 472, 99, 0, 515,
	497, 498, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	494, 518, 522, 225, 580, 516, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 581, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 513,
	0, 0, 0, 348, 0, 0, 564, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 517, 0, 307,
	289, 577, 461, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 366, 0, 367, 0,
	0, 0, 375, 379, 380, 381, 383, 384, 385, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 562, 285, 0, 0,
	576, 557, 559, 560, 563, 567, 568, 569, 570, 571,
	573, 575, 579, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 370, 373,
	0, 0, 1441, 201, 372, 0, 2581, 0, 0, 0,
	2582, 0, 578, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 521, 275, 276, 277, 278, 565, 0, 218,
	371, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 238,
	244, 382, 246, 217, 290, 240, 350, 253, 0, 376,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 587,
	561, 586, 588, 589, 585, 590, 591, 572, 479, 0,
	525, 583, 582, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	0, 299, 237, 550, 530, 531, 532, 478, 533, 528,
	529, 551, 523, 547, 548, 502, 526, 534, 546, 535,
	549, 552, 553, 592, 593, 541, 594, 538, 554, 545,
	544, 536, 524, 555, 556, 509, 504, 539, 540, 527,
	505, 506, 507, 508, 325, 519, 0, 356, 357, 358,
	378, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 510,
	0, 0, 317, 271, 0, 0, 0, 0, 566, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 500, 543, 542, 487, 496, 0, 0,
	213, 152, 488, 0, 495, 489, 493, 492, 490, 491,
	0, 558, 0, 0, 0, 0, 0, 0, 460, 473,
	0, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 471, 0, 0, 0, 0,
	520, 0, 472, 0, 0, 515, 497, 498, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 206, 336, 319, 268, 251, 252, 205,
	0, 304, 230, 243, 226, 284, 494, 518, 522, 225,
	580, 516, 346, 208, 0, 345, 283, 332, 337, 269,
	263, 207, 334, 267, 262, 255, 234, 581, 247, 295,
	261, 296, 248, 273, 272, 274, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 0, 0, 0, 348,
	0, 0, 564, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 517, 0, 307, 289, 577, 461, 0,
	305, 259, 333, 297, 339, 323, 347, 301, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 366, 0, 367, 0, 0, 0, 375, 379,
	380, 381, 383, 384, 385, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 1268, 1267, 1269, 360, 239, 196,
	197, 343, 562, 285, 0, 0, 576, 557, 559, 560,
	563, 567, 568, 569, 570, 571, 573, 575, 579, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 370, 373, 0, 0, 0, 201,
	372, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 521, 275,
	276, 277, 278, 565, 0, 218, 371, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 238, 244, 382, 246, 217,
	290, 240, 350, 253, 0, 376, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 587, 561, 586, 588, 589,
	585, 590, 591, 572, 479, 0, 525, 583, 582, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 258, 0, 299, 237, 550,
	530, 531, 532, 478, 533, 528, 529, 551, 523, 547,
	548, 502, 526, 534, 546, 535, 549, 552, 553, 592,
	593, 541, 594, 538, 554, 545, 544, 536, 524, 555,
	556, 509, 504, 539, 540, 527, 505, 506, 507, 508,
	325, 519, 0, 356, 357, 358, 378, 342, 0, 229,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 232, 0,
	0, 257, 0, 0, 0, 510, 0, 0, 317, 271,
	0, 0, 0, 0, 566, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 500,
	543, 542, 487, 496, 0, 0, 213, 152, 488, 0,
	495, 489, 493, 492, 490, 491, 0, 558, 0, 0,
	0, 0, 0, 0, 460, 473, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 471, 0, 0, 0, 0, 520, 0, 472, 0,
	0, 515, 497, 498, 0, 0, 204, 322, 338, 214,
	313, 351, 219, 320, 209, 286, 309, 0, 0, 206,
	336, 319, 268, 251, 252, 205, 0, 304, 230, 243,
	226, 284, 494, 518, 522, 225, 580, 516, 346, 208,
	0, 345, 283, 332, 337, 269, 263, 207, 334, 267,
	262, 255, 234, 581, 247, 295, 261, 296, 248, 273,
	272, 274, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 0, 0, 348, 0, 0, 564, 0,
	0, 0, 321, 0, 0, 256, 0, 0, 0, 517,
	0, 307, 289, 577, 461, 0, 305, 259, 333, 297,
	339, 323, 347, 301, 298, 199, 324, 228, 270, 210,
	212, 224, 231, 233, 235, 236, 279, 280, 292, 312,
	326, 327, 328, 227, 220, 306, 221, 245, 222, 200,
	314, 223, 202, 293, 331, 0, 241, 302, 266, 203,
	265, 294, 330, 329, 211, 355, 361, 362, 366, 0,
	367, 0, 0, 0, 375, 379, 380, 381, 383, 384,
	385, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 360, 239, 196, 197, 343, 562, 285,
	0, 0, 576, 557, 559, 560, 563, 567, 568, 569,
	570, 571, 573, 575, 579, 310, 0, 0, 0, 0,
	0, 250, 291, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 341, 353,
	370, 373, 0, 0, 0, 201, 372, 0, 2581, 0,
	0, 0, 2582, 0, 578, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 521, 275, 276, 277, 278, 565,
	0, 218, 371, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 238, 244, 382, 246, 217, 290, 240, 350, 253,
	0, 376, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 587, 561, 586, 588, 589, 585, 590, 591, 572,
	479, 0, 525, 583, 582, 584, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 550, 530, 531, 532, 478,
	533, 528, 529, 551, 523, 547, 548, 502, 526, 534,
	546, 535, 549, 552, 553, 592, 593, 541, 594, 538,
	554, 545, 544, 536, 524, 555, 556, 509, 504, 539,
	540, 527, 505, 506, 507, 508, 325, 519, 0, 356,
	357, 358, 378, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 232, 1332, 0, 257, 0, 0,
	0, 510, 0, 0, 317, 271, 0, 0, 0, 0,
	566, 574, 0, 0, 0, 0, 0, 0, 0, 1460,
	0, 0, 469, 0, 0, 500, 543, 542, 487, 496,
	0, 0, 213, 152, 488, 0, 495, 489, 493, 492,
	490, 491, 0, 558, 0, 0, 0, 0, 0, 0,
	460, 473, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 471, 0, 0,
	0, 0, 520, 0, 472, 0, 0, 1461, 497, 498,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 494, 518,
	522, 225, 580, 516, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 581,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 0,
	0, 348, 0, 0, 564, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 517, 0, 307, 289, 577,
	461, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 366, 0, 367, 0, 0, 0,
	375, 379, 380, 381, 383, 384, 385, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 562, 285, 0, 0, 576, 557,
	559, 560, 563, 567, 568, 569, 570, 571, 573, 575,
	579, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 370, 373, 0, 0,
	0, 201, 372, 0, 0, 0, 0, 0, 0, 0,
	578, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	521, 275, 276, 277, 278, 565, 0, 218, 371, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 238, 244, 382,
	246, 217, 290, 240, 350, 253, 0, 376, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 587, 561, 586,
	588, 589, 585, 590, 591, 572, 479, 0, 525, 583,
	582, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 550, 530, 531, 532, 478, 533, 528, 529, 551,
	523, 547, 548, 502, 526, 534, 546, 535, 549, 552,
	553, 592, 593, 541, 594, 538, 554, 545, 544, 536,
	524, 555, 556, 509, 504, 539, 540, 527, 505, 506,
	507, 508, 143, 325, 519, 356, 357, 358, 378, 342,
	0, 229, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 850, 0,
	0, 317, 271, 0, 0, 0, 0, 566, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 500, 543, 542, 487, 496, 0, 0, 213,
	152, 488, 0, 495, 489, 493, 492, 490, 491, 0,
	558, 0, 0, 0, 0, 0, 0, 460, 473, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 520,
	0, 472, 0, 0, 515, 497, 498, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 494, 518, 522, 225, 580,
	516, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 581, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 0, 348, 0,
	0, 564, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 517, 0, 307, 289, 577, 461, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 562, 285, 0, 0, 576, 557, 559, 560, 563,
	567, 568, 569, 570, 571, 573, 575, 579, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 521, 275, 276,
	277, 278, 565, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 587, 561, 586, 588, 589, 585,
	590, 591, 572, 479, 0, 525, 583, 582, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 110, 299, 237, 550, 530,
	531, 532, 478, 533, 528, 529, 551, 523, 547, 548,
	502, 526, 534, 546, 535, 549, 552, 553, 592, 593,
	541, 594, 538, 554, 545, 544, 536, 524, 555, 556,
	509, 504, 539, 540, 527, 505, 506, 507, 508, 325,
	519, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 0, 232, 2733, 0,
	257, 0, 0, 0, 510, 0, 0, 317, 271, 0,
	0, 0, 0, 566, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 500, 543,
	542, 487, 496, 0, 0, 213, 152, 488, 0, 495,
	489, 493, 492, 490, 491, 0, 558, 0, 0, 0,
	0, 0, 0, 460, 473, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	471, 0, 0, 0, 0, 520, 0, 472, 0, 0,
	515, 497, 498, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 494, 518, 522, 225, 580, 516, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 581, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 0, 0, 0, 348, 0, 0, 564, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 517, 0,
	307, 289, 577, 461, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 562, 285, 0,
	0, 576, 557, 559, 560, 563, 567, 568, 569, 570,
	571, 573, 575, 579, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 521, 275, 276, 277, 278, 565, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	587, 561, 586, 588, 589, 585, 590, 591, 572, 479,
	0, 525, 583, 582, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 550, 530, 531, 532, 478, 533,
	528, 529, 551, 523, 547, 548, 502, 526, 534, 546,
	535, 549, 552, 553, 592, 593, 541, 594, 538, 554,
	545, 544, 536, 524, 555, 556, 509, 504, 539, 540,
	527, 505, 506, 507, 508, 325, 519, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 232, 1332, 0, 257, 0, 0, 0,
	510, 0, 0, 317, 271, 0, 0, 0, 0, 566,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 500, 543, 542, 487, 496, 0,
	0, 213, 152, 488, 0, 495, 489, 493, 492, 490,
	491, 0, 558, 0, 0, 0, 0, 0, 0, 460,
	473, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 520, 0, 472, 0, 0, 515, 497, 498, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 494, 518, 522,
	225, 580, 516, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 581, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 0,
	348, 0, 0, 564, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 517, 0, 307, 289, 577, 461,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 562, 285, 0, 0, 576, 557, 559,
	560, 563, 567, 568, 569, 570, 571, 573, 575, 579,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 521,
	275, 276, 277, 278, 565, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 587, 561, 586, 588,
	589, 585, 590, 591, 572, 479, 0, 525, 583, 582,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	550, 530, 531, 532, 478, 533, 528, 529, 551, 523,
	547, 548, 502, 526, 534, 546, 535, 549, 552, 553,
	592, 593, 541, 594, 538, 554, 545, 544, 536, 524,
	555, 556, 509, 504, 539, 540, 527, 505, 506, 507,
	508, 325, 519, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 510, 0, 0, 317,
	271, 0, 0, 0, 0, 566, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	500, 543, 542, 487, 496, 0, 0, 213, 152, 488,
	0, 495, 489, 493, 492, 490, 491, 0, 558, 0,
	0, 0, 0, 0, 0, 460, 473, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 471, 1102, 0, 0, 0, 520, 0, 472,
	0, 0, 515, 497, 498, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 494, 518, 522, 225, 580, 516, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 581, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 0, 0, 0, 348, 0, 0, 564,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	517, 0, 307, 289, 577, 461, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 562,
	285, 0, 0, 576, 557, 559, 560, 563, 567, 568,
	569, 570, 571, 573, 575, 579, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 521, 275, 276, 277, 278,
	565, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 587, 561, 586, 588, 589, 585, 590, 591,
	572, 479, 0, 525, 583, 582, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 550, 530, 531, 532,
	478, 533, 528, 529, 551, 523, 547, 548, 502, 526,
	534, 546, 535, 549, 552, 553, 592, 593, 541, 594,
	538, 554, 545, 544, 536, 524, 555, 556, 509, 504,
	539, 540, 527, 505, 506, 507, 508, 0, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 325, 519, 0,
	0, 1584, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 510, 0, 0, 317, 271, 0, 0, 0,
	0, 566, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 500, 543, 542, 487,
	496, 0, 0, 213, 152, 488, 0, 495, 489, 493,
	492, 490, 491, 0, 558, 0, 0, 0, 0, 0,
	0, 460, 473, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 471, 0,
	0, 0, 0, 520, 0, 472, 0, 0, 515, 497,
	498, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 494,
	518, 522, 225, 580, 516, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	581, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 0,
	0, 0, 348, 0, 0, 564, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 517, 0, 307, 289,
	577, 461, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 562, 285, 0, 0, 576,
	557, 559, 560, 563, 567, 568, 569, 570, 571, 573,
	575, 579, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 578, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 521, 275, 276, 277, 278, 565, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 587, 561,
	586, 588, 589, 585, 590, 591, 572, 479, 0, 525,
	583, 582, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 550, 530, 531, 532, 478, 533, 528, 529,
	551, 523, 547, 548, 502, 526, 534, 546, 535, 549,
	552, 553, 592, 593, 541, 594, 538, 554, 545, 544,
	536, 524, 555, 556, 509, 504, 539, 540, 527, 505,
	506, 507, 508, 325, 519, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 510, 0,
	0, 317, 271, 0, 0, 0, 0, 566, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 500, 543, 542, 487, 496, 0, 0, 213,
	152, 488, 0, 495, 489, 493, 492, 490, 491, 0,
	558, 0, 0, 0, 0, 0, 0, 460, 473, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 520,
	0, 472, 0, 0, 515, 497, 498, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 494, 518, 522, 225, 580,
	516, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 581, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 0, 348, 0,
	0, 564, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 517, 0, 307, 289, 577, 461, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 562, 285, 0, 0, 576, 557, 559, 560, 563,
	567, 568, 569, 570, 571, 573, 575, 579, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 521, 275, 276,
	277, 278, 565, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 587, 561, 586, 588, 589, 585,
	590, 591, 572, 479, 0, 525, 583, 582, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 550, 530,
	531, 532, 478, 533, 528, 529, 551, 523, 547, 548,
	502, 526, 534, 546, 535, 549, 552, 553, 592, 593,
	541, 594, 538, 554, 545, 544, 536, 524, 555, 556,
	509, 504, 539, 540, 527, 505, 506, 507, 508, 325,
	519, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 0, 476, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 510, 0, 0, 317, 271, 0,
	0, 0, 0, 566, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 500, 543,
	542, 487, 496, 0, 0, 213, 152, 488, 0, 495,
	489, 493, 492, 490, 491, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 473, 0, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	471, 0, 0, 0, 0, 520, 0, 472, 0, 0,
	515, 497, 498, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 494, 518, 522, 225, 580, 516, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 581, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 0, 0, 0, 348, 0, 0, 564, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 517, 0,
	307, 289, 577, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 1187, 1188, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 562, 285, 0,
	0, 576, 557, 559, 560, 563, 567, 568, 569, 570,
	571, 573, 575, 579, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 521, 275, 276, 277, 278, 565, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	587, 561, 586, 588, 589, 585, 590, 591, 572, 479,
	0, 525, 583, 582, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 550, 530, 531, 532, 478, 533,
	528, 529, 551, 523, 547, 548, 502, 526, 534, 546,
	535, 549, 552, 553, 592, 593, 541, 594, 538, 554,
	545, 544, 536, 524, 555, 556, 509, 504, 539, 540,
	527, 505, 506, 507, 508, 325, 519, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	510, 0, 0, 317, 271, 0, 0, 0, 0, 566,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 543, 542, 487, 496, 0,
	0, 213, 152, 488, 0, 495, 489, 493, 492, 490,
	491, 0, 558, 0, 0, 0, 0, 0, 0, 460,
	473, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 520, 0, 472, 0, 0, 515, 497, 498, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 494, 518, 522,
	225, 580, 516, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 581, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 0,
	348, 0, 0, 564, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 517, 0, 307, 289, 577, 461,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 562, 285, 0, 0, 576, 557, 559,
	560, 563, 567, 568, 569, 570, 571, 573, 575, 579,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 521,
	275, 276, 277, 278, 565, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 587, 561, 586, 588,
	589, 585, 590, 591, 572, 479, 0, 525, 583, 582,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	550, 530, 531, 532, 478, 533, 528, 529, 551, 523,
	547, 548, 502, 526, 534, 546, 535, 549, 552, 553,
	592, 593, 541, 594, 538, 554, 545, 544, 536, 524,
	555, 556, 509, 504, 539, 540, 527, 505, 506, 507,
	508, 325, 519, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 510, 0, 0, 317,
	271, 0, 0, 0, 0, 566, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	500, 543, 542, 487, 496, 0, 0, 213, 152, 488,
	0, 495, 489, 493, 492, 490, 491, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 473, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 471, 0, 0, 0, 0, 520, 0, 472,
	0, 0, 515, 497, 498, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 494, 518, 522, 225, 580, 516, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 581, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 0, 0, 0, 348, 0, 0, 564,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	517, 0, 307, 289, 577, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 562,
	285, 0, 0, 576, 557, 559, 560, 563, 567, 568,
	569, 570, 571, 573, 575, 579, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 521, 275, 276, 277, 278,
	565, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 587, 561, 586, 588, 589, 585, 590, 591,
	572, 479, 0, 525, 583, 582, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 550, 530, 531, 532,
	478, 533, 528, 529, 551, 523, 547, 548, 502, 526,
	534, 546, 535, 549, 552, 553, 592, 593, 541, 594,
	538, 554, 545, 544, 536, 524, 555, 556, 509, 504,
	539, 540, 527, 505, 506, 507, 508, 0, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 143, 325, 39,
	131, 109, 0, 0, 0, 0, 0, 0, 0, 287,
	395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 317, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 213, 152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 322, 338, 214, 313, 351,
	219, 320, 209, 286, 309, 0, 0, 206, 336, 319,
	268, 251, 252, 205, 0, 304, 230, 243, 226, 284,
	0, 335, 363, 225, 354, 0, 346, 208, 0, 345,
	283, 332, 337, 269, 263, 207, 334, 267, 262, 255,
	234, 377, 247, 295, 261, 296, 248, 273, 272, 274,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 256, 0, 0, 0, 364, 0, 307,
	289, 0, 0, 0, 305, 259, 333, 297, 339, 323,
	347, 301, 298, 199, 324, 228, 270, 210, 212, 224,
	231, 233, 235, 236, 279, 280, 292, 312, 326, 327,
	328, 227, 220, 306, 221, 245, 222, 200, 314, 223,
	202, 293, 331, 0, 241, 302, 266, 203, 265, 294,
	330, 329, 211, 355, 361, 362, 366, 0, 367, 0,
	0, 0, 375, 379, 380, 381, 383, 384, 385, 0,
	0, 0, 0, 0, 369, 0, 0, 0, 0, 0,
	0, 360, 239, 196, 197, 343, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 359, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 250,
	291, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 341, 353, 370, 373,
	0, 0, 0, 201, 372, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 352, 0, 0, 0,
	0, 0, 368, 275, 276, 277, 278, 396, 398, 218,
	371, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 238,
	244, 382, 246, 217, 290, 240, 350, 253, 0, 376,
	0, 0, 0, 0, 282, 249, 315, 254, 260, 303,
	349, 288, 308, 215, 340, 316, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 258,
	110, 299, 237, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 0, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	192, 193, 194, 195, 325, 0, 0, 356, 357, 358,
	378, 342, 0, 229, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 317, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	213, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 918, 0, 0, 0, 0,
	204, 322, 338, 214, 313, 351, 219, 320, 209, 286,
	309, 0, 0, 1660, 1662, 1663, 1664, 1665, 1666, 1667,
	0, 1671, 1668, 1669, 1670, 284, 0, 1655, 1656, 1657,
	1658, 916, 1641, 1661, 0, 1642, 283, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1659, 295,
	261, 296, 248, 273, 272, 274, 941, 943, 945, 947,
	950, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 256,
	0, 0, 0, 1654, 0, 307, 289, 0, 0, 0,
	305, 259, 333, 297, 339, 323, 347, 301, 298, 199,
	324, 228, 270, 210, 212, 224, 231, 233, 235, 236,
	279, 280, 292, 312, 326, 327, 328, 227, 220, 306,
	221, 245, 222, 200, 314, 223, 202, 293, 331, 0,
	241, 302, 266, 203, 265, 294, 330, 329, 211, 355,
	361, 362, 366, 0, 367, 0, 0, 0, 375, 379,
	380, 381, 383, 384, 385, 0, 0, 0, 0, 0,
	369, 0, 0, 0, 0, 0, 0, 360, 239, 196,
	197, 343, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 359, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 250, 291, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 341, 353, 370, 373, 0, 0, 0, 201,
	372, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 352, 0, 0, 0, 0, 0, 368, 275,
	276, 277, 278, 242, 0, 218, 371, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 238, 244, 382, 246, 217,
	290, 240, 350, 253, 0, 376, 0, 0, 0, 0,
	282, 249, 315, 254, 260, 303, 349, 288, 308, 215,
	340, 316, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 940, 258, 0, 299, 237, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 0, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 192, 193, 194, 195,
	325, 0, 0, 356, 357, 358, 378, 342, 0, 229,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 317, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 213, 152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 1726, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 322, 338, 214,
	313, 351, 219, 320, 209, 286, 309, 0, 0, 206,
	336, 319, 268, 251, 252, 205, 0, 304, 230, 243,
	226, 284, 0, 335, 363, 225, 354, 0, 346, 208,
	0, 345, 283, 332, 337, 269, 263, 207, 334, 267,
	262, 255, 234, 377, 247, 295, 261, 296, 248, 273,
	272, 274, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 348, 0, 0, 0, 1723,
	0, 1722, 321, 1724, 1727, 256, 0, 0, 0, 364,
	0, 307, 289, 0, 0, 0, 305, 259, 333, 297,
	339, 323, 347, 301, 298, 199, 324, 228, 270, 210,
	212, 224, 231, 233, 235, 236, 279, 280, 292, 312,
	326, 327, 328, 227, 220, 306, 221, 245, 222, 200,
	314, 223, 202, 293, 331, 1728, 241, 302, 266, 203,
	265, 294, 330, 329, 211, 355, 361, 362, 366, 0,
	367, 0, 0, 0, 375, 379, 380, 381, 383, 384,
	385, 0, 0, 0, 0, 0, 369, 0, 0, 0,
	0, 0, 0, 360, 239, 196, 197, 343, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	359, 0, 0, 0, 0, 310, 0, 0, 0, 0,
	0, 250, 291, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 341, 353,
	370, 373, 0, 0, 0, 201, 372, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 368, 275, 276, 277, 278, 242,
	0, 218, 371, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 238, 244, 382, 246, 217, 290, 240, 350, 253,
	0, 376, 0, 0, 0, 0, 282, 249, 315, 254,
	260, 303, 349, 288, 308, 215, 340, 316, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 258, 0, 299, 237, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 0, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 192, 193, 194, 195, 325, 0, 0, 356,
	357, 358, 378, 342, 0, 229, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1492,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 1493, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 816, 817, 818, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 377,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 366, 0, 367, 0, 0, 0,
	375, 379, 380, 381, 383, 384, 385, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 370, 373, 0, 0,
	0, 201, 372, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	368, 275, 276, 277, 278, 242, 0, 218, 371, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 238, 244, 382,
	246, 217, 290, 240, 350, 253, 0, 376, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 0, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 325, 0, 0, 356, 357, 358, 378, 342,
	0, 229, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 695, 0, 257, 0, 0, 0, 0, 0, 0,
	317, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 703, 704, 0, 0, 0, 0, 213, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 322,
	338, 214, 313, 351, 219, 320, 209, 286, 309, 0,
	0, 206, 336, 319, 268, 251, 252, 205, 0, 304,
	230, 243, 226, 284, 0, 335, 363, 225, 354, 677,
	346, 208, 676, 345, 283, 332, 337, 269, 263, 207,
	334, 267, 262, 255, 234, 377, 247, 295, 261, 296,
	248, 273, 272, 274, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 256, 0, 0,
	0, 364, 0, 307, 289, 0, 0, 0, 305, 259,
	333, 297, 339, 323, 347, 693, 298, 199, 324, 228,
	270, 210, 212, 224, 231, 233, 235, 236, 279, 280,
	292, 312, 326, 327, 328, 227, 220, 306, 221, 245,
	222, 200, 314, 223, 202, 293, 331, 0, 241, 302,
	266, 203, 265, 294, 330, 329, 211, 355, 361, 362,
	366, 0, 367, 0, 0, 0, 375, 379, 380, 381,
	383, 384, 385, 0, 0, 0, 0, 0, 369, 0,
	0, 0, 0, 0, 0, 360, 239, 196, 197, 343,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 359, 0, 0, 0, 0, 310, 0, 0,
	0, 0, 0, 250, 291, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	341, 353, 370, 373, 0, 0, 0, 201, 372, 0,
	0, 0, 0, 0, 0, 694, 344, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 697, 275, 276, 277,
	278, 242, 0, 218, 371, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 238, 244, 382, 246, 217, 290, 240,
	350, 253, 0, 376, 0, 0, 0, 0, 705, 700,
	701, 254, 260, 303, 349, 288, 308, 215, 340, 316,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 258, 0, 299, 237, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 0,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 192, 193, 194, 195, 143, 325,
	0, 356, 357, 358, 378, 342, 0, 229, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 97, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 1515, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 110, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 143, 325, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 257, 0, 0,
	0, 97, 0, 0, 317, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1506, 0, 151, 0, 0, 0, 0,
	0, 0, 213, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 322, 338, 214, 313, 351, 219, 320,
	209, 286, 309, 0, 0, 206, 336, 319, 268, 251,
	252, 205, 0, 304, 230, 243, 226, 284, 0, 335,
	363, 225, 354, 0, 346, 208, 0, 345, 283, 332,
	337, 269, 263, 207, 334, 267, 262, 255, 234, 377,
	247, 295, 261, 296, 248, 273, 272, 274, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 256, 0, 0, 0, 364, 0, 307, 289, 0,
	0, 0, 305, 259, 333, 297, 339, 323, 347, 301,
	298, 199, 324, 228, 270, 210, 212, 224, 231, 233,
	235, 236, 279, 280, 292, 312, 326, 327, 328, 227,
	220, 306, 221, 245, 222, 200, 314, 223, 202, 293,
	331, 0, 241, 302, 266, 203, 265, 294, 330, 329,
	211, 355, 361, 362, 366, 0, 367, 0, 0, 0,
	375, 379, 380, 381, 383, 384, 385, 0, 0, 0,
	0, 0, 369, 0, 0, 0, 0, 0, 0, 360,
	239, 196, 197, 343, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 359, 0, 0, 0,
	0, 310, 0, 0, 0, 0, 0, 250, 291, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 341, 353, 370, 373, 0, 0,
	0, 201, 372, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 352, 0, 0, 0, 0, 0,
	368, 275, 276, 277, 278, 242, 0, 218, 371, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 238, 244, 382,
	246, 217, 290, 240, 350, 253, 0, 376, 0, 0,
	0, 0, 282, 249, 315, 254, 260, 303, 349, 288,
	308, 215, 340, 316, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 258, 110, 299,
	237, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 192, 193,
	194, 195, 143, 325, 0, 356, 357, 358, 378, 342,
	0, 229, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 97, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1439,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 110, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 703,
	704, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 677, 346, 208, 676,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 705, 700, 701, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 2050, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	1079, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 1077, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1075, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 1073, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 1077,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1075, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2663, 0, 151, 543, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 1077, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2388, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 1077, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1075, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 1790, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 1807, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 1077,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2742, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 543,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2678, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	2614, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 2502, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1439, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 2186,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 1077, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 1790, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 301, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 1819, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 0,
	0, 0, 356, 357, 358, 378, 342, 325, 229, 0,
	0, 1691, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 1077, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 1369, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	224, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 0, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 325, 0, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 317, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 213, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 322, 338, 214, 313, 351, 219, 320, 209,
	286, 309, 0, 0, 206, 336, 319, 268, 251, 252,
	205, 0, 304, 230, 243, 226, 284, 0, 335, 363,
	225, 354, 0, 346, 208, 0, 345, 283, 332, 337,
	269, 263, 207, 334, 267, 262, 255, 234, 377, 247,
	295, 261, 296, 248, 273, 272, 274, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	256, 0, 0, 0, 364, 0, 307, 289, 0, 0,
	0, 305, 259, 333, 297, 339, 323, 347, 414, 298,
	199, 324, 228, 270, 210, 212, 224, 231, 233, 235,
	236, 279, 280, 292, 312, 326, 327, 328, 227, 220,
	306, 221, 245, 222, 200, 314, 223, 202, 293, 331,
	0, 241, 302, 266, 203, 265, 294, 330, 329, 211,
	355, 361, 362, 366, 0, 367, 0, 0, 0, 375,
	379, 380, 381, 383, 384, 385, 0, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 360, 239,
	196, 197, 343, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 359, 0, 0, 0, 0,
	310, 0, 0, 0, 0, 0, 250, 291, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 341, 353, 370, 373, 0, 0, 0,
	201, 372, 0, 0, 0, 0, 0, 0, 415, 344,
	0, 0, 0, 352, 0, 0, 0, 0, 0, 368,
	275, 276, 277, 278, 242, 0, 218, 371, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 238, 244, 382, 246,
	217, 290, 240, 350, 253, 0, 376, 0, 0, 0,
	0, 282, 249, 315, 254, 260, 303, 349, 288, 308,
	215, 340, 316, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 258, 0, 299, 237,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 0, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 192, 193, 194,
	195, 325, 0, 0, 356, 357, 358, 378, 342, 0,
	229, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 317,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 213, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 322, 338,
	214, 313, 351, 219, 320, 209, 286, 309, 0, 0,
	206, 336, 319, 268, 251, 252, 205, 0, 304, 230,
	243, 226, 284, 0, 335, 363, 225, 354, 0, 346,
	208, 0, 345, 283, 332, 337, 269, 263, 207, 334,
	267, 262, 255, 234, 377, 247, 295, 261, 296, 248,
	273, 272, 274, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 348, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 256, 0, 0, 0,
	364, 0, 307, 289, 0, 0, 0, 305, 259, 333,
	297, 339, 323, 347, 301, 298, 199, 324, 228, 270,
	210, 212, 224, 231, 233, 235, 236, 279, 280, 292,
	312, 326, 327, 328, 227, 220, 306, 221, 245, 222,
	200, 314, 223, 202, 293, 331, 0, 241, 302, 266,
	203, 265, 294, 330, 329, 211, 355, 361, 362, 366,
	0, 367, 0, 0, 0, 375, 379, 380, 381, 383,
	384, 385, 0, 0, 0, 0, 0, 369, 0, 0,
	0, 0, 0, 0, 360, 239, 196, 197, 343, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 359, 0, 0, 0, 0, 310, 0, 0, 0,
	0, 0, 250, 291, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 341,
	353, 370, 373, 0, 0, 0, 201, 372, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 368, 275, 276, 277, 278,
	242, 0, 218, 371, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 238, 244, 382, 246, 217, 290, 240, 350,
	253, 0, 376, 0, 0, 0, 0, 282, 249, 315,
	254, 260, 303, 349, 288, 308, 215, 340, 316, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 258, 0, 299, 237, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 0, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 192, 193, 194, 195, 325, 0, 0,
	356, 357, 358, 378, 342, 0, 229, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 232, 0, 0, 257, 0,
	0, 0, 0, 0, 0, 317, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 213, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 322, 338, 214, 313, 351, 219,
	320, 209, 286, 309, 0, 0, 206, 336, 319, 268,
	251, 252, 205, 0, 304, 230, 243, 226, 284, 0,
	335, 363, 225, 354, 0, 346, 208, 0, 345, 283,
	332, 337, 269, 263, 207, 334, 267, 262, 255, 234,
	377, 247, 295, 261, 296, 248, 273, 272, 274, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 256, 0, 0, 0, 364, 0, 307, 289,
	0, 0, 0, 305, 259, 333, 297, 339, 323, 347,
	301, 298, 199, 324, 228, 270, 210, 212, 224, 231,
	233, 235, 236, 279, 280, 292, 312, 326, 327, 328,
	227, 220, 306, 221, 245, 222, 200, 314, 223, 202,
	293, 331, 0, 241, 302, 266, 203, 265, 294, 330,
	329, 211, 355, 361, 362, 366, 0, 367, 0, 0,
	0, 375, 379, 380, 381, 383, 384, 385, 0, 0,
	0, 0, 0, 369, 0, 0, 0, 0, 0, 0,
	360, 239, 196, 197, 343, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 359, 0, 0,
	0, 0, 310, 0, 0, 0, 0, 0, 250, 291,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 341, 353, 370, 373, 0,
	0, 0, 201, 372, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 352, 0, 0, 0, 0,
	0, 368, 275, 276, 277, 278, 242, 0, 218, 371,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 238, 244,
	382, 246, 217, 290, 240, 350, 253, 0, 376, 0,
	0, 0, 0, 282, 249, 315, 254, 260, 303, 349,
	288, 308, 215, 340, 316, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 258, 0,
	299, 237, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 0, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 192,
	193, 194, 195, 325, 0, 0, 356, 357, 358, 378,
	342, 0, 229, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 257, 0, 0, 0, 0, 0,
	0, 317, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 213,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	322, 338, 214, 313, 351, 219, 320, 209, 286, 309,
	0, 0, 206, 336, 319, 268, 251, 252, 205, 0,
	304, 230, 243, 226, 284, 0, 335, 363, 225, 354,
	0, 346, 208, 0, 345, 283, 332, 337, 269, 263,
	207, 334, 267, 262, 255, 234, 377, 247, 295, 261,
	296, 248, 273, 272, 274, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 256, 0,
	0, 0, 364, 0, 307, 289, 0, 0, 0, 305,
	259, 333, 297, 339, 323, 347, 301, 298, 199, 324,
	228, 270, 210, 212, 224, 231, 233, 235, 236, 279,
	280, 292, 312, 326, 327, 328, 227, 220, 306, 221,
	245, 222, 200, 314, 223, 202, 293, 331, 0, 241,
	302, 266, 203, 265, 294, 330, 329, 211, 355, 361,
	362, 366, 0, 367, 0, 0, 0, 375, 379, 380,
	381, 383, 384, 385, 0, 0, 0, 0, 0, 369,
	0, 0, 0, 0, 0, 0, 360, 239, 196, 197,
	343, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 359, 0, 0, 0, 0, 310, 0,
	0, 0, 0, 0, 250, 291, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 341, 353, 370, 373, 0, 0, 0, 201, 372,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 368, 275, 276,
	277, 278, 242, 0, 218, 371, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 238, 244, 382, 246, 217, 290,
	240, 350, 253, 0, 376, 0, 0, 0, 0, 282,
	249, 315, 254, 260, 303, 349, 288, 308, 215, 340,
	316, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 258, 0, 299, 237, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	0, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 192, 193, 194, 195, 325,
	0, 0, 356, 357, 358, 378, 342, 0, 229, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	257, 0, 0, 0, 0, 0, 0, 317, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 213, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 322, 338, 214, 313,
	351, 219, 320, 209, 286, 309, 0, 0, 206, 336,
	319, 268, 251, 252, 205, 0, 304, 230, 243, 226,
	284, 0, 335, 363, 225, 354, 0, 346, 208, 0,
	345, 283, 332, 337, 269, 263, 207, 334, 267, 262,
	255, 234, 377, 247, 295, 261, 296, 248, 273, 272,
	274, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 256, 0, 0, 0, 364, 0,
	307, 289, 0, 0, 0, 305, 259, 333, 297, 339,
	323, 347, 301, 298, 199, 324, 228, 270, 210, 212,
	455, 231, 233, 235, 236, 279, 280, 292, 312, 326,
	327, 328, 227, 220, 306, 221, 245, 222, 200, 314,
	223, 202, 293, 331, 0, 241, 302, 266, 203, 265,
	294, 330, 329, 211, 355, 361, 362, 366, 0, 367,
	0, 0, 0, 375, 379, 380, 381, 383, 384, 385,
	0, 0, 0, 0, 0, 369, 0, 0, 0, 0,
	0, 0, 360, 239, 196, 197, 343, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 359,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	250, 291, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 341, 353, 370,
	373, 0, 0, 0, 201, 372, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 352, 0, 0,
	0, 0, 0, 368, 275, 276, 277, 278, 242, 0,
	218, 371, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	238, 244, 382, 246, 217, 290, 240, 350, 253, 0,
	376, 0, 0, 930, 0, 282, 249, 315, 254, 260,
	303, 349, 288, 308, 215, 340, 316, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	258, 0, 299, 237, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 192, 193, 194, 195, 918, 675, 0, 356, 357,
	358, 378, 342, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 942, 944, 946, 948, 949, 951,
	0, 955, 952, 953, 954, 0, 0, 933, 934, 935,
	936, 916, 917, 939, 0, 919, 0, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 931, 937, 816,
	817, 818, 815, 0, 0, 0, 941, 943, 945, 947,
	950, 0, 0, 0, 0, 0, 434, 1243, 433, 440,
	430, 0, 0, 0, 0, 0, 677, 0, 0, 676,
	437, 438, 0, 439, 443, 0, 0, 425, 0, 0,
	0, 0, 0, 932, 0, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 1243, 452, 0, 0, 454,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 1236, 0, 659, 0, 1238, 1235, 1237,
	1241, 1242, 0, 1423, 640, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 428, 427, 0, 0, 0, 1425, 0, 665,
	0, 432, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 1236, 1423, 436, 0, 1238, 1235, 1237, 1241, 1242,
	451, 0, 0, 1240, 0, 0, 0, 429, 0, 0,
	0, 666, 671, 0, 1405, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1425, 0, 656, 0,
	658, 674, 0, 0, 0, 655, 653, 652, 0, 657,
	644, 645, 646, 647, 648, 0, 672, 673, 0, 1425,
	0, 0, 0, 2759, 940, 0, 0, 0, 668, 669,
	0, 0, 0, 1405, 0, 0, 0, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1246, 1247,
	1248, 1249, 1250, 1251, 1244, 1245, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 435, 441, 0,
	442, 444, 0, 0, 445, 446, 447, 0, 0, 449,
	450, 0, 0, 0, 0, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1246, 1247, 1248, 1249,
	1250, 1251, 1244, 1245, 1398, 1737, 0, 1397, 0, 0,
	0, 0, 1409, 0, 0, 434, 0, 433, 440, 430,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 437,
	438, 0, 439, 443, 0, 0, 425, 0, 0, 1423,
	0, 0, 0, 1402, 0, 0, 448, 1404, 1406, 1408,
	0, 1410, 1411, 1412, 1414, 1415, 1416, 1418, 1419, 1420,
	1421, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 1425, 0, 452, 0, 0, 454, 0,
	0, 0, 0, 453, 1409, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 1413, 1404, 1406, 1408, 1424,
	1410, 1411, 1412, 1414, 1415, 1416, 1418, 1419, 1420, 1421,
	1405, 0, 0, 0, 0, 1402, 0, 0, 0, 1404,
	1406, 1408, 0, 1410, 1411, 1412, 1414, 1415, 1416, 1418,
	1419, 1420, 1421, 0, 0, 0, 1422, 0, 0, 0,
	0, 0, 0, 434, 0, 433, 440, 430, 1424, 0,
	0, 0, 0, 1401, 0, 0, 0, 437, 438, 0,
	439, 443, 0, 0, 425, 0, 0, 0, 0, 0,
	0, 1424, 0, 0, 448, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 1422, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 0, 0, 1422, 0,
	426, 428, 427, 0, 0, 0, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 1401, 0, 0, 0, 0,
	0, 1417, 436, 0, 0, 0, 0, 0, 1407, 451,
	0, 0, 0, 0, 0, 0, 429, 0, 1409, 0,
	420, 0, 0, 0, 1417, 0, 0, 0, 0, 1413,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 0, 1404, 1406, 1408, 0, 1410, 1411, 1412,
	1414, 1415, 1416, 1418, 1419, 1420, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 0, 0, 426, 428,
	427, 0, 0, 0, 0, 431, 435, 441, 432, 442,
	444, 0, 0, 445, 446, 447, 0, 0, 449, 450,
	436, 0, 0, 0, 0, 0, 0, 451, 0, 0,
	0, 0, 1422, 0, 429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1417, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 435, 441, 0, 442, 444, 0,
	0, 445, 446, 447, 0, 0, 449, 450,
}

var yyPact = [...]int{
	250, -1000, -320, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -224, 29386,
	29386, -1000, -1000, 1894, -1000, 28870, 9767, 29902, 216, 214,
	29902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	466, -1000, 28354, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 406, 31385, 30418, 7692, 29902, -297, -1000, 2371,
	-158, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1945, 481,
	27838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30858,
	153, 481, 595, 611, 813, 813, 11831, -48, -51, 2371,
	282, 129, -1000, 800, 250, 29902, 1675, 387, 29902, -1000,
	1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 387, -1000, -1000, -1000,
	2371, 2371, -1000, 29902, 29902, 9, 1199, -1000, 255, 245,
	279, 1090, -1000, -1000, -1000, -1000, -1000, 2367, -1000, 29902,
	29902, 2078, 29902, -1000, 1345, 339, 31006, 2208, 1038, 515,
	2101, -1000, -1000, 2068, -1000, 120, 183, 107, 204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 122, -1000, 2264, -1000,
	-1000, 108, -1000, -1000, 100, -1000, -1000, -1000, -55, -1000,
	-1000, -1000, -1000, -1000, -1000, -155, -1000, -1000, 636, 1483,
	7692, -1000, 1367, -1000, 2786, -1000, -1000, -1000, -1000, 5102,
	9240, 9240, 9240, 9240, -1000, -1000, 1910, 7692, 2066, 2065,
	-1000, -1000, -1000, -1000, 1087, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1674, 8724, -1000,
	2064, 2063, 2050, 2046, 2031, 2027, 2026, 2022, 2021, 2020,
	2019, 2012, 2011, 1990, 1813, 1892, 1987, 1673, 1671, 1975,
	1974, 1973, 1665, 1813, 1813, 1970, 1969, 1968, 1966, 1965,
	1964, 1960, 1957, 1956, 1955, 1952, 1951, 1948, 1947, 1946,
	1939, 1938, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2765, -1000, 1084, 860, -1000,
	1934, 2209, 2266, 1833, 2318, 2262, 2254, 2246, 2242, 1463,
	-1000, -1000, 29902, 29902, 405, 405, 405, 405, 405, 424,
	405, 462, 460, 439, 405, -1000, -1000, -1000, -1000, -1000,
	-1000, 532, -1000, -1000, -1000, -1000, 858, 29902, -1000, 1878,
	1136, 2274, 353, 352, 278, -1000, 1258, 1258, 1258, 1136,
	257, 346, 2266, 2266, -57, -84, 1136, 1136, -84, 1136,
	1136, 1136, 103, -1000, -1000, -1000, 1258, 349, 1258, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2253, 2251, 406, 29902,
	33, 29902, 406, 406, 410, -1000, -190, -1000, -1000, 689,
	-1000, 547, -1000, 1345, 337, 334, 920, 1224, -1000, 1138,
	29902, 29902, 29902, 1138, 1138, 15446, 14930, -1000, 29902, -1000,
	2266, 1833, -1000, 1777, 2076, 1769, 1833, 406, 406, 406,
	406, 406, 406, 406, 406, 29902, 29902, 406, 6650, 6650,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 293, 2210,
	260, 1933, -1000, 29902, 231, 2266, 2209, 2266, -1000, -1000,
	1081, 1460, 1663, -1000, -1000, 255, 1095, -1000, 744, -1000,
	-1000, -1000, -1000, 29902, 234, -1000, -1000, 1632, 1932, -1000,
	384, 996, 998, -1000, 137, 31513, 24218, 1345, 24218, 29902,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -59, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 109, -1000, 7692, 7692, 7692, 7692, 7692, -1000,
	417, 8208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9240,
	9240, 9240, 9240, 9240, 9240, 9240, 9240, 9240, 9240, 9240,
	9240, 1908, 1179, 9240, 9240, 9240, 9240, 2076, 2278, 867,
	162, -1000, -1000, -1000, -1000, -1000, 1184, 1483, 7692, 7692,
	29902, -1000, 30908, 7692, 7692, 30850, 7692, 2236, 7692, 7692,
	7692, 1764, 3553, 29902, 7692, -1000, 1760, 1759, -1000, -1000,
	1331, 7692, 7692, -1000, -1000, 7692, 9240, 7692, -1000, -1000,
	-1000, 188, 2236, 2236, 7692, 7692, 2236, 2236, 2236, 1239,
	2236, 2236, 2236, 2236, 2236, 2236, 2236, 2236, 29902, 2192,
	79, -1000, -1000, -1000, 1819, -1000, 1876, 1876, 1876, 1876,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1889,
	1927, -1000, -1000, 1874, 1874, 1874, 1819, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1886, 1886, 1888, 1886, 29902, 2266, -297, 6134,
	-1000, -302, 2209, 7692, -1000, -1000, 7692, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1651, 2226, -1000, 1914, 1078,
	29902, 1209, 29902, 24218, 29902, 1345, 29902, 29902, 405, 405,
	405, 29902, 410, -1000, 29902, 858, 2225, 29902, 2341, 9240,
	9240, 27322, 1258, 1136, -1000, 29902, -1000, -1000, -1000, 1258,
	29902, 1258, 2341, 1258, -1000, -1000, -1000, 1136, 1136, -1000,
	-1000, -1000, -1000, 1258, 1258, -1000, -1000, -63, 2341, 2341,
	-106, -1000, -1000, -1000, 29902, 29902, 405, 29902, 29902, -1000,
	29902, -1000, -1000, 29902, 31177, 29902, 29902, 2245, -1000, 24218,
	29902, 22154, -1000, -130, 602, 589, 554, -1000, -1000, 383,
	413, 13898, 335, 24218, 4585, -1000, -1000, 1138, 1138, 1138,
	4585, 4585, 1052, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	843, -1000, 92, 2209, -1000, -1000, -1000, -1000, -1000, 29902,
	29902, 24218, 1345, 29902, 29902, 29902, 29902, -1000, 1913, 29902,
	997, -1000, -1000, 11315, 1057, 997, 1647, 29902, 1643, 2100,
	-298, -1000, 12865, 29902, 29902, -1000, -1000, -298, -1000, 12348,
	29902, 2209, -1000, 2209, 29902, -1000, 2272, -1000, 255, 184,
	-1000, -1000, -1000, -1000, -1000, -1000, 1046, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 840, -1000, 29902, -1000,
	-1000, 137, 24218, 25250, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 104, -1000, -1000, 147, -1000, 416, 42, 1094, -1000,
	-1000, 48, 134, 442, 1483, -1000, 1271, 1271, 1267, -1000,
	455, -1000, -1000, -1000, -1000, 1910, -1000, -1000, -1000, 1191,
	1227, -1000, 1263, 1263, 1068, 1068, 1068, 1068, 1068, 1140,
	1140, -1000, -1000, -1000, 5102, 1908, 9240, 9240, 9240, 9240,
	373, 373, 2879, 2352, -1000, 7692, 1222, -1000, 7692, 1953,
	988, 1033, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1758, 636, 1756, 1503, 2360, 1753, 7692, -1000,
	-1000, 1079, 1076, 1074, -1000, 1477, 7176, -1000, -1000, -1000,
	1751, 1003, 1744, -1000, -1000, -1000, 1742, 1071, 791, 1736,
	1492, 1732, 829, 7692, 7692, 1062, 1061, 7692, 7692, 7692,
	7692, 1731, 7692, 7692, 7692, 7692, 7692, 7692, 7692, 7692,
	-1000, 7692, 71, -1000, -1000, -1000, -1000, 1458, -1000, 1454,
	-1000, -1000, -1000, 1642, 1642, -1000, 1451, -1000, -1000, -1000,
	-1000, 1449, -1000, -1000, 1446, -1000, -1000, -1000, -1000, 1059,
	-1000, 1483, -1000, 1627, -1000, 940, 814, -1000, 1371, -1000,
	-1000, 29902, 10283, 29902, 1878, 2204, 66, -1000, 815, -1000,
	42, -170, 678, 2077, 2359, 29902, 29902, 29902, 2223, 26806,
	-1000, 1901, 1058, -1000, -1000, 7692, -1000, -1000, 2073, 29902,
	29902, 2341, -1000, -1000, -1000, 29902, -1000, -1000, -1000, 29902,
	2341, 2341, 1136, 1258, 1258, -1000, -1000, 1258, -1000, 1002,
	-1000, 29902, -1000, -1000, -1000, 1878, -1000, 10799, 728, 31249,
	-1000, 1173, 1173, 740, 1173, 1173, 1173, 1173, 312, 306,
	1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173,
	1173, 1173, 1173, 1173, 1896, -1000, 63, 2234, 138, 815,
	165, 2343, 891, -1000, -1000, -1000, -1000, 17510, 17510, 13382,
	17510, -1000, 1106, -1000, -1000, 579, 544, 649, -1000, -1000,
	415, -1000, -1000, 678, -1000, -1000, -1000, 1895, 1196, -1000,
	-1000, 1892, -1000, 4585, 4585, 4585, -1000, -1000, 18026, 29902,
	-1000, -164, -1000, -152, -1000, 794, -1000, -1000, 802, 678,
	2099, 794, 794, -1000, 10283, -1000, 2341, 6650, -1000, 22154,
	-1000, -1000, 26282, -1000, 25766, 2341, -306, 878, -102, -1000,
	2194, 684, -1000, 1890, -1000, 1048, 2144, -1000, 789, -1000,
	1190, 1042, -1000, 684, 1041, 2136, 789, -1000, -1000, 1001,
	0, -1000, -1000, 29902, 1632, 1025, 25250, 703, -1000, 412,
	987, 984, -1000, 24218, 112, 24218, -1000, 24218, -1000, -1000,
	233, -1000, 29902, 2199, -1000, -1000, -1000, 1578, -333, -1000,
	-1000, -1000, -1000, -1000, 1010, -1000, 373, 373, 2879, 1983,
	-1000, 9240, -1000, 9240, 2261, 1155, -1000, 7692, 1302, 2658,
	441, 16994, 29902, -1000, -1000, 7692, 7692, -1000, 2257, -1000,
	-1000, -1000, -1000, 7692, 7692, 1406, -1000, 29902, -1000, -1000,
	-1000, -1000, 16994, -1000, 9240, -1000, 7692, 755, 2241, -39,
	-39, 2212, 2134, 2123, 1009, -39, 2116, 2105, 2094, 2057,
	2029, 1790, 1763, 1702, 1483, -1000, -1000, 1724, 1720, 1005,
	-1000, 999, 1719, 981, 953, 6134, -1000, -102, 7692, 7692,
	7692, 2163, -1000, -1000, 90, 1714, 777, -1000, -1000, -1000,
	30813, 1876, 1876, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1889, -1000, -1000, 1874, 1874, 1874, 1819, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1886, 1886,
	1888, 1886, -1000, 2221, -1000, -70, 1173, 368, 24218, 327,
	-1000, 29902, 2096, 246, 2181, 29902, 1884, 1883, 1882, 201,
	30813, 29902, 751, -1000, 976, 250, -1000, 29902, 1483, -1000,
	1345, -1000, 1136, -1000, -1000, 2341, 993, -1000, -1000, 2341,
	1136, 1136, 1258, 29902, -1000, 2217, -1000, -1000, -1000, 30813,
	695, -1000, 29902, 1291, 588, 405, 588, 1288, 1880, -1000,
	-1000, -1000, 29902, 29902, 29902, 1287, 1284, 31413, -1000, 1442,
	-1000, 1441, 1173, 1173, 1435, 1626, 1624, 1623, 1173, 1173,
	1434, 1622, 24734, 1432, 1422, 1415, 1440, 1621, 526, 1410,
	1389, 1376, 29902, 1879, 1529, -70, 1173, 128, 1183, 368,
	1347, 14414, 29902, 22154, 22154, 22154, 22154, -1000, 2118, 2114,
	-1000, 2121, 2117, 2125, 29902, 22154, 1878, -1000, 24734, -1000,
	-1000, -1000, 2076, 923, 2377, 557, 7692, -1000, -1000, -1000,
	540, 24218, 1620, 335, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29902, 29902, 1713, 2339, -1000, 729, -1000, -1000,
	968, -1000, 2339, -1000, 1408, 1618, -27, -13, 1283, -298,
	6134, 272, 29902, -298, 29902, 6134, -1000, 29902, 268, -298,
	29902, 1407, -1000, -1000, -1000, 2353, 24218, 1345, 1115, 23702,
	-1000, 106, -1000, 102, 361, 1617, -1000, 431, 78, -1000,
	1180, 1578, -1000, -1000, -1000, 9240, -1000, -1000, -1000, -1000,
	1483, 7692, 1711, -1000, 594, 594, 1703, -1000, 1876, 1876,
	-1000, 1819, 1874, 1819, 594, 594, 1700, -1000, 1411, 1649,
	-1000, 1638, 1634, 7692, -1000, 1697, 3023, 853, -203, -39,
	-1000, 1873, -1000, -39, -39, -39, -39, -1000, -39, -39,
	-39, -39, -39, -39, -39, -39, -1000, -1000, -1000, 1616,
	-1000, -1000, -1000, 1405, -1000, 1404, -1000, -27, 1483, 1483,
	-1000, -1000, 2159, 1591, 419, 10283, 2189, 241, 1473, -1000,
	-1000, 23186, 356, -1000, -1000, -1000, 427, 127, 1402, 345,
	-1000, 29902, 164, 29902, -1000, -1000, -1000, -1000, -1000, 2181,
	-1000, 605, 190, 10799, 10799, 10799, 194, 1219, -1000, 387,
	742, 963, 22154, 29902, -1000, 21638, 1694, -1000, 678, 2341,
	-1000, 29902, -1000, 2341, 2341, 1136, -1000, 241, 2522, -1000,
	-1000, 29902, 29902, -1000, 29902, 29902, 405, 7692, -1000, -1000,
	-1000, 29902, -1000, -1000, -1000, -1000, 16994, 16994, -1000, -1000,
	-1000, -1000, 1590, 1585, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 320, 29902, 918, -1000,
	1178, 1473, 23186, 1176, 1583, 356, -1000, 1582, -1000, 646,
	29902, 29902, -1000, 880, -1000, 1174, 2072, 2089, 2072, -1000,
	-1000, -1000, -1000, 2088, -1000, 1967, -1000, -1000, 880, -1000,
	-1000, -1000, -1000, -1000, 557, -1000, 2248, 588, 588, 588,
	1693, -1000, 703, 1692, -1000, -1000, -1000, -1000, -1000, 2324,
	2317, 22670, 2324, -1000, -306, -304, -8, 2308, 2306, 2370,
	-1000, 1690, 700, -298, -1000, -1000, 684, -1000, -1000, -1000,
	-298, -1000, 684, -1000, -1000, 1345, -1000, 101, -1000, -1000,
	-1000, -1000, -1000, -1000, 27, -1000, 29902, -1000, 1578, 1574,
	77, -1000, 1483, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7692, -1000,
	-1000, -1000, 1619, -1000, -1000, 7692, 1689, 1560, -1000, 386,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1688, 1686, -304, -1000, -1000, -1000, 30813,
	-1000, 1363, -1000, -1000, 1554, 40, -1000, -1000, -1000, 1534,
	1532, 1388, -1000, -1000, 1374, 954, 56, -1000, -1000, -1000,
	-1000, -1000, -1000, 1347, 29902, 1865, -1000, 1173, 1173, 1173,
	29902, 1684, 686, -1000, 1682, 1654, 362, 1167, 1166, -1000,
	1387, 17510, 22154, 21638, 745, -1000, 952, -1000, -1000, -1000,
	2341, -1000, -1000, 2341, -1000, -1000, 2522, -1000, -1000, 1313,
	9240, -1000, -1000, 1531, 16478, 553, 577, 1856, -1000, 271,
	2354, -1000, 1279, 1278, -1000, 29902, -1000, 1849, 1985, 227,
	1846, -1000, 1843, 1838, 29902, 1530, -1000, -1000, -1000, -1000,
	-1000, -1000, 321, 909, -1000, 1529, 1526, -1000, 40, 1519,
	-1000, -1000, -1000, 29902, 646, 646, 2322, 29902, 6134, -1000,
	-1000, 7692, 1834, -1000, 7692, -1000, -1000, -1000, -1000, -1000,
	1830, 2201, -1000, -1000, -1000, -1000, -1000, -1000, 7692, 7692,
	-1000, -1000, -1000, -306, 1518, -1000, -1000, 2304, 1517, 1486,
	29902, -1000, 684, 684, 678, -1000, -1000, -106, -1000, -1000,
	-1000, 1490, -1000, 1461, -39, -1000, 2322, -1000, 2303, -1000,
	-1000, -306, -243, -1000, -1000, -1000, -1000, 225, -1000, -1000,
	151, -1000, -1000, 1364, 382, -1000, -1000, 646, 20606, 16994,
	16478, 1514, -1000, 31413, 10799, 109, 31413, 620, 1164, -1000,
	1381, -1000, 1372, -1000, 2341, 745, 952, -1000, -1000, 1110,
	-1000, -1000, -1000, -1000, 2879, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1356, 1828,
	-112, -1000, -1000, 1825, 20606, 358, 358, 20606, 20606, 20606,
	1823, 465, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2266, -1000, -1000, 1483, 29902, 1483, 21122, -1000, 2302, 2299,
	1483, 636, -308, -1000, 1513, -20, -1000, -1000, 642, -312,
	-28, 6, -1000, -1000, -1000, 62, 7692, -308, 29902, 357,
	1493, -1000, -1000, 143, -1000, -1000, 907, -1000, 1819, 7692,
	-1000, -1000, -1000, 376, 31249, -1000, -1000, -106, 376, 344,
	154, -1000, 1346, -1000, -1000, 2322, -1000, 1637, 7692, 1813,
	-236, 20606, 904, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	901, 893, 888, 20606, -1000, -1000, -1000, 286, -1000, 886,
	874, -1000, -1000, -1000, -1000, -1000, 1812, -1000, 2298, -1000,
	1491, 409, -29, 6, -1000, 2297, -21, 2295, 2294, 1497,
	-1000, 3037, -1000, -1000, -1000, 636, -1000, 2215, -1000, -1000,
	22, -1000, -1000, -1000, 20606, 2205, 1455, 236, 2293, -1000,
	236, -1000, 196, -1000, 1153, -1000, 1341, -1000, 2266, -1000,
	1365, -1000, 2082, -1000, 87, 869, -1000, -1000, -1000, -1000,
	868, -1000, -1000, -1000, 20090, 29902, 1486, -1000, 1798, 1340,
	-8, -25, 2291, -1000, 1486, 2290, 1486, 1486, -1000, -1000,
	4069, -300, -43, 289, 1489, -1000, 159, -1000, -1000, 2205,
	-1000, 2287, 270, -1000, -1000, -1000, 1332, -1000, -1000, 465,
	-1000, 2081, 2032, 2349, -1000, -1000, -1000, -1000, 159, 159,
	159, 159, 99, -1000, -1000, 861, -1000, -1000, 2232, 15962,
	-32, -1000, -1000, -1000, 1488, -1000, 1486, -1000, -1000, 1233,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1173, 1467, 182,
	-1000, -1000, -1000, 19574, 248, 238, 219, -1000, 385, -1000,
	-1000, -1000, -1000, 2351, -1000, 2344, 552, 552, -1000, -1000,
	29902, -1000, 29902, -1000, 854, -1000, -1000, -1000, 928, -1000,
	-1000, -1000, -1000, 4069, 1330, -1000, 29902, -1000, 29902, 254,
	1326, 9240, 1797, 9240, 1796, 249, 1794, -1000, -1000, -1000,
	1344, 291, -1000, -1000, 627, -1000, 1154, -1000, 19058, 29902,
	-1000, -1000, -1000, 846, 1786, 2282, -1000, 2902, 29902, 2859,
	29902, 1782, 1150, 9240, -1000, -1000, -1000, 29902, 5618, -1000,
	922, -1000, -1000, 370, 264, -1000, 844, -1000, 832, 18542,
	1324, 1750, -1000, -1000, 1483, 29902, 805, -1000, 29902, 247,
	-1000, -1000, -1000, 804, -1000, -1000, -1000, -1000, 370, 2112,
	-1000, 1321, -1000, -1000, 31226, 496, -1000, -1000, 31226, 253,
	-1000, 359, 1779, -1000, -1000, 759, -1000, 29902, 536, 7692,
	-1000, 253, 31413, -1000, 7692, 733, -1000, 31413, 702, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 126, 2856, 202, 138, 134, 201, 2850, 2849, 2219,
	2194, 2848, 2847, 2846, 2845, 2844, 2831, 2829, 2821, 2815,
	2807, 2806, 2805, 2804, 2803, 2802, 2800, 2799, 2798, 2797,
	2796, 2794, 2793, 198, 2789, 2788, 2787, 2786, 2785, 2784,
	2783, 2782, 2780, 2778, 2773, 2772, 2771, 2770, 2767, 2766,
	2765, 2764, 2763, 2761, 2759, 2758, 2757, 2755, 2752, 129,
	2751, 2192, 2750, 2749, 2748, 2747, 2746, 2745, 2743, 177,
	2741, 2740, 2738, 2732, 2731, 2729, 2727, 2724, 2723, 2722,
	2721, 2720, 2719, 2717, 2715, 2714, 2710, 143, 2708, 2707,
	140, 2706, 2705, 2704, 2702, 192, 185, 49, 2701, 34,
	2698, 2697, 2696, 2694, 2692, 65, 2691, 2690, 152, 161,
	206, 1179, 212, 204, 157, 124, 66, 2687, 2212, 2685,
	235, 183, 113, 20, 2684, 136, 2683, 122, 44, 35,
	210, 104, 42, 116, 86, 2682, 176, 67, 2681, 80,
	2680, 2678, 208, 159, 2676, 90, 2675, 2674, 2673, 2672,
	165, 110, 2667, 54, 2666, 121, 74, 92, 91, 2665,
	2662, 2660, 78, 2659, 2658, 2657, 2656, 147, 2655, 2654,
	93, 63, 2652, 2651, 2649, 50, 189, 108, 2648, 57,
	2647, 2646, 2645, 2642, 52, 2641, 2640, 12, 19, 21,
	2639, 18, 2638, 2637, 1, 2635, 179, 45, 73, 105,
	2632, 398, 2629, 2628, 2627, 118, 2626, 432, 2624, 2621,
	2618, 2616, 24, 2615, 167, 36, 2614, 71, 96, 87,
	171, 164, 2613, 2609, 2608, 254, 69, 53, 0, 2607,
	109, 2605, 2604, 2603, 205, 2602, 193, 163, 191, 148,
	211, 131, 2601, 2600, 64, 2598, 123, 68, 117, 11,
	2592, 175, 2590, 341, 151, 2589, 169, 2588, 142, 6,
	100, 2587, 2585, 33, 232, 2578, 2577, 2576, 88, 2575,
	2574, 94, 99, 2573, 2572, 2571, 30, 2570, 28, 22,
	2569, 79, 2567, 196, 2564, 187, 101, 154, 132, 112,
	180, 186, 56, 55, 2561, 1072, 107, 75, 25, 2560,
	182, 2559, 203, 181, 2558, 188, 2557, 197, 324, 170,
	2555, 156, 7, 32, 27, 2554, 9, 2553, 158, 2552,
	2551, 15, 2550, 17, 2549, 2548, 2547, 2546, 4, 2545,
	2542, 2541, 2, 5, 2540, 3, 173, 2539, 2538, 2537,
	2534, 37, 106, 2525, 133, 145, 2523, 2522, 70, 2521,
	2519, 2518, 1808, 2517, 2516, 2515, 2514, 2511, 2510, 2509,
	2508, 2507, 2506, 72, 43, 2505, 2504, 2503, 2500, 58,
	103, 2499, 2498, 2495, 2488, 29, 150, 2486, 16, 2485,
	26, 23, 31, 2483, 89, 2481, 14, 160, 2465, 2461,
	13, 2460, 2459, 8, 10, 2458, 2457, 85, 2455, 62,
	38, 125, 76, 2454, 60, 178, 98, 2452, 2451, 195,
	194, 168, 2450, 127, 190, 216, 2448, 172, 2447, 2443,
	2442, 2441, 2429, 2428, 1123, 2426, 2424, 200, 39, 59,
	81, 2423, 2422, 2412, 61, 119, 84, 82, 166, 2411,
	155, 2407, 2406, 77, 2404, 2401, 2395, 2393, 2392, 162,
	2391, 2387, 2386, 199, 215, 2385,
}

//line mysql_sql.y:8944
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 448, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 93, 446, 446, 446, 447, 447,
	91, 91, 91, 80, 92, 396, 396, 395, 395, 394,
	394, 349, 349, 393, 393, 393, 392, 392, 392, 391,
	391, 390, 390, 389, 389, 387, 387, 388, 386, 385,
	385, 385, 383, 383, 383, 379, 379, 381, 380, 380,
	382, 374, 374, 377, 377, 375, 375, 375, 375, 378,
	373, 373, 373, 372, 372, 79, 79, 79, 297, 297,
	78, 78, 311, 311, 311, 311, 311, 309, 309, 309,
	309, 309, 309, 308, 308, 307, 307, 312, 312, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 70, 70, 70, 70, 73, 73, 73, 74, 306,
	306, 306, 71, 72, 72, 296, 296, 301, 301, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 305, 305, 305, 303, 303, 302, 302, 304, 304,
	64, 64, 64, 67, 66, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 65, 65, 65, 65, 65, 65,
	60, 60, 60, 60, 60, 59, 59, 61, 61, 293,
	293, 292, 75, 75, 76, 450, 450, 449, 451, 451,
	451, 451, 77, 83, 83, 83, 83, 83, 83, 83,
	82, 82, 85, 85, 84, 86, 69, 69, 69, 69,
	69, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	420, 420, 420, 422, 422, 232, 233, 452, 235, 231,
	231, 231, 416, 416, 417, 418, 419, 419, 419, 81,
	7, 7, 7, 7, 7, 7, 58, 63, 192, 192,
	192, 193, 193, 193, 193, 193, 56, 62, 62, 433,
	433, 57, 440, 440, 352, 352, 246, 246, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 356, 357, 242, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	40, 39, 39, 39, 282, 282, 38, 453, 453, 221,
	221, 47, 48, 49, 50, 51, 52, 37, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 55, 55, 368,
	368, 455, 455, 455, 53, 54, 351, 351, 351, 45,
	44, 43, 42, 42, 36, 36, 35, 35, 41, 103,
	104, 239, 239, 239, 241, 241, 237, 454, 454, 323,
	323, 240, 240, 34, 34, 34, 34, 238, 238, 220,
	236, 236, 236, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 19, 21,
	290, 290, 287, 20, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 115, 115, 157,
	157, 428, 428, 424, 424, 425, 425, 425, 426, 426,
	427, 427, 87, 362, 362, 362, 362, 362, 362, 4,
	138, 138, 137, 137, 361, 361, 361, 361, 361, 361,
	294, 294, 405, 405, 405, 406, 136, 136, 131, 131,
	363, 363, 260, 407, 407, 371, 371, 370, 370, 369,
	369, 134, 134, 135, 135, 118, 118, 96, 96, 376,
	376, 376, 376, 384, 384, 348, 348, 184, 184, 215,
	215, 216, 216, 108, 108, 109, 109, 109, 109, 109,
	109, 413, 413, 415, 415, 414, 133, 133, 129, 129,
	130, 130, 130, 128, 128, 127, 126, 126, 125, 123,
	123, 123, 124, 124, 124, 111, 111, 111, 110, 110,
	110, 110, 110, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 112, 112, 421, 421, 421,
	353, 353, 353, 359, 359, 198, 198, 199, 199, 197,
	197, 113, 113, 114, 114, 114, 114, 196, 196, 195,
	116, 116, 122, 121, 121, 117, 117, 117, 117, 206,
	206, 205, 205, 205, 205, 90, 94, 94, 95, 141,
	141, 204, 203, 203, 203, 140, 140, 139, 139, 132,
	132, 120, 120, 120, 120, 202, 119, 200, 445, 445,
	444, 444, 443, 441, 441, 441, 442, 442, 442, 442,
	398, 398, 398, 398, 398, 226, 226, 226, 230, 230,
	229, 229, 229, 229, 229, 234, 3, 3, 3, 3,
	3, 25, 25, 25, 25, 25, 25, 25, 31, 149,
	150, 30, 142, 142, 143, 143, 144, 144, 145, 146,
	146, 146, 148, 147, 29, 22, 429, 432, 430, 430,
	434, 434, 434, 435, 435, 435, 436, 436, 23, 100,
	105, 105, 102, 107, 107, 107, 107, 107, 101, 431,
	437, 437, 437, 291, 291, 288, 289, 289, 286, 285,
	285, 285, 439, 439, 438, 438, 438, 227, 227, 24,
	281, 281, 283, 284, 284, 284, 275, 275, 275, 275,
	28, 279, 279, 280, 280, 280, 280, 280, 276, 276,
	278, 278, 274, 274, 274, 274, 274, 27, 106, 106,
	273, 273, 271, 271, 269, 269, 270, 270, 268, 268,
	268, 272, 272, 26, 26, 26, 98, 97, 97, 97,
	218, 218, 217, 217, 99, 32, 169, 169, 337, 337,
	337, 337, 337, 355, 355, 355, 338, 338, 338, 339,
	339, 339, 340, 340, 340, 340, 340, 354, 354, 313,
	313, 314, 314, 314, 317, 317, 329, 329, 330, 330,
	328, 328, 335, 335, 334, 334, 333, 333, 332, 332,
	331, 331, 331, 331, 326, 326, 325, 325, 315, 315,
	315, 315, 315, 316, 316, 316, 324, 324, 327, 327,
	175, 175, 176, 176, 176, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 403, 403, 404, 178, 178, 178,
	182, 182, 182, 182, 182, 182, 177, 177, 179, 179,
	158, 158, 156, 156, 151, 151, 152, 152, 153, 153,
	154, 154, 155, 155, 155, 155, 155, 155, 299, 299,
	401, 401, 402, 402, 397, 397, 397, 400, 400, 400,
	400, 400, 399, 399, 159, 213, 213, 213, 228, 228,
	228, 228, 212, 212, 212, 174, 174, 173, 173, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 298, 298, 243, 243, 244, 244,
	191, 190, 190, 190, 190, 190, 188, 189, 187, 187,
	187, 187, 187, 186, 186, 185, 185, 185, 277, 277,
	183, 183, 181, 181, 181, 180, 180, 180, 336, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 252, 252, 257, 257, 412, 412, 411, 160,
	160, 160, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 170, 170, 170, 321, 321, 321, 321, 321, 322,
	322, 322, 319, 319, 320, 320, 261, 262, 262, 360,
	360, 318, 318, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	367, 367, 367, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 423,
	423, 423, 408, 408, 408, 409, 409, 409, 409, 409,
	409, 409, 409, 409, 409, 409, 409, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 210, 210, 210, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	263, 263, 264, 264, 364, 364, 364, 364, 364, 364,
	365, 365, 366, 366, 366, 366, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 250, 207, 207, 207, 265,
	258, 258, 259, 259, 253, 253, 253, 253, 253, 253,
	253, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 254, 254, 256, 256, 267, 267, 267,
	266, 266, 266, 266, 266, 266, 266, 172, 172, 172,
	172, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 162, 162, 162, 162, 166, 166, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 167, 167, 167, 167, 165, 165, 165, 165,
	165, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 88, 89, 89,
	164, 214, 214, 341, 341, 344, 344, 342, 342, 343,
	345, 345, 345, 346, 346, 346, 347, 347, 347, 350,
	350, 219, 219, 219, 225, 225, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 7, 4, 2, 2,
	1, 2, 2, 2, 3, 2, 7, 7, 8, 0,
	4, 7, 0, 3, 0, 2, 0, 1, 1, 1,
	1, 4, 2, 2, 3, 3, 4, 5, 3, 4,
	4, 2, 2, 2, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 3, 2, 4, 4, 4, 4, 1, 1,
	1, 3, 2, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 6, 7, 4, 4, 7, 8, 3, 3,
	3, 0, 2, 2, 0, 2, 2, 1, 1, 1,
	1, 0, 1, 4, 4, 5, 4, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 2, 1, 3, 2, 1, 5, 4, 4, 2,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 8,
	0, 2, 6, 0, 2, 2, 3, 3, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 11, 9, 11, 2, 2, 4, 5,
	1, 3, 0, 3, 5, 10, 0, 2, 0, 3,
	2, 4, 3, 0, 2, 1, 0, 2, 3, 0,
	2, 3, 0, 3, 2, 4, 3, 0, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 6, 6, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 2, 4, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 6, 8, 6, 5, 5, 6, 6, 6,
	6, 5, 6, 6, 6, 6, 6, 6, 6, 6,
	1, 1, 1, 4, 4, 6, 8, 6, 4, 5,
	4, 4, 4, 3, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -448, -2, -1, -3, -91, -4, -87, -5, -6,
	-8, -68, -82, -84, -86, -85, -33, -7, -81, -59,
	-60, -64, -70, -75, -78, -79, -80, -92, -88, -89,
	-90, -108, -93, -25, -24, -23, -22, -100, 405, 12,
	450, -9, -10, -413, -11, 234, -231, -232, -233, -235,
	-452, -34, -35, -36, -42, -43, -44, -45, -53, -54,
	-55, -37, -38, -39, -40, -47, -48, -49, -50, -51,
	-52, -41, -103, -104, -57, -56, -62, -58, -63, -102,
	209, -61, 61, -65, -66, -67, -71, -72, -73, -74,
	-76, -77, 336, 342, 395, 536, 537, 46, -109, -111,
	538, -26, -27, -28, -29, -30, -31, -32, 205, 14,
	483, -12, -15, -13, -16, -14, -20, -21, -19, -17,
	-18, -101, 229, 228, 37, 292, 293, 294, 340, 227,
	206, 13, 137, 138, 140, 141, 30, 41, 318, -110,
	67, 207, -112, 10, 540, 443, 539, -118, 38, -156,
	-228, 70, 78, -222, -224, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 453, 523, 524, 525, 526, 316, 317, 480, 246,
	270, 366, 273, 280, 137, 156, 150, 178, 170, 145,
	250, 285, 251, 77, 140, 436, 88, 416, 392, 143,
	265, 267, 269, 272, 252, 166, 161, 264, 248, 536,
	159, 253, 39, 254, 183, 255, 256, 485, 412, 315,
	418, 277, 390, 160, 413, 268, 415, 185, 189, 428,
	342, 154, 155, 420, 430, 182, 226, 42, 482, 238,
	431, 187, 181, 177, 439, 281, 279, 180, 153, 176,
	249, 50, 191, 190, 192, 386, 387, 388, 389, 257,
	258, 330, 427, 173, 162, 320, 146, 22, 434, 233,
	417, 343, 259, 274, 282, 186, 188, 240, 245, 484,
	394, 244, 278, 432, 158, 237, 266, 232, 435, 147,
	336, 345, 260, 141, 271, 429, 438, 49, 358, 152,
	144, 223, 138, 242, 247, 11, 261, 262, 263, 284,
	283, 275, 174, 239, 179, 164, 151, 175, 139, 241,
	437, 359, 534, 318, 375, 172, 169, 243, 216, 433,
	419, 142, 379, 360, 167, 286, 530, 531, 532, 331,
	314, 287, 288, 165, 230, 411, 289, 291, 385, 307,
	361, 393, 367, 362, 198, 295, 422, 184, 533, 296,
	297, 298, 414, 299, 300, 301, -118, -61, -10, -9,
	-110, -111, -156, 213, -236, 23, 390, -69, 391, 209,
	67, -228, -5, -4, -87, -59, -108, -234, -228, 292,
	292, -234, 213, -228, 244, 374, -352, 219, -308, -281,
	245, -307, -283, -310, -284, 31, 205, 207, 206, 241,
	14, 340, 215, 12, 10, 341, 227, 24, 25, 27,
	13, 342, 344, 28, 345, 348, 349, 350, 41, 353,
	354, 234, 70, 78, 73, 252, -150, -228, -259, -253,
	95, 235, -255, -248, -249, -251, -393, -387, -247, 67,
	121, 122, 129, 96, -250, -336, 35, 98, 490, 451,
	-208, -209, -210, -211, -228, -388, -386, 73, 79, 82,
	85, 86, 84, 83, 163, 81, 74, 133, 134, -111,
	70, -408, 498, -223, 519, 523, 524, 525, 526, 518,
	46, -358, -366, 212, -364, 132, 168, 230, 164, 12,
	127, 385, 165, 495, 515, 453, 499, 522, 492, 493,
	487, 488, 489, 491, 500, 502, 514, -367, 510, 520,
	521, 508, 72, 71, 513, 512, 501, 496, 497, 503,
	486, 494, 504, 505, 511, 516, 517, 324, 88, 325,
	326, 443, 319, 327, 219, 390, 55, 328, 329, 330,
	331, 332, 450, 333, 56, 334, 323, 234, 375, 335,
	167, 184, 455, 454, 456, 447, 444, 442, 445, 446,
	448, 449, 506, 507, 509, -304, -302, -228, -94, -95,
	528, -127, -128, -201, 19, 6, 7, 8, 9, -446,
	392, 484, 295, 337, 216, 316, 375, 299, 244, -275,
	-273, -354, 289, 285, 214, 224, 223, 89, 443, 212,
	351, -424, -425, 202, 203, 204, -415, 476, -414, -228,
	326, 26, 213, 337, 422, 423, 424, 425, 426, -46,
	-368, -351, 419, 418, -240, 417, 410, 421, 412, 317,
	301, 300, 205, 477, -219, 361, 393, 240, 440, 441,
	338, 394, 428, 429, 413, 88, 171, 168, 216, 213,
	316, 443, 375, 299, -424, 142, 139, -295, 142, 94,
	147, 146, -295, 244, 374, 40, -301, 385, -300, -302,
	428, 429, 439, 71, 72, 427, -219, 88, 411, 411,
	-128, -201, -127, -109, -111, -90, -413, 214, 316, 375,
	244, 215, 213, 216, 443, 292, 337, 299, -353, -421,
	31, -359, 199, 200, 201, 32, 33, -1, -228, 73,
	-134, 236, -156, 135, -134, -128, -127, -128, -156, -212,
	-228, 392, 104, -69, -69, 391, -416, -417, -418, -420,
	209, 391, 390, 135, 15, -234, -234, 65, -156, -283,
	244, -308, -281, 35, 64, 136, 217, 136, 64, 67,
	338, 316, 375, 339, 214, 443, 213, 351, 216, 244,
	352, 316, 375, 214, 213, 216, 443, 244, 316, 213,
	216, 375, 244, 352, 410, 411, 216, 26, 343, 346,
	347, 411, -372, 439, 136, 94, 91, 92, 93, -253,
	111, -266, 104, 105, 106, 107, 108, 109, 110, 118,
	117, 128, 121, 122, 123, 124, 125, 126, 127, 119,
	120, 114, 95, 112, 116, 113, 97, -111, -253, -259,
	46, -251, -251, -251, -251, -336, -257, -253, 67, 67,
	135, 73, -253, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, -365, 67, 67, -263, -264,
	67, 67, 67, 73, 73, 67, 67, 67, 73, -264,
	-264, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 136, -162,
	-166, -163, -165, -164, -168, -167, 168, 169, 132, 172,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	30, 184, 230, 164, 165, 166, 167, 185, 150, 170,
	481, 193, 151, 194, 152, 195, 153, 196, 154, 155,
	197, 156, 159, 160, 161, 158, 135, -128, 136, 67,
	-96, 38, -130, 21, -112, -111, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 79, -149, -228, -142, -228,
	-271, 219, -271, -271, -271, -271, 215, -271, 213, 213,
	213, -271, -426, 149, 136, -415, -133, 67, -239, 112,
	116, 23, 242, 242, 279, -453, -454, 15, 114, -237,
	-454, -237, -239, -455, 215, 420, 42, 243, 242, -129,
	-130, -129, 414, 411, -323, 415, 416, -240, -239, -239,
	-240, -239, -239, -239, 213, 216, 443, 299, -453, 242,
	-453, 30, 30, -352, -156, -352, 477, -220, -228, -352,
	-352, -427, 218, 432, 483, 145, 146, 147, -283, 244,
	244, 136, 104, 23, -303, 104, 115, -302, -302, -302,
	-303, -303, -177, 40, -227, 132, -228, 73, -177, 40,
	-450, -449, -156, -129, -112, -111, 68, 68, 68, -352,
	-352, -352, -352, -352, -352, -352, -352, -234, -142, -352,
	-113, -114, 123, -253, -228, -113, 38, 411, 38, -361,
	46, -108, 67, 30, 67, -228, -362, 46, -108, 67,
	30, -129, -96, -130, 135, 79, 73, -69, 68, 136,
	-419, 85, 86, -422, 182, 174, -228, -83, 73, -3,
	-4, -5, -6, -33, -59, -108, -389, -387, 67, 31,
	384, 64, 15, -309, 213, 443, 337, 240, 216, 316,
	-307, -290, -287, -285, -227, -283, -286, -285, -312, -212,
	411, -97, 396, 291, -253, -253, -253, -253, -253, 84,
	95, 314, 85, 86, -248, -267, 31, 287, 288, -249,
	-249, -249, -249, -249, -249, -249, -249, -249, -249, -249,
	-249, -256, -265, -336, 67, 114, 112, 116, 113, 97,
	-251, -251, -249, -249, 68, 136, -412, -411, 99, -253,
	-253, -228, -409, -410, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 328, 323, 329, 327, 319,
	335, 330, 331, 167, 474, 475, 468, 469, 470, 471,
	472, 473, -258, -259, -258, -253, -409, -258, -207, 32,
	31, -259, -259, -259, 68, -253, -423, 312, 311, 313,
	-131, -228, -258, 68, 68, 68, 79, -259, -259, -258,
	-249, -258, -410, -207, -207, -259, -259, -207, -207, -207,
	-207, 123, -207, -207, -207, -207, -207, -207, -207, -207,
	-302, 40, -347, 359, 358, -341, -343, 67, -342, 67,
	-342, -342, -342, 67, 67, -344, 67, -344, -344, -341,
	-345, 67, -345, -346, 67, -345, -228, -129, -95, -370,
	-369, -253, 40, 529, -96, -253, -126, -125, -253, -447,
	73, 34, 67, 135, -156, 95, -429, -228, -291, -288,
	-285, -228, -281, -228, -228, -271, -271, -271, -156, -427,
	-414, 34, -132, -228, -197, 16, -251, -251, -285, 244,
	-453, -239, -221, -220, -241, -454, -236, -241, -197, -454,
	-239, -239, -241, -237, 411, -197, -197, -323, -238, -228,
	-238, -271, -220, -221, -221, -156, -192, 210, 207, -176,
	-194, 356, 246, -272, 250, 77, 251, 392, 252, 215,
	254, 255, 256, 226, 257, 258, 259, 385, 260, 261,
	262, 263, 339, 6, 302, 40, -429, -429, 30, -291,
	-228, -121, -116, -120, -117, -122, -200, -202, -119, 67,
	-156, -111, -228, 433, 434, 143, 146, 145, 31, 384,
	-306, 384, 31, -281, -300, -296, 73, 385, -286, -305,
	64, 132, -369, -303, -303, -303, -305, -305, 131, 136,
	-451, 432, 433, 202, -96, -158, -156, -429, -290, -281,
	-228, -158, -158, -228, 67, -228, -196, 136, -195, 15,
	-229, -228, 34, 73, 135, -196, 73, -158, 73, -294,
	64, -363, -260, -407, 528, -136, 68, -131, -405, -406,
	-131, -135, -228, -363, -136, 68, -405, -96, -96, -228,
	23, -69, -417, 135, 136, -132, -309, -289, -286, -311,
	123, -228, -297, 136, 483, 541, 71, 217, -439, -438,
	376, 68, 136, -373, 218, 450, 73, 542, 198, 84,
	314, 85, 86, -336, -259, -256, -251, -251, -249, -249,
	-254, 231, -254, 94, -253, -252, -411, 101, -253, 34,
	136, 65, 135, 68, 68, 15, 15, 68, -253, 68,
	68, 68, 68, 15, 15, -253, 68, 135, 68, 68,
	68, 68, 65, 68, 136, 68, 136, -259, -253, 68,
	68, -253, -253, -253, -259, 68, -253, -253, -253, -253,
	-253, -253, -253, -253, -253, -350, 360, 79, 79, -214,
	73, -214, 79, 79, 79, 136, 68, 73, 136, 22,
	136, -123, 36, 37, -150, -143, -144, -145, -146, -162,
	-212, 169, 172, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 230, 164, 165, 166, 167, 185,
	150, 170, 151, 152, 153, 154, 155, 156, 159, 160,
	161, 158, -228, -133, 35, -432, 363, -440, 136, 40,
	-438, 443, -274, 65, -106, 15, -156, -156, -156, -169,
	34, 15, -115, -157, -228, 67, 68, 136, -253, -282,
	65, -228, -221, -197, -228, -156, -228, -197, -197, -239,
	-241, -241, -237, 135, -220, -133, -153, -159, -154, -212,
	-244, -155, 222, 220, 224, -402, 89, 225, 276, 90,
	215, -193, 215, 90, 221, 225, 220, 136, -194, -225,
	104, -225, -219, 131, -225, -225, -225, -225, 253, 253,
	-225, -225, -225, -225, -225, -225, -225, -225, -225, -225,
	-225, -225, -225, -225, 67, -433, 363, 30, 322, -440,
	-107, 316, 30, -203, -204, -205, -206, 53, 57, 59,
	54, 55, 56, 60, 30, 136, -226, -230, 34, -228,
	73, -226, -111, -116, -121, -226, 67, 144, 147, 147,
	146, 217, 67, 104, -305, -305, -305, 40, -227, -449,
	439, 433, 136, 64, -143, -197, -114, -116, -228, 73,
	-228, 123, -197, -184, 531, 38, -376, 415, 39, 136,
	67, 68, 136, 46, 136, 104, 68, 136, 68, 46,
	135, 392, -228, -387, 68, -311, 136, 217, 135, 135,
	-287, 342, -227, -289, 20, 483, -212, 38, -218, -217,
	73, 542, 68, -254, -254, 94, -251, -248, 68, 102,
	-253, 100, -160, -162, 358, 359, -161, -167, 132, 168,
	230, 167, 166, 164, 358, 359, -177, -228, -253, -253,
	68, -253, -253, 15, -228, -177, -249, -253, -128, 68,
	-318, 406, -318, 68, 68, 68, 68, -318, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 136,
	68, 68, 68, 136, 68, 136, -369, -376, -253, -253,
	-125, -124, 43, 350, 68, 136, -162, 34, -435, 417,
	365, -225, -246, -245, 318, 41, -356, 385, 371, 372,
	-288, 244, -228, 64, 306, 307, 308, 309, -269, -270,
	-268, -272, -429, 67, 67, 67, -337, 296, -162, -156,
	-115, -228, 15, 136, -428, 135, -1, -228, -281, -239,
	-197, -454, -197, -239, -239, -241, -228, 34, -162, -155,
	-228, 90, -401, -402, -271, -401, 90, 67, -228, -228,
	-228, 90, 90, -194, 79, 79, -225, -225, 79, 73,
	73, 73, -225, -225, 79, 73, -230, 79, 79, 79,
	79, 40, 73, -182, 40, 264, 268, 265, 266, 267,
	79, 40, 79, 40, 79, 40, -228, 67, -403, -404,
	73, -435, -225, 322, 104, -246, -105, 77, 31, -137,
	210, 207, -429, -293, -292, -212, -120, -120, -120, -120,
	53, 53, 53, 58, 53, 58, 53, -205, -293, -122,
	-133, -230, 68, -445, -444, -443, -441, 61, 218, 62,
	-258, 147, -289, -242, 73, -296, -156, -156, 68, -199,
	17, 135, -199, 79, 73, -384, 402, 397, 399, 90,
	-260, -371, -370, 46, -108, -131, -363, -406, -369, -228,
	46, -108, -363, -228, 79, 15, -286, -281, 123, 123,
	-228, 343, -297, 73, 364, 73, 213, 543, 136, 104,
	-218, -248, -253, 68, -170, 155, 154, -170, 68, -342,
	-342, -341, -344, -341, -170, -170, 68, 68, 23, 68,
	68, 68, -253, 68, 68, 136, -360, 452, -318, 67,
	-318, -318, -318, -318, -318, -318, -318, -318, -318, -318,
	-318, -318, 73, 79, 79, -384, 44, 45, 73, 211,
	-145, 40, -108, -436, 77, -430, 73, -228, -437, 77,
	366, 134, 320, 40, 367, 368, 382, 315, 79, 79,
	373, -431, -228, -138, 316, -156, -268, -219, 131, 255,
	299, -151, -152, -153, -151, -151, -338, 298, 20, 79,
	122, -134, 65, 135, -116, -157, -228, 123, 68, -197,
	-228, -197, -197, -239, -108, -174, -173, -171, 84, 95,
	40, 356, -172, 77, 131, 269, 247, 270, -191, -243,
	64, 362, 220, 89, 90, 344, -244, -397, -399, -228,
	-399, -228, -397, -397, -271, -253, -228, -177, -177, 73,
	73, -178, 247, -158, 68, 136, 104, -436, -430, 104,
	73, -437, 73, 136, -137, -137, -197, 136, 104, -140,
	-139, 64, 65, -141, 64, -139, 53, 53, -197, -443,
	-442, 23, -402, -402, -402, 68, 68, -198, 18, 20,
	123, -198, -184, -348, 530, -380, -382, 397, 20, 20,
	13, 68, -363, -363, -281, -297, 385, -156, -217, 73,
	543, -253, 68, -253, 68, 73, -262, -261, 236, 68,
	68, -348, -147, -162, -247, 73, -434, 376, 73, 73,
	79, 40, 79, 134, 369, -357, -105, -137, 67, -225,
	-225, -225, -228, 68, 136, 68, 68, -339, 235, 79,
	122, 79, 122, 79, -226, -116, -228, -197, -428, 135,
	-197, -197, -171, 84, -249, 73, -179, -227, 132, -180,
	40, 268, 264, -181, 40, 248, 249, -183, 67, 276,
	13, 90, 90, -156, 67, 65, 286, 67, 67, 67,
	-399, 68, 248, 249, 68, -404, 73, -434, 73, -429,
	-128, -292, -369, -253, 67, -253, 67, 53, 19, 17,
	-253, -259, -184, 73, 20, 73, -378, 73, -293, -99,
	-374, -323, 68, 68, -318, -128, 20, -184, 482, 20,
	483, 319, 40, 79, 40, 370, -276, -278, -212, 67,
	-177, -179, 73, -175, -176, -153, -98, -97, -175, -340,
	138, 79, 122, 79, 79, -197, -197, 79, 67, -364,
	-277, 67, -276, -400, 306, 307, 308, 310, 309, -400,
	-276, -276, -276, 67, -299, -298, 277, 95, -129, -132,
	-398, -228, 220, 20, 20, -215, 532, 73, 399, -349,
	533, -383, 402, -377, -375, 397, 398, 399, 400, -320,
	-319, -322, 403, 278, 409, -259, -215, -148, -228, 73,
	364, 73, 319, 68, 136, -341, -253, -313, 236, -99,
	-313, -355, 146, 297, 483, 79, 122, 79, -128, 68,
	-253, -263, -186, -185, 479, -276, 68, 68, 68, 68,
	-276, 277, 68, 68, 136, 67, 20, 73, -385, 218,
	-381, -382, 401, -375, 20, 399, 20, 20, 68, -321,
	97, 369, 373, -253, 34, 385, -279, -278, -123, 68,
	-314, 285, 20, -314, 297, 79, 122, 79, -129, 68,
	-190, -188, -189, 64, 413, 274, 275, 68, -279, -279,
	-279, -279, 68, -228, 220, -216, -228, -378, -392, 67,
	79, -380, -379, -381, 20, -378, 20, -378, -378, -321,
	528, 407, 408, 407, 408, 73, -280, 226, 77, 483,
	304, 305, -123, 20, -315, 278, 279, -316, -327, 281,
	79, -298, -189, 64, -188, 64, 14, 13, -191, 68,
	136, -396, 30, 68, -391, -390, -213, -386, -228, 402,
	403, 73, -378, 94, -225, 73, 303, -212, 67, -325,
	282, 67, -323, 67, -323, 90, 307, -187, 271, 272,
	30, 146, -187, -228, -395, -394, -393, 68, 136, 135,
	-321, 79, -228, -312, -317, 283, 79, -249, 67, -249,
	67, -324, 280, 67, 84, 40, 273, 136, 104, -390,
	-228, 68, -329, 67, 20, 68, -312, 68, -312, 67,
	104, -249, -394, 40, -253, 135, -330, -328, 236, -316,
	68, 68, 68, -312, 79, 68, -228, 68, 136, -228,
	-326, 284, 68, -328, -331, 46, 79, -335, -332, 67,
	-194, 238, 114, -335, -194, -334, -333, 283, 239, 67,
	68, 136, -228, 235, 67, -259, -333, -332, -259, 68,
	68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 696, 697, 698, 699, 700, 0, 0,
	0, 470, 471, 0, 445, 0, 0, 0, 0, 0,
	0, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 300, 301, 302, 303, 304, 305,
	0, 235, 231, 210, 211, 212, 171, 172, 173, 174,
	242, 243, 324, 0, 0, 0, 0, 0, 553, -2,
	35, 701, 702, 703, 704, 705, 706, 707, -2, 483,
	0, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 289, 290, 291, 285, 286, 288, 287, -2,
	0, 483, 224, 0, 215, 215, 0, 0, 0, 573,
	0, 0, 588, 610, 33, 0, 0, 531, 0, 536,
	942, 978, 979, 980, 981, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 531, 236, 472, 473,
	573, 573, 443, 0, 271, 0, 1432, 275, 0, 0,
	0, 440, 266, 267, 268, 269, 270, 0, 695, 0,
	0, 262, 0, 230, 1491, 0, 0, 0, 0, 0,
	0, 113, 770, 115, 772, 119, 126, 0, 0, 133,
	134, 137, 138, 139, 140, 141, 0, 145, 0, 147,
	150, 0, 152, 153, 0, 156, 157, 158, 0, 168,
	169, 170, 773, 774, 775, -2, 44, 710, 1357, 1252,
	0, 1259, 1260, 1271, 1282, 1051, 1052, 1053, 1054, 0,
	0, 0, 0, 0, 1061, 1062, 0, 1074, 1590, 0,
	1068, 1069, 1070, 1071, 53, 65, 66, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 0, 1225, 1038,
	978, 0, 1598, 0, 1618, 1623, 1624, 1625, 1626, 1617,
	0, 0, 1210, 0, 1200, 0, 0, -2, -2, 0,
	0, 1558, -2, 1595, 1614, 1622, 1599, 1621, 1592, 1593,
	1587, 1588, 1589, 1591, 1600, 1602, 1613, 0, 1609, 1619,
	1620, 0, 67, 68, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1216, -2, 1218,
	1219, 1221, 1222, 1223, 1224, -2, 1227, 1228, 1229, -2,
	-2, 1232, 1233, 1234, 1235, 1236, 1237, 1240, -2, 1242,
	-2, -2, 1212, 1213, 1214, 1215, 1204, 1205, 1206, 1207,
	1208, 1209, -2, -2, -2, 0, 208, 206, 573, 646,
	0, -2, 0, 0, 0, 593, 596, 599, 602, 0,
	36, 37, 0, 0, 802, 802, 802, 802, 802, 0,
	802, 0, 0, 0, 802, 777, 778, 779, 800, 801,
	848, 488, 484, 485, 486, 487, 561, 0, 563, 566,
	421, 371, 0, 0, 0, 383, 377, 0, 0, 421,
	0, 0, 568, 568, 0, 431, 421, 421, -2, 421,
	421, 421, 0, 388, 389, 390, 377, 0, 377, 394,
	395, 396, 407, 408, 432, 1381, 0, 0, 324, 0,
	324, 0, 324, 324, 490, 225, 226, 214, 216, 0,
	220, 0, 213, 1491, 0, 0, 182, 1558, 187, 0,
	1439, 1505, 1454, 0, 0, 1472, 0, -2, 0, 252,
	568, 0, 574, 0, 573, 0, 0, 324, 324, 324,
	324, 324, 324, 324, 324, 0, 0, 324, 0, 0,
	611, 612, 607, 608, 609, 613, 614, 3, 0, 0,
	0, 0, 535, 0, 0, 568, -2, 0, 444, 272,
	982, 0, 0, 276, 277, 0, 0, 292, 0, 295,
	280, 281, 282, 0, 0, 264, 265, 0, 0, 232,
	0, 0, 0, 325, 0, 0, 0, 0, 0, 0,
	123, 120, 127, 130, 131, 142, 149, 0, 161, 163,
	166, 121, 128, 132, 135, 136, 143, 164, 122, 124,
	125, 129, 165, 167, 144, 148, 162, 146, 151, 154,
	155, 160, 0, 94, 0, 0, 0, 0, 0, 1258,
	0, 0, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1252, 0,
	0, 1057, 1058, 1059, 1060, 1063, 0, 1075, 0, 0,
	0, 1311, 0, 1250, 1250, 0, 1250, 1246, 0, 0,
	0, 0, 0, 0, 1250, 1188, 0, 0, 1190, 1201,
	0, 0, 0, 1194, 1195, 1250, 0, 1250, 1199, 1184,
	1185, 0, 1246, 1246, 0, 0, 1246, 1246, 1246, 1246,
	1246, 1246, 1246, 1246, 1246, 1246, 1246, 1246, 0, 1358,
	1376, 1313, 1314, 1315, 1363, 1317, 1367, 1367, 1367, 1367,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 0,
	0, 1356, 1336, 1365, 1365, 1365, 1363, 1360, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1370, 1370, 1373, 1370, 0, 568, 0, 0,
	556, 0, 537, 0, 590, 592, 0, 594, 595, 597,
	598, 600, 601, 603, 604, 38, 0, 709, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 802,
	802, 0, 490, 489, 0, 562, 0, 0, 619, 0,
	0, 0, 377, 421, 382, 379, 378, 427, 428, 424,
	0, 424, 619, 0, 401, 402, 403, 421, 421, 409,
	569, 410, 411, 424, 0, 429, 430, 0, 619, 619,
	0, 418, 419, 420, 0, 0, 802, 0, 379, 392,
	379, 1382, 1383, 0, 811, 0, 0, 0, 439, 0,
	0, 0, 491, 0, 0, 218, 0, 223, 175, 0,
	0, 0, 0, 0, 0, 204, 205, 0, 0, 0,
	0, 0, 195, 198, 936, 937, 767, 768, 199, 200,
	244, 245, 0, 537, 589, 591, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	627, 621, 623, 690, 53, 627, 0, 0, 0, 510,
	523, 505, 0, 512, 0, 943, 492, 523, 494, 0,
	512, 537, 559, 537, 0, 273, 0, 278, 0, 0,
	294, 296, 297, 298, 283, 284, 441, 260, 261, 253,
	254, 255, 256, 257, 258, 259, 263, 63, 0, 233,
	234, 0, 0, 0, 107, 108, 109, 110, 111, 112,
	114, 98, 460, 462, 759, 771, 0, 762, 0, 117,
	159, 90, 0, 0, 1253, 1254, 1255, 1256, 1257, 1261,
	0, 1263, 1265, 1267, 1269, 0, 1287, -2, -2, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1272, 1285, 1286, 0, 0, 0, 0, 0, 0,
	1283, 1283, 1278, 0, 1055, 0, 1072, 1076, 0, 0,
	0, 54, 1245, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 0, 1251, 0, 1252, 0, 0, 0, 1247,
	1248, 0, 0, 0, 1143, 0, 0, 1149, 1150, 1151,
	0, 518, 0, 1211, 1189, 1202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 1379, 1377, 1378, 1316, 1364, 0, 1341, 0,
	1342, 1343, 1344, 0, 0, 1337, 0, 1338, 1339, 1340,
	1332, 0, 1333, 1334, 0, 1335, 207, 645, 647, 0,
	527, 529, 530, 0, 557, 570, 575, 576, 579, 34,
	39, 0, 714, 0, 566, 0, 0, 726, 322, 753,
	0, 0, 769, 792, 798, 0, 0, 0, 826, 0,
	564, 0, 0, 659, 370, 0, 422, 423, 374, 1491,
	379, 619, 384, 380, 385, 0, 426, 386, 387, 0,
	619, 619, 421, 424, 424, 414, 415, 0, 433, 437,
	434, 0, 436, 391, 393, 566, 307, 0, 0, -2,
	892, 1384, 1384, 0, 1384, 1384, 1384, 1384, 0, 0,
	1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
	1384, 1384, 1384, 1384, 0, 812, 319, 0, 0, 322,
	743, 632, 0, 633, 634, 630, 661, 685, 685, 0,
	685, 665, 942, 227, 228, 0, 0, 222, 176, 177,
	0, 179, 180, 181, 188, 183, 185, 0, 0, 189,
	201, 202, 203, 0, 0, 0, 193, 194, 0, 0,
	247, 248, 250, 0, 555, 457, 940, 458, 459, 463,
	0, 465, 466, 467, 714, 748, 619, 0, 628, 0,
	624, 691, 0, 693, 0, 619, 547, 0, 539, 499,
	0, 504, 520, 0, 524, 0, 0, 516, 509, 513,
	0, 0, 533, 493, 0, 0, 498, 558, 560, 983,
	0, 279, 293, 0, 0, 0, 0, 101, 756, 0,
	102, 106, 96, 0, 0, 0, 761, 0, 758, 763,
	0, 116, 0, 0, 91, 92, 817, 822, 0, 1262,
	1264, 1266, 1268, 1270, 0, 1273, 1283, 1283, 1279, 0,
	1274, 0, 1276, 0, 1253, 0, 1077, 0, 0, 0,
	0, 0, 0, 1133, 1134, 0, 0, 1138, 0, 1140,
	1141, 1142, 1144, 0, 0, 0, 1148, 0, 1187, 1203,
	1191, 1192, 0, 1196, 0, 1198, 0, 573, 0, 1111,
	1111, 0, 0, 0, 0, 1111, 0, 0, 0, 0,
	0, 0, 0, 0, 1359, 1312, 1380, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 648, 539, 0, 0,
	0, 582, 580, 581, 0, 0, 715, 716, 718, 719,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1424, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 713, 0, 803, 733, 1384, 326, 0, 0,
	755, 0, 0, 0, -2, 0, 0, 0, 0, 828,
	0, 0, 0, 477, 481, 33, 567, 0, 620, 372,
	0, 373, 421, 381, 425, 619, 942, 404, 405, 619,
	421, 421, 424, 0, 435, 0, 308, 948, 949, 0,
	0, 951, 1008, 0, 960, 802, 960, 0, 0, 962,
	963, 309, 0, 0, 0, 0, 0, 811, 894, 0,
	1385, 0, 1384, 1384, 0, 0, 0, 0, 1384, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 733, 1384, 0, 0, 326,
	740, 0, 0, 0, 0, 0, 0, 652, 0, 0,
	651, 0, 0, 0, 0, 0, 566, 686, 0, 688,
	689, 663, -2, 0, 632, 668, 1250, 229, 217, 219,
	0, 0, 0, 0, 190, 191, 192, 196, 197, 246,
	249, 251, 0, 0, 0, 617, 622, 629, 692, 694,
	54, 625, 617, 40, 0, 0, 543, 0, 0, 523,
	525, 0, 0, 523, 0, 0, 532, 0, 0, 523,
	0, 0, 442, 64, 299, 0, 0, 0, 0, 0,
	461, 0, 760, 98, 0, 0, 118, 0, 0, 820,
	0, 822, 1249, 1275, 1277, 0, 1284, 1280, 1056, 1064,
	1073, 0, 0, 1079, 1091, 1091, 0, 1082, 1367, 1367,
	1085, 1363, 1365, 1363, 1091, 1091, 0, 55, 0, 0,
	1139, 0, 0, 0, 519, 0, 0, 0, 1109, 1111,
	1115, 0, 1116, 1111, 1111, 1111, 1111, 1121, 1111, 1111,
	1111, 1111, 1111, 1111, 1111, 1111, 1369, 1368, 1354, 0,
	1355, 1366, 1371, 0, 1374, 0, 528, 543, 571, 572,
	577, 578, 0, 0, 0, 0, 720, 0, 736, 734,
	735, 0, 750, 327, 328, 329, 330, 0, 0, 0,
	754, 0, 500, 0, 793, 794, 795, 796, 797, -2,
	806, 0, 0, 944, 944, 944, 836, 0, 827, 531,
	0, -2, 0, 0, 479, 0, 0, 660, 375, 619,
	397, 0, 412, 619, 619, 421, 438, 0, -2, 950,
	1009, 972, 972, 961, 972, 972, 802, 0, 311, 312,
	313, 0, 315, 893, 895, 896, 0, 0, 899, 900,
	901, 902, 0, 0, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 930, 931, 932, 933, 934, 935,
	915, 916, 917, 918, 919, 920, 927, 0, 0, 924,
	0, 736, 0, 0, 0, 750, 742, 0, 744, 745,
	0, 0, 502, 619, 239, 0, 655, 649, 0, 638,
	653, 654, 641, 0, 643, 0, 639, 640, 619, 631,
	662, 687, 664, 667, 669, 670, 676, 0, 0, 0,
	0, 221, 178, 0, 346, 184, 941, 464, 469, 615,
	0, 0, 615, 548, 547, 545, 78, 0, 0, 0,
	521, 0, 526, 523, 508, 517, 507, 514, 515, 534,
	523, 497, 496, 984, 274, 0, 757, 98, 103, 104,
	105, 99, 97, 764, 0, 766, 0, 818, 822, 0,
	0, 1281, 1078, 1065, 1080, 1092, 1093, 1081, 1066, 1083,
	1084, 1086, 1087, 1088, 1089, 1090, 1067, 1135, 0, 1137,
	1145, 1146, 0, 1193, 1197, 0, 0, 0, 1114, 1107,
	1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1362, 0, 0, 545, 583, 584, 708, 0,
	717, 0, 724, 725, 0, 0, 728, 729, 738, 0,
	0, 0, 332, 333, 0, 0, 0, 345, 341, 342,
	343, 323, 749, 740, 0, 0, 807, 1384, 1384, 1384,
	0, 0, 945, 946, 0, 0, 839, 0, 0, 830,
	0, 685, 0, 0, 619, 478, 481, 482, 565, 376,
	619, 416, 413, 619, 306, 974, -2, 987, 989, 0,
	0, 992, 993, 0, 0, 0, 0, 1030, 999, 0,
	0, 1003, 0, 1299, 1300, 0, 1007, 0, 964, 973,
	0, 973, 0, 0, 972, 0, 314, 897, 898, 903,
	904, 921, 0, 0, 923, 0, 0, 316, 0, 0,
	317, 321, 741, 0, 746, 747, 573, 0, 0, 635,
	656, 0, 0, 636, 0, 637, 642, 644, 238, 671,
	0, 0, 673, 674, 675, 666, 186, 605, 0, 0,
	626, 606, 41, 547, 0, 544, 79, 0, 0, 0,
	0, 522, 506, 495, 100, 95, 765, 81, 821, 823,
	819, 0, 1147, 0, 1111, 1110, 573, 1108, 0, 1372,
	1375, 547, 0, 723, 721, 737, 727, 0, 751, 752,
	0, 334, 335, 0, 338, 344, 739, 501, 0, 0,
	0, 0, 799, -2, 0, 0, -2, 842, 0, 837,
	0, 829, 0, 832, 619, 619, -2, 475, 480, 0,
	398, 417, 988, 990, 991, 994, 995, 938, 939, 996,
	1035, 1036, 1037, 997, 1032, 1033, 1034, 998, 0, 0,
	0, 1297, 1298, 1028, 0, 0, 0, 0, 0, 0,
	0, 958, 928, 929, 922, 925, 926, 320, 318, 503,
	568, 240, 241, 657, 0, 650, 680, 677, 0, 0,
	616, 618, 549, 546, 0, 540, 542, 89, 511, 51,
	72, 0, 1136, 1186, 1113, 1104, 0, 549, 0, 0,
	0, 331, 336, 0, 339, 340, 0, 788, 1363, 0,
	808, 809, 810, 849, -2, 947, 814, 81, 849, 833,
	0, 840, 0, 838, 831, 573, 476, 0, 0, 1200,
	1023, 0, 0, 965, 967, 968, 969, 970, 971, 966,
	0, 0, 0, 0, 957, 959, 1004, 0, 237, 0,
	0, 681, 683, 678, 679, 42, 0, 80, 0, 43,
	0, 69, 0, 82, 83, 0, 0, 0, 0, 0,
	1105, 0, 1099, 1100, 1101, 1106, 538, 0, 722, 730,
	0, 732, 337, 781, 0, 579, 0, 851, 0, 816,
	851, 825, 0, 835, 0, 844, 0, 841, 568, 1031,
	0, 1002, 1011, 1024, 0, 0, 781, 781, 781, 781,
	0, 1005, 658, 672, 0, 0, 0, 52, 56, 0,
	78, 75, 0, 84, 0, 0, 0, 0, 1112, 1102,
	0, 0, 0, 0, 0, 731, 780, 789, 790, 579,
	813, 0, 888, 815, 834, 843, 0, 846, 474, 1000,
	1010, 1012, 1013, 0, 1025, 1026, 1027, 1029, 952, 953,
	954, 955, 0, 682, 684, 0, 551, 541, 45, 0,
	0, 73, 74, 76, 0, 85, 0, 87, 88, 0,
	1094, 1095, 1097, 1096, 1098, 711, 782, 1384, 0, 0,
	786, 787, 791, 0, 876, 0, 0, 882, 0, 889,
	845, 1001, 1014, 0, 1015, 0, 0, 0, 956, 550,
	0, 824, 0, 57, 0, 59, 61, 62, 975, 70,
	71, 77, 86, 0, 0, 784, 0, 852, 0, 854,
	0, 0, 0, 0, 0, 886, 0, 1016, 1018, 1019,
	0, 0, 1017, 552, 46, 47, 0, 58, 0, 0,
	1103, 783, 785, 0, 856, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 1020, 1022, 1021, 0, 0, 60,
	976, 853, 850, 0, 888, 878, 0, 880, 0, 0,
	0, 0, 48, 49, 50, 0, 0, 858, 0, 874,
	879, 881, 883, 0, 887, 885, 977, 857, 0, 870,
	855, 0, 884, 859, -2, 0, 875, 860, -2, 0,
	868, 0, 0, 861, 869, 0, 864, 0, 0, 0,
	863, 0, -2, 871, 0, 0, 865, -2, 0, 873,
	872,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 540,
	105, 104, 106, 3, 541, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 542, 117, 543, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:659
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:665
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:700
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:705
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:711
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:731
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:737
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:744
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:752
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:758
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:776
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:786
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:832
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:838
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:842
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:848
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:855
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:867
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:881
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:885
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:889
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:902
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:908
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:917
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:928
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:932
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:938
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:942
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:948
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:952
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:958
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:982
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1001
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1005
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1009
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1025
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1033
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1040
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1045
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1052
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1061
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1085
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1089
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1095
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1101
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1119
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1136
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1159
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1163
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1176
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1182
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1195
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1206
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1233
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1246
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1259
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1265
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1286
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1322
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1326
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1339
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1348
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1352
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1554
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1558
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1562
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1574
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1581
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1588
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1597
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1627
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1635
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1641
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1647
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1651
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1658
		{
			yyVAL.str = yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1664
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1668
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1674
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1682
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1691
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1699
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1707
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1730
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1753
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1760
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1767
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1775
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1782
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1789
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1806
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1812
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1822
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1826
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1832
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1836
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1847
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1853
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1886
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1890
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1913
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1918
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1924
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1937
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1961
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1968
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1979
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1990
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1994
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2000
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2010
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2016
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2020
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2026
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2036
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2040
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2044
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2062
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2068
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2072
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2078
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2082
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2088
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2094
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2104
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2122
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2130
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2138
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2197
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2201
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2207
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2213
		{
			yyVAL.str = yyDollar[1].str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2218
		{
			yyVAL.str = "true"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.str = "false"
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.str = yyDollar[1].str
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2260
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2267
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2271
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2338
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2347
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2353
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2379
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2397
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2413
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2417
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2421
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2425
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2429
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2433
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2441
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2445
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2449
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2453
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2457
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2461
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2469
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2479
		{
			yyVAL.item = nil
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2484
		{
			yyVAL.item = nil
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2518
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2544
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2555
		{
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2559
		{
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2628
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2632
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2640
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2650
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2657
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2667
		{
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2669
		{
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2688
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2711
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2717
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2723
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2729
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2739
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2751
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2761
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2773
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2787
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2793
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2800
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2809
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2813
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2818
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2822
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2828
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2870
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2880
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2886
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2890
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2894
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2900
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2904
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2935
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2953
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2957
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2963
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2991
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3003
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3009
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3026
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3038
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3054
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3067
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3078
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3082
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3088
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3093
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3100
		{
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3102
		{
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3105
		{
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3114
		{
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3118
		{
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3123
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3132
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3145
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3153
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3167
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3200
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3206
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3210
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3216
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3229
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3237
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3251
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3270
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3274
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3283
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3287
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3302
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3306
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3312
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3316
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3322
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3326
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3332
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3337
		{
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3348
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3352
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3368
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3374
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3378
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3384
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3388
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3417
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3424
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3442
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3478
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3491
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3495
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3500
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3504
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3511
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3516
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3529
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3533
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3562
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3571
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3575
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3593
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3602
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3612
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3625
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3631
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3637
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3641
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3656
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3660
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3665
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3669
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3673
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3679
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3687
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3701
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3735
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3772
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3780
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3796
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3804
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3812
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3820
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3828
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3836
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3846
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3871
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3879
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3884
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3888
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3892
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3914
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3923
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3929
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3933
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3939
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3943
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3948
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3952
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3957
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3965
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3971
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3979
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3987
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3997
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4003
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4012
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4021
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4044
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4054
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4058
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4062
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4066
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4072
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4082
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4086
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4092
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4102
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4108
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4114
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4118
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4122
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4132
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4148
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4152
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4158
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4162
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4172
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4185
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4210
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4228
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4232
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4238
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4248
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4252
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4256
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4261
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4265
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4269
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4273
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4282
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4286
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4290
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4294
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4299
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4303
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4307
		{
			yyVAL.str = yyDollar[2].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4313
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4319
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4323
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4327
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4335
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4341
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 708:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4373
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4383
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4389
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 711:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4408
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4413
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4419
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4426
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4430
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4436
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4442
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4446
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4450
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4456
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4462
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4468
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4491
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4497
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4507
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4511
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4517
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4524
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4530
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4538
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4544
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4551
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4559
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4565
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4586
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				Accounts:    yyDollar[7].identifierListUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4597
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4601
		{
			yyVAL.str = yyDollar[2].str
		}
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4607
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4627
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:4639
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4657
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4662
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4668
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4782
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4786
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4802
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4806
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4812
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4822
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4826
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4830
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4839
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4852
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4858
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4867
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4874
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4883
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4887
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4893
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4920
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4932
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4938
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4961
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4983
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4987
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4991
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4999
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5005
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5009
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5015
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5047
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5062
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5085
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5091
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5095
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5101
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5109
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5114
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5118
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5124
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5136
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5145
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5158
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5165
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5175
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5183
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5194
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5198
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5203
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5207
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5214
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5238
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5252
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5260
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5267
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5296
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5304
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5311
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5322
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5329
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5340
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5354
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5361
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5368
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5372
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5381
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5395
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5402
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5413
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5422
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5426
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5432
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5436
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5442
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5451
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5465
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5471
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5475
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5488
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5497
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5501
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5510
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5515
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5519
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5524
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5528
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5538
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5542
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5553
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5561
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5577
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5588
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5597
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5607
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5617
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5621
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5626
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5630
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5639
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5645
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5649
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5653
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5659
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5667
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5671
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5679
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5684
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5688
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5692
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5700
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5704
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5708
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5712
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5716
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5720
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5724
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5728
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5732
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5736
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5740
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5744
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5748
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5752
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5756
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5760
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5764
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5768
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5772
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5779
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5783
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5789
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5794
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5798
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5802
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5808
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5820
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5824
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5828
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5842
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5846
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5855
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5860
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5866
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5873
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5877
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5887
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5893
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5905
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5911
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5920
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5929
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5952
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5961
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5971
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5985
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5989
		{
			yyVAL.str = yyDollar[1].str
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5999
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6005
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6011
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6025
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6029
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6035
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6045
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6049
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6055
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6063
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6067
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6073
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6077
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6081
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6090
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6096
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6100
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6106
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6110
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6114
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6118
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6122
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6126
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6131
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6135
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6139
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6143
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6147
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6151
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6155
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6159
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6172
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6178
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6187
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6197
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6201
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6207
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6219
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6226
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6233
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6240
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6247
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6256
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6262
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6284
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6289
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6313
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6318
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6322
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6338
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6344
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6348
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6352
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6356
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6388
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6398
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6402
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6406
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6410
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6414
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6418
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6422
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6430
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6434
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6455
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6460
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6464
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6473
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6477
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6494
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6499
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6503
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6509
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6513
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6519
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6529
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6546
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6563
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6576
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6615
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6645
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6677
		{
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6683
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6691
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6697
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6723
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6730
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6743
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6750
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6759
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6764
		{
			yyVAL.str = ","
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6768
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6777
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6787
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6798
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6808
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6817
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6826
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6836
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6856
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6866
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6876
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6886
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6896
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6936
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6946
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6963
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6971
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6979
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6995
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7005
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7013
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7022
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7030
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7038
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7046
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7054
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7065
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7087
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7098
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7120
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7180
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7199
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7206
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7213
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7225
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7233
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7241
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7252
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7261
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7270
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7278
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7288
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7296
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7310
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7320
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7339
		{
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7341
		{
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7382
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7397
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7407
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7416
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7426
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7433
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7437
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7441
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7449
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7453
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7457
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7471
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7475
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7479
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7483
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7487
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7491
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7495
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7499
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7503
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7511
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7519
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7523
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7527
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7543
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7557
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7563
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7567
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7618
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7622
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7626
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7653
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7703
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7714
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7719
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7749
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7761
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7787
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7800
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7813
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7839
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7852
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7865
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7891
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7906
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7933
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7975
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8052
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8072
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8092
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8112
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8128
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8167
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8180
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8216
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8228
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8276
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8288
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8301
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8314
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8329
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8337
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8346
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8356
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8379
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8384
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8390
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8397
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8401
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8406
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8410
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8416
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8422
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8429
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8436
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8445
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8452
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8459
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8482
		{
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8494
		{
			yyVAL.str = ""
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

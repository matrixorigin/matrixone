// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const ADMIN_NAME = 57671
const RANDOM = 57672
const SUSPEND = 57673
const ATTRIBUTE = 57674
const HISTORY = 57675
const REUSE = 57676
const CURRENT = 57677
const OPTIONAL = 57678
const FAILED_LOGIN_ATTEMPTS = 57679
const PASSWORD_LOCK_TIME = 57680
const UNBOUNDED = 57681
const SECONDARY = 57682
const USER = 57683
const IDENTIFIED = 57684
const CIPHER = 57685
const ISSUER = 57686
const X509 = 57687
const SUBJECT = 57688
const SAN = 57689
const REQUIRE = 57690
const SSL = 57691
const NONE = 57692
const PASSWORD = 57693
const MAX_QUERIES_PER_HOUR = 57694
const MAX_UPDATES_PER_HOUR = 57695
const MAX_CONNECTIONS_PER_HOUR = 57696
const MAX_USER_CONNECTIONS = 57697
const FORMAT = 57698
const VERBOSE = 57699
const CONNECTION = 57700
const TRIGGERS = 57701
const PROFILES = 57702
const LOAD = 57703
const INFILE = 57704
const TERMINATED = 57705
const OPTIONALLY = 57706
const ENCLOSED = 57707
const ESCAPED = 57708
const STARTING = 57709
const LINES = 57710
const ROWS = 57711
const IMPORT = 57712
const FROM_JSONLINE = 57713
const DATABASES = 57714
const TABLES = 57715
const EXTENDED = 57716
const FULL = 57717
const PROCESSLIST = 57718
const FIELDS = 57719
const COLUMNS = 57720
const OPEN = 57721
const ERRORS = 57722
const WARNINGS = 57723
const INDEXES = 57724
const SCHEMAS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const LOCAL = 57738
const EVENTS = 57739
const PLUGINS = 57740
const CURRENT_TIMESTAMP = 57741
const DATABASE = 57742
const CURRENT_TIME = 57743
const LOCALTIME = 57744
const LOCALTIMESTAMP = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const REPLACE = 57749
const CONVERT = 57750
const SEPARATOR = 57751
const TIMESTAMPDIFF = 57752
const CURRENT_DATE = 57753
const CURRENT_USER = 57754
const CURRENT_ROLE = 57755
const SECOND_MICROSECOND = 57756
const MINUTE_MICROSECOND = 57757
const MINUTE_SECOND = 57758
const HOUR_MICROSECOND = 57759
const HOUR_SECOND = 57760
const HOUR_MINUTE = 57761
const DAY_MICROSECOND = 57762
const DAY_SECOND = 57763
const DAY_MINUTE = 57764
const DAY_HOUR = 57765
const YEAR_MONTH = 57766
const SQL_TSI_HOUR = 57767
const SQL_TSI_DAY = 57768
const SQL_TSI_WEEK = 57769
const SQL_TSI_MONTH = 57770
const SQL_TSI_QUARTER = 57771
const SQL_TSI_YEAR = 57772
const SQL_TSI_SECOND = 57773
const SQL_TSI_MINUTE = 57774
const RECURSIVE = 57775
const CONFIG = 57776
const DRAINER = 57777
const MATCH = 57778
const AGAINST = 57779
const BOOLEAN = 57780
const LANGUAGE = 57781
const WITH = 57782
const QUERY = 57783
const EXPANSION = 57784
const ADDDATE = 57785
const BIT_AND = 57786
const BIT_OR = 57787
const BIT_XOR = 57788
const CAST = 57789
const COUNT = 57790
const APPROX_COUNT_DISTINCT = 57791
const APPROX_PERCENTILE = 57792
const CURDATE = 57793
const CURTIME = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const EXTRACT = 57797
const GROUP_CONCAT = 57798
const MAX = 57799
const MID = 57800
const MIN = 57801
const NOW = 57802
const POSITION = 57803
const SESSION_USER = 57804
const STD = 57805
const STDDEV = 57806
const STDDEV_POP = 57807
const STDDEV_SAMP = 57808
const SUBDATE = 57809
const SUBSTR = 57810
const SUBSTRING = 57811
const SUM = 57812
const SYSDATE = 57813
const SYSTEM_USER = 57814
const TRANSLATE = 57815
const TRIM = 57816
const VARIANCE = 57817
const VAR_POP = 57818
const VAR_SAMP = 57819
const AVG = 57820
const JSON_EXTRACT = 57821
const UNNEST = 57822
const GENERATE_SERIES = 57823
const ROW = 57824
const OUTFILE = 57825
const HEADER = 57826
const MAX_FILE_SIZE = 57827
const FORCE_QUOTE = 57828
const UNUSED = 57829
const BINDINGS = 57830
const DO = 57831
const DECLARE = 57832

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7816

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 78,
	21, 491,
	-2, 472,
	-1, 83,
	210, 674,
	-2, 718,
	-1, 100,
	42, 331,
	210, 331,
	237, 338,
	238, 338,
	399, 331,
	-2, 359,
	-1, 456,
	67, 1060,
	-2, 1559,
	-1, 457,
	67, 1078,
	-2, 1530,
	-1, 462,
	67, 1079,
	-2, 1558,
	-1, 482,
	67, 993,
	-2, 1606,
	-1, 483,
	67, 994,
	-2, 1605,
	-1, 484,
	67, 1568,
	-2, 1590,
	-1, 485,
	67, 1569,
	-2, 1591,
	-1, 486,
	67, 1570,
	-2, 1597,
	-1, 487,
	67, 1571,
	-2, 1580,
	-1, 488,
	67, 1572,
	-2, 1588,
	-1, 489,
	67, 1573,
	-2, 1598,
	-1, 490,
	67, 1574,
	-2, 1599,
	-1, 491,
	67, 1575,
	-2, 1604,
	-1, 492,
	67, 1576,
	-2, 1609,
	-1, 493,
	67, 1577,
	-2, 1610,
	-1, 497,
	67, 1057,
	-2, 1411,
	-1, 504,
	67, 1066,
	-2, 1437,
	-1, 508,
	67, 1070,
	-2, 1476,
	-1, 509,
	67, 1071,
	-2, 1554,
	-1, 517,
	67, 1081,
	-2, 1539,
	-1, 519,
	67, 1083,
	-2, 1549,
	-1, 531,
	67, 974,
	-2, 1600,
	-1, 532,
	67, 975,
	-2, 1601,
	-1, 533,
	67, 976,
	-2, 1602,
	-1, 540,
	21, 492,
	-2, 455,
	-1, 582,
	394, 359,
	395, 359,
	-2, 332,
	-1, 624,
	103, 1411,
	114, 1411,
	133, 1411,
	-2, 1218,
	-1, 655,
	21, 492,
	-2, 455,
	-1, 753,
	21, 491,
	-2, 903,
	-1, 1052,
	67, 1126,
	-2, 1556,
	-1, 1053,
	67, 1127,
	-2, 1557,
	-1, 1209,
	1, 700,
	68, 700,
	508, 700,
	-2, 707,
	-1, 1325,
	133, 1228,
	-2, 1226,
	-1, 1327,
	133, 618,
	-2, 1223,
	-1, 1328,
	133, 619,
	-2, 1224,
	-1, 1613,
	1, 701,
	68, 701,
	508, 701,
	-2, 707,
	-1, 1823,
	65, 403,
	134, 403,
	-2, 809,
	-1, 2020,
	6, 503,
	7, 503,
	8, 503,
	9, 503,
	19, 503,
	21, 503,
	68, 503,
	-2, 582,
	-1, 2058,
	87, 707,
	129, 707,
	166, 707,
	169, 707,
	-2, 757,
	-1, 2060,
	271, 871,
	-2, 851,
	-1, 2090,
	65, 403,
	134, 403,
	-2, 810,
	-1, 2125,
	87, 707,
	129, 707,
	166, 707,
	169, 707,
	-2, 758,
	-1, 2153,
	271, 871,
	-2, 852,
	-1, 2542,
	68, 730,
	134, 730,
	-2, 707,
	-1, 2547,
	68, 730,
	134, 730,
	-2, 707,
	-1, 2563,
	68, 734,
	134, 734,
	-2, 707,
	-1, 2568,
	68, 735,
	134, 735,
	-2, 707,
}

const yyPrivate = 57344

const yyLast = 25624

var yyAct = [...]int{
	428, 2547, 1116, 2549, 2556, 2546, 2520, 408, 1033, 2191,
	2386, 410, 2508, 2466, 430, 2423, 1663, 2165, 2451, 2359,
	2450, 2363, 2339, 1597, 2189, 2110, 1286, 779, 2121, 2190,
	1252, 901, 1029, 2347, 117, 117, 947, 454, 2052, 2083,
	117, 348, 355, 1659, 355, 2207, 541, 623, 353, 28,
	2108, 1957, 2154, 1214, 2173, 1162, 1826, 1036, 1953, 120,
	2174, 888, 1311, 359, 116, 116, 1841, 1665, 1962, 2064,
	339, 808, 1505, 1958, 877, 1274, 536, 402, 1304, 2030,
	1864, 2010, 1972, 649, 1968, 1658, 569, 407, 1620, 1799,
	1951, 1918, 1501, 1216, 365, 1165, 1322, 1172, 1312, 1186,
	1325, 1267, 1305, 627, 1500, 1247, 1801, 1878, 536, 1840,
	1313, 1645, 1796, 77, 1225, 3, 117, 1619, 630, 37,
	351, 6, 890, 1614, 1202, 1027, 352, 17, 1194, 1532,
	2129, 814, 349, 7, 1502, 350, 5, 442, 78, 411,
	969, 1606, 1245, 409, 1226, 1603, 651, 1271, 585, 1227,
	341, 1238, 1237, 1289, 1512, 625, 1080, 1585, 1018, 37,
	1066, 1032, 28, 1516, 344, 666, 1661, 419, 1308, 1292,
	615, 1198, 859, 1026, 939, 338, 1668, 1233, 78, 1201,
	403, 916, 540, 568, 926, 616, 538, 1085, 1086, 14,
	8, 367, 1177, 4, 902, 354, 368, 968, 111, 108,
	2533, 578, 566, 2432, 2112, 2560, 1519, 1509, 113, 2214,
	2117, 2051, 1190, 1115, 1307, 539, 112, 780, 112, 1106,
	33, 102, 84, 628, 112, 112, 33, 102, 84, 648,
	2414, 112, 37, 2182, 6, 928, 985, 337, 107, 357,
	17, 685, 112, 112, 1713, 96, 7, 629, 112, 5,
	1506, 78, 982, 112, 76, 33, 102, 84, 2404, 1517,
	112, 535, 33, 102, 84, 875, 719, 1893, 978, 62,
	898, 1721, 558, 984, 913, 109, 914, 718, 1886, 1255,
	1256, 109, 109, 1019, 975, 1023, 929, 526, 109, 525,
	527, 528, 905, 529, 530, 904, 907, 908, 1787, 109,
	109, 693, 2439, 695, 1798, 977, 635, 634, 636, 1022,
	109, 907, 908, 2454, 2455, 595, 1229, 109, 1035, 2437,
	717, 2427, 2428, 1003, 2205, 1944, 712, 2208, 2209, 2210,
	2211, 696, 700, 2292, 701, 1945, 633, 1946, 1037, 2295,
	2217, 117, 659, 103, 104, 2053, 105, 106, 669, 1708,
	660, 658, 1797, 1268, 2362, 2041, 1981, 355, 1102, 117,
	2072, 1099, 703, 1260, 364, 1101, 1098, 1100, 1104, 1105,
	1014, 657, 1513, 1103, 2413, 2079, 1024, 599, 2187, 1973,
	1264, 1983, 1604, 638, 654, 656, 1582, 2276, 1909, 676,
	1161, 1160, 560, 688, 689, 1021, 1804, 715, 716, 631,
	2171, 1977, 557, 556, 542, 1978, 1979, 1907, 714, 1718,
	83, 101, 110, 2279, 60, 691, 755, 653, 2184, 398,
	1980, 2464, 399, 551, 356, 698, 2270, 694, 697, 2441,
	100, 95, 94, 600, 2538, 2557, 2453, 39, 896, 669,
	2474, 2436, 655, 2416, 2417, 2388, 2481, 1044, 1047, 1048,
	690, 2411, 83, 2361, 110, 632, 2263, 680, 1045, 2384,
	2385, 628, 2388, 401, 37, 37, 1121, 554, 2530, 400,
	1518, 2232, 100, 2231, 920, 1522, 1524, 1525, 1810, 2443,
	2444, 699, 915, 78, 78, 629, 549, 1812, 1813, 1814,
	1815, 1020, 935, 1975, 97, 98, 1109, 1110, 1111, 1112,
	1113, 1114, 1107, 1108, 710, 711, 876, 2254, 2258, 692,
	662, 663, 2394, 626, 637, 671, 670, 934, 678, 555,
	2511, 2348, 2349, 2350, 2352, 2351, 893, 628, 70, 900,
	899, 2558, 99, 362, 71, 2521, 2220, 650, 2565, 1533,
	702, 878, 550, 363, 2290, 1196, 927, 1714, 2551, 1677,
	1914, 753, 674, 1866, 1868, 1510, 881, 677, 756, 757,
	758, 759, 1966, 1912, 1507, 883, 685, 1507, 569, 358,
	563, 564, 565, 1507, 1920, 1919, 885, 2532, 1676, 1675,
	2431, 2111, 1871, 1674, 856, 726, 72, 932, 760, 930,
	931, 705, 1258, 706, 754, 73, 1259, 1963, 1966, 1673,
	1257, 559, 762, 602, 906, 788, 671, 670, 1993, 903,
	2415, 603, 2493, 1217, 1701, 721, 685, 664, 536, 536,
	536, 708, 766, 951, 951, 879, 880, 897, 882, 907,
	908, 2360, 34, 2442, 2512, 1654, 1696, 2059, 34, 355,
	972, 972, 1591, 1520, 684, 1508, 907, 908, 1269, 2324,
	1713, 1974, 1655, 980, 1824, 949, 949, 955, 1803, 1984,
	953, 2277, 1910, 85, 1046, 85, 1976, 34, 2550, 1686,
	2183, 85, 85, 1001, 641, 646, 647, 1825, 85, 720,
	864, 790, 791, 1967, 704, 951, 986, 951, 659, 85,
	85, 2188, 1523, 1506, 1596, 85, 894, 1034, 976, 1261,
	85, 2564, 983, 910, 911, 1867, 1015, 85, 1722, 1807,
	1808, 2259, 2260, 1564, 74, 75, 1263, 1560, 709, 1967,
	1559, 543, 1010, 1806, 1960, 1497, 2256, 679, 1961, 1964,
	2255, 1655, 917, 540, 917, 596, 861, 886, 1608, 1655,
	707, 863, 626, 1217, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 2509, 2510, 1078, 1075,
	1076, 2571, 996, 997, 957, 2570, 1084, 2561, 338, 2539,
	887, 921, 606, 1825, 1595, 1131, 1295, 2226, 1038, 1031,
	1965, 909, 2534, 37, 912, 1137, 721, 78, 2524, 2523,
	1016, 78, 37, 2468, 1139, 945, 946, 1143, 1144, 2461,
	1009, 1017, 78, 942, 943, 944, 1006, 933, 536, 1005,
	596, 78, 2078, 2456, 598, 1012, 1049, 597, 2445, 605,
	971, 971, 936, 608, 607, 956, 682, 721, 987, 992,
	337, 721, 1607, 2562, 967, 1515, 857, 2517, 973, 643,
	644, 645, 723, 724, 725, 722, 1028, 2433, 2535, 2470,
	1000, 988, 1818, 2409, 1515, 1515, 1183, 540, 999, 2469,
	683, 2007, 2408, 1008, 1007, 2281, 2093, 1004, 2325, 2327,
	2328, 2329, 2326, 1168, 1169, 1025, 1994, 2407, 1199, 2281,
	951, 2406, 1030, 1209, 1686, 1130, 1594, 569, 1184, 598,
	1215, 1176, 597, 951, 1074, 1293, 683, 2396, 1205, 1880,
	1827, 1716, 1039, 1040, 1041, 1042, 1043, 723, 724, 725,
	722, 2287, 1167, 2434, 1234, 1234, 1068, 1239, 1280, 2281,
	685, 2286, 1239, 1715, 1707, 1199, 951, 117, 2281, 1638,
	1556, 1174, 1175, 1543, 1187, 1496, 2280, 536, 1232, 951,
	1300, 2028, 1542, 2281, 1082, 1083, 2027, 2281, 989, 1118,
	1197, 1939, 855, 1859, 1125, 1783, 765, 1119, 1210, 1781,
	672, 1199, 951, 2397, 1285, 117, 117, 723, 724, 725,
	722, 1779, 1297, 1819, 652, 1204, 1777, 2288, 1131, 1131,
	1315, 1141, 1117, 1290, 1120, 1131, 1131, 1624, 1221, 1132,
	1236, 738, 1288, 1157, 1244, 1287, 1287, 1767, 1727, 1138,
	1711, 1140, 2281, 1998, 1230, 1231, 1327, 721, 1906, 1504,
	1705, 1541, 721, 1703, 1215, 1904, 1698, 1623, 951, 1655,
	1592, 1784, 1223, 1224, 1567, 1782, 1291, 918, 891, 938,
	1265, 1270, 1733, 1566, 1191, 1218, 1514, 1778, 917, 1188,
	1222, 1203, 1778, 1192, 1185, 1179, 1195, 1182, 1319, 1328,
	993, 1228, 1123, 1122, 1219, 604, 2545, 1284, 2506, 1905,
	1503, 1316, 940, 721, 721, 2497, 1624, 1498, 1081, 1211,
	1212, 561, 1527, 941, 1240, 1220, 1699, 2494, 1800, 1704,
	1530, 1531, 1699, 1624, 2398, 1794, 1591, 1203, 1310, 2298,
	721, 628, 1235, 1278, 1279, 1310, 1241, 2008, 628, 721,
	1913, 1702, 1515, 1243, 1679, 1242, 661, 1266, 1081, 937,
	1538, 1200, 37, 722, 2266, 629, 994, 1275, 1276, 1277,
	1188, 2265, 629, 1028, 2068, 919, 1188, 1188, 1281, 1073,
	2063, 78, 1282, 924, 925, 1283, 741, 742, 743, 744,
	745, 738, 1149, 1301, 1071, 1072, 1070, 723, 724, 725,
	722, 1571, 1882, 1317, 725, 722, 1326, 2529, 1494, 1320,
	1495, 1321, 609, 2249, 2544, 960, 961, 962, 963, 964,
	965, 966, 2335, 2526, 601, 1499, 2333, 1932, 1598, 1599,
	1758, 2331, 2491, 628, 737, 736, 746, 747, 739, 740,
	741, 742, 743, 744, 745, 738, 1135, 117, 117, 2475,
	2528, 2372, 1521, 1562, 2321, 2341, 1136, 753, 2319, 2318,
	2334, 117, 1621, 2185, 2332, 1529, 2076, 2317, 1526, 2330,
	1969, 1239, 1931, 117, 2314, 2308, 2305, 1600, 1602, 348,
	2304, 1528, 723, 724, 725, 722, 1537, 1239, 1068, 1124,
	2215, 1617, 2320, 1290, 723, 724, 725, 722, 1742, 2075,
	1982, 2186, 117, 1629, 2077, 723, 724, 725, 722, 1535,
	1142, 1942, 1539, 1145, 1146, 1147, 1148, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 854, 851, 852, 853, 1941, 1900,
	1747, 951, 1746, 1745, 1743, 1590, 1291, 1589, 723, 724,
	725, 722, 1552, 1588, 972, 1584, 117, 1735, 1583, 1690,
	990, 1692, 1549, 1540, 2552, 1550, 398, 1554, 2540, 399,
	1664, 2518, 1664, 1684, 1206, 1207, 1208, 1630, 1631, 2471,
	2463, 2447, 2340, 1565, 2122, 2429, 1568, 1569, 1570, 1587,
	2392, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1670, 1580,
	1615, 2391, 1634, 1744, 1636, 1551, 2379, 2322, 1632, 739,
	740, 741, 742, 743, 744, 745, 738, 2315, 1609, 723,
	724, 725, 722, 1689, 2311, 1666, 2310, 723, 724, 725,
	722, 2309, 2278, 1628, 2251, 2216, 2212, 1228, 2120, 1635,
	1633, 2118, 1637, 749, 1641, 752, 1687, 1640, 1639, 1667,
	2086, 2074, 2157, 2073, 2070, 1694, 2448, 2043, 1625, 1971,
	750, 751, 748, 1940, 737, 736, 746, 747, 739, 740,
	741, 742, 743, 744, 745, 738, 2167, 788, 723, 724,
	725, 722, 1911, 1680, 1681, 1682, 1874, 1725, 1546, 2160,
	481, 480, 2563, 1593, 1688, 2155, 2527, 1586, 991, 789,
	2169, 2170, 784, 783, 2536, 1986, 2156, 729, 730, 731,
	732, 733, 734, 735, 727, 2399, 1188, 1188, 1188, 2087,
	1748, 1749, 737, 736, 746, 747, 739, 740, 741, 742,
	743, 744, 745, 738, 971, 2058, 2049, 2366, 2048, 2503,
	2036, 2161, 2029, 737, 736, 746, 747, 739, 740, 741,
	742, 743, 744, 745, 738, 2275, 2020, 1709, 2501, 723,
	724, 725, 722, 723, 724, 725, 722, 951, 1999, 951,
	1937, 951, 1930, 1922, 1917, 1860, 659, 723, 724, 725,
	722, 1780, 1776, 1775, 1572, 1723, 737, 736, 746, 747,
	739, 740, 741, 742, 743, 744, 745, 738, 1563, 1561,
	2115, 1719, 1558, 951, 1751, 737, 736, 746, 747, 739,
	740, 741, 742, 743, 744, 745, 738, 1759, 1729, 1557,
	1555, 951, 723, 724, 725, 722, 1548, 2168, 1545, 1959,
	1761, 1544, 1134, 112, 1133, 949, 102, 84, 112, 1750,
	737, 736, 746, 747, 739, 740, 741, 742, 743, 744,
	745, 738, 958, 949, 2163, 2559, 2505, 1760, 746, 747,
	739, 740, 741, 742, 743, 744, 745, 738, 951, 2499,
	2482, 2479, 1737, 2477, 781, 1720, 2162, 2164, 2371, 1823,
	2357, 2345, 1731, 2342, 2337, 1829, 2299, 1164, 2273, 2272,
	109, 2271, 1717, 2268, 1712, 109, 2262, 1710, 2247, 1837,
	889, 2101, 2099, 659, 117, 117, 117, 117, 2081, 1821,
	2149, 2069, 1842, 1173, 1166, 659, 117, 1857, 1820, 1728,
	1795, 1697, 1793, 1817, 1842, 2269, 2114, 1785, 1028, 1678,
	117, 28, 2046, 1741, 1869, 1870, 1672, 1730, 951, 1671,
	2171, 1622, 1069, 109, 1616, 1935, 117, 117, 723, 724,
	725, 722, 2158, 1178, 723, 724, 725, 722, 1181, 1171,
	1131, 1170, 1131, 1013, 1858, 1892, 979, 723, 724, 725,
	722, 2548, 858, 806, 951, 805, 1876, 1877, 804, 1734,
	1664, 2131, 1830, 1832, 1898, 1790, 1833, 1752, 1753, 803,
	802, 801, 1809, 1756, 1757, 800, 1822, 1816, 1828, 799,
	798, 37, 797, 6, 1615, 1762, 796, 1887, 1839, 17,
	795, 1831, 1836, 1838, 1894, 7, 794, 1834, 5, 1835,
	78, 1856, 793, 792, 1855, 1854, 787, 1899, 786, 1203,
	785, 540, 1188, 1187, 782, 1788, 1789, 1195, 1891, 1889,
	778, 1875, 1872, 1861, 777, 1895, 1843, 1844, 1845, 1846,
	2487, 1934, 775, 1908, 774, 773, 659, 1885, 1923, 1883,
	1890, 1925, 1881, 1927, 1896, 1956, 1902, 629, 1897, 1903,
	1888, 772, 117, 723, 724, 725, 722, 1915, 2485, 1938,
	771, 659, 2452, 1933, 770, 117, 1621, 1774, 1997, 769,
	1956, 1921, 2017, 1773, 768, 767, 78, 1772, 764, 1924,
	1928, 1929, 1987, 78, 1926, 723, 724, 725, 722, 723,
	724, 725, 722, 763, 2135, 723, 724, 725, 722, 723,
	724, 725, 722, 687, 1627, 2139, 737, 736, 746, 747,
	739, 740, 741, 742, 743, 744, 745, 738, 1188, 2011,
	2012, 1751, 1611, 1188, 675, 2128, 2014, 1811, 1685, 2130,
	2132, 2134, 1995, 2136, 2137, 2138, 2140, 2141, 2142, 2144,
	2145, 2146, 2147, 1303, 686, 1992, 2016, 1988, 1989, 1990,
	1848, 1991, 1851, 117, 1996, 117, 1916, 1852, 1847, 2019,
	2543, 1849, 2005, 2004, 1792, 2000, 1850, 2015, 2001, 2002,
	1771, 1616, 2150, 1706, 2006, 2024, 2025, 2026, 1853, 1936,
	1651, 1652, 1700, 2042, 2021, 2044, 1770, 1947, 1948, 2018,
	1158, 117, 723, 724, 725, 722, 2104, 1695, 2103, 2003,
	2062, 2034, 1726, 1769, 1724, 2037, 860, 2148, 723, 724,
	725, 722, 2038, 1598, 1599, 61, 2040, 1768, 1950, 1605,
	36, 2057, 1766, 681, 2127, 723, 724, 725, 722, 951,
	951, 35, 2102, 2218, 117, 2090, 2039, 1949, 2056, 723,
	724, 725, 722, 1657, 723, 724, 725, 722, 659, 1213,
	1123, 1122, 2143, 334, 2420, 114, 1534, 1842, 335, 2133,
	923, 949, 2084, 872, 873, 2082, 870, 871, 2060, 336,
	2065, 2061, 2065, 2067, 1765, 2106, 1131, 2066, 737, 736,
	746, 747, 739, 740, 741, 742, 743, 744, 745, 738,
	333, 922, 1664, 2095, 2092, 713, 723, 724, 725, 722,
	659, 2089, 2126, 2023, 2175, 2177, 1493, 2175, 2175, 1956,
	868, 869, 866, 867, 2096, 892, 862, 2500, 2088, 2376,
	2374, 1764, 659, 2302, 2097, 1763, 2300, 78, 2297, 2091,
	2296, 2294, 1755, 2203, 2202, 2113, 543, 2094, 2107, 2119,
	1215, 2055, 2200, 723, 724, 725, 722, 723, 724, 725,
	722, 2054, 2172, 2045, 723, 724, 725, 722, 2151, 2123,
	2047, 2178, 2179, 2032, 865, 2176, 1754, 2197, 2031, 2222,
	736, 746, 747, 739, 740, 741, 742, 743, 744, 745,
	738, 1879, 1217, 2180, 1732, 2194, 1901, 2092, 723, 724,
	725, 722, 1547, 2198, 2489, 2488, 2488, 544, 545, 546,
	547, 673, 951, 1077, 1656, 2250, 723, 724, 725, 722,
	543, 2489, 117, 2264, 2035, 895, 43, 2225, 1, 1302,
	1862, 2177, 2195, 2196, 1642, 723, 724, 725, 722, 1188,
	1863, 2022, 2098, 1865, 2084, 2100, 1511, 2071, 1985, 1970,
	884, 2252, 2267, 562, 1126, 2172, 2248, 1647, 1650, 1651,
	1652, 1648, 2105, 1649, 1653, 874, 998, 2223, 2224, 959,
	2227, 2228, 2229, 2230, 640, 2303, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	668, 2274, 2285, 995, 667, 2284, 2336, 2282, 665, 1079,
	2181, 444, 2293, 1647, 1650, 1651, 1652, 1648, 1306, 1649,
	1653, 2338, 544, 545, 546, 547, 2199, 2301, 2419, 659,
	2465, 2370, 659, 659, 659, 543, 2422, 1011, 429, 2316,
	2289, 1943, 659, 2204, 2291, 2206, 1786, 2109, 1884, 2368,
	574, 476, 452, 2346, 776, 1664, 2354, 2355, 2356, 981,
	2381, 974, 2343, 642, 2353, 451, 2365, 951, 951, 2080,
	1805, 2364, 548, 639, 575, 2306, 2307, 2367, 1581, 2050,
	1159, 2312, 2313, 2375, 1180, 2377, 2378, 1163, 2555, 2382,
	2373, 2542, 2519, 2498, 2387, 2537, 2435, 2480, 117, 949,
	949, 2473, 2383, 2389, 2390, 2219, 659, 369, 1262, 534,
	613, 2358, 370, 1626, 2412, 2344, 78, 552, 659, 1610,
	553, 1613, 1612, 1050, 2395, 728, 1067, 761, 1287, 406,
	2405, 2401, 2426, 2283, 1536, 418, 412, 1802, 2166, 1873,
	42, 41, 2410, 40, 1296, 1323, 2425, 446, 119, 1324,
	2418, 2380, 2213, 2424, 427, 426, 425, 424, 1646, 1644,
	1643, 1249, 1248, 1294, 2449, 2430, 2402, 2403, 2116, 2261,
	2438, 2440, 2323, 2257, 2253, 2393, 2125, 2124, 2152, 2153,
	2446, 2159, 813, 809, 811, 812, 810, 1740, 2457, 2458,
	2459, 2460, 2467, 1736, 1954, 2472, 1955, 1952, 2013, 2009,
	1314, 1193, 1791, 1250, 1246, 2476, 2193, 2478, 537, 27,
	26, 25, 13, 12, 1002, 11, 16, 24, 23, 22,
	21, 69, 68, 67, 66, 20, 10, 65, 2483, 2484,
	2426, 2496, 2486, 64, 63, 19, 18, 58, 659, 2490,
	659, 2492, 59, 53, 2425, 2495, 2502, 1034, 2504, 1034,
	2507, 52, 51, 573, 50, 49, 48, 47, 57, 56,
	55, 54, 2513, 2462, 46, 2467, 659, 2514, 45, 44,
	82, 2522, 81, 80, 2525, 1034, 79, 29, 2531, 30,
	31, 32, 92, 2400, 91, 93, 89, 87, 90, 88,
	86, 38, 9, 15, 2, 0, 0, 0, 0, 0,
	0, 0, 2541, 0, 0, 0, 0, 0, 0, 0,
	0, 2554, 0, 2553, 0, 0, 0, 0, 0, 0,
	0, 0, 2566, 0, 0, 2568, 0, 2567, 2569, 0,
	0, 0, 2554, 1439, 1481, 0, 0, 1428, 285, 1386,
	1441, 1359, 1375, 1449, 1376, 1377, 1414, 1338, 1396, 247,
	1373, 0, 0, 0, 0, 0, 0, 1431, 1330, 1362,
	1363, 1332, 1369, 1333, 1360, 1388, 192, 1358, 1399, 217,
	1411, 1372, 1393, 1447, 0, 0, 277, 231, 0, 0,
	1391, 1433, 1394, 1419, 1385, 1415, 1346, 1407, 1442, 1374,
	0, 1412, 1443, 0, 0, 0, 0, 1206, 1207, 1208,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	1410, 1437, 1371, 0, 176, 1440, 1392, 1413, 0, 0,
	1331, 1408, 0, 1336, 1339, 1448, 1435, 1366, 1367, 0,
	0, 0, 0, 0, 0, 2516, 0, 1389, 1395, 1416,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 0, 1404, 0, 0, 0, 1341, 1337, 0, 1387,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 1480, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 1340, 306, 169, 1475, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 1459, 1460,
	1461, 1462, 1463, 1471, 1472, 0, 1476, 1477, 1478, 1345,
	0, 1365, 1417, 0, 1329, 1426, 1434, 1384, 308, 1436,
	1381, 1380, 1466, 0, 1465, 281, 1467, 1468, 216, 1432,
	1361, 1370, 324, 1368, 267, 249, 1438, 1403, 1479, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 1464, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 1473, 0, 1474, 320, 199, 158,
	303, 0, 245, 0, 1429, 1334, 1344, 1342, 1378, 1405,
	1406, 241, 319, 1421, 1425, 1422, 1450, 270, 0, 0,
	0, 0, 0, 210, 251, 1423, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 278,
	301, 313, 330, 1482, 1483, 1484, 162, 332, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 304, 1379, 1352, 1390, 312,
	1355, 1353, 1420, 1354, 1409, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 1400, 1383, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1401, 0, 1357, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 1427, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 1351, 1356, 1350, 1397, 1398, 1444, 1445,
	1446, 1418, 1343, 1430, 0, 1347, 1349, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 0, 0,
	1402, 159, 0, 218, 1451, 259, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 1469, 1470, 316, 317,
	318, 302, 420, 189, 1492, 0, 192, 0, 0, 217,
	0, 0, 0, 450, 0, 0, 277, 231, 0, 0,
	0, 0, 505, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 443, 481, 480,
	431, 440, 0, 0, 173, 432, 0, 439, 433, 437,
	436, 434, 435, 0, 497, 0, 0, 0, 0, 0,
	0, 404, 417, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 0, 0,
	0, 0, 459, 0, 416, 0, 0, 461, 0, 441,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 438, 457,
	462, 185, 519, 455, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 520,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 308, 0,
	0, 503, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 456, 0, 267, 249, 516, 405, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 1128, 1127, 1129, 320, 199, 158,
	303, 501, 245, 0, 515, 496, 498, 499, 502, 506,
	507, 508, 509, 510, 512, 514, 518, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 517, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 460, 235, 236, 237, 238,
	504, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 526, 500, 525, 527, 528, 524, 529,
	530, 511, 423, 0, 465, 522, 521, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 487, 469, 470,
	471, 422, 472, 467, 468, 488, 463, 484, 485, 445,
	448, 473, 136, 474, 486, 489, 490, 531, 532, 533,
	477, 491, 483, 482, 475, 464, 492, 493, 449, 447,
	478, 479, 466, 0, 494, 495, 285, 458, 316, 317,
	318, 302, 0, 189, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	420, 0, 0, 0, 192, 1189, 0, 217, 0, 0,
	0, 450, 0, 0, 277, 231, 0, 0, 0, 0,
	505, 513, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 413, 0, 0, 443, 481, 480, 431, 440,
	0, 0, 173, 432, 0, 439, 433, 437, 436, 434,
	435, 0, 497, 0, 0, 0, 0, 0, 0, 404,
	417, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 0, 0, 0, 0,
	459, 0, 416, 0, 0, 1273, 0, 441, 0, 0,
	165, 282, 298, 174, 273, 311, 179, 280, 170, 246,
	269, 0, 0, 167, 296, 279, 228, 211, 212, 166,
	0, 264, 190, 203, 186, 244, 438, 457, 462, 185,
	519, 455, 306, 169, 0, 305, 243, 292, 297, 229,
	223, 168, 294, 227, 222, 215, 194, 520, 207, 255,
	221, 256, 208, 233, 232, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 308, 0, 0, 503,
	0, 0, 0, 281, 0, 0, 216, 0, 0, 0,
	456, 0, 267, 249, 516, 405, 0, 265, 219, 293,
	257, 299, 283, 307, 261, 258, 160, 284, 188, 230,
	171, 172, 184, 191, 193, 195, 196, 239, 240, 252,
	272, 286, 287, 288, 187, 180, 266, 181, 205, 182,
	161, 274, 183, 163, 253, 291, 0, 201, 262, 226,
	164, 225, 254, 290, 289, 315, 321, 322, 326, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 320, 199, 158, 303, 501,
	245, 0, 515, 496, 498, 499, 502, 506, 507, 508,
	509, 510, 512, 514, 518, 270, 0, 0, 0, 0,
	0, 210, 251, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 301, 313,
	330, 0, 0, 0, 162, 332, 0, 0, 0, 0,
	0, 0, 0, 517, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 460, 235, 236, 237, 238, 504, 0,
	178, 331, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 198, 204, 0, 206,
	177, 250, 200, 310, 213, 0, 242, 209, 275, 214,
	220, 263, 309, 248, 268, 175, 300, 276, 224, 0,
	0, 526, 500, 525, 527, 528, 524, 529, 530, 511,
	423, 0, 465, 522, 521, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 218, 0, 259, 197, 487, 469, 470, 471, 422,
	472, 467, 468, 488, 463, 484, 485, 445, 448, 473,
	136, 474, 486, 489, 490, 531, 532, 533, 477, 491,
	483, 482, 475, 464, 492, 493, 449, 447, 478, 479,
	466, 0, 494, 495, 0, 0, 316, 317, 318, 302,
	0, 189, 112, 285, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 450, 0,
	0, 277, 231, 0, 0, 0, 0, 505, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 443, 481, 480, 431, 440, 0, 0, 173,
	432, 0, 439, 433, 437, 436, 434, 435, 0, 497,
	0, 0, 0, 0, 0, 0, 404, 417, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 0, 0, 0, 0, 459, 0, 416,
	0, 0, 461, 0, 441, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 438, 457, 462, 185, 519, 455, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 520, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 308, 0, 0, 503, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 456, 0, 267,
	249, 516, 405, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 501, 245, 0, 515,
	496, 498, 499, 502, 506, 507, 508, 509, 510, 512,
	514, 518, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	517, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	460, 235, 236, 237, 238, 504, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 526, 500,
	525, 527, 528, 524, 529, 530, 511, 423, 0, 465,
	522, 521, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 85,
	259, 197, 487, 469, 470, 471, 422, 472, 467, 468,
	488, 463, 484, 485, 445, 448, 473, 136, 474, 486,
	489, 490, 531, 532, 533, 477, 491, 483, 482, 475,
	464, 492, 493, 449, 447, 478, 479, 466, 0, 494,
	495, 285, 458, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 192,
	2515, 0, 217, 0, 0, 0, 450, 0, 0, 277,
	231, 0, 0, 0, 0, 505, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	443, 481, 480, 431, 440, 0, 0, 173, 432, 0,
	439, 433, 437, 436, 434, 435, 0, 497, 0, 0,
	0, 0, 0, 0, 404, 417, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 0, 0, 0, 0, 459, 0, 416, 0, 0,
	461, 0, 441, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 438, 457, 462, 185, 519, 455, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 520, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	0, 308, 0, 0, 503, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 456, 0, 267, 249, 516,
	405, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 501, 245, 0, 515, 496, 498,
	499, 502, 506, 507, 508, 509, 510, 512, 514, 518,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 460, 235,
	236, 237, 238, 504, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 526, 500, 525, 527,
	528, 524, 529, 530, 511, 423, 0, 465, 522, 521,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 0, 259, 197,
	487, 469, 470, 471, 422, 472, 467, 468, 488, 463,
	484, 485, 445, 448, 473, 136, 474, 486, 489, 490,
	531, 532, 533, 477, 491, 483, 482, 475, 464, 492,
	493, 449, 447, 478, 479, 466, 0, 494, 495, 285,
	458, 316, 317, 318, 302, 0, 189, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 192, 1189, 0,
	217, 0, 0, 0, 450, 0, 0, 277, 231, 0,
	0, 0, 0, 505, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 443, 481,
	480, 431, 440, 0, 0, 173, 432, 0, 439, 433,
	437, 436, 434, 435, 0, 497, 0, 0, 0, 0,
	0, 0, 404, 417, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 0,
	0, 0, 0, 459, 0, 416, 0, 0, 461, 0,
	441, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 438,
	457, 462, 185, 519, 455, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	520, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 308,
	0, 0, 503, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 456, 0, 267, 249, 516, 405, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 501, 245, 0, 515, 496, 498, 499, 502,
	506, 507, 508, 509, 510, 512, 514, 518, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 0, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 517, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 460, 235, 236, 237,
	238, 504, 0, 178, 331, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 526, 500, 525, 527, 528, 524,
	529, 530, 511, 423, 0, 465, 522, 521, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 218, 0, 259, 197, 487, 469,
	470, 471, 422, 472, 467, 468, 488, 463, 484, 485,
	445, 448, 473, 136, 474, 486, 489, 490, 531, 532,
	533, 477, 491, 483, 482, 475, 464, 492, 493, 449,
	447, 478, 479, 466, 0, 494, 495, 285, 458, 316,
	317, 318, 302, 0, 189, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 450, 0, 0, 277, 231, 0, 0, 0,
	0, 505, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 443, 481, 480, 431,
	440, 0, 0, 173, 432, 0, 439, 433, 437, 436,
	434, 435, 0, 497, 0, 0, 0, 0, 0, 0,
	404, 417, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 970, 0, 0,
	0, 459, 0, 416, 0, 0, 461, 0, 441, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 438, 457, 462,
	185, 519, 455, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 520, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 0, 0, 308, 0, 0,
	503, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 456, 0, 267, 249, 516, 405, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	501, 245, 0, 515, 496, 498, 499, 502, 506, 507,
	508, 509, 510, 512, 514, 518, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 460, 235, 236, 237, 238, 504,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 526, 500, 525, 527, 528, 524, 529, 530,
	511, 423, 0, 465, 522, 521, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 487, 469, 470, 471,
	422, 472, 467, 468, 488, 463, 484, 485, 445, 448,
	473, 136, 474, 486, 489, 490, 531, 532, 533, 477,
	491, 483, 482, 475, 464, 492, 493, 449, 447, 478,
	479, 466, 0, 494, 495, 0, 0, 316, 317, 318,
	302, 0, 189, 285, 458, 0, 0, 1553, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 450, 0,
	0, 277, 231, 0, 0, 0, 0, 505, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 443, 481, 480, 431, 440, 0, 0, 173,
	432, 0, 439, 433, 437, 436, 434, 435, 0, 497,
	0, 0, 0, 0, 0, 0, 404, 417, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 0, 0, 0, 0, 459, 0, 416,
	0, 0, 461, 0, 441, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 438, 457, 462, 185, 519, 455, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 520, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 308, 0, 0, 503, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 456, 0, 267,
	249, 516, 405, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 501, 245, 0, 515,
	496, 498, 499, 502, 506, 507, 508, 509, 510, 512,
	514, 518, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	517, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	460, 235, 236, 237, 238, 504, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 526, 500,
	525, 527, 528, 524, 529, 530, 511, 423, 0, 465,
	522, 521, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 487, 469, 470, 471, 422, 472, 467, 468,
	488, 463, 484, 485, 445, 448, 473, 136, 474, 486,
	489, 490, 531, 532, 533, 477, 491, 483, 482, 475,
	464, 492, 493, 449, 447, 478, 479, 466, 0, 494,
	495, 285, 458, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 450, 0, 0, 277,
	231, 0, 0, 0, 0, 505, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	443, 481, 480, 431, 440, 0, 0, 173, 432, 0,
	439, 433, 437, 436, 434, 435, 0, 497, 0, 0,
	0, 0, 0, 0, 404, 417, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 0, 0, 0, 0, 459, 0, 416, 0, 0,
	461, 0, 441, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 438, 457, 462, 185, 519, 455, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 520, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	0, 308, 0, 0, 503, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 456, 0, 267, 249, 516,
	405, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 501, 245, 0, 515, 496, 498,
	499, 502, 506, 507, 508, 509, 510, 512, 514, 518,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 517, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 460, 235,
	236, 237, 238, 504, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	0, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 526, 500, 525, 527,
	528, 524, 529, 530, 511, 423, 0, 465, 522, 521,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 218, 0, 259, 197,
	487, 469, 470, 471, 422, 472, 467, 468, 488, 463,
	484, 485, 445, 448, 473, 136, 474, 486, 489, 490,
	531, 532, 533, 477, 491, 483, 482, 475, 464, 492,
	493, 449, 447, 478, 479, 466, 0, 494, 495, 285,
	458, 316, 317, 318, 302, 0, 189, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 420, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 450, 0, 0, 277, 231, 0,
	0, 0, 0, 505, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 443, 481,
	480, 431, 440, 0, 0, 173, 432, 0, 439, 433,
	437, 436, 434, 435, 0, 497, 0, 0, 0, 0,
	0, 0, 0, 417, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 0,
	0, 0, 0, 459, 0, 416, 0, 0, 461, 0,
	441, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 438,
	457, 462, 185, 519, 455, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	520, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 308,
	0, 0, 503, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 456, 0, 267, 249, 516, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 1052,
	1053, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 501, 245, 0, 515, 496, 498, 499, 502,
	506, 507, 508, 509, 510, 512, 514, 518, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 0, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 517, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 460, 235, 236, 237,
	238, 504, 0, 178, 331, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 526, 500, 525, 527, 528, 524,
	529, 530, 511, 423, 0, 465, 522, 521, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 218, 0, 259, 197, 487, 469,
	470, 471, 422, 472, 467, 468, 488, 463, 484, 485,
	445, 448, 473, 136, 474, 486, 489, 490, 531, 532,
	533, 477, 491, 483, 482, 475, 464, 492, 493, 449,
	447, 478, 479, 466, 0, 494, 495, 285, 458, 316,
	317, 318, 302, 0, 189, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 450, 0, 0, 277, 231, 0, 0, 0,
	0, 505, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 481, 480, 431,
	440, 0, 0, 173, 432, 0, 439, 433, 437, 436,
	434, 435, 0, 497, 0, 0, 0, 0, 0, 0,
	404, 417, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 0, 0, 0,
	0, 459, 0, 416, 0, 0, 461, 0, 441, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 438, 457, 462,
	185, 519, 455, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 520, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 0, 0, 308, 0, 0,
	503, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 456, 0, 267, 249, 516, 405, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	501, 245, 0, 515, 496, 498, 499, 502, 506, 507,
	508, 509, 510, 512, 514, 518, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 460, 235, 236, 237, 238, 504,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 526, 500, 525, 527, 528, 524, 529, 530,
	511, 423, 0, 465, 522, 521, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 487, 469, 470, 471,
	422, 472, 467, 468, 488, 463, 484, 485, 445, 448,
	473, 136, 474, 486, 489, 490, 531, 532, 533, 477,
	491, 483, 482, 475, 464, 492, 493, 449, 447, 478,
	479, 466, 0, 494, 495, 285, 458, 316, 317, 318,
	302, 0, 189, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 0, 0, 192, 0, 0, 217, 0, 0, 0,
	450, 0, 0, 277, 231, 0, 0, 0, 0, 505,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 443, 481, 480, 431, 440, 0,
	0, 173, 432, 0, 439, 433, 437, 436, 434, 435,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 0, 0, 0, 0, 459,
	0, 416, 0, 0, 461, 0, 441, 0, 0, 165,
	282, 298, 174, 273, 311, 179, 280, 170, 246, 269,
	0, 0, 167, 296, 279, 228, 211, 212, 166, 0,
	264, 190, 203, 186, 244, 438, 457, 462, 185, 519,
	455, 306, 169, 0, 305, 243, 292, 297, 229, 223,
	168, 294, 227, 222, 215, 194, 520, 207, 255, 221,
	256, 208, 233, 232, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 453, 0, 0, 308, 0, 0, 503, 0,
	0, 0, 281, 0, 0, 216, 0, 0, 0, 456,
	0, 267, 249, 516, 0, 0, 265, 219, 293, 257,
	299, 283, 307, 261, 258, 160, 284, 188, 230, 171,
	172, 184, 191, 193, 195, 196, 239, 240, 252, 272,
	286, 287, 288, 187, 180, 266, 181, 205, 182, 161,
	274, 183, 163, 253, 291, 0, 201, 262, 226, 164,
	225, 254, 290, 289, 315, 321, 322, 326, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 320, 199, 158, 303, 501, 245,
	0, 515, 496, 498, 499, 502, 506, 507, 508, 509,
	510, 512, 514, 518, 270, 0, 0, 0, 0, 0,
	210, 251, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 301, 313, 330,
	0, 0, 0, 162, 332, 0, 0, 0, 0, 0,
	0, 0, 517, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 460, 235, 236, 237, 238, 504, 0, 178,
	331, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 198, 204, 0, 206, 177,
	250, 200, 310, 213, 0, 242, 209, 275, 214, 220,
	263, 309, 248, 268, 175, 300, 276, 224, 0, 0,
	526, 500, 525, 527, 528, 524, 529, 530, 511, 423,
	0, 465, 522, 521, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	218, 0, 259, 197, 487, 469, 470, 471, 422, 472,
	467, 468, 488, 463, 484, 485, 445, 448, 473, 136,
	474, 486, 489, 490, 531, 532, 533, 477, 491, 483,
	482, 475, 464, 492, 493, 449, 447, 478, 479, 466,
	0, 494, 495, 0, 0, 316, 317, 318, 302, 0,
	189, 112, 285, 33, 102, 84, 0, 0, 0, 0,
	0, 0, 0, 247, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 343, 345, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 34, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 85, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 1963, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 0, 306, 169, 0, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 308, 0, 0,
	0, 1960, 0, 1959, 281, 1961, 1964, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 261, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 1965, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 328, 235, 236, 237, 238, 202,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 242, 209, 275,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 285, 0, 0, 0, 0, 316, 317, 318,
	302, 0, 189, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 1299, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 723, 724, 725, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 0, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 285, 0, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 612, 0, 217, 0,
	0, 0, 0, 0, 0, 277, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 620, 621, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 282, 298, 174, 273, 311, 179, 280, 170,
	246, 269, 0, 0, 167, 296, 279, 228, 211, 212,
	166, 0, 264, 190, 203, 186, 244, 0, 295, 323,
	185, 314, 598, 306, 169, 597, 305, 243, 292, 297,
	229, 223, 168, 294, 227, 222, 215, 194, 0, 207,
	255, 221, 256, 208, 233, 232, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 281, 0, 0, 216, 0, 0,
	0, 324, 0, 267, 249, 0, 0, 0, 265, 219,
	293, 257, 299, 283, 307, 610, 258, 160, 284, 188,
	230, 171, 172, 184, 191, 193, 195, 196, 239, 240,
	252, 272, 286, 287, 288, 187, 180, 266, 181, 205,
	182, 161, 274, 183, 163, 253, 291, 0, 201, 262,
	226, 164, 225, 254, 290, 289, 315, 321, 322, 326,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 320, 199, 158, 303,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 319, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 210, 251, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 301,
	313, 330, 0, 0, 0, 162, 332, 0, 0, 0,
	0, 0, 0, 611, 304, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 614, 235, 236, 237, 238, 202,
	0, 178, 331, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 198, 204, 0,
	206, 177, 250, 200, 310, 213, 0, 622, 617, 618,
	214, 220, 263, 309, 248, 268, 175, 300, 276, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 218, 0, 259, 197, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 112, 285, 0, 0, 0, 316, 317, 318,
	302, 0, 189, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 85,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 0, 1253,
	1254, 112, 285, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	277, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 1318,
	0, 118, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 282, 298, 174,
	273, 311, 179, 280, 170, 246, 269, 0, 0, 167,
	296, 279, 228, 211, 212, 166, 0, 264, 190, 203,
	186, 244, 0, 295, 323, 185, 314, 0, 306, 169,
	0, 305, 243, 292, 297, 229, 223, 168, 294, 227,
	222, 215, 194, 0, 207, 255, 221, 256, 208, 233,
	232, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 0, 0, 0, 281,
	0, 0, 216, 0, 0, 0, 324, 0, 267, 249,
	0, 0, 0, 265, 219, 293, 257, 299, 283, 307,
	261, 258, 160, 284, 188, 230, 171, 172, 184, 191,
	193, 195, 196, 239, 240, 252, 272, 286, 287, 288,
	187, 180, 266, 181, 205, 182, 161, 274, 183, 163,
	253, 291, 0, 201, 262, 226, 164, 225, 254, 290,
	289, 315, 321, 322, 326, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 320, 199, 158, 303, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 319, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 210, 251, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 301, 313, 330, 0, 0, 0,
	162, 332, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 328,
	235, 236, 237, 238, 202, 0, 178, 331, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 325, 198, 204, 0, 206, 177, 250, 200, 310,
	213, 0, 242, 209, 275, 214, 220, 263, 309, 248,
	268, 175, 300, 276, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 218, 85, 259,
	197, 121, 122, 123, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 112, 285, 0,
	0, 0, 316, 317, 318, 302, 0, 189, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 1309, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 85, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 620, 621, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 598, 306,
	169, 597, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 622, 617, 618, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1251, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 1253, 1254, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 954, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 952, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 948, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	952, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2421, 0, 118, 481, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	952, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 952, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 1683, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	952, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 481, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2192, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 2369, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 2201, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 952, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 1691, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 1618, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 1601, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 360, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 361,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 0, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 218, 0,
	259, 197, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 285, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 277, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 282, 298, 174, 273, 311, 179, 280,
	170, 246, 269, 0, 0, 167, 296, 279, 228, 211,
	212, 166, 0, 264, 190, 203, 186, 244, 0, 295,
	323, 185, 314, 0, 306, 169, 0, 305, 243, 292,
	297, 229, 223, 168, 294, 227, 222, 215, 194, 0,
	207, 255, 221, 256, 208, 233, 232, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 0, 0, 0, 281, 0, 0, 216, 0,
	0, 0, 324, 0, 267, 249, 0, 0, 0, 265,
	219, 293, 257, 299, 283, 307, 261, 258, 160, 284,
	188, 230, 171, 172, 184, 191, 193, 195, 196, 239,
	240, 252, 272, 286, 287, 288, 187, 180, 266, 181,
	205, 182, 161, 274, 183, 163, 253, 291, 0, 201,
	262, 226, 164, 225, 254, 290, 289, 315, 321, 322,
	326, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 320, 199, 158,
	303, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 319, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 210, 251, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	301, 313, 330, 0, 0, 0, 162, 332, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 328, 235, 236, 237, 238,
	202, 0, 178, 331, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 198, 204,
	0, 206, 177, 250, 200, 310, 213, 0, 242, 209,
	275, 214, 220, 263, 309, 248, 268, 175, 300, 276,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 218, 0, 259, 197, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 285, 0, 0, 0, 0, 316, 317,
	318, 302, 0, 189, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 192, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 277, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 1207, 1208, 1662, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 282, 298,
	174, 273, 311, 179, 280, 170, 246, 269, 0, 0,
	167, 296, 279, 228, 211, 212, 166, 0, 264, 190,
	203, 186, 244, 0, 295, 323, 185, 314, 0, 306,
	169, 0, 305, 243, 292, 297, 229, 223, 168, 294,
	227, 222, 215, 194, 0, 207, 255, 221, 256, 208,
	233, 232, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	281, 0, 0, 216, 0, 0, 0, 324, 0, 267,
	249, 0, 0, 0, 265, 219, 293, 257, 299, 283,
	307, 261, 258, 160, 284, 188, 230, 171, 172, 184,
	191, 193, 195, 196, 239, 240, 252, 272, 286, 287,
	288, 187, 180, 266, 181, 205, 182, 161, 274, 183,
	163, 253, 291, 0, 201, 262, 226, 164, 225, 254,
	290, 289, 315, 321, 322, 326, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 320, 199, 158, 303, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 319, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 210, 251,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 301, 313, 330, 0, 0,
	0, 162, 332, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	328, 235, 236, 237, 238, 202, 0, 178, 331, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 325, 198, 204, 0, 206, 177, 250, 200,
	310, 213, 247, 242, 209, 275, 214, 220, 263, 309,
	248, 268, 175, 300, 276, 224, 0, 0, 0, 192,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 277,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 1207, 1208, 1662, 0, 0, 159, 173, 218, 0,
	259, 197, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 302, 0, 189, 0,
	0, 0, 0, 0, 0, 165, 282, 298, 174, 273,
	311, 179, 280, 170, 246, 269, 0, 0, 167, 296,
	279, 228, 211, 212, 166, 0, 264, 190, 203, 186,
	244, 0, 295, 323, 185, 314, 0, 306, 169, 0,
	305, 243, 292, 297, 229, 223, 168, 294, 227, 222,
	215, 194, 0, 207, 255, 221, 256, 208, 233, 232,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 0, 0, 0, 281, 0,
	0, 216, 0, 0, 0, 324, 0, 267, 249, 0,
	0, 0, 265, 219, 293, 257, 299, 283, 307, 261,
	258, 160, 284, 188, 230, 171, 172, 184, 191, 193,
	195, 196, 239, 240, 252, 272, 286, 287, 288, 187,
	180, 266, 181, 205, 182, 161, 274, 183, 163, 253,
	291, 0, 201, 262, 226, 164, 225, 254, 290, 289,
	315, 321, 322, 326, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	320, 199, 158, 303, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 319, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 210, 251, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 301, 313, 330, 0, 0, 0, 162,
	332, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 328, 235,
	236, 237, 238, 202, 0, 178, 331, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	325, 198, 204, 0, 206, 177, 250, 200, 310, 213,
	247, 242, 209, 275, 214, 220, 263, 309, 248, 268,
	175, 300, 276, 224, 0, 0, 0, 192, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 277, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 1207,
	1208, 0, 0, 0, 159, 173, 218, 0, 259, 197,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 302, 0, 189, 0, 0, 0,
	0, 0, 0, 165, 282, 298, 174, 273, 311, 179,
	280, 170, 246, 269, 0, 0, 167, 296, 279, 228,
	211, 212, 166, 0, 264, 190, 203, 186, 244, 0,
	295, 323, 185, 314, 0, 306, 169, 0, 305, 243,
	292, 297, 229, 223, 168, 294, 227, 222, 215, 194,
	0, 207, 255, 221, 256, 208, 233, 232, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 0, 0, 0, 281, 0, 0, 216,
	0, 0, 0, 324, 0, 267, 249, 0, 0, 0,
	265, 219, 293, 257, 299, 283, 307, 261, 258, 160,
	284, 188, 230, 171, 172, 184, 191, 193, 195, 196,
	239, 240, 252, 272, 286, 287, 288, 187, 180, 266,
	181, 205, 182, 161, 274, 183, 163, 253, 291, 0,
	201, 262, 226, 164, 225, 254, 290, 289, 315, 321,
	322, 326, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 320, 199,
	158, 303, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 319, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 210, 251, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 301, 313, 330, 829, 0, 0, 162, 332, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 328, 235, 236, 237,
	238, 202, 0, 178, 331, 260, 0, 0, 723, 724,
	725, 722, 0, 0, 0, 0, 0, 0, 325, 198,
	204, 0, 206, 177, 250, 200, 310, 213, 0, 242,
	209, 275, 214, 220, 263, 309, 248, 268, 175, 300,
	276, 224, 0, 0, 829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 817, 0, 0, 0, 0, 0,
	0, 0, 159, 1106, 218, 0, 259, 197, 0, 0,
	0, 0, 837, 841, 843, 845, 847, 848, 850, 0,
	854, 851, 852, 853, 0, 0, 832, 833, 834, 835,
	815, 816, 838, 0, 818, 0, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 830, 836, 829, 316,
	317, 318, 302, 0, 189, 840, 842, 844, 846, 849,
	0, 0, 0, 0, 817, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 0, 1106, 0, 0, 0, 0,
	0, 0, 837, 841, 843, 845, 847, 848, 850, 831,
	854, 851, 852, 853, 0, 0, 832, 833, 834, 835,
	815, 816, 838, 0, 818, 0, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 830, 836, 571, 0,
	0, 0, 0, 0, 0, 840, 842, 844, 846, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1102, 0, 0, 1099, 0, 0, 817, 1101,
	1098, 1100, 1104, 1105, 0, 0, 0, 1103, 0, 831,
	0, 0, 0, 0, 0, 0, 837, 841, 843, 845,
	847, 848, 850, 0, 854, 851, 852, 853, 0, 596,
	832, 833, 834, 835, 815, 816, 838, 0, 818, 0,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	830, 836, 0, 0, 0, 0, 1738, 1739, 0, 840,
	842, 844, 846, 849, 1102, 0, 0, 1099, 0, 0,
	0, 1101, 1098, 1100, 1104, 1105, 0, 0, 0, 1103,
	0, 0, 380, 0, 379, 386, 376, 0, 0, 0,
	0, 0, 0, 831, 0, 0, 383, 384, 0, 385,
	389, 0, 0, 371, 0, 0, 0, 0, 598, 0,
	0, 597, 0, 394, 0, 0, 0, 0, 0, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1109, 1110, 1111, 1112, 1113, 1114, 1107, 1108, 0, 2149,
	0, 0, 398, 0, 583, 399, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 0, 1616, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2149, 0,
	0, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1109, 1110, 1111, 1112, 1113, 1114, 1107, 1108,
	2131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 0, 0, 0, 0, 0, 2131,
	0, 0, 0, 0, 591, 0, 0, 2221, 0, 0,
	0, 0, 0, 0, 372, 374, 373, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 587, 592,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 582, 595, 0, 0, 0, 579, 577,
	576, 0, 581, 2135, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 2139, 0, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2128, 0, 0, 0, 2130, 2132,
	2134, 0, 2136, 2137, 2138, 2140, 2141, 2142, 2144, 2145,
	2146, 2147, 2135, 584, 0, 0, 377, 381, 387, 0,
	388, 390, 0, 2139, 391, 392, 393, 0, 0, 395,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2150, 0, 2128, 0, 0, 0, 2130, 2132, 2134,
	0, 2136, 2137, 2138, 2140, 2141, 2142, 2144, 2145, 2146,
	2147, 0, 0, 380, 0, 379, 386, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 2148, 383, 384, 0,
	385, 389, 0, 0, 371, 380, 0, 379, 386, 376,
	2150, 0, 0, 2127, 394, 0, 0, 0, 0, 383,
	384, 0, 385, 389, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 2143, 0, 398, 0, 2148, 399, 0, 2133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2143, 0, 0, 0, 0, 0, 0, 2133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 374, 373, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 372, 374, 373,
	0, 0, 397, 0, 0, 378, 0, 0, 0, 375,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 381, 387,
	0, 388, 390, 0, 0, 391, 392, 393, 0, 0,
	395, 396, 0, 0, 0, 0, 0, 0, 0, 377,
	381, 387, 0, 388, 390, 0, 0, 391, 392, 393,
	0, 0, 395, 396,
}

var yyPact = [...]int{
	208, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22502, 22502, -1000, -1000, 1563, -1000, 22017,
	8431, 22987, 138, 22987, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	360, -1000, 21532, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	329, 24902, 222, 216, 6470, 22987, -284, -1000, 2256, -1000,
	-1000, -1000, -1000, 184, 371, 21047, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	24772, 75, 371, 463, 474, 679, 679, 9886, 2256, 215,
	97, -1000, 643, 208, 306, 22987, -1000, 841, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 306, -1000, -1000, -1000, 2256, 2256, -1000,
	22987, 22987, -25, 1003, -1000, 214, 243, 233, 827, -1000,
	-1000, -1000, -1000, -1000, 2146, -1000, 22987, 1819, 22987, -1000,
	1236, 279, 25263, 1948, 762, 432, 1840, -1000, -1000, 1796,
	-1000, 71, 92, 123, 382, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 115, -1000, 2029, -1000, -1000, 81, -1000, -1000,
	67, -1000, -1000, -1000, -70, -1000, -1000, -1000, -1000, -1000,
	-147, -147, 481, 1057, 6470, -1000, 1344, -1000, 1289, -1000,
	-1000, -1000, -1000, 4022, 7934, 7934, 7934, 7934, -1000, -1000,
	1616, 6470, 1786, 1771, -1000, -1000, -1000, -1000, 823, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7446, -1000, 1768, 1767, 1762, 1757, 1753, 1744, 1728,
	1727, 1725, 1717, 1713, 1547, 1707, 1370, 1369, 1703, 1701,
	1699, 7934, 1366, 1547, 1547, 1696, 1695, 1689, 1683, 1679,
	1675, 1673, 1672, 1668, 1664, 1663, 1662, 1651, 1648, 1646,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 24614, -1000, 819, 702, -1000, 1645,
	1928, 2055, 1568, 2104, 2041, 2039, 1995, 1992, 56, 327,
	327, 327, 346, 327, 356, -1000, -1000, -1000, -1000, -1000,
	-1000, 429, -1000, -1000, -1000, -1000, 603, 22987, -1000, 1573,
	917, 2052, 289, 917, 228, 292, 2055, 2055, -98, -77,
	917, 917, -77, 65, -1000, -1000, -1000, 1012, 237, 1012,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2021, 1990, 329,
	329, 333, -1000, -171, -1000, -1000, 446, -1000, 442, -1000,
	1236, 278, 253, 688, 1006, -1000, 959, 22987, 22987, 22987,
	959, 959, 13287, 12802, -1000, 2055, 1568, -1000, 1524, 2151,
	1568, 329, 329, 329, 329, 329, 329, 329, 22987, 5486,
	5486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 238,
	1639, -1000, 22987, 206, 2055, 1928, 2055, -1000, -1000, 815,
	1222, 1365, -1000, -1000, 214, 982, -1000, 678, -1000, -1000,
	-1000, -1000, 22987, 250, -1000, 1359, 1636, -1000, 339, 726,
	786, -1000, 74, 25285, 18622, 1236, 18622, 22987, -1000, -1000,
	-1000, -1000, -1000, -1000, -72, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -41, -1000,
	-41, 6470, 6470, 6470, 6470, 6470, -1000, 364, 6958, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7934, 7934, 7934, 7934,
	7934, 7934, 7934, 7934, 7934, 7934, 7934, 7934, 1615, 1033,
	7934, 7934, 7934, 2151, 2095, 624, -1000, -1000, -1000, -1000,
	-1000, 970, 1057, 6470, 6470, 22987, 24518, 6470, 6470, 24590,
	6470, 1979, 1979, 3037, 22987, 6470, -1000, 1506, 1504, -1000,
	-1000, 1128, 6470, -1000, -1000, 6470, 7934, 6470, -1000, -1000,
	-1000, -1000, 54, 1979, 6470, 6470, 1979, 1979, 1979, 1021,
	1979, 1979, 1979, 1979, 1979, 1979, 1979, 22987, 1910, 48,
	-1000, -1000, -1000, 1560, -1000, 1587, 1587, 1560, 1560, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1634, 1632,
	-1000, -1000, 1586, 1586, 1586, 1560, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1626, 1626, 1631, 1626, 22987, 2055, -284, 4998, -1000,
	-288, 1928, 6470, -1000, -1000, 6470, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 334, 327, -1000, 22987, 1017, 18622,
	1236, 1244, 22987, 327, 333, -1000, 22987, 603, 1975, 22987,
	2126, 7934, 18622, 1012, 2126, 1012, -1000, -1000, -1000, 917,
	917, -1000, -1000, -1000, -1000, 1012, 1012, -1000, -1000, -74,
	2126, 2126, -83, 22987, 22987, 327, 22987, -1000, -1000, -1000,
	-1000, 22987, -1000, -1000, 22987, 18622, 12317, -1000, -128, 459,
	448, 453, -1000, -1000, 332, 349, 11832, 280, 18622, 3525,
	-1000, -1000, 959, 959, 959, 3525, 3525, 789, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1928, -1000, -1000, -1000, -1000,
	22987, 18622, 1236, 22987, 22987, 22987, 24228, -1000, 761, -1000,
	-1000, 9401, 807, 761, 1839, -285, -1000, 11347, 22987, 22987,
	-1000, -1000, -285, -1000, 10861, 22987, 1928, -1000, 1928, 2567,
	-1000, 2043, -1000, 214, 142, -1000, -1000, -1000, -1000, -1000,
	-1000, 802, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 591, -1000, 22987, -1000, -1000, 74, 18622, 939, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 116, -1000, -1000, 136,
	-1000, 343, 13, 968, -1000, -1000, 46, 133, 46, 1057,
	-1000, 1062, 1062, 1020, -1000, 392, -1000, -1000, -1000, -1000,
	1616, -1000, -1000, -1000, 1481, 2014, -1000, 1015, 1015, 865,
	865, 865, 865, 865, 1230, 1230, -1000, -1000, -1000, 4022,
	1615, 7934, 7934, 7934, 313, 1347, 1923, -1000, 6470, 1010,
	-1000, 6470, 1269, 877, 800, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1503, 481, 1500, 1413, 2137,
	1498, 6470, -1000, -1000, 6470, 1277, 5982, -1000, -1000, -1000,
	1492, 797, 1491, -1000, -1000, -1000, 1474, 652, 1471, 1069,
	1470, 579, 6470, 965, 956, 6470, 6470, 6470, 6470, 1456,
	6470, 6470, 6470, 6470, 6470, 6470, 6470, -1000, 6470, 42,
	-1000, -1000, -1000, -1000, 1220, -1000, 1217, -1000, -1000, -1000,
	1364, 1364, -1000, 1215, -1000, -1000, -1000, -1000, 1209, -1000,
	-1000, 1207, -1000, -1000, -1000, -1000, 952, -1000, 1057, -1000,
	1360, -1000, 752, 560, -1000, 1142, 20562, 22987, 36, -1000,
	1944, 698, -1000, 13, 482, 1817, -1000, -1000, -1000, 1891,
	22987, 20077, -1000, 1614, 949, -1000, -1000, 6470, -1000, 1799,
	22987, -1000, 22987, 2126, 2126, 917, 24228, 1012, 22987, 1012,
	-1000, -1000, 1012, -1000, 796, -1000, 22987, -1000, -1000, -1000,
	-1000, 36, 698, 2154, 605, -1000, -1000, -1000, -1000, 1969,
	23472, 10372, 23472, 1612, 1609, -1000, -1000, 457, 438, 434,
	-1000, -1000, 337, -1000, -1000, 482, -1000, -1000, -1000, 1602,
	1001, -1000, -1000, 7934, -1000, 3525, 3525, 3525, -1000, -1000,
	15227, -1000, -1000, 559, 482, 1824, 535, -1000, 535, -1000,
	-1000, -1000, 2126, 5486, -1000, 12317, -1000, -1000, 19592, -1000,
	19107, 2126, -1000, 1918, 502, -1000, 1594, -1000, 948, 1896,
	-1000, 480, -1000, 998, 945, -1000, 502, 942, 1887, 480,
	-1000, -1000, -1000, 791, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -26, -1000, -1000, 22987, 1359, 932, 939,
	516, -1000, 335, 790, 768, -1000, 18622, 83, 18622, -1000,
	18622, -1000, -1000, 251, -1000, 22987, 1926, -1000, -1000, -1000,
	1354, 1924, -1000, -1000, -1000, -1000, -1000, 930, -1000, 313,
	1347, 1465, -1000, 7934, 7934, 2076, 931, -1000, 6470, 1198,
	24544, 1118, 14257, 22987, -1000, -1000, 6470, 6470, -1000, 2058,
	2024, -1000, 6470, 6470, 1165, -1000, 22987, -1000, -1000, -1000,
	14257, -1000, 7934, -1000, 6470, 2017, -1000, -1000, 2013, 1966,
	1914, 929, -1000, 1909, 1895, 1878, 1862, 1769, 1765, 1759,
	1057, -1000, -1000, 1455, 1454, 908, -1000, 903, 1453, 891,
	887, 4998, -1000, -96, 6470, 6470, 6470, 1881, -1000, -1000,
	1573, 991, 1593, -44, 975, -1000, 355, 18622, 239, -1000,
	1823, 195, -1000, 1891, -1000, 723, -1000, 1591, 22987, 639,
	-1000, 767, 208, -1000, 22987, 1057, -1000, 1236, 917, 2126,
	-1000, -1000, 2126, -1000, 917, -1000, 917, 1012, 22987, -1000,
	-44, 355, 22987, 12317, 12317, 12317, 12317, -1000, 1865, 1857,
	-1000, 1868, 1859, 1885, 22987, 12317, 22987, -1000, -1000, -1000,
	23850, -1000, -1000, -1000, -1000, 885, 1447, 2256, 2200, 10372,
	492, 6470, 6470, -1000, -1000, -1000, 437, 18622, 1353, 280,
	-1000, -1000, -1000, -1000, -1000, 22987, 22987, 2124, -1000, 518,
	-1000, -1000, 766, -1000, 2124, 1063, -285, 4998, 232, 22987,
	-285, 22987, 4998, -1000, 22987, 221, -285, 2567, 1201, -1000,
	-1000, -1000, 2131, 18622, 1236, 894, 938, -1000, 80, -1000,
	110, 315, 1349, -1000, 354, 997, 341, -1000, -1000, 7934,
	-1000, -1000, -1000, -1000, 1057, 6470, 1446, -1000, 422, 422,
	1445, -1000, 1560, 1587, -1000, 1560, 1586, 1560, 422, 422,
	1444, -1000, 1154, 1755, -1000, -1000, 1723, 1617, 6470, -1000,
	1442, 1751, 817, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1330, -1000,
	-1000, -1000, 1200, -1000, 1183, -1000, -60, -45, 1057, 1057,
	-1000, -1000, 1903, 1963, 1943, 8916, 1143, -1000, -1000, 1326,
	-1000, 302, -1000, -1000, -1000, 361, 55, 1172, 303, -1000,
	1375, 22987, -1000, -1000, -1000, -1000, -1000, 975, 975, 975,
	8916, 306, 543, 743, 12317, 22987, -1000, 17652, 1440, -1000,
	482, 2126, -1000, -1000, 2126, 2126, 917, -1000, 1143, 302,
	727, -1000, 994, 1815, 1822, 1815, -1000, -1000, -1000, -1000,
	1853, -1000, 1779, -1000, -1000, 727, -1000, 1573, -1000, -1000,
	-1000, 1428, -1000, 492, -1000, 2040, 473, 473, 473, 878,
	873, -1000, 516, 1414, -1000, -1000, -1000, -1000, 2110, 2103,
	18137, 2110, 2161, -1000, 1412, 508, -285, -1000, -1000, 502,
	-1000, -1000, -1000, -285, -1000, 502, -1000, -1000, -1000, -1000,
	-1000, 1236, -1000, 107, -1000, -1000, -1000, -1000, -1000, -1000,
	-13, -1000, 22987, 1324, 22987, -1000, 1057, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6470, -1000, -1000, -1000, 1604, -1000, -1000, 6470,
	-1000, 1410, 1408, -290, -35, 2091, 2081, -1000, -1000, 215,
	22987, 1407, 503, -1000, -1000, -1000, 24698, 509, -1000, 22987,
	1041, 473, 327, 473, 1035, 1584, -1000, -1000, -1000, 1321,
	1, -1000, -1000, 1320, 1318, 1171, -1000, -1000, 1176, 680,
	23, -1000, -1000, -1000, -1000, -1000, -1000, 1581, 14257, 14742,
	1317, 1391, 23472, 12317, 17652, 597, -1000, 733, -1000, -1000,
	-1000, -1000, -1000, 2126, -1000, -1000, 2077, 22987, 4998, -1000,
	-1000, 6470, 1575, -1000, 6470, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1574, 1939, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6470, 6470, -1000, -1000, 22987, -1000, 502, 502, 482,
	-1000, -1000, -83, 70, -83, 1598, -1000, 1472, -1000, -1000,
	-292, 1308, -1000, 2079, 1305, 1251, -1000, 1573, 25012, 8916,
	1352, -1000, -1000, 22987, 22987, -1000, 22987, 22987, 327, 6470,
	-1000, -1000, 213, -1000, -1000, 114, -1000, -1000, 1173, 338,
	-1000, 16197, -1000, -1000, -1000, -1000, -1000, -41, 2126, 597,
	733, -1000, -1000, 882, -1000, 2055, -1000, -1000, 1057, 22987,
	1057, 17167, -1000, 2074, 2073, 1057, 481, 480, -1000, -61,
	-53, -1000, 1303, -1000, -1000, -1000, -294, 1162, -1000, 1302,
	-42, -1000, -1000, 1959, 305, 24963, -1000, 975, 975, 648,
	975, 975, 975, 975, 225, 223, 975, 975, 975, 975,
	975, 975, 975, 975, 975, 975, 975, 975, 975, 975,
	1571, -1000, -1000, 1352, -1000, -1000, 1080, 7934, -1000, -1000,
	1301, 14742, 467, 468, 1569, -1000, 185, 2160, 1032, 1025,
	-1000, 22987, -1000, 1566, 1600, 146, 1564, -1000, 1562, 1561,
	22987, 1427, 314, 1299, -1000, -1000, 109, -1000, -1000, 868,
	-1000, 1560, 6470, -1000, -83, 2077, -1000, -1000, 853, 843,
	-1000, -1000, -1000, -1000, 331, -51, -53, -1000, 2071, -43,
	2070, 2068, 986, -1000, 1559, -1000, -1000, 2066, 215, -1000,
	2063, 25012, -1000, 1152, 1148, 975, 975, 1147, 1298, 1293,
	1291, 975, 975, 1146, 1284, 23850, 1139, 1131, 1130, 1164,
	1274, 609, 1141, 1136, 1132, 22987, 1557, 1249, -1000, -1000,
	1347, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1127, 1556, -129, -1000, -1000, 1554, 16197, 229,
	229, 16197, 16197, 16197, 1553, 359, -1000, -14, -1000, -1000,
	-1000, 16197, 1937, 1409, -1000, 2055, -1000, -1000, 16682, 1551,
	1123, -35, 2060, -1000, 1251, 2059, 1251, 1251, 1273, 22987,
	1251, -1000, 186, -1000, -1000, -1000, 14257, 14257, -1000, -1000,
	-1000, -1000, 1268, 1257, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 270, 22987, 829, -1000,
	981, 1387, 6470, 1547, -195, 16197, 813, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 809, 794, 785, 16197, -1000, -1000,
	-1000, 179, -1000, 153, -1000, -1000, 1937, -1000, -1000, -1000,
	1984, 13772, -64, -1000, 1252, -1000, 1251, -1000, -1000, 69,
	779, -1000, -1000, 164, 252, 235, -1000, 340, -1000, -1000,
	-1000, -1000, -1000, -1000, 236, 750, -1000, 1249, 1248, -1000,
	1328, -1000, 1758, -1000, 44, 745, -1000, -1000, -1000, -1000,
	731, -1000, -1000, 975, 1247, 132, -1000, -1000, -1000, -1000,
	22987, -1000, 725, -1000, -1000, -1000, 716, -1000, -1000, -1000,
	-1000, -1000, 1246, -1000, 22987, 162, 1121, 7934, 1546, 7934,
	1544, 171, 1543, -1000, -1000, -1000, -1000, -1000, 359, -1000,
	1754, 1726, 2141, -1000, -1000, -1000, -1000, 153, 153, 153,
	153, 72, 1104, -1000, 1244, 478, -1000, 974, -1000, 15712,
	22987, 962, -1000, 1542, 2057, -1000, 1430, 22987, 1411, 22987,
	1529, 955, 7934, -1000, -1000, 2158, -1000, 2142, 490, 490,
	-1000, -1000, -1000, 22987, 4510, -1000, 704, 1238, -1000, 304,
	169, -1000, 721, -1000, 720, 22987, 1095, 1368, -1000, -1000,
	-1000, 1117, 200, -1000, -1000, -1000, 1057, 22987, 66, 714,
	-1000, 1374, 155, -1000, -1000, 701, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1235, -1000, 304, 1874, -1000, 1086, -1000,
	953, -1000, 1644, 435, -1000, 1231, -1000, 1644, 157, -1000,
	297, 1528, -306, -1000, -1000, 699, -1000, 1362, 471, 6470,
	-1000, -1000, 157, 25012, -1000, 6470, 697, -1000, 25012, 693,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 115, 2534, 193, 135, 132, 190, 2533, 2532, 1991,
	1980, 2531, 2530, 2529, 2528, 2527, 2526, 2525, 2524, 2522,
	2521, 2520, 2519, 2517, 2516, 2513, 2512, 2510, 189, 2509,
	2508, 2504, 2501, 2500, 2499, 2498, 2497, 2496, 2495, 2494,
	2493, 2492, 2491, 2483, 2482, 2477, 126, 2476, 1975, 2475,
	2474, 2473, 2467, 2466, 164, 2465, 2464, 2463, 2462, 2461,
	2460, 2459, 2458, 2457, 2456, 2455, 2454, 2453, 2452, 120,
	2451, 2450, 2449, 2448, 186, 172, 57, 2446, 50, 48,
	113, 199, 137, 198, 197, 140, 117, 67, 2444, 2015,
	2443, 142, 176, 105, 23, 2442, 128, 2441, 103, 46,
	31, 194, 110, 53, 61, 83, 2440, 168, 81, 2439,
	2438, 90, 2437, 58, 2436, 73, 30, 88, 26, 2434,
	2433, 2427, 71, 2426, 2425, 2424, 2423, 131, 2422, 91,
	52, 2421, 2419, 2418, 2417, 2416, 36, 2415, 39, 2414,
	2413, 2412, 2409, 2408, 2407, 2406, 12, 20, 18, 2404,
	17, 3, 2403, 169, 93, 79, 107, 2402, 404, 2401,
	2400, 2399, 111, 2398, 466, 2397, 2396, 2395, 2394, 9,
	2393, 157, 2392, 2391, 2389, 47, 151, 152, 2388, 2387,
	100, 59, 89, 96, 2385, 2384, 85, 166, 16, 32,
	0, 153, 43, 2383, 2381, 2380, 195, 150, 149, 177,
	122, 201, 114, 2379, 2378, 51, 2377, 106, 2376, 87,
	7, 2375, 143, 2374, 180, 129, 2369, 160, 2367, 213,
	2, 102, 27, 217, 2366, 2365, 2363, 123, 2362, 2361,
	74, 130, 2360, 2359, 2357, 24, 2355, 29, 21, 2354,
	94, 2353, 196, 2352, 161, 92, 125, 124, 104, 173,
	179, 66, 109, 1055, 101, 72, 19, 2351, 170, 2350,
	185, 174, 2349, 147, 2348, 191, 364, 158, 2347, 134,
	8, 2345, 2342, 10, 2341, 25, 2337, 2336, 2335, 2334,
	6, 2333, 2332, 2331, 1, 4, 2328, 5, 167, 55,
	95, 2327, 97, 192, 2324, 2320, 2319, 2318, 2314, 533,
	2313, 2312, 2310, 2309, 2305, 2303, 2301, 2299, 78, 37,
	2294, 2292, 2291, 2290, 75, 99, 2288, 277, 163, 2287,
	45, 2286, 2285, 28, 2284, 38, 2283, 2281, 2280, 14,
	139, 2278, 2277, 15, 2276, 2271, 11, 13, 2270, 2268,
	54, 2266, 60, 33, 69, 68, 2261, 22, 62, 98,
	2258, 2251, 187, 188, 156, 2249, 118, 183, 202, 2248,
	165, 2244, 2243, 2240, 2224, 2216, 2215, 2204, 1071, 2203,
	2200, 184, 56, 171, 2199, 2198, 145, 2197, 112, 84,
	82, 154, 2196, 141, 2193, 2191, 80, 2190, 2180, 2179,
	2178, 2176, 181, 144, 2175, 2164,
}

//line mysql_sql.y:7816
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 390, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	63, 62, 339, 339, 338, 338, 337, 337, 336, 336,
	336, 335, 335, 335, 334, 334, 333, 333, 332, 332,
	330, 330, 331, 329, 328, 328, 328, 326, 326, 324,
	324, 325, 325, 319, 319, 322, 322, 320, 320, 320,
	320, 323, 318, 318, 318, 317, 317, 61, 61, 61,
	255, 255, 60, 60, 269, 269, 269, 269, 269, 267,
	267, 267, 267, 267, 267, 266, 266, 265, 265, 270,
	270, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 55, 55, 55, 55, 58, 58, 58, 59, 264,
	264, 264, 56, 57, 57, 254, 254, 259, 259, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 263, 263, 263, 261, 261, 260, 260, 262, 262,
	49, 49, 49, 52, 51, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 50, 50, 50, 50, 50, 50,
	47, 47, 47, 47, 47, 46, 46, 48, 48, 252,
	252, 251, 66, 66, 66, 66, 66, 66, 66, 65,
	65, 68, 68, 67, 54, 54, 54, 54, 54, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 363, 363,
	363, 365, 365, 194, 195, 391, 193, 193, 193, 359,
	359, 360, 361, 362, 362, 362, 64, 7, 7, 44,
	45, 383, 383, 299, 299, 207, 207, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 302, 303, 203, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	35, 34, 34, 241, 241, 33, 392, 392, 177, 177,
	32, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	43, 313, 313, 394, 394, 394, 41, 42, 298, 298,
	298, 39, 38, 37, 36, 36, 31, 31, 30, 30,
	200, 200, 202, 202, 198, 393, 393, 275, 275, 201,
	201, 29, 29, 29, 199, 199, 176, 197, 197, 197,
	8, 8, 6, 11, 11, 11, 11, 11, 11, 11,
	11, 17, 19, 249, 249, 246, 18, 14, 13, 16,
	12, 15, 5, 5, 5, 5, 9, 9, 10, 86,
	86, 117, 117, 372, 372, 368, 368, 369, 369, 369,
	370, 370, 371, 371, 69, 307, 307, 307, 307, 307,
	307, 4, 306, 306, 306, 306, 306, 306, 389, 389,
	348, 348, 348, 349, 107, 107, 102, 102, 308, 308,
	221, 350, 350, 316, 316, 315, 315, 314, 314, 105,
	105, 106, 106, 89, 89, 75, 75, 321, 321, 321,
	321, 327, 327, 296, 296, 143, 143, 172, 172, 173,
	173, 79, 79, 80, 80, 80, 80, 80, 80, 356,
	356, 358, 358, 357, 104, 104, 100, 100, 101, 101,
	101, 99, 99, 98, 97, 97, 96, 94, 94, 94,
	95, 95, 95, 82, 82, 81, 81, 81, 81, 81,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 83, 83, 364, 364, 364, 300, 300, 300,
	305, 305, 155, 155, 156, 156, 154, 154, 84, 84,
	85, 85, 85, 85, 153, 153, 152, 87, 87, 93,
	92, 92, 88, 88, 88, 88, 163, 163, 162, 162,
	162, 162, 72, 73, 73, 74, 110, 110, 161, 160,
	160, 160, 109, 109, 108, 108, 103, 103, 91, 91,
	91, 91, 159, 90, 90, 395, 395, 157, 388, 388,
	387, 387, 386, 384, 384, 384, 385, 385, 385, 385,
	341, 341, 341, 341, 341, 186, 186, 186, 192, 192,
	185, 185, 185, 185, 185, 196, 191, 191, 187, 187,
	188, 188, 188, 3, 3, 3, 3, 23, 23, 23,
	23, 27, 27, 366, 366, 20, 373, 376, 374, 377,
	377, 377, 378, 378, 378, 379, 379, 21, 375, 380,
	380, 380, 250, 250, 247, 248, 248, 245, 244, 244,
	244, 382, 382, 381, 381, 381, 189, 189, 22, 240,
	240, 242, 243, 243, 234, 234, 234, 234, 26, 238,
	238, 239, 239, 239, 239, 239, 235, 235, 237, 237,
	233, 233, 233, 233, 233, 25, 232, 232, 230, 230,
	228, 228, 229, 229, 227, 227, 227, 231, 231, 24,
	24, 77, 76, 76, 76, 76, 76, 78, 301, 301,
	271, 271, 274, 274, 281, 281, 282, 282, 280, 280,
	287, 287, 286, 286, 285, 285, 284, 284, 283, 283,
	283, 283, 278, 278, 277, 277, 272, 272, 272, 272,
	272, 273, 273, 276, 276, 279, 279, 134, 134, 135,
	135, 135, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 346, 346, 347, 137, 137, 137, 141, 141, 141,
	141, 141, 141, 136, 136, 138, 138, 118, 118, 116,
	116, 111, 111, 112, 112, 113, 113, 114, 114, 115,
	115, 115, 115, 115, 115, 257, 257, 344, 344, 345,
	345, 340, 340, 340, 343, 343, 343, 343, 343, 342,
	342, 119, 170, 170, 170, 190, 190, 190, 169, 169,
	169, 133, 133, 132, 132, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 256,
	256, 204, 204, 205, 205, 150, 149, 149, 149, 149,
	149, 147, 148, 146, 146, 146, 146, 146, 145, 145,
	144, 144, 144, 236, 236, 142, 142, 140, 140, 140,
	139, 139, 139, 288, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 218,
	218, 355, 355, 354, 120, 120, 120, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 129, 129, 129, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 312, 312, 312, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	367, 367, 367, 351, 351, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 167, 167, 167, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	222, 222, 223, 223, 309, 309, 309, 309, 309, 309,
	310, 310, 311, 311, 311, 311, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 211, 164, 164, 164, 224,
	219, 219, 220, 220, 214, 214, 214, 214, 214, 214,
	214, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 215, 215, 217, 217, 226, 226, 226, 225, 225,
	225, 225, 225, 225, 225, 131, 131, 131, 131, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 122,
	122, 122, 122, 126, 126, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 127,
	127, 127, 127, 125, 125, 125, 125, 125, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 70, 71, 71, 124, 171, 171,
	289, 289, 292, 292, 290, 290, 291, 293, 293, 293,
	294, 294, 294, 295, 295, 295, 297, 297, 175, 175,
	175, 182, 182, 174, 174, 183, 183, 184, 184, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	9, 9, 0, 2, 1, 3, 3, 3, 1, 3,
	5, 0, 2, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 0, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 1, 1, 1, 1, 6, 1, 1, 7,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 2, 5, 0, 2, 7, 0, 1, 0, 1,
	4, 1, 1, 1, 3, 2, 3, 1, 1, 1,
	6, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 6, 7, 4, 4, 7, 8,
	0, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 3, 1, 4, 6, 4, 4,
	4, 3, 1, 1, 2, 2, 11, 8, 9, 1,
	3, 2, 4, 0, 2, 0, 1, 1, 1, 1,
	0, 1, 0, 1, 4, 2, 1, 5, 4, 4,
	2, 5, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 4, 3, 4, 5, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 4,
	2, 3, 3, 4, 4, 0, 1, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 11, 0, 1, 7, 1, 4, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 10,
	9, 2, 2, 6, 10, 14, 18, 5, 0, 1,
	0, 6, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	4, 1, 3, 3, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 1, 7,
	7, 7, 7, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 5, 6, 4, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 0, 2, 0,
	1, 1, 2, 4, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 5,
	4, 4, 5, 5, 5, 5, 4, 5, 5, 5,
	5, 5, 5, 5, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 5, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -390, -2, -1, -3, -4, -69, -5, -6, -8,
	-53, -65, -67, -68, -28, -7, -64, -46, -47, -49,
	-55, -60, -61, -62, -63, -70, -71, -72, -79, -23,
	-22, -21, -20, 12, 424, -9, -10, -356, -11, 229,
	-193, -194, -195, -391, -29, -30, -31, -36, -37, -38,
	-39, -41, -42, -43, -32, -33, -34, -35, -45, -44,
	206, -48, 61, -50, -51, -52, -56, -57, -58, -59,
	320, 326, 378, 387, 506, 507, 46, -80, -82, -24,
	-25, -26, -27, 202, 14, 457, -12, -15, -13, -16,
	-14, -18, -19, -17, 224, 223, 37, 286, 287, 324,
	222, 203, 13, 135, 136, 138, 139, 30, -81, 67,
	204, -83, 10, 508, -89, 38, -116, -190, 70, -178,
	-181, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 427, 302, 454,
	241, 265, 349, 268, 275, 135, 154, 148, 176, 168,
	143, 245, 246, 77, 138, 410, 87, 395, 375, 141,
	260, 262, 264, 267, 247, 164, 159, 259, 243, 506,
	157, 248, 39, 249, 181, 250, 251, 459, 391, 301,
	397, 272, 373, 158, 392, 263, 394, 183, 187, 402,
	326, 152, 153, 399, 404, 180, 221, 42, 456, 233,
	405, 185, 179, 175, 413, 276, 274, 178, 151, 174,
	244, 50, 189, 188, 190, 369, 370, 371, 372, 252,
	253, 314, 401, 171, 160, 305, 144, 22, 408, 228,
	396, 327, 254, 269, 277, 184, 186, 235, 240, 458,
	377, 239, 273, 406, 156, 232, 261, 227, 409, 145,
	320, 329, 255, 139, 266, 403, 412, 49, 342, 150,
	142, 218, 136, 237, 242, 11, 256, 257, 258, 279,
	278, 270, 172, 234, 177, 162, 149, 173, 137, 236,
	411, 343, 504, 303, 358, 170, 167, 238, 211, 407,
	398, 140, 362, 344, 165, 280, 501, 502, 503, 315,
	300, 281, 282, 163, 225, 390, 283, 285, 368, 293,
	345, 376, 350, -89, -48, -10, -9, -81, -82, -116,
	209, -197, 23, 373, -54, 374, 206, 67, -190, -5,
	-4, -69, -46, -79, -196, -190, 286, -196, 209, -190,
	239, 357, -299, 214, -266, -240, 240, -265, -242, -268,
	-243, 31, 202, 204, 203, 236, 14, 324, 210, 12,
	10, 325, 222, 24, 25, 27, 13, 326, 328, 28,
	329, 332, 333, 334, 41, 337, 338, 229, 70, 73,
	247, 247, -220, -214, 94, 230, -216, -209, -210, -212,
	-336, -330, -208, 67, 119, 120, 127, 95, -211, -288,
	35, 97, 464, 425, -165, -166, -167, -168, -190, -331,
	-329, 73, 78, 81, 84, 85, 83, 82, 161, 80,
	74, 132, -82, 70, -351, 472, -179, 492, 473, 491,
	46, -304, -311, 208, -309, 166, 225, 162, 12, 125,
	368, 130, 163, 469, 488, 427, 495, 466, 467, 461,
	462, 463, 465, 474, 476, 487, -312, 483, 493, 494,
	72, 71, 486, 485, 470, 471, 477, 460, 468, 478,
	479, 484, 489, 490, 497, 498, 308, 87, 309, 310,
	417, 304, 311, 214, 373, 55, 312, 313, 314, 315,
	316, 424, 317, 56, 318, 307, 229, 358, 319, 165,
	182, 429, 428, 430, 421, 418, 416, 419, 420, 422,
	423, 480, 481, 482, -262, -260, -190, -73, -74, 499,
	-98, -99, -158, 19, 6, 7, 8, 9, -301, 302,
	358, 239, -234, -232, 283, 335, 219, 218, 88, 417,
	208, -368, -369, 199, 200, 201, -358, 450, -357, -190,
	310, 26, 209, -40, -313, -298, 398, 397, -201, 396,
	389, 400, 391, 202, 451, -175, 345, 376, 235, 414,
	415, 322, 377, 402, 403, 392, 87, 169, 166, 302,
	358, -368, 140, 137, -253, 140, 93, 145, 144, -253,
	239, 357, 40, -259, 368, -258, -260, 402, 403, 413,
	71, 72, 401, -175, 87, -99, -158, -98, -80, -82,
	-356, 302, 358, 239, 210, 209, 211, 417, 286, -300,
	-364, 31, -305, 196, 197, 198, 32, 33, -1, -105,
	231, -116, 133, -105, -99, -98, -99, -116, -169, -190,
	375, 103, -54, -54, 374, -359, -360, -361, -363, 206,
	374, 373, 133, 15, -196, 65, -116, -242, 239, -266,
	-240, 35, 64, 134, 212, 134, 64, 67, 322, 302,
	358, 323, 417, 209, 335, 211, 239, 336, 302, 358,
	209, 211, 417, 239, 302, 209, 211, 358, 239, 336,
	389, 390, 211, 26, 327, 330, 331, 390, -317, 413,
	-317, 134, 93, 90, 91, 92, -214, 110, -225, 103,
	104, 105, 106, 107, 108, 109, 116, 115, 126, 119,
	120, 121, 122, 123, 124, 125, 117, 118, 113, 94,
	111, 112, 96, -82, -214, -220, -212, -212, -212, -212,
	-288, -218, -214, 67, 67, 133, -214, 67, 67, 67,
	67, 67, 67, 67, 67, 67, -310, 67, 67, -222,
	-223, 67, 67, 73, 73, 67, 67, 67, -212, 73,
	-223, -223, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 134, -122, -126,
	-123, -125, -124, -128, -127, 166, 167, 130, 170, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 30,
	182, 225, 162, 163, 164, 165, 183, 148, 168, 455,
	191, 149, 192, 150, 193, 151, 194, 152, 153, 195,
	154, 157, 158, 159, 156, 133, -99, 134, 67, -75,
	38, -101, 21, -83, -82, 20, 31, 32, 31, 32,
	31, 32, 31, 32, -366, 209, 450, -230, 214, -230,
	-230, 210, -230, 209, -370, 147, 134, -358, -104, 67,
	-200, 111, 23, 237, -200, -394, 210, 399, 42, 238,
	237, -100, -101, -100, 393, 390, -275, 394, 395, -201,
	-200, -200, -201, 209, 211, 417, -392, -393, 15, 113,
	237, -392, 30, 30, -299, -299, -371, 213, 406, 457,
	143, 144, 145, -242, 239, 239, 134, 103, 23, -261,
	103, 114, -260, -260, -260, -261, -261, -136, 40, -189,
	130, -190, 73, -136, 40, -100, -83, -82, 68, 68,
	-299, -299, -299, -299, -299, -299, -299, -196, -84, -85,
	121, -214, -190, -84, -306, 46, -79, 67, 30, 67,
	-190, -307, 46, -79, 67, 30, -100, -75, -101, 133,
	78, 73, -54, 68, 134, -362, 84, 85, -365, 180,
	172, -190, -66, 73, -3, -4, -5, -6, -28, -46,
	-79, -332, -330, 67, 31, 367, 64, 15, -267, 209,
	417, 321, 235, 211, 302, -265, -249, -246, -244, -189,
	-242, -245, -244, -270, -169, 390, -76, 379, -76, -214,
	-214, -214, -214, -214, 83, 94, 300, 84, 85, -209,
	-226, 31, 281, 282, -210, -210, -210, -210, -210, -210,
	-210, -210, -210, -210, -210, -210, -217, -224, -288, 67,
	113, 111, 112, 96, -212, -210, -210, 68, 134, -355,
	-354, 98, -214, -214, -190, -352, -353, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 312, 307,
	313, 311, 304, 319, 314, 315, 165, 448, 449, 442,
	443, 444, 445, 446, 447, -219, -220, -219, -214, -352,
	-219, -164, 32, 31, -164, -214, -367, 298, 297, 299,
	-102, -190, -219, 68, 68, 68, 78, -220, -219, -210,
	-219, -353, -164, -220, -220, -164, -164, -164, -164, 121,
	-164, -164, -164, -164, -164, -164, -164, -260, 40, -295,
	343, 342, -289, -291, 67, -290, 67, -290, -289, -289,
	67, 67, -292, 67, -292, -292, -289, -293, 67, -293,
	-294, 67, -293, -190, -100, -74, -315, -314, -214, 40,
	500, -75, -214, -97, -96, -214, 211, -230, -373, -190,
	94, -250, -247, -244, -240, -188, 70, 71, 72, -190,
	-230, -371, -357, 34, -103, -190, -154, 16, -212, -244,
	-392, -154, -393, -200, -200, -202, -393, -198, -393, 390,
	-154, -154, -275, -199, -190, -199, -230, -177, -176, -190,
	-177, -373, -250, -92, -87, -91, -88, -93, -157, -159,
	-90, 67, -116, 497, 498, 407, 408, 141, 144, 143,
	31, 367, -264, 367, 31, -240, -258, -254, 73, 368,
	-245, -263, 64, 130, -314, -261, -261, -261, -263, -263,
	129, -75, -373, -249, -240, -190, -118, -116, -118, -191,
	-188, -181, -153, 134, -152, 15, -185, -190, 34, 73,
	133, -153, -389, 64, -308, -221, -350, 499, -107, 68,
	-102, -348, -349, -102, -106, -190, -308, -107, 68, -348,
	-75, -75, -183, -184, -174, -180, -187, -188, -181, 207,
	31, 93, 34, 36, 308, 340, 96, 130, 20, 97,
	166, 129, 310, 425, 309, 202, 59, 428, 430, 429,
	418, 416, 360, 364, 366, 363, 417, 389, 40, 14,
	37, 223, 32, 33, 123, 204, 100, 101, 226, 35,
	224, 85, 44, 23, 62, 15, 17, 18, 311, 359,
	214, 213, 113, 379, 210, 57, 12, 132, 38, 110,
	361, 53, 89, 45, 55, 111, 21, 419, 420, 41,
	378, 387, 453, 230, 125, 312, 313, 60, 94, 367,
	83, 43, 64, 90, 19, 58, 112, 205, 424, 56,
	365, 316, 318, 328, 450, 317, 208, 400, 10, 307,
	426, 30, 222, 54, 209, 99, 212, 84, 229, 6,
	88, 13, 61, 65, 421, 422, 423, 46, 98, 16,
	319, 457, 380, 381, 382, 383, 384, 385, 386, 191,
	192, 193, 194, 195, 271, 217, 215, 219, 220, 499,
	500, 196, 197, 297, 299, 169, 199, 200, 201, 231,
	147, 7, 346, 347, 348, 351, 352, 353, 354, 355,
	356, 357, 507, 23, -54, -360, 133, 134, -103, -267,
	-248, -245, -269, 121, 70, -255, 134, 457, 509, 71,
	212, -382, -381, 359, 68, 134, -318, 213, 424, 73,
	510, -318, 83, 300, 84, 85, -288, -220, -217, -212,
	-210, -210, -215, 226, 93, -214, -213, -354, 100, -214,
	34, 134, 65, 133, 68, 68, 15, 15, 68, -214,
	-214, 68, 15, 15, -214, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -214, 68, 68, -214, -214,
	-214, -220, 68, -214, -214, -214, -214, -214, -214, -214,
	-214, -297, 344, 78, 78, -171, 73, -171, 78, 78,
	78, 134, 68, 73, 134, 22, 134, -94, 36, 37,
	-116, 214, -116, -376, 346, 35, -383, 134, 40, -381,
	-233, 65, -228, -229, -227, -231, 40, -116, 15, -86,
	-117, -190, 67, 68, 134, -214, -241, 65, -177, -116,
	-154, -154, -200, -191, -202, -197, -202, -198, 133, -176,
	-376, -383, 30, -160, -161, -162, -163, 53, 57, 59,
	54, 55, 56, 60, 30, 134, -395, 34, -186, -192,
	34, -187, 73, -188, -181, -87, -80, -82, -92, 67,
	-186, 67, 67, 142, 145, 145, 144, 212, 67, 103,
	-263, -263, -263, 40, -189, 64, 134, -154, -85, -87,
	-190, 73, -190, 121, -154, 39, 134, 67, 68, 134,
	46, 134, 103, 68, 134, 68, 46, 133, 375, -190,
	-330, 68, -269, 134, 212, 133, 133, -246, 326, -189,
	-248, 20, 457, -169, 38, 73, 38, 68, -215, 93,
	-212, -209, 68, 101, -214, 99, -120, -122, 342, 343,
	-121, -127, 130, 166, 225, 165, 164, 162, 342, 343,
	-136, -190, -214, -214, 68, 68, -214, -214, 15, -190,
	-136, -210, -214, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 134, 68,
	68, 68, 134, 68, 134, -314, -321, 394, -214, -214,
	-96, -95, 43, -104, 94, 67, -378, 396, 348, -182,
	103, -207, -206, 303, 41, -302, 368, 354, 355, -247,
	239, 64, 292, 293, 294, 295, -227, -175, 129, 250,
	67, -116, -86, -190, 15, 134, -372, 133, -1, -190,
	-240, -200, -154, -154, -200, -200, -202, -190, -378, -207,
	-252, -251, -169, -91, -91, -91, -91, 53, 53, 53,
	58, 53, 58, 53, -162, -252, -93, -190, -192, 68,
	68, -80, -388, -387, -386, -384, 61, 213, 62, -220,
	-220, 145, -248, -203, 73, -254, -116, -116, -156, 17,
	133, -156, 89, -221, -316, -315, 46, -79, -102, -308,
	-349, -314, -190, 46, -79, -308, -183, -180, -188, -181,
	78, 15, -245, -240, 121, 121, 70, 327, -255, 73,
	347, 73, 209, 103, 209, -209, -214, 68, -129, 153,
	152, -129, 68, -289, -290, -289, -292, -289, -129, -129,
	68, 68, 23, 68, 68, 68, -214, 68, 68, 134,
	73, 78, 78, -327, 385, 380, 382, 44, 45, 34,
	35, -111, -112, -113, -119, -114, -169, -205, -115, 217,
	215, 219, -345, 88, 220, 271, 89, 210, -379, 77,
	-374, 73, -380, 77, 349, 132, 305, 40, 350, 351,
	365, 301, 78, 78, 356, -375, 70, -116, -182, -182,
	-182, -111, -105, 65, 133, -87, -117, -190, 121, 68,
	-154, -154, -154, -200, -379, -380, -154, 134, 103, -109,
	-108, 64, 65, -110, 64, -108, 53, 53, -154, -104,
	68, -386, -385, 23, -345, -345, -345, 68, 68, 68,
	-155, 18, 20, 121, -155, 13, 68, -308, -308, -240,
	-255, 368, -116, 73, -116, -214, 68, -214, 68, 68,
	-296, 501, -325, 380, 20, 20, -79, -116, 68, 134,
	-122, -115, -190, 89, -344, -345, -230, -344, 89, 67,
	73, -377, 359, 73, 73, 78, 40, 78, 132, 352,
	-303, 67, -136, -138, -189, 130, 73, 68, -186, -87,
	-190, -154, -372, 133, -154, -99, -251, -314, -214, 67,
	-214, 67, 53, 19, 17, -214, -220, -348, -78, -319,
	-275, 511, 134, -78, 68, 68, -143, 502, 73, 20,
	73, -323, 73, -104, -134, -135, -151, 340, 241, -231,
	245, 77, 246, 375, 247, 210, 249, 250, 251, 221,
	252, 253, 254, 368, 255, 256, 257, 258, 323, 6,
	288, -113, -133, -132, -130, 83, 94, 40, 340, -131,
	77, 129, 264, 242, 265, -150, -204, 64, 215, 88,
	89, 328, -205, -340, -342, -190, -342, -190, -340, -340,
	-230, -214, 20, 457, 304, 40, 78, 40, 353, -235,
	-237, -169, 67, -77, -76, -154, -154, -100, -103, -341,
	-190, 215, 20, 20, -326, 385, -322, -320, 380, 381,
	382, 383, 73, -172, 503, 78, 73, 382, 34, -271,
	231, 134, -151, -182, -182, -175, 129, -182, -182, -182,
	-182, 248, 248, -182, -182, -182, -182, -182, -182, -182,
	-182, -182, -182, -182, -182, -182, -182, 67, -130, 83,
	-210, 73, -138, -139, 40, 263, 259, -140, 40, 243,
	244, -142, 67, 271, 13, 89, 89, -116, 67, 65,
	280, 67, 67, 67, -342, 68, 73, 347, 73, 304,
	68, 134, -289, -214, -78, -99, 68, 68, 134, -328,
	213, -324, 384, -320, 20, 382, 20, 20, 103, 67,
	20, -79, 20, -151, 78, 78, -182, -182, 78, 73,
	73, 73, -182, -182, 78, 73, -192, 78, 78, 78,
	78, 40, 73, -141, 40, 259, 263, 260, 261, 262,
	78, 40, 78, 40, 78, 40, -190, 67, -346, -347,
	73, 78, 67, -309, -236, 67, -235, -343, 292, 293,
	294, 296, 295, -343, -235, -235, -235, 67, -257, -256,
	272, 94, 368, -238, -237, -94, 68, -100, -190, 215,
	-335, 67, 78, -325, 20, -323, 20, -323, -323, 73,
	-173, -190, -323, -272, 273, 274, -273, -279, 276, -136,
	-136, 73, 73, -137, 242, -118, 68, 134, 103, 68,
	-214, -222, -145, -144, 453, -235, 68, 68, 68, 68,
	-235, 272, -239, 221, 77, 457, 290, 291, -94, -339,
	30, 68, -334, -333, -170, -329, -190, 385, 386, 73,
	-323, 511, 134, 68, 134, -277, 277, 67, -275, 67,
	-275, 89, 293, 243, 244, 68, -347, 73, 68, -149,
	-147, -148, 64, 392, 269, 270, 68, -238, -238, -238,
	-238, 68, -182, 73, 289, -338, -337, -336, 68, 134,
	133, 73, -190, -274, 278, 78, -210, 67, -210, 67,
	-276, 275, 67, -256, -148, 64, -147, 64, 14, 13,
	-150, 78, -188, 134, 103, -333, -190, 103, -281, 67,
	20, 68, -270, 68, -270, 67, 103, -210, -146, 266,
	267, 30, 144, -146, -337, 40, -214, 133, 73, -282,
	-280, 231, -273, 68, 68, -270, 78, 68, 83, 40,
	268, -190, 511, 134, 68, 134, 70, -278, 279, 68,
	73, -280, -283, 46, 78, 103, -287, -284, 67, -151,
	233, 113, 73, -287, -151, -286, -285, 278, 234, 67,
	511, 68, 134, 70, 230, 67, -220, -285, -284, -220,
	68, 68,
}

var yyDef = [...]int{
	29, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 623,
	624, 625, 626, 0, 0, 392, 393, 0, 372, 0,
	0, 0, 0, 0, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 267, 268,
	0, 215, 211, 190, 191, 192, 151, 152, 153, 154,
	273, 0, 0, 0, 0, 0, 0, 471, -2, 627,
	628, 629, 630, -2, 405, 0, 373, 374, 375, 376,
	377, 378, 379, 380, 256, 257, 258, 253, 254, 255,
	-2, 0, 405, 204, 0, 195, 195, 0, 491, 0,
	0, 505, 527, 29, 449, 0, 454, 809, 845, 846,
	847, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 449, 216, 394, 395, 491, 491, 370,
	0, 239, 0, 1437, 243, 0, 0, 0, 367, 234,
	235, 236, 237, 238, 0, 615, 0, 231, 0, 210,
	1496, 0, 0, 0, 0, 0, 0, 95, 669, 97,
	671, 101, 108, 0, 0, 113, 114, 117, 118, 119,
	120, 121, 0, 125, 0, 127, 130, 0, 132, 133,
	0, 136, 137, 138, 0, 148, 149, 150, 672, 673,
	75, 75, 1194, 1092, 0, 1099, 1100, 1111, 1120, 916,
	917, 918, 919, 0, 0, 0, 0, 0, 926, 927,
	0, 939, 1584, 0, 933, 934, 935, 936, 38, 50,
	51, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1065, 903, 845, 0, 1592, 0, 1612, 1593, 1611,
	0, 0, 1050, 0, 1040, 0, -2, -2, 0, 0,
	1563, 0, -2, 1589, 1608, 1616, 1615, 1586, 1587, 1581,
	1582, 1583, 1585, 1594, 1596, 1607, 0, 1603, 1613, 1614,
	52, 53, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1578, 1579, 1056, -2, 1058, 1059,
	1061, 1062, 1063, 1064, -2, 1067, 1068, 1069, -2, -2,
	1072, 1073, 1074, 1075, 1076, 1077, 1080, -2, 1082, -2,
	1084, 1052, 1053, 1054, 1055, 1044, 1045, 1046, 1047, 1048,
	1049, -2, -2, -2, 0, 188, 186, 491, 563, 0,
	-2, 0, 0, 0, 510, 513, 516, 519, 633, 698,
	698, 698, 0, 698, 0, 719, 675, 676, 677, 696,
	697, 410, 406, 407, 408, 409, 479, 0, 481, 484,
	350, 311, 0, 350, 0, 0, 486, 486, 0, 359,
	350, 350, -2, 0, 321, 322, 323, 316, 0, 316,
	327, 328, 329, 339, 340, 360, 1218, 0, 0, 273,
	273, 412, 205, 206, 194, 196, 0, 200, 0, 193,
	1496, 0, 0, 162, 1563, 167, 0, 1444, 1510, 1459,
	0, 0, 1477, 0, -2, 486, 0, 492, 0, 491,
	0, 273, 273, 273, 273, 273, 273, 273, 0, 0,
	0, 528, 529, 524, 525, 526, 530, 531, 3, 0,
	0, 453, 0, 0, 486, -2, 0, 371, 240, 848,
	0, 0, 244, 245, 0, 0, 259, 0, 262, 248,
	249, 250, 0, 0, 233, 0, 0, 212, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 105, 102,
	109, 112, 122, 129, 0, 141, 143, 146, 103, 110,
	115, 116, 123, 144, 104, 106, 107, 111, 145, 147,
	124, 128, 142, 126, 131, 134, 135, 140, 0, 76,
	0, 0, 0, 0, 0, 0, 1098, 0, 0, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 1092, 0, 922, 923, 924, 925,
	928, 0, 940, 0, 0, 0, 0, 1090, 1090, 0,
	1090, 1086, 1086, 0, 0, 1090, 1028, 0, 0, 1030,
	1041, 0, 0, 1033, 1034, 1090, 0, 1090, 1038, 1039,
	1024, 1025, 0, 1086, 0, 0, 1086, 1086, 1086, 1086,
	1086, 1086, 1086, 1086, 1086, 1086, 1086, 0, 1195, 1213,
	1150, 1151, 1152, 1200, 1154, 1204, 1204, 1200, 1200, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 0, 0,
	1193, 1173, 1202, 1202, 1202, 1200, 1197, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1207, 1207, 1210, 1207, 0, 486, 0, 0, 474,
	0, 455, 0, 507, 509, 0, 511, 512, 514, 515,
	517, 518, 520, 521, 0, 698, 634, 0, 0, 0,
	0, 0, 0, 698, 412, 411, 0, 480, 0, 0,
	536, 0, 0, 316, 536, 0, 333, 334, 335, 350,
	350, 341, 487, 342, 343, 352, 0, 357, 358, 0,
	536, 536, 0, 0, 0, 698, 318, 317, 355, 356,
	325, 318, 1219, 1220, 0, 0, 0, 413, 0, 0,
	198, 0, 203, 155, 0, 0, 0, 0, 0, 0,
	184, 185, 0, 0, 0, 0, 0, 175, 178, 803,
	804, 666, 667, 179, 180, 455, 506, 508, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 391, 544, 538,
	540, 610, 38, 544, 428, 441, 423, 0, 430, 0,
	810, 414, 441, 416, 0, 430, 455, 477, 455, 0,
	241, 0, 246, 0, 0, 261, 263, 264, 265, 251,
	252, 368, 229, 230, 222, 223, 224, 225, 226, 227,
	228, 232, 48, 0, 213, 214, 0, 0, 0, 89,
	90, 91, 92, 93, 94, 96, 80, 383, 385, 658,
	670, 0, 661, 0, 99, 139, 72, 0, 72, 1093,
	1094, 1095, 1096, 1097, 1101, 0, 1103, 1105, 1107, 1109,
	0, 1125, -2, -2, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 1112, 1123, 1124, 0,
	0, 0, 0, 0, 1121, 1116, 0, 920, 0, 937,
	941, 0, 0, 0, 39, 1085, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 0, 1091, 0, 1092, 0,
	0, 0, 1087, 1088, 0, 0, 0, 990, 991, 992,
	0, 436, 0, 1051, 1029, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 1216,
	1214, 1215, 1153, 1201, 0, 1178, 0, 1179, 1180, 1181,
	0, 0, 1174, 0, 1175, 1176, 1177, 1169, 0, 1170,
	1171, 0, 1172, 187, 562, 564, 0, 445, 447, 448,
	0, 475, 488, 493, 494, 497, 0, 0, 0, 636,
	0, 271, 652, 0, 668, 690, 620, 621, 622, -2,
	0, 0, 482, 0, 0, 576, 310, 0, 351, 313,
	318, 320, 0, 536, 536, 350, 0, 352, 0, 352,
	346, 347, 0, 361, 364, 362, 0, 324, 319, 366,
	326, 0, 271, 549, 0, 550, 551, 547, 578, 585,
	605, 0, 605, 0, 0, 207, 208, 0, 0, 202,
	156, 157, 0, 159, 160, 161, 168, 163, 165, 0,
	0, 169, 181, 182, 183, 0, 0, 0, 173, 174,
	0, 473, 381, 382, 386, 0, 388, 807, 389, 390,
	616, 617, 536, 0, 545, 0, 541, 611, 0, 613,
	0, 536, 421, 0, 422, 438, 0, 442, 0, 0,
	434, 427, 431, 0, 0, 451, 415, 0, 0, 420,
	476, 478, 849, 0, 1225, -2, 1227, -2, -2, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 0, 247, 260, 0, 0, 0, 0,
	83, 655, 0, 84, 88, 78, 0, 0, 0, 660,
	0, 657, 662, 0, 98, 0, 0, 73, 74, 712,
	0, 0, 1102, 1104, 1106, 1108, 1110, 0, 1113, 1121,
	1117, 0, 1114, 0, 0, 1093, 0, 942, 0, 0,
	0, 0, 0, 0, 977, 978, 0, 0, 982, 0,
	0, 985, 0, 0, 0, 989, 0, 1027, 1043, 1031,
	0, 1035, 0, 1037, 0, 0, 960, 961, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	1196, 1149, 1217, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 565, 457, 0, 0, 0, 500, 498, 499,
	484, 0, 0, 642, 1221, 699, 275, 0, 0, 654,
	0, 0, 695, -2, 702, 0, 708, 0, 0, 0,
	399, 403, 29, 485, 0, 537, 312, 0, 350, 536,
	336, 337, 536, 353, 350, 354, 350, 352, 0, 363,
	642, 275, 0, 0, 0, 0, 0, 569, 0, 0,
	568, 0, 0, 0, 0, 0, 0, 586, 580, 606,
	0, 608, 609, 618, 619, 0, 0, 491, 549, 0,
	588, 0, 0, 209, 197, 199, 0, 0, 0, 0,
	170, 171, 172, 176, 177, 0, 0, 534, 539, 546,
	612, 614, 39, 542, 534, 0, 441, 443, 0, 0,
	441, 0, 0, 450, 0, 0, 441, 0, 0, 369,
	49, 266, 0, 0, 0, 0, 0, 384, 0, 659,
	80, 0, 0, 100, 0, 0, 0, 1089, 1115, 0,
	1122, 1118, 921, 929, 938, 0, 0, 944, 956, 956,
	0, 947, 1200, 1204, 950, 1200, 1202, 1200, 956, 956,
	0, 40, 0, 0, 983, 984, 0, 0, 0, 437,
	0, 0, 0, 959, 962, 963, 964, 965, 967, 968,
	969, 970, 971, 972, 973, 1206, 1205, 1191, 0, 1192,
	1203, 1208, 0, 1211, 0, 446, 461, 0, 489, 490,
	495, 496, 0, 0, 0, 811, 645, 643, 644, 0,
	1222, 649, 276, 277, 278, 279, 0, 0, 0, 653,
	0, 0, 691, 692, 693, 694, 703, 1221, 1221, 1221,
	811, 449, 0, -2, 0, 0, 401, 0, 0, 577,
	314, 536, 330, 344, 536, 536, 350, 365, 645, 649,
	536, 219, 0, 572, 566, 0, 555, 570, 571, 558,
	0, 560, 0, 556, 557, 536, 548, 484, 607, 581,
	582, 0, 587, 589, 590, 596, 0, 0, 0, 0,
	0, 201, 158, 0, 295, 164, 387, 808, 532, 0,
	0, 532, 0, 439, 0, 444, 441, 426, 435, 425,
	432, 433, 452, 441, 419, 418, 850, 1226, 1223, 1224,
	242, 0, 656, 80, 85, 86, 87, 81, 79, 663,
	0, 665, 0, 0, 0, 1119, 943, 930, 945, 957,
	958, 946, 931, 948, 949, 951, 952, 953, 954, 955,
	932, 979, 0, 981, 986, 987, 0, 1032, 1036, 0,
	1199, 0, 0, 463, 61, 0, 0, 501, 502, 0,
	0, 0, 812, 813, 815, 816, 0, 0, 818, 873,
	0, 827, 698, 827, 0, 0, 829, 830, 635, 0,
	0, 638, 647, 0, 0, 0, 281, 282, 0, 0,
	0, 294, 290, 291, 292, 272, 648, 0, 0, 0,
	0, 0, 605, 0, 0, 536, 400, 403, 404, 483,
	315, 348, 345, 536, 269, 270, 491, 0, 0, 552,
	573, 0, 0, 553, 0, 554, 559, 561, 218, 579,
	-2, 591, 0, 0, 593, 594, 595, 583, 584, 166,
	522, 0, 0, 543, 523, 430, 440, 424, 417, 82,
	77, 664, 63, 0, 63, 0, 988, 0, 1209, 1212,
	465, 0, 462, 0, 0, 0, 631, 484, -2, 0,
	-2, 817, 874, 839, 839, 828, 839, 839, 698, 0,
	646, 637, 0, 650, 651, 0, 283, 284, 0, 287,
	293, 0, 704, 705, 805, 806, 706, 0, 536, 536,
	-2, 397, 402, 0, 349, 486, 220, 221, 574, 0,
	567, 600, 597, 0, 0, 533, 535, 429, 31, 57,
	0, 713, 0, 30, 980, 1026, 467, 0, 464, 0,
	458, 460, 71, 0, 720, -2, 759, 1221, 1221, 0,
	1221, 1221, 1221, 1221, 0, 0, 1221, 1221, 1221, 1221,
	1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,
	0, 814, 841, -2, 853, 855, 0, 0, 858, 859,
	0, 0, 0, 0, 895, 865, 0, 0, 0, 1137,
	1138, 0, 872, 0, 831, 840, 0, 840, 0, 0,
	839, 0, 0, 0, 280, 285, 0, 288, 289, 0,
	686, 1200, 0, 710, 63, 491, 398, 217, 0, 0,
	601, 603, 598, 599, 54, 59, 64, 65, 0, 0,
	0, 0, 0, 456, 0, 466, 62, 0, 0, 709,
	0, 707, 761, 0, 0, 1221, 1221, 0, 0, 0,
	0, 1221, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 856,
	857, 860, 861, 862, 900, 901, 902, 863, 897, 898,
	899, 864, 0, 0, 0, 1135, 1136, 893, 0, 0,
	0, 0, 0, 0, 0, 825, 639, 0, 641, 286,
	679, 0, 497, 0, 711, 486, 575, 592, 0, 41,
	0, 61, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 632, 755, 760, 762, 763, 0, 0, 766, 767,
	768, 769, 0, 0, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 797, 798, 799, 800, 801, 802,
	782, 783, 784, 785, 786, 787, 794, 0, 0, 791,
	0, 0, 0, 1040, 888, 0, 0, 832, 834, 835,
	836, 837, 838, 833, 0, 0, 0, 0, 824, 826,
	869, 0, 640, 678, 687, 688, 497, 396, 602, 604,
	32, 0, 0, 58, 0, 67, 0, 69, 70, 0,
	0, 469, 459, 744, 0, 0, 750, 0, 756, 764,
	765, 770, 771, 788, 0, 0, 790, 0, 0, 896,
	0, 868, 876, 889, 0, 0, 679, 679, 679, 679,
	0, 870, 680, 1221, 0, 0, 684, 685, 689, 717,
	0, 42, 0, 44, 46, 47, 842, 55, 56, 60,
	68, 714, 0, 468, 0, 722, 0, 0, 0, 0,
	0, 753, 0, 795, 796, 789, 792, 793, 866, 875,
	877, 878, 0, 890, 891, 892, 894, 819, 820, 821,
	822, 0, 0, 682, 0, 33, 34, 0, 43, 0,
	0, 0, 470, 724, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 867, 879, 0, 880, 0, 0, 0,
	823, 681, 683, 0, 0, 45, 843, 0, 721, 0,
	755, 746, 0, 748, 0, 0, 0, 0, 881, 883,
	884, 0, 0, 882, 35, 36, 37, 0, 0, 0,
	726, 0, 742, 747, 749, 0, 754, 752, 885, 887,
	886, 844, 715, 0, 725, 0, 738, 723, 0, 751,
	0, 727, -2, 0, 743, 0, 728, -2, 0, 736,
	0, 0, 0, 729, 737, 0, 732, 0, 0, 0,
	716, 731, 0, -2, 739, 0, 0, 733, -2, 0,
	741, 740,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 508,
	104, 103, 105, 3, 509, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 510, 115, 511, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:582
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:588
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:620
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:624
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:630
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:642
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:657
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:663
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:667
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:673
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:680
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:689
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:693
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:697
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:710
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:716
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:725
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:736
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:740
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:746
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:750
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:756
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:760
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:766
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:790
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:809
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:813
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:817
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:826
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:834
		{
			yyVAL.str = ""
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:838
		{
			yyVAL.str = yyDollar[3].str
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:843
		{
			yyVAL.str = "\n"
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:847
		{
			yyVAL.str = yyDollar[3].str
		}
	case 63:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:856
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:880
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:884
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:896
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:914
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:931
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:954
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:958
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:977
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1041
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1060
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1073
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1081
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1090
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1094
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1098
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1102
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1106
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1110
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1117
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1121
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1134
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1143
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1147
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1153
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1161
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1165
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1169
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1173
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1177
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1361
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1368
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1375
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1384
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1418
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1422
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1428
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1434
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1438
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1445
		{
			yyVAL.str = yyDollar[3].str
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1451
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1455
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1461
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1478
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1494
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1517
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1554
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1585
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1589
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1599
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1603
		{
			yyVAL.str = yyDollar[1].str
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1610
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1616
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1620
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1631
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1637
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1642
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1646
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1650
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1654
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1658
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1662
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1666
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1680
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1684
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1692
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1697
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1702
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1715
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1721
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1728
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1735
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1745
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1752
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1763
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1774
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1778
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1784
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1796
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1838
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1842
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1858
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1926
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1932
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1938
		{
			yyVAL.str = yyDollar[1].str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1943
		{
			yyVAL.str = "true"
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1944
		{
			yyVAL.str = "false"
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1945
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1961
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1993
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1997
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2006
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2042
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2088
		{
			yyVAL.item = nil
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2093
		{
			yyVAL.item = nil
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2123
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2136
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2142
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2147
		{
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2151
		{
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2169
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2177
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2181
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2189
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2211
		{
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2213
		{
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2222
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2255
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2267
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2273
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2334
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2339
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2343
		{
			yyVAL.str = yyDollar[2].str
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2349
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2366
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2381
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2391
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2455
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2459
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2499
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2519
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2547
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2560
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2571
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2575
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2581
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2586
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2593
		{
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2595
		{
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2598
		{
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2607
		{
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2611
		{
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2616
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2625
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2632
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2638
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2646
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2653
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2660
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2680
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2690
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2697
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2703
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2711
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2725
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2748
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2771
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2775
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2781
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2790
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2794
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2800
		{
			yyVAL.str = yyDollar[1].str
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.str = yyDollar[3].str
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2810
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2814
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2820
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2825
		{
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2840
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2856
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2862
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2866
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2872
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2876
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2912
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2930
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2949
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2966
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2979
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:2983
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2988
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2992
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2999
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3004
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3025
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3033
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3037
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3050
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3059
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3063
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3069
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3081
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3090
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3113
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3119
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3125
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3129
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3140
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3144
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3148
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3153
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3157
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3161
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3171
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3177
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3191
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3223
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3231
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3248
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3296
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3333
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3351
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3372
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3381
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3396
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3400
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3406
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3410
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3414
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3418
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3423
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3431
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3445
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3463
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3478
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3506
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3510
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3520
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3524
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3528
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3532
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3538
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3548
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3552
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3558
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3574
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3580
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3584
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3588
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3598
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3618
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3624
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3638
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3651
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3657
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3663
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3674
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3686
		{
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3687
		{
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3709
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3713
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3729
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3733
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3737
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3742
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3746
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3750
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3754
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3763
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3767
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3771
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3775
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3780
		{
			yyVAL.str = ""
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3788
		{
			yyVAL.str = yyDollar[2].str
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3797
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3801
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3805
		{
			yyVAL.str = yyDollar[2].str
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3809
		{
			yyVAL.str = yyDollar[1].str
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3813
		{
			yyVAL.str = yyDollar[2].str
		}
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3847
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3857
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3868
		{
		}
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3873
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = yyDollar[1].str
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3891
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3901
		{
			yyVAL.str = yyDollar[1].str
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3907
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3914
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3920
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3928
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3934
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3941
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3949
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3955
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3964
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3981
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3987
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:3995
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4101
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4105
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4111
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4121
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4125
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4149
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4158
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4164
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4190
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4199
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4203
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4209
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4226
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4244
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4267
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4293
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4297
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4301
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4311
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4315
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4321
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4326
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4331
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4335
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4339
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4343
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4380
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4386
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4390
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4400
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4404
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4413
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4430
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4441
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4448
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4456
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4468
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4480
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4493
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4519
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4523
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4532
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4559
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4565
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4569
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4584
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4598
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4604
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4608
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4614
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4630
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4634
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4643
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4652
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4657
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4661
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4671
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4675
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4686
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4702
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4721
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4741
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4745
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4750
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4763
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4769
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4773
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4777
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4783
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4787
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4791
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4795
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4799
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4803
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4831
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4835
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4839
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4843
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4847
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4851
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4855
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4859
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4863
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4867
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4871
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4875
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4879
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4883
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4887
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4891
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4902
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4906
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4912
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4917
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4921
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4925
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4931
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4935
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4939
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4943
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4947
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4951
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4965
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:4969
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4978
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:4983
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4989
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5000
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5010
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5016
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5026
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5041
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5050
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5073
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5082
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5106
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5110
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5120
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5126
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5132
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5146
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5153
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5159
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5163
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5182
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5195
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5201
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5205
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5227
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5231
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5235
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5251
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5255
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5282
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5287
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5297
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5301
		{
			yyVAL.str = yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5319
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5326
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5333
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5340
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5356
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5362
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5368
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5372
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5376
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5380
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5389
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5404
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5413
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5418
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5422
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5438
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5448
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5452
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5476
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5492
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5498
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5502
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5506
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5510
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5514
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5518
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5522
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5530
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5534
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5538
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5542
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5547
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5563
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5572
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5576
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5580
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5584
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5597
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5612
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5616
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5632
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5692
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5704
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5718
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5748
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5765
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5780
		{
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5795
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5811
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5829
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5847
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5856
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5874
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5892
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5901
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5910
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5926
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5934
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5942
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5950
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5958
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5967
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5975
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5984
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5993
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6001
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6009
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6027
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6048
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6096
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6118
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6126
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6133
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6140
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6152
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6160
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6171
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6180
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6189
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6197
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6207
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6215
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6223
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6237
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6247
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6266
		{
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6268
		{
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6309
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6319
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6323
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6327
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6333
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6342
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6348
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6352
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6359
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6363
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6367
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6375
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6379
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6383
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6393
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6397
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6401
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6405
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6409
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6413
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6417
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6421
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6425
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6429
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6437
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6445
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6449
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6453
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6457
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6461
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6465
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6475
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6481
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6485
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6492
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6496
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6500
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6506
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6510
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6514
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6518
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6522
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6526
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6530
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6536
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6540
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6544
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6548
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6554
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6558
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6571
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6576
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6580
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6584
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6588
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6592
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6596
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6610
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6616
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6627
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6632
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6638
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6650
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6687
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6700
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6726
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6752
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6765
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6778
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6791
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6804
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6819
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6842
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6876
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6941
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6953
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6973
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6993
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7013
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7042
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7055
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7068
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7093
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7105
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7117
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7129
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7141
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7153
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7177
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7189
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7215
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7230
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7238
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7247
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7257
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7280
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7285
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7291
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7298
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7302
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7307
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7311
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7317
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7323
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7346
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7360
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7369
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7383
		{
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7395
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

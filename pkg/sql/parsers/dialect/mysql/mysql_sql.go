// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const ILIKE = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_BINARY = 57459
const INTERVAL = 57460
const BEGIN = 57461
const START = 57462
const TRANSACTION = 57463
const COMMIT = 57464
const ROLLBACK = 57465
const WORK = 57466
const CONSISTENT = 57467
const SNAPSHOT = 57468
const CHAIN = 57469
const NO = 57470
const RELEASE = 57471
const PRIORITY = 57472
const QUICK = 57473
const BIT = 57474
const TINYINT = 57475
const SMALLINT = 57476
const MEDIUMINT = 57477
const INT = 57478
const INTEGER = 57479
const BIGINT = 57480
const INTNUM = 57481
const REAL = 57482
const DOUBLE = 57483
const FLOAT_TYPE = 57484
const DECIMAL = 57485
const NUMERIC = 57486
const DECIMAL_VALUE = 57487
const TIME = 57488
const TIMESTAMP = 57489
const DATETIME = 57490
const YEAR = 57491
const CHAR = 57492
const VARCHAR = 57493
const BOOL = 57494
const CHARACTER = 57495
const VARBINARY = 57496
const NCHAR = 57497
const TEXT = 57498
const TINYTEXT = 57499
const MEDIUMTEXT = 57500
const LONGTEXT = 57501
const BLOB = 57502
const TINYBLOB = 57503
const MEDIUMBLOB = 57504
const LONGBLOB = 57505
const JSON = 57506
const ENUM = 57507
const UUID = 57508
const GEOMETRY = 57509
const POINT = 57510
const LINESTRING = 57511
const POLYGON = 57512
const GEOMETRYCOLLECTION = 57513
const MULTIPOINT = 57514
const MULTILINESTRING = 57515
const MULTIPOLYGON = 57516
const INT1 = 57517
const INT2 = 57518
const INT3 = 57519
const INT4 = 57520
const INT8 = 57521
const S3OPTION = 57522
const SQL_SMALL_RESULT = 57523
const SQL_BIG_RESULT = 57524
const SQL_BUFFER_RESULT = 57525
const LOW_PRIORITY = 57526
const HIGH_PRIORITY = 57527
const DELAYED = 57528
const CREATE = 57529
const ALTER = 57530
const DROP = 57531
const RENAME = 57532
const ANALYZE = 57533
const ADD = 57534
const RETURNS = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const CONSTRAINT = 57545
const SPATIAL = 57546
const FULLTEXT = 57547
const FOREIGN = 57548
const KEY_BLOCK_SIZE = 57549
const SHOW = 57550
const DESCRIBE = 57551
const EXPLAIN = 57552
const DATE = 57553
const ESCAPE = 57554
const REPAIR = 57555
const OPTIMIZE = 57556
const TRUNCATE = 57557
const MAXVALUE = 57558
const PARTITION = 57559
const REORGANIZE = 57560
const LESS = 57561
const THAN = 57562
const PROCEDURE = 57563
const TRIGGER = 57564
const STATUS = 57565
const VARIABLES = 57566
const ROLE = 57567
const PROXY = 57568
const AVG_ROW_LENGTH = 57569
const STORAGE = 57570
const DISK = 57571
const MEMORY = 57572
const CHECKSUM = 57573
const COMPRESSION = 57574
const DATA = 57575
const DIRECTORY = 57576
const DELAY_KEY_WRITE = 57577
const ENCRYPTION = 57578
const ENGINE = 57579
const MAX_ROWS = 57580
const MIN_ROWS = 57581
const PACK_KEYS = 57582
const ROW_FORMAT = 57583
const STATS_AUTO_RECALC = 57584
const STATS_PERSISTENT = 57585
const STATS_SAMPLE_PAGES = 57586
const DYNAMIC = 57587
const COMPRESSED = 57588
const REDUNDANT = 57589
const COMPACT = 57590
const FIXED = 57591
const COLUMN_FORMAT = 57592
const AUTO_RANDOM = 57593
const RESTRICT = 57594
const CASCADE = 57595
const ACTION = 57596
const PARTIAL = 57597
const SIMPLE = 57598
const CHECK = 57599
const ENFORCED = 57600
const RANGE = 57601
const LIST = 57602
const ALGORITHM = 57603
const LINEAR = 57604
const PARTITIONS = 57605
const SUBPARTITION = 57606
const SUBPARTITIONS = 57607
const CLUSTER = 57608
const TYPE = 57609
const ANY = 57610
const SOME = 57611
const EXTERNAL = 57612
const LOCALFILE = 57613
const URL = 57614
const PREPARE = 57615
const DEALLOCATE = 57616
const RESET = 57617
const EXTENSION = 57618
const PROPERTIES = 57619
const PARSER = 57620
const VISIBLE = 57621
const INVISIBLE = 57622
const BTREE = 57623
const HASH = 57624
const RTREE = 57625
const BSI = 57626
const ZONEMAP = 57627
const LEADING = 57628
const BOTH = 57629
const TRAILING = 57630
const UNKNOWN = 57631
const EXPIRE = 57632
const ACCOUNT = 57633
const ACCOUNTS = 57634
const UNLOCK = 57635
const DAY = 57636
const NEVER = 57637
const PUMP = 57638
const MYSQL_COMPATBILITY_MODE = 57639
const SECOND = 57640
const ASCII = 57641
const COALESCE = 57642
const COLLATION = 57643
const HOUR = 57644
const MICROSECOND = 57645
const MINUTE = 57646
const MONTH = 57647
const QUARTER = 57648
const REPEAT = 57649
const REVERSE = 57650
const ROW_COUNT = 57651
const WEEK = 57652
const REVOKE = 57653
const FUNCTION = 57654
const PRIVILEGES = 57655
const TABLESPACE = 57656
const EXECUTE = 57657
const SUPER = 57658
const GRANT = 57659
const OPTION = 57660
const REFERENCES = 57661
const REPLICATION = 57662
const SLAVE = 57663
const CLIENT = 57664
const USAGE = 57665
const RELOAD = 57666
const FILE = 57667
const TEMPORARY = 57668
const ROUTINE = 57669
const EVENT = 57670
const SHUTDOWN = 57671
const NULLX = 57672
const AUTO_INCREMENT = 57673
const APPROXNUM = 57674
const SIGNED = 57675
const UNSIGNED = 57676
const ZEROFILL = 57677
const ENGINES = 57678
const LOW_CARDINALITY = 57679
const ADMIN_NAME = 57680
const RANDOM = 57681
const SUSPEND = 57682
const ATTRIBUTE = 57683
const HISTORY = 57684
const REUSE = 57685
const CURRENT = 57686
const OPTIONAL = 57687
const FAILED_LOGIN_ATTEMPTS = 57688
const PASSWORD_LOCK_TIME = 57689
const UNBOUNDED = 57690
const SECONDARY = 57691
const USER = 57692
const IDENTIFIED = 57693
const CIPHER = 57694
const ISSUER = 57695
const X509 = 57696
const SUBJECT = 57697
const SAN = 57698
const REQUIRE = 57699
const SSL = 57700
const NONE = 57701
const PASSWORD = 57702
const MAX_QUERIES_PER_HOUR = 57703
const MAX_UPDATES_PER_HOUR = 57704
const MAX_CONNECTIONS_PER_HOUR = 57705
const MAX_USER_CONNECTIONS = 57706
const FORMAT = 57707
const VERBOSE = 57708
const CONNECTION = 57709
const TRIGGERS = 57710
const PROFILES = 57711
const LOAD = 57712
const INFILE = 57713
const TERMINATED = 57714
const OPTIONALLY = 57715
const ENCLOSED = 57716
const ESCAPED = 57717
const STARTING = 57718
const LINES = 57719
const ROWS = 57720
const IMPORT = 57721
const MODUMP = 57722
const OVER = 57723
const PRECEDING = 57724
const FOLLOWING = 57725
const GROUPS = 57726
const DATABASES = 57727
const TABLES = 57728
const EXTENDED = 57729
const FULL = 57730
const PROCESSLIST = 57731
const FIELDS = 57732
const COLUMNS = 57733
const OPEN = 57734
const ERRORS = 57735
const WARNINGS = 57736
const INDEXES = 57737
const SCHEMAS = 57738
const NODE = 57739
const LOCKS = 57740
const TABLE_NUMBER = 57741
const COLUMN_NUMBER = 57742
const TABLE_VALUES = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const LOCAL = 57756
const EVENTS = 57757
const PLUGINS = 57758
const CURRENT_TIMESTAMP = 57759
const DATABASE = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const SEPARATOR = 57769
const TIMESTAMPDIFF = 57770
const CURRENT_DATE = 57771
const CURRENT_USER = 57772
const CURRENT_ROLE = 57773
const SECOND_MICROSECOND = 57774
const MINUTE_MICROSECOND = 57775
const MINUTE_SECOND = 57776
const HOUR_MICROSECOND = 57777
const HOUR_SECOND = 57778
const HOUR_MINUTE = 57779
const DAY_MICROSECOND = 57780
const DAY_SECOND = 57781
const DAY_MINUTE = 57782
const DAY_HOUR = 57783
const YEAR_MONTH = 57784
const SQL_TSI_HOUR = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_MONTH = 57788
const SQL_TSI_QUARTER = 57789
const SQL_TSI_YEAR = 57790
const SQL_TSI_SECOND = 57791
const SQL_TSI_MINUTE = 57792
const RECURSIVE = 57793
const CONFIG = 57794
const DRAINER = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const ADDDATE = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const CAST = 57807
const COUNT = 57808
const APPROX_COUNT_DISTINCT = 57809
const APPROX_PERCENTILE = 57810
const CURDATE = 57811
const CURTIME = 57812
const DATE_ADD = 57813
const DATE_SUB = 57814
const EXTRACT = 57815
const GROUP_CONCAT = 57816
const MAX = 57817
const MID = 57818
const MIN = 57819
const NOW = 57820
const POSITION = 57821
const SESSION_USER = 57822
const STD = 57823
const STDDEV = 57824
const MEDIAN = 57825
const STDDEV_POP = 57826
const STDDEV_SAMP = 57827
const SUBDATE = 57828
const SUBSTR = 57829
const SUBSTRING = 57830
const SUM = 57831
const SYSDATE = 57832
const SYSTEM_USER = 57833
const TRANSLATE = 57834
const TRIM = 57835
const VARIANCE = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const AVG = 57839
const ARROW = 57840
const ROW = 57841
const OUTFILE = 57842
const HEADER = 57843
const MAX_FILE_SIZE = 57844
const FORCE_QUOTE = 57845
const PARALLEL = 57846
const UNUSED = 57847
const BINDINGS = 57848
const DO = 57849
const DECLARE = 57850
const KILL = 57851
const QUERY_RESULT = 57852

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8499

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 96,
	21, 555,
	-2, 536,
	-1, 104,
	213, 752,
	-2, 799,
	-1, 123,
	42, 386,
	213, 386,
	240, 393,
	241, 393,
	412, 386,
	-2, 416,
	-1, 436,
	289, 95,
	388, 95,
	-2, 1543,
	-1, 495,
	67, 1167,
	-2, 1683,
	-1, 496,
	67, 1185,
	-2, 1654,
	-1, 500,
	67, 1186,
	-2, 1682,
	-1, 522,
	67, 1100,
	-2, 1734,
	-1, 523,
	67, 1101,
	-2, 1733,
	-1, 524,
	67, 1102,
	-2, 1723,
	-1, 525,
	67, 1698,
	-2, 1718,
	-1, 526,
	67, 1699,
	-2, 1719,
	-1, 527,
	67, 1700,
	-2, 1725,
	-1, 528,
	67, 1701,
	-2, 1708,
	-1, 529,
	67, 1702,
	-2, 1716,
	-1, 530,
	67, 1703,
	-2, 1726,
	-1, 531,
	67, 1704,
	-2, 1727,
	-1, 532,
	67, 1705,
	-2, 1732,
	-1, 533,
	67, 1706,
	-2, 1737,
	-1, 534,
	67, 1707,
	-2, 1738,
	-1, 536,
	67, 1164,
	-2, 1535,
	-1, 543,
	67, 1173,
	-2, 1561,
	-1, 547,
	67, 1177,
	-2, 1600,
	-1, 548,
	67, 1178,
	-2, 1678,
	-1, 556,
	67, 1188,
	-2, 1663,
	-1, 558,
	67, 1190,
	-2, 1673,
	-1, 559,
	67, 1191,
	-2, 1696,
	-1, 570,
	67, 1082,
	-2, 1728,
	-1, 571,
	67, 1083,
	-2, 1729,
	-1, 572,
	67, 1084,
	-2, 1730,
	-1, 579,
	21, 556,
	-2, 519,
	-1, 634,
	407, 416,
	408, 416,
	-2, 387,
	-1, 679,
	103, 1535,
	114, 1535,
	134, 1535,
	-2, 1328,
	-1, 721,
	21, 556,
	-2, 519,
	-1, 821,
	21, 555,
	-2, 989,
	-1, 1149,
	67, 1235,
	-2, 1680,
	-1, 1150,
	67, 1236,
	-2, 1681,
	-1, 1311,
	1, 778,
	68, 778,
	528, 778,
	-2, 785,
	-1, 1445,
	134, 1338,
	-2, 1336,
	-1, 1447,
	134, 680,
	-2, 1333,
	-1, 1448,
	134, 681,
	-2, 1334,
	-1, 1744,
	68, 1314,
	135, 1314,
	-2, 1665,
	-1, 1745,
	68, 1310,
	135, 1310,
	-2, 1664,
	-1, 1746,
	68, 1292,
	135, 1292,
	-2, 1651,
	-1, 1747,
	68, 1293,
	135, 1293,
	-2, 1656,
	-1, 1748,
	68, 1294,
	135, 1294,
	-2, 1588,
	-1, 1749,
	68, 1295,
	135, 1295,
	-2, 1582,
	-1, 1750,
	68, 1296,
	135, 1296,
	-2, 1526,
	-1, 1751,
	68, 1297,
	135, 1297,
	-2, 1653,
	-1, 1752,
	68, 1298,
	135, 1298,
	-2, 1586,
	-1, 1753,
	68, 1299,
	135, 1299,
	-2, 1581,
	-1, 1754,
	68, 1300,
	135, 1300,
	-2, 1574,
	-1, 1756,
	68, 1303,
	135, 1303,
	-2, 1696,
	-1, 1757,
	68, 1283,
	135, 1283,
	-2, 1683,
	-1, 1758,
	68, 1312,
	135, 1312,
	-2, 1654,
	-1, 1759,
	68, 1312,
	135, 1312,
	-2, 1682,
	-1, 1760,
	68, 1312,
	135, 1312,
	-2, 1544,
	-1, 1761,
	68, 1310,
	135, 1310,
	-2, 1673,
	-1, 1762,
	68, 1307,
	135, 1307,
	-2, 1566,
	-1, 1763,
	67, 1265,
	68, 1265,
	135, 1265,
	350, 1265,
	351, 1265,
	352, 1265,
	-2, 1525,
	-1, 1764,
	67, 1266,
	68, 1266,
	135, 1266,
	350, 1266,
	351, 1266,
	352, 1266,
	-2, 1527,
	-1, 1765,
	67, 1269,
	68, 1269,
	135, 1269,
	350, 1269,
	351, 1269,
	352, 1269,
	-2, 1655,
	-1, 1766,
	67, 1271,
	68, 1271,
	135, 1271,
	350, 1271,
	351, 1271,
	352, 1271,
	-2, 1638,
	-1, 1767,
	67, 1273,
	68, 1273,
	135, 1273,
	350, 1273,
	351, 1273,
	352, 1273,
	-2, 1587,
	-1, 1768,
	67, 1275,
	68, 1275,
	135, 1275,
	350, 1275,
	351, 1275,
	352, 1275,
	-2, 1570,
	-1, 1769,
	67, 1276,
	68, 1276,
	135, 1276,
	350, 1276,
	351, 1276,
	352, 1276,
	-2, 1571,
	-1, 1770,
	67, 1278,
	68, 1278,
	135, 1278,
	350, 1278,
	351, 1278,
	352, 1278,
	-2, 1524,
	-1, 1771,
	68, 1317,
	135, 1317,
	350, 1317,
	351, 1317,
	352, 1317,
	-2, 1549,
	-1, 1772,
	68, 1317,
	135, 1317,
	350, 1317,
	351, 1317,
	352, 1317,
	-2, 1562,
	-1, 1773,
	68, 1320,
	135, 1320,
	350, 1320,
	351, 1320,
	352, 1320,
	-2, 1545,
	-1, 1774,
	68, 1317,
	135, 1317,
	350, 1317,
	351, 1317,
	352, 1317,
	-2, 1623,
	-1, 1787,
	1, 779,
	68, 779,
	528, 779,
	-2, 785,
	-1, 1846,
	21, 555,
	-2, 647,
	-1, 2027,
	65, 462,
	135, 462,
	-2, 894,
	-1, 2329,
	87, 785,
	130, 785,
	167, 785,
	170, 785,
	-2, 842,
	-1, 2331,
	274, 957,
	-2, 936,
	-1, 2342,
	87, 785,
	130, 785,
	167, 785,
	170, 785,
	-2, 842,
	-1, 2345,
	65, 462,
	135, 462,
	-2, 895,
	-1, 2397,
	87, 785,
	130, 785,
	167, 785,
	170, 785,
	-2, 843,
	-1, 2425,
	274, 957,
	-2, 937,
	-1, 2834,
	68, 814,
	135, 814,
	-2, 785,
	-1, 2838,
	68, 814,
	135, 814,
	-2, 785,
	-1, 2852,
	68, 818,
	135, 818,
	-2, 785,
	-1, 2857,
	68, 819,
	135, 819,
	-2, 785,
}

const yyPrivate = 57344

const yyLast = 30528

var yyAct = [...]int{
	467, 2398, 2838, 1216, 2846, 2837, 2814, 1129, 2686, 448,
	2761, 469, 2437, 2803, 2718, 2747, 2646, 446, 2626, 2748,
	1843, 2576, 2377, 849, 1734, 1403, 2583, 2392, 1125, 2567,
	2369, 2587, 1035, 2276, 2634, 1839, 2393, 493, 2475, 2498,
	144, 144, 147, 2277, 580, 2447, 144, 383, 390, 2375,
	987, 390, 2325, 678, 2467, 1318, 2030, 2215, 2396, 2426,
	2001, 1270, 2394, 1132, 2211, 1877, 1431, 1071, 2446, 1386,
	2313, 2049, 2050, 2220, 1356, 2335, 1838, 1364, 2216, 395,
	450, 2274, 1918, 2268, 401, 1637, 1742, 2071, 950, 1886,
	2187, 438, 1885, 2190, 575, 1796, 440, 2251, 966, 2185,
	715, 1740, 2091, 2136, 1268, 2209, 1917, 615, 445, 1633,
	1442, 1445, 1432, 1273, 1320, 1438, 2085, 143, 143, 1439,
	1379, 1632, 684, 374, 1287, 1215, 964, 2003, 1359, 1998,
	1357, 575, 387, 19, 1827, 3, 688, 43, 1330, 1307,
	1960, 388, 32, 144, 384, 8, 1795, 385, 6, 687,
	31, 386, 7, 1880, 885, 1123, 1295, 1666, 1634, 1788,
	709, 1062, 449, 1278, 2401, 1738, 1044, 1437, 1383, 1780,
	708, 977, 95, 406, 1328, 1644, 1722, 638, 682, 1128,
	1329, 437, 710, 43, 1648, 1163, 1179, 457, 379, 447,
	1114, 732, 1426, 1408, 930, 1841, 1122, 670, 1848, 614,
	1306, 973, 1344, 376, 1186, 403, 1027, 16, 1014, 577,
	1185, 988, 9, 389, 1061, 4, 136, 671, 133, 579,
	717, 2129, 404, 948, 2129, 612, 1920, 630, 1651, 1641,
	1331, 139, 138, 2564, 2468, 1878, 2275, 1291, 2669, 844,
	1434, 578, 850, 137, 137, 398, 39, 125, 105, 137,
	588, 2677, 137, 137, 752, 137, 1905, 137, 137, 39,
	125, 105, 372, 1081, 393, 1016, 2385, 1638, 2384, 2704,
	1913, 19, 2159, 1649, 707, 43, 785, 652, 1864, 1078,
	32, 786, 1865, 8, 137, 2284, 6, 2736, 31, 2106,
	7, 94, 137, 2000, 39, 125, 105, 1367, 1368, 2734,
	1080, 134, 984, 1000, 399, 1001, 134, 685, 1397, 134,
	134, 574, 134, 900, 134, 1074, 1017, 993, 994, 1881,
	94, 648, 565, 140, 564, 566, 567, 991, 568, 569,
	990, 993, 994, 441, 1340, 767, 1067, 768, 1131, 400,
	784, 134, 589, 681, 680, 1999, 1961, 2751, 2752, 134,
	2670, 2671, 2722, 2723, 2473, 1099, 790, 791, 792, 789,
	2476, 2477, 2478, 2479, 2278, 770, 2484, 2092, 2569, 2569,
	2093, 653, 2094, 2572, 2470, 2278, 144, 725, 1900, 779,
	726, 2582, 2292, 1376, 2314, 1115, 735, 1119, 1134, 1645,
	1380, 1372, 390, 390, 2321, 144, 1110, 1820, 2676, 1779,
	900, 1719, 1262, 1261, 1993, 2201, 581, 2122, 2390, 782,
	783, 1118, 2490, 2444, 888, 2191, 781, 720, 722, 1910,
	1221, 2124, 434, 755, 2006, 435, 2046, 1822, 2493, 2387,
	655, 765, 908, 912, 914, 916, 918, 919, 921, 724,
	925, 922, 923, 924, 1890, 2729, 903, 904, 905, 906,
	886, 887, 909, 723, 889, 823, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 901, 907, 2588, 719,
	2679, 2680, 743, 982, 392, 911, 913, 915, 917, 920,
	2750, 1120, 735, 747, 391, 2483, 104, 1133, 135, 2195,
	766, 2485, 1141, 1144, 1145, 2738, 721, 2549, 654, 1650,
	2831, 888, 1117, 1142, 2847, 878, 2771, 123, 2733, 2688,
	2711, 902, 1655, 1657, 1658, 2778, 2694, 43, 43, 908,
	912, 914, 916, 918, 919, 921, 1002, 925, 922, 923,
	924, 1395, 1396, 903, 904, 905, 906, 886, 887, 909,
	683, 889, 972, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 901, 907, 685, 1010, 1073, 769, 2199,
	737, 736, 911, 913, 915, 917, 920, 777, 778, 728,
	729, 760, 2648, 762, 693, 692, 694, 2635, 2636, 2637,
	2639, 2638, 2193, 2014, 2015, 2016, 2017, 2684, 2685, 2542,
	2688, 947, 949, 2825, 1639, 2511, 1639, 2510, 902, 439,
	2012, 763, 2740, 2741, 691, 740, 741, 1639, 1116, 1023,
	2815, 2196, 2197, 2537, 615, 1022, 745, 2296, 1004, 744,
	2128, 927, 986, 985, 685, 2806, 2198, 993, 994, 971,
	730, 970, 2848, 1934, 1935, 2854, 2842, 2499, 2305, 993,
	994, 716, 825, 826, 827, 828, 829, 1667, 951, 2678,
	399, 2566, 696, 992, 1015, 1012, 737, 736, 1906, 1855,
	879, 2073, 2075, 2533, 2224, 2672, 2673, 756, 752, 1642,
	689, 2611, 983, 575, 575, 575, 40, 955, 1039, 1039,
	989, 144, 952, 953, 954, 1652, 956, 1640, 578, 40,
	758, 697, 2202, 2005, 1381, 2491, 2192, 390, 949, 1065,
	1065, 1068, 761, 764, 2125, 2739, 1037, 1037, 106, 106,
	2132, 1041, 2127, 959, 106, 1143, 787, 106, 106, 1076,
	106, 2386, 106, 106, 980, 1914, 757, 958, 1375, 690,
	2391, 996, 997, 1046, 999, 1656, 1373, 957, 746, 1097,
	2807, 1111, 394, 1653, 859, 860, 2009, 2010, 751, 106,
	2181, 961, 1039, 2647, 1039, 725, 910, 106, 1045, 2841,
	2008, 2194, 609, 610, 611, 2138, 2137, 1854, 1853, 1370,
	772, 1082, 773, 2077, 1852, 1020, 793, 1371, 1938, 683,
	1851, 1092, 1093, 2221, 2224, 822, 1018, 1019, 2225, 658,
	1369, 657, 932, 831, 759, 582, 979, 695, 934, 2788,
	775, 2853, 788, 1893, 925, 922, 923, 924, 582, 579,
	1943, 1321, 1942, 1941, 1939, 837, 2074, 1130, 2248, 2538,
	2539, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 2229, 752, 1011, 1184, 1174, 1175, 963,
	2330, 1321, 1003, 910, 1005, 1230, 1879, 1782, 1728, 1905,
	1897, 1135, 2028, 974, 978, 978, 1236, 1072, 1837, 995,
	1995, 1079, 998, 1127, 2804, 2805, 771, 43, 1243, 1244,
	1096, 974, 1105, 974, 1238, 1940, 43, 1867, 1095, 575,
	661, 1106, 1033, 1034, 1102, 2535, 975, 1101, 1021, 2534,
	1030, 1031, 1032, 2612, 2614, 2615, 2616, 2613, 1008, 1009,
	1047, 1013, 776, 2029, 1146, 1108, 649, 372, 2225, 1638,
	1059, 788, 1695, 2218, 1066, 1694, 1083, 2219, 2222, 1088,
	2860, 1060, 2812, 2859, 928, 774, 1733, 1284, 660, 2850,
	1837, 1124, 663, 662, 1084, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1781, 1867, 579, 2832, 1263, 1104, 1411, 2020,
	1269, 144, 1103, 1305, 1039, 1100, 1121, 1311, 1699, 2827,
	2248, 1629, 2818, 615, 1229, 1217, 1319, 1220, 1277, 2223,
	1039, 1231, 2029, 2817, 1012, 1126, 1310, 2792, 1285, 383,
	649, 1237, 788, 1239, 976, 2763, 651, 788, 2758, 650,
	788, 1266, 700, 705, 706, 2753, 2851, 1944, 1945, 1288,
	2742, 1345, 1345, 1165, 1012, 718, 1012, 1172, 1173, 144,
	1305, 1305, 1647, 1393, 1039, 1366, 1836, 1113, 1275, 1276,
	962, 1343, 1112, 2505, 1177, 575, 2828, 1039, 1302, 1647,
	2712, 2709, 1064, 1064, 1732, 790, 791, 792, 789, 1309,
	1647, 1024, 1304, 2320, 1647, 2765, 1312, 1313, 1314, 2708,
	2707, 1219, 2764, 1305, 1039, 2495, 1402, 144, 144, 2348,
	651, 1392, 2495, 650, 2706, 1413, 1240, 1867, 1409, 144,
	1327, 2230, 2021, 2696, 2559, 1230, 1430, 2558, 2494, 709,
	2157, 1230, 1230, 1405, 1336, 1337, 1350, 1280, 2373, 1283,
	2087, 1347, 805, 750, 1419, 1334, 1258, 2713, 2495, 1351,
	1352, 710, 790, 791, 792, 789, 1447, 2096, 1377, 2068,
	1319, 1341, 1342, 749, 1039, 2234, 2495, 2495, 1333, 1984,
	1982, 1837, 1136, 1137, 1138, 1139, 1140, 1292, 1448, 1980,
	1338, 2495, 1978, 1308, 1404, 1404, 1382, 752, 1286, 1401,
	2697, 2560, 1399, 1966, 1800, 2495, 1404, 1731, 1922, 1324,
	1903, 1895, 1891, 1887, 1799, 2097, 2031, 1322, 1323, 702,
	703, 704, 1316, 1729, 1339, 1630, 1181, 1182, 1183, 1315,
	1660, 1908, 1326, 1218, 2097, 1703, 1837, 1224, 1348, 1702,
	1349, 1678, 1332, 1303, 750, 1180, 1985, 1983, 1664, 1665,
	1646, 1089, 1850, 1308, 1428, 659, 1979, 1907, 607, 1979,
	1428, 974, 1390, 1391, 1346, 1899, 790, 791, 792, 789,
	788, 1816, 1335, 1355, 1354, 788, 2121, 1800, 1888, 1892,
	1888, 1800, 1378, 978, 1691, 1679, 43, 1628, 1416, 1406,
	1728, 1301, 1085, 1124, 926, 835, 738, 1387, 1388, 1389,
	718, 1398, 788, 1223, 1222, 1700, 788, 685, 2119, 1026,
	1400, 1677, 1707, 685, 1929, 2801, 975, 1647, 1090, 718,
	1417, 1028, 967, 1289, 2789, 1636, 968, 1293, 2120, 2002,
	1296, 2698, 1029, 1435, 2249, 2244, 2130, 1440, 1626, 1441,
	2047, 1446, 1627, 1241, 1242, 2726, 1898, 1245, 1246, 1247,
	1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1857,
	438, 725, 1775, 1631, 808, 809, 810, 811, 812, 805,
	727, 1206, 789, 144, 144, 144, 1797, 1635, 2545, 1180,
	1654, 1673, 792, 789, 656, 664, 2544, 1012, 2339, 1025,
	2528, 1668, 2334, 2095, 1249, 1659, 1809, 2622, 2620, 685,
	806, 807, 808, 809, 810, 811, 812, 805, 1012, 2836,
	2821, 2772, 709, 1661, 976, 1165, 2767, 2659, 1662, 1663,
	2824, 1289, 2628, 1743, 1366, 1672, 2150, 1289, 1289, 2606,
	1171, 2618, 470, 479, 710, 2621, 2619, 471, 2605, 478,
	472, 476, 475, 473, 474, 1168, 1170, 1167, 1206, 1169,
	1791, 1792, 1793, 1039, 144, 796, 797, 798, 799, 800,
	801, 802, 794, 2823, 1844, 1844, 2604, 1844, 725, 2617,
	1065, 2149, 1366, 1808, 2601, 1872, 1687, 1874, 1234, 2608,
	2388, 1862, 2595, 2592, 2318, 1230, 1305, 2591, 1235, 1776,
	2317, 480, 2186, 790, 791, 792, 789, 1812, 1847, 1845,
	2200, 1849, 1806, 2176, 790, 791, 792, 789, 2175, 1724,
	2115, 1810, 1811, 1931, 2089, 1727, 1202, 2607, 2389, 1726,
	1199, 477, 2319, 1725, 1201, 1198, 1200, 1204, 1205, 1686,
	1743, 1045, 1203, 2429, 1721, 1720, 1789, 1818, 1813, 1814,
	1086, 1737, 2745, 945, 1783, 2744, 1871, 711, 712, 713,
	1883, 790, 791, 792, 789, 1889, 2627, 2439, 603, 1804,
	434, 1805, 1807, 435, 790, 791, 792, 789, 2728, 2370,
	2432, 1670, 1735, 1736, 1674, 1815, 2427, 790, 791, 792,
	789, 2442, 2443, 1869, 1823, 2724, 2692, 2428, 1817, 2586,
	2691, 2674, 1876, 1202, 2852, 2656, 685, 1199, 2609, 1953,
	2602, 1201, 1198, 1200, 1204, 1205, 2598, 2597, 2596, 1203,
	1682, 790, 791, 792, 789, 1685, 1858, 1859, 1860, 1689,
	1863, 2530, 2492, 2433, 2469, 2368, 790, 791, 792, 789,
	2366, 1870, 2352, 1868, 978, 2328, 1701, 2316, 2315, 1704,
	1705, 1706, 2312, 2302, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1884, 1717, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1209, 1210, 1211, 1212, 1213,
	1214, 1207, 1208, 2554, 790, 791, 792, 789, 2829, 2295,
	1919, 605, 2379, 2245, 592, 790, 791, 792, 789, 1901,
	2180, 602, 601, 2174, 2126, 790, 791, 792, 789, 1039,
	2090, 1039, 2080, 1039, 790, 791, 792, 789, 725, 2378,
	1730, 2441, 595, 2217, 2204, 1801, 804, 803, 813, 814,
	806, 807, 808, 809, 810, 811, 812, 805, 1723, 1911,
	1420, 790, 791, 792, 789, 1697, 521, 520, 2435, 1039,
	1947, 1418, 1209, 1210, 1211, 1212, 1213, 1214, 1207, 1208,
	1298, 1087, 1954, 600, 858, 854, 1039, 599, 853, 1675,
	2434, 2436, 836, 590, 714, 2699, 2575, 1037, 2342, 137,
	1915, 1946, 125, 105, 2341, 1956, 2329, 2307, 593, 2306,
	2301, 1289, 1289, 1289, 1037, 2299, 2288, 2267, 1955, 813,
	814, 806, 807, 808, 809, 810, 811, 812, 805, 591,
	2266, 2235, 2155, 1064, 2148, 1958, 2140, 790, 791, 792,
	789, 2153, 2135, 606, 2822, 790, 791, 792, 789, 2084,
	1994, 2152, 1933, 1981, 1912, 1977, 134, 137, 1976, 2444,
	1708, 1698, 1696, 790, 791, 792, 789, 594, 1927, 1693,
	1692, 2430, 1039, 790, 791, 792, 789, 2440, 1690, 1684,
	1904, 1681, 1902, 1680, 1909, 2027, 1233, 1232, 1986, 1051,
	1049, 2033, 804, 803, 813, 814, 806, 807, 808, 809,
	810, 811, 812, 805, 2849, 2800, 2794, 2042, 1124, 2779,
	1923, 1924, 2776, 1277, 134, 725, 1366, 1366, 1366, 1366,
	1996, 2774, 1937, 851, 2658, 2548, 2151, 725, 1366, 2835,
	1975, 2644, 2632, 2019, 1962, 604, 2629, 2624, 2561, 1967,
	2552, 2551, 2550, 2547, 1803, 1974, 1039, 1926, 790, 791,
	792, 789, 790, 791, 792, 789, 2541, 144, 144, 2526,
	1265, 2359, 2025, 1275, 1276, 2357, 2067, 790, 791, 792,
	789, 2045, 2340, 1844, 1987, 2323, 2161, 2051, 2034, 1230,
	1990, 1785, 1973, 2102, 1274, 1267, 2101, 965, 1230, 2051,
	2024, 2023, 2022, 1279, 2035, 1282, 1039, 1271, 2064, 1894,
	833, 1856, 2039, 2040, 790, 791, 792, 789, 1798, 1166,
	2113, 2011, 134, 2036, 1425, 1407, 1300, 2038, 1272, 1109,
	2258, 19, 1075, 929, 2032, 43, 1280, 877, 1283, 876,
	32, 2026, 2114, 8, 2082, 2083, 6, 2018, 31, 2044,
	7, 2048, 1789, 875, 2041, 2098, 2052, 2053, 2054, 2055,
	874, 1308, 873, 2108, 1288, 2066, 2065, 872, 2110, 579,
	2063, 871, 870, 869, 868, 867, 2076, 2078, 2081, 804,
	803, 813, 814, 806, 807, 808, 809, 810, 811, 812,
	805, 2118, 866, 2088, 865, 864, 725, 863, 2123, 862,
	2141, 861, 2189, 2143, 857, 2145, 2103, 1930, 2099, 856,
	2111, 2112, 855, 2109, 144, 2117, 1948, 1949, 852, 2105,
	2798, 1951, 1952, 725, 725, 725, 848, 2131, 1972, 1366,
	1797, 847, 2233, 1957, 2133, 845, 844, 2107, 2237, 2139,
	2037, 843, 842, 841, 2142, 840, 2189, 839, 2146, 2147,
	790, 791, 792, 789, 838, 834, 2144, 832, 1743, 754,
	2252, 2253, 1289, 742, 2784, 1988, 1989, 1296, 804, 803,
	813, 814, 806, 807, 808, 809, 810, 811, 812, 805,
	2206, 2207, 2208, 2782, 2749, 2214, 2214, 2214, 1947, 2255,
	2177, 2205, 2013, 1866, 1422, 1971, 753, 2182, 1305, 1970,
	2160, 2257, 1305, 2231, 2162, 2163, 2164, 2165, 2057, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 790, 791, 792,
	789, 790, 791, 792, 789, 2232, 2228, 2060, 144, 2226,
	2227, 2056, 2061, 144, 2100, 1424, 2243, 1969, 1896, 2184,
	2240, 1992, 2246, 2183, 2242, 482, 96, 2263, 2264, 2265,
	2236, 1423, 2256, 1968, 2238, 2239, 2273, 1790, 2260, 790,
	791, 792, 789, 2058, 2247, 2178, 2179, 2286, 2059, 1259,
	141, 1921, 2272, 2289, 1965, 790, 791, 792, 789, 2259,
	2062, 1882, 1833, 1834, 2362, 2241, 2361, 2283, 1916, 373,
	77, 1964, 96, 42, 2287, 931, 790, 791, 792, 789,
	1963, 2290, 41, 2581, 2291, 2293, 1069, 1039, 1039, 1777,
	2297, 368, 2294, 790, 791, 792, 789, 748, 2333, 1959,
	2360, 2043, 790, 791, 792, 789, 1735, 1736, 1289, 1950,
	1366, 2345, 1289, 1928, 369, 1037, 2326, 370, 2282, 2324,
	2285, 790, 791, 792, 789, 1997, 371, 1317, 1299, 725,
	2715, 790, 791, 792, 789, 790, 791, 792, 789, 2308,
	583, 584, 585, 586, 2311, 2134, 1821, 1353, 2310, 1223,
	1222, 1844, 1007, 582, 2364, 943, 944, 941, 942, 1006,
	686, 780, 725, 2262, 96, 1625, 969, 2154, 939, 940,
	2347, 933, 2353, 2336, 2332, 2336, 2795, 2338, 937, 938,
	2682, 2331, 2665, 1676, 2344, 2343, 2086, 2663, 2589, 2337,
	2574, 2051, 2573, 2571, 2351, 2562, 2466, 2465, 2382, 2355,
	2367, 2354, 1050, 2280, 725, 790, 791, 792, 789, 2279,
	2270, 725, 936, 582, 2269, 2448, 2450, 1321, 2448, 2448,
	2365, 2786, 2785, 2785, 2051, 2116, 2346, 1683, 2381, 739,
	2786, 2372, 2349, 2371, 1176, 2350, 2543, 2281, 1319, 981,
	2463, 2374, 803, 813, 814, 806, 807, 808, 809, 810,
	811, 812, 805, 50, 2383, 1394, 790, 791, 792, 789,
	1043, 2449, 1, 1297, 587, 2489, 2486, 2069, 2070, 2445,
	2261, 1824, 2072, 2214, 1643, 2423, 1819, 1778, 2203, 2501,
	960, 2457, 2347, 608, 2460, 2456, 2451, 2452, 1225, 583,
	584, 585, 586, 2461, 1829, 1832, 1833, 1834, 1830, 1094,
	1831, 1835, 582, 699, 2471, 734, 1091, 733, 2453, 1829,
	1832, 1833, 1834, 1830, 1039, 1831, 1835, 731, 2487, 1178,
	484, 1433, 2380, 2625, 2462, 144, 2714, 2529, 2760, 2657,
	2717, 1107, 468, 2565, 2450, 2504, 2496, 2472, 2458, 2459,
	2502, 2503, 2326, 2506, 2507, 2508, 2509, 2661, 2474, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2445, 2298, 2527, 2531, 2376, 2104, 626,
	515, 2300, 491, 846, 1077, 1070, 725, 2556, 2158, 2553,
	701, 490, 2590, 2557, 2322, 2007, 2555, 598, 698, 627,
	1718, 2563, 816, 2570, 820, 1260, 1281, 2568, 1264, 2845,
	2834, 2585, 2546, 2813, 2793, 2623, 96, 96, 686, 817,
	819, 815, 2584, 818, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 2687, 2830, 725, 2732,
	2603, 725, 725, 725, 2777, 2482, 2480, 1844, 2481, 2770,
	2683, 2651, 2654, 405, 1374, 2593, 2594, 573, 668, 2645,
	1421, 2599, 2600, 1802, 2675, 2633, 2631, 596, 2641, 2642,
	2643, 2630, 1784, 1289, 2640, 597, 2356, 1787, 2649, 2358,
	1786, 1147, 795, 2655, 1039, 1039, 1164, 821, 2662, 2668,
	2303, 2660, 2664, 2363, 2666, 2667, 2304, 830, 2650, 444,
	1671, 2681, 456, 2004, 2438, 2079, 49, 48, 47, 46,
	1412, 1443, 1037, 1037, 486, 144, 2689, 2690, 146, 1444,
	2653, 2719, 466, 725, 465, 464, 2796, 463, 1828, 1826,
	1825, 1361, 1360, 1410, 2746, 725, 2702, 2703, 2540, 2610,
	2695, 2536, 2532, 2693, 2701, 2397, 2424, 2425, 2431, 2721,
	2705, 884, 880, 882, 883, 881, 1936, 1932, 2212, 2213,
	2720, 2210, 2710, 946, 2454, 2488, 2309, 1741, 1739, 2254,
	2250, 1429, 1294, 725, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 2725, 1991, 1362, 1358,
	2455, 576, 1404, 33, 28, 5, 30, 2735, 2737, 29,
	14, 15, 13, 1098, 2759, 12, 2743, 18, 27, 26,
	25, 24, 2421, 87, 86, 2762, 23, 935, 85, 2497,
	84, 83, 725, 2754, 2755, 2756, 2757, 2727, 82, 2769,
	22, 11, 81, 80, 79, 2730, 21, 74, 2766, 20,
	2768, 75, 2773, 72, 2775, 73, 1790, 60, 59, 58,
	70, 69, 2780, 68, 2783, 2721, 2791, 2781, 67, 900,
	66, 2787, 65, 625, 57, 725, 2720, 725, 56, 2790,
	55, 54, 2797, 2839, 2799, 71, 64, 63, 62, 61,
	53, 52, 51, 2403, 1130, 103, 102, 2802, 2762, 2809,
	2808, 725, 101, 100, 2816, 99, 98, 34, 2820, 35,
	36, 37, 113, 2826, 112, 114, 2580, 115, 110, 108,
	111, 137, 109, 39, 125, 105, 107, 44, 10, 1048,
	17, 2, 0, 0, 373, 2833, 2840, 1130, 0, 1130,
	2844, 130, 0, 0, 2843, 0, 0, 0, 118, 0,
	0, 0, 131, 2855, 2840, 2857, 2856, 94, 2858, 2844,
	0, 96, 0, 1130, 0, 96, 0, 0, 0, 0,
	888, 0, 78, 0, 0, 0, 96, 0, 134, 0,
	0, 0, 0, 617, 0, 96, 0, 0, 908, 912,
	914, 916, 918, 919, 921, 0, 925, 922, 923, 924,
	0, 0, 903, 904, 905, 906, 886, 887, 909, 0,
	889, 2580, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 901, 907, 0, 0, 0, 0, 0, 2407,
	0, 911, 913, 915, 917, 920, 0, 0, 0, 0,
	2411, 0, 0, 0, 649, 0, 0, 126, 127, 0,
	128, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	2400, 0, 0, 2700, 2402, 2404, 2406, 902, 2408, 2409,
	2410, 2412, 2413, 2414, 2416, 2417, 2418, 2419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 415,
	422, 412, 790, 791, 792, 789, 0, 0, 0, 0,
	2156, 419, 420, 0, 421, 425, 0, 0, 407, 0,
	2422, 0, 0, 0, 0, 104, 124, 135, 430, 76,
	0, 0, 0, 0, 651, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 117, 116, 0,
	0, 0, 0, 45, 0, 0, 0, 2420, 804, 803,
	813, 814, 806, 807, 808, 809, 810, 811, 812, 805,
	2580, 636, 0, 0, 2399, 0, 0, 0, 1206, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2415, 0, 641, 0, 0, 0, 0,
	2405, 119, 120, 121, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 0, 0, 0, 0,
	0, 132, 0, 2811, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 122, 0, 89, 0, 804, 803, 813,
	814, 806, 807, 808, 809, 810, 811, 812, 805, 0,
	1365, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 408, 410, 409, 0, 0, 619, 644, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 418, 0, 0, 0, 0, 91, 38, 433,
	639, 0, 910, 1202, 0, 0, 411, 1199, 0, 0,
	686, 1201, 1198, 1200, 1204, 1205, 686, 0, 0, 1203,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 640, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 0, 0, 0, 632,
	0, 634, 648, 0, 0, 0, 631, 629, 628, 0,
	633, 620, 621, 622, 623, 624, 0, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 106, 0, 0, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	417, 423, 821, 424, 426, 0, 0, 427, 428, 429,
	0, 0, 431, 432, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 93, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1209, 1210, 1211, 1212, 1213, 1214, 1207, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1560, 1602, 0, 0, 1549, 314, 1506, 1562, 1479,
	1495, 1570, 1496, 1497, 1535, 1458, 1517, 276, 1493, 0,
	0, 0, 0, 0, 0, 1552, 1450, 1482, 1483, 1452,
	1489, 1453, 1480, 1508, 221, 1478, 1520, 246, 1532, 1492,
	1513, 1568, 0, 0, 306, 260, 0, 0, 1511, 1554,
	1514, 1540, 1505, 1536, 1466, 1528, 1563, 1494, 0, 1533,
	1564, 0, 0, 0, 0, 711, 712, 713, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 1531, 1558,
	1491, 0, 205, 1561, 1512, 1534, 0, 0, 1451, 1529,
	0, 1456, 1459, 1569, 1556, 1486, 1487, 0, 0, 0,
	0, 0, 0, 0, 0, 1509, 1515, 1537, 1502, 1846,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 1525, 0, 0, 0, 1461, 1457, 0, 1507, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 1601, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 1365, 324, 352,
	214, 343, 1460, 335, 197, 1596, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 1580, 1581, 1582,
	1583, 1584, 363, 1592, 1593, 0, 1597, 1598, 1599, 1465,
	0, 1485, 1538, 0, 1449, 1623, 1547, 1555, 1504, 337,
	1557, 1501, 1500, 1587, 0, 1586, 310, 1588, 1589, 245,
	1553, 1481, 1490, 353, 1488, 296, 278, 1559, 1524, 1600,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 1585,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 1594, 0,
	1595, 349, 228, 185, 186, 332, 0, 274, 0, 1624,
	1550, 1454, 1464, 1462, 1498, 1526, 1527, 270, 348, 1542,
	1546, 1543, 1571, 299, 0, 0, 0, 0, 0, 239,
	280, 1544, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1455, 0, 307, 330, 342, 359, 362,
	1603, 1604, 1605, 190, 361, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 333, 1499, 1472, 1510, 341, 1475, 1473, 1541,
	1474, 1530, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 1521, 1503, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1522, 1614, 1615, 1616, 1617, 1618, 1477, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 1548, 365,
	1619, 1620, 1621, 1622, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 1471,
	1476, 1470, 1518, 1519, 1565, 1566, 1567, 1539, 1463, 1551,
	0, 1467, 1469, 1468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2421, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 1523, 187, 0, 247,
	1572, 288, 226, 0, 2421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 1590, 1591, 345, 346, 347, 367, 331, 0, 218,
	1613, 0, 0, 0, 0, 0, 0, 2403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 2403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1365, 1365, 1365, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 2500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2411, 0, 0, 0, 0, 0,
	0, 2407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2411, 0, 2400, 0, 0, 0, 2402, 2404,
	2406, 0, 2408, 2409, 2410, 2412, 2413, 2414, 2416, 2417,
	2418, 2419, 2400, 0, 0, 0, 2402, 2404, 2406, 0,
	2408, 2409, 2410, 2412, 2413, 2414, 2416, 2417, 2418, 2419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 96, 2422, 0, 0, 0, 0, 0,
	0, 0, 314, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 2422, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 0, 458, 0, 0, 0,
	221, 2420, 0, 246, 0, 0, 0, 489, 0, 96,
	306, 260, 0, 0, 0, 0, 544, 552, 2399, 2420,
	0, 0, 0, 0, 0, 0, 0, 0, 451, 0,
	0, 483, 521, 520, 470, 479, 2399, 0, 202, 471,
	0, 478, 472, 476, 475, 473, 474, 2415, 536, 0,
	0, 0, 0, 0, 2405, 442, 455, 2577, 459, 0,
	0, 0, 96, 0, 96, 2415, 0, 0, 0, 0,
	0, 0, 2405, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 453, 0, 0, 0, 0, 498, 0, 454,
	0, 0, 461, 480, 481, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 477, 496, 500, 214, 558, 494, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 559, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 337, 0, 0, 542, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 495,
	0, 296, 278, 555, 443, 1365, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 540, 274, 0, 0, 554, 535, 537, 538,
	541, 545, 546, 547, 548, 549, 551, 553, 557, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 2578, 0, 0, 0, 2579, 0, 556, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 499, 264,
	265, 266, 267, 543, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 565, 539, 564, 566, 567,
	563, 568, 569, 550, 462, 0, 503, 561, 560, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 528,
	508, 509, 510, 460, 511, 506, 507, 529, 501, 525,
	526, 485, 504, 512, 524, 513, 527, 530, 531, 570,
	571, 519, 572, 516, 532, 523, 522, 514, 502, 533,
	534, 488, 487, 517, 518, 505, 314, 497, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 489, 0, 0, 306, 260, 0, 0, 0, 0,
	544, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 0, 0, 483, 521, 520, 470, 479,
	0, 0, 202, 471, 0, 478, 472, 476, 475, 473,
	474, 0, 536, 0, 0, 0, 0, 0, 0, 442,
	455, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 453, 0, 0, 0,
	0, 498, 0, 454, 0, 0, 461, 480, 481, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 477, 496, 500,
	214, 558, 494, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 559, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 337,
	0, 0, 542, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 495, 0, 296, 278, 555, 443, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 1227, 1226,
	1228, 349, 228, 185, 186, 332, 540, 274, 0, 0,
	554, 535, 537, 538, 541, 545, 546, 547, 548, 549,
	551, 553, 557, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 499, 264, 265, 266, 267, 543, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 565,
	539, 564, 566, 567, 563, 568, 569, 550, 462, 0,
	503, 561, 560, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 528, 508, 509, 510, 460, 511, 506,
	507, 529, 501, 525, 526, 485, 504, 512, 524, 513,
	527, 530, 531, 570, 571, 519, 572, 516, 532, 523,
	522, 514, 502, 533, 534, 488, 487, 517, 518, 505,
	314, 497, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 489, 0, 0, 306, 260,
	0, 0, 0, 0, 544, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 0, 0, 483,
	521, 520, 470, 479, 0, 0, 202, 471, 0, 478,
	472, 476, 475, 473, 474, 0, 536, 0, 0, 0,
	0, 0, 0, 442, 455, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	453, 0, 0, 0, 0, 498, 0, 454, 0, 0,
	461, 480, 481, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 195, 325,
	308, 257, 240, 241, 194, 0, 293, 219, 232, 215,
	273, 477, 496, 500, 214, 558, 494, 335, 197, 0,
	334, 272, 321, 326, 258, 252, 196, 323, 256, 251,
	244, 223, 559, 236, 284, 250, 285, 237, 262, 261,
	263, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 337, 0, 0, 542, 0, 0, 0,
	310, 0, 0, 245, 0, 0, 0, 495, 0, 296,
	278, 555, 443, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	540, 274, 0, 0, 554, 535, 537, 538, 541, 545,
	546, 547, 548, 549, 551, 553, 557, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	2578, 0, 0, 0, 2579, 0, 556, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 499, 264, 265, 266,
	267, 543, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 565, 539, 564, 566, 567, 563, 568,
	569, 550, 462, 0, 503, 561, 560, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 247, 0, 288, 226, 528, 508, 509,
	510, 460, 511, 506, 507, 529, 501, 525, 526, 485,
	504, 512, 524, 513, 527, 530, 531, 570, 571, 519,
	572, 516, 532, 523, 522, 514, 502, 533, 534, 488,
	487, 517, 518, 505, 314, 497, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 221, 1290, 0, 246, 0, 0, 0, 489,
	0, 0, 306, 260, 0, 0, 0, 0, 544, 552,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	451, 0, 0, 483, 521, 520, 470, 479, 0, 0,
	202, 471, 0, 478, 472, 476, 475, 473, 474, 0,
	536, 0, 0, 0, 0, 0, 0, 442, 455, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 453, 0, 0, 0, 0, 498,
	0, 454, 0, 0, 1385, 480, 481, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 477, 496, 500, 214, 558,
	494, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 559, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 337, 0, 0,
	542, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 495, 0, 296, 278, 555, 443, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 540, 274, 0, 0, 554, 535,
	537, 538, 541, 545, 546, 547, 548, 549, 551, 553,
	557, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	556, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	499, 264, 265, 266, 267, 543, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 565, 539, 564,
	566, 567, 563, 568, 569, 550, 462, 0, 503, 561,
	560, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 528, 508, 509, 510, 460, 511, 506, 507, 529,
	501, 525, 526, 485, 504, 512, 524, 513, 527, 530,
	531, 570, 571, 519, 572, 516, 532, 523, 522, 514,
	502, 533, 534, 488, 487, 517, 518, 505, 137, 314,
	497, 345, 346, 347, 367, 331, 0, 218, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 824, 0, 0, 306, 260, 0,
	0, 0, 0, 544, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 0, 0, 483, 521,
	520, 470, 479, 0, 0, 202, 471, 0, 478, 472,
	476, 475, 473, 474, 0, 536, 0, 0, 0, 0,
	0, 0, 442, 455, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 453,
	0, 0, 0, 0, 498, 0, 454, 0, 0, 461,
	480, 481, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	477, 496, 500, 214, 558, 494, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 559, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 337, 0, 0, 542, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 495, 0, 296, 278,
	555, 443, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 540,
	274, 0, 0, 554, 535, 537, 538, 541, 545, 546,
	547, 548, 549, 551, 553, 557, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 499, 264, 265, 266, 267,
	543, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 565, 539, 564, 566, 567, 563, 568, 569,
	550, 462, 0, 503, 561, 560, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 106, 288, 226, 528, 508, 509, 510,
	460, 511, 506, 507, 529, 501, 525, 526, 485, 504,
	512, 524, 513, 527, 530, 531, 570, 571, 519, 572,
	516, 532, 523, 522, 514, 502, 533, 534, 488, 487,
	517, 518, 505, 314, 497, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	0, 221, 2810, 0, 246, 0, 0, 0, 489, 0,
	0, 306, 260, 0, 0, 0, 0, 544, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	0, 0, 483, 521, 520, 470, 479, 0, 0, 202,
	471, 0, 478, 472, 476, 475, 473, 474, 0, 536,
	0, 0, 0, 0, 0, 0, 442, 455, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 453, 0, 0, 0, 0, 498, 0,
	454, 0, 0, 461, 480, 481, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 477, 496, 500, 214, 558, 494,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 559, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 337, 0, 0, 542,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	495, 0, 296, 278, 555, 443, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 540, 274, 0, 0, 554, 535, 537,
	538, 541, 545, 546, 547, 548, 549, 551, 553, 557,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 499,
	264, 265, 266, 267, 543, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 565, 539, 564, 566,
	567, 563, 568, 569, 550, 462, 0, 503, 561, 560,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	528, 508, 509, 510, 460, 511, 506, 507, 529, 501,
	525, 526, 485, 504, 512, 524, 513, 527, 530, 531,
	570, 571, 519, 572, 516, 532, 523, 522, 514, 502,
	533, 534, 488, 487, 517, 518, 505, 314, 497, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 0, 221, 1290, 0, 246, 0,
	0, 0, 489, 0, 0, 306, 260, 0, 0, 0,
	0, 544, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 0, 0, 483, 521, 520, 470,
	479, 0, 0, 202, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 536, 0, 0, 0, 0, 0, 0,
	442, 455, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 453, 0, 0,
	0, 0, 498, 0, 454, 0, 0, 461, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 496,
	500, 214, 558, 494, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 559,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 542, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 495, 0, 296, 278, 555, 443,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 540, 274, 0,
	0, 554, 535, 537, 538, 541, 545, 546, 547, 548,
	549, 551, 553, 557, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 499, 264, 265, 266, 267, 543, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	565, 539, 564, 566, 567, 563, 568, 569, 550, 462,
	0, 503, 561, 560, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 528, 508, 509, 510, 460, 511,
	506, 507, 529, 501, 525, 526, 485, 504, 512, 524,
	513, 527, 530, 531, 570, 571, 519, 572, 516, 532,
	523, 522, 514, 502, 533, 534, 488, 487, 517, 518,
	505, 314, 497, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 544, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 0, 0,
	483, 521, 520, 470, 479, 0, 0, 202, 471, 0,
	478, 472, 476, 475, 473, 474, 0, 536, 0, 0,
	0, 0, 0, 0, 442, 455, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 453, 1063, 0, 0, 0, 498, 0, 454, 0,
	0, 461, 480, 481, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 477, 496, 500, 214, 558, 494, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 559, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 337, 0, 0, 542, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 495, 0,
	296, 278, 555, 443, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 540, 274, 0, 0, 554, 535, 537, 538, 541,
	545, 546, 547, 548, 549, 551, 553, 557, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 499, 264, 265,
	266, 267, 543, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 565, 539, 564, 566, 567, 563,
	568, 569, 550, 462, 0, 503, 561, 560, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 528, 508,
	509, 510, 460, 511, 506, 507, 529, 501, 525, 526,
	485, 504, 512, 524, 513, 527, 530, 531, 570, 571,
	519, 572, 516, 532, 523, 522, 514, 502, 533, 534,
	488, 487, 517, 518, 505, 0, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 314, 497, 0, 0, 1688,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	489, 0, 0, 306, 260, 0, 0, 0, 0, 544,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 451, 0, 0, 483, 521, 520, 470, 479, 0,
	0, 202, 471, 0, 478, 472, 476, 475, 473, 474,
	0, 536, 0, 0, 0, 0, 0, 0, 442, 455,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 453, 0, 0, 0, 0,
	498, 0, 454, 0, 0, 461, 480, 481, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 477, 496, 500, 214,
	558, 494, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 559, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 337, 0,
	0, 542, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 495, 0, 296, 278, 555, 443, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 540, 274, 0, 0, 554,
	535, 537, 538, 541, 545, 546, 547, 548, 549, 551,
	553, 557, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 499, 264, 265, 266, 267, 543, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 565, 539,
	564, 566, 567, 563, 568, 569, 550, 462, 0, 503,
	561, 560, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 528, 508, 509, 510, 460, 511, 506, 507,
	529, 501, 525, 526, 485, 504, 512, 524, 513, 527,
	530, 531, 570, 571, 519, 572, 516, 532, 523, 522,
	514, 502, 533, 534, 488, 487, 517, 518, 505, 314,
	497, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 489, 0, 0, 306, 260, 0,
	0, 0, 0, 544, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 0, 0, 483, 521,
	520, 470, 479, 0, 0, 202, 471, 0, 478, 472,
	476, 475, 473, 474, 0, 536, 0, 0, 0, 0,
	0, 0, 442, 455, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 453,
	0, 0, 0, 0, 498, 0, 454, 0, 0, 461,
	480, 481, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	477, 496, 500, 214, 558, 494, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 559, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 337, 0, 0, 542, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 495, 0, 296, 278,
	555, 443, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 540,
	274, 0, 0, 554, 535, 537, 538, 541, 545, 546,
	547, 548, 549, 551, 553, 557, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 499, 264, 265, 266, 267,
	543, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 565, 539, 564, 566, 567, 563, 568, 569,
	550, 462, 0, 503, 561, 560, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 528, 508, 509, 510,
	460, 511, 506, 507, 529, 501, 525, 526, 485, 504,
	512, 524, 513, 527, 530, 531, 570, 571, 519, 572,
	516, 532, 523, 522, 514, 502, 533, 534, 488, 487,
	517, 518, 505, 314, 497, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 458, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 489, 0,
	0, 306, 260, 0, 0, 0, 0, 544, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	0, 0, 483, 521, 520, 470, 479, 0, 0, 202,
	471, 0, 478, 472, 476, 475, 473, 474, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 453, 0, 0, 0, 0, 498, 0,
	454, 0, 0, 461, 480, 481, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 477, 496, 500, 214, 558, 494,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 559, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 337, 0, 0, 542,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	495, 0, 296, 278, 555, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 1149, 1150, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 540, 274, 0, 0, 554, 535, 537,
	538, 541, 545, 546, 547, 548, 549, 551, 553, 557,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 499,
	264, 265, 266, 267, 543, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 565, 539, 564, 566,
	567, 563, 568, 569, 550, 462, 0, 503, 561, 560,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	528, 508, 509, 510, 460, 511, 506, 507, 529, 501,
	525, 526, 485, 504, 512, 524, 513, 527, 530, 531,
	570, 571, 519, 572, 516, 532, 523, 522, 514, 502,
	533, 534, 488, 487, 517, 518, 505, 314, 497, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 489, 0, 0, 306, 260, 0, 0, 0,
	0, 544, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 521, 520, 470,
	479, 0, 0, 202, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 536, 0, 0, 0, 0, 0, 0,
	442, 455, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 453, 0, 0,
	0, 0, 498, 0, 454, 0, 0, 461, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 496,
	500, 214, 558, 494, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 559,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 542, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 495, 0, 296, 278, 555, 443,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 540, 274, 0,
	0, 554, 535, 537, 538, 541, 545, 546, 547, 548,
	549, 551, 553, 557, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 499, 264, 265, 266, 267, 543, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	565, 539, 564, 566, 567, 563, 568, 569, 550, 462,
	0, 503, 561, 560, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 528, 508, 509, 510, 460, 511,
	506, 507, 529, 501, 525, 526, 485, 504, 512, 524,
	513, 527, 530, 531, 570, 571, 519, 572, 516, 532,
	523, 522, 514, 502, 533, 534, 488, 487, 517, 518,
	505, 314, 497, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 544, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 0, 0,
	483, 521, 520, 470, 479, 0, 0, 202, 471, 0,
	478, 472, 476, 475, 473, 474, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 453, 0, 0, 0, 0, 498, 0, 454, 0,
	0, 461, 480, 481, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 477, 496, 500, 214, 558, 494, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 559, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 337, 0, 0, 542, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 495, 0,
	296, 278, 555, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 540, 274, 0, 0, 554, 535, 537, 538, 541,
	545, 546, 547, 548, 549, 551, 553, 557, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 499, 264, 265,
	266, 267, 543, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 565, 539, 564, 566, 567, 563,
	568, 569, 550, 462, 0, 503, 561, 560, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 528, 508,
	509, 510, 460, 511, 506, 507, 529, 501, 525, 526,
	485, 504, 512, 524, 513, 527, 530, 531, 570, 571,
	519, 572, 516, 532, 523, 522, 514, 502, 533, 534,
	488, 487, 517, 518, 505, 0, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 137, 314, 39, 125, 105,
	0, 0, 0, 0, 0, 0, 0, 276, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 306, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 378, 380, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 0, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	106, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 0, 193, 311, 327, 203, 302,
	340, 208, 309, 198, 275, 298, 0, 0, 1763, 1765,
	1766, 1767, 1768, 1769, 1770, 0, 1774, 1771, 1772, 1773,
	273, 0, 1758, 1759, 1760, 1761, 886, 1744, 1764, 0,
	1745, 272, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1762, 284, 250, 285, 237, 262, 261,
	263, 911, 913, 915, 917, 920, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 245, 0, 0, 0, 1757, 0, 296,
	278, 0, 0, 0, 294, 248, 322, 286, 328, 312,
	336, 290, 287, 188, 313, 217, 259, 199, 201, 213,
	220, 222, 224, 225, 268, 269, 281, 301, 315, 316,
	317, 216, 209, 295, 210, 234, 211, 189, 303, 212,
	191, 282, 320, 0, 230, 291, 255, 192, 254, 283,
	319, 318, 200, 344, 350, 351, 355, 0, 356, 0,
	0, 0, 364, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 349, 228, 185, 186, 332,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 348, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 239, 280, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	330, 342, 359, 362, 0, 0, 0, 190, 361, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	341, 0, 0, 0, 0, 0, 357, 264, 265, 266,
	267, 231, 0, 207, 360, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 227, 233, 0, 235, 206, 279, 229,
	339, 242, 0, 365, 0, 0, 0, 0, 271, 238,
	304, 243, 249, 292, 338, 277, 297, 204, 329, 305,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 910, 247, 0, 288, 226, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 0,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 314, 0, 0, 345, 346, 347,
	367, 331, 0, 218, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 2221, 2224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2225, 337, 0, 0,
	0, 2218, 0, 2217, 310, 2219, 2222, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 2223, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 0,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	1415, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 790, 791, 792,
	789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 0,
	324, 352, 214, 343, 0, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	366, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 353, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 0, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 667, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 675, 676, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 651, 335,
	197, 650, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 665, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 348, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 666, 333, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 669, 264,
	265, 266, 267, 231, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	677, 672, 673, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 0, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 137, 314, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 94, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 1436, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 106, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 137, 314, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 94, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 1427,
	0, 145, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 348, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 357, 264,
	265, 266, 267, 231, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 106, 288, 226, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 0, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 137, 314, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 94, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 106, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 675, 676, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 651, 335, 197,
	650, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 677,
	672, 673, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 1042, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 1040, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 1036, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1040, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1038,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2716, 0, 145, 521, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 1040,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1038, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 1040, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2327, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 1861, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 1040, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2819, 0, 145, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 521, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2731, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2395, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 2652, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 2464, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 2188, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1040, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 1873,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 0, 0, 0, 345, 346, 347, 367, 331, 314,
	218, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 1040, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 1325, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 396, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 397, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	0, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 0,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 314,
	0, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 221, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 306, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 0, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 0, 324,
	352, 214, 343, 0, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 366,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 353, 0, 296, 278, 0, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 436, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 348,
	0, 0, 0, 0, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 357, 264, 265, 266, 267, 231, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 0, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 0, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 314, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 306,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	711, 712, 713, 1842, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 0, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 187, 0, 247, 0, 288, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 712, 713, 1842, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 0, 324, 352, 214, 343, 0, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 366, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 353,
	0, 296, 278, 0, 0, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 348, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 357, 264,
	265, 266, 267, 231, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 0, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 187, 0, 247, 0, 288, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 712, 713, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 0, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 416, 0, 415, 422, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 421, 425, 0, 0, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	0, 416, 0, 415, 422, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 419, 420, 435, 421, 425,
	0, 0, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 410,
	409, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 402, 0, 0,
	0, 0, 0, 0, 0, 408, 410, 409, 0, 0,
	0, 0, 0, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 417, 423, 0,
	424, 426, 0, 0, 427, 428, 429, 0, 0, 431,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 417, 423, 0, 424, 426, 0,
	0, 427, 428, 429, 0, 0, 431, 432,
}

var yyPact = [...]int{
	2811, -1000, -296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -204, 27358,
	27358, -1000, -1000, 1699, -1000, 26854, 10715, 27862, 194, 184,
	27862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 530, -1000, 26350, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 433, 30134,
	28366, 349, 8688, 27862, -275, -1000, 2403, -134, -1000, -1000,
	-1000, -1000, -1000, -1000, 1410, 561, 25846, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2857, 63, 561, 650, 651, 787, 787,
	12731, -59, -60, 2403, 245, 362, -1000, 961, 2811, 29712,
	1631, 407, 27862, -1000, 1106, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 407, -1000,
	-1000, -1000, 2403, 2403, -1000, 27862, 27862, -4, 1207, -1000,
	234, 247, 274, 1102, -1000, -1000, -1000, -1000, -1000, 2334,
	-1000, 27862, 27862, 1998, 27862, -1000, 1430, 374, 30181, 2182,
	1049, 533, 2032, -1000, -1000, 1992, -1000, 93, 359, 123,
	558, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 165, -1000,
	2255, -1000, -1000, 81, -1000, -1000, 71, -1000, -1000, -1000,
	-63, -1000, -1000, -1000, -1000, -1000, -150, -1000, -1000, -150,
	667, 1427, 8688, -1000, 1292, -1000, 2418, -1000, -1000, -1000,
	-1000, 6158, 10200, 10200, 10200, 10200, -1000, -1000, 1855, 8688,
	1990, 1843, 1988, -1000, -1000, -1000, -1000, 1101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1629, 9696, -1000, 1987, 1980, 1978, 1976, 1975, 1974, 1969,
	1968, 1964, 1959, 1766, 1951, 1625, 1622, 1945, 1942, 1937,
	1621, 1766, 1766, 1934, 1932, 1930, 1928, 1927, 1925, 1908,
	1907, 1906, 1905, 1904, 1900, 1895, 1893, 1886, 1872, 1870,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 370, -1000, 1100, 789, -1000, 1866, 2157,
	2270, 1757, 2312, 2267, 2257, 2246, 2244, 1405, -1000, -1000,
	27862, 27862, 431, 431, 431, 431, 464, 431, 525, 515,
	501, -1000, -1000, -1000, -1000, -1000, -1000, 603, -1000, -1000,
	-1000, -1000, 885, 27862, -1000, 1830, 1151, 2263, 391, 389,
	265, -1000, 1241, 1241, 1241, 1151, 260, 382, 2270, 2270,
	-76, -84, 1151, 1151, -84, 1151, 91, -1000, -1000, -1000,
	1241, 378, 1241, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2249, 2242, 433, 87, 27862, 433, 438, -1000, -159, -1000,
	-1000, 642, -1000, 629, -1000, 1430, 373, 367, 906, 1226,
	-1000, 1158, 27862, 27862, 27862, 1158, 1158, 15758, 15254, -1000,
	27862, -1000, 2270, 1757, -1000, 1732, 2254, 1731, 1757, 433,
	433, 433, 433, 433, 433, 433, 27862, 27862, 7670, 7670,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 298, -1000,
	-1000, -1000, -1000, -1000, 2168, 248, 1865, -1000, 27862, 233,
	2270, 2157, 2270, -1000, -1000, 1098, 1402, 1618, -1000, -1000,
	234, 1123, -1000, 697, -1000, -1000, -1000, -1000, 27862, 282,
	-1000, -1000, 1605, 1862, -1000, 365, 958, 1002, -1000, 173,
	2977, 23318, 1430, 23318, 27862, -1000, -1000, -1000, -1000, -1000,
	-1000, -65, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 99, -1000, 99, 8688, 8688,
	8688, 8688, 8688, -1000, 409, 9192, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10200, 10200, 10200, 10200, 10200, 10200, 10200,
	10200, 10200, 10200, 10200, 10200, 1852, 1274, 10200, 10200, 10200,
	10200, 2254, 2286, 889, 172, -1000, -1000, -1000, -1000, -1000,
	1087, 1427, 8688, 8688, 8688, 27862, -1000, 2902, 8688, 8688,
	1145, 8688, 2238, 4645, 27862, 8688, -1000, 1729, 1728, -1000,
	-1000, 1350, 8688, -1000, -1000, 8688, 10200, 8688, -1000, -1000,
	-1000, 1222, 2238, 2238, 8688, 8688, 2238, 2238, 2238, 1212,
	2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 27862, 2129,
	52, -1000, -1000, -1000, 1803, -1000, 1828, 1828, 1803, 1803,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1840,
	1861, -1000, -1000, 1827, 1827, 1827, 1803, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1836, 1836, 1838, 1836, 27862, 2270, -275, 7166,
	-1000, -280, 2157, 8688, -1000, -1000, 8688, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1617, 2214, -1000, 1859, 1097,
	27862, 1089, 27862, 23318, 1430, 1417, 27862, 431, 431, 431,
	438, -1000, 27862, 885, 2213, 27862, 2321, 10200, 10200, 25342,
	1241, 1151, -1000, 27862, -1000, -1000, -1000, 1241, 27862, 1241,
	2321, 1241, -1000, -1000, -1000, 1151, 1151, -1000, -1000, -1000,
	-1000, 1241, 1241, -1000, -1000, -69, 2321, 2321, -90, -1000,
	27862, 27862, 431, 27862, -1000, 27862, -1000, -1000, 27862, 27862,
	27862, 2237, -1000, 23318, 21806, -1000, -128, 648, 624, 633,
	-1000, -1000, 360, 352, 14750, 317, 23318, 5653, -1000, -1000,
	1158, 1158, 1158, 5653, 5653, 931, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 878, -1000, 107, 2157, -1000, -1000, -1000,
	-1000, -1000, 27862, 23318, 1430, 27862, 27862, 27862, 29712, -1000,
	1858, 933, -1000, -1000, 12227, 1094, 933, 1608, 27862, 1597,
	2030, 2105, -1000, 1857, 13741, 27862, -1000, -1000, -276, -1000,
	13236, 27862, 2157, -1000, 2157, 3395, -1000, 2262, -1000, 234,
	178, -1000, -1000, -1000, -1000, -1000, -1000, 1093, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 826, -1000, 27862,
	-1000, -1000, 173, 23318, 1195, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 132, -1000, -1000, 158, -1000, 454, 21, 1122,
	-1000, -1000, 57, 155, 546, 57, 1427, -1000, 1230, 1230,
	1219, -1000, 429, -1000, -1000, -1000, -1000, 1855, -1000, -1000,
	-1000, 1611, 2245, -1000, 1182, 1182, 965, 965, 965, 965,
	965, 1220, 1220, -1000, -1000, -1000, 6158, 1852, 10200, 10200,
	10200, 10200, 418, 418, 1863, 3031, -1000, 8688, 1221, -1000,
	8688, 1665, 2235, 1116, 1091, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1725, 667, 1723, 1535, 2332,
	1721, 8688, -1000, -1000, 1401, 8184, -1000, -1000, -1000, 1720,
	1090, 1712, -1000, -1000, -1000, 1711, 847, 1704, 1540, 1703,
	823, 8688, 8688, 1111, 1107, 8688, 8688, 8688, 8688, 1702,
	8688, 8688, 8688, 8688, 8688, 8688, 8688, 8688, -1000, 8688,
	49, -1000, -1000, -1000, -1000, 1397, -1000, 1396, -1000, -1000,
	-1000, 1595, 1595, -1000, 1385, -1000, -1000, -1000, -1000, 1381,
	-1000, -1000, 1377, -1000, -1000, -1000, -1000, 1095, -1000, 1427,
	-1000, 1577, -1000, 1012, 791, -1000, 1476, -1000, -1000, 27862,
	11219, 27862, 1830, 2174, 44, -1000, 807, -1000, 21, 699,
	1826, 2117, 27862, 27862, 27862, 24838, -1000, 1851, 1086, -1000,
	-1000, 8688, -1000, -1000, 1789, 1430, 27862, 2321, -1000, -1000,
	-1000, 29712, -1000, -1000, -1000, 27862, 2321, 2321, 1151, 1241,
	1241, -1000, -1000, 1241, -1000, 1077, -1000, 27862, -1000, -1000,
	1830, 42, 2236, 113, 807, 2361, 986, -1000, -1000, -1000,
	-1000, 28870, 28870, 14246, 28870, -1000, 1125, -1000, -1000, 637,
	628, 622, -1000, -1000, 444, -1000, -1000, 699, -1000, -1000,
	-1000, 1844, 1196, -1000, -1000, 1843, -1000, 5653, 5653, 5653,
	-1000, -1000, 17774, 27862, -1000, -153, -1000, -143, -1000, -1000,
	774, 699, 2029, 742, -1000, 742, -1000, 11219, 2321, 7670,
	-1000, 21806, -1000, -1000, 24326, -1000, 23822, 2321, -284, 808,
	-88, -1000, 2142, -276, 27862, 27862, 1085, 135, -1000, 1084,
	-1000, 668, -1000, 1842, -1000, 1083, 2092, 715, -1000, 1183,
	-1000, -1000, -1000, 1071, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -6, -1000, -1000, 27862, 1605,
	1082, 1195, 714, -1000, 443, 1063, 1037, -1000, 23318, 85,
	23318, -1000, 23318, -1000, -1000, 250, -1000, 27862, 2150, -1000,
	-1000, -1000, 1547, -304, 2133, -1000, -1000, -1000, -1000, -1000,
	1080, -1000, 418, 418, 1863, 2988, -1000, 10200, -1000, 10200,
	2165, 1153, -1000, 8688, 1354, 283, -1000, 647, 16766, 27862,
	-1000, -1000, 8688, 8688, -1000, 2161, -1000, 8688, 8688, 1524,
	-1000, 27862, -1000, -1000, -1000, 16766, -1000, 10200, -1000, 8688,
	776, 2151, -52, -52, 2132, 2123, 2106, 1075, -52, 2085,
	2069, 2031, 2027, 1960, 1824, 1787, 1772, 1427, -1000, -1000,
	1700, 1697, 1064, -1000, 1061, 1695, 1052, 1051, 7166, -1000,
	-88, 8688, 8688, 8688, 2098, -1000, -1000, 62, 1692, 725,
	-1000, -1000, -1000, 2739, 1828, 1803, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1840, -1000, -1000, 1827, 1827,
	1827, 1803, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1836, 1836, 1838, 1836, -1000, 2211, -1000, -64, 1166,
	383, 23318, 358, -1000, 2028, 285, -1000, 2117, -1000, 819,
	-1000, 1835, 1834, 1833, 27862, 837, -1000, 1022, 2811, -1000,
	27862, 1427, -1000, 1430, -1000, 1151, -1000, -1000, 2321, 871,
	-1000, -1000, 2321, 1151, 1151, 1241, 27862, -1000, 2187, -64,
	1166, 112, 1177, 383, 27862, 21806, 21806, 21806, 21806, -1000,
	2078, 2055, -1000, 2110, 2074, 2127, 27862, 21806, 1830, -1000,
	29291, -1000, -1000, -1000, -1000, -1000, 2254, 1041, 2376, 600,
	8688, -1000, -1000, -1000, 627, 23318, 1569, 317, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27862, 27862, 1691, 2289,
	-1000, 723, -1000, -1000, 956, -1000, 2289, -1000, 1376, 1567,
	-27, -19, 1244, 668, 715, 1039, -1000, 135, 27862, 2088,
	1829, -1000, 27862, -276, 7166, 243, -276, 27862, 7166, 3395,
	1372, -1000, -1000, -1000, 2330, 23318, 1430, 1126, 1146, -1000,
	72, -1000, 121, 348, 1561, -1000, 500, 89, -1000, 1173,
	1547, 498, -1000, -1000, -1000, 10200, -1000, -1000, -1000, -1000,
	1427, 8688, 1684, -1000, 612, 612, 1678, -1000, 1803, 1828,
	-1000, 1803, 1827, 1803, 612, 612, 1676, -1000, 1343, 1768,
	-1000, 1693, 1683, 8688, -1000, 1674, 2932, 945, -172, -52,
	-1000, 1819, -1000, -52, -52, -52, -52, -1000, -52, -52,
	-52, -52, -52, -52, -52, -52, -1000, -1000, -1000, 1560,
	-1000, -1000, -1000, 1370, -1000, 1365, -1000, -27, 1427, 1427,
	-1000, -1000, 2121, 1557, 540, 11219, 2103, 242, 1355, -1000,
	-1000, 22814, -1000, 338, -1000, -1000, -1000, 449, 252, 1362,
	327, -1000, 1584, 27862, -1000, -1000, -1000, -1000, -1000, 1166,
	1166, 1166, 11723, 11723, 11723, 407, 768, 937, 21806, 27862,
	-1000, 21302, 1673, -1000, 699, 2321, -1000, 27862, -1000, 2321,
	2321, 1151, -1000, 242, 1355, 22814, 1172, 1550, 338, 825,
	-1000, 1171, 1996, 2025, 1996, -1000, -1000, -1000, -1000, 2048,
	-1000, 1877, -1000, -1000, 825, -1000, -1000, -1000, -1000, -1000,
	600, -1000, 2260, 575, 575, 575, 1672, -1000, 714, 1659,
	-1000, -1000, -1000, -1000, -1000, 2316, 2310, 22310, 2316, -1000,
	-284, -282, -14, 2309, 2303, 2344, 242, 27862, 239, -1000,
	-276, 27862, -1000, -1000, 1658, 713, -276, -1000, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1430, -1000, 119, -1000,
	-1000, -1000, -1000, -1000, -1000, 5, -1000, 27862, -1000, 1547,
	1546, 86, 27862, -1000, 1427, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8688, -1000, -1000, -1000, 1657, -1000, -1000, 8688, 1652, 1510,
	-1000, 404, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1651, 1649, -282, -1000, -1000,
	-1000, 2739, -1000, 1299, -1000, -1000, 1509, 16, -1000, -1000,
	-1000, 1505, 1504, 1352, -1000, -1000, 1384, 910, 33, -1000,
	-1000, -1000, -1000, -1000, -1000, 1818, 16766, 17270, 1502, 1648,
	705, -1000, -1000, -1000, 2739, 695, -1000, 27862, 1243, 575,
	431, 575, 1239, 1815, -1000, -1000, 1646, 1640, 28870, 21806,
	21302, 795, -1000, 925, -1000, -1000, -1000, 2321, -1000, -1000,
	2321, -1000, -1000, 16, 1499, -1000, -1000, 2314, 27862, 7166,
	-1000, -1000, 8688, 1808, -1000, 8688, -1000, -1000, -1000, -1000,
	-1000, 1804, 2167, -1000, -1000, -1000, -1000, -1000, -1000, 8688,
	8688, -1000, -1000, -1000, -284, 1497, -1000, -1000, 2300, 1492,
	1436, 27862, -1000, -1000, -276, -1000, 668, 1020, -1000, 668,
	699, -1000, -1000, 135, -1000, -1000, -1000, -90, 1581, -1000,
	1554, -52, -1000, 2314, -1000, 2298, -1000, -1000, -284, -206,
	-1000, -1000, -1000, -1000, 246, -1000, -1000, 118, -1000, -1000,
	1380, 368, -1000, 19790, -1000, -1000, -1000, -1000, -1000, 3868,
	11723, 1433, -1000, -1000, 27862, 27862, -1000, 27862, 27862, 431,
	8688, 99, 3868, 2321, 795, 925, -1000, -1000, 993, -1000,
	-1000, -1000, -1000, 2270, -1000, -1000, 1427, 27862, 1427, 20798,
	-1000, 2297, 2296, 1427, 667, -286, -1000, 1491, -17, -1000,
	-1000, 683, 668, -1000, -90, -1000, -40, -29, -1000, -1000,
	-1000, 90, 8688, -286, 27862, 339, 1489, -1000, -1000, 117,
	-1000, -1000, 1010, -1000, 1803, 8688, 403, 3850, -1000, 1166,
	1166, 893, 1166, 1166, 1166, 1166, 346, 344, 1166, 1166,
	1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166, 1166,
	1166, 1166, 1802, -1000, -1000, 1433, -1000, -1000, 1247, 10200,
	-1000, -1000, 1488, 17270, 623, 573, 1799, -1000, 315, 2343,
	-1000, 1237, 1229, -1000, 27862, -1000, 1786, 1770, 213, 1785,
	-1000, 1784, 1783, 27862, 1545, -1000, -90, 403, 2314, -1000,
	-1000, 1009, 1006, -1000, -1000, -1000, -1000, -1000, 1781, -1000,
	2295, -288, 435, -25, -29, -1000, 2293, -18, 2292, 2290,
	1638, -1000, 4141, -1000, -1000, -1000, 667, -1000, 2169, -1000,
	-1000, 4, -1000, -1000, -1000, 19790, 2190, 1461, 185, 2288,
	3868, -1000, 1349, 1345, 1166, 1166, 1344, 1475, 1474, 1473,
	1166, 1166, 1336, 1467, 29291, 1328, 1300, 1291, 1379, 1465,
	631, 1331, 1298, 1297, 27862, 1780, 1423, -1000, -1000, 1863,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1284, 1779, -112, -1000, -1000, 1775, 19790, 279, 279,
	19790, 19790, 19790, 1774, 478, -1000, 185, 2270, -1000, -1000,
	20294, 27862, 1436, -1000, 1462, 1767, 1279, -14, -24, 2287,
	-1000, 1436, 2282, 1436, 1436, -1000, -1000, 5149, -278, -49,
	266, 1458, -1000, 174, -1000, -1000, 2190, -1000, 2280, 311,
	-1000, -1000, -1000, 16766, 16766, -1000, -1000, -1000, -1000, 1457,
	1453, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 271, 27862, 1005, -1000, 1168, 1637, 8688,
	1766, -202, 19790, 996, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 982, 981, 963, 19790, -1000, -1000, -1000, 235, -1000,
	-1000, -1000, -1000, 962, -1000, -1000, -1000, 2220, 16262, -42,
	-1000, -1000, -1000, 1452, -1000, 1436, -1000, -1000, 1192, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1166, 1435, 150, -1000,
	-1000, -1000, 19286, 228, 232, 220, -1000, 406, -1000, -1000,
	-1000, -1000, -1000, -1000, 356, 932, -1000, 1423, 1412, -1000,
	1414, -1000, 2020, -1000, 75, 927, -1000, -1000, -1000, -1000,
	920, -1000, -1000, 27862, -1000, 27862, -1000, 917, -1000, -1000,
	-1000, 911, -1000, -1000, -1000, -1000, 5149, 1278, -1000, 1417,
	-1000, 27862, 225, 1273, 10200, 1764, 10200, 1755, 237, 1752,
	-1000, -1000, -1000, -1000, -1000, 478, -1000, 2019, 2000, 2328,
	-1000, -1000, -1000, -1000, 174, 174, 174, 174, 77, -1000,
	664, -1000, 1161, -1000, 18782, 27862, -1000, -1000, -1000, 909,
	1749, 2276, -1000, 2568, 27862, 1952, 27862, 1748, 1152, 10200,
	-1000, -1000, 2337, -1000, 2329, 595, 595, -1000, 27862, 6662,
	-1000, 788, -1000, -1000, 376, 230, -1000, 905, -1000, 894,
	18278, 1272, 1686, -1000, -1000, -1000, 1320, 322, -1000, -1000,
	-1000, 1427, 27862, 891, -1000, 1548, 218, -1000, -1000, -1000,
	877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, 1793,
	-1000, 1271, -1000, -1000, 2716, 523, -1000, -1000, 2716, 223,
	-1000, 395, 1747, -1000, -1000, 861, -1000, 1464, 568, 8688,
	-1000, 223, 3868, -1000, 8688, 855, -1000, 3868, 852, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 135, 2831, 215, 147, 144, 212, 2830, 2828, 2202,
	2193, 2827, 2826, 2822, 2820, 2819, 2818, 2817, 2815, 2814,
	2812, 2811, 2810, 2809, 2807, 2806, 2805, 2803, 2802, 2796,
	2795, 207, 2792, 2791, 2790, 2789, 2788, 2787, 2786, 2785,
	2781, 2780, 2778, 2774, 2773, 2772, 2770, 2768, 2763, 2761,
	2760, 2759, 2758, 2757, 2755, 2753, 2751, 132, 2749, 2190,
	2747, 2746, 2744, 2743, 2742, 2741, 188, 2740, 2738, 2731,
	2730, 2728, 2726, 2724, 2723, 2721, 2720, 2719, 2718, 2717,
	2715, 2713, 2712, 2711, 2710, 151, 2709, 2706, 149, 2705,
	2704, 2703, 2701, 209, 194, 63, 2700, 49, 141, 172,
	218, 2145, 216, 214, 161, 146, 74, 2699, 2170, 2698,
	130, 198, 128, 24, 2697, 156, 2682, 122, 44, 50,
	211, 119, 55, 126, 100, 2681, 192, 67, 92, 97,
	2680, 2679, 223, 165, 2678, 101, 2677, 2676, 2675, 2673,
	181, 105, 2671, 64, 2669, 78, 77, 95, 25, 2668,
	2667, 2666, 86, 2665, 2664, 2663, 2662, 154, 2661, 103,
	59, 2658, 2657, 2656, 58, 2655, 32, 2653, 52, 2652,
	2651, 2649, 2648, 65, 2647, 2646, 13, 15, 19, 2644,
	12, 1, 2643, 193, 114, 83, 116, 2642, 406, 2641,
	2640, 2639, 134, 2638, 420, 2637, 2635, 2634, 2632, 62,
	2631, 176, 54, 2630, 82, 106, 2629, 53, 180, 174,
	2628, 2624, 111, 42, 60, 110, 2621, 2620, 76, 195,
	20, 28, 0, 170, 35, 2619, 2618, 2617, 213, 2616,
	203, 171, 202, 98, 227, 138, 2615, 2614, 57, 2613,
	127, 80, 108, 17, 2612, 189, 2610, 333, 157, 2609,
	185, 2607, 125, 3, 112, 2606, 2600, 23, 242, 2596,
	2592, 2591, 159, 2590, 2587, 88, 164, 2585, 2582, 2577,
	27, 2576, 36, 26, 2574, 84, 2573, 222, 173, 179,
	109, 155, 139, 121, 196, 200, 72, 71, 2570, 1195,
	120, 85, 16, 2569, 197, 2568, 217, 206, 2567, 168,
	2564, 205, 339, 190, 2563, 158, 7, 39, 31, 2560,
	8, 2559, 140, 2558, 2556, 21, 2555, 22, 2554, 2549,
	2547, 2546, 6, 2524, 2523, 2520, 2, 4, 2519, 5,
	187, 61, 104, 2518, 113, 163, 2516, 2515, 81, 2511,
	2510, 2509, 245, 2508, 2507, 2505, 2504, 2501, 2500, 2498,
	2495, 2494, 66, 37, 2493, 2492, 2490, 2489, 69, 124,
	2488, 276, 184, 2487, 38, 153, 2468, 30, 2467, 33,
	29, 43, 2457, 102, 2453, 11, 162, 2452, 2451, 14,
	2450, 2449, 9, 10, 2448, 2446, 68, 2444, 45, 34,
	75, 73, 2443, 18, 167, 115, 2441, 2440, 210, 204,
	186, 2439, 136, 199, 225, 2437, 191, 2427, 2426, 2425,
	2423, 2419, 2408, 1198, 2403, 2400, 208, 56, 89, 90,
	2398, 2397, 2396, 70, 129, 99, 93, 175, 2394, 169,
	2392, 2390, 87, 2388, 2387, 2384, 2383, 2382, 166, 2380,
	2375, 2373, 201, 230, 2359,
}

//line mysql_sql.y:8499
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 437, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 91, 435, 435, 435, 436,
	436, 89, 89, 89, 78, 77, 90, 385, 385, 384,
	384, 383, 383, 339, 339, 382, 382, 382, 381, 381,
	381, 380, 380, 379, 379, 378, 378, 376, 376, 377,
	375, 374, 374, 374, 372, 372, 372, 368, 368, 370,
	369, 369, 371, 363, 363, 366, 366, 364, 364, 364,
	364, 367, 362, 362, 362, 361, 361, 76, 76, 76,
	291, 291, 75, 75, 305, 305, 305, 305, 305, 303,
	303, 303, 303, 303, 303, 302, 302, 301, 301, 306,
	306, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 67, 67, 67, 67, 70, 70, 70, 71, 300,
	300, 300, 68, 69, 69, 290, 290, 295, 295, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 299, 299, 299, 297, 297, 296, 296, 298, 298,
	61, 61, 61, 64, 63, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 62, 62, 62, 62, 62, 62,
	58, 58, 58, 58, 58, 57, 57, 59, 59, 287,
	287, 286, 72, 72, 73, 439, 439, 438, 440, 440,
	440, 440, 74, 81, 81, 81, 81, 81, 81, 81,
	80, 80, 83, 83, 82, 84, 66, 66, 66, 66,
	66, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	409, 409, 409, 411, 411, 226, 227, 441, 229, 225,
	225, 225, 405, 405, 406, 407, 408, 408, 408, 79,
	7, 7, 7, 7, 56, 54, 60, 60, 422, 422,
	55, 429, 429, 342, 342, 240, 240, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 345, 346, 236, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 38, 37, 37,
	37, 276, 276, 36, 442, 442, 209, 209, 45, 46,
	47, 48, 49, 50, 35, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 53, 53, 357, 357, 444, 444,
	444, 51, 52, 341, 341, 341, 43, 42, 41, 40,
	40, 34, 34, 33, 33, 39, 233, 233, 233, 235,
	235, 231, 443, 443, 317, 317, 234, 234, 32, 32,
	32, 232, 232, 208, 230, 230, 230, 8, 8, 6,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 18,
	20, 284, 284, 281, 19, 14, 13, 16, 12, 15,
	17, 5, 5, 5, 5, 9, 9, 10, 105, 105,
	147, 147, 417, 417, 413, 413, 414, 414, 414, 415,
	415, 416, 416, 85, 351, 351, 351, 351, 351, 351,
	4, 127, 127, 128, 128, 350, 350, 350, 350, 350,
	350, 350, 288, 288, 394, 394, 394, 395, 126, 126,
	121, 121, 352, 352, 254, 396, 396, 360, 360, 359,
	359, 358, 358, 124, 124, 125, 125, 108, 108, 94,
	94, 365, 365, 365, 365, 373, 373, 338, 338, 173,
	173, 202, 202, 203, 203, 98, 98, 99, 99, 99,
	99, 99, 99, 402, 402, 404, 404, 403, 123, 123,
	119, 119, 120, 120, 120, 118, 118, 117, 116, 116,
	115, 113, 113, 113, 114, 114, 114, 101, 101, 101,
	100, 100, 100, 100, 100, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 102, 102, 410,
	410, 410, 343, 343, 343, 348, 348, 185, 185, 186,
	186, 184, 184, 103, 103, 104, 104, 104, 104, 183,
	183, 182, 106, 106, 112, 111, 111, 107, 107, 107,
	107, 193, 193, 192, 192, 192, 192, 88, 92, 92,
	93, 131, 131, 191, 190, 190, 190, 130, 130, 129,
	129, 122, 122, 110, 110, 110, 110, 189, 109, 187,
	434, 434, 433, 433, 432, 430, 430, 430, 431, 431,
	431, 431, 387, 387, 387, 387, 387, 218, 218, 218,
	224, 224, 217, 217, 217, 217, 217, 228, 223, 223,
	219, 219, 220, 220, 220, 3, 3, 3, 3, 24,
	24, 24, 24, 24, 24, 30, 139, 140, 29, 132,
	132, 133, 133, 134, 134, 135, 136, 136, 136, 138,
	137, 28, 21, 418, 421, 419, 419, 423, 423, 423,
	424, 424, 424, 425, 425, 22, 420, 426, 426, 426,
	285, 285, 282, 283, 283, 280, 279, 279, 279, 428,
	428, 427, 427, 427, 221, 221, 23, 275, 275, 277,
	278, 278, 269, 269, 269, 269, 27, 273, 273, 274,
	274, 274, 274, 274, 270, 270, 272, 272, 268, 268,
	268, 268, 268, 26, 267, 267, 265, 265, 263, 263,
	264, 264, 262, 262, 262, 266, 266, 25, 25, 25,
	96, 95, 95, 95, 205, 205, 204, 204, 97, 344,
	344, 307, 307, 308, 308, 308, 311, 311, 323, 323,
	324, 324, 322, 322, 329, 329, 328, 328, 327, 327,
	326, 326, 325, 325, 325, 325, 320, 320, 319, 319,
	309, 309, 309, 309, 309, 310, 310, 310, 318, 318,
	321, 321, 164, 164, 165, 165, 165, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 392, 392, 393, 167,
	167, 167, 171, 171, 171, 171, 171, 171, 166, 166,
	168, 168, 148, 148, 146, 146, 141, 141, 142, 142,
	143, 143, 144, 144, 145, 145, 145, 145, 145, 145,
	293, 293, 390, 390, 391, 391, 386, 386, 386, 389,
	389, 389, 389, 389, 388, 388, 149, 200, 200, 200,
	222, 222, 222, 199, 199, 199, 163, 163, 162, 162,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 292, 292, 237, 237, 238,
	238, 180, 179, 179, 179, 179, 179, 177, 178, 176,
	176, 176, 176, 176, 175, 175, 174, 174, 174, 271,
	271, 172, 172, 170, 170, 170, 169, 169, 169, 330,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 246, 246, 251, 251, 401, 401,
	400, 150, 150, 150, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 159, 159, 159, 315, 315, 315, 315,
	315, 316, 316, 316, 313, 313, 314, 314, 255, 256,
	256, 349, 349, 312, 312, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 356, 356, 356, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 412, 412, 412,
	397, 397, 397, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 197, 197, 197, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 257, 257, 258,
	258, 353, 353, 353, 353, 353, 353, 354, 354, 355,
	355, 355, 355, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 244, 194, 194, 194, 259, 252, 252, 253,
	253, 247, 247, 247, 247, 247, 247, 247, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	248, 248, 250, 250, 261, 261, 261, 260, 260, 260,
	260, 260, 260, 260, 161, 161, 161, 161, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 152,
	152, 152, 152, 156, 156, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 157,
	157, 157, 157, 155, 155, 155, 155, 155, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 86, 87, 87, 154, 201, 201,
	331, 331, 334, 334, 332, 332, 333, 335, 335, 335,
	336, 336, 336, 337, 337, 337, 340, 340, 207, 207,
	207, 214, 214, 206, 206, 215, 215, 216, 216, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 4, 0, 1, 1, 0,
	1, 6, 8, 10, 9, 11, 2, 0, 2, 1,
	3, 3, 3, 0, 2, 1, 3, 5, 0, 2,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 0, 3, 3, 0, 3, 3, 0, 1, 3,
	0, 1, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 4, 6, 1,
	1, 1, 2, 4, 6, 1, 4, 1, 3, 3,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 2, 3, 4, 7, 2, 3, 3, 4, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 7, 7, 7, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 2, 5,
	5, 0, 2, 7, 0, 1, 0, 1, 5, 3,
	2, 4, 4, 4, 4, 1, 1, 1, 3, 2,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 6,
	7, 4, 4, 7, 8, 3, 0, 2, 2, 0,
	2, 2, 1, 1, 1, 1, 0, 1, 4, 4,
	5, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 3, 1, 4, 6, 4, 4, 4, 3,
	6, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 0, 4, 1, 3, 3, 1, 5, 6, 5,
	5, 3, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 4, 3, 4,
	5, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 3, 3,
	1, 3, 3, 3, 3, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 7, 7, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 2, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 4, 4,
	3, 2, 2, 2, 3, 2, 3, 4, 1, 3,
	4, 0, 2, 1, 1, 2, 2, 0, 1, 2,
	4, 1, 3, 1, 3, 2, 3, 1, 4, 3,
	0, 1, 1, 2, 5, 2, 2, 2, 0, 2,
	3, 3, 0, 1, 3, 1, 3, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 1, 12, 1,
	3, 0, 1, 1, 3, 1, 1, 2, 4, 1,
	1, 7, 7, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 0, 2, 7, 1, 0, 2, 2,
	1, 3, 2, 1, 3, 2, 1, 3, 2, 0,
	1, 3, 4, 3, 1, 1, 4, 1, 3, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 5, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 0,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 1, 7, 7, 7, 7, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 2,
	1, 2, 2, 1, 1, 2, 2, 2, 2, 2,
	1, 5, 6, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 4, 6, 6,
	1, 1, 1, 1, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 6, 8, 6, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -437, -2, -1, -3, -89, -4, -85, -5, -6,
	-8, -65, -80, -82, -84, -83, -31, -7, -79, -57,
	-58, -61, -67, -72, -75, -76, -77, -78, -90, -86,
	-87, -88, -98, -91, -24, -23, -22, -21, 397, 12,
	442, -9, -10, -402, -11, 232, -225, -226, -227, -229,
	-441, -32, -33, -34, -40, -41, -42, -43, -51, -52,
	-53, -35, -36, -37, -38, -45, -46, -47, -48, -49,
	-50, -39, -55, -54, -60, -56, 208, -59, 61, -62,
	-63, -64, -68, -69, -70, -71, -73, -74, 328, 334,
	387, 396, 524, 525, 46, -99, -101, 526, -25, -26,
	-27, -28, -29, -30, 204, 14, 475, -12, -15, -13,
	-16, -14, -19, -20, -18, -17, 227, 226, 37, 290,
	291, 292, 332, 225, 205, 13, 136, 137, 139, 140,
	30, 41, 310, -100, 67, 206, -102, 10, 528, 435,
	527, -108, 38, -146, -222, 70, -210, -213, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 445, 308, 309, 472, 244, 268,
	358, 271, 278, 136, 155, 149, 177, 169, 144, 248,
	283, 249, 77, 139, 428, 87, 408, 384, 142, 263,
	265, 267, 270, 250, 165, 160, 262, 246, 524, 158,
	251, 39, 252, 182, 253, 254, 477, 404, 307, 410,
	275, 382, 159, 405, 266, 407, 184, 188, 420, 334,
	153, 154, 412, 422, 181, 224, 42, 474, 236, 423,
	186, 180, 176, 431, 279, 277, 179, 152, 175, 247,
	50, 190, 189, 191, 378, 379, 380, 381, 255, 256,
	322, 419, 172, 161, 312, 145, 22, 426, 231, 409,
	335, 257, 272, 280, 185, 187, 238, 243, 476, 386,
	242, 276, 424, 157, 235, 264, 230, 427, 146, 328,
	337, 258, 140, 269, 421, 430, 49, 350, 151, 143,
	221, 137, 240, 245, 11, 259, 260, 261, 282, 281,
	273, 173, 237, 178, 163, 150, 174, 138, 239, 429,
	351, 522, 310, 367, 171, 168, 241, 214, 425, 411,
	141, 371, 352, 166, 284, 518, 519, 520, 323, 306,
	285, 286, 164, 228, 403, 287, 289, 377, 299, 353,
	385, 359, 354, 197, 293, 414, 183, 521, -108, -59,
	-10, -9, -100, -101, -146, 212, -230, 23, 382, -66,
	383, 208, 67, -222, -5, -4, -85, -57, -98, -228,
	-222, 290, 290, -228, 212, -222, 242, 366, -342, 217,
	-302, -275, 243, -301, -277, -304, -278, 31, 204, 206,
	205, 239, 14, 332, 213, 12, 10, 333, 225, 24,
	25, 27, 13, 334, 336, 28, 337, 340, 341, 342,
	41, 345, 346, 232, 70, 73, 250, -140, -222, 250,
	-253, -247, 94, 233, -249, -242, -243, -245, -382, -376,
	-241, 67, 120, 121, 128, 95, -244, -330, 35, 97,
	482, 131, 443, -195, -196, -197, -198, -222, -377, -375,
	73, 78, 81, 84, 85, 83, 82, 162, 80, 74,
	132, 133, -101, 70, -397, 490, -211, 511, 510, 46,
	-347, -355, 211, -353, 167, 228, 163, 12, 126, 377,
	164, 487, 507, 445, 491, 514, 484, 485, 479, 480,
	481, 483, 492, 494, 506, -356, 502, 512, 513, 500,
	72, 71, 505, 504, 493, 488, 489, 495, 478, 486,
	496, 497, 503, 508, 509, 316, 87, 317, 318, 435,
	311, 319, 217, 382, 55, 320, 321, 322, 323, 324,
	442, 325, 56, 326, 315, 232, 367, 327, 166, 183,
	447, 446, 448, 439, 436, 434, 437, 438, 440, 441,
	498, 499, 501, -298, -296, -222, -92, -93, 516, -117,
	-118, -188, 19, 6, 7, 8, 9, -435, 384, 476,
	293, 329, 214, 308, 367, 242, -269, -267, -344, 287,
	283, 222, 221, 88, 435, 211, 343, -413, -414, 201,
	202, 203, -404, 468, -403, -222, 318, 26, 212, 329,
	414, 415, 416, 417, 418, -44, -357, -341, 411, 410,
	-234, 409, 402, 413, 404, 309, 204, 469, -207, 353,
	385, 238, 432, 433, 330, 386, 420, 421, 405, 87,
	170, 167, 214, 308, 435, 367, -413, 141, 138, -289,
	141, 93, 146, 145, -289, 242, 366, 40, -295, 377,
	-294, -296, 420, 421, 431, 71, 72, 419, -207, 87,
	403, 403, -118, -188, -117, -99, -101, -88, -402, 308,
	367, 242, 213, 212, 214, 435, 290, 329, -343, -410,
	31, -348, 198, 199, 200, 32, 33, -1, -223, -220,
	-213, 70, 71, 72, 73, -124, 234, -146, 134, -124,
	-118, -117, -118, -146, -199, -222, 384, 103, -66, -66,
	383, -405, -406, -407, -409, 208, 383, 382, 134, 15,
	-228, -228, 65, -146, -277, 242, -302, -275, 35, 64,
	135, 215, 135, 64, 67, 330, 308, 367, 331, 435,
	212, 343, 214, 242, 344, 308, 367, 212, 214, 435,
	242, 308, 212, 214, 367, 242, 344, 402, 403, 214,
	26, 335, 338, 339, 403, -361, 431, -361, 135, 93,
	90, 91, 92, -247, 110, -260, 103, 104, 105, 106,
	107, 108, 109, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 113, 94, 111, 115, 112,
	96, -101, -247, -253, 46, -245, -245, -245, -245, -330,
	-251, -247, 67, 67, 67, 134, 73, -247, 67, 67,
	67, 67, 67, 67, 67, 67, -354, 67, 67, -257,
	-258, 67, 67, 73, 73, 67, 67, 67, 73, -258,
	-258, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 135, -152,
	-156, -153, -155, -154, -158, -157, 167, 168, 131, 171,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	30, 183, 228, 163, 164, 165, 166, 184, 149, 169,
	473, 192, 150, 193, 151, 194, 152, 195, 153, 154,
	196, 155, 158, 159, 160, 157, 134, -118, 135, 67,
	-94, 38, -120, 21, -102, -101, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 78, -139, -222, -132, -222,
	-265, 217, -265, -265, -265, 213, -265, 212, 212, 212,
	-415, 148, 135, -404, -123, 67, -233, 111, 115, 23,
	240, 240, 277, -442, -443, 15, 113, -231, -443, -231,
	-233, -444, 213, 412, 42, 241, 240, -119, -120, -119,
	406, 403, -317, 407, 408, -234, -233, -233, -234, -233,
	212, 214, 435, -442, 240, -442, 30, 30, -342, -342,
	469, -208, -222, -342, -416, 216, 424, 475, 144, 145,
	146, -277, 242, 242, 135, 103, 23, -297, 103, 114,
	-296, -296, -296, -297, -297, -166, 40, -221, 131, -222,
	73, -166, 40, -439, -438, -146, -119, -102, -101, 68,
	68, 68, -342, -342, -342, -342, -342, -342, -342, -228,
	-132, -103, -104, 122, -247, -222, -103, 38, 403, 38,
	-350, -127, -98, 309, 67, 67, -222, -351, 46, -98,
	67, 30, -119, -94, -120, 134, 78, 73, -66, 68,
	135, -408, 84, 85, -411, 181, 173, -222, -81, 73,
	-3, -4, -5, -6, -31, -57, -98, -378, -376, 67,
	31, 376, 64, 15, -303, 212, 435, 329, 238, 214,
	308, -301, -284, -281, -279, -221, -277, -280, -279, -306,
	-199, 403, -95, 388, 289, -95, -247, -247, -247, -247,
	-247, 83, 94, 306, 84, 85, -242, -261, 31, 285,
	286, -243, -243, -243, -243, -243, -243, -243, -243, -243,
	-243, -243, -243, -250, -259, -330, 67, 113, 111, 115,
	112, 96, -245, -245, -243, -243, 68, 135, -401, -400,
	98, -247, -247, -247, -222, -398, -399, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 320, 315,
	321, 319, 311, 327, 322, 323, 166, 466, 467, 460,
	461, 462, 463, 464, 465, -252, -253, -252, -247, -398,
	-252, -194, 32, 31, -247, -412, 304, 303, 305, -121,
	-222, -252, 68, 68, 68, 78, -253, -252, -243, -252,
	-399, -194, -194, -253, -253, -194, -194, -194, -194, 122,
	-194, -194, -194, -194, -194, -194, -194, -194, -296, 40,
	-337, 351, 350, -331, -333, 67, -332, 67, -332, -331,
	-331, 67, 67, -334, 67, -334, -334, -331, -335, 67,
	-335, -336, 67, -335, -222, -119, -93, -359, -358, -247,
	40, 517, -94, -247, -116, -115, -247, -436, 73, 34,
	67, 134, -146, 94, -418, -222, -285, -282, -279, -275,
	-220, -222, -265, -265, -265, -416, -403, 34, -122, -222,
	-184, 16, -245, -245, -279, 242, -442, -233, -209, -208,
	-235, -443, -230, -235, -184, -443, -233, -233, -235, -231,
	403, -184, -184, -317, -232, -222, -232, -265, -209, -209,
	-146, -418, -418, 30, -285, -111, -106, -110, -107, -112,
	-187, -189, -109, 67, -146, -101, -222, 425, 426, 142,
	145, 144, 31, 376, -300, 376, 31, -275, -294, -290,
	73, 377, -280, -299, 64, 131, -358, -297, -297, -297,
	-299, -299, 130, 135, -440, 424, 425, 201, -94, -418,
	-284, -275, -222, -148, -146, -148, -223, 67, -183, 135,
	-182, 15, -217, -222, 34, 73, 134, -183, 73, -148,
	73, -288, 64, 46, 30, 67, -126, 68, -121, -125,
	-222, -352, -254, -396, 516, -126, 68, -394, -395, -121,
	-94, -94, -215, -216, -206, -212, -219, -220, -213, 209,
	31, 93, 34, 36, 316, 348, 96, 131, 20, 97,
	167, 130, 318, 443, 317, 204, 59, 446, 448, 447,
	436, 434, 369, 373, 375, 372, 435, 402, 40, 14,
	37, 226, 32, 33, 124, 206, 100, 101, 229, 35,
	227, 85, 44, 23, 62, 15, 17, 18, 319, 368,
	217, 216, 113, 388, 213, 57, 12, 133, 38, 110,
	370, 53, 89, 45, 55, 111, 115, 21, 437, 438,
	41, 387, 396, 471, 233, 126, 320, 321, 60, 94,
	376, 83, 43, 64, 90, 19, 58, 112, 207, 442,
	56, 374, 324, 326, 336, 468, 325, 211, 413, 10,
	315, 444, 30, 225, 54, 212, 99, 215, 84, 232,
	6, 88, 13, 61, 65, 439, 440, 441, 46, 98,
	16, 327, 475, 389, 390, 391, 392, 393, 394, 395,
	192, 193, 194, 195, 196, 274, 220, 218, 222, 223,
	516, 517, 198, 199, 303, 305, 170, 201, 202, 203,
	234, 148, 7, 355, 356, 357, 360, 361, 362, 363,
	364, 365, 366, 525, 397, 398, 399, 400, 401, 415,
	416, 417, 418, 210, 314, 23, -66, -406, 134, 135,
	-122, -303, -283, -280, -305, 122, 70, -291, 135, 475,
	529, 71, 215, -428, -427, 368, 68, 135, -362, 216,
	442, 73, 530, 197, -362, 83, 306, 84, 85, -330,
	-253, -250, -245, -245, -243, -243, -248, 229, -248, 93,
	-247, -246, -400, 100, -247, 34, 68, 135, 65, 134,
	68, 68, 15, 15, 68, -247, 68, 15, 15, -247,
	68, 134, 68, 68, 68, 65, 68, 135, 68, 135,
	-253, -247, 68, 68, -247, -247, -247, -253, 68, -247,
	-247, -247, -247, -247, -247, -247, -247, -247, -340, 352,
	78, 78, -201, 73, -201, 78, 78, 78, 135, 68,
	73, 135, 22, 135, -113, 36, 37, -140, -133, -134,
	-135, -136, -152, -199, 168, 171, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 228, 163, 164,
	165, 166, 184, 149, 169, 150, 151, 152, 153, 154,
	155, 158, 159, 160, 157, -222, -123, 35, -421, 355,
	-429, 135, 40, -427, -268, 65, -263, -264, -262, -266,
	40, -146, -146, -146, 15, -105, -147, -222, 67, 68,
	135, -247, -276, 65, -278, -209, -184, -223, -146, -222,
	-184, -184, -233, -235, -235, -231, 134, -208, -123, -422,
	355, 30, 314, -429, 30, -190, -191, -192, -193, 53,
	57, 59, 54, 55, 56, 60, 30, 135, -218, -224,
	34, -219, 73, -220, -213, -218, -101, -106, -111, -218,
	67, 143, 146, 146, 145, 215, 67, 103, -299, -299,
	-299, 40, -221, -438, 431, 425, 64, 135, -133, -184,
	-104, -106, -222, 73, -222, 122, -184, -173, 519, 38,
	-365, 407, 39, -352, -394, -128, -418, 68, 135, -127,
	309, 68, 135, 135, 67, 68, 46, 135, 103, 134,
	384, -222, -376, 68, -305, 135, 215, 134, 134, -281,
	334, -221, -283, 20, 475, -199, 38, -205, -204, 73,
	530, 38, 68, -248, -248, 93, -245, -242, 68, 101,
	-247, 99, -150, -152, 350, 351, -151, -157, 131, 167,
	228, 166, 165, 163, 350, 351, -166, -222, -247, -247,
	68, -247, -247, 15, -222, -166, -243, -247, -118, 68,
	-312, 398, -312, 68, 68, 68, 68, -312, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 135,
	68, 68, 68, 135, 68, 135, -358, -365, -247, -247,
	-115, -114, 43, 342, 68, 135, -152, 34, -424, 409,
	357, -214, 103, -240, -239, 310, 41, -345, 377, 363,
	364, -282, 242, 64, 298, 299, 300, 301, -262, -207,
	130, 253, 67, 67, 67, -146, -105, -222, 15, 135,
	-417, 134, -1, -222, -275, -233, -184, -443, -184, -233,
	-233, -235, -222, 34, -424, -214, 314, 103, -240, -287,
	-286, -199, -110, -110, -110, -110, 53, 53, 53, 58,
	53, 58, 53, -192, -287, -112, -123, -224, 68, -434,
	-433, -432, -430, 61, 216, 62, -252, 146, -283, -236,
	73, -290, -146, -146, 68, -186, 17, 134, -186, 78,
	73, -373, 394, 389, 391, 89, 68, 135, -127, -121,
	46, 67, -222, -254, -360, -359, 46, -98, -352, -395,
	-358, -215, -212, -220, -213, 78, 15, -280, -275, 122,
	122, 70, 335, -291, 73, 356, 73, 212, 531, 135,
	103, -205, 212, -242, -247, 68, -159, 154, 153, -159,
	68, -331, -332, -331, -334, -331, -159, -159, 68, 68,
	23, 68, 68, 68, -247, 68, 68, 135, -349, 444,
	-312, 67, -312, -312, -312, -312, -312, -312, -312, -312,
	-312, -312, -312, -312, 73, 78, 78, -373, 44, 45,
	73, 210, -135, 40, -98, -425, 77, -419, 73, -222,
	-426, 77, 358, 133, 312, 40, 359, 360, 374, 307,
	78, 78, 365, -420, 70, -146, -214, -214, -214, -141,
	-142, -143, -149, -144, -199, -238, -145, 220, 218, 222,
	-391, 88, 223, 274, 89, 213, -141, -141, -124, 65,
	134, -106, -147, -222, 122, 68, -184, -222, -184, -184,
	-233, -98, -425, -419, 103, 73, -426, -184, 135, 103,
	-130, -129, 64, 65, -131, 64, -129, 53, 53, -184,
	-432, -431, 23, -391, -391, -391, 68, 68, -185, 18,
	20, 122, -185, -173, -338, 518, -369, -371, 389, 20,
	20, 13, -98, -418, 46, -98, -352, -128, 68, -352,
	-275, -291, 377, -146, -204, 73, 531, -146, -247, 68,
	-247, 68, 73, -256, -255, 234, 68, 68, -338, -137,
	-152, -241, 73, -423, 368, 73, 73, 78, 40, 78,
	133, 361, -346, 67, -166, -168, -221, 131, 73, 68,
	135, -152, -145, -222, 89, -390, -391, -265, -390, 89,
	67, 68, 68, -218, -106, -222, -184, -417, 134, -184,
	-184, -423, 73, -118, -286, -358, -247, 67, -247, 67,
	53, 19, 17, -247, -253, -173, 73, 20, 73, -367,
	73, -287, -352, 68, -127, -97, -363, -317, 68, 68,
	-312, -118, 20, -173, 474, 20, 475, 311, 40, 78,
	40, 362, -270, -272, -199, 67, -164, -165, -181, 348,
	244, -266, 248, 77, 249, 384, 250, 213, 252, 253,
	254, 224, 255, 256, 257, 377, 258, 259, 260, 261,
	331, 6, 294, -143, -163, -162, -160, 83, 94, 40,
	348, -161, 77, 130, 267, 245, 268, -180, -237, 64,
	354, 218, 88, 89, 336, -238, -386, -388, -222, -388,
	-222, -386, -386, -265, -247, -96, -95, -164, -184, -184,
	-119, -122, -387, -222, 218, 20, 20, -202, 520, 73,
	391, -97, -372, 394, -366, -364, 389, 390, 391, 392,
	-314, -313, -316, 395, 276, 401, -253, -202, -138, -222,
	73, 356, 73, 311, 68, 135, -331, -247, -307, 234,
	135, -181, -214, -214, -207, 130, -214, -214, -214, -214,
	251, 251, -214, -214, -214, -214, -214, -214, -214, -214,
	-214, -214, -214, -214, -214, -214, 67, -160, 83, -243,
	73, -168, -169, 40, 266, 262, -170, 40, 246, 247,
	-172, 67, 274, 13, 89, 89, -146, 67, 65, 284,
	67, 67, 67, -388, 68, -97, -307, -118, 68, 68,
	135, 67, 20, -339, 521, -374, 216, -370, -371, 393,
	-364, 20, 391, 20, 20, 68, -315, 96, 361, 365,
	-247, 34, 377, -273, -272, -113, 68, -308, 283, 20,
	-181, 78, 78, -214, -214, 78, 73, 73, 73, -214,
	-214, 78, 73, -224, 78, 78, 78, 78, 40, 73,
	-171, 40, 262, 266, 263, 264, 265, 78, 40, 78,
	40, 78, 40, -222, 67, -392, -393, 73, 78, 67,
	-353, -271, 67, -270, -389, 298, 299, 300, 302, 301,
	-389, -270, -270, -270, 67, -293, -292, 275, 94, -308,
	-119, -222, 218, -203, -222, -367, 73, -381, 67, 78,
	-369, -368, -370, 20, -367, 20, -367, -367, -315, 516,
	399, 400, 399, 400, 73, -274, 224, 77, 475, 296,
	297, -113, 20, -309, 276, 277, -310, -321, 279, -166,
	-166, 73, 73, -167, 245, -148, 68, 135, 103, 68,
	-247, -257, -175, -174, 471, -270, 68, 68, 68, 68,
	-270, 275, 68, 135, -385, 30, 68, -380, -379, -200,
	-375, -222, 394, 395, 73, -367, 93, -214, 73, 295,
	-199, 67, -319, 280, 67, -317, 67, -317, 89, 299,
	246, 247, 68, -393, 73, 68, -179, -177, -178, 64,
	405, 272, 273, 68, -273, -273, -273, -273, 68, -222,
	-384, -383, -382, 68, 135, 134, -315, 78, -220, -306,
	-311, 281, 78, -243, 67, -243, 67, -318, 278, 67,
	-292, -178, 64, -177, 64, 14, 13, -180, 135, 103,
	-379, -222, 68, -323, 67, 20, 68, -306, 68, -306,
	67, 103, -243, -176, 269, 270, 30, 145, -176, -383,
	40, -247, 134, -324, -322, 234, -310, 68, 68, 68,
	-306, 78, 68, 83, 40, 271, -222, 68, 135, 70,
	-320, 282, 68, -322, -325, 46, 78, -329, -326, 67,
	-181, 236, 113, -329, -181, -328, -327, 281, 237, 67,
	68, 135, 70, 233, 67, -253, -327, -326, -253, 68,
	68,
}

var yyDef = [...]int{
	34, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 685, 686, 687, 688, 0, 0,
	0, 451, 452, 0, 429, 0, 0, 0, 0, 0,
	0, 336, 337, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 300, 301, 302, 303, 0, 235, 231, 210,
	211, 212, 171, 172, 173, 174, 242, 243, 313, 0,
	0, 0, 0, 0, 0, 535, -2, 36, 689, 690,
	691, 692, 693, 694, -2, 464, 0, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 289, 290, 291, 285,
	286, 288, 287, -2, 0, 464, 224, 0, 215, 215,
	0, 0, 0, 555, 0, 0, 570, 592, 34, 0,
	0, 513, 0, 518, 894, 930, 931, 932, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 513, 236,
	453, 454, 555, 555, 427, 0, 271, 0, 1561, 275,
	0, 0, 0, 424, 266, 267, 268, 269, 270, 0,
	677, 0, 0, 262, 0, 230, 1620, 0, 0, 0,
	0, 0, 0, 115, 747, 117, 749, 121, 128, 0,
	0, 133, 134, 137, 138, 139, 140, 141, 0, 145,
	0, 147, 150, 0, 152, 153, 0, 156, 157, 158,
	0, 168, 169, 170, 750, 751, -2, 46, 697, 95,
	1304, 1199, 0, 1206, 1207, 1218, 1229, 1002, 1003, 1004,
	1005, 0, 0, 0, 0, 0, 1012, 1013, 0, 1026,
	1712, 0, 0, 1020, 1021, 1022, 1023, 55, 67, 68,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	0, 1172, 989, 930, 0, 1720, 0, 1740, 1739, 0,
	0, 1157, 0, 1147, 0, -2, -2, 0, 0, 1687,
	-2, 1717, 1736, 1744, 1721, 1743, 1714, 1715, 1709, 1710,
	1711, 1713, 1722, 1724, 1735, 0, 1731, 1741, 1742, 0,
	69, 70, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1163, -2, 1165, 1166, 1168,
	1169, 1170, 1171, -2, 1174, 1175, 1176, -2, -2, 1179,
	1180, 1181, 1182, 1183, 1184, 1187, -2, 1189, -2, -2,
	1159, 1160, 1161, 1162, 1151, 1152, 1153, 1154, 1155, 1156,
	-2, -2, -2, 0, 208, 206, 555, 628, 0, -2,
	0, 0, 0, 575, 578, 581, 584, 0, 37, 38,
	0, 0, 776, 776, 776, 776, 0, 776, 0, 0,
	0, 753, 754, 755, 774, 775, 800, 469, 465, 466,
	467, 468, 543, 0, 545, 548, 406, 358, 0, 0,
	0, 370, 364, 0, 0, 406, 0, 0, 550, 550,
	0, 416, 406, 406, -2, 406, 0, 375, 376, 377,
	364, 0, 364, 381, 382, 383, 394, 395, 417, 1328,
	0, 0, 313, 313, 0, 313, 471, 225, 226, 214,
	216, 0, 220, 0, 213, 1620, 0, 0, 182, 1687,
	187, 0, 1568, 1634, 1583, 0, 0, 1601, 0, -2,
	0, 252, 550, 0, 556, 0, 555, 0, 0, 313,
	313, 313, 313, 313, 313, 313, 0, 0, 0, 0,
	593, 594, 589, 590, 591, 595, 596, 3, 0, 678,
	679, 682, 683, 684, 0, 481, 0, 517, 0, 0,
	550, -2, 0, 428, 272, 933, 0, 0, 276, 277,
	0, 0, 292, 0, 295, 280, 281, 282, 0, 0,
	264, 265, 0, 0, 232, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 125, 122, 129, 132, 142,
	149, 0, 161, 163, 166, 123, 130, 135, 136, 143,
	164, 124, 126, 127, 131, 165, 167, 144, 148, 162,
	146, 151, 154, 155, 160, 0, 96, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 1199, 0, 0, 1008, 1009, 1010, 1011, 1014,
	0, 1027, 0, 0, 0, 0, 1258, 0, 1197, 1197,
	0, 1197, 1193, 0, 0, 1197, 1136, 0, 0, 1138,
	1148, 0, 0, 1141, 1142, 1197, 0, 1197, 1146, 1132,
	1133, 0, 1193, 1193, 0, 0, 1193, 1193, 1193, 1193,
	1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 0, 1305,
	1323, 1260, 1261, 1262, 1310, 1264, 1314, 1314, 1310, 1310,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 0,
	0, 1303, 1283, 1312, 1312, 1312, 1310, 1307, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1317, 1317, 1320, 1317, 0, 550, 0, 0,
	538, 0, 519, 0, 572, 574, 0, 576, 577, 579,
	580, 582, 583, 585, 586, 39, 0, 696, 0, 699,
	0, 0, 0, 0, 0, 0, 0, 776, 776, 776,
	471, 470, 0, 544, 0, 0, 601, 0, 0, 0,
	364, 406, 369, 366, 365, 412, 413, 409, 0, 409,
	601, 0, 388, 389, 390, 406, 406, 396, 551, 397,
	398, 409, 0, 414, 415, 0, 601, 601, 0, 405,
	0, 0, 776, 366, 379, 366, 1329, 1330, 0, 0,
	0, 0, 423, 0, 0, 472, 0, 0, 218, 0,
	223, 175, 0, 0, 0, 0, 0, 0, 204, 205,
	0, 0, 0, 0, 0, 195, 198, 888, 889, 744,
	745, 199, 200, 244, 245, 0, 519, 571, 573, 567,
	568, 569, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 609, 603, 605, 672, 55, 609, 0, 0, 0,
	492, 0, 486, 0, 0, 0, 895, 473, 505, 475,
	0, 494, 519, 541, 519, 0, 273, 0, 278, 0,
	0, 294, 296, 297, 298, 283, 284, 425, 260, 261,
	253, 254, 255, 256, 257, 258, 259, 263, 65, 0,
	233, 234, 0, 0, 0, 109, 110, 111, 112, 113,
	114, 116, 100, 441, 443, 736, 748, 0, 739, 0,
	119, 159, 92, 0, 0, 92, 1200, 1201, 1202, 1203,
	1204, 1208, 0, 1210, 1212, 1214, 1216, 0, 1234, -2,
	-2, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1219, 1232, 1233, 0, 0, 0, 0,
	0, 0, 1230, 1230, 1225, 0, 1006, 0, 1024, 1028,
	0, 0, 0, 0, 56, 1192, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 0, 1198, 0, 1199, 0,
	0, 0, 1194, 1195, 0, 0, 1097, 1098, 1099, 0,
	500, 0, 1158, 1137, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	1326, 1324, 1325, 1263, 1311, 0, 1288, 0, 1289, 1290,
	1291, 0, 0, 1284, 0, 1285, 1286, 1287, 1279, 0,
	1280, 1281, 0, 1282, 207, 627, 629, 0, 509, 511,
	512, 0, 539, 552, 557, 558, 561, 35, 40, 0,
	701, 0, 548, 0, 0, 713, 311, 730, 0, 746,
	768, -2, 0, 0, 0, 0, 546, 0, 0, 641,
	357, 0, 407, 408, 361, 1620, 366, 601, 371, 367,
	372, 0, 411, 373, 374, 0, 601, 601, 406, 409,
	409, 401, 402, 0, 418, 421, 419, 0, 378, 380,
	548, 308, 0, 0, 311, 614, 0, 615, 616, 612,
	643, 667, 667, 0, 667, 647, 894, 227, 228, 0,
	0, 222, 176, 177, 0, 179, 180, 181, 188, 183,
	185, 0, 0, 189, 201, 202, 203, 0, 0, 0,
	193, 194, 0, 0, 247, 248, 250, 0, 537, 439,
	440, 444, 0, 446, 892, 447, 448, 701, 601, 0,
	610, 0, 606, 673, 0, 675, 0, 601, 529, 0,
	521, 480, 0, 505, 494, 0, 0, 481, 498, 0,
	515, 474, 502, 0, 506, 0, 0, 479, 495, 0,
	540, 542, 934, 0, 1335, -2, 1337, -2, -2, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 0, 279, 293, 0, 0,
	0, 0, 103, 733, 0, 104, 108, 98, 0, 0,
	0, 738, 0, 735, 740, 0, 118, 0, 0, 93,
	94, 791, 796, 0, 0, 1209, 1211, 1213, 1215, 1217,
	0, 1220, 1230, 1230, 1226, 0, 1221, 0, 1223, 0,
	1200, 0, 1029, 0, 0, 0, 1017, 0, 0, 0,
	1085, 1086, 0, 0, 1090, 0, 1092, 0, 0, 0,
	1096, 0, 1135, 1150, 1139, 0, 1143, 0, 1145, 0,
	555, 0, 1063, 1063, 0, 0, 0, 0, 1063, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 1259, 1327,
	0, 0, 0, 1308, 0, 0, 0, 0, 0, 630,
	521, 0, 0, 0, 564, 562, 563, 0, 0, 702,
	703, 705, 706, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1553, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 700, 0, 777, 720, 1331,
	315, 0, 0, 732, 0, 0, 773, -2, 780, 0,
	786, 0, 0, 0, 0, 0, 458, 462, 34, 549,
	0, 602, 359, 0, 360, 406, 368, 410, 601, 894,
	391, 392, 601, 406, 406, 409, 0, 420, 0, 720,
	1331, 0, 0, 315, 0, 0, 0, 0, 0, 634,
	0, 0, 633, 0, 0, 0, 0, 0, 548, 668,
	0, 670, 671, 680, 681, 645, -2, 0, 614, 650,
	1197, 229, 217, 219, 0, 0, 0, 0, 190, 191,
	192, 196, 197, 246, 249, 251, 0, 0, 0, 599,
	604, 611, 674, 676, 56, 607, 599, 41, 0, 0,
	525, 0, 0, 485, 491, 0, 483, 481, 0, 0,
	0, 514, 0, 505, 507, 0, 505, 0, 0, 0,
	0, 426, 66, 299, 0, 0, 0, 0, 0, 442,
	0, 737, 100, 0, 0, 120, 0, 0, 794, 0,
	796, 0, 1196, 1222, 1224, 0, 1231, 1227, 1007, 1015,
	1025, 0, 0, 1031, 1043, 1043, 0, 1034, 1310, 1314,
	1037, 1310, 1312, 1310, 1043, 1043, 0, 57, 0, 0,
	1091, 0, 0, 0, 501, 0, 0, 0, 1061, 1063,
	1067, 0, 1068, 1063, 1063, 1063, 1063, 1073, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1316, 1315, 1301, 0,
	1302, 1313, 1318, 0, 1321, 0, 510, 525, 553, 554,
	559, 560, 0, 0, 0, 0, 707, 0, 723, 721,
	722, 0, 1332, 727, 316, 317, 318, 319, 0, 0,
	0, 731, 0, 0, 769, 770, 771, 772, 781, 1331,
	1331, 1331, 896, 896, 896, 513, 0, -2, 0, 0,
	460, 0, 0, 642, 362, 601, 384, 0, 399, 601,
	601, 406, 422, 0, 723, 0, 0, 0, 727, 601,
	239, 0, 637, 631, 0, 620, 635, 636, 623, 0,
	625, 0, 621, 622, 601, 613, 644, 669, 646, 649,
	651, 652, 658, 0, 0, 0, 0, 221, 178, 0,
	335, 184, 445, 893, 450, 597, 0, 0, 597, 530,
	529, 527, 80, 0, 0, 0, 482, 0, 0, 499,
	505, 0, 516, 503, 0, 508, 505, 478, 477, 496,
	497, 935, 1336, 1333, 1334, 274, 0, 734, 100, 105,
	106, 107, 101, 99, 741, 0, 743, 0, 792, 796,
	0, 0, 0, 1228, 1030, 1016, 1032, 1044, 1045, 1033,
	1018, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1019, 1087,
	0, 1089, 1093, 1094, 0, 1140, 1144, 0, 0, 0,
	1066, 1059, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1309, 0, 0, 527, 565, 566,
	695, 0, 704, 0, 711, 712, 0, 0, 715, 716,
	725, 0, 0, 0, 321, 322, 0, 0, 0, 334,
	330, 331, 332, 312, 726, 0, 0, 0, 0, 0,
	897, 898, 900, 901, 0, 0, 903, 959, 0, 912,
	776, 912, 0, 0, 914, 915, 0, 0, 667, 0,
	0, 601, 459, 462, 463, 547, 363, 601, 403, 400,
	601, 304, 305, 0, 0, 306, 310, 555, 0, 0,
	617, 638, 0, 0, 618, 0, 619, 624, 626, 238,
	653, 0, 0, 655, 656, 657, 648, 186, 587, 0,
	0, 608, 588, 42, 529, 0, 526, 81, 0, 0,
	0, 0, 487, 484, 505, 490, 489, 0, 504, 476,
	102, 97, 742, 481, 795, 797, 793, 83, 0, 1095,
	0, 1063, 1062, 555, 1060, 0, 1319, 1322, 529, 0,
	710, 708, 724, 714, 0, 728, 729, 0, 323, 324,
	0, 327, 333, 0, 782, 783, 890, 891, 784, -2,
	0, -2, 902, 960, 924, 924, 913, 924, 924, 776,
	0, 0, -2, 601, 601, -2, 456, 461, 0, 385,
	404, 309, 307, 550, 240, 241, 639, 0, 632, 662,
	659, 0, 0, 598, 600, 531, 528, 0, 522, 524,
	91, 493, 488, 482, 83, 44, 74, 0, 1088, 1134,
	1065, 1056, 0, 531, 0, 0, 0, 320, 325, 0,
	328, 329, 0, 764, 1310, 0, 801, -2, 844, 1331,
	1331, 0, 1331, 1331, 1331, 1331, 0, 0, 1331, 1331,
	1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331, 1331,
	1331, 1331, 0, 899, 926, -2, 938, 940, 0, 0,
	943, 944, 0, 0, 0, 0, 981, 950, 0, 0,
	954, 0, 1246, 1247, 0, 958, 0, 916, 925, 0,
	925, 0, 0, 924, 0, 788, 83, 801, 555, 457,
	237, 0, 0, 663, 665, 660, 661, 43, 0, 82,
	0, 53, 71, 0, 84, 85, 0, 0, 0, 0,
	0, 1057, 0, 1051, 1052, 1053, 1058, 520, 0, 709,
	717, 0, 719, 326, 757, 0, 561, 0, 803, 0,
	785, 846, 0, 0, 1331, 1331, 0, 0, 0, 0,
	1331, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 941, 942,
	945, 946, 947, 986, 987, 988, 948, 983, 984, 985,
	949, 0, 0, 0, 1244, 1245, 979, 0, 0, 0,
	0, 0, 0, 0, 910, 790, 803, 550, 640, 654,
	0, 0, 0, 45, 0, 58, 0, 80, 77, 0,
	86, 0, 0, 0, 0, 1064, 1054, 0, 0, 0,
	0, 0, 718, 756, 765, 766, 561, 787, 0, 840,
	845, 847, 848, 0, 0, 851, 852, 853, 854, 0,
	0, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 882, 883, 884, 885, 886, 887, 867, 868, 869,
	870, 871, 872, 879, 0, 0, 876, 0, 0, 0,
	1147, 974, 0, 0, 917, 919, 920, 921, 922, 923,
	918, 0, 0, 0, 0, 909, 911, 955, 0, 789,
	455, 664, 666, 0, 533, 523, 54, 47, 0, 0,
	75, 76, 78, 0, 87, 0, 89, 90, 0, 1046,
	1047, 1049, 1048, 1050, 698, 758, 1331, 0, 0, 762,
	763, 767, 0, 828, 0, 0, 834, 0, 841, 849,
	850, 855, 856, 873, 0, 0, 875, 0, 0, 982,
	0, 953, 962, 975, 0, 0, 757, 757, 757, 757,
	0, 956, 532, 0, 798, 0, 59, 0, 61, 63,
	64, 927, 72, 73, 79, 88, 0, 0, 760, 0,
	804, 0, 806, 0, 0, 0, 0, 0, 838, 0,
	880, 881, 874, 877, 878, 951, 961, 963, 964, 0,
	976, 977, 978, 980, 904, 905, 906, 907, 0, 534,
	48, 49, 0, 60, 0, 0, 1055, 759, 761, 0,
	808, 0, 829, 0, 0, 0, 0, 0, 0, 0,
	952, 965, 0, 966, 0, 0, 0, 908, 0, 0,
	62, 928, 805, 802, 0, 840, 830, 0, 832, 0,
	0, 0, 0, 967, 969, 970, 0, 0, 968, 50,
	51, 52, 0, 0, 810, 0, 826, 831, 833, 835,
	0, 839, 837, 971, 973, 972, 929, 809, 0, 822,
	807, 0, 836, 811, -2, 0, 827, 812, -2, 0,
	820, 0, 0, 813, 821, 0, 816, 0, 0, 0,
	815, 0, -2, 823, 0, 0, 817, -2, 0, 825,
	824,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 125, 117, 3,
	67, 68, 122, 120, 135, 121, 134, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 528,
	104, 103, 105, 3, 529, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 530, 116, 531, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 118, 119,
	124, 126, 129, 130, 131, 132, 133, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:628
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:634
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:670
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:675
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:681
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:701
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:707
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:722
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:728
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:737
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:746
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:756
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:824
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:830
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:837
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:845
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:849
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:863
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:867
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:871
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:890
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:899
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:910
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:914
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:920
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:924
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:934
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:940
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:964
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:983
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:987
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:991
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1015
		{
			yyVAL.str = ""
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1022
		{
			yyVAL.str = yyDollar[3].str
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1027
		{
			yyVAL.str = "\n"
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1034
		{
			yyVAL.str = yyDollar[3].str
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1043
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1067
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1071
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1077
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1083
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1101
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1118
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1164
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1177
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1188
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1215
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1228
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1241
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1247
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1253
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1260
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1268
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1304
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1308
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1314
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1321
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1330
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1334
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1524
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1528
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1532
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1536
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1548
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1555
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1571
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1625
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1632
		{
			yyVAL.str = yyDollar[3].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1638
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1648
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1673
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1681
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1704
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1727
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1734
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1749
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1756
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1786
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1790
		{
			yyVAL.str = yyDollar[1].str
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1797
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1803
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1807
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1818
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1824
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1867
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1871
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1875
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1879
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1889
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1939
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1961
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1965
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1971
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1987
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1991
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1997
		{
			yyLOCAL = tree.TableLock{yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2003
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2007
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2011
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2015
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2021
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2033
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2039
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2043
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2049
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2053
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2059
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2065
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2075
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2081
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2093
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2097
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2101
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2109
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2117
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2127
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2168
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2172
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2178
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = "true"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = "false"
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2196
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2249
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2266
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2299
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2331
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2339
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2347
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2359
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2375
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2381
		{
			yyVAL.item = nil
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2386
		{
			yyVAL.item = nil
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2427
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2431
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2444
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2450
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2455
		{
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2459
		{
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2528
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2536
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2544
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2567
		{
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2569
		{
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2578
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2597
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2601
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2605
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2623
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2651
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2661
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2687
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2696
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2700
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2705
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2709
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2715
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2743
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2753
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2757
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2766
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2770
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2774
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2804
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2813
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2822
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2826
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2841
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2860
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2878
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2884
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2895
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2900
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2907
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2923
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2936
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2947
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2951
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2957
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2962
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2969
		{
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2971
		{
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2974
		{
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2983
		{
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2987
		{
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2992
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3001
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3008
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3014
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3022
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3036
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3056
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3069
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3075
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3079
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3085
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3106
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3115
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3131
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3151
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3155
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3164
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3168
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3183
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3187
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3197
		{
			yyVAL.str = yyDollar[3].str
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3203
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3207
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3213
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3218
		{
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3229
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3233
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3249
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3255
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3259
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3265
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3269
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3291
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3305
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3323
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3359
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3372
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3376
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3381
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3385
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3392
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3397
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3443
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3452
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3456
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3462
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3474
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3483
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3506
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3512
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3518
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3522
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3528
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3533
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3537
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3541
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3546
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3550
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3554
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3568
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3582
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3586
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3628
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3644
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3653
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3661
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3669
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3709
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3760
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3764
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3777
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3786
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3795
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3801
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3805
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3815
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3819
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3823
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3828
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3836
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3842
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3850
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3858
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3868
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3883
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3901
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3911
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3915
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3925
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3929
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3933
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3937
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3943
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3953
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3957
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3963
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3973
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3979
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3985
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3989
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3993
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4003
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4013
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4023
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4029
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4033
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4043
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4062
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4081
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4099
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4103
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4109
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4119
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4123
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4127
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4132
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4136
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4140
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4144
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4153
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4157
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4161
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4165
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4170
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4174
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4178
		{
			yyVAL.str = yyDollar[2].str
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4187
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4195
		{
			yyVAL.str = yyDollar[2].str
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4203
		{
			yyVAL.str = yyDollar[2].str
		}
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4239
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4249
		{
			yyVAL.str = yyDollar[1].str
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4255
		{
			yyVAL.str = yyDollar[1].str
		}
	case 698:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4274
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4279
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4292
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4296
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4302
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4308
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4312
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4316
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4322
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4328
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4334
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4373
		{
			yyVAL.str = yyDollar[1].str
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4377
		{
			yyVAL.str = yyDollar[1].str
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4383
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4417
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4425
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4431
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4457
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4463
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4471
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4577
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4581
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4587
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4597
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4601
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4607
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4621
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4625
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4634
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4647
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4653
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4675
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4679
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4702
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4706
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4720
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4743
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4769
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4787
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4791
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4797
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4802
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4807
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4815
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4819
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4829
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4843
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4847
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4856
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4862
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4866
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4872
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4876
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4885
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4889
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4895
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4907
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4916
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4929
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4936
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4965
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4969
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4974
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4978
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4985
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5009
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5023
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5030
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5041
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5054
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5060
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5064
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5070
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5079
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5093
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5099
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5103
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5109
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5116
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5125
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5129
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5138
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5143
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5147
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5152
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5156
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5166
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5170
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5189
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5197
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5205
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5216
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5225
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5235
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5245
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5249
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5267
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5273
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5277
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5281
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5287
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5291
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5295
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5299
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5303
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5307
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5324
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5328
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5332
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5340
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5344
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5348
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5352
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5356
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5360
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5368
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5372
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5376
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5380
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5384
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5388
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5396
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5400
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5407
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5411
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5422
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5426
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5430
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5436
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5448
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5452
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5474
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5483
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5488
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5494
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5505
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5515
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5521
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5533
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5539
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5548
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5557
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5580
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5607
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5613
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5617
		{
			yyVAL.str = yyDollar[1].str
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5627
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5633
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5639
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5653
		{
			yyVAL.str = ""
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5660
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5666
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5670
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5674
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5685
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5693
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5702
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5708
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5712
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5718
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5722
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5726
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5730
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5734
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5738
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5743
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5747
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5751
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5755
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5759
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5763
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5771
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5784
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5794
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5799
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5803
		{
			yyVAL.str = yyDollar[1].str
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5809
		{
			yyVAL.str = ""
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5813
		{
			yyVAL.str = yyDollar[2].str
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5852
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5868
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5874
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5880
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5884
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5888
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5901
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5912
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5925
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5930
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5934
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5950
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5968
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5972
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5976
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5980
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5984
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5988
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5992
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6000
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6004
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6010
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6014
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6018
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6022
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6042
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6046
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6050
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6054
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6059
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6067
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6071
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6083
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6087
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6096
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6100
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6104
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6108
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6117
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6126
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6132
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6136
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6142
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6152
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6224
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6238
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6253
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6268
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6285
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6300
		{
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6306
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6314
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6324
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6332
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6336
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6340
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6346
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6353
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6366
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6373
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6382
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6387
		{
			yyVAL.str = ","
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6391
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6459
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6469
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6479
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6519
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6529
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6539
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6549
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6559
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6569
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6586
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6594
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6602
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6618
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6635
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6644
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6655
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6665
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6686
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6708
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6744
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6756
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6768
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6793
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6812
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6820
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6831
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6840
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6849
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6857
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6867
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6875
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6889
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6899
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6918
		{
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6920
		{
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6961
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6971
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6975
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6985
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6994
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7004
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7011
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7015
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7019
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7093
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7097
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7101
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7105
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7109
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7113
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7117
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7121
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7125
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7135
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7141
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7145
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7152
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7156
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7160
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7166
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7178
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7182
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7186
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7190
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7196
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7200
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7204
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7208
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7214
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7218
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7231
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7236
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7240
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7244
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7248
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7256
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7270
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7274
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7281
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7292
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7297
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7303
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7315
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7327
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7352
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7365
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7378
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7404
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7430
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7443
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7456
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7469
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7484
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7507
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7541
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7618
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7638
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7658
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7678
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7694
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7758
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7770
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7782
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7794
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7818
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7830
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7842
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7854
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7867
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7880
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7895
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7903
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7912
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7922
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7945
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7950
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7956
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7963
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7967
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7972
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7976
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7982
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7988
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7995
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8002
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8018
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8025
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8048
		{
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8050
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8060
		{
			yyVAL.str = ""
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8064
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

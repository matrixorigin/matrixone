// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const CONSTRAINT = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const FOREIGN = 57549
const KEY_BLOCK_SIZE = 57550
const SHOW = 57551
const DESCRIBE = 57552
const EXPLAIN = 57553
const DATE = 57554
const ESCAPE = 57555
const REPAIR = 57556
const OPTIMIZE = 57557
const TRUNCATE = 57558
const MAXVALUE = 57559
const PARTITION = 57560
const REORGANIZE = 57561
const LESS = 57562
const THAN = 57563
const PROCEDURE = 57564
const TRIGGER = 57565
const STATUS = 57566
const VARIABLES = 57567
const ROLE = 57568
const PROXY = 57569
const AVG_ROW_LENGTH = 57570
const STORAGE = 57571
const DISK = 57572
const MEMORY = 57573
const CHECKSUM = 57574
const COMPRESSION = 57575
const DATA = 57576
const DIRECTORY = 57577
const DELAY_KEY_WRITE = 57578
const ENCRYPTION = 57579
const ENGINE = 57580
const MAX_ROWS = 57581
const MIN_ROWS = 57582
const PACK_KEYS = 57583
const ROW_FORMAT = 57584
const STATS_AUTO_RECALC = 57585
const STATS_PERSISTENT = 57586
const STATS_SAMPLE_PAGES = 57587
const DYNAMIC = 57588
const COMPRESSED = 57589
const REDUNDANT = 57590
const COMPACT = 57591
const FIXED = 57592
const COLUMN_FORMAT = 57593
const AUTO_RANDOM = 57594
const RESTRICT = 57595
const CASCADE = 57596
const ACTION = 57597
const PARTIAL = 57598
const SIMPLE = 57599
const CHECK = 57600
const ENFORCED = 57601
const RANGE = 57602
const LIST = 57603
const ALGORITHM = 57604
const LINEAR = 57605
const PARTITIONS = 57606
const SUBPARTITION = 57607
const SUBPARTITIONS = 57608
const CLUSTER = 57609
const TYPE = 57610
const ANY = 57611
const SOME = 57612
const EXTERNAL = 57613
const LOCALFILE = 57614
const URL = 57615
const PREPARE = 57616
const DEALLOCATE = 57617
const RESET = 57618
const EXTENSION = 57619
const PROPERTIES = 57620
const PARSER = 57621
const VISIBLE = 57622
const INVISIBLE = 57623
const BTREE = 57624
const HASH = 57625
const RTREE = 57626
const BSI = 57627
const ZONEMAP = 57628
const LEADING = 57629
const BOTH = 57630
const TRAILING = 57631
const UNKNOWN = 57632
const EXPIRE = 57633
const ACCOUNT = 57634
const ACCOUNTS = 57635
const UNLOCK = 57636
const DAY = 57637
const NEVER = 57638
const PUMP = 57639
const MYSQL_COMPATBILITY_MODE = 57640
const SECOND = 57641
const ASCII = 57642
const COALESCE = 57643
const COLLATION = 57644
const HOUR = 57645
const MICROSECOND = 57646
const MINUTE = 57647
const MONTH = 57648
const QUARTER = 57649
const REPEAT = 57650
const REVERSE = 57651
const ROW_COUNT = 57652
const WEEK = 57653
const REVOKE = 57654
const FUNCTION = 57655
const PRIVILEGES = 57656
const TABLESPACE = 57657
const EXECUTE = 57658
const SUPER = 57659
const GRANT = 57660
const OPTION = 57661
const REFERENCES = 57662
const REPLICATION = 57663
const SLAVE = 57664
const CLIENT = 57665
const USAGE = 57666
const RELOAD = 57667
const FILE = 57668
const TEMPORARY = 57669
const ROUTINE = 57670
const EVENT = 57671
const SHUTDOWN = 57672
const NULLX = 57673
const AUTO_INCREMENT = 57674
const APPROXNUM = 57675
const SIGNED = 57676
const UNSIGNED = 57677
const ZEROFILL = 57678
const ENGINES = 57679
const LOW_CARDINALITY = 57680
const ADMIN_NAME = 57681
const RANDOM = 57682
const SUSPEND = 57683
const ATTRIBUTE = 57684
const HISTORY = 57685
const REUSE = 57686
const CURRENT = 57687
const OPTIONAL = 57688
const FAILED_LOGIN_ATTEMPTS = 57689
const PASSWORD_LOCK_TIME = 57690
const UNBOUNDED = 57691
const SECONDARY = 57692
const USER = 57693
const IDENTIFIED = 57694
const CIPHER = 57695
const ISSUER = 57696
const X509 = 57697
const SUBJECT = 57698
const SAN = 57699
const REQUIRE = 57700
const SSL = 57701
const NONE = 57702
const PASSWORD = 57703
const MAX_QUERIES_PER_HOUR = 57704
const MAX_UPDATES_PER_HOUR = 57705
const MAX_CONNECTIONS_PER_HOUR = 57706
const MAX_USER_CONNECTIONS = 57707
const FORMAT = 57708
const VERBOSE = 57709
const CONNECTION = 57710
const TRIGGERS = 57711
const PROFILES = 57712
const LOAD = 57713
const INFILE = 57714
const TERMINATED = 57715
const OPTIONALLY = 57716
const ENCLOSED = 57717
const ESCAPED = 57718
const STARTING = 57719
const LINES = 57720
const ROWS = 57721
const IMPORT = 57722
const MODUMP = 57723
const OVER = 57724
const PRECEDING = 57725
const FOLLOWING = 57726
const GROUPS = 57727
const DATABASES = 57728
const TABLES = 57729
const EXTENDED = 57730
const FULL = 57731
const PROCESSLIST = 57732
const FIELDS = 57733
const COLUMNS = 57734
const OPEN = 57735
const ERRORS = 57736
const WARNINGS = 57737
const INDEXES = 57738
const SCHEMAS = 57739
const NODE = 57740
const LOCKS = 57741
const TABLE_NUMBER = 57742
const COLUMN_NUMBER = 57743
const TABLE_VALUES = 57744
const NAMES = 57745
const GLOBAL = 57746
const SESSION = 57747
const ISOLATION = 57748
const LEVEL = 57749
const READ = 57750
const WRITE = 57751
const ONLY = 57752
const REPEATABLE = 57753
const COMMITTED = 57754
const UNCOMMITTED = 57755
const SERIALIZABLE = 57756
const LOCAL = 57757
const EVENTS = 57758
const PLUGINS = 57759
const CURRENT_TIMESTAMP = 57760
const DATABASE = 57761
const CURRENT_TIME = 57762
const LOCALTIME = 57763
const LOCALTIMESTAMP = 57764
const UTC_DATE = 57765
const UTC_TIME = 57766
const UTC_TIMESTAMP = 57767
const REPLACE = 57768
const CONVERT = 57769
const SEPARATOR = 57770
const TIMESTAMPDIFF = 57771
const CURRENT_DATE = 57772
const CURRENT_USER = 57773
const CURRENT_ROLE = 57774
const SECOND_MICROSECOND = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const HOUR_MICROSECOND = 57778
const HOUR_SECOND = 57779
const HOUR_MINUTE = 57780
const DAY_MICROSECOND = 57781
const DAY_SECOND = 57782
const DAY_MINUTE = 57783
const DAY_HOUR = 57784
const YEAR_MONTH = 57785
const SQL_TSI_HOUR = 57786
const SQL_TSI_DAY = 57787
const SQL_TSI_WEEK = 57788
const SQL_TSI_MONTH = 57789
const SQL_TSI_QUARTER = 57790
const SQL_TSI_YEAR = 57791
const SQL_TSI_SECOND = 57792
const SQL_TSI_MINUTE = 57793
const RECURSIVE = 57794
const CONFIG = 57795
const DRAINER = 57796
const MATCH = 57797
const AGAINST = 57798
const BOOLEAN = 57799
const LANGUAGE = 57800
const WITH = 57801
const QUERY = 57802
const EXPANSION = 57803
const ADDDATE = 57804
const BIT_AND = 57805
const BIT_OR = 57806
const BIT_XOR = 57807
const CAST = 57808
const COUNT = 57809
const APPROX_COUNT_DISTINCT = 57810
const APPROX_PERCENTILE = 57811
const CURDATE = 57812
const CURTIME = 57813
const DATE_ADD = 57814
const DATE_SUB = 57815
const EXTRACT = 57816
const GROUP_CONCAT = 57817
const MAX = 57818
const MID = 57819
const MIN = 57820
const NOW = 57821
const POSITION = 57822
const SESSION_USER = 57823
const STD = 57824
const STDDEV = 57825
const MEDIAN = 57826
const STDDEV_POP = 57827
const STDDEV_SAMP = 57828
const SUBDATE = 57829
const SUBSTR = 57830
const SUBSTRING = 57831
const SUM = 57832
const SYSDATE = 57833
const SYSTEM_USER = 57834
const TRANSLATE = 57835
const TRIM = 57836
const VARIANCE = 57837
const VAR_POP = 57838
const VAR_SAMP = 57839
const AVG = 57840
const ARROW = 57841
const ROW = 57842
const OUTFILE = 57843
const HEADER = 57844
const MAX_FILE_SIZE = 57845
const FORCE_QUOTE = 57846
const PARALLEL = 57847
const UNUSED = 57848
const BINDINGS = 57849
const DO = 57850
const DECLARE = 57851
const KILL = 57852
const QUERY_RESULT = 57853

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8618

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 95,
	21, 563,
	-2, 544,
	-1, 103,
	214, 754,
	-2, 801,
	-1, 122,
	42, 394,
	214, 394,
	241, 401,
	242, 401,
	413, 394,
	-2, 424,
	-1, 438,
	290, 93,
	389, 93,
	-2, 1364,
	-1, 496,
	67, 1170,
	-2, 1504,
	-1, 497,
	67, 1188,
	-2, 1475,
	-1, 501,
	67, 1189,
	-2, 1503,
	-1, 523,
	67, 1102,
	-2, 1556,
	-1, 524,
	67, 1103,
	-2, 1555,
	-1, 525,
	67, 1104,
	-2, 1545,
	-1, 526,
	67, 1520,
	-2, 1540,
	-1, 527,
	67, 1521,
	-2, 1541,
	-1, 528,
	67, 1522,
	-2, 1547,
	-1, 529,
	67, 1523,
	-2, 1530,
	-1, 530,
	67, 1524,
	-2, 1538,
	-1, 531,
	67, 1525,
	-2, 1548,
	-1, 532,
	67, 1526,
	-2, 1549,
	-1, 533,
	67, 1527,
	-2, 1554,
	-1, 534,
	67, 1528,
	-2, 1559,
	-1, 535,
	67, 1529,
	-2, 1560,
	-1, 537,
	67, 1167,
	-2, 1356,
	-1, 544,
	67, 1176,
	-2, 1382,
	-1, 548,
	67, 1180,
	-2, 1421,
	-1, 549,
	67, 1181,
	-2, 1499,
	-1, 557,
	67, 1191,
	-2, 1484,
	-1, 559,
	67, 1193,
	-2, 1494,
	-1, 560,
	67, 1194,
	-2, 1517,
	-1, 571,
	67, 1084,
	-2, 1550,
	-1, 572,
	67, 1085,
	-2, 1551,
	-1, 573,
	67, 1086,
	-2, 1552,
	-1, 580,
	21, 564,
	-2, 527,
	-1, 635,
	408, 424,
	409, 424,
	-2, 395,
	-1, 681,
	104, 1356,
	115, 1356,
	135, 1356,
	-2, 1331,
	-1, 718,
	21, 564,
	-2, 527,
	-1, 817,
	21, 563,
	-2, 992,
	-1, 1145,
	67, 1238,
	-2, 1501,
	-1, 1146,
	67, 1239,
	-2, 1502,
	-1, 1307,
	1, 780,
	68, 780,
	529, 780,
	-2, 787,
	-1, 1350,
	1, 307,
	68, 307,
	529, 307,
	-2, 787,
	-1, 1587,
	68, 1317,
	136, 1317,
	-2, 1486,
	-1, 1588,
	68, 1317,
	136, 1317,
	-2, 1485,
	-1, 1589,
	68, 1295,
	136, 1295,
	-2, 1472,
	-1, 1590,
	68, 1296,
	136, 1296,
	-2, 1477,
	-1, 1591,
	68, 1297,
	136, 1297,
	-2, 1409,
	-1, 1592,
	68, 1298,
	136, 1298,
	-2, 1403,
	-1, 1593,
	68, 1299,
	136, 1299,
	-2, 1347,
	-1, 1594,
	68, 1300,
	136, 1300,
	-2, 1474,
	-1, 1595,
	68, 1301,
	136, 1301,
	-2, 1407,
	-1, 1596,
	68, 1302,
	136, 1302,
	-2, 1402,
	-1, 1597,
	68, 1303,
	136, 1303,
	-2, 1395,
	-1, 1599,
	68, 1306,
	136, 1306,
	-2, 1517,
	-1, 1600,
	68, 1286,
	136, 1286,
	-2, 1504,
	-1, 1601,
	68, 1315,
	136, 1315,
	-2, 1475,
	-1, 1602,
	68, 1315,
	136, 1315,
	-2, 1503,
	-1, 1603,
	68, 1315,
	136, 1315,
	-2, 1365,
	-1, 1604,
	68, 1313,
	136, 1313,
	-2, 1494,
	-1, 1605,
	68, 1310,
	136, 1310,
	-2, 1387,
	-1, 1606,
	67, 1268,
	68, 1268,
	136, 1268,
	351, 1268,
	352, 1268,
	353, 1268,
	-2, 1346,
	-1, 1607,
	67, 1269,
	68, 1269,
	136, 1269,
	351, 1269,
	352, 1269,
	353, 1269,
	-2, 1348,
	-1, 1608,
	67, 1272,
	68, 1272,
	136, 1272,
	351, 1272,
	352, 1272,
	353, 1272,
	-2, 1476,
	-1, 1609,
	67, 1274,
	68, 1274,
	136, 1274,
	351, 1274,
	352, 1274,
	353, 1274,
	-2, 1459,
	-1, 1610,
	67, 1276,
	68, 1276,
	136, 1276,
	351, 1276,
	352, 1276,
	353, 1276,
	-2, 1408,
	-1, 1611,
	67, 1278,
	68, 1278,
	136, 1278,
	351, 1278,
	352, 1278,
	353, 1278,
	-2, 1391,
	-1, 1612,
	67, 1279,
	68, 1279,
	136, 1279,
	351, 1279,
	352, 1279,
	353, 1279,
	-2, 1392,
	-1, 1613,
	67, 1281,
	68, 1281,
	136, 1281,
	351, 1281,
	352, 1281,
	353, 1281,
	-2, 1345,
	-1, 1614,
	68, 1320,
	136, 1320,
	351, 1320,
	352, 1320,
	353, 1320,
	-2, 1370,
	-1, 1615,
	68, 1320,
	136, 1320,
	351, 1320,
	352, 1320,
	353, 1320,
	-2, 1383,
	-1, 1616,
	68, 1323,
	136, 1323,
	351, 1323,
	352, 1323,
	353, 1323,
	-2, 1366,
	-1, 1617,
	68, 1320,
	136, 1320,
	351, 1320,
	352, 1320,
	353, 1320,
	-2, 1444,
	-1, 1630,
	1, 781,
	68, 781,
	529, 781,
	-2, 787,
	-1, 1735,
	21, 563,
	-2, 655,
	-1, 1914,
	65, 470,
	136, 470,
	-2, 896,
	-1, 1931,
	275, 960,
	-2, 939,
	-1, 2165,
	275, 960,
	-2, 940,
	-1, 2292,
	88, 787,
	131, 787,
	168, 787,
	171, 787,
	-2, 844,
	-1, 2295,
	88, 787,
	131, 787,
	168, 787,
	171, 787,
	-2, 844,
	-1, 2298,
	65, 470,
	136, 470,
	-2, 897,
	-1, 2380,
	88, 787,
	131, 787,
	168, 787,
	171, 787,
	-2, 845,
	-1, 2655,
	68, 816,
	136, 816,
	-2, 787,
	-1, 2659,
	68, 816,
	136, 816,
	-2, 787,
	-1, 2673,
	68, 820,
	136, 820,
	-2, 787,
	-1, 2678,
	68, 821,
	136, 821,
	-2, 787,
}

const yyPrivate = 57344

const yyLast = 30728

var yyAct = [...]int{
	467, 2659, 1351, 1211, 2667, 2658, 2634, 1126, 449, 2613,
	2377, 2538, 469, 447, 2587, 2576, 2474, 2355, 2421, 2512,
	2177, 2492, 2405, 2493, 1577, 2240, 2468, 983, 2241, 2481,
	2485, 2376, 2375, 581, 2419, 844, 2440, 1273, 2415, 143,
	143, 1314, 493, 1917, 2393, 143, 384, 391, 1129, 2379,
	391, 1766, 1989, 2147, 1068, 1990, 2276, 1457, 1982, 2187,
	1412, 2288, 1665, 1122, 2166, 1032, 1382, 2238, 1729, 1585,
	451, 1807, 1481, 2011, 1670, 2215, 402, 1774, 2232, 396,
	1775, 2123, 2126, 712, 2121, 1429, 2186, 1638, 1583, 2031,
	946, 440, 962, 576, 2145, 441, 1806, 1477, 1464, 2072,
	1848, 446, 1264, 1458, 2025, 1283, 616, 1405, 1476, 686,
	1886, 960, 1890, 1935, 1730, 1465, 1637, 1666, 1385, 1210,
	1291, 1354, 1718, 388, 19, 3, 1326, 689, 30, 680,
	576, 690, 42, 389, 31, 385, 8, 1769, 1383, 710,
	386, 6, 143, 881, 1631, 1316, 1303, 1269, 1509, 387,
	7, 1478, 1120, 1327, 450, 1463, 1059, 1581, 1041, 1409,
	1623, 973, 1488, 1125, 439, 1324, 684, 1159, 1565, 1325,
	1175, 458, 1111, 380, 729, 1452, 1274, 42, 1434, 94,
	1119, 448, 672, 1024, 1737, 1340, 1302, 377, 2380, 1180,
	926, 969, 1011, 1684, 615, 404, 16, 9, 578, 1181,
	4, 984, 1058, 944, 132, 580, 673, 390, 405, 631,
	135, 2066, 613, 2066, 1390, 1495, 1809, 138, 137, 1485,
	2464, 2416, 1767, 2239, 1287, 2521, 1460, 579, 845, 839,
	589, 136, 136, 38, 124, 104, 2368, 136, 749, 1794,
	136, 136, 1482, 38, 124, 104, 2367, 373, 1802, 136,
	2529, 1013, 639, 142, 142, 136, 2450, 394, 2095, 375,
	1493, 19, 1753, 709, 136, 30, 783, 1423, 2248, 42,
	400, 31, 136, 8, 38, 124, 104, 1754, 6, 1393,
	1394, 136, 989, 990, 399, 2046, 1770, 7, 133, 133,
	1888, 93, 980, 649, 1071, 896, 1064, 133, 133, 575,
	93, 1078, 1014, 2426, 1096, 2572, 133, 776, 1336, 139,
	2570, 987, 133, 687, 986, 989, 990, 1075, 996, 1128,
	997, 133, 590, 781, 1201, 683, 682, 1849, 566, 133,
	565, 567, 568, 401, 569, 570, 2522, 2523, 1077, 2591,
	2592, 2466, 1887, 2469, 2470, 2471, 2472, 2242, 2514, 2496,
	2497, 2514, 2033, 2032, 2034, 2517, 714, 786, 787, 788,
	785, 2418, 2242, 1789, 1131, 732, 723, 1406, 2480, 2256,
	2277, 1489, 1398, 2373, 2284, 2432, 2061, 143, 722, 1107,
	1711, 896, 1881, 2127, 2137, 1622, 1562, 2184, 721, 1258,
	1257, 582, 2059, 391, 391, 778, 143, 884, 2528, 2135,
	1893, 779, 780, 1799, 654, 1986, 653, 717, 719, 752,
	1713, 2435, 2370, 2565, 1779, 904, 908, 910, 912, 914,
	915, 917, 2425, 921, 918, 919, 920, 393, 2427, 899,
	900, 901, 902, 882, 883, 905, 103, 885, 134, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 897,
	903, 2132, 2133, 716, 732, 2131, 819, 122, 907, 909,
	911, 913, 916, 1130, 978, 392, 2134, 2326, 2486, 1197,
	2531, 2532, 1112, 1194, 1116, 2651, 744, 1196, 1193, 1195,
	1199, 1200, 2495, 884, 718, 1198, 1494, 874, 2668, 2600,
	1421, 1422, 2569, 2540, 898, 774, 775, 2607, 1115, 2574,
	655, 904, 908, 910, 912, 914, 915, 917, 2457, 921,
	918, 919, 920, 42, 42, 899, 900, 901, 902, 882,
	883, 905, 1007, 885, 685, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 897, 903, 1070, 968, 734,
	733, 998, 2319, 1967, 907, 909, 911, 913, 916, 2129,
	1137, 1140, 1141, 2407, 2611, 725, 726, 2310, 764, 657,
	765, 1138, 1694, 687, 1693, 695, 694, 696, 1117, 1498,
	1500, 1501, 2394, 2395, 2396, 2398, 2397, 2201, 1483, 1483,
	898, 1899, 1483, 1020, 2536, 2537, 442, 2540, 767, 1114,
	1019, 720, 943, 945, 1000, 693, 1901, 1902, 1903, 1904,
	737, 738, 2332, 2333, 2314, 727, 741, 2260, 742, 2065,
	740, 923, 982, 981, 967, 616, 1822, 1823, 1204, 1205,
	1206, 1207, 1208, 1209, 1202, 1203, 966, 656, 734, 733,
	2669, 825, 687, 2635, 2663, 821, 822, 823, 824, 769,
	2675, 770, 2441, 698, 875, 2268, 989, 990, 713, 2530,
	988, 989, 990, 1510, 762, 143, 947, 1009, 985, 2433,
	2062, 691, 1065, 979, 39, 2128, 2524, 2525, 400, 772,
	1892, 2138, 1407, 1496, 2579, 576, 576, 576, 1484, 579,
	1036, 1036, 699, 143, 2511, 948, 949, 950, 1012, 952,
	1795, 1744, 2369, 2013, 2015, 1113, 2374, 105, 105, 391,
	945, 1062, 1062, 105, 1803, 39, 105, 105, 1486, 2575,
	1674, 749, 1043, 763, 951, 105, 1073, 1402, 1399, 976,
	692, 105, 2064, 1896, 1897, 1108, 992, 993, 2130, 995,
	105, 855, 856, 743, 2406, 768, 1094, 1895, 105, 906,
	955, 954, 953, 1034, 1034, 1079, 1038, 105, 395, 1036,
	2117, 1036, 722, 610, 611, 612, 435, 2662, 1497, 437,
	957, 650, 1127, 2017, 436, 685, 1968, 1970, 1971, 1972,
	1969, 773, 1741, 1139, 1826, 2074, 2073, 970, 974, 974,
	2312, 766, 1017, 928, 2311, 1743, 1742, 975, 697, 1396,
	2580, 748, 1499, 930, 771, 970, 1397, 970, 580, 1740,
	921, 918, 919, 920, 1688, 663, 1831, 2674, 1830, 1829,
	1827, 2315, 2316, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 906, 1008, 959, 1395, 1170,
	1171, 1179, 659, 999, 1675, 1001, 660, 650, 1015, 1016,
	1225, 652, 991, 2681, 651, 994, 1069, 1109, 1124, 2014,
	1076, 1231, 1232, 662, 2680, 583, 746, 665, 664, 42,
	1102, 1030, 1031, 2629, 1239, 1240, 1234, 2671, 42, 1005,
	1103, 1828, 1099, 2652, 784, 576, 1018, 1098, 2647, 1782,
	1907, 1027, 1028, 1029, 2212, 1671, 1674, 749, 2293, 2638,
	2151, 1571, 1794, 1142, 1105, 373, 1044, 1042, 1786, 2637,
	2618, 1085, 1678, 1057, 1063, 1728, 1056, 1883, 1317, 1080,
	1756, 784, 1121, 1538, 2577, 2578, 1537, 652, 1259, 747,
	651, 1081, 784, 1280, 702, 707, 708, 580, 747, 786,
	787, 788, 785, 1101, 1100, 2672, 2615, 1097, 1004, 1482,
	1006, 1491, 1010, 1118, 1089, 1090, 2648, 143, 2549, 1301,
	1036, 1281, 1306, 1307, 1212, 1224, 1215, 1491, 1123, 616,
	1226, 1916, 1315, 1520, 1317, 1625, 1036, 1491, 1491, 2503,
	1009, 1233, 784, 1235, 2093, 384, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1161, 784, 1262, 1284, 1265, 1266, 786,
	787, 788, 785, 1832, 1833, 1168, 1169, 1341, 1341, 2498,
	1009, 2459, 1009, 1908, 2616, 143, 1768, 1301, 1301, 2458,
	1675, 1036, 1392, 1339, 2455, 1668, 2550, 971, 2454, 1669,
	1672, 1576, 576, 2453, 1036, 1214, 1677, 1305, 1728, 1300,
	789, 1681, 1679, 1093, 1519, 2452, 1680, 2437, 2436, 818,
	757, 1092, 759, 1915, 1308, 1309, 1310, 827, 1271, 1272,
	1301, 1036, 1542, 1428, 143, 143, 1432, 1236, 2359, 2334,
	1323, 1624, 1439, 1401, 2203, 2036, 143, 2437, 832, 2460,
	760, 1673, 1225, 1456, 1332, 1333, 2008, 1642, 1225, 1225,
	1437, 1254, 2437, 1468, 2212, 1575, 2437, 1377, 1378, 1343,
	583, 2437, 704, 705, 706, 1872, 1276, 1403, 1279, 1727,
	1870, 1868, 1329, 2437, 1756, 1866, 2437, 1315, 1854, 1810,
	1792, 1036, 1480, 1304, 1334, 1110, 972, 1784, 1473, 1288,
	970, 1408, 1330, 1282, 1780, 1419, 2037, 1756, 1427, 1320,
	1425, 1331, 2204, 2037, 1776, 1641, 753, 715, 1337, 1338,
	1431, 1572, 974, 958, 1728, 1318, 1319, 1173, 1474, 1311,
	1335, 1445, 1546, 1312, 786, 787, 788, 785, 1322, 755,
	1021, 1298, 1328, 1873, 1916, 1344, 1503, 1345, 1871, 1867,
	1545, 758, 761, 1867, 1304, 1536, 784, 784, 1642, 1490,
	1507, 1508, 1086, 1342, 1739, 1777, 1216, 1454, 2646, 2617,
	1416, 1417, 1781, 1454, 1350, 754, 1381, 1380, 2283, 1574,
	661, 1435, 1777, 1642, 1404, 1728, 801, 924, 1418, 1571,
	2301, 1413, 1414, 1415, 1121, 470, 479, 2152, 42, 1346,
	784, 471, 2027, 478, 472, 476, 475, 473, 474, 1918,
	1797, 1426, 1796, 1788, 1424, 2156, 749, 971, 784, 1658,
	1533, 1543, 1443, 784, 1521, 1472, 1023, 1491, 1550, 2630,
	1087, 687, 715, 1461, 1442, 1297, 1082, 687, 922, 830,
	1470, 735, 1471, 756, 715, 1218, 1217, 608, 1430, 1430,
	1466, 2056, 1467, 963, 1025, 480, 2627, 964, 1685, 2213,
	1430, 2208, 1475, 2205, 1167, 1026, 2067, 1061, 1061, 804,
	805, 806, 807, 808, 801, 1987, 440, 722, 1618, 1164,
	1166, 1163, 1787, 1165, 1746, 477, 724, 1586, 1817, 143,
	143, 143, 1639, 1176, 1176, 1502, 1516, 2305, 1511, 788,
	785, 2562, 1646, 1009, 1299, 785, 2322, 1022, 1649, 666,
	2321, 1504, 1651, 2035, 1945, 1161, 972, 786, 787, 788,
	785, 1944, 687, 1939, 1009, 1515, 1505, 1506, 1934, 722,
	2610, 1578, 1579, 1683, 1841, 2657, 2641, 1245, 2601, 1664,
	799, 809, 810, 802, 803, 804, 805, 806, 807, 808,
	801, 1132, 1133, 1134, 1135, 1136, 800, 799, 809, 810,
	802, 803, 804, 805, 806, 807, 808, 801, 1732, 1732,
	1392, 1732, 658, 1229, 2609, 1540, 786, 787, 788, 785,
	2371, 2281, 1661, 1978, 1230, 1819, 786, 787, 788, 785,
	1619, 1976, 2596, 2553, 1974, 1177, 1178, 2387, 2122, 1036,
	143, 1213, 2490, 2280, 2136, 1219, 2086, 1654, 2112, 1632,
	786, 787, 788, 785, 722, 1964, 1062, 1567, 1392, 2372,
	2282, 1761, 1977, 1763, 1586, 786, 787, 788, 785, 2111,
	1975, 1225, 1301, 1973, 2052, 2029, 1736, 1734, 1660, 1738,
	1580, 1962, 1655, 1656, 1961, 1960, 1957, 1626, 1951, 1648,
	1948, 2085, 435, 1790, 1963, 437, 1480, 1947, 1652, 1653,
	436, 2356, 1751, 1036, 1687, 1036, 1570, 1036, 1647, 1569,
	1568, 1564, 722, 974, 786, 787, 788, 785, 1563, 1083,
	941, 1657, 1804, 2593, 1760, 2564, 2526, 1772, 1778, 2509,
	2434, 2417, 1285, 1659, 2354, 2352, 1289, 2338, 2336, 1292,
	1983, 1036, 1835, 1633, 1634, 1635, 802, 803, 804, 805,
	806, 807, 808, 801, 1842, 2307, 2291, 2279, 2278, 1036,
	1518, 1714, 2275, 1529, 2265, 2259, 1650, 1686, 1800, 1689,
	1690, 1691, 1692, 1808, 1844, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 687,
	2209, 2199, 1524, 1747, 1748, 1749, 2198, 1846, 1752, 2473,
	1758, 2116, 2110, 2063, 1034, 2030, 1834, 2020, 1821, 1765,
	1965, 1757, 1759, 1958, 1954, 1801, 1528, 786, 787, 788,
	785, 2445, 1034, 1953, 1843, 1952, 1773, 522, 521, 2295,
	1573, 1285, 1566, 1446, 1815, 2484, 1444, 1285, 1285, 786,
	787, 788, 785, 1294, 1084, 1036, 854, 1793, 1791, 850,
	2294, 849, 1874, 831, 1042, 1798, 711, 1914, 786, 787,
	788, 785, 2292, 1920, 2270, 2269, 1121, 1850, 786, 787,
	788, 785, 1855, 2264, 1811, 1812, 1884, 136, 2362, 1929,
	124, 104, 2252, 1825, 2361, 2231, 2230, 2157, 1933, 792,
	793, 794, 795, 796, 797, 798, 790, 2331, 1941, 1942,
	1943, 786, 787, 788, 785, 1946, 2091, 786, 787, 788,
	785, 1266, 1814, 584, 585, 586, 587, 1878, 1732, 2084,
	786, 787, 788, 785, 2076, 2071, 583, 2024, 1979, 1882,
	1869, 1875, 1865, 1864, 133, 2670, 722, 1392, 1392, 1392,
	1392, 1551, 1921, 1541, 1539, 1535, 1991, 1534, 722, 1392,
	1532, 1526, 1732, 1523, 1931, 1522, 1228, 1227, 1991, 1048,
	1922, 1046, 136, 2626, 1936, 1036, 1936, 2620, 1926, 1927,
	1271, 1272, 1632, 1913, 2325, 1047, 143, 143, 2608, 2605,
	1513, 1937, 1906, 1517, 19, 2603, 1919, 2552, 30, 2461,
	846, 1898, 42, 1261, 31, 1905, 8, 2403, 1225, 2391,
	2004, 6, 2042, 1932, 1928, 1938, 2388, 1225, 1304, 2051,
	7, 2345, 1276, 2343, 1279, 1036, 1923, 2329, 2058, 133,
	1925, 2328, 2327, 1527, 2324, 1924, 2318, 1531, 2286, 2097,
	1270, 1263, 1959, 2041, 961, 1980, 1889, 1940, 1911, 1910,
	1909, 1984, 1275, 1278, 1267, 1544, 1783, 1988, 1547, 1548,
	1549, 2038, 847, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 2006, 1560, 2048, 1284, 580, 2007, 2005, 2050, 2003,
	1745, 1912, 2262, 2018, 2021, 1992, 1993, 1994, 1995, 2016,
	1709, 1640, 1162, 133, 1451, 1433, 1296, 2079, 1268, 2081,
	2028, 1106, 2055, 2089, 2060, 786, 787, 788, 785, 1072,
	925, 1949, 1950, 873, 722, 2049, 2043, 1955, 1956, 2045,
	2125, 872, 2054, 2039, 1586, 871, 786, 787, 788, 785,
	2140, 143, 870, 869, 1643, 1985, 2068, 868, 867, 866,
	722, 722, 722, 865, 864, 2069, 1392, 1639, 2047, 2155,
	1664, 1664, 1664, 2075, 863, 2159, 862, 861, 860, 2077,
	2078, 859, 2082, 2083, 858, 2188, 2190, 857, 2188, 2188,
	853, 852, 2545, 2088, 851, 2195, 848, 843, 2096, 842,
	1036, 1036, 2098, 2099, 2100, 2101, 840, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2113, 786, 787, 788, 785,
	2022, 2023, 2118, 839, 838, 837, 836, 835, 2080, 834,
	833, 143, 2153, 2543, 2087, 829, 2125, 828, 751, 2216,
	2217, 1645, 1628, 739, 2185, 2189, 2150, 2494, 482, 95,
	1285, 1285, 1285, 2219, 2154, 2148, 2149, 786, 787, 788,
	785, 1863, 1900, 1034, 1034, 2196, 2197, 1755, 1448, 2120,
	750, 2162, 1061, 2222, 2191, 2192, 2000, 1998, 1835, 2221,
	2193, 2001, 1999, 1997, 786, 787, 788, 785, 1301, 1996,
	2656, 374, 1301, 2040, 95, 1237, 1238, 1450, 1785, 1241,
	1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1880, 77, 1449, 2163, 143, 2202, 2207, 2158, 2206,
	2220, 2210, 2160, 2161, 1720, 1723, 1724, 1725, 1721, 2119,
	1722, 1726, 2237, 2002, 2224, 1724, 1725, 1376, 2227, 2228,
	2229, 2348, 1255, 2347, 2114, 2115, 41, 1862, 2250, 40,
	2142, 2143, 2144, 1818, 2253, 370, 140, 2236, 1771, 1805,
	927, 1836, 1837, 1578, 1579, 2141, 1839, 1840, 2247, 2251,
	786, 787, 788, 785, 1066, 1620, 745, 2346, 2255, 1845,
	2254, 1861, 688, 2479, 1930, 2211, 95, 1885, 2258, 371,
	1313, 1860, 372, 1036, 1036, 1295, 369, 1218, 1217, 2584,
	2223, 1732, 1392, 2298, 786, 787, 788, 785, 1285, 939,
	940, 1876, 1877, 1292, 786, 787, 788, 785, 937, 938,
	2246, 1712, 2249, 1379, 1036, 935, 936, 1859, 933, 934,
	1003, 2271, 1002, 2306, 777, 143, 1858, 2273, 929, 2226,
	2274, 1857, 1469, 965, 2190, 1430, 2621, 2559, 2557, 2300,
	786, 787, 788, 785, 583, 2169, 1034, 2289, 2287, 786,
	787, 788, 785, 722, 786, 787, 788, 785, 2297, 2296,
	2534, 2519, 2518, 1991, 2516, 2487, 2462, 2414, 2185, 2179,
	2304, 584, 585, 586, 587, 2308, 2413, 2289, 2350, 2365,
	2353, 2244, 2172, 2243, 583, 2339, 722, 1856, 2234, 2167,
	932, 2233, 1853, 2330, 2182, 2183, 1991, 1852, 2053, 2026,
	2168, 1317, 1525, 2335, 2337, 2547, 2546, 2546, 2340, 736,
	786, 787, 788, 785, 2341, 786, 787, 788, 785, 2257,
	786, 787, 788, 785, 2547, 2320, 2245, 722, 977, 49,
	2351, 1420, 1040, 1, 722, 1293, 2173, 588, 2357, 2299,
	2364, 2009, 2010, 2225, 1664, 2302, 2358, 2012, 2303, 1851,
	1487, 1710, 2360, 809, 810, 802, 803, 804, 805, 806,
	807, 808, 801, 2366, 1621, 722, 1847, 2139, 722, 722,
	722, 956, 786, 787, 788, 785, 609, 1220, 1091, 701,
	731, 1088, 2300, 2383, 1315, 2384, 2411, 2381, 730, 786,
	787, 788, 785, 1838, 728, 1174, 484, 2392, 1459, 1981,
	2400, 2401, 2402, 2389, 1816, 2363, 2410, 2408, 2431, 2428,
	1285, 2399, 1172, 2583, 1285, 2612, 786, 787, 788, 785,
	95, 95, 688, 1683, 2181, 2409, 1667, 786, 787, 788,
	785, 2551, 722, 2586, 1104, 786, 787, 788, 785, 2323,
	468, 2510, 2465, 2555, 722, 2429, 2070, 2467, 2420, 1492,
	782, 2175, 2044, 627, 516, 2438, 491, 841, 2442, 2444,
	1074, 2443, 1067, 1715, 2451, 2447, 2094, 703, 2090, 490,
	2285, 1894, 599, 2174, 2176, 700, 2456, 628, 722, 1561,
	2463, 1256, 2385, 2386, 1277, 1260, 1720, 1723, 1724, 1725,
	1721, 817, 1722, 1726, 2666, 2655, 2633, 2619, 2539, 2650,
	2568, 2504, 2507, 2483, 2606, 2424, 2422, 2423, 2599, 2482,
	2535, 406, 2489, 1400, 2488, 574, 670, 2404, 1447, 407,
	2508, 1644, 2499, 2500, 2501, 2502, 2527, 2390, 597, 1627,
	598, 1630, 2520, 1629, 2515, 2513, 1143, 791, 1160, 2266,
	2267, 826, 2184, 445, 1514, 457, 1891, 2178, 618, 2533,
	2019, 48, 47, 2541, 2170, 2544, 2542, 46, 45, 1438,
	2180, 147, 486, 146, 2548, 2506, 2588, 2194, 466, 465,
	464, 463, 1719, 2556, 2558, 722, 2560, 2561, 2554, 1717,
	1716, 1387, 1386, 1436, 1676, 2566, 1347, 2491, 2448, 2449,
	2317, 2582, 1966, 2590, 2313, 2571, 2573, 2309, 2200, 2164,
	2165, 2171, 880, 2581, 876, 2589, 2597, 878, 722, 879,
	650, 877, 1824, 1820, 1662, 2598, 1663, 2594, 1127, 2595,
	2146, 931, 942, 2430, 2602, 2272, 2604, 1584, 1582, 2218,
	2214, 1455, 1290, 2614, 1879, 1388, 1384, 2382, 577, 32,
	27, 5, 29, 28, 722, 14, 722, 15, 896, 13,
	1095, 2623, 12, 2625, 1127, 18, 1127, 2590, 2632, 26,
	25, 24, 2628, 786, 787, 788, 785, 722, 87, 2589,
	86, 2631, 23, 2636, 2640, 85, 2649, 1127, 2614, 2643,
	84, 1201, 83, 82, 22, 11, 81, 2653, 80, 79,
	652, 21, 75, 651, 73, 2654, 20, 74, 2661, 71,
	72, 59, 2665, 58, 57, 2664, 69, 68, 67, 2673,
	66, 65, 64, 2261, 2676, 2678, 2661, 2677, 626, 2679,
	2263, 2665, 56, 55, 1045, 54, 53, 637, 70, 374,
	63, 62, 61, 60, 52, 619, 51, 50, 102, 1201,
	101, 100, 99, 98, 97, 33, 34, 35, 36, 112,
	884, 95, 111, 113, 114, 95, 109, 107, 110, 108,
	106, 642, 2563, 43, 10, 17, 95, 2, 904, 908,
	910, 912, 914, 915, 917, 95, 921, 918, 919, 920,
	0, 0, 899, 900, 901, 902, 882, 883, 905, 0,
	885, 0, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 897, 903, 0, 0, 0, 0, 0, 0,
	0, 907, 909, 911, 913, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1197, 0, 0, 0,
	1194, 0, 636, 0, 1196, 1193, 1195, 1199, 1200, 1813,
	1285, 617, 1198, 2342, 0, 0, 2344, 898, 0, 0,
	0, 0, 620, 645, 0, 0, 0, 0, 0, 0,
	2349, 2642, 800, 799, 809, 810, 802, 803, 804, 805,
	806, 807, 808, 801, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 1197, 0, 0, 0, 1194, 0,
	0, 0, 1196, 1193, 1195, 1199, 1200, 0, 0, 0,
	1198, 0, 0, 0, 0, 0, 0, 0, 641, 646,
	800, 799, 809, 810, 802, 803, 804, 805, 806, 807,
	808, 801, 0, 0, 0, 633, 0, 635, 649, 0,
	0, 0, 632, 630, 629, 0, 634, 621, 622, 623,
	624, 625, 0, 647, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1204, 1205, 1206, 1207, 1208,
	1209, 1202, 1203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 800, 799, 809, 810, 802, 803, 804,
	805, 806, 807, 808, 801, 2439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2446, 0, 0, 0, 0,
	0, 0, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1204, 1205, 1206, 1207, 1208, 1209, 1202,
	1203, 812, 0, 816, 0, 0, 0, 0, 0, 0,
	1391, 2478, 1512, 0, 0, 0, 0, 0, 813, 815,
	811, 0, 814, 800, 799, 809, 810, 802, 803, 804,
	805, 806, 807, 808, 801, 800, 799, 809, 810, 802,
	803, 804, 805, 806, 807, 808, 801, 0, 0, 0,
	0, 0, 906, 0, 0, 0, 0, 0, 0, 0,
	2624, 0, 2478, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 800,
	799, 809, 810, 802, 803, 804, 805, 806, 807, 808,
	801, 459, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 489, 0, 0, 306, 260, 2622, 0, 0,
	0, 545, 553, 0, 0, 0, 0, 0, 0, 2478,
	0, 0, 0, 452, 0, 0, 483, 522, 521, 470,
	479, 817, 0, 202, 145, 471, 0, 478, 472, 476,
	475, 473, 474, 0, 537, 0, 0, 0, 0, 0,
	0, 443, 456, 2475, 460, 0, 800, 799, 809, 810,
	802, 803, 804, 805, 806, 807, 808, 801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 454, 0,
	0, 0, 0, 499, 0, 455, 0, 2645, 494, 480,
	481, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 477,
	497, 501, 214, 559, 495, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	560, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 337, 0, 0, 543, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 496, 0, 296, 278, 556,
	444, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 358, 0, 1735, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 541, 274,
	0, 0, 555, 536, 538, 539, 542, 546, 547, 548,
	549, 550, 552, 554, 558, 299, 0, 1374, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 2476, 0,
	0, 1376, 2477, 0, 557, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 500, 264, 265, 266, 267, 544,
	0, 207, 360, 289, 0, 0, 0, 0, 2660, 0,
	0, 0, 0, 0, 0, 0, 0, 604, 1356, 2092,
	354, 227, 233, 368, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 566, 540, 565, 567, 568, 564, 569, 570, 551,
	462, 0, 504, 562, 561, 563, 0, 0, 800, 799,
	809, 810, 802, 803, 804, 805, 806, 807, 808, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 529, 509, 510, 511, 461,
	512, 507, 508, 530, 502, 526, 527, 485, 505, 513,
	525, 514, 528, 531, 532, 571, 572, 520, 573, 517,
	533, 524, 523, 515, 503, 534, 535, 488, 487, 518,
	519, 506, 0, 0, 0, 345, 346, 347, 367, 331,
	606, 218, 0, 593, 0, 0, 0, 0, 0, 0,
	603, 602, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1364, 0, 0, 95,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	1355, 1357, 1359, 0, 1361, 1362, 1363, 1365, 1366, 1367,
	1369, 1370, 1371, 1372, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 0, 600, 0, 0, 0,
	0, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1375, 594, 0, 0,
	0, 0, 0, 0, 0, 1391, 1391, 1391, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1352, 0, 0, 0, 0, 0, 595, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 1368,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 605, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 489, 0, 0, 306, 260,
	0, 0, 0, 0, 545, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 0, 483,
	522, 521, 470, 479, 95, 0, 202, 145, 471, 0,
	478, 472, 476, 475, 473, 474, 0, 537, 0, 0,
	0, 0, 0, 0, 443, 456, 0, 460, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	453, 454, 0, 0, 0, 0, 499, 0, 455, 0,
	0, 494, 480, 481, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 477, 497, 501, 214, 559, 495, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 560, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 337, 0, 0, 543, 0, 0,
	0, 310, 0, 0, 245, 95, 0, 95, 496, 0,
	296, 278, 556, 444, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 1222, 1221, 1223, 349, 228, 185, 186,
	332, 541, 274, 0, 0, 555, 536, 538, 539, 542,
	546, 547, 548, 549, 550, 552, 554, 558, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 500, 264, 265,
	266, 267, 544, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 566, 540, 565, 567, 568, 564,
	569, 570, 551, 462, 0, 504, 562, 561, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 529, 509,
	510, 511, 461, 512, 507, 508, 530, 502, 526, 527,
	485, 505, 513, 525, 514, 528, 531, 532, 571, 572,
	520, 573, 517, 533, 524, 523, 515, 503, 534, 535,
	488, 487, 518, 519, 506, 314, 498, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	489, 0, 0, 306, 260, 0, 0, 0, 0, 545,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 452, 0, 0, 483, 522, 521, 470, 479, 0,
	0, 202, 145, 471, 0, 478, 472, 476, 475, 473,
	474, 0, 537, 0, 0, 0, 0, 0, 0, 443,
	456, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 454, 0, 0, 0,
	0, 499, 0, 455, 0, 0, 494, 480, 481, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 477, 497, 501,
	214, 559, 495, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 560, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 337,
	0, 0, 543, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 496, 0, 296, 278, 556, 444, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 541, 274, 0, 0,
	555, 536, 538, 539, 542, 546, 547, 548, 549, 550,
	552, 554, 558, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 2476, 0, 0, 0,
	2477, 0, 557, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 500, 264, 265, 266, 267, 544, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 566,
	540, 565, 567, 568, 564, 569, 570, 551, 462, 0,
	504, 562, 561, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 529, 509, 510, 511, 461, 512, 507,
	508, 530, 502, 526, 527, 485, 505, 513, 525, 514,
	528, 531, 532, 571, 572, 520, 573, 517, 533, 524,
	523, 515, 503, 534, 535, 488, 487, 518, 519, 506,
	314, 498, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 221, 1286,
	0, 246, 0, 0, 0, 489, 0, 0, 306, 260,
	0, 0, 0, 0, 545, 553, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 452, 0, 0, 483,
	522, 521, 470, 479, 0, 0, 202, 145, 471, 0,
	478, 472, 476, 475, 473, 474, 0, 537, 0, 0,
	0, 0, 0, 0, 443, 456, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 454, 0, 0, 0, 0, 499, 0, 455, 0,
	0, 1411, 480, 481, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 477, 497, 501, 214, 559, 495, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 560, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 337, 0, 0, 543, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 496, 0,
	296, 278, 556, 444, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 541, 274, 0, 0, 555, 536, 538, 539, 542,
	546, 547, 548, 549, 550, 552, 554, 558, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 500, 264, 265,
	266, 267, 544, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 566, 540, 565, 567, 568, 564,
	569, 570, 551, 462, 0, 504, 562, 561, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 529, 509,
	510, 511, 461, 512, 507, 508, 530, 502, 526, 527,
	485, 505, 513, 525, 514, 528, 531, 532, 571, 572,
	520, 573, 517, 533, 524, 523, 515, 503, 534, 535,
	488, 487, 518, 519, 506, 136, 314, 498, 345, 346,
	347, 367, 331, 0, 218, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 820, 0, 0, 306, 260, 0, 0, 0, 0,
	545, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 483, 522, 521, 470, 479,
	0, 0, 202, 145, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 537, 0, 0, 0, 0, 0, 0,
	443, 456, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 499, 0, 455, 0, 0, 494, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 497,
	501, 214, 559, 495, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 560,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 543, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 496, 0, 296, 278, 556, 444,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 541, 274, 0,
	0, 555, 536, 538, 539, 542, 546, 547, 548, 549,
	550, 552, 554, 558, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 500, 264, 265, 266, 267, 544, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 368, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	566, 540, 565, 567, 568, 564, 569, 570, 551, 462,
	0, 504, 562, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 105, 288, 226, 529, 509, 510, 511, 461, 512,
	507, 508, 530, 502, 526, 527, 485, 505, 513, 525,
	514, 528, 531, 532, 571, 572, 520, 573, 517, 533,
	524, 523, 515, 503, 534, 535, 488, 487, 518, 519,
	506, 314, 498, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 221,
	2644, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 545, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 0,
	483, 522, 521, 470, 479, 0, 0, 202, 145, 471,
	0, 478, 472, 476, 475, 473, 474, 0, 537, 0,
	0, 0, 0, 0, 0, 443, 456, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 499, 0, 455,
	0, 0, 494, 480, 481, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 477, 497, 501, 214, 559, 495, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 560, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 337, 0, 0, 543, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 496,
	0, 296, 278, 556, 444, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 541, 274, 0, 0, 555, 536, 538, 539,
	542, 546, 547, 548, 549, 550, 552, 554, 558, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 500, 264,
	265, 266, 267, 544, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 368, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 566, 540, 565, 567, 568,
	564, 569, 570, 551, 462, 0, 504, 562, 561, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 529,
	509, 510, 511, 461, 512, 507, 508, 530, 502, 526,
	527, 485, 505, 513, 525, 514, 528, 531, 532, 571,
	572, 520, 573, 517, 533, 524, 523, 515, 503, 534,
	535, 488, 487, 518, 519, 506, 314, 498, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 221, 1286, 0, 246, 0, 0,
	0, 489, 0, 0, 306, 260, 0, 0, 0, 0,
	545, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 483, 522, 521, 470, 479,
	0, 0, 202, 145, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 537, 0, 0, 0, 0, 0, 0,
	443, 456, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 499, 0, 455, 0, 0, 494, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 497,
	501, 214, 559, 495, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 560,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 543, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 496, 0, 296, 278, 556, 444,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 541, 274, 0,
	0, 555, 536, 538, 539, 542, 546, 547, 548, 549,
	550, 552, 554, 558, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 500, 264, 265, 266, 267, 544, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 368, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	566, 540, 565, 567, 568, 564, 569, 570, 551, 462,
	0, 504, 562, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 529, 509, 510, 511, 461, 512,
	507, 508, 530, 502, 526, 527, 485, 505, 513, 525,
	514, 528, 531, 532, 571, 572, 520, 573, 517, 533,
	524, 523, 515, 503, 534, 535, 488, 487, 518, 519,
	506, 314, 498, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 545, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 0,
	483, 522, 521, 470, 479, 0, 0, 202, 145, 471,
	0, 478, 472, 476, 475, 473, 474, 0, 537, 0,
	0, 0, 0, 0, 0, 443, 456, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 1060, 0, 0, 0, 499, 0, 455,
	0, 0, 494, 480, 481, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 477, 497, 501, 214, 559, 495, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 560, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 337, 0, 0, 543, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 496,
	0, 296, 278, 556, 444, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 541, 274, 0, 0, 555, 536, 538, 539,
	542, 546, 547, 548, 549, 550, 552, 554, 558, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 500, 264,
	265, 266, 267, 544, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 368, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 566, 540, 565, 567, 568,
	564, 569, 570, 551, 462, 0, 504, 562, 561, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 529,
	509, 510, 511, 461, 512, 507, 508, 530, 502, 526,
	527, 485, 505, 513, 525, 514, 528, 531, 532, 571,
	572, 520, 573, 517, 533, 524, 523, 515, 503, 534,
	535, 488, 487, 518, 519, 506, 0, 0, 0, 345,
	346, 347, 367, 331, 0, 218, 314, 498, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 489, 0, 0, 306, 260, 0, 0, 0, 0,
	545, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 483, 522, 521, 470, 479,
	0, 0, 202, 145, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 537, 0, 0, 0, 0, 0, 0,
	443, 456, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 499, 0, 455, 0, 0, 494, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 497,
	501, 214, 559, 495, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 560,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 543, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 496, 0, 296, 278, 556, 444,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 541, 274, 0,
	0, 555, 536, 538, 539, 542, 546, 547, 548, 549,
	550, 552, 554, 558, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 500, 264, 265, 266, 267, 544, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 368, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	566, 540, 565, 567, 568, 564, 569, 570, 551, 462,
	0, 504, 562, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 529, 509, 510, 511, 461, 512,
	507, 508, 530, 502, 526, 527, 485, 505, 513, 525,
	514, 528, 531, 532, 571, 572, 520, 573, 517, 533,
	524, 523, 515, 503, 534, 535, 488, 487, 518, 519,
	506, 314, 498, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 545, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 0,
	483, 522, 521, 470, 479, 0, 0, 202, 145, 471,
	0, 478, 472, 476, 475, 473, 474, 0, 537, 0,
	0, 0, 0, 0, 0, 443, 456, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 499, 0, 455,
	0, 0, 494, 480, 481, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 477, 497, 501, 214, 559, 495, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 560, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 337, 0, 0, 543, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 496,
	0, 296, 278, 556, 444, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 541, 274, 0, 0, 555, 536, 538, 539,
	542, 546, 547, 548, 549, 550, 552, 554, 558, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 500, 264,
	265, 266, 267, 544, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 368, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 566, 540, 565, 567, 568,
	564, 569, 570, 551, 462, 0, 504, 562, 561, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 529,
	509, 510, 511, 461, 512, 507, 508, 530, 502, 526,
	527, 485, 505, 513, 525, 514, 528, 531, 532, 571,
	572, 520, 573, 517, 533, 524, 523, 515, 503, 534,
	535, 488, 487, 518, 519, 506, 314, 498, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 1144, 0, 0, 0,
	459, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 489, 0, 0, 306, 260, 0, 0, 0, 0,
	545, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 483, 522, 521, 470, 479,
	0, 0, 202, 145, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 499, 0, 455, 0, 0, 494, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 497,
	501, 214, 559, 495, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 560,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 543, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 496, 0, 296, 278, 556, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 1145, 1146, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 541, 274, 0,
	0, 555, 536, 538, 539, 542, 546, 547, 548, 549,
	550, 552, 554, 558, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 500, 264, 265, 266, 267, 544, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 368, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	566, 540, 565, 567, 568, 564, 569, 570, 551, 462,
	0, 504, 562, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 529, 509, 510, 511, 461, 512,
	507, 508, 530, 502, 526, 527, 485, 505, 513, 525,
	514, 528, 531, 532, 571, 572, 520, 573, 517, 533,
	524, 523, 515, 503, 534, 535, 488, 487, 518, 519,
	506, 314, 498, 0, 345, 346, 347, 367, 331, 0,
	218, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 221,
	0, 0, 246, 0, 0, 0, 489, 0, 0, 306,
	260, 0, 0, 0, 0, 545, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 522, 521, 470, 479, 0, 0, 202, 145, 471,
	0, 478, 472, 476, 475, 473, 474, 0, 537, 0,
	0, 0, 0, 0, 0, 443, 456, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 499, 0, 455,
	0, 0, 494, 480, 481, 0, 0, 193, 311, 327,
	203, 302, 340, 208, 309, 198, 275, 298, 0, 0,
	195, 325, 308, 257, 240, 241, 194, 0, 293, 219,
	232, 215, 273, 477, 497, 501, 214, 559, 495, 335,
	197, 0, 334, 272, 321, 326, 258, 252, 196, 323,
	256, 251, 244, 223, 560, 236, 284, 250, 285, 237,
	262, 261, 263, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 337, 0, 0, 543, 0,
	0, 0, 310, 0, 0, 245, 0, 0, 0, 496,
	0, 296, 278, 556, 444, 0, 294, 248, 322, 286,
	328, 312, 336, 290, 287, 188, 313, 217, 259, 199,
	201, 213, 220, 222, 224, 225, 268, 269, 281, 301,
	315, 316, 317, 216, 209, 295, 210, 234, 211, 189,
	303, 212, 191, 282, 320, 0, 230, 291, 255, 192,
	254, 283, 319, 318, 200, 344, 350, 351, 355, 0,
	356, 0, 0, 0, 364, 0, 0, 0, 0, 0,
	358, 0, 0, 0, 0, 0, 0, 349, 228, 185,
	186, 332, 541, 274, 0, 0, 555, 536, 538, 539,
	542, 546, 547, 548, 549, 550, 552, 554, 558, 299,
	0, 0, 0, 0, 0, 239, 280, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 330, 342, 359, 362, 0, 0, 0, 190,
	361, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 341, 0, 0, 0, 0, 0, 500, 264,
	265, 266, 267, 544, 0, 207, 360, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 227, 233, 368, 235, 206,
	279, 229, 339, 242, 0, 365, 0, 0, 0, 0,
	271, 238, 304, 243, 249, 292, 338, 277, 297, 204,
	329, 305, 253, 0, 0, 566, 540, 565, 567, 568,
	564, 569, 570, 551, 462, 0, 504, 562, 561, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 247, 0, 288, 226, 529,
	509, 510, 511, 461, 512, 507, 508, 530, 502, 526,
	527, 485, 505, 513, 525, 514, 528, 531, 532, 571,
	572, 520, 573, 517, 533, 524, 523, 515, 503, 534,
	535, 488, 487, 518, 519, 506, 314, 498, 0, 345,
	346, 347, 367, 331, 0, 218, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 221, 0, 0, 246, 0, 0,
	0, 489, 0, 0, 306, 260, 0, 0, 0, 0,
	545, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 483, 522, 521, 470, 479,
	0, 0, 202, 145, 471, 0, 478, 472, 476, 475,
	473, 474, 0, 537, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 0, 0,
	0, 0, 499, 0, 455, 0, 0, 494, 480, 481,
	0, 0, 193, 311, 327, 203, 302, 340, 208, 309,
	198, 275, 298, 0, 0, 195, 325, 308, 257, 240,
	241, 194, 0, 293, 219, 232, 215, 273, 477, 497,
	501, 214, 559, 495, 335, 197, 0, 334, 272, 321,
	326, 258, 252, 196, 323, 256, 251, 244, 223, 560,
	236, 284, 250, 285, 237, 262, 261, 263, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	337, 0, 0, 543, 0, 0, 0, 310, 0, 0,
	245, 0, 0, 0, 496, 0, 296, 278, 556, 0,
	0, 294, 248, 322, 286, 328, 312, 336, 290, 287,
	188, 313, 217, 259, 199, 201, 213, 220, 222, 224,
	225, 268, 269, 281, 301, 315, 316, 317, 216, 209,
	295, 210, 234, 211, 189, 303, 212, 191, 282, 320,
	0, 230, 291, 255, 192, 254, 283, 319, 318, 200,
	344, 350, 351, 355, 0, 356, 0, 0, 0, 364,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 0,
	0, 0, 349, 228, 185, 186, 332, 541, 274, 0,
	0, 555, 536, 538, 539, 542, 546, 547, 548, 549,
	550, 552, 554, 558, 299, 0, 0, 0, 0, 0,
	239, 280, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 330, 342, 359,
	362, 0, 0, 0, 190, 361, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 341, 0, 0,
	0, 0, 0, 500, 264, 265, 266, 267, 544, 0,
	207, 360, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	227, 233, 368, 235, 206, 279, 229, 339, 242, 0,
	365, 0, 0, 0, 0, 271, 238, 304, 243, 249,
	292, 338, 277, 297, 204, 329, 305, 253, 0, 0,
	566, 540, 565, 567, 568, 564, 569, 570, 551, 462,
	0, 504, 562, 561, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	247, 0, 288, 226, 529, 509, 510, 511, 461, 512,
	507, 508, 530, 502, 526, 527, 485, 505, 513, 525,
	514, 528, 531, 532, 571, 572, 520, 573, 517, 533,
	524, 523, 515, 503, 534, 535, 488, 487, 518, 519,
	506, 0, 0, 0, 345, 346, 347, 367, 331, 0,
	218, 136, 314, 38, 124, 104, 0, 0, 0, 0,
	0, 0, 0, 276, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 379, 381, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 368, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 39, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 105, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 896, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 202, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 1606, 1608, 1609, 1610,
	1611, 1612, 1613, 0, 1617, 1614, 1615, 1616, 273, 0,
	1601, 1602, 1603, 1604, 882, 1587, 1607, 0, 1588, 272,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1605, 284, 250, 285, 237, 262, 261, 263, 907,
	909, 911, 913, 916, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 1600, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 368, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	906, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	1671, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 0,
	335, 197, 0, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1675, 337, 0, 0, 0,
	1668, 0, 1667, 310, 1669, 1672, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 290, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 1673, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 357,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 368, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 271, 238, 304, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 314, 0, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1440, 0, 0, 0, 0, 221, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 306, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 1441,
	0, 0, 0, 202, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 786, 787, 788,
	785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 311, 327, 203, 302, 340, 208,
	309, 198, 275, 298, 0, 0, 195, 325, 308, 257,
	240, 241, 194, 0, 293, 219, 232, 215, 273, 0,
	324, 352, 214, 343, 0, 335, 197, 0, 334, 272,
	321, 326, 258, 252, 196, 323, 256, 251, 244, 223,
	366, 236, 284, 250, 285, 237, 262, 261, 263, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 245, 0, 0, 0, 353, 0, 296, 278, 0,
	0, 0, 294, 248, 322, 286, 328, 312, 336, 290,
	287, 188, 313, 217, 259, 199, 201, 213, 220, 222,
	224, 225, 268, 269, 281, 301, 315, 316, 317, 216,
	209, 295, 210, 234, 211, 189, 303, 212, 191, 282,
	320, 0, 230, 291, 255, 192, 254, 283, 319, 318,
	200, 344, 350, 351, 355, 0, 356, 0, 0, 0,
	364, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	0, 0, 0, 349, 228, 185, 186, 332, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	348, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 239, 280, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 330, 342,
	359, 362, 0, 0, 0, 190, 361, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 341, 0,
	0, 0, 0, 0, 357, 264, 265, 266, 267, 231,
	0, 207, 360, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 227, 233, 368, 235, 206, 279, 229, 339, 242,
	0, 365, 0, 0, 0, 0, 271, 238, 304, 243,
	249, 292, 338, 277, 297, 204, 329, 305, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 247, 0, 288, 226, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 0, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 314, 0, 0, 345, 346, 347, 367, 331,
	0, 218, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 669, 0, 246, 0, 0, 0, 0, 0, 0,
	306, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 677, 678, 0, 0, 0, 0, 202, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 311,
	327, 203, 302, 340, 208, 309, 198, 275, 298, 0,
	0, 195, 325, 308, 257, 240, 241, 194, 0, 293,
	219, 232, 215, 273, 0, 324, 352, 214, 343, 652,
	335, 197, 651, 334, 272, 321, 326, 258, 252, 196,
	323, 256, 251, 244, 223, 366, 236, 284, 250, 285,
	237, 262, 261, 263, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 245, 0, 0, 0,
	353, 0, 296, 278, 0, 0, 0, 294, 248, 322,
	286, 328, 312, 336, 667, 287, 188, 313, 217, 259,
	199, 201, 213, 220, 222, 224, 225, 268, 269, 281,
	301, 315, 316, 317, 216, 209, 295, 210, 234, 211,
	189, 303, 212, 191, 282, 320, 0, 230, 291, 255,
	192, 254, 283, 319, 318, 200, 344, 350, 351, 355,
	0, 356, 0, 0, 0, 364, 0, 0, 0, 0,
	0, 358, 0, 0, 0, 0, 0, 0, 349, 228,
	185, 186, 332, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 348, 0, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 239, 280, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 330, 342, 359, 362, 0, 0, 0,
	190, 361, 0, 0, 0, 0, 0, 0, 668, 333,
	0, 0, 0, 341, 0, 0, 0, 0, 0, 671,
	264, 265, 266, 267, 231, 0, 207, 360, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 227, 233, 368, 235,
	206, 279, 229, 339, 242, 0, 365, 0, 0, 0,
	0, 679, 674, 675, 243, 249, 292, 338, 277, 297,
	204, 329, 305, 676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 247, 0, 288, 226,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 0, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 136, 314, 0,
	345, 346, 347, 367, 331, 0, 218, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 93, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 1462, 0, 144, 0, 0,
	0, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 368, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 105, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 136, 314, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 246, 0, 0, 0, 93,
	0, 0, 306, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 1453, 0, 144, 0, 0, 0, 0, 0, 0,
	202, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 311, 327, 203, 302, 340, 208, 309, 198, 275,
	298, 0, 0, 195, 325, 308, 257, 240, 241, 194,
	0, 293, 219, 232, 215, 273, 0, 324, 352, 214,
	343, 0, 335, 197, 0, 334, 272, 321, 326, 258,
	252, 196, 323, 256, 251, 244, 223, 366, 236, 284,
	250, 285, 237, 262, 261, 263, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 310, 0, 0, 245, 0,
	0, 0, 353, 0, 296, 278, 0, 0, 0, 294,
	248, 322, 286, 328, 312, 336, 290, 287, 188, 313,
	217, 259, 199, 201, 213, 220, 222, 224, 225, 268,
	269, 281, 301, 315, 316, 317, 216, 209, 295, 210,
	234, 211, 189, 303, 212, 191, 282, 320, 0, 230,
	291, 255, 192, 254, 283, 319, 318, 200, 344, 350,
	351, 355, 0, 356, 0, 0, 0, 364, 0, 0,
	0, 0, 0, 358, 0, 0, 0, 0, 0, 0,
	349, 228, 185, 186, 332, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 348, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 239, 280,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 330, 342, 359, 362, 0,
	0, 0, 190, 361, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 357, 264, 265, 266, 267, 231, 0, 207, 360,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 227, 233,
	368, 235, 206, 279, 229, 339, 242, 0, 365, 0,
	0, 0, 0, 271, 238, 304, 243, 249, 292, 338,
	277, 297, 204, 329, 305, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 247, 105,
	288, 226, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 0, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 136,
	314, 0, 345, 346, 347, 367, 331, 0, 218, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 93, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 105, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 677, 678, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 652, 335, 197, 651, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 679, 674, 675, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 1039,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1037, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 1033, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1037, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2585, 0, 144,
	522, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1037, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2290, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1733, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1037, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 1750,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1037, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2639, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	522, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2567, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 2505, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2378, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 2412, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 2124, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1037, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 1733, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 314, 0, 0, 345, 346,
	347, 367, 331, 0, 218, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 306, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 202, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 311, 327, 203, 302, 340, 208, 309, 198,
	275, 298, 0, 0, 195, 325, 308, 257, 240, 241,
	194, 0, 293, 219, 232, 215, 273, 0, 324, 352,
	214, 343, 0, 335, 197, 0, 334, 272, 321, 326,
	258, 252, 196, 323, 256, 251, 244, 223, 366, 236,
	284, 250, 285, 237, 262, 261, 263, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 245,
	0, 0, 0, 353, 0, 296, 278, 0, 0, 0,
	294, 248, 322, 286, 328, 312, 336, 290, 287, 188,
	313, 217, 259, 199, 201, 213, 220, 222, 224, 225,
	268, 269, 281, 301, 315, 316, 317, 216, 209, 295,
	210, 234, 211, 189, 303, 212, 191, 282, 320, 0,
	230, 291, 255, 192, 254, 283, 319, 318, 200, 344,
	350, 351, 355, 0, 356, 0, 0, 0, 364, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 349, 228, 185, 186, 332, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 348, 0,
	0, 0, 0, 299, 0, 0, 0, 0, 0, 239,
	280, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 330, 342, 359, 362,
	0, 0, 0, 190, 361, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 357, 264, 265, 266, 267, 231, 0, 207,
	360, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 227,
	233, 368, 235, 206, 279, 229, 339, 242, 0, 365,
	0, 0, 0, 0, 271, 238, 304, 243, 249, 292,
	338, 277, 297, 204, 329, 305, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 247,
	0, 288, 226, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	314, 0, 0, 345, 346, 347, 367, 331, 0, 218,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 306, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 1762, 0, 0, 0, 202, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 311, 327, 203,
	302, 340, 208, 309, 198, 275, 298, 0, 0, 195,
	325, 308, 257, 240, 241, 194, 0, 293, 219, 232,
	215, 273, 0, 324, 352, 214, 343, 0, 335, 197,
	0, 334, 272, 321, 326, 258, 252, 196, 323, 256,
	251, 244, 223, 366, 236, 284, 250, 285, 237, 262,
	261, 263, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 245, 0, 0, 0, 353, 0,
	296, 278, 0, 0, 0, 294, 248, 322, 286, 328,
	312, 336, 290, 287, 188, 313, 217, 259, 199, 201,
	213, 220, 222, 224, 225, 268, 269, 281, 301, 315,
	316, 317, 216, 209, 295, 210, 234, 211, 189, 303,
	212, 191, 282, 320, 0, 230, 291, 255, 192, 254,
	283, 319, 318, 200, 344, 350, 351, 355, 0, 356,
	0, 0, 0, 364, 0, 0, 0, 0, 0, 358,
	0, 0, 0, 0, 0, 0, 349, 228, 185, 186,
	332, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 348, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 0, 239, 280, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 330, 342, 359, 362, 0, 0, 0, 190, 361,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 357, 264, 265,
	266, 267, 231, 0, 207, 360, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 227, 233, 368, 235, 206, 279,
	229, 339, 242, 0, 365, 0, 0, 0, 0, 271,
	238, 304, 243, 249, 292, 338, 277, 297, 204, 329,
	305, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 247, 0, 288, 226, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	0, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 0, 0, 0, 345, 346,
	347, 367, 331, 314, 218, 0, 0, 1636, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 368,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	1037, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	1321, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 368, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 368,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	397, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 398, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 368, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 368,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 213, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 0, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 227, 233, 368, 235, 206, 279, 229, 339,
	242, 0, 365, 0, 0, 0, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 314, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 306, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 202,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	311, 327, 203, 302, 340, 208, 309, 198, 275, 298,
	0, 0, 195, 325, 308, 257, 240, 241, 194, 0,
	293, 219, 232, 215, 273, 0, 324, 352, 214, 343,
	0, 335, 197, 0, 334, 272, 321, 326, 258, 252,
	196, 323, 256, 251, 244, 223, 366, 236, 284, 250,
	285, 237, 262, 261, 263, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 310, 0, 0, 245, 0, 0,
	0, 353, 0, 296, 278, 0, 0, 0, 294, 248,
	322, 286, 328, 312, 336, 290, 287, 188, 313, 217,
	259, 199, 201, 213, 220, 222, 224, 225, 268, 269,
	281, 301, 315, 316, 317, 216, 209, 295, 210, 234,
	211, 189, 303, 212, 191, 282, 320, 0, 230, 291,
	255, 192, 254, 283, 319, 318, 200, 344, 350, 351,
	355, 0, 356, 0, 0, 0, 364, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 349,
	228, 185, 186, 332, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 348, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 239, 280, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 330, 342, 359, 362, 0, 0,
	0, 190, 361, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 341, 0, 0, 0, 0, 0,
	357, 264, 265, 266, 267, 231, 0, 207, 360, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 227, 233, 368,
	235, 206, 279, 229, 339, 242, 0, 365, 0, 0,
	0, 0, 271, 238, 304, 243, 249, 292, 338, 277,
	297, 204, 329, 305, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 247, 0, 288,
	226, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 314, 0,
	0, 345, 346, 347, 367, 331, 0, 218, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 306, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 202, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 311, 327, 203, 302, 340,
	208, 309, 198, 275, 298, 0, 0, 195, 325, 308,
	257, 240, 241, 194, 0, 293, 219, 232, 215, 273,
	0, 324, 352, 214, 343, 0, 335, 197, 0, 334,
	272, 321, 326, 258, 252, 196, 323, 256, 251, 244,
	223, 366, 236, 284, 250, 285, 237, 262, 261, 263,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 245, 0, 0, 0, 353, 0, 296, 278,
	0, 0, 0, 294, 248, 322, 286, 328, 312, 336,
	290, 287, 188, 313, 217, 259, 199, 201, 438, 220,
	222, 224, 225, 268, 269, 281, 301, 315, 316, 317,
	216, 209, 295, 210, 234, 211, 189, 303, 212, 191,
	282, 320, 0, 230, 291, 255, 192, 254, 283, 319,
	318, 200, 344, 350, 351, 355, 0, 356, 0, 0,
	0, 364, 0, 0, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 349, 228, 185, 186, 332, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 348, 0, 0, 1374, 0, 299, 0, 0, 0,
	0, 0, 239, 280, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 330,
	342, 359, 362, 0, 0, 0, 190, 361, 1376, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 341,
	0, 0, 0, 0, 0, 357, 264, 265, 266, 267,
	231, 0, 207, 360, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 354, 227, 233, 368, 235, 206, 279, 229, 339,
	242, 136, 365, 38, 124, 104, 0, 271, 238, 304,
	243, 249, 292, 338, 277, 297, 204, 329, 305, 253,
	0, 129, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 130, 184, 0, 0, 0, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 0, 0, 133, 0,
	187, 0, 247, 0, 288, 226, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 0, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 1374, 0, 0, 345, 346, 347, 367,
	331, 0, 218, 0, 0, 1349, 0, 0, 1348, 0,
	0, 1374, 1360, 0, 0, 0, 0, 0, 125, 126,
	0, 127, 128, 1364, 0, 0, 0, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 1376, 0, 1355, 1357, 1359,
	0, 1361, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1371,
	1372, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1356, 0, 0, 0, 103, 123, 134, 0,
	76, 0, 0, 1375, 0, 0, 0, 0, 417, 0,
	416, 423, 413, 0, 0, 0, 0, 122, 116, 115,
	0, 0, 420, 421, 44, 422, 426, 0, 0, 408,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 431,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 437, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 118, 119, 120, 0, 1368, 0, 0, 0,
	0, 0, 417, 1358, 416, 423, 413, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 420, 421, 0, 422,
	426, 1360, 0, 408, 0, 0, 0, 0, 0, 0,
	88, 0, 1364, 431, 121, 0, 89, 0, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 0, 1353, 0, 0, 0, 1355, 1357, 1359, 0,
	1361, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1371, 1372,
	1353, 0, 0, 0, 1355, 1357, 1359, 0, 1361, 1362,
	1363, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 0, 90,
	417, 0, 416, 423, 413, 0, 0, 0, 0, 37,
	0, 0, 1375, 0, 420, 421, 0, 422, 426, 0,
	0, 408, 0, 409, 411, 410, 0, 0, 0, 0,
	1375, 431, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 1373,
	0, 434, 0, 0, 39, 0, 0, 0, 412, 0,
	435, 0, 403, 437, 0, 0, 1352, 1373, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 1368, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 409, 411, 410,
	0, 0, 0, 1368, 0, 0, 415, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 434, 91, 92, 96, 0,
	0, 0, 412, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 418, 424, 0, 425, 427, 0, 0, 428,
	429, 430, 0, 0, 432, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 411, 410, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 0, 414, 418, 424, 0, 425,
	427, 0, 0, 428, 429, 430, 0, 0, 432, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 418, 424, 0, 425, 427, 0,
	0, 428, 429, 430, 0, 0, 432, 433,
}

var yyPact = [...]int{
	30001, -1000, -311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -219, 28587, 28587,
	-1000, -1000, 1647, -1000, 28082, 9891, 29092, 174, 136, 29092,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 535, -1000, 27577, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 450, 30208,
	29597, 7860, 29092, -290, -1000, 2225, -155, -1000, -1000, -1000,
	-1000, -1000, -1000, 3398, 551, 27072, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2482, 191, 551, 690, 697, 711, 711, 11911,
	-78, -79, 2225, 254, 352, -1000, 893, 30001, 29092, 1563,
	413, 29092, -1000, 1129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 413,
	-1000, -1000, -1000, 2225, 2225, -1000, 29092, 29092, -19, 1202,
	-1000, 262, 221, 245, 1126, -1000, -1000, -1000, -1000, -1000,
	2254, -1000, 29092, 29092, 1928, 29092, -1000, 1402, 365, 30380,
	2091, 792, 575, 1956, -1000, -1000, 1921, -1000, 78, 827,
	345, 426, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 92,
	-1000, 2158, -1000, -1000, 59, -1000, -1000, 62, -1000, -1000,
	-1000, -81, -1000, -1000, -1000, -1000, -1000, -1000, -166, -1000,
	-1000, 738, 1246, 7860, -1000, 1565, -1000, 2906, -1000, -1000,
	-1000, -1000, 5325, 9375, 9375, 9375, 9375, -1000, -1000, 1796,
	7860, 1920, 1918, -1000, -1000, -1000, -1000, 1124, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1560, 8870, -1000, 1913, 1912, 1910, 1909, 1908, 1907, 1906,
	1889, 1882, 1880, 1703, 1765, 1879, 1558, 1556, 1877, 1874,
	1873, 1553, 1703, 1703, 1870, 1867, 1864, 1861, 1860, 1859,
	1857, 1847, 1846, 1842, 1841, 1840, 1836, 1835, 1828, 1824,
	1816, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 351, -1000, 1123, 1071, -1000, 1813,
	2072, 2167, 1732, 2230, 2147, 2144, 2137, 2128, 1421, -1000,
	-1000, 29092, 29092, 438, 438, 438, 438, 500, 438, 529,
	528, 527, -1000, -1000, -1000, -1000, -1000, -1000, 611, -1000,
	-1000, -1000, -1000, 1007, 29092, -1000, 1747, 1161, 2170, 385,
	373, 260, -1000, 1222, 1222, 1222, 1161, 250, 371, 2167,
	2167, -93, -113, 1161, 1161, -113, 1161, 105, -1000, -1000,
	-1000, 1222, 353, 1222, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2152, 2150, 450, 29092, 52, 29092, 450, 471, -1000,
	-174, -1000, -1000, 693, -1000, 635, -1000, 1402, 347, 340,
	1024, 1223, -1000, 1170, 29092, 29092, 29092, 1170, 1170, 14944,
	14439, -1000, 29092, -1000, 2167, 1732, -1000, 1673, 1687, 1671,
	1732, 450, 450, 450, 450, 450, 450, 450, 29092, 29092,
	6840, 6840, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	258, 2086, 227, 1812, -1000, 29092, 271, 2167, 2072, 2167,
	-1000, -1000, 1121, 1420, 1551, -1000, -1000, 262, 1114, -1000,
	859, -1000, -1000, -1000, -1000, 29092, 231, -1000, -1000, 1536,
	1804, -1000, 348, 783, 1100, -1000, 259, 30292, 23529, 1402,
	23529, 29092, -1000, -1000, -1000, -1000, -1000, -1000, -85, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 74, -1000, 7860, 7860, 7860, 7860, 7860, -1000,
	466, 8365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9375,
	9375, 9375, 9375, 9375, 9375, 9375, 9375, 9375, 9375, 9375,
	9375, 1795, 1187, 9375, 9375, 9375, 9375, 1687, 2304, 1011,
	162, -1000, -1000, -1000, -1000, -1000, 1214, 1246, 7860, 7860,
	29092, -1000, 2532, 7860, 7860, 2474, 7860, 2116, 3809, 29092,
	7860, -1000, 1669, 1668, -1000, -1000, 1325, 7860, 7860, -1000,
	-1000, 7860, 9375, 7860, -1000, -1000, -1000, 157, 2116, 2116,
	7860, 7860, 2116, 2116, 2116, 1234, 2116, 2116, 2116, 2116,
	2116, 2116, 2116, 2116, 29092, 2052, 38, -1000, -1000, -1000,
	1706, -1000, 1744, 1744, 1744, 1744, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1757, 1801, -1000, -1000, 1743,
	1743, 1743, 1706, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1755, 1755,
	1756, 1755, 29092, 2167, -290, 6335, -1000, -294, 2072, 7860,
	-1000, -1000, 7860, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1550, 2111, -1000, 1799, 1120, 29092, 1229, 29092, 23529,
	1402, 29092, 29092, 438, 438, 438, 471, -1000, 29092, 1007,
	2106, 29092, 2245, 9375, 9375, 26567, 1222, 1161, -1000, 29092,
	-1000, -1000, -1000, 1222, 29092, 1222, 2245, 1222, -1000, -1000,
	-1000, 1161, 1161, -1000, -1000, -1000, -1000, 1222, 1222, -1000,
	-1000, -96, 2245, 2245, -126, -1000, 29092, 29092, 438, 29092,
	-1000, 29092, -1000, -1000, 29092, 29918, 29092, 29092, 2143, -1000,
	23529, 21509, -1000, -147, 685, 643, 651, -1000, -1000, 341,
	686, 13934, 294, 23529, 4819, -1000, -1000, 1170, 1170, 1170,
	4819, 4819, 1077, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	989, -1000, 65, 2072, -1000, -1000, -1000, -1000, -1000, 29092,
	23529, 1402, 29092, 29092, 29092, 29092, -1000, 1798, 1065, -1000,
	-1000, 11406, 1119, 1065, 1543, 29092, 1540, 1954, 2017, -1000,
	1797, 12923, 29092, -1000, -1000, -291, -1000, 12417, 29092, 2072,
	-1000, 2072, 29092, -1000, 2169, -1000, 262, 156, -1000, -1000,
	-1000, -1000, -1000, -1000, 1110, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 982, -1000, 29092, -1000, -1000, 259,
	23529, 24539, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 106,
	-1000, -1000, 148, -1000, 492, 2, 1111, -1000, -1000, 43,
	142, 560, 1246, -1000, 1226, 1226, 1231, -1000, 485, -1000,
	-1000, -1000, -1000, 1796, -1000, -1000, -1000, 2194, 1242, -1000,
	1166, 1166, 1078, 1078, 1078, 1078, 1078, 1405, 1405, -1000,
	-1000, -1000, 5325, 1795, 9375, 9375, 9375, 9375, 423, 423,
	2836, 2918, -1000, 7860, 1215, -1000, 7860, 1506, 898, 1109,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1667, 738, 1665, 1557, 2247, 1663, 7860, -1000, -1000, 1528,
	7355, -1000, -1000, -1000, 1662, 1105, 1659, -1000, -1000, -1000,
	1657, 1107, 848, 1656, 1259, 1655, 916, 7860, 7860, 1102,
	1084, 7860, 7860, 7860, 7860, 1653, 7860, 7860, 7860, 7860,
	7860, 7860, 7860, 7860, -1000, 7860, 33, -1000, -1000, -1000,
	-1000, 1419, -1000, 1412, -1000, -1000, -1000, 1539, 1539, -1000,
	1411, -1000, -1000, -1000, -1000, 1410, -1000, -1000, 1407, -1000,
	-1000, -1000, -1000, 1073, -1000, 1246, -1000, 1537, -1000, 1063,
	885, -1000, 1315, -1000, -1000, 29092, 10396, 29092, 1747, 2090,
	29, -1000, 925, -1000, 2, 751, 1927, 2047, 29092, 29092,
	29092, 26062, -1000, 1794, 1067, -1000, -1000, 7860, -1000, -1000,
	1926, 29092, 29092, 2245, -1000, -1000, -1000, 29092, -1000, -1000,
	-1000, 29092, 2245, 2245, 1161, 1222, 1222, -1000, -1000, 1222,
	-1000, 1104, -1000, 29092, -1000, -1000, 1747, -1000, 10901, 812,
	30107, -1000, 1174, 1174, 673, 1174, 1174, 1174, 1174, 312,
	310, 1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174,
	1174, 1174, 1174, 1174, 1174, 1793, -1000, 24, 2141, 95,
	925, 2393, 1069, -1000, -1000, -1000, -1000, 16459, 16459, 13429,
	16459, -1000, 1117, -1000, -1000, 655, 625, 639, -1000, -1000,
	475, -1000, -1000, 751, -1000, -1000, -1000, 1783, 1200, -1000,
	-1000, 1765, -1000, 4819, 4819, 4819, -1000, -1000, 17469, 29092,
	-1000, -170, -1000, -149, -1000, -1000, 803, 751, 1953, 774,
	-1000, 774, -1000, 10396, 2245, 6840, -1000, 21509, -1000, -1000,
	25549, -1000, 25044, 2245, -298, 968, -122, -1000, 2069, -291,
	29092, 29092, 1066, 104, -1000, 1056, -1000, 743, -1000, 1759,
	-1000, 1049, 2002, 762, -1000, 1198, -1000, -1000, 1098, -22,
	-1000, -1000, 29092, 1536, 1042, 24539, 756, -1000, 474, 1097,
	1095, -1000, 23529, 68, 23529, -1000, 23529, -1000, -1000, 228,
	-1000, 29092, 2071, -1000, -1000, -1000, 1480, -315, -1000, -1000,
	-1000, -1000, -1000, 1041, -1000, 423, 423, 2836, 2705, -1000,
	9375, -1000, 9375, 2296, 1206, -1000, 7860, 1305, 265, 642,
	16964, 29092, -1000, -1000, 7860, 7860, -1000, 2285, -1000, 7860,
	7860, 1339, -1000, 29092, -1000, -1000, -1000, -1000, 16964, -1000,
	9375, -1000, 7860, 836, 2258, -72, -72, 2241, 2189, 2184,
	1040, -72, 2179, 2123, 2118, 2109, 2073, 2063, 2029, 1943,
	1246, -1000, -1000, 1645, 1644, 1037, -1000, 1033, 1642, 1032,
	1027, 6335, -1000, -122, 7860, 7860, 7860, 2018, -1000, -1000,
	39, 1641, 771, -1000, -1000, -1000, 2578, 1744, 1744, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1757, -1000,
	-1000, 1743, 1743, 1743, 1706, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1755, 1755, 1756, 1755, -1000, 2103,
	-1000, -68, 1174, 359, 23529, 338, -1000, 1948, 297, -1000,
	2047, -1000, 749, 1753, 1752, 1751, 29092, 1028, -1000, 1094,
	30001, -1000, 29092, 1246, -1000, 1402, -1000, 1161, -1000, -1000,
	2245, 1002, -1000, -1000, 2245, 1161, 1161, 1222, 29092, -1000,
	2100, -1000, -1000, -1000, 2578, 796, -1000, 29092, 1258, 620,
	438, 620, 1253, 1750, -1000, -1000, -1000, 29092, 29092, 29092,
	1251, 1244, 30125, -1000, 1398, -1000, 1391, 1174, 1174, 1389,
	1532, 1530, 1521, 1174, 1174, 1387, 1520, 24034, 1386, 1385,
	1382, 1395, 1517, 503, 1374, 1371, 1363, 29092, 1748, 1447,
	-68, 1174, 90, 1191, 359, 29092, 21509, 21509, 21509, 21509,
	-1000, 1986, 1980, -1000, 1974, 1973, 2030, 29092, 21509, 1747,
	-1000, 24034, -1000, -1000, -1000, 1687, 1008, 2021, 632, 7860,
	-1000, -1000, -1000, 616, 23529, 1514, 294, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29092, 29092, 1639, 2242, -1000,
	769, -1000, -1000, 1087, -1000, 2242, -1000, 1376, 1512, -42,
	-38, 1243, 743, 762, 997, -1000, 104, 29092, 1997, 1746,
	-1000, 29092, -291, 6335, 239, -291, 29092, 6335, 29092, 1375,
	-1000, -1000, -1000, 2243, 23529, 1402, 1148, 23024, -1000, 56,
	-1000, 103, 303, 1510, -1000, 509, 77, -1000, 1182, 1480,
	-1000, -1000, -1000, 9375, -1000, -1000, -1000, -1000, 1246, 7860,
	1637, -1000, 621, 621, 1636, -1000, 1744, 1744, -1000, 1706,
	1743, 1706, 621, 621, 1631, -1000, 1403, 1916, -1000, 1875,
	1805, 7860, -1000, 1618, 3421, 838, -187, -72, -1000, 1742,
	-1000, -72, -72, -72, -72, -1000, -72, -72, -72, -72,
	-72, -72, -72, -72, -1000, -1000, -1000, 1509, -1000, -1000,
	-1000, 1370, -1000, 1349, -1000, -42, 1246, 1246, -1000, -1000,
	2050, 1508, 539, 10396, 2039, 230, 1341, -1000, -1000, 22519,
	306, -1000, -1000, -1000, 415, 91, 1345, 305, -1000, 29092,
	29092, -1000, -1000, -1000, -1000, -1000, 1174, 1174, 1174, 10901,
	10901, 10901, 413, 825, 1082, 21509, 29092, -1000, 21004, 1599,
	-1000, 751, 2245, -1000, 29092, -1000, 2245, 2245, 1161, -1000,
	230, 2165, -1000, -1000, 29092, 29092, -1000, 29092, 29092, 438,
	7860, -1000, -1000, -1000, 29092, -1000, -1000, -1000, -1000, 16964,
	16964, -1000, -1000, -1000, -1000, 1503, 1498, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 331,
	29092, 996, -1000, 1179, 1341, 22519, 1177, 1497, 306, 948,
	-1000, 1175, 1925, 1939, 1925, -1000, -1000, -1000, -1000, 1976,
	-1000, 1970, -1000, -1000, 948, -1000, -1000, -1000, -1000, -1000,
	632, -1000, 2166, 620, 620, 620, 1598, -1000, 756, 1597,
	-1000, -1000, -1000, -1000, -1000, 2233, 2228, 22014, 2233, -1000,
	-298, -296, -28, 2223, 2221, 2273, 230, 29092, 222, -1000,
	-291, 29092, -1000, -1000, 1594, 755, -291, -1000, 743, -1000,
	-1000, -1000, -1000, 1402, -1000, 102, -1000, -1000, -1000, -1000,
	-1000, -1000, -9, -1000, 29092, -1000, 1480, 1472, 75, -1000,
	1246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7860, -1000, -1000, -1000,
	1784, -1000, -1000, 7860, 1585, 1471, -1000, 410, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1577, 1576, -296, -1000, -1000, -1000, 2578, -1000, 1142,
	-1000, -1000, 1469, 1, -1000, -1000, -1000, 1465, 1464, 1344,
	-1000, -1000, 1361, 1064, 12, -1000, -1000, -1000, -1000, -1000,
	-1000, 1741, 16964, 15954, 1463, 1574, 752, -1000, 1562, 1541,
	16459, 21509, 21004, 892, -1000, 1075, -1000, -1000, -1000, 2245,
	-1000, -1000, 2245, -1000, -1000, 2165, -1000, -1000, 1233, 9375,
	-1000, -1000, 1462, 15954, 517, 564, 1739, -1000, 267, 2272,
	-1000, 1240, 1236, -1000, 29092, -1000, 1737, 1689, 182, 1735,
	-1000, 1734, 1730, 29092, 1609, -1000, -1000, -1000, -1000, -1000,
	-1000, 355, 991, -1000, 1447, 1445, -1000, 1, 1444, -1000,
	-1000, 2185, 29092, 6335, -1000, -1000, 7860, 1726, -1000, 7860,
	-1000, -1000, -1000, -1000, -1000, 1724, 2074, -1000, -1000, -1000,
	-1000, -1000, -1000, 7860, 7860, -1000, -1000, -1000, -298, 1442,
	-1000, -1000, 2220, 1441, 1408, 29092, -1000, -1000, -291, -1000,
	743, 990, -1000, 743, 751, -1000, -1000, 104, -1000, -1000,
	-1000, 1596, -1000, 1590, -72, -1000, 2185, -1000, 2219, -1000,
	-1000, -298, -229, -1000, -1000, -1000, -1000, 216, -1000, -1000,
	100, -1000, -1000, 1360, 333, -1000, 19994, -1000, -1000, -1000,
	-1000, -1000, 30125, 10901, 74, 30125, 2245, 892, 1075, -1000,
	-1000, 1112, -1000, -1000, -1000, -1000, 2836, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1338, 1719,
	-107, -1000, -1000, 1712, 19994, 273, 273, 19994, 19994, 19994,
	1710, 458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2167,
	-1000, -1000, 1246, 29092, 1246, 20499, -1000, 2216, 2207, 1246,
	738, -300, -1000, 1438, -31, -1000, -1000, 748, 743, -1000,
	-126, -1000, -1000, -1000, 26, 7860, -300, 29092, 302, 1437,
	-1000, -1000, 99, -1000, -1000, 970, -1000, 1706, 7860, 407,
	30107, -1000, -1000, -126, 407, 2185, -1000, 1533, 7860, 1703,
	-216, 19994, 967, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	955, 950, 946, 19994, -1000, -1000, -1000, 232, -1000, 941,
	933, -1000, -1000, -1000, -1000, -1000, 1702, -1000, 2206, -302,
	-54, -47, 1511, -1000, 3086, -1000, -1000, -1000, 738, -1000,
	2099, -1000, -1000, -10, -1000, -1000, -1000, 19994, 2077, 1547,
	184, 2205, -1000, 184, 2167, -1000, 1354, -1000, 1933, -1000,
	76, 931, -1000, -1000, -1000, -1000, 901, -1000, -1000, -1000,
	19489, 29092, 1408, -1000, 1436, 467, -43, -47, -1000, 2204,
	-37, 2202, 2201, -1000, -1000, 4314, -292, -64, 266, 1433,
	-1000, 173, -1000, -1000, 2077, -1000, 2200, 307, -1000, -1000,
	458, -1000, 1919, 1878, 2252, -1000, -1000, -1000, -1000, 173,
	173, 173, 173, 50, -1000, -1000, 880, -1000, -1000, -1000,
	1700, 1334, -28, -46, 2178, -1000, 1408, 2177, 1408, 1408,
	1227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1174, 1432,
	117, -1000, -1000, -1000, 18984, 211, 243, 238, -1000, 409,
	-1000, -1000, -1000, 2271, -1000, 2253, 644, 644, -1000, -1000,
	29092, 2119, 15449, -56, -1000, -1000, -1000, 1430, -1000, 1408,
	-1000, -1000, 4314, 1333, -1000, 29092, -1000, 29092, 207, 1279,
	9375, 1698, 9375, 1692, 218, 1691, -1000, -1000, -1000, 1310,
	282, -1000, -1000, -1000, 29092, -1000, 868, -1000, -1000, -1000,
	1054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 832, 1680,
	2176, -1000, 3069, 29092, 2992, 29092, 1676, 1172, 9375, -1000,
	-1000, -1000, 727, -1000, 1145, -1000, 18479, 29092, -1000, -1000,
	398, 213, -1000, 831, -1000, 821, 17974, 1277, 2753, 29092,
	5830, -1000, 1053, 810, -1000, 29092, 192, -1000, -1000, -1000,
	805, -1000, -1000, -1000, -1000, 1246, 29092, -1000, 398, 1994,
	-1000, 1276, -1000, -1000, -1000, 3411, 520, -1000, -1000, 3411,
	206, -1000, 392, 1648, -1000, -1000, 799, -1000, 29092, 573,
	7860, -1000, 206, 30125, -1000, 7860, 786, -1000, 30125, 775,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 125, 2727, 200, 140, 135, 197, 2725, 2724, 2099,
	2096, 2723, 2720, 2719, 2718, 2717, 2716, 2714, 2713, 2712,
	2709, 2708, 2707, 2706, 2705, 2704, 2703, 2702, 2701, 2700,
	2698, 196, 2697, 2696, 2694, 2693, 2692, 2691, 2690, 2688,
	2686, 2685, 2683, 2682, 2678, 2672, 2671, 2670, 2668, 2667,
	2666, 2664, 2663, 2661, 2660, 2659, 2657, 123, 2656, 2062,
	2654, 2652, 2651, 2649, 2648, 2646, 2645, 173, 2644, 2643,
	2642, 2640, 2635, 2632, 2630, 2628, 2621, 2620, 2619, 2615,
	2612, 2610, 2609, 2607, 2605, 149, 2603, 2602, 127, 2601,
	2600, 2599, 2598, 198, 190, 48, 2597, 34, 133, 179,
	204, 1998, 210, 202, 156, 116, 66, 2596, 2106, 2595,
	138, 184, 118, 24, 2594, 120, 2592, 109, 33, 27,
	201, 115, 41, 111, 83, 2591, 175, 54, 77, 75,
	2590, 2589, 203, 157, 2588, 88, 2587, 2585, 2583, 2582,
	164, 94, 2580, 53, 2576, 117, 214, 87, 85, 2574,
	2573, 2572, 69, 2571, 2569, 2567, 2564, 143, 2562, 99,
	64, 2561, 2560, 2559, 49, 188, 65, 2558, 61, 2557,
	2554, 2552, 2550, 51, 2549, 2548, 15, 21, 23, 2547,
	20, 2546, 2544, 2, 2543, 178, 145, 78, 104, 2542,
	391, 2541, 2540, 2539, 122, 2532, 1186, 2531, 2530, 2529,
	2528, 10, 2526, 168, 38, 2525, 71, 96, 129, 169,
	165, 2523, 2522, 2521, 193, 68, 63, 0, 2519, 114,
	2518, 2517, 2512, 207, 2511, 187, 161, 185, 92, 209,
	126, 2510, 2507, 62, 2506, 112, 70, 101, 13, 2505,
	181, 2504, 586, 148, 2503, 167, 2501, 119, 3, 103,
	2500, 2499, 35, 228, 2498, 2497, 2496, 144, 2493, 2491,
	90, 121, 2490, 2489, 2488, 32, 2487, 31, 29, 2486,
	76, 2481, 208, 2479, 163, 97, 152, 146, 108, 180,
	186, 55, 52, 2478, 1200, 107, 72, 22, 2477, 182,
	2476, 206, 183, 2475, 159, 2473, 195, 333, 172, 2471,
	151, 7, 36, 30, 2470, 11, 2468, 100, 2467, 2466,
	16, 2465, 18, 2464, 2460, 2459, 2458, 6, 2457, 2456,
	2455, 1, 4, 2454, 5, 171, 37, 102, 2445, 147,
	176, 2444, 2441, 67, 2440, 2439, 2437, 284, 2435, 2432,
	2431, 2430, 2429, 2427, 2426, 2422, 2420, 57, 42, 2417,
	2416, 2414, 2413, 60, 105, 2412, 2410, 2409, 2408, 26,
	137, 2407, 17, 2403, 25, 19, 28, 2402, 89, 2401,
	12, 154, 2400, 2394, 14, 2393, 2391, 8, 9, 2375,
	2373, 86, 2366, 59, 44, 113, 74, 2359, 58, 155,
	98, 2358, 2356, 189, 199, 170, 2355, 131, 194, 212,
	2354, 174, 2348, 2341, 2340, 2339, 2338, 2337, 1267, 2336,
	2331, 192, 43, 80, 81, 2327, 2324, 2311, 56, 110,
	84, 82, 162, 2310, 160, 2307, 2303, 73, 2302, 2301,
	2297, 2295, 2293, 158, 2292, 2291, 2289, 191, 153, 2288,
}

//line mysql_sql.y:8618
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 432, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 91, 430, 430, 430, 431, 431,
	89, 89, 89, 78, 90, 380, 380, 379, 379, 378,
	378, 334, 334, 377, 377, 377, 376, 376, 376, 375,
	375, 374, 374, 373, 373, 371, 371, 372, 370, 369,
	369, 369, 367, 367, 367, 363, 363, 365, 364, 364,
	366, 358, 358, 361, 361, 359, 359, 359, 359, 362,
	357, 357, 357, 356, 356, 77, 77, 77, 286, 286,
	76, 76, 300, 300, 300, 300, 300, 298, 298, 298,
	298, 298, 298, 297, 297, 296, 296, 301, 301, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 68,
	68, 68, 68, 71, 71, 71, 72, 295, 295, 295,
	69, 70, 70, 285, 285, 290, 290, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 294,
	294, 294, 292, 292, 291, 291, 293, 293, 62, 62,
	62, 65, 64, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 63, 63, 63, 63, 63, 63, 58, 58,
	58, 58, 58, 57, 57, 59, 59, 282, 282, 281,
	73, 73, 74, 434, 434, 433, 435, 435, 435, 435,
	75, 81, 81, 81, 81, 81, 81, 81, 80, 80,
	83, 83, 82, 84, 67, 67, 67, 67, 67, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 404, 404,
	404, 406, 406, 221, 222, 436, 224, 220, 220, 220,
	400, 400, 401, 402, 403, 403, 403, 79, 7, 7,
	7, 7, 7, 56, 61, 181, 181, 181, 182, 182,
	182, 182, 182, 54, 60, 60, 417, 417, 55, 424,
	424, 337, 337, 235, 235, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 340, 341, 231, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 38, 37, 37, 37, 271,
	271, 36, 437, 437, 210, 210, 45, 46, 47, 48,
	49, 50, 35, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 53, 53, 352, 352, 439, 439, 439, 51,
	52, 336, 336, 336, 43, 42, 41, 40, 40, 34,
	34, 33, 33, 39, 228, 228, 228, 230, 230, 226,
	438, 438, 312, 312, 229, 229, 32, 32, 32, 227,
	227, 209, 225, 225, 225, 8, 8, 6, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 18, 20, 279,
	279, 276, 19, 14, 13, 16, 12, 15, 17, 5,
	5, 5, 5, 9, 9, 10, 105, 105, 147, 147,
	412, 412, 408, 408, 409, 409, 409, 410, 410, 411,
	411, 85, 346, 346, 346, 346, 346, 346, 4, 127,
	127, 128, 128, 345, 345, 345, 345, 345, 345, 345,
	283, 283, 389, 389, 389, 390, 126, 126, 121, 121,
	347, 347, 249, 391, 391, 355, 355, 354, 354, 353,
	353, 124, 124, 125, 125, 108, 108, 94, 94, 360,
	360, 360, 360, 368, 368, 333, 333, 173, 173, 204,
	204, 205, 205, 98, 98, 99, 99, 99, 99, 99,
	99, 397, 397, 399, 399, 398, 123, 123, 119, 119,
	120, 120, 120, 118, 118, 117, 116, 116, 115, 113,
	113, 113, 114, 114, 114, 101, 101, 101, 100, 100,
	100, 100, 100, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 102, 102, 405, 405, 405,
	338, 338, 338, 343, 343, 187, 187, 188, 188, 186,
	186, 103, 103, 104, 104, 104, 104, 185, 185, 184,
	106, 106, 112, 111, 111, 107, 107, 107, 107, 195,
	195, 194, 194, 194, 194, 88, 92, 92, 93, 131,
	131, 193, 192, 192, 192, 130, 130, 129, 129, 122,
	122, 110, 110, 110, 110, 191, 109, 189, 429, 429,
	428, 428, 427, 425, 425, 425, 426, 426, 426, 426,
	382, 382, 382, 382, 382, 215, 215, 215, 219, 219,
	218, 218, 218, 218, 218, 223, 3, 3, 3, 3,
	24, 24, 24, 24, 24, 24, 30, 139, 140, 29,
	132, 132, 133, 133, 134, 134, 135, 136, 136, 136,
	138, 137, 28, 21, 413, 416, 414, 414, 418, 418,
	418, 419, 419, 419, 420, 420, 22, 415, 421, 421,
	421, 280, 280, 277, 278, 278, 275, 274, 274, 274,
	423, 423, 422, 422, 422, 216, 216, 23, 270, 270,
	272, 273, 273, 273, 264, 264, 264, 264, 27, 268,
	268, 269, 269, 269, 269, 269, 265, 265, 267, 267,
	263, 263, 263, 263, 263, 26, 262, 262, 260, 260,
	258, 258, 259, 259, 257, 257, 257, 261, 261, 25,
	25, 25, 96, 95, 95, 95, 207, 207, 206, 206,
	97, 339, 339, 302, 302, 303, 303, 303, 306, 306,
	318, 318, 319, 319, 317, 317, 324, 324, 323, 323,
	322, 322, 321, 321, 320, 320, 320, 320, 315, 315,
	314, 314, 304, 304, 304, 304, 304, 305, 305, 305,
	313, 313, 316, 316, 164, 164, 165, 165, 165, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 387, 387,
	388, 167, 167, 167, 171, 171, 171, 171, 171, 171,
	166, 166, 168, 168, 148, 148, 146, 146, 141, 141,
	142, 142, 143, 143, 144, 144, 145, 145, 145, 145,
	145, 145, 288, 288, 385, 385, 386, 386, 381, 381,
	381, 384, 384, 384, 384, 384, 383, 383, 149, 202,
	202, 202, 217, 217, 217, 217, 201, 201, 201, 163,
	163, 162, 162, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 287, 287,
	232, 232, 233, 233, 180, 179, 179, 179, 179, 179,
	177, 178, 176, 176, 176, 176, 176, 175, 175, 174,
	174, 174, 266, 266, 172, 172, 170, 170, 170, 169,
	169, 169, 325, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 241, 241, 246, 246,
	396, 396, 395, 150, 150, 150, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 159, 159, 159, 310, 310,
	310, 310, 310, 311, 311, 311, 308, 308, 309, 309,
	250, 251, 251, 344, 344, 307, 307, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 351, 351, 351, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 407,
	407, 407, 392, 392, 392, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 199, 199, 199, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	252, 252, 253, 253, 348, 348, 348, 348, 348, 348,
	349, 349, 350, 350, 350, 350, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 239, 196, 196, 196, 254,
	247, 247, 248, 248, 242, 242, 242, 242, 242, 242,
	242, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 243, 243, 245, 245, 256, 256, 256,
	255, 255, 255, 255, 255, 255, 255, 161, 161, 161,
	161, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 152, 152, 152, 152, 156, 156, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 157, 157, 157, 157, 155, 155, 155, 155,
	155, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 86, 87, 87,
	154, 203, 203, 326, 326, 329, 329, 327, 327, 328,
	330, 330, 330, 331, 331, 331, 332, 332, 332, 335,
	335, 208, 208, 208, 214, 214, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 6, 1, 1, 1,
	2, 4, 6, 1, 4, 1, 3, 3, 4, 4,
	4, 3, 3, 2, 4, 4, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 2, 2, 0, 1, 4, 2, 4, 1, 5,
	3, 2, 1, 2, 2, 4, 4, 5, 2, 1,
	3, 4, 4, 1, 2, 9, 7, 1, 3, 3,
	1, 1, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	2, 4, 3, 3, 1, 1, 1, 1, 1, 2,
	3, 4, 7, 2, 3, 3, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 7, 4, 2, 2, 1, 2, 2,
	2, 3, 2, 7, 7, 8, 0, 4, 7, 0,
	3, 0, 2, 0, 1, 1, 1, 1, 4, 2,
	2, 3, 3, 4, 5, 3, 4, 4, 2, 2,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 3, 2, 4,
	4, 4, 4, 1, 1, 1, 3, 2, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 1,
	3, 1, 4, 6, 4, 4, 4, 3, 6, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 0,
	4, 1, 3, 3, 1, 5, 6, 5, 5, 3,
	0, 5, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 4, 3, 4, 5, 4,
	5, 2, 3, 1, 3, 6, 0, 3, 0, 1,
	2, 4, 4, 0, 1, 3, 1, 3, 3, 0,
	1, 1, 0, 2, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 12,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 4,
	1, 1, 7, 7, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 0, 2, 7, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 11,
	9, 11, 2, 2, 4, 5, 1, 3, 0, 3,
	5, 0, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 1, 1, 3, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 4, 1, 3,
	3, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 1, 7, 7, 7, 7,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 5, 6, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 2, 4, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 6, 8, 6, 5,
	5, 6, 6, 6, 6, 5, 6, 6, 6, 6,
	6, 6, 6, 6, 1, 1, 1, 4, 4, 6,
	8, 6, 4, 5, 4, 6, 6, 7, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 8, 4, 2, 3,
	2, 4, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -432, -2, -1, -3, -89, -4, -85, -5, -6,
	-8, -66, -80, -82, -84, -83, -31, -7, -79, -57,
	-58, -62, -68, -73, -76, -77, -78, -90, -86, -87,
	-88, -98, -91, -24, -23, -22, -21, 398, 12, 443,
	-9, -10, -397, -11, 233, -220, -221, -222, -224, -436,
	-32, -33, -34, -40, -41, -42, -43, -51, -52, -53,
	-35, -36, -37, -38, -45, -46, -47, -48, -49, -50,
	-39, -55, -54, -60, -56, -61, 209, -59, 61, -63,
	-64, -65, -69, -70, -71, -72, -74, -75, 329, 335,
	388, 525, 526, 46, -99, -101, 527, -25, -26, -27,
	-28, -29, -30, 205, 14, 476, -12, -15, -13, -16,
	-14, -19, -20, -18, -17, 228, 227, 37, 291, 292,
	293, 333, 226, 206, 13, 137, 138, 140, 141, 30,
	41, 311, -100, 67, 207, -102, 10, 529, 436, 528,
	-108, 38, -146, -217, 70, 78, -211, -213, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 446, 309, 310, 473, 245, 269,
	359, 272, 279, 137, 156, 150, 178, 170, 145, 249,
	284, 250, 77, 140, 429, 88, 409, 385, 143, 264,
	266, 268, 271, 251, 166, 161, 263, 247, 525, 159,
	252, 39, 253, 183, 254, 255, 478, 405, 308, 411,
	276, 383, 160, 406, 267, 408, 185, 189, 421, 335,
	154, 155, 413, 423, 182, 225, 42, 475, 237, 424,
	187, 181, 177, 432, 280, 278, 180, 153, 176, 248,
	50, 191, 190, 192, 379, 380, 381, 382, 256, 257,
	323, 420, 173, 162, 313, 146, 22, 427, 232, 410,
	336, 258, 273, 281, 186, 188, 239, 244, 477, 387,
	243, 277, 425, 158, 236, 265, 231, 428, 147, 329,
	338, 259, 141, 270, 422, 431, 49, 351, 152, 144,
	222, 138, 241, 246, 11, 260, 261, 262, 283, 282,
	274, 174, 238, 179, 164, 151, 175, 139, 240, 430,
	352, 523, 311, 368, 172, 169, 242, 215, 426, 412,
	142, 372, 353, 167, 285, 519, 520, 521, 324, 307,
	286, 287, 165, 229, 404, 288, 290, 378, 300, 354,
	386, 360, 355, 198, 294, 415, 184, 522, 407, -108,
	-59, -10, -9, -100, -101, -146, 213, -225, 23, 383,
	-67, 384, 209, 67, -217, -5, -4, -85, -57, -98,
	-223, -217, 291, 291, -223, 213, -217, 243, 367, -337,
	218, -297, -270, 244, -296, -272, -299, -273, 31, 205,
	207, 206, 240, 14, 333, 214, 12, 10, 334, 226,
	24, 25, 27, 13, 335, 337, 28, 338, 341, 342,
	343, 41, 346, 347, 233, 70, 78, 73, 251, -140,
	-217, -248, -242, 95, 234, -244, -237, -238, -240, -377,
	-371, -236, 67, 121, 122, 129, 96, -239, -325, 35,
	98, 483, 444, -197, -198, -199, -200, -217, -372, -370,
	73, 79, 82, 85, 86, 84, 83, 163, 81, 74,
	133, 134, -101, 70, -392, 491, -212, 512, 511, 46,
	-342, -350, 212, -348, 132, 168, 229, 164, 12, 127,
	378, 165, 488, 508, 446, 492, 515, 485, 486, 480,
	481, 482, 484, 493, 495, 507, -351, 503, 513, 514,
	501, 72, 71, 506, 505, 494, 489, 490, 496, 479,
	487, 497, 498, 504, 509, 510, 317, 88, 318, 319,
	436, 312, 320, 218, 383, 55, 321, 322, 323, 324,
	325, 443, 326, 56, 327, 316, 233, 368, 328, 167,
	184, 448, 447, 449, 440, 437, 435, 438, 439, 441,
	442, 499, 500, 502, -293, -291, -217, -92, -93, 517,
	-117, -118, -190, 19, 6, 7, 8, 9, -430, 385,
	477, 294, 330, 215, 309, 368, 243, -264, -262, -339,
	288, 284, 223, 222, 89, 436, 212, 344, -408, -409,
	202, 203, 204, -399, 469, -398, -217, 319, 26, 213,
	330, 415, 416, 417, 418, 419, -44, -352, -336, 412,
	411, -229, 410, 403, 414, 405, 310, 205, 470, -208,
	354, 386, 239, 433, 434, 331, 387, 421, 422, 406,
	88, 171, 168, 215, 213, 309, 436, 368, -408, 142,
	139, -284, 142, 94, 147, 146, -284, 243, 367, 40,
	-290, 378, -289, -291, 421, 422, 432, 71, 72, 420,
	-208, 88, 404, 404, -118, -190, -117, -99, -101, -88,
	-397, 309, 368, 243, 214, 213, 215, 436, 291, 330,
	-338, -405, 31, -343, 199, 200, 201, 32, 33, -1,
	-217, 73, -124, 235, -146, 135, -124, -118, -117, -118,
	-146, -201, -217, 385, 104, -67, -67, 384, -400, -401,
	-402, -404, 209, 384, 383, 135, 15, -223, -223, 65,
	-146, -272, 243, -297, -270, 35, 64, 136, 216, 136,
	64, 67, 331, 309, 368, 332, 436, 213, 344, 215,
	243, 345, 309, 368, 213, 215, 436, 243, 309, 213,
	215, 368, 243, 345, 403, 404, 215, 26, 336, 339,
	340, 404, -356, 432, 136, 94, 91, 92, 93, -242,
	111, -255, 104, 105, 106, 107, 108, 109, 110, 118,
	117, 128, 121, 122, 123, 124, 125, 126, 127, 119,
	120, 114, 95, 112, 116, 113, 97, -101, -242, -248,
	46, -240, -240, -240, -240, -325, -246, -242, 67, 67,
	135, 73, -242, 67, 67, 67, 67, 67, 67, 67,
	67, -349, 67, 67, -252, -253, 67, 67, 67, 73,
	73, 67, 67, 67, 73, -253, -253, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 136, -152, -156, -153, -155, -154,
	-158, -157, 168, 169, 132, 172, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 30, 184, 229, 164,
	165, 166, 167, 185, 150, 170, 474, 193, 151, 194,
	152, 195, 153, 196, 154, 155, 197, 156, 159, 160,
	161, 158, 135, -118, 136, 67, -94, 38, -120, 21,
	-102, -101, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 79, -139, -217, -132, -217, -260, 218, -260, -260,
	-260, 214, -260, 213, 213, 213, -410, 149, 136, -399,
	-123, 67, -228, 112, 116, 23, 241, 241, 278, -437,
	-438, 15, 114, -226, -438, -226, -228, -439, 214, 413,
	42, 242, 241, -119, -120, -119, 407, 404, -312, 408,
	409, -229, -228, -228, -229, -228, 213, 215, 436, -437,
	241, -437, 30, 30, -337, -146, -337, 470, -209, -217,
	-337, -411, 217, 425, 476, 145, 146, 147, -272, 243,
	243, 136, 104, 23, -292, 104, 115, -291, -291, -291,
	-292, -292, -166, 40, -216, 132, -217, 73, -166, 40,
	-434, -433, -146, -119, -102, -101, 68, 68, 68, -337,
	-337, -337, -337, -337, -337, -337, -223, -132, -103, -104,
	123, -242, -217, -103, 38, 404, 38, -345, -127, -98,
	310, 67, 67, -217, -346, 46, -98, 67, 30, -119,
	-94, -120, 135, 79, 73, -67, 68, 136, -403, 85,
	86, -406, 182, 174, -217, -81, 73, -3, -4, -5,
	-6, -31, -57, -98, -373, -371, 67, 31, 377, 64,
	15, -298, 213, 436, 330, 239, 215, 309, -296, -279,
	-276, -274, -216, -272, -275, -274, -301, -201, 404, -95,
	389, 290, -242, -242, -242, -242, -242, 84, 95, 307,
	85, 86, -237, -256, 31, 286, 287, -238, -238, -238,
	-238, -238, -238, -238, -238, -238, -238, -238, -238, -245,
	-254, -325, 67, 114, 112, 116, 113, 97, -240, -240,
	-238, -238, 68, 136, -396, -395, 99, -242, -242, -217,
	-393, -394, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 460, 321, 316, 322, 320, 312, 328, 323,
	324, 167, 467, 468, 461, 462, 463, 464, 465, 466,
	-247, -248, -247, -242, -393, -247, -196, 32, 31, -242,
	-407, 305, 304, 306, -121, -217, -247, 68, 68, 68,
	79, -248, -248, -247, -238, -247, -394, -196, -196, -248,
	-248, -196, -196, -196, -196, 123, -196, -196, -196, -196,
	-196, -196, -196, -196, -291, 40, -332, 352, 351, -326,
	-328, 67, -327, 67, -327, -327, -327, 67, 67, -329,
	67, -329, -329, -326, -330, 67, -330, -331, 67, -330,
	-217, -119, -93, -354, -353, -242, 40, 518, -94, -242,
	-116, -115, -242, -431, 73, 34, 67, 135, -146, 95,
	-413, -217, -280, -277, -274, -270, -217, -217, -260, -260,
	-260, -411, -398, 34, -122, -217, -186, 16, -240, -240,
	-274, 243, -437, -228, -210, -209, -230, -438, -225, -230,
	-186, -438, -228, -228, -230, -226, 404, -186, -186, -312,
	-227, -217, -227, -260, -210, -210, -146, -181, 210, 207,
	-165, -183, 349, 245, -261, 249, 77, 250, 385, 251,
	214, 253, 254, 255, 225, 256, 257, 258, 378, 259,
	260, 261, 262, 332, 6, 295, 40, -413, -413, 30,
	-280, -111, -106, -110, -107, -112, -189, -191, -109, 67,
	-146, -101, -217, 426, 427, 143, 146, 145, 31, 377,
	-295, 377, 31, -270, -289, -285, 73, 378, -275, -294,
	64, 132, -353, -292, -292, -292, -294, -294, 131, 136,
	-435, 425, 426, 202, -94, -413, -279, -270, -217, -148,
	-146, -148, -217, 67, -185, 136, -184, 15, -218, -217,
	34, 73, 135, -185, 73, -148, 73, -283, 64, 46,
	30, 67, -126, 68, -121, -125, -217, -347, -249, -391,
	517, -126, 68, -389, -390, -121, -94, -94, -217, 23,
	-67, -401, 135, 136, -122, -298, -278, -275, -300, 123,
	-217, -286, 136, 476, 530, 71, 216, -423, -422, 369,
	68, 136, -357, 217, 443, 73, 531, 198, 84, 307,
	85, 86, -325, -248, -245, -240, -240, -238, -238, -243,
	230, -243, 94, -242, -241, -395, 101, -242, 34, 136,
	65, 135, 68, 68, 15, 15, 68, -242, 68, 15,
	15, -242, 68, 135, 68, 68, 68, 68, 65, 68,
	136, 68, 136, -248, -242, 68, 68, -242, -242, -242,
	-248, 68, -242, -242, -242, -242, -242, -242, -242, -242,
	-242, -335, 353, 79, 79, -203, 73, -203, 79, 79,
	79, 136, 68, 73, 136, 22, 136, -113, 36, 37,
	-140, -133, -134, -135, -136, -152, -201, 169, 172, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	229, 164, 165, 166, 167, 185, 150, 170, 151, 152,
	153, 154, 155, 156, 159, 160, 161, 158, -217, -123,
	35, -416, 356, -424, 136, 40, -422, -263, 65, -258,
	-259, -257, -261, -146, -146, -146, 15, -105, -147, -217,
	67, 68, 136, -242, -271, 65, -217, -210, -186, -217,
	-146, -217, -186, -186, -228, -230, -230, -226, 135, -209,
	-123, -143, -149, -144, -201, -233, -145, 221, 219, 223,
	-386, 89, 224, 275, 90, 214, -182, 214, 90, 220,
	224, 219, 136, -183, -214, 104, -214, -208, 131, -214,
	-214, -214, -214, 252, 252, -214, -214, -214, -214, -214,
	-214, -214, -214, -214, -214, -214, -214, -214, -214, 67,
	-417, 356, 30, 315, -424, 30, -192, -193, -194, -195,
	53, 57, 59, 54, 55, 56, 60, 30, 136, -215,
	-219, 34, -217, 73, -215, -101, -106, -111, -215, 67,
	144, 147, 147, 146, 216, 67, 104, -294, -294, -294,
	40, -216, -433, 432, 426, 64, 136, -133, -186, -104,
	-106, -217, 73, -217, 123, -186, -173, 520, 38, -360,
	408, 39, -347, -389, -128, -413, 68, 136, -127, 310,
	68, 136, 136, 67, 68, 46, 136, 104, 135, 385,
	-217, -371, 68, -300, 136, 216, 135, 135, -276, 335,
	-216, -278, 20, 476, -201, 38, -207, -206, 73, 531,
	68, -243, -243, 94, -240, -237, 68, 102, -242, 100,
	-150, -152, 351, 352, -151, -157, 132, 168, 229, 167,
	166, 164, 351, 352, -166, -217, -242, -242, 68, -242,
	-242, 15, -217, -166, -238, -242, -118, 68, -307, 399,
	-307, 68, 68, 68, 68, -307, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 136, 68, 68,
	68, 136, 68, 136, -353, -360, -242, -242, -115, -114,
	43, 343, 68, 136, -152, 34, -419, 410, 358, -214,
	-235, -234, 311, 41, -340, 378, 364, 365, -277, 243,
	64, 299, 300, 301, 302, -257, -208, 131, 254, 67,
	67, 67, -146, -105, -217, 15, 136, -412, 135, -1,
	-217, -270, -228, -186, -438, -186, -228, -228, -230, -217,
	34, -152, -145, -217, 90, -385, -386, -260, -385, 90,
	67, -217, -217, -217, 90, 90, -183, 79, 79, -214,
	-214, 79, 73, 73, 73, -214, -214, 79, 73, -219,
	79, 79, 79, 79, 40, 73, -171, 40, 263, 267,
	264, 265, 266, 79, 40, 79, 40, 79, 40, -217,
	67, -387, -388, 73, -419, -214, 315, 104, -235, -282,
	-281, -201, -110, -110, -110, -110, 53, 53, 53, 58,
	53, 58, 53, -194, -282, -112, -123, -219, 68, -429,
	-428, -427, -425, 61, 217, 62, -247, 147, -278, -231,
	73, -285, -146, -146, 68, -188, 17, 135, -188, 79,
	73, -368, 395, 390, 392, 90, 68, 136, -127, -121,
	46, 67, -217, -249, -355, -354, 46, -98, -347, -390,
	-353, -217, 79, 15, -275, -270, 123, 123, -217, 336,
	-286, 73, 357, 73, 213, 532, 136, 104, -207, -237,
	-242, 68, -159, 155, 154, -159, 68, -327, -327, -326,
	-329, -326, -159, -159, 68, 68, 23, 68, 68, 68,
	-242, 68, 68, 136, -344, 445, -307, 67, -307, -307,
	-307, -307, -307, -307, -307, -307, -307, -307, -307, -307,
	73, 79, 79, -368, 44, 45, 73, 211, -135, 40,
	-98, -420, 77, -414, 73, -217, -421, 77, 359, 134,
	313, 40, 360, 361, 375, 308, 79, 79, 366, -415,
	-217, -146, -214, -214, -214, -141, -142, -143, -141, -141,
	-124, 65, 135, -106, -147, -217, 123, 68, -186, -217,
	-186, -186, -228, -98, -163, -162, -160, 84, 95, 40,
	349, -161, 77, 131, 268, 246, 269, -180, -232, 64,
	355, 219, 89, 90, 337, -233, -381, -383, -217, -383,
	-217, -381, -381, -260, -242, -217, -166, -166, 73, 73,
	-167, 246, -148, 68, 136, 104, -420, -414, 104, 73,
	-421, -186, 136, 104, -130, -129, 64, 65, -131, 64,
	-129, 53, 53, -186, -427, -426, 23, -386, -386, -386,
	68, 68, -187, 18, 20, 123, -187, -173, -333, 519,
	-364, -366, 390, 20, 20, 13, -98, -413, 46, -98,
	-347, -128, 68, -347, -270, -286, 378, -146, -206, 73,
	532, -242, 68, -242, 68, 73, -251, -250, 235, 68,
	68, -333, -137, -152, -236, 73, -418, 369, 73, 73,
	79, 40, 79, 134, 362, -341, 67, -166, -168, -216,
	132, 73, 68, 136, 68, 68, -215, -106, -217, -186,
	-412, 135, -186, -186, -160, 84, -238, 73, -168, -169,
	40, 267, 263, -170, 40, 247, 248, -172, 67, 275,
	13, 90, 90, -146, 67, 65, 285, 67, 67, 67,
	-383, 68, 247, 248, 68, -388, 73, -418, 73, -118,
	-281, -353, -242, 67, -242, 67, 53, 19, 17, -242,
	-248, -173, 73, 20, 73, -362, 73, -282, -347, 68,
	-127, 68, 68, -307, -118, 20, -173, 475, 20, 476,
	312, 40, 79, 40, 363, -265, -267, -201, 67, -164,
	-165, -143, -96, -95, -164, -186, -186, 79, 67, -348,
	-266, 67, -265, -384, 299, 300, 301, 303, 302, -384,
	-265, -265, -265, 67, -288, -287, 276, 95, -119, -122,
	-382, -217, 219, 20, 20, -204, 521, 73, 392, -97,
	-358, -312, -309, -308, -311, 396, 277, 402, -248, -204,
	-138, -217, 73, 357, 73, 312, 68, 136, -326, -242,
	-302, 235, -97, -302, -118, 68, -242, -252, -175, -174,
	472, -265, 68, 68, 68, 68, -265, 276, 68, 68,
	136, 67, 20, -334, 522, -367, 395, -361, -359, 390,
	391, 392, 393, 68, -310, 97, 362, 366, -242, 34,
	378, -268, -267, -113, 68, -303, 284, 20, -303, -119,
	68, -179, -177, -178, 64, 406, 273, 274, 68, -268,
	-268, -268, -268, 68, -217, 219, -205, -217, -362, 73,
	-369, 217, -365, -366, 394, -359, 20, 392, 20, 20,
	-310, 517, 400, 401, 400, 401, 73, -269, 225, 77,
	476, 297, 298, -113, 20, -304, 277, 278, -305, -316,
	280, -287, -178, 64, -177, 64, 14, 13, -180, 68,
	136, -376, 67, 79, -364, -363, -365, 20, -362, 20,
	-362, -362, 94, -214, 73, 296, -201, 67, -314, 281,
	67, -312, 67, -312, 90, 300, -176, 270, 271, 30,
	146, -176, -217, -380, 30, 68, -375, -374, -202, -370,
	-217, 395, 396, 73, -362, -310, 79, -217, -301, -306,
	282, 79, -238, 67, -238, 67, -313, 279, 67, 84,
	40, 272, -379, -378, -377, 68, 136, 135, 68, -318,
	67, 20, 68, -301, 68, -301, 67, 104, -238, 136,
	104, -374, -217, -319, -317, 235, -305, 68, 68, 68,
	-301, 79, 68, -378, 40, -242, 135, 68, 136, -217,
	-315, 283, 68, -217, -317, -320, 46, 79, -324, -321,
	67, -183, 237, 114, -324, -183, -323, -322, 282, 238,
	67, 68, 136, -217, 234, 67, -248, -322, -321, -248,
	68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 686, 687, 688, 689, 0, 0, 0,
	459, 460, 0, 437, 0, 0, 0, 0, 0, 0,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 298, 299, 300, 301, 302, 0, 233, 229, 208,
	209, 210, 169, 170, 171, 172, 240, 241, 321, 0,
	0, 0, 0, 0, 543, -2, 35, 690, 691, 692,
	693, 694, 695, -2, 472, 0, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 287, 288, 289, 283, 284,
	286, 285, -2, 0, 472, 222, 0, 213, 213, 0,
	0, 0, 563, 0, 0, 578, 600, 33, 0, 0,
	521, 0, 526, 896, 932, 933, 934, 935, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 521,
	234, 461, 462, 563, 563, 435, 0, 269, 0, 1382,
	273, 0, 0, 0, 432, 264, 265, 266, 267, 268,
	0, 685, 0, 0, 260, 0, 228, 1441, 0, 0,
	0, 0, 0, 0, 113, 748, 115, 750, 119, 126,
	0, 0, 131, 132, 135, 136, 137, 138, 139, 0,
	143, 0, 145, 148, 0, 150, 151, 0, 154, 155,
	156, 0, 166, 167, 168, 751, 752, 753, -2, 44,
	698, 1307, 1202, 0, 1209, 1210, 1221, 1232, 1005, 1006,
	1007, 1008, 0, 0, 0, 0, 0, 1015, 1016, 0,
	1028, 1534, 0, 1022, 1023, 1024, 1025, 53, 65, 66,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	0, 1175, 992, 932, 0, 1542, 0, 1562, 1561, 0,
	0, 1160, 0, 1150, 0, 0, -2, -2, 0, 0,
	1508, -2, 1539, 1558, 1566, 1543, 1565, 1536, 1537, 1531,
	1532, 1533, 1535, 1544, 1546, 1557, 0, 1553, 1563, 1564,
	0, 67, 68, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1166, -2, 1168, 1169,
	1171, 1172, 1173, 1174, -2, 1177, 1178, 1179, -2, -2,
	1182, 1183, 1184, 1185, 1186, 1187, 1190, -2, 1192, -2,
	-2, 1162, 1163, 1164, 1165, 1154, 1155, 1156, 1157, 1158,
	1159, -2, -2, -2, 0, 206, 204, 563, 636, 0,
	-2, 0, 0, 0, 583, 586, 589, 592, 0, 36,
	37, 0, 0, 778, 778, 778, 778, 0, 778, 0,
	0, 0, 755, 756, 757, 776, 777, 802, 477, 473,
	474, 475, 476, 551, 0, 553, 556, 414, 366, 0,
	0, 0, 378, 372, 0, 0, 414, 0, 0, 558,
	558, 0, 424, 414, 414, -2, 414, 0, 383, 384,
	385, 372, 0, 372, 389, 390, 391, 402, 403, 425,
	1331, 0, 0, 321, 0, 321, 0, 321, 479, 223,
	224, 212, 214, 0, 218, 0, 211, 1441, 0, 0,
	180, 1508, 185, 0, 1389, 1455, 1404, 0, 0, 1422,
	0, -2, 0, 250, 558, 0, 564, 0, 563, 0,
	0, 321, 321, 321, 321, 321, 321, 321, 0, 0,
	0, 0, 601, 602, 597, 598, 599, 603, 604, 3,
	0, 0, 489, 0, 525, 0, 0, 558, -2, 0,
	436, 270, 936, 0, 0, 274, 275, 0, 0, 290,
	0, 293, 278, 279, 280, 0, 0, 262, 263, 0,
	0, 230, 0, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 123, 120, 127, 130, 140, 147, 0, 159,
	161, 164, 121, 128, 133, 134, 141, 162, 122, 124,
	125, 129, 163, 165, 142, 146, 160, 144, 149, 152,
	153, 158, 0, 94, 0, 0, 0, 0, 0, 1208,
	0, 0, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1202, 0,
	0, 1011, 1012, 1013, 1014, 1017, 0, 1029, 0, 0,
	0, 1261, 0, 1200, 1200, 0, 1200, 1196, 0, 0,
	1200, 1138, 0, 0, 1140, 1151, 0, 0, 0, 1144,
	1145, 1200, 0, 1200, 1149, 1134, 1135, 0, 1196, 1196,
	0, 0, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196,
	1196, 1196, 1196, 1196, 0, 1308, 1326, 1263, 1264, 1265,
	1313, 1267, 1317, 1317, 1317, 1317, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 0, 0, 1306, 1286, 1315,
	1315, 1315, 1313, 1310, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1320, 1320,
	1323, 1320, 0, 558, 0, 0, 546, 0, 527, 0,
	580, 582, 0, 584, 585, 587, 588, 590, 591, 593,
	594, 38, 0, 697, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 778, 778, 778, 479, 478, 0, 552,
	0, 0, 609, 0, 0, 0, 372, 414, 377, 374,
	373, 420, 421, 417, 0, 417, 609, 0, 396, 397,
	398, 414, 414, 404, 559, 405, 406, 417, 0, 422,
	423, 0, 609, 609, 0, 413, 0, 0, 778, 374,
	387, 374, 1332, 1333, 0, 787, 0, 0, 0, 431,
	0, 0, 480, 0, 0, 216, 0, 221, 173, 0,
	0, 0, 0, 0, 0, 202, 203, 0, 0, 0,
	0, 0, 193, 196, 890, 891, 745, 746, 197, 198,
	242, 243, 0, 527, 579, 581, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 617, 611,
	613, 680, 53, 617, 0, 0, 0, 500, 0, 494,
	0, 0, 0, 897, 481, 513, 483, 0, 502, 527,
	549, 527, 0, 271, 0, 276, 0, 0, 292, 294,
	295, 296, 281, 282, 433, 258, 259, 251, 252, 253,
	254, 255, 256, 257, 261, 63, 0, 231, 232, 0,
	0, 0, 107, 108, 109, 110, 111, 112, 114, 98,
	449, 451, 737, 749, 0, 740, 0, 117, 157, 90,
	0, 0, 1203, 1204, 1205, 1206, 1207, 1211, 0, 1213,
	1215, 1217, 1219, 0, 1237, -2, -2, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1222,
	1235, 1236, 0, 0, 0, 0, 0, 0, 1233, 1233,
	1228, 0, 1009, 0, 1026, 1030, 0, 0, 0, 54,
	1195, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	0, 1201, 0, 1202, 0, 0, 0, 1197, 1198, 0,
	0, 1099, 1100, 1101, 0, 508, 0, 1161, 1139, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 1329, 1327, 1328, 1266,
	1314, 0, 1291, 0, 1292, 1293, 1294, 0, 0, 1287,
	0, 1288, 1289, 1290, 1282, 0, 1283, 1284, 0, 1285,
	205, 635, 637, 0, 517, 519, 520, 0, 547, 560,
	565, 566, 569, 34, 39, 0, 702, 0, 556, 0,
	0, 714, 319, 731, 0, 747, 770, -2, 0, 0,
	0, 0, 554, 0, 0, 649, 365, 0, 415, 416,
	369, 1441, 374, 609, 379, 375, 380, 0, 419, 381,
	382, 0, 609, 609, 414, 417, 417, 409, 410, 0,
	426, 429, 427, 0, 386, 388, 556, 304, 0, 0,
	-2, 846, 1334, 1334, 0, 1334, 1334, 1334, 1334, 0,
	0, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334,
	1334, 1334, 1334, 1334, 1334, 0, 788, 316, 0, 0,
	319, 622, 0, 623, 624, 620, 651, 675, 675, 0,
	675, 655, 896, 225, 226, 0, 0, 220, 174, 175,
	0, 177, 178, 179, 186, 181, 183, 0, 0, 187,
	199, 200, 201, 0, 0, 0, 191, 192, 0, 0,
	245, 246, 248, 0, 545, 447, 448, 452, 0, 454,
	894, 455, 456, 702, 609, 0, 618, 0, 614, 681,
	0, 683, 0, 609, 537, 0, 529, 488, 0, 513,
	502, 0, 0, 489, 506, 0, 523, 482, 510, 0,
	514, 0, 0, 487, 503, 0, 548, 550, 937, 0,
	277, 291, 0, 0, 0, 0, 101, 734, 0, 102,
	106, 96, 0, 0, 0, 739, 0, 736, 741, 0,
	116, 0, 0, 91, 92, 793, 798, 0, 1212, 1214,
	1216, 1218, 1220, 0, 1223, 1233, 1233, 1229, 0, 1224,
	0, 1226, 0, 1203, 0, 1031, 0, 0, 0, 0,
	0, 0, 1087, 1088, 0, 0, 1092, 0, 1094, 0,
	0, 0, 1098, 0, 1137, 1153, 1141, 1142, 0, 1146,
	0, 1148, 0, 563, 0, 1065, 1065, 0, 0, 0,
	0, 1065, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 1262, 1330, 0, 0, 0, 1311, 0, 0, 0,
	0, 0, 638, 529, 0, 0, 0, 572, 570, 571,
	0, 0, 703, 704, 706, 707, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1374, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 701, 0,
	779, 721, 1334, 323, 0, 0, 733, 0, 0, 775,
	-2, 782, 0, 0, 0, 0, 0, 0, 466, 470,
	33, 557, 0, 610, 367, 0, 368, 414, 376, 418,
	609, 896, 399, 400, 609, 414, 414, 417, 0, 428,
	0, 305, 902, 903, 0, 0, 905, 962, 0, 914,
	778, 914, 0, 0, 916, 917, 306, 0, 0, 0,
	0, 0, 787, 848, 0, 1335, 0, 1334, 1334, 0,
	0, 0, 0, 1334, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 1334, 0, 0, 323, 0, 0, 0, 0, 0,
	642, 0, 0, 641, 0, 0, 0, 0, 0, 556,
	676, 0, 678, 679, 653, -2, 0, 622, 658, 1200,
	227, 215, 217, 0, 0, 0, 0, 188, 189, 190,
	194, 195, 244, 247, 249, 0, 0, 0, 607, 612,
	619, 682, 684, 54, 615, 607, 40, 0, 0, 533,
	0, 0, 493, 499, 0, 491, 489, 0, 0, 0,
	522, 0, 513, 515, 0, 513, 0, 0, 0, 0,
	434, 64, 297, 0, 0, 0, 0, 0, 450, 0,
	738, 98, 0, 0, 118, 0, 0, 796, 0, 798,
	1199, 1225, 1227, 0, 1234, 1230, 1010, 1018, 1027, 0,
	0, 1033, 1045, 1045, 0, 1036, 1317, 1317, 1039, 1313,
	1315, 1313, 1045, 1045, 0, 55, 0, 0, 1093, 0,
	0, 0, 509, 0, 0, 0, 1063, 1065, 1069, 0,
	1070, 1065, 1065, 1065, 1065, 1075, 1065, 1065, 1065, 1065,
	1065, 1065, 1065, 1065, 1319, 1318, 1304, 0, 1305, 1316,
	1321, 0, 1324, 0, 518, 533, 561, 562, 567, 568,
	0, 0, 0, 0, 708, 0, 724, 722, 723, 0,
	728, 324, 325, 326, 327, 0, 0, 0, 732, 0,
	0, 771, 772, 773, 774, 783, 1334, 1334, 1334, 898,
	898, 898, 521, 0, -2, 0, 0, 468, 0, 0,
	650, 370, 609, 392, 0, 407, 609, 609, 414, 430,
	0, -2, 904, 963, 926, 926, 915, 926, 926, 778,
	0, 308, 309, 310, 0, 312, 847, 849, 850, 0,
	0, 853, 854, 855, 856, 0, 0, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 884, 885, 886,
	887, 888, 889, 869, 870, 871, 872, 873, 874, 881,
	0, 0, 878, 0, 724, 0, 0, 0, 728, 609,
	237, 0, 645, 639, 0, 628, 643, 644, 631, 0,
	633, 0, 629, 630, 609, 621, 652, 677, 654, 657,
	659, 660, 666, 0, 0, 0, 0, 219, 176, 0,
	343, 182, 453, 895, 458, 605, 0, 0, 605, 538,
	537, 535, 78, 0, 0, 0, 490, 0, 0, 507,
	513, 0, 524, 511, 0, 516, 513, 486, 485, 504,
	505, 938, 272, 0, 735, 98, 103, 104, 105, 99,
	97, 742, 0, 744, 0, 794, 798, 0, 0, 1231,
	1032, 1019, 1034, 1046, 1047, 1035, 1020, 1037, 1038, 1040,
	1041, 1042, 1043, 1044, 1021, 1089, 0, 1091, 1095, 1096,
	0, 1143, 1147, 0, 0, 0, 1068, 1061, 1071, 1072,
	1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1312, 0, 0, 535, 573, 574, 696, 0, 705, 0,
	712, 713, 0, 0, 716, 717, 726, 0, 0, 0,
	329, 330, 0, 0, 0, 342, 338, 339, 340, 320,
	727, 0, 0, 0, 0, 0, 899, 900, 0, 0,
	675, 0, 0, 609, 467, 470, 471, 555, 371, 609,
	411, 408, 609, 303, 928, -2, 941, 943, 0, 0,
	946, 947, 0, 0, 0, 0, 984, 953, 0, 0,
	957, 0, 1249, 1250, 0, 961, 0, 918, 927, 0,
	927, 0, 0, 926, 0, 311, 851, 852, 857, 858,
	875, 0, 0, 877, 0, 0, 313, 0, 0, 314,
	318, 563, 0, 0, 625, 646, 0, 0, 626, 0,
	627, 632, 634, 236, 661, 0, 0, 663, 664, 665,
	656, 184, 595, 0, 0, 616, 596, 41, 537, 0,
	534, 79, 0, 0, 0, 0, 495, 492, 513, 498,
	497, 0, 512, 484, 100, 95, 743, 489, 797, 799,
	795, 0, 1097, 0, 1065, 1064, 563, 1062, 0, 1322,
	1325, 537, 0, 711, 709, 725, 715, 0, 729, 730,
	0, 331, 332, 0, 335, 341, 0, 784, 785, 892,
	893, 786, -2, 0, 0, -2, 609, 609, -2, 464,
	469, 0, 393, 412, 942, 944, 945, 948, 949, 950,
	989, 990, 991, 951, 986, 987, 988, 952, 0, 0,
	0, 1247, 1248, 982, 0, 0, 0, 0, 0, 0,
	0, 912, 882, 883, 876, 879, 880, 317, 315, 558,
	238, 239, 647, 0, 640, 670, 667, 0, 0, 606,
	608, 539, 536, 0, 530, 532, 89, 501, 496, 490,
	81, 1090, 1136, 1067, 1058, 0, 539, 0, 0, 0,
	328, 333, 0, 336, 337, 0, 766, 1313, 0, 803,
	-2, 901, 790, 81, 803, 563, 465, 0, 0, 1150,
	977, 0, 0, 919, 921, 922, 923, 924, 925, 920,
	0, 0, 0, 0, 911, 913, 958, 0, 235, 0,
	0, 671, 673, 668, 669, 42, 0, 80, 0, 51,
	72, 0, 0, 1059, 0, 1053, 1054, 1055, 1060, 528,
	0, 710, 718, 0, 720, 334, 759, 0, 569, 0,
	805, 0, 792, 805, 558, 985, 0, 956, 965, 978,
	0, 0, 759, 759, 759, 759, 0, 959, 648, 662,
	0, 0, 0, 43, 0, 69, 0, 82, 83, 0,
	0, 0, 0, 1066, 1056, 0, 0, 0, 0, 0,
	719, 758, 767, 768, 569, 789, 0, 842, 791, 463,
	954, 964, 966, 967, 0, 979, 980, 981, 983, 906,
	907, 908, 909, 0, 672, 674, 0, 541, 531, 52,
	56, 0, 78, 75, 0, 84, 0, 0, 0, 0,
	0, 1048, 1049, 1051, 1050, 1052, 699, 760, 1334, 0,
	0, 764, 765, 769, 0, 830, 0, 0, 836, 0,
	843, 955, 968, 0, 969, 0, 0, 0, 910, 540,
	0, 45, 0, 0, 73, 74, 76, 0, 85, 0,
	87, 88, 0, 0, 762, 0, 806, 0, 808, 0,
	0, 0, 0, 0, 840, 0, 970, 972, 973, 0,
	0, 971, 542, 800, 0, 57, 0, 59, 61, 62,
	929, 70, 71, 77, 86, 1057, 761, 763, 0, 810,
	0, 831, 0, 0, 0, 0, 0, 0, 0, 974,
	976, 975, 46, 47, 0, 58, 0, 0, 807, 804,
	0, 842, 832, 0, 834, 0, 0, 0, 0, 0,
	0, 60, 930, 0, 812, 0, 828, 833, 835, 837,
	0, 841, 839, 48, 49, 50, 0, 811, 0, 824,
	809, 0, 838, 931, 813, -2, 0, 829, 814, -2,
	0, 822, 0, 0, 815, 823, 0, 818, 0, 0,
	0, 817, 0, -2, 825, 0, 0, 819, -2, 0,
	827, 826,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 529,
	105, 104, 106, 3, 530, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 531, 117, 532, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:636
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:642
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:677
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:682
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:688
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:708
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:721
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:729
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:735
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:744
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:753
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:763
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:816
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:826
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:833
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:845
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:859
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:863
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:867
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:880
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:886
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:895
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:906
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:910
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:916
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:920
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:926
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:936
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:960
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:979
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:983
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:987
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1003
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1011
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1018
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1023
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1030
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1039
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1063
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1067
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1073
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1079
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1097
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1114
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1137
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1145
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1150
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1154
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1160
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1173
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1184
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1211
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1224
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1237
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1243
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1249
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1256
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1264
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1300
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1304
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1310
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1317
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1326
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1330
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1336
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1340
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1344
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1348
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1352
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1356
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1360
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1364
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1368
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1372
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1376
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1380
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1384
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1388
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1392
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1396
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1400
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1404
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1408
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1412
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1416
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1420
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1424
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1428
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1432
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1436
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1440
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1444
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1448
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1452
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1456
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1460
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1464
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1468
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1472
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1476
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1480
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1484
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1488
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1492
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1496
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1500
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1504
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1508
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1512
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1516
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1520
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1524
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1528
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1532
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1551
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1558
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1567
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1601
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1628
		{
			yyVAL.str = yyDollar[3].str
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1634
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1638
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1644
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1652
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1661
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1677
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1700
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1723
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1730
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1737
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1745
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1752
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1776
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1786
		{
			yyVAL.str = yyDollar[1].str
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1792
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1796
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1802
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1806
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1817
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1823
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1921
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1931
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1938
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1964
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1980
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1986
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:1990
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:1996
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2002
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2006
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2010
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2014
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2032
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2038
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2042
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2048
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2052
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2058
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2064
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2074
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2088
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2096
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2100
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2108
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2116
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2167
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2171
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2177
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2183
		{
			yyVAL.str = yyDollar[1].str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2188
		{
			yyVAL.str = "true"
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2189
		{
			yyVAL.str = "false"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = yyDollar[1].str
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2195
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2229
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2236
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2240
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2271
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2278
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2287
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2307
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2316
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2348
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2366
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2390
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2394
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2402
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2406
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2418
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2426
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2430
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2434
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2438
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2448
		{
			yyVAL.item = nil
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2453
		{
			yyVAL.item = nil
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2485
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2511
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2522
		{
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2526
		{
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2546
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2579
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2583
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2591
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2595
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2607
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2634
		{
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2636
		{
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2664
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2678
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2684
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2690
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2706
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2722
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2728
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2763
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2767
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2772
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2776
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2782
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2795
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2799
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2810
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2814
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2820
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2824
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2830
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2836
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2840
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2844
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2850
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2854
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2892
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2896
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2902
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2942
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2965
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2970
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3017
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3021
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3027
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3032
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3039
		{
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3041
		{
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3044
		{
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3053
		{
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3057
		{
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3062
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3071
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3084
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3092
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3106
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3126
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3139
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3145
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3149
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3155
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3176
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3185
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3201
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3221
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3225
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3234
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3238
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3253
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3257
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3263
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3267
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3273
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3277
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3283
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3288
		{
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3299
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3303
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3319
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3325
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3329
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3335
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3339
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3368
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3375
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3393
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3412
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3429
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3442
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3446
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3451
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3455
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3462
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3467
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3474
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3484
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3500
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3513
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3522
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3526
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3544
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3553
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3567
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3576
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3582
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3592
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3603
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3607
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3611
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3616
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3620
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3638
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3652
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3686
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3706
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3723
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3739
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3755
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3763
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3771
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3787
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3808
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3822
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3826
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3830
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3835
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3839
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3865
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3880
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3884
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3890
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3894
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3899
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3903
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3908
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3916
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3922
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3930
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3938
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3948
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3954
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3963
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3981
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3991
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3995
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4005
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4009
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4013
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4017
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4023
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4033
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4053
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4059
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4065
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4069
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4073
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4083
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4089
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4099
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4103
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4109
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4113
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4123
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4136
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4148
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4179
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4183
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4189
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4199
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4203
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4207
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4216
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4220
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4233
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4237
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4241
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4245
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4250
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4254
		{
			yyVAL.str = yyDollar[1].str
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4258
		{
			yyVAL.str = yyDollar[2].str
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4270
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4274
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4278
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4282
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4286
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4292
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4332
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4338
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 699:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4345
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4357
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4362
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4368
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4379
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4385
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4391
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4395
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4399
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4405
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4411
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4417
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4440
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4446
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4460
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4466
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4473
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4479
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4487
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4493
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4500
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4508
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4514
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4535
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4540
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4546
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4554
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4660
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4664
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4680
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4684
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4700
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4704
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4708
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4717
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4745
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4761
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4765
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4771
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4785
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4789
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4793
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4798
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4802
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4806
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4810
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4816
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4839
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4865
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4883
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4887
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4893
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4903
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4907
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4911
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4915
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4919
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4952
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4958
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4962
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4968
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4976
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4991
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5003
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5012
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5025
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5042
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5050
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5061
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5065
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5070
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5074
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5081
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5092
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5096
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5105
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5126
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5137
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5150
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5156
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5160
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5166
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5175
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5189
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5195
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5199
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5205
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5212
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5221
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5225
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5234
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5239
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5243
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5248
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5252
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5262
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5266
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5277
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5285
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5293
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5312
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5321
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5331
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5341
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5345
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5363
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5369
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5373
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5377
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5387
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5403
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5408
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5424
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5428
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5432
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5436
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5444
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5448
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5452
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5464
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5468
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5472
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5476
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5480
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5484
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5503
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5507
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5518
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5522
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5526
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5532
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5536
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5544
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5548
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5570
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5579
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5584
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5590
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5601
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5607
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5611
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5617
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5629
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5635
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5644
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5653
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5676
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5685
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5695
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5709
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5713
		{
			yyVAL.str = yyDollar[1].str
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5723
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5729
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5735
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5749
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5753
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5759
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5765
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5769
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5773
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5791
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5797
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5801
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5805
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5814
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5820
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5824
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5830
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5834
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5838
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5842
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5846
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5850
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5859
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5863
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5871
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5911
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5915
		{
			yyVAL.str = yyDollar[1].str
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5921
		{
			yyVAL.str = ""
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5925
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5931
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5943
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5950
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5957
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5964
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5971
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5980
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5986
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5992
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6000
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6004
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6008
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6013
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6020
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6024
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6028
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6037
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6042
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6046
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6062
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6076
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6080
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6084
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6088
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6092
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6096
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6100
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6104
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6108
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6112
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6116
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6122
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6126
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6130
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6134
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6138
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6142
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6146
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6150
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6154
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6158
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6162
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6166
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6179
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6184
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6188
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6197
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6201
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6205
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6209
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6218
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6227
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6233
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6237
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6243
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6253
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6300
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6313
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6339
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6354
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6369
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6386
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6401
		{
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6415
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6421
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6425
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6433
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6437
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6441
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6467
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6474
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6483
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6488
		{
			yyVAL.str = ","
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6492
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6501
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6511
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6541
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6550
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6560
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6620
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6630
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6640
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6650
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6670
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6687
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6695
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6711
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6719
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6729
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6737
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6746
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6757
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6767
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6779
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6790
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6812
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6848
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6860
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6872
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6883
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6905
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6917
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6925
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6933
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6944
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6953
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6962
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6970
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6980
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6988
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7012
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7031
		{
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7033
		{
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7074
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7093
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7099
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7108
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7114
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7118
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7125
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7129
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7133
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7141
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7153
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7159
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7163
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7167
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7171
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7179
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7183
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7187
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7191
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7195
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7203
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7207
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7211
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7227
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7231
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7235
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7239
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7249
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7255
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7259
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7266
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7270
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7274
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7296
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7300
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7304
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7328
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7332
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7345
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7350
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7366
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7370
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7395
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7406
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7411
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7417
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7441
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7453
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7466
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7479
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7492
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7505
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7518
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7531
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7544
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7557
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7570
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7583
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7598
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7621
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7659
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7736
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7756
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7776
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7796
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7812
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7825
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7851
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7864
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7888
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7912
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7924
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7948
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7960
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7972
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7985
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7998
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8013
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8021
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8030
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8040
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8063
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8068
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8074
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8081
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8085
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8090
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8094
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8100
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8106
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8113
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8120
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8129
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8136
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8143
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8166
		{
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8178
		{
			yyVAL.str = ""
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8182
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const VALUES = 57389
const NEXT = 57390
const VALUE = 57391
const SHARE = 57392
const MODE = 57393
const SQL_NO_CACHE = 57394
const SQL_CACHE = 57395
const JOIN = 57396
const STRAIGHT_JOIN = 57397
const LEFT = 57398
const RIGHT = 57399
const INNER = 57400
const OUTER = 57401
const CROSS = 57402
const NATURAL = 57403
const USE = 57404
const FORCE = 57405
const LOWER_THAN_ON = 57406
const ON = 57407
const USING = 57408
const SUBQUERY_AS_EXPR = 57409
const LOWER_THAN_STRING = 57410
const ID = 57411
const AT_ID = 57412
const AT_AT_ID = 57413
const STRING = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const QUOTE_ID = 57419
const INTEGRAL = 57420
const HEX = 57421
const BIT_LITERAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const NULL = 57425
const TRUE = 57426
const FALSE = 57427
const LOWER_THAN_CHARSET = 57428
const CHARSET = 57429
const UNIQUE = 57430
const KEY = 57431
const OR = 57432
const PIPE_CONCAT = 57433
const XOR = 57434
const AND = 57435
const NOT = 57436
const BETWEEN = 57437
const CASE = 57438
const WHEN = 57439
const THEN = 57440
const ELSE = 57441
const END = 57442
const ELSEIF = 57443
const LOWER_THAN_EQ = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT = 57453
const ILIKE = 57454
const SHIFT_LEFT = 57455
const SHIFT_RIGHT = 57456
const DIV = 57457
const MOD = 57458
const UNARY = 57459
const COLLATE = 57460
const BINARY = 57461
const UNDERSCORE_BINARY = 57462
const INTERVAL = 57463
const OUT = 57464
const INOUT = 57465
const BEGIN = 57466
const START = 57467
const TRANSACTION = 57468
const COMMIT = 57469
const ROLLBACK = 57470
const WORK = 57471
const CONSISTENT = 57472
const SNAPSHOT = 57473
const CHAIN = 57474
const NO = 57475
const RELEASE = 57476
const PRIORITY = 57477
const QUICK = 57478
const BIT = 57479
const TINYINT = 57480
const SMALLINT = 57481
const MEDIUMINT = 57482
const INT = 57483
const INTEGER = 57484
const BIGINT = 57485
const INTNUM = 57486
const REAL = 57487
const DOUBLE = 57488
const FLOAT_TYPE = 57489
const DECIMAL = 57490
const NUMERIC = 57491
const DECIMAL_VALUE = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const UUID = 57513
const GEOMETRY = 57514
const POINT = 57515
const LINESTRING = 57516
const POLYGON = 57517
const GEOMETRYCOLLECTION = 57518
const MULTIPOINT = 57519
const MULTILINESTRING = 57520
const MULTIPOLYGON = 57521
const INT1 = 57522
const INT2 = 57523
const INT3 = 57524
const INT4 = 57525
const INT8 = 57526
const S3OPTION = 57527
const SQL_SMALL_RESULT = 57528
const SQL_BIG_RESULT = 57529
const SQL_BUFFER_RESULT = 57530
const LOW_PRIORITY = 57531
const HIGH_PRIORITY = 57532
const DELAYED = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const RETURNS = 57540
const SCHEMA = 57541
const TABLE = 57542
const SEQUENCE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const CONSTRAINT = 57551
const SPATIAL = 57552
const FULLTEXT = 57553
const FOREIGN = 57554
const KEY_BLOCK_SIZE = 57555
const SHOW = 57556
const DESCRIBE = 57557
const EXPLAIN = 57558
const DATE = 57559
const ESCAPE = 57560
const REPAIR = 57561
const OPTIMIZE = 57562
const TRUNCATE = 57563
const MAXVALUE = 57564
const PARTITION = 57565
const REORGANIZE = 57566
const LESS = 57567
const THAN = 57568
const PROCEDURE = 57569
const TRIGGER = 57570
const STATUS = 57571
const VARIABLES = 57572
const ROLE = 57573
const PROXY = 57574
const AVG_ROW_LENGTH = 57575
const STORAGE = 57576
const DISK = 57577
const MEMORY = 57578
const CHECKSUM = 57579
const COMPRESSION = 57580
const DATA = 57581
const DIRECTORY = 57582
const DELAY_KEY_WRITE = 57583
const ENCRYPTION = 57584
const ENGINE = 57585
const MAX_ROWS = 57586
const MIN_ROWS = 57587
const PACK_KEYS = 57588
const ROW_FORMAT = 57589
const STATS_AUTO_RECALC = 57590
const STATS_PERSISTENT = 57591
const STATS_SAMPLE_PAGES = 57592
const DYNAMIC = 57593
const COMPRESSED = 57594
const REDUNDANT = 57595
const COMPACT = 57596
const FIXED = 57597
const COLUMN_FORMAT = 57598
const AUTO_RANDOM = 57599
const RESTRICT = 57600
const CASCADE = 57601
const ACTION = 57602
const PARTIAL = 57603
const SIMPLE = 57604
const CHECK = 57605
const ENFORCED = 57606
const RANGE = 57607
const LIST = 57608
const ALGORITHM = 57609
const LINEAR = 57610
const PARTITIONS = 57611
const SUBPARTITION = 57612
const SUBPARTITIONS = 57613
const CLUSTER = 57614
const TYPE = 57615
const ANY = 57616
const SOME = 57617
const EXTERNAL = 57618
const LOCALFILE = 57619
const URL = 57620
const PREPARE = 57621
const DEALLOCATE = 57622
const RESET = 57623
const EXTENSION = 57624
const INCREMENT = 57625
const CYCLE = 57626
const MINVALUE = 57627
const PUBLICATION = 57628
const SUBSCRIPTIONS = 57629
const PUBLICATIONS = 57630
const PROPERTIES = 57631
const PARSER = 57632
const VISIBLE = 57633
const INVISIBLE = 57634
const BTREE = 57635
const HASH = 57636
const RTREE = 57637
const BSI = 57638
const ZONEMAP = 57639
const LEADING = 57640
const BOTH = 57641
const TRAILING = 57642
const UNKNOWN = 57643
const EXPIRE = 57644
const ACCOUNT = 57645
const ACCOUNTS = 57646
const UNLOCK = 57647
const DAY = 57648
const NEVER = 57649
const PUMP = 57650
const MYSQL_COMPATIBILITY_MODE = 57651
const SECOND = 57652
const ASCII = 57653
const COALESCE = 57654
const COLLATION = 57655
const HOUR = 57656
const MICROSECOND = 57657
const MINUTE = 57658
const MONTH = 57659
const QUARTER = 57660
const REPEAT = 57661
const REVERSE = 57662
const ROW_COUNT = 57663
const WEEK = 57664
const REVOKE = 57665
const FUNCTION = 57666
const PRIVILEGES = 57667
const TABLESPACE = 57668
const EXECUTE = 57669
const SUPER = 57670
const GRANT = 57671
const OPTION = 57672
const REFERENCES = 57673
const REPLICATION = 57674
const SLAVE = 57675
const CLIENT = 57676
const USAGE = 57677
const RELOAD = 57678
const FILE = 57679
const TEMPORARY = 57680
const ROUTINE = 57681
const EVENT = 57682
const SHUTDOWN = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const ENGINES = 57690
const LOW_CARDINALITY = 57691
const ADMIN_NAME = 57692
const RANDOM = 57693
const SUSPEND = 57694
const ATTRIBUTE = 57695
const HISTORY = 57696
const REUSE = 57697
const CURRENT = 57698
const OPTIONAL = 57699
const FAILED_LOGIN_ATTEMPTS = 57700
const PASSWORD_LOCK_TIME = 57701
const UNBOUNDED = 57702
const SECONDARY = 57703
const USER = 57704
const IDENTIFIED = 57705
const CIPHER = 57706
const ISSUER = 57707
const X509 = 57708
const SUBJECT = 57709
const SAN = 57710
const REQUIRE = 57711
const SSL = 57712
const NONE = 57713
const PASSWORD = 57714
const MAX_QUERIES_PER_HOUR = 57715
const MAX_UPDATES_PER_HOUR = 57716
const MAX_CONNECTIONS_PER_HOUR = 57717
const MAX_USER_CONNECTIONS = 57718
const FORMAT = 57719
const VERBOSE = 57720
const CONNECTION = 57721
const TRIGGERS = 57722
const PROFILES = 57723
const LOAD = 57724
const INFILE = 57725
const TERMINATED = 57726
const OPTIONALLY = 57727
const ENCLOSED = 57728
const ESCAPED = 57729
const STARTING = 57730
const LINES = 57731
const ROWS = 57732
const IMPORT = 57733
const MODUMP = 57734
const OVER = 57735
const PRECEDING = 57736
const FOLLOWING = 57737
const GROUPS = 57738
const DATABASES = 57739
const TABLES = 57740
const SEQUENCES = 57741
const EXTENDED = 57742
const FULL = 57743
const PROCESSLIST = 57744
const FIELDS = 57745
const COLUMNS = 57746
const OPEN = 57747
const ERRORS = 57748
const WARNINGS = 57749
const INDEXES = 57750
const SCHEMAS = 57751
const NODE = 57752
const LOCKS = 57753
const ROLES = 57754
const TABLE_NUMBER = 57755
const COLUMN_NUMBER = 57756
const TABLE_VALUES = 57757
const TABLE_SIZE = 57758
const NAMES = 57759
const GLOBAL = 57760
const PERSIST = 57761
const SESSION = 57762
const ISOLATION = 57763
const LEVEL = 57764
const READ = 57765
const WRITE = 57766
const ONLY = 57767
const REPEATABLE = 57768
const COMMITTED = 57769
const UNCOMMITTED = 57770
const SERIALIZABLE = 57771
const LOCAL = 57772
const EVENTS = 57773
const PLUGINS = 57774
const CURRENT_TIMESTAMP = 57775
const DATABASE = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const REPLACE = 57783
const CONVERT = 57784
const SEPARATOR = 57785
const TIMESTAMPDIFF = 57786
const CURRENT_DATE = 57787
const CURRENT_USER = 57788
const CURRENT_ROLE = 57789
const SECOND_MICROSECOND = 57790
const MINUTE_MICROSECOND = 57791
const MINUTE_SECOND = 57792
const HOUR_MICROSECOND = 57793
const HOUR_SECOND = 57794
const HOUR_MINUTE = 57795
const DAY_MICROSECOND = 57796
const DAY_SECOND = 57797
const DAY_MINUTE = 57798
const DAY_HOUR = 57799
const YEAR_MONTH = 57800
const SQL_TSI_HOUR = 57801
const SQL_TSI_DAY = 57802
const SQL_TSI_WEEK = 57803
const SQL_TSI_MONTH = 57804
const SQL_TSI_QUARTER = 57805
const SQL_TSI_YEAR = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MINUTE = 57808
const RECURSIVE = 57809
const CONFIG = 57810
const DRAINER = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ADDDATE = 57819
const BIT_AND = 57820
const BIT_OR = 57821
const BIT_XOR = 57822
const CAST = 57823
const COUNT = 57824
const APPROX_COUNT_DISTINCT = 57825
const APPROX_PERCENTILE = 57826
const CURDATE = 57827
const CURTIME = 57828
const DATE_ADD = 57829
const DATE_SUB = 57830
const EXTRACT = 57831
const GROUP_CONCAT = 57832
const MAX = 57833
const MID = 57834
const MIN = 57835
const NOW = 57836
const POSITION = 57837
const SESSION_USER = 57838
const STD = 57839
const STDDEV = 57840
const MEDIAN = 57841
const STDDEV_POP = 57842
const STDDEV_SAMP = 57843
const SUBDATE = 57844
const SUBSTR = 57845
const SUBSTRING = 57846
const SUM = 57847
const SYSDATE = 57848
const SYSTEM_USER = 57849
const TRANSLATE = 57850
const TRIM = 57851
const VARIANCE = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const AVG = 57855
const RANK = 57856
const ROW_NUMBER = 57857
const DENSE_RANK = 57858
const NEXTVAL = 57859
const SETVAL = 57860
const CURRVAL = 57861
const LASTVAL = 57862
const ARROW = 57863
const ROW = 57864
const OUTFILE = 57865
const HEADER = 57866
const MAX_FILE_SIZE = 57867
const FORCE_QUOTE = 57868
const PARALLEL = 57869
const UNUSED = 57870
const BINDINGS = 57871
const DO = 57872
const DECLARE = 57873
const LOOP = 57874
const WHILE = 57875
const LEAVE = 57876
const ITERATE = 57877
const UNTIL = 57878
const CALL = 57879
const SPBEGIN = 57880
const BACKEND = 57881
const SERVERS = 57882
const KILL = 57883
const QUERY_RESULT = 57884

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:9642

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 111,
	21, 649,
	-2, 630,
	-1, 125,
	219, 868,
	-2, 939,
	-1, 147,
	42, 472,
	219, 472,
	246, 479,
	247, 479,
	425, 472,
	-2, 505,
	-1, 183,
	561, 1610,
	-2, 390,
	-1, 505,
	295, 130,
	400, 130,
	-2, 1522,
	-1, 568,
	68, 1325,
	-2, 1664,
	-1, 569,
	68, 1343,
	-2, 1635,
	-1, 573,
	68, 1344,
	-2, 1663,
	-1, 598,
	68, 1255,
	-2, 1726,
	-1, 599,
	68, 1256,
	-2, 1725,
	-1, 600,
	68, 1257,
	-2, 1715,
	-1, 601,
	68, 1690,
	-2, 1710,
	-1, 602,
	68, 1691,
	-2, 1711,
	-1, 603,
	68, 1692,
	-2, 1717,
	-1, 604,
	68, 1693,
	-2, 1700,
	-1, 605,
	68, 1694,
	-2, 1708,
	-1, 606,
	68, 1695,
	-2, 1718,
	-1, 607,
	68, 1696,
	-2, 1719,
	-1, 608,
	68, 1697,
	-2, 1724,
	-1, 609,
	68, 1698,
	-2, 1729,
	-1, 610,
	68, 1699,
	-2, 1730,
	-1, 612,
	68, 1322,
	-2, 1514,
	-1, 616,
	68, 1327,
	-2, 1523,
	-1, 619,
	68, 1331,
	-2, 1541,
	-1, 623,
	68, 1335,
	-2, 1581,
	-1, 624,
	68, 1336,
	-2, 1659,
	-1, 632,
	68, 1346,
	-2, 1644,
	-1, 633,
	68, 1347,
	-2, 1689,
	-1, 634,
	68, 1348,
	-2, 1654,
	-1, 635,
	68, 1349,
	-2, 1679,
	-1, 646,
	68, 1233,
	-2, 1720,
	-1, 647,
	68, 1234,
	-2, 1721,
	-1, 648,
	68, 1235,
	-2, 1722,
	-1, 652,
	21, 650,
	-2, 613,
	-1, 722,
	420, 505,
	421, 505,
	-2, 473,
	-1, 765,
	106, 1514,
	117, 1514,
	137, 1514,
	-2, 1489,
	-1, 865,
	21, 650,
	-2, 613,
	-1, 965,
	21, 649,
	-2, 1133,
	-1, 1316,
	68, 1393,
	-2, 1661,
	-1, 1317,
	68, 1394,
	-2, 1662,
	-1, 1451,
	69, 793,
	-2, 799,
	-1, 1788,
	69, 1475,
	138, 1475,
	-2, 1646,
	-1, 1789,
	69, 1475,
	138, 1475,
	-2, 1645,
	-1, 1790,
	69, 1453,
	138, 1453,
	-2, 1632,
	-1, 1791,
	69, 1454,
	138, 1454,
	-2, 1637,
	-1, 1792,
	69, 1455,
	138, 1455,
	-2, 1569,
	-1, 1793,
	69, 1456,
	138, 1456,
	-2, 1563,
	-1, 1794,
	69, 1457,
	138, 1457,
	-2, 1505,
	-1, 1795,
	69, 1458,
	138, 1458,
	-2, 1634,
	-1, 1796,
	69, 1459,
	138, 1459,
	-2, 1567,
	-1, 1797,
	69, 1460,
	138, 1460,
	-2, 1562,
	-1, 1798,
	69, 1461,
	138, 1461,
	-2, 1555,
	-1, 1800,
	69, 1464,
	138, 1464,
	-2, 1679,
	-1, 1801,
	69, 1444,
	138, 1444,
	-2, 1664,
	-1, 1802,
	69, 1473,
	138, 1473,
	-2, 1635,
	-1, 1803,
	69, 1473,
	138, 1473,
	-2, 1663,
	-1, 1804,
	69, 1473,
	138, 1473,
	-2, 1524,
	-1, 1805,
	69, 1471,
	138, 1471,
	-2, 1654,
	-1, 1806,
	69, 1468,
	138, 1468,
	-2, 1546,
	-1, 1807,
	68, 1426,
	69, 1426,
	138, 1426,
	362, 1426,
	363, 1426,
	364, 1426,
	-2, 1504,
	-1, 1808,
	68, 1427,
	69, 1427,
	138, 1427,
	362, 1427,
	363, 1427,
	364, 1427,
	-2, 1506,
	-1, 1809,
	68, 1430,
	69, 1430,
	138, 1430,
	362, 1430,
	363, 1430,
	364, 1430,
	-2, 1636,
	-1, 1810,
	68, 1432,
	69, 1432,
	138, 1432,
	362, 1432,
	363, 1432,
	364, 1432,
	-2, 1619,
	-1, 1811,
	68, 1434,
	69, 1434,
	138, 1434,
	362, 1434,
	363, 1434,
	364, 1434,
	-2, 1568,
	-1, 1812,
	68, 1436,
	69, 1436,
	138, 1436,
	362, 1436,
	363, 1436,
	364, 1436,
	-2, 1551,
	-1, 1813,
	68, 1437,
	69, 1437,
	138, 1437,
	362, 1437,
	363, 1437,
	364, 1437,
	-2, 1552,
	-1, 1814,
	68, 1439,
	69, 1439,
	138, 1439,
	362, 1439,
	363, 1439,
	364, 1439,
	-2, 1503,
	-1, 1815,
	69, 1478,
	138, 1478,
	362, 1478,
	363, 1478,
	364, 1478,
	-2, 1529,
	-1, 1816,
	69, 1478,
	138, 1478,
	362, 1478,
	363, 1478,
	364, 1478,
	-2, 1542,
	-1, 1817,
	69, 1481,
	138, 1481,
	362, 1481,
	363, 1481,
	364, 1481,
	-2, 1525,
	-1, 1818,
	69, 1478,
	138, 1478,
	362, 1478,
	363, 1478,
	364, 1478,
	-2, 1604,
	-1, 1831,
	89, 903,
	133, 903,
	172, 903,
	175, 903,
	259, 903,
	-2, 896,
	-1, 1945,
	21, 649,
	-2, 743,
	-1, 2132,
	89, 903,
	133, 903,
	172, 903,
	175, 903,
	259, 903,
	-2, 897,
	-1, 2144,
	66, 559,
	138, 559,
	-2, 1034,
	-1, 2166,
	280, 1101,
	-2, 1080,
	-1, 2437,
	280, 1101,
	-2, 1081,
	-1, 2570,
	89, 903,
	133, 903,
	172, 903,
	175, 903,
	-2, 982,
	-1, 2573,
	89, 903,
	133, 903,
	172, 903,
	175, 903,
	-2, 982,
	-1, 2583,
	66, 559,
	138, 559,
	-2, 1035,
	-1, 2682,
	89, 903,
	133, 903,
	172, 903,
	175, 903,
	-2, 983,
	-1, 2983,
	69, 954,
	138, 954,
	-2, 903,
	-1, 2987,
	69, 954,
	138, 954,
	-2, 903,
	-1, 3001,
	69, 958,
	138, 958,
	-2, 903,
	-1, 3006,
	69, 959,
	138, 959,
	-2, 903,
}

const yyPrivate = 57344

const yyLast = 36083

var yyAct = [...]int{
	535, 1235, 1514, 2986, 2987, 2966, 174, 2995, 1297, 2877,
	516, 2925, 537, 2895, 2917, 524, 2649, 2654, 2806, 2833,
	1766, 2449, 2834, 2714, 2798, 1102, 2526, 2817, 2821, 2675,
	2736, 653, 2527, 2674, 996, 2763, 2726, 2652, 1226, 422,
	1472, 2703, 2807, 2809, 565, 2147, 2681, 2593, 428, 1300,
	433, 433, 1160, 2409, 1474, 2644, 433, 449, 458, 2235,
	2234, 458, 159, 1293, 1583, 2554, 2219, 2233, 1580, 2461,
	1870, 2227, 2438, 518, 2524, 1548, 2676, 2037, 1674, 1939,
	514, 2256, 2512, 1873, 2495, 1786, 1643, 2230, 2385, 2382,
	1595, 2380, 1060, 2162, 764, 2133, 2460, 1840, 463, 1923,
	859, 1784, 1518, 1776, 2329, 53, 1217, 513, 507, 469,
	508, 2078, 2036, 1153, 2407, 1222, 1652, 1644, 1651, 1670,
	2290, 1617, 1986, 1433, 2273, 1576, 1669, 1551, 699, 1940,
	1076, 1549, 2115, 770, 36, 2111, 1928, 1871, 2410, 2168,
	1501, 1839, 6, 1510, 170, 8, 1110, 169, 7, 1459,
	1227, 422, 1441, 2003, 1291, 814, 515, 1702, 1671, 1967,
	1191, 517, 1782, 1169, 1681, 110, 35, 427, 1139, 758,
	1484, 1824, 2412, 1891, 174, 2411, 174, 506, 805, 806,
	1346, 525, 1483, 1330, 1282, 768, 876, 508, 2079, 1034,
	1633, 455, 1647, 1650, 26, 1607, 1198, 1290, 15, 757,
	1947, 13, 1136, 1458, 1234, 442, 698, 1352, 421, 1138,
	471, 472, 650, 1296, 14, 23, 32, 16, 1351, 445,
	10, 160, 1091, 1103, 1190, 1058, 1087, 457, 1111, 156,
	1078, 153, 2323, 696, 997, 1688, 801, 2039, 803, 2323,
	1678, 1989, 729, 717, 2519, 652, 1992, 1990, 798, 1987,
	1205, 454, 1201, 802, 797, 450, 798, 798, 452, 158,
	774, 429, 1123, 1203, 934, 935, 936, 933, 2642, 2286,
	2284, 453, 1622, 451, 934, 935, 936, 933, 2732, 2727,
	2645, 2525, 1437, 991, 2811, 438, 1646, 651, 461, 661,
	1050, 157, 2667, 49, 149, 126, 2773, 2868, 157, 157,
	157, 796, 157, 8, 897, 2032, 7, 2024, 2666, 157,
	2782, 157, 157, 49, 149, 126, 157, 1675, 2352, 1249,
	771, 773, 1242, 467, 468, 1686, 157, 1828, 49, 149,
	126, 912, 1965, 931, 913, 109, 1246, 2305, 1966, 1239,
	2774, 1051, 1953, 2262, 1283, 1952, 2298, 1287, 1954, 154,
	2263, 2264, 1593, 109, 1560, 1267, 154, 1248, 154, 2004,
	1241, 1386, 915, 1561, 1562, 1445, 1446, 154, 509, 154,
	154, 1286, 654, 641, 154, 640, 642, 643, 738, 644,
	645, 1140, 1497, 1142, 154, 662, 2913, 1119, 743, 1106,
	1120, 742, 1099, 1105, 1108, 1109, 2911, 2113, 1108, 1109,
	924, 1299, 929, 1556, 905, 767, 2662, 907, 2837, 2838,
	780, 775, 779, 781, 766, 2814, 2864, 2813, 2863, 2812,
	2862, 2814, 2813, 2812, 1757, 550, 111, 2899, 2900, 2734,
	2291, 111, 433, 2803, 910, 908, 2528, 785, 2800, 2730,
	2800, 778, 433, 869, 2292, 2528, 2293, 1288, 1302, 2867,
	2112, 879, 2019, 432, 432, 2737, 2738, 2739, 2740, 440,
	458, 458, 870, 433, 2816, 2537, 2118, 1577, 1285, 1567,
	864, 866, 1278, 1122, 747, 1571, 1204, 1202, 2555, 439,
	2562, 2396, 111, 1918, 1682, 917, 2672, 1823, 918, 783,
	125, 744, 155, 911, 2103, 2386, 786, 1630, 1211, 1210,
	2456, 879, 2755, 2394, 2318, 2029, 808, 901, 927, 928,
	2316, 926, 147, 776, 2643, 502, 920, 900, 504, 868,
	2390, 967, 2285, 503, 2223, 1921, 769, 2870, 2871, 1920,
	903, 2661, 2758, 2669, 784, 863, 2915, 2663, 1924, 2906,
	799, 800, 906, 909, 2748, 804, 2406, 2749, 2836, 2748,
	746, 2416, 2749, 1301, 774, 2391, 2392, 2127, 2128, 2129,
	2130, 1687, 2743, 2469, 2470, 914, 902, 869, 2826, 1097,
	2393, 2770, 777, 865, 2140, 460, 892, 2614, 1284, 459,
	772, 455, 455, 2822, 111, 1131, 1591, 1592, 916, 2879,
	2996, 1308, 1311, 1312, 922, 923, 2980, 2934, 2910, 111,
	2751, 111, 1309, 2941, 1086, 2751, 1691, 1693, 1694, 2875,
	2876, 2789, 2879, 2606, 771, 773, 2388, 1901, 2716, 2945,
	1900, 1121, 745, 1876, 921, 774, 883, 2597, 2619, 2620,
	2476, 2750, 881, 880, 2124, 2920, 2750, 2601, 904, 2204,
	1000, 454, 454, 1001, 782, 450, 450, 919, 452, 452,
	2704, 2705, 2706, 2708, 2707, 1149, 1148, 1676, 2541, 890,
	1676, 453, 453, 451, 451, 2322, 872, 873, 1101, 1100,
	1676, 2967, 1056, 428, 1059, 1084, 889, 969, 970, 971,
	972, 1031, 881, 880, 1703, 771, 773, 885, 886, 1083,
	3003, 2997, 2991, 1082, 2764, 860, 874, 2368, 699, 2575,
	456, 798, 2640, 798, 798, 798, 1061, 2772, 973, 798,
	2869, 798, 467, 2797, 1137, 456, 2025, 1957, 1890, 1988,
	1679, 1889, 2771, 897, 1689, 2258, 2260, 1066, 2321, 1206,
	1677, 1070, 1879, 1069, 1068, 1107, 462, 1690, 1108, 1109,
	2376, 1073, 1104, 2102, 433, 1770, 1133, 2117, 1108, 1109,
	1448, 422, 422, 1054, 651, 2921, 2916, 1875, 691, 50,
	422, 422, 1877, 2668, 1164, 1164, 1449, 433, 1062, 1063,
	1064, 1065, 127, 1067, 50, 1098, 2033, 1071, 2397, 127,
	127, 127, 1578, 127, 458, 1059, 428, 2387, 1194, 1194,
	127, 891, 127, 127, 1171, 1769, 2756, 127, 2319, 174,
	2121, 2122, 1447, 2715, 2389, 663, 896, 127, 422, 1009,
	1010, 769, 664, 1878, 2120, 2689, 466, 1166, 2990, 1475,
	2673, 739, 2331, 2330, 1310, 3009, 1568, 1162, 1162, 1279,
	1772, 1771, 1570, 1052, 1053, 861, 1937, 2744, 2946, 1692,
	1057, 2745, 2744, 2421, 2145, 867, 2808, 932, 3008, 2602,
	2603, 2492, 1212, 1475, 667, 2599, 1233, 897, 1236, 2598,
	1880, 3002, 1280, 1244, 655, 2404, 888, 2205, 2207, 2208,
	2209, 2206, 111, 111, 772, 1158, 1159, 1036, 1779, 937,
	2918, 2919, 2006, 1265, 1038, 2259, 1260, 1261, 966, 655,
	1250, 693, 694, 695, 932, 894, 975, 1164, 739, 1164,
	869, 1780, 1781, 2488, 741, 666, 652, 740, 748, 669,
	668, 934, 935, 936, 933, 2146, 1132, 932, 980, 2571,
	1144, 1146, 1215, 1734, 1218, 1219, 1733, 2999, 2981, 1156,
	1157, 1075, 1760, 1093, 1094, 895, 1085, 1088, 1092, 1092,
	1092, 1938, 1895, 1095, 1938, 965, 2976, 2561, 2024, 1224,
	1225, 1113, 1114, 1187, 1116, 1117, 1118, 2350, 1124, 1125,
	1088, 1088, 1826, 1112, 1147, 774, 1115, 2146, 895, 774,
	789, 794, 795, 2970, 2969, 2492, 1298, 1207, 1264, 1350,
	1764, 741, 1938, 932, 740, 2950, 1263, 2927, 1389, 1390,
	1391, 2405, 1399, 2889, 1240, 932, 3000, 1684, 1247, 1172,
	1089, 1405, 2844, 1229, 1406, 1232, 438, 2108, 1032, 455,
	1186, 1185, 2839, 1195, 2105, 2977, 1413, 1414, 1295, 1274,
	1196, 2011, 1969, 2791, 1675, 1610, 2790, 1559, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1863, 1765, 1684, 1684, 1341, 1342, 2787, 1313, 2786, 1276,
	934, 935, 936, 933, 1684, 1251, 2928, 1431, 2785, 2784,
	1825, 433, 2890, 1457, 1164, 1461, 1738, 1463, 1464, 454,
	2759, 2760, 433, 450, 1666, 699, 452, 2621, 1473, 1273,
	1039, 2760, 1164, 1270, 1589, 2478, 1269, 1408, 1133, 453,
	1252, 451, 2792, 449, 1256, 1844, 1763, 2253, 1434, 652,
	1272, 1090, 1271, 1074, 1344, 1268, 1289, 2084, 1398, 1294,
	1292, 1281, 1496, 1150, 1588, 2760, 949, 2760, 1339, 1340,
	1502, 1502, 862, 1133, 2040, 1133, 1133, 2760, 2760, 433,
	1456, 1457, 1457, 1500, 2022, 1164, 1546, 1558, 2426, 2760,
	2015, 1332, 791, 792, 793, 1713, 1969, 1129, 1608, 2013,
	1489, 422, 2008, 1164, 2479, 2964, 1193, 1193, 2929, 2586,
	2001, 1465, 1466, 1467, 1999, 1495, 1938, 2422, 1498, 1499,
	1170, 934, 935, 936, 933, 1462, 932, 2275, 433, 1457,
	1164, 2148, 1600, 433, 433, 1603, 1381, 1382, 1997, 1385,
	1606, 2027, 2313, 932, 1612, 1173, 1995, 1400, 1541, 1542,
	439, 174, 1384, 1844, 174, 174, 2026, 174, 1987, 2009,
	1407, 1843, 1409, 2018, 1504, 1761, 2959, 1712, 2014, 1410,
	2827, 2009, 1742, 1741, 111, 1732, 1438, 1586, 1587, 2002,
	1723, 1860, 665, 2000, 897, 1729, 1476, 1477, 1485, 1714,
	1487, 1488, 1399, 1399, 1654, 1432, 1597, 1722, 1721, 1399,
	1399, 1683, 1257, 1493, 1661, 1949, 2277, 1996, 1564, 1572,
	1566, 1503, 1665, 1621, 2828, 1996, 1624, 1625, 1615, 1627,
	1584, 1585, 1579, 1601, 1602, 1469, 1453, 1460, 1473, 1152,
	1844, 1470, 1164, 1673, 1760, 111, 1253, 978, 882, 111,
	1599, 932, 932, 1505, 932, 1478, 862, 857, 1486, 932,
	111, 1303, 1304, 1305, 1306, 1307, 855, 1506, 1507, 1480,
	111, 1088, 2690, 2947, 1481, 1482, 932, 932, 1667, 2578,
	1684, 1258, 1388, 1387, 862, 1490, 1089, 1892, 2493, 2483,
	1494, 1491, 1492, 1655, 2480, 1696, 1092, 1547, 1545, 952,
	953, 954, 955, 956, 949, 1348, 1349, 774, 1460, 670,
	1573, 1383, 2576, 1563, 774, 1565, 2691, 2417, 1649, 1393,
	1079, 1594, 1151, 2579, 1080, 1649, 950, 951, 952, 953,
	954, 955, 956, 949, 1411, 1412, 2324, 1598, 1415, 1416,
	1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1154, 1616, 455, 1292, 1618, 2056, 2577, 1619, 2225, 2012,
	1959, 1155, 1435, 871, 2517, 2047, 1439, 771, 773, 1442,
	1981, 1455, 1635, 1739, 771, 773, 1419, 2418, 1700, 1701,
	1746, 1347, 2861, 854, 851, 852, 853, 1090, 933, 2061,
	1338, 2060, 2059, 2057, 2590, 934, 935, 936, 933, 774,
	1659, 1656, 1660, 1658, 2518, 1664, 1335, 1337, 1334, 2985,
	1336, 507, 454, 869, 1819, 1347, 450, 1709, 1199, 452,
	1619, 2419, 936, 933, 1454, 1668, 433, 433, 433, 2609,
	1841, 2608, 453, 2294, 451, 1468, 2180, 1663, 2179, 2174,
	1848, 1133, 940, 941, 942, 943, 944, 945, 946, 938,
	2172, 1853, 1698, 1699, 2670, 2058, 1695, 2973, 1704, 771,
	773, 934, 935, 936, 933, 1133, 934, 935, 936, 933,
	2049, 502, 869, 1884, 504, 2944, 1332, 2520, 1697, 503,
	1403, 2935, 1435, 2930, 2880, 2559, 1708, 1435, 1435, 1787,
	2215, 1404, 1508, 2213, 2671, 2852, 1850, 1851, 934, 935,
	936, 933, 934, 935, 936, 933, 1854, 1855, 2829, 1991,
	2775, 1983, 2728, 2696, 1942, 1942, 1558, 1942, 2693, 1128,
	2943, 1130, 1557, 1134, 1135, 2560, 2692, 2211, 1620, 2580,
	2214, 1623, 2201, 2212, 1626, 422, 422, 1628, 2558, 2395,
	2309, 1596, 2289, 869, 2288, 1820, 1596, 1596, 1869, 1164,
	433, 2199, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	2198, 2197, 2194, 1189, 2188, 869, 428, 2210, 2185, 1194,
	2184, 1558, 2200, 1894, 1976, 1638, 1978, 1756, 1758, 1759,
	174, 1637, 1636, 2062, 2063, 1827, 111, 1632, 1773, 111,
	111, 1946, 111, 1955, 1944, 1956, 1948, 1631, 1254, 1862,
	1049, 1857, 2228, 2381, 1858, 2905, 934, 935, 936, 933,
	1865, 2650, 1963, 1960, 1961, 1200, 1000, 2901, 2865, 1001,
	2795, 774, 1973, 1849, 2757, 2729, 2020, 772, 2680, 1673,
	2648, 1980, 2646, 2625, 772, 1861, 1164, 2623, 1164, 2343,
	1164, 1787, 1982, 111, 1868, 869, 1975, 1867, 2220, 2592,
	2557, 1893, 2556, 1896, 1897, 1898, 1899, 2553, 2546, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1706, 1164, 2065, 1710, 1922, 2540, 2038,
	2487, 771, 773, 1859, 1856, 2342, 2485, 2474, 1950, 1092,
	2072, 934, 935, 936, 933, 1164, 2473, 2373, 2372, 1199,
	2320, 2030, 2287, 2267, 1144, 1146, 1767, 1768, 934, 935,
	936, 933, 2202, 1964, 2195, 1720, 2191, 1725, 2190, 965,
	2189, 2034, 1762, 1727, 597, 596, 2064, 1971, 1640, 1974,
	1634, 2076, 1444, 1972, 1255, 1008, 1004, 1162, 1003, 869,
	979, 1740, 858, 2777, 1743, 1744, 1745, 2073, 2741, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 2051, 1162, 2573,
	2572, 2570, 934, 935, 936, 933, 2031, 934, 935, 936,
	933, 1724, 2545, 2045, 2532, 2523, 2522, 2074, 2511, 2017,
	2510, 2427, 2348, 2831, 2071, 2095, 1164, 2023, 2021, 2125,
	2028, 2341, 2333, 1457, 934, 935, 936, 933, 2328, 2144,
	2820, 2272, 2107, 2104, 1845, 2150, 934, 935, 936, 933,
	1998, 1994, 1993, 2656, 2080, 2106, 2041, 2042, 1747, 2085,
	2044, 2159, 1737, 934, 935, 936, 933, 869, 2055, 1833,
	1834, 1835, 1717, 2109, 1735, 2171, 934, 935, 936, 933,
	1731, 1730, 1728, 2176, 2177, 1719, 2178, 1716, 1715, 1292,
	2181, 1502, 1639, 1430, 1852, 1429, 1219, 1428, 1402, 1401,
	2135, 934, 935, 936, 933, 1942, 157, 2153, 1392, 149,
	126, 2155, 1176, 1174, 157, 2216, 2096, 2998, 2099, 1224,
	1225, 422, 2655, 2141, 2958, 1457, 869, 1558, 1558, 1558,
	1558, 2952, 2942, 1435, 2134, 1435, 2939, 2937, 869, 1558,
	2851, 2793, 1942, 1869, 998, 934, 935, 936, 933, 934,
	935, 936, 933, 1435, 1435, 2166, 2169, 2151, 1164, 1214,
	2169, 2712, 1711, 2700, 154, 2697, 2170, 1229, 2634, 1232,
	433, 433, 154, 2632, 2616, 2123, 2615, 1193, 2612, 2611,
	2143, 1945, 2605, 2565, 174, 2149, 1223, 8, 1216, 174,
	7, 1077, 2217, 1170, 2175, 2138, 2613, 2114, 2249, 2137,
	2136, 1228, 2236, 1231, 1220, 2165, 2158, 2161, 2167, 2094,
	1399, 2007, 1399, 1958, 2236, 2304, 2173, 1847, 2618, 2308,
	934, 935, 936, 933, 2543, 1164, 1916, 1842, 2315, 1333,
	154, 2183, 1604, 1452, 2196, 1451, 1557, 1277, 1243, 1460,
	1221, 934, 935, 936, 933, 111, 2278, 934, 935, 936,
	933, 2282, 1033, 2221, 1030, 2226, 1029, 1028, 2237, 2238,
	2239, 2240, 1027, 1026, 1025, 1024, 2250, 1023, 2186, 2187,
	2251, 2252, 1434, 2248, 2192, 2193, 1022, 2303, 2048, 652,
	2152, 1021, 2154, 1020, 2265, 2268, 2066, 2067, 2156, 2157,
	2224, 1019, 2222, 1018, 2069, 2070, 1017, 2301, 2336, 1016,
	2338, 1015, 1014, 2307, 1013, 2276, 2279, 2075, 2280, 869,
	2317, 1012, 1011, 1007, 774, 2384, 1006, 1005, 1002, 1372,
	995, 774, 994, 992, 2295, 2399, 2300, 433, 991, 1435,
	2302, 2297, 2097, 2098, 1442, 2312, 2346, 869, 869, 869,
	990, 989, 988, 2299, 2311, 987, 1558, 1841, 986, 2425,
	2306, 2326, 2325, 985, 2261, 2429, 984, 983, 2332, 934,
	935, 936, 933, 2334, 2335, 869, 982, 2339, 2340, 2459,
	981, 2462, 977, 2462, 2462, 976, 2337, 899, 856, 1830,
	2467, 2496, 2497, 887, 2885, 1787, 2883, 1164, 1164, 2353,
	2835, 2499, 2375, 2354, 2355, 2356, 2357, 2126, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 1970, 2428, 1642, 2374,
	2377, 2430, 2431, 1869, 1869, 1869, 774, 2369, 433, 898,
	2502, 2423, 2245, 2384, 2637, 2400, 2636, 2246, 2402, 2403,
	2501, 2345, 1457, 1457, 2242, 2134, 2241, 2457, 2458, 2471,
	2472, 2434, 2142, 2420, 2424, 2379, 2247, 2984, 1934, 1935,
	1162, 1162, 2413, 2414, 934, 935, 936, 933, 2243, 2435,
	96, 2635, 52, 2244, 51, 2016, 774, 2465, 111, 2463,
	2464, 1368, 2163, 2010, 2164, 1365, 2065, 2370, 2371, 1367,
	1364, 1366, 1370, 1371, 2101, 2521, 1540, 1369, 430, 2491,
	538, 547, 2378, 1208, 2005, 2433, 539, 2035, 546, 540,
	544, 543, 541, 542, 2503, 1767, 1768, 2815, 2477, 1035,
	1237, 2160, 2482, 2481, 435, 2486, 436, 1821, 437, 2489,
	2490, 1605, 433, 2344, 2500, 948, 947, 957, 958, 950,
	951, 952, 953, 954, 955, 956, 949, 2504, 2484, 434,
	893, 2110, 2507, 2508, 2509, 2093, 934, 935, 936, 933,
	1837, 548, 1557, 1557, 1557, 1557, 2281, 1471, 2283, 2516,
	1450, 1388, 1387, 2892, 1557, 1047, 1048, 1919, 934, 935,
	936, 933, 1544, 2270, 2271, 1127, 1435, 1045, 1046, 2092,
	1126, 1435, 925, 545, 2506, 2533, 1968, 2091, 1662, 2432,
	1081, 2536, 2534, 1930, 1933, 1934, 1935, 1931, 2547, 1932,
	1936, 2539, 934, 935, 936, 933, 1037, 2569, 2953, 111,
	934, 935, 936, 933, 111, 1043, 1044, 2873, 2327, 2858,
	2535, 1942, 1558, 2583, 1375, 1376, 1377, 1378, 1379, 1380,
	1373, 1374, 1041, 1042, 111, 2090, 656, 657, 658, 659,
	2347, 111, 2856, 2823, 2549, 2805, 1164, 2804, 2802, 655,
	2089, 2794, 2552, 2723, 2722, 2647, 2088, 433, 934, 935,
	936, 933, 2551, 2548, 2530, 2529, 2459, 2514, 1040, 2274,
	655, 2585, 2564, 934, 935, 936, 933, 2513, 2584, 934,
	935, 936, 933, 1475, 2587, 2887, 2886, 2588, 2087, 1457,
	2310, 1832, 1718, 869, 884, 2886, 2887, 2582, 2607, 1175,
	2581, 2086, 656, 657, 658, 659, 2531, 2269, 2457, 2594,
	2589, 934, 935, 936, 933, 655, 2639, 161, 3, 174,
	1096, 60, 2591, 2628, 934, 935, 936, 933, 2, 1141,
	2401, 1951, 869, 1590, 1168, 2617, 111, 2083, 1, 1443,
	687, 660, 2254, 2974, 2466, 2255, 2622, 2505, 2624, 2257,
	2664, 1680, 2629, 2626, 1917, 1822, 2627, 2398, 2630, 2082,
	934, 935, 936, 933, 2081, 1072, 869, 1164, 1164, 2236,
	692, 1557, 869, 2683, 1394, 1262, 2683, 2566, 2567, 2568,
	788, 2641, 934, 935, 936, 933, 111, 934, 935, 936,
	933, 878, 2651, 948, 947, 957, 958, 950, 951, 952,
	953, 954, 955, 956, 949, 2665, 1259, 877, 2236, 875,
	1345, 552, 869, 869, 1645, 2679, 869, 869, 2218, 2678,
	2687, 1596, 2686, 2719, 2891, 2684, 2924, 2850, 2894, 2585,
	1162, 2594, 1275, 1473, 536, 2720, 2694, 2695, 2077, 2796,
	2733, 2854, 2735, 2724, 2725, 2701, 2702, 2653, 1869, 2710,
	2711, 1685, 2698, 930, 2717, 2296, 2709, 2657, 2068, 713,
	588, 934, 935, 936, 933, 2046, 689, 2754, 684, 563,
	674, 993, 1245, 2718, 1238, 2351, 2747, 686, 685, 790,
	562, 934, 935, 936, 933, 2766, 2563, 2119, 934, 935,
	936, 933, 2769, 681, 672, 787, 714, 1629, 678, 2731,
	1209, 869, 2752, 2742, 2746, 1343, 1230, 1213, 2688, 2574,
	2415, 2139, 2542, 869, 2994, 2761, 2983, 2965, 2951, 2544,
	2878, 2979, 2909, 2768, 2767, 2538, 2776, 2940, 934, 935,
	936, 933, 2660, 2779, 2783, 2658, 2659, 2933, 2874, 683,
	473, 1569, 420, 682, 755, 2713, 2788, 1641, 474, 671,
	1846, 2866, 2699, 677, 679, 1829, 680, 2132, 2131, 2810,
	1314, 869, 939, 1331, 2366, 2367, 2801, 2799, 2824, 974,
	675, 947, 957, 958, 950, 951, 952, 953, 954, 955,
	956, 949, 2819, 512, 1707, 2116, 2450, 2266, 59, 58,
	2818, 673, 2441, 2845, 2848, 57, 56, 2825, 1611, 182,
	554, 181, 2830, 2847, 2896, 690, 534, 533, 1925, 532,
	531, 2849, 2840, 2841, 2842, 2843, 530, 2451, 1929, 2857,
	1927, 2859, 2860, 1926, 2855, 2853, 1553, 1552, 1609, 676,
	2444, 2468, 1930, 1933, 1934, 1935, 1931, 2439, 1932, 1936,
	2182, 2872, 2454, 2455, 1888, 1881, 1509, 1557, 2440, 2832,
	2780, 2781, 2898, 1435, 2884, 2881, 2882, 2604, 2203, 2600,
	2610, 2596, 1435, 2475, 2897, 2631, 2888, 2682, 2633, 2436,
	2437, 2443, 1836, 813, 869, 2902, 809, 2810, 811, 812,
	2903, 810, 2638, 2054, 2050, 2445, 1864, 2408, 1778, 1777,
	1775, 2923, 1774, 2912, 2914, 1055, 2753, 2550, 1785, 1783,
	2498, 688, 2922, 2926, 2494, 1653, 1440, 2931, 2100, 869,
	1554, 1550, 1831, 87, 86, 94, 138, 2932, 957, 958,
	950, 951, 952, 953, 954, 955, 956, 949, 46, 2898,
	2949, 166, 165, 168, 167, 164, 1984, 1985, 869, 163,
	869, 2897, 2948, 1197, 111, 162, 2955, 2685, 2957, 649,
	2907, 37, 33, 12, 11, 34, 21, 2926, 2961, 869,
	22, 20, 1266, 2968, 19, 2975, 25, 2972, 2978, 31,
	30, 104, 103, 29, 102, 101, 2453, 100, 1874, 99,
	98, 28, 18, 2982, 41, 1298, 2989, 40, 39, 9,
	2993, 2992, 2936, 93, 2938, 91, 27, 3001, 92, 89,
	3004, 90, 88, 2447, 2989, 3007, 3006, 71, 3005, 2993,
	70, 69, 84, 83, 1298, 82, 1298, 81, 80, 355,
	570, 79, 77, 2960, 78, 2446, 2448, 712, 68, 67,
	318, 66, 65, 64, 75, 1298, 85, 76, 74, 73,
	72, 2904, 63, 526, 62, 61, 2762, 263, 123, 124,
	288, 122, 121, 120, 119, 561, 118, 117, 347, 302,
	42, 43, 44, 45, 620, 628, 2778, 134, 133, 135,
	137, 139, 136, 131, 129, 132, 519, 130, 128, 551,
	597, 596, 538, 547, 54, 17, 244, 180, 539, 24,
	546, 540, 544, 543, 541, 542, 4, 612, 0, 0,
	2456, 0, 0, 0, 510, 523, 0, 527, 0, 0,
	0, 0, 2442, 0, 0, 0, 0, 0, 2452, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 521, 0, 0, 0, 0, 571, 0, 522,
	0, 0, 566, 548, 549, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 545, 569, 573, 257, 634,
	567, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 635, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 948, 947, 957, 958, 950, 951, 952, 953, 954,
	955, 956, 949, 0, 564, 0, 0, 0, 378, 0,
	1736, 618, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 568, 0, 338, 320, 631, 511, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 2963, 0, 0, 400,
	0, 0, 0, 1396, 1395, 1397, 390, 270, 227, 228,
	426, 616, 316, 0, 0, 630, 611, 613, 614, 617,
	621, 622, 623, 624, 625, 627, 629, 633, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 2956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 572, 306, 307,
	308, 309, 619, 0, 249, 402, 331, 0, 948, 947,
	957, 958, 950, 951, 952, 953, 954, 955, 956, 949,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 2954, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 641, 615,
	640, 642, 643, 639, 644, 645, 626, 529, 0, 576,
	637, 636, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 948, 947, 957, 958, 950, 951,
	952, 953, 954, 955, 956, 949, 229, 0, 289, 0,
	330, 268, 604, 581, 582, 583, 528, 584, 579, 580,
	605, 574, 601, 602, 553, 577, 585, 600, 586, 603,
	606, 607, 646, 647, 592, 648, 589, 608, 599, 598,
	587, 575, 609, 610, 560, 555, 590, 591, 578, 593,
	594, 595, 556, 557, 558, 559, 355, 570, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 0, 263, 1436, 0, 288, 0, 0,
	0, 0, 561, 0, 0, 347, 302, 0, 0, 0,
	0, 620, 628, 0, 0, 0, 0, 0, 0, 0,
	1581, 0, 0, 519, 0, 0, 551, 597, 596, 538,
	547, 0, 0, 244, 180, 539, 0, 546, 540, 544,
	543, 541, 542, 960, 612, 964, 0, 0, 0, 0,
	0, 510, 523, 0, 527, 0, 0, 0, 0, 0,
	0, 961, 963, 959, 0, 962, 948, 947, 957, 958,
	950, 951, 952, 953, 954, 955, 956, 949, 520, 521,
	0, 0, 0, 0, 571, 0, 522, 0, 0, 1582,
	548, 549, 0, 0, 0, 0, 235, 352, 368, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 2349, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 545, 569, 573, 257, 634, 567, 376, 239,
	0, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 635, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 948, 947,
	957, 958, 950, 951, 952, 953, 954, 955, 956, 949,
	0, 564, 0, 0, 0, 378, 0, 0, 618, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 568,
	0, 338, 320, 631, 511, 0, 336, 290, 363, 328,
	369, 353, 377, 332, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 391, 392, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 616, 316,
	0, 2043, 630, 611, 613, 614, 617, 621, 622, 623,
	624, 625, 627, 629, 633, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 948, 947, 957, 958, 950,
	951, 952, 953, 954, 955, 956, 949, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	1705, 0, 0, 0, 632, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 572, 306, 307, 308, 309, 619,
	0, 249, 402, 331, 948, 947, 957, 958, 950, 951,
	952, 953, 954, 955, 956, 949, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 313,
	280, 281, 345, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 295, 0, 0, 641, 615, 640, 642, 643,
	639, 644, 645, 626, 529, 0, 576, 637, 636, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 604,
	581, 582, 583, 528, 584, 579, 580, 605, 574, 601,
	602, 553, 577, 585, 600, 586, 603, 606, 607, 646,
	647, 592, 648, 589, 608, 599, 598, 587, 575, 609,
	610, 560, 555, 590, 591, 578, 593, 594, 595, 556,
	557, 558, 559, 157, 355, 570, 386, 387, 388, 410,
	372, 0, 423, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	968, 0, 0, 347, 302, 0, 0, 0, 0, 620,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 0, 0, 551, 597, 596, 538, 547, 0,
	0, 244, 180, 539, 0, 546, 540, 544, 543, 541,
	542, 0, 612, 0, 0, 0, 0, 0, 0, 510,
	523, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 521, 0, 0,
	0, 0, 571, 0, 522, 0, 0, 566, 548, 549,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	545, 569, 573, 257, 634, 567, 376, 239, 0, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 635, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 378, 0, 0, 618, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 568, 0, 338,
	320, 631, 511, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 255,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 616, 316, 0, 0,
	630, 611, 613, 614, 617, 621, 622, 623, 624, 625,
	627, 629, 633, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 572, 306, 307, 308, 309, 619, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 0,
	407, 0, 408, 0, 0, 0, 0, 313, 280, 281,
	345, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	295, 0, 0, 641, 615, 640, 642, 643, 639, 644,
	645, 626, 529, 0, 576, 637, 636, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 289, 127, 330, 268, 604, 581, 582,
	583, 528, 584, 579, 580, 605, 574, 601, 602, 553,
	577, 585, 600, 586, 603, 606, 607, 646, 647, 592,
	648, 589, 608, 599, 598, 587, 575, 609, 610, 560,
	555, 590, 591, 578, 593, 594, 595, 556, 557, 558,
	559, 355, 570, 0, 386, 387, 388, 410, 372, 0,
	423, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 263,
	2962, 0, 288, 0, 0, 0, 0, 561, 0, 0,
	347, 302, 0, 0, 0, 0, 620, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	0, 551, 597, 596, 538, 547, 0, 0, 244, 180,
	539, 0, 546, 540, 544, 543, 541, 542, 0, 612,
	0, 0, 0, 0, 0, 0, 510, 523, 0, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 521, 0, 0, 0, 0, 571,
	0, 522, 0, 0, 566, 548, 549, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 545, 569, 573,
	257, 634, 567, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 635, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	378, 0, 0, 618, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 568, 0, 338, 320, 631, 511,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 616, 316, 0, 0, 630, 611, 613,
	614, 617, 621, 622, 623, 624, 625, 627, 629, 633,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 632,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 572,
	306, 307, 308, 309, 619, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	641, 615, 640, 642, 643, 639, 644, 645, 626, 529,
	0, 576, 637, 636, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 0, 330, 268, 604, 581, 582, 583, 528, 584,
	579, 580, 605, 574, 601, 602, 553, 577, 585, 600,
	586, 603, 606, 607, 646, 647, 592, 648, 589, 608,
	599, 598, 587, 575, 609, 610, 560, 555, 590, 591,
	578, 593, 594, 595, 556, 557, 558, 559, 355, 570,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 263, 1436, 0, 288,
	0, 0, 0, 0, 561, 0, 0, 347, 302, 0,
	0, 0, 0, 620, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 551, 597,
	596, 538, 547, 0, 0, 244, 180, 539, 0, 546,
	540, 544, 543, 541, 542, 0, 612, 0, 0, 0,
	0, 0, 0, 510, 523, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 0, 0, 0, 0, 571, 0, 522, 0,
	0, 566, 548, 549, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 545, 569, 573, 257, 634, 567,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 635, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 378, 0, 0,
	618, 0, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 568, 0, 338, 320, 631, 511, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	616, 316, 0, 0, 630, 611, 613, 614, 617, 621,
	622, 623, 624, 625, 627, 629, 633, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 572, 306, 307, 308,
	309, 619, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 641, 615, 640,
	642, 643, 639, 644, 645, 626, 529, 0, 576, 637,
	636, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 0, 330,
	268, 604, 581, 582, 583, 528, 584, 579, 580, 605,
	574, 601, 602, 553, 577, 585, 600, 586, 603, 606,
	607, 646, 647, 592, 648, 589, 608, 599, 598, 587,
	575, 609, 610, 560, 555, 590, 591, 578, 593, 594,
	595, 556, 557, 558, 559, 355, 570, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 263, 0, 0, 288, 0, 0, 0,
	0, 561, 0, 0, 347, 302, 0, 0, 0, 0,
	620, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 0, 0, 551, 597, 596, 538, 547,
	0, 0, 244, 180, 539, 0, 546, 540, 544, 543,
	541, 542, 0, 612, 0, 0, 0, 0, 0, 0,
	510, 523, 0, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 521, 1192,
	0, 0, 0, 571, 0, 522, 0, 0, 566, 548,
	549, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 545, 569, 573, 257, 634, 567, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 635, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 378, 0, 0, 618, 0, 0,
	0, 351, 0, 0, 287, 0, 0, 0, 568, 0,
	338, 320, 631, 511, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 0, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 616, 316, 0,
	0, 630, 611, 613, 614, 617, 621, 622, 623, 624,
	625, 627, 629, 633, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 572, 306, 307, 308, 309, 619, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 641, 615, 640, 642, 643, 639,
	644, 645, 626, 529, 0, 576, 637, 636, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 604, 581,
	582, 583, 528, 584, 579, 580, 605, 574, 601, 602,
	553, 577, 585, 600, 586, 603, 606, 607, 646, 647,
	592, 648, 589, 608, 599, 598, 587, 575, 609, 610,
	560, 555, 590, 591, 578, 593, 594, 595, 556, 557,
	558, 559, 0, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 355, 570, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 561, 0,
	0, 347, 302, 0, 0, 0, 0, 620, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 551, 597, 596, 538, 547, 0, 0, 244,
	180, 539, 0, 546, 540, 544, 543, 541, 542, 0,
	612, 0, 0, 0, 0, 0, 0, 510, 523, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 521, 0, 0, 0, 0,
	571, 0, 522, 0, 0, 566, 548, 549, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 545, 569,
	573, 257, 634, 567, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 635,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	0, 378, 0, 0, 618, 0, 0, 0, 351, 0,
	0, 287, 0, 0, 0, 568, 0, 338, 320, 631,
	511, 0, 336, 290, 363, 328, 369, 353, 377, 332,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 0, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 616, 316, 0, 0, 630, 611,
	613, 614, 617, 621, 622, 623, 624, 625, 627, 629,
	633, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	572, 306, 307, 308, 309, 619, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 641, 615, 640, 642, 643, 639, 644, 645, 626,
	529, 0, 576, 637, 636, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 604, 581, 582, 583, 528,
	584, 579, 580, 605, 574, 601, 602, 553, 577, 585,
	600, 586, 603, 606, 607, 646, 647, 592, 648, 589,
	608, 599, 598, 587, 575, 609, 610, 560, 555, 590,
	591, 578, 593, 594, 595, 556, 557, 558, 559, 355,
	570, 0, 386, 387, 388, 410, 372, 0, 423, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 561, 0, 0, 347, 302,
	0, 0, 0, 0, 620, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 0, 0, 551,
	597, 596, 538, 547, 0, 0, 244, 180, 539, 0,
	546, 540, 544, 543, 541, 542, 0, 612, 0, 0,
	0, 0, 0, 0, 510, 523, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 521, 0, 0, 0, 0, 571, 0, 522,
	0, 0, 566, 548, 549, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 545, 569, 573, 257, 634,
	567, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 635, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 378, 0,
	0, 618, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 568, 0, 338, 320, 631, 511, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 616, 316, 0, 0, 630, 611, 613, 614, 617,
	621, 622, 623, 624, 625, 627, 629, 633, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 572, 306, 307,
	308, 309, 619, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 641, 615,
	640, 642, 643, 639, 644, 645, 626, 529, 0, 576,
	637, 636, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 0,
	330, 268, 604, 581, 582, 583, 528, 584, 579, 580,
	605, 574, 601, 602, 553, 577, 585, 600, 586, 603,
	606, 607, 646, 647, 592, 648, 589, 608, 599, 598,
	587, 575, 609, 610, 560, 555, 590, 591, 578, 593,
	594, 595, 556, 557, 558, 559, 355, 570, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	526, 0, 0, 0, 263, 0, 0, 288, 0, 0,
	0, 0, 561, 0, 0, 347, 302, 0, 0, 0,
	0, 620, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 0, 551, 597, 596, 538,
	547, 0, 0, 244, 180, 539, 0, 546, 540, 544,
	543, 541, 542, 0, 612, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 521,
	0, 0, 0, 0, 571, 0, 522, 0, 0, 566,
	548, 549, 0, 0, 0, 0, 235, 352, 368, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 0, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 545, 569, 573, 257, 634, 567, 376, 239,
	0, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 635, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 378, 0, 0, 618, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 568,
	0, 338, 320, 631, 0, 0, 336, 290, 363, 328,
	369, 353, 377, 332, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 1316, 1317, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 616, 316,
	0, 0, 630, 611, 613, 614, 617, 621, 622, 623,
	624, 625, 627, 629, 633, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 572, 306, 307, 308, 309, 619,
	0, 249, 402, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 313,
	280, 281, 345, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 295, 0, 0, 641, 615, 640, 642, 643,
	639, 644, 645, 626, 529, 0, 576, 637, 636, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 604,
	581, 582, 583, 528, 584, 579, 580, 605, 574, 601,
	602, 553, 577, 585, 600, 586, 603, 606, 607, 646,
	647, 592, 648, 589, 608, 599, 598, 587, 575, 609,
	610, 560, 555, 590, 591, 578, 593, 594, 595, 556,
	557, 558, 559, 355, 570, 0, 386, 387, 388, 410,
	372, 0, 423, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 561,
	0, 0, 347, 302, 0, 0, 0, 0, 620, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 597, 596, 538, 547, 0, 0,
	244, 180, 539, 0, 546, 540, 544, 543, 541, 542,
	0, 612, 0, 0, 0, 0, 0, 0, 510, 523,
	0, 527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 0, 0, 0,
	0, 571, 0, 522, 0, 0, 566, 548, 549, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 545,
	569, 573, 257, 634, 567, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	635, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 0, 378, 0, 0, 618, 0, 0, 0, 351,
	0, 0, 287, 0, 0, 0, 568, 0, 338, 320,
	631, 511, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 616, 316, 0, 0, 630,
	611, 613, 614, 617, 621, 622, 623, 624, 625, 627,
	629, 633, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 572, 306, 307, 308, 309, 619, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 641, 615, 640, 642, 643, 639, 644, 645,
	626, 529, 0, 576, 637, 636, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 604, 581, 582, 583,
	528, 584, 579, 580, 605, 574, 601, 602, 553, 577,
	585, 600, 586, 603, 606, 607, 646, 647, 592, 648,
	589, 608, 599, 598, 587, 575, 609, 610, 560, 555,
	590, 591, 578, 593, 594, 595, 556, 557, 558, 559,
	355, 570, 0, 386, 387, 388, 410, 372, 0, 423,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 263, 0,
	0, 288, 0, 0, 0, 0, 561, 0, 0, 347,
	302, 0, 0, 0, 0, 620, 628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 0, 0,
	551, 597, 596, 538, 547, 0, 0, 244, 180, 539,
	0, 546, 540, 544, 543, 541, 542, 0, 612, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 521, 0, 0, 0, 0, 571, 0,
	522, 0, 0, 566, 548, 549, 0, 0, 0, 0,
	235, 352, 368, 245, 343, 381, 250, 350, 240, 317,
	340, 0, 0, 237, 366, 349, 299, 282, 283, 236,
	0, 335, 261, 274, 258, 315, 545, 569, 573, 257,
	634, 567, 376, 239, 0, 375, 314, 362, 367, 300,
	294, 238, 364, 298, 293, 286, 265, 635, 278, 326,
	292, 327, 279, 304, 303, 305, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 0, 0, 0, 378,
	0, 0, 618, 0, 0, 0, 351, 0, 0, 287,
	0, 0, 0, 568, 0, 338, 320, 631, 0, 0,
	336, 290, 363, 328, 369, 353, 377, 332, 329, 230,
	354, 260, 301, 241, 243, 255, 262, 264, 266, 267,
	310, 311, 323, 342, 356, 357, 358, 259, 251, 337,
	252, 276, 253, 231, 344, 254, 233, 324, 361, 0,
	272, 333, 297, 234, 296, 325, 360, 359, 242, 385,
	391, 392, 397, 0, 398, 0, 0, 0, 406, 411,
	412, 413, 415, 416, 417, 418, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 390, 270, 227,
	228, 426, 616, 316, 0, 0, 630, 611, 613, 614,
	617, 621, 622, 623, 624, 625, 627, 629, 633, 425,
	0, 0, 0, 0, 0, 424, 322, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 371, 383, 401, 404, 0, 0, 0, 232,
	403, 0, 0, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 572, 306,
	307, 308, 309, 619, 0, 249, 402, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 269, 275, 414, 277,
	248, 321, 271, 380, 284, 0, 407, 0, 408, 0,
	0, 0, 0, 313, 280, 281, 345, 285, 291, 334,
	379, 319, 339, 246, 370, 346, 295, 0, 0, 641,
	615, 640, 642, 643, 639, 644, 645, 626, 529, 0,
	576, 637, 636, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 289,
	0, 330, 268, 604, 581, 582, 583, 528, 584, 579,
	580, 605, 574, 601, 602, 553, 577, 585, 600, 586,
	603, 606, 607, 646, 647, 592, 648, 589, 608, 599,
	598, 587, 575, 609, 610, 560, 555, 590, 591, 578,
	593, 594, 595, 556, 557, 558, 559, 0, 0, 0,
	386, 387, 388, 410, 372, 0, 423, 157, 355, 49,
	149, 126, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 142, 0, 263, 0, 151, 288,
	0, 0, 0, 0, 109, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 154, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 0, 365, 393, 257, 384, 0,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 409, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 125, 148, 155, 0,
	95, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	172, 0, 0, 0, 351, 0, 0, 287, 147, 141,
	140, 394, 0, 338, 320, 55, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 143, 144, 145, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 373,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 175, 0, 0, 419, 183, 0, 0,
	0, 146, 0, 184, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 127, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 0, 0, 0, 386, 387,
	388, 410, 372, 355, 185, 38, 173, 176, 178, 177,
	0, 47, 5, 0, 318, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 347, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 179, 0, 0, 538, 547, 0, 0,
	244, 180, 539, 0, 546, 540, 544, 543, 541, 542,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 545,
	365, 393, 257, 384, 0, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	409, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 351,
	0, 0, 287, 0, 0, 0, 394, 0, 338, 320,
	0, 0, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 256, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 389, 0, 0,
	0, 419, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 399, 306, 307, 308, 309, 273, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	0, 0, 0, 386, 387, 388, 410, 372, 0, 423,
	157, 355, 49, 149, 126, 0, 0, 0, 0, 0,
	0, 0, 318, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 444, 446, 249, 402, 331, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 127, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 355, 0,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 817, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 0, 1818,
	1815, 1816, 1817, 315, 0, 1802, 1803, 1804, 1805, 815,
	1788, 1808, 0, 1789, 314, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1806, 326, 292, 327,
	279, 304, 303, 305, 840, 842, 844, 846, 849, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 1801, 0, 338, 320, 0, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 0, 0, 0, 419, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 839, 289, 0, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 355, 0, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 347, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 1876, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 0, 365, 393, 257, 384, 0, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 409, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 378, 0, 0, 0, 1875, 1866,
	1874, 351, 1872, 1877, 287, 0, 0, 0, 394, 0,
	338, 320, 0, 0, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 1878, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 256, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 389,
	0, 0, 0, 419, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 399, 306, 307, 308, 309, 273, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 355, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 347, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1876, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 0, 365,
	393, 257, 384, 0, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 409,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 378, 0, 0, 0, 1875, 0, 1874, 351, 1872,
	1877, 287, 0, 0, 0, 394, 0, 338, 320, 0,
	0, 0, 336, 290, 363, 328, 369, 353, 377, 332,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 1878, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 256, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 389, 0, 0, 0,
	419, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	399, 306, 307, 308, 309, 273, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 355,
	0, 0, 386, 387, 388, 410, 372, 0, 423, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1613, 0, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 347, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1614, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	934, 935, 936, 933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 0, 365, 393, 257, 384,
	0, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 409, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 394, 0, 338, 320, 0, 0, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 256, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 389, 0, 0, 0, 419, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 399, 306, 307,
	308, 309, 273, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 0,
	330, 268, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 355, 0, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 754, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 347, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 761, 762, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 352, 749, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 0, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 0, 365, 393, 257, 384, 741, 376, 239,
	740, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 409, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 394,
	0, 338, 320, 0, 0, 0, 336, 290, 363, 328,
	369, 353, 377, 752, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 391, 392, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 256, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	389, 0, 0, 0, 419, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	0, 0, 0, 753, 374, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 756, 306, 307, 308, 309, 273,
	0, 249, 402, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 763,
	750, 759, 751, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 355, 0, 0, 386, 387, 388, 410,
	372, 0, 423, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 347, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 1883, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 0,
	365, 393, 257, 384, 0, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	409, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 378, 0, 0, 0, 1887, 1885, 0, 351,
	0, 1886, 287, 0, 0, 0, 394, 0, 338, 320,
	0, 0, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 256, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 389, 0, 0,
	0, 419, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 399, 306, 307, 308, 309, 273, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	157, 355, 0, 386, 387, 388, 410, 372, 0, 423,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 109, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 1657,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 273, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 127, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 157, 355,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 109, 0, 0, 347, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 1648, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 0, 365, 393, 257, 384,
	0, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 409, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 394, 0, 338, 320, 0, 0, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 256, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 389, 0, 0, 0, 419, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 399, 306, 307,
	308, 309, 273, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 127,
	330, 268, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 157, 355, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 288, 0,
	0, 0, 0, 109, 0, 0, 347, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 352, 368,
	245, 343, 381, 250, 350, 240, 317, 340, 0, 0,
	237, 366, 349, 299, 282, 283, 236, 0, 335, 261,
	274, 258, 315, 0, 365, 393, 257, 384, 0, 376,
	239, 0, 375, 314, 362, 367, 300, 294, 238, 364,
	298, 293, 286, 265, 409, 278, 326, 292, 327, 279,
	304, 303, 305, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 351, 0, 0, 287, 0, 0, 0,
	394, 0, 338, 320, 0, 0, 0, 336, 290, 363,
	328, 369, 353, 377, 332, 329, 230, 354, 260, 301,
	241, 243, 255, 262, 264, 266, 267, 310, 311, 323,
	342, 356, 357, 358, 259, 251, 337, 252, 276, 253,
	231, 344, 254, 233, 324, 361, 0, 272, 333, 297,
	234, 296, 325, 360, 359, 242, 385, 391, 392, 397,
	0, 398, 0, 0, 0, 406, 411, 412, 413, 415,
	416, 417, 418, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 390, 270, 227, 228, 426, 256,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 389, 0, 0, 0, 419, 425, 0, 0, 0,
	0, 0, 424, 322, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 371,
	383, 401, 404, 0, 0, 0, 232, 403, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 399, 306, 307, 308, 309,
	273, 0, 249, 402, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 269, 275, 414, 277, 248, 321, 271,
	380, 284, 0, 407, 0, 408, 0, 0, 0, 0,
	313, 280, 281, 345, 285, 291, 334, 379, 319, 339,
	246, 370, 346, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 289, 127, 330, 268,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 355, 0, 0, 386, 387, 388,
	410, 372, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 347, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 761, 762, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	0, 365, 393, 257, 384, 741, 376, 239, 740, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 409, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 394, 0, 338,
	320, 0, 0, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 255,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 256, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 389, 0,
	0, 0, 419, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 399, 306, 307, 308, 309, 273, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 0,
	407, 0, 408, 0, 0, 0, 0, 763, 1574, 759,
	1575, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 289, 0, 330, 268, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 355, 0, 0, 386, 387, 388, 410, 372, 0,
	423, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 2229, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 2232, 0, 0, 2231, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 273, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 0, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 355, 0,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1167, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 1165, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 0, 365, 393, 257, 384, 0,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 409, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 394, 0, 338, 320, 0, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 0, 0, 0, 419, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 0, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 355, 0, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 1161, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 347, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1165, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 0, 365, 393, 257, 384, 0, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 409, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 351, 0, 0, 287, 0, 0, 0, 394, 0,
	338, 320, 0, 0, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 0, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 256, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 389,
	0, 0, 0, 419, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 399, 306, 307, 308, 309, 273, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 355, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 347, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2893, 0, 179, 597, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 0, 365,
	393, 257, 384, 0, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 409,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 287, 0, 0, 0, 394, 0, 338, 320, 0,
	0, 0, 336, 290, 363, 328, 369, 353, 377, 332,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 0, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 256, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 389, 0, 0, 0,
	419, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	399, 306, 307, 308, 309, 273, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 355,
	0, 0, 386, 387, 388, 410, 372, 0, 423, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 347, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 1165, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2595, 0, 0, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 0, 365, 393, 257, 384,
	0, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 409, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 394, 0, 338, 320, 0, 0, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 256, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 389, 0, 0, 0, 419, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 399, 306, 307,
	308, 309, 273, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 0,
	330, 268, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 355, 0, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 347, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 1165,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 235, 352, 368, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 0, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 0, 365, 393, 257, 384, 0, 376, 239,
	0, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 409, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 394,
	0, 338, 320, 0, 0, 0, 336, 290, 363, 328,
	369, 353, 377, 332, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 391, 392, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 256, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	389, 0, 0, 0, 419, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 399, 306, 307, 308, 309, 273,
	0, 249, 402, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 313,
	280, 281, 345, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 355, 0, 0, 386, 387, 388, 410,
	372, 0, 423, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 347, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 1943, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 0,
	365, 393, 257, 384, 0, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	409, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 351,
	0, 0, 287, 0, 0, 0, 394, 0, 338, 320,
	0, 0, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 256, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 389, 0, 0,
	0, 419, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 399, 306, 307, 308, 309, 273, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	355, 0, 0, 386, 387, 388, 410, 372, 0, 423,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 1962,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 347,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 1165, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 352, 368, 245, 343, 381, 250, 350, 240, 317,
	340, 0, 0, 237, 366, 349, 299, 282, 283, 236,
	0, 335, 261, 274, 258, 315, 0, 365, 393, 257,
	384, 0, 376, 239, 0, 375, 314, 362, 367, 300,
	294, 238, 364, 298, 293, 286, 265, 409, 278, 326,
	292, 327, 279, 304, 303, 305, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 351, 0, 0, 287,
	0, 0, 0, 394, 0, 338, 320, 0, 0, 0,
	336, 290, 363, 328, 369, 353, 377, 332, 329, 230,
	354, 260, 301, 241, 243, 255, 262, 264, 266, 267,
	310, 311, 323, 342, 356, 357, 358, 259, 251, 337,
	252, 276, 253, 231, 344, 254, 233, 324, 361, 0,
	272, 333, 297, 234, 296, 325, 360, 359, 242, 385,
	391, 392, 397, 0, 398, 0, 0, 0, 406, 411,
	412, 413, 415, 416, 417, 418, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 390, 270, 227,
	228, 426, 256, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 389, 0, 0, 0, 419, 425,
	0, 0, 0, 0, 0, 424, 322, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 371, 383, 401, 404, 0, 0, 0, 232,
	403, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 399, 306,
	307, 308, 309, 273, 0, 249, 402, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 269, 275, 414, 277,
	248, 321, 271, 380, 284, 0, 407, 0, 408, 0,
	0, 0, 0, 313, 280, 281, 345, 285, 291, 334,
	379, 319, 339, 246, 370, 346, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 289,
	0, 330, 268, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 355, 0, 0,
	386, 387, 388, 410, 372, 0, 423, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 347, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2971, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 352, 368,
	245, 343, 381, 250, 350, 240, 317, 340, 0, 0,
	237, 366, 349, 299, 282, 283, 236, 0, 335, 261,
	274, 258, 315, 0, 365, 393, 257, 384, 0, 376,
	239, 0, 375, 314, 362, 367, 300, 294, 238, 364,
	298, 293, 286, 265, 409, 278, 326, 292, 327, 279,
	304, 303, 305, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 351, 0, 0, 287, 0, 0, 0,
	394, 0, 338, 320, 0, 0, 0, 336, 290, 363,
	328, 369, 353, 377, 332, 329, 230, 354, 260, 301,
	241, 243, 255, 262, 264, 266, 267, 310, 311, 323,
	342, 356, 357, 358, 259, 251, 337, 252, 276, 253,
	231, 344, 254, 233, 324, 361, 0, 272, 333, 297,
	234, 296, 325, 360, 359, 242, 385, 391, 392, 397,
	0, 398, 0, 0, 0, 406, 411, 412, 413, 415,
	416, 417, 418, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 390, 270, 227, 228, 426, 256,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 389, 0, 0, 0, 419, 425, 0, 0, 0,
	0, 0, 424, 322, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 371,
	383, 401, 404, 0, 0, 0, 232, 403, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 399, 306, 307, 308, 309,
	273, 0, 249, 402, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 269, 275, 414, 277, 248, 321, 271,
	380, 284, 0, 407, 0, 408, 0, 0, 0, 0,
	313, 280, 281, 345, 285, 291, 334, 379, 319, 339,
	246, 370, 346, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 289, 0, 330, 268,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 355, 0, 0, 386, 387, 388,
	410, 372, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 347, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 597, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	0, 365, 393, 257, 384, 0, 376, 239, 0, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 409, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 394, 0, 338,
	320, 0, 0, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 255,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 256, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 389, 0,
	0, 0, 419, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 399, 306, 307, 308, 309, 273, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 0,
	407, 0, 408, 0, 0, 0, 0, 313, 280, 281,
	345, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 289, 0, 330, 268, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 355, 0, 0, 386, 387, 388, 410, 372, 0,
	423, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2908, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 273, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 0, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 355, 0,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 0, 365, 393, 257, 384, 0,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 409, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 2846, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 394, 0, 338, 320, 0, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 0, 0, 0, 419, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 0, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 355, 0, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 347, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2677, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 0, 365, 393, 257, 384, 0, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 409, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 351, 0, 0, 287, 0, 0, 0, 394, 0,
	338, 320, 0, 0, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 0, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 256, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 389,
	0, 0, 0, 419, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 399, 306, 307, 308, 309, 273, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 355, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 347, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 0, 365,
	393, 257, 384, 0, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 409,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 2721, 0, 0, 351, 0,
	0, 287, 0, 0, 0, 394, 0, 338, 320, 0,
	0, 0, 336, 290, 363, 328, 369, 353, 377, 332,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 0, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 256, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 389, 0, 0, 0,
	419, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	399, 306, 307, 308, 309, 273, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 355,
	0, 0, 386, 387, 388, 410, 372, 0, 423, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 347, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 0, 365, 393, 257, 384,
	0, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 409, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 394, 0, 338, 320, 0, 0, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 256, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 389, 0, 0, 0, 419, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 399, 306, 307,
	308, 309, 273, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 0,
	330, 268, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 355, 0, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 347, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 352, 368, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 0, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 0, 365, 393, 257, 384, 0, 376, 239,
	0, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 409, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 394,
	0, 338, 320, 0, 0, 0, 336, 290, 363, 328,
	369, 353, 377, 332, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 391, 392, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 256, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	389, 0, 0, 0, 419, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 399, 306, 307, 308, 309, 273,
	0, 249, 402, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 313,
	280, 281, 345, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 355, 0, 0, 386, 387, 388, 410,
	372, 0, 423, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 347, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 0,
	365, 393, 257, 384, 0, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	409, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 351,
	0, 0, 287, 0, 0, 0, 394, 0, 338, 320,
	0, 0, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 256, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 389, 0, 0,
	0, 419, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 399, 306, 307, 308, 309, 273, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	355, 0, 0, 386, 387, 388, 410, 372, 0, 423,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 347,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 2383, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 352, 368, 245, 343, 381, 250, 350, 240, 317,
	340, 0, 0, 237, 366, 349, 299, 282, 283, 236,
	0, 335, 261, 274, 258, 315, 0, 365, 393, 257,
	384, 0, 376, 239, 0, 375, 314, 362, 367, 300,
	294, 238, 364, 298, 293, 286, 265, 409, 278, 326,
	292, 327, 279, 304, 303, 305, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 351, 0, 0, 287,
	0, 0, 0, 394, 0, 338, 320, 0, 0, 0,
	336, 290, 363, 328, 369, 353, 377, 332, 329, 230,
	354, 260, 301, 241, 243, 255, 262, 264, 266, 267,
	310, 311, 323, 342, 356, 357, 358, 259, 251, 337,
	252, 276, 253, 231, 344, 254, 233, 324, 361, 0,
	272, 333, 297, 234, 296, 325, 360, 359, 242, 385,
	391, 392, 397, 0, 398, 0, 0, 0, 406, 411,
	412, 413, 415, 416, 417, 418, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 390, 270, 227,
	228, 426, 256, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 389, 0, 0, 0, 419, 425,
	0, 0, 0, 0, 0, 424, 322, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 371, 383, 401, 404, 0, 0, 0, 232,
	403, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 399, 306,
	307, 308, 309, 273, 0, 249, 402, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 269, 275, 414, 277,
	248, 321, 271, 380, 284, 0, 407, 0, 408, 0,
	0, 0, 0, 313, 280, 281, 345, 285, 291, 334,
	379, 319, 339, 246, 370, 346, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 289,
	0, 330, 268, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 355, 0, 0,
	386, 387, 388, 410, 372, 0, 423, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 347, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 352, 368,
	245, 343, 381, 250, 350, 240, 317, 340, 0, 0,
	237, 366, 349, 299, 282, 283, 236, 0, 335, 261,
	274, 258, 315, 0, 365, 393, 257, 384, 0, 376,
	239, 0, 375, 314, 362, 367, 300, 294, 238, 364,
	298, 293, 286, 265, 409, 278, 326, 292, 327, 279,
	304, 303, 305, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 351, 0, 0, 287, 0, 0, 0,
	394, 0, 338, 320, 0, 0, 0, 336, 290, 363,
	328, 369, 353, 377, 332, 329, 230, 354, 260, 301,
	241, 243, 255, 262, 264, 266, 267, 310, 311, 323,
	342, 356, 357, 358, 259, 251, 337, 252, 276, 253,
	231, 344, 254, 233, 324, 361, 0, 272, 333, 297,
	234, 296, 325, 360, 359, 242, 385, 391, 392, 397,
	0, 398, 0, 0, 0, 406, 411, 412, 413, 415,
	416, 417, 418, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 390, 270, 227, 228, 426, 256,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 389, 0, 0, 0, 419, 425, 0, 0, 0,
	0, 0, 424, 322, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 371,
	383, 401, 404, 0, 0, 0, 232, 403, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 399, 306, 307, 308, 309,
	273, 0, 249, 402, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 269, 275, 414, 277, 248, 321, 271,
	380, 284, 0, 407, 0, 408, 0, 0, 0, 0,
	313, 280, 281, 345, 285, 291, 334, 379, 319, 339,
	246, 370, 346, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 289, 0, 330, 268,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 355, 0, 0, 386, 387, 388,
	410, 372, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 347, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 1165, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	0, 365, 393, 257, 384, 0, 376, 239, 0, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 409, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 394, 0, 338,
	320, 0, 0, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 255,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 256, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 389, 0,
	0, 0, 419, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 399, 306, 307, 308, 309, 273, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 0,
	407, 0, 408, 0, 0, 0, 0, 313, 280, 281,
	345, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 289, 0, 330, 268, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 355, 0, 0, 386, 387, 388, 410, 372, 0,
	423, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1943, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 332, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 273, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 0, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 355, 0,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 0, 365, 393, 257, 384, 0,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 409, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	0, 0, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 394, 0, 338, 320, 0, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 0, 0, 0, 419, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 0, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 355, 0, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 347, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 0, 365, 393, 257, 384, 0, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 409, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 351, 0, 0, 287, 0, 0, 0, 394, 0,
	338, 320, 0, 0, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 0, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 256, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 389,
	0, 0, 0, 419, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 399, 306, 307, 308, 309, 273, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 355, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 347, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 1977, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 0, 365,
	393, 257, 384, 0, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 409,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 287, 0, 0, 0, 394, 0, 338, 320, 0,
	0, 0, 336, 290, 363, 328, 369, 353, 377, 332,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 0, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 256, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 389, 0, 0, 0,
	419, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	399, 306, 307, 308, 309, 273, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 0,
	0, 0, 386, 387, 388, 410, 372, 355, 423, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 347, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 352, 368,
	245, 343, 381, 250, 350, 240, 317, 340, 0, 0,
	237, 366, 349, 299, 282, 283, 236, 0, 335, 261,
	274, 258, 315, 0, 365, 393, 257, 384, 0, 376,
	239, 0, 375, 314, 362, 367, 300, 294, 238, 364,
	298, 293, 286, 265, 409, 278, 326, 292, 327, 279,
	304, 303, 305, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 351, 0, 0, 287, 0, 0, 0,
	394, 0, 338, 320, 0, 0, 0, 336, 290, 363,
	328, 369, 353, 377, 332, 329, 230, 354, 260, 301,
	241, 243, 255, 262, 264, 266, 267, 310, 311, 323,
	342, 356, 357, 358, 259, 251, 337, 252, 276, 253,
	231, 344, 254, 233, 324, 361, 0, 272, 333, 297,
	234, 296, 325, 360, 359, 242, 385, 391, 392, 397,
	0, 398, 0, 0, 0, 406, 411, 412, 413, 415,
	416, 417, 418, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 390, 270, 227, 228, 426, 256,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 389, 0, 0, 0, 419, 425, 0, 0, 0,
	0, 0, 424, 322, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 371,
	383, 401, 404, 0, 0, 0, 232, 403, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 399, 306, 307, 308, 309,
	273, 0, 249, 402, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 269, 275, 414, 277, 248, 321, 271,
	380, 284, 0, 407, 0, 408, 0, 0, 0, 0,
	313, 280, 281, 345, 285, 291, 334, 379, 319, 339,
	246, 370, 346, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 289, 0, 330, 268,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 355, 0, 0, 386, 387, 388,
	410, 372, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 347, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	0, 365, 393, 257, 384, 0, 376, 239, 0, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 409, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 394, 0, 338,
	320, 0, 0, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 255,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 256, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 389, 0,
	0, 0, 419, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 399, 306, 307, 308, 309, 273, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 0,
	407, 0, 408, 0, 0, 0, 0, 313, 280, 281,
	345, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 289, 0, 330, 268, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 355, 0, 0, 386, 387, 388, 410, 372, 0,
	423, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	347, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 1165, 0, 0, 0, 244, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 352, 368, 245, 343, 381, 250, 350, 240,
	317, 340, 0, 0, 237, 366, 349, 299, 282, 283,
	236, 0, 335, 261, 274, 258, 315, 0, 365, 393,
	257, 384, 0, 376, 239, 0, 375, 314, 362, 367,
	300, 294, 238, 364, 298, 293, 286, 265, 409, 278,
	326, 292, 327, 279, 304, 303, 305, 0, 0, 0,
	0, 0, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	378, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	287, 0, 0, 0, 394, 0, 338, 320, 0, 0,
	0, 336, 290, 363, 328, 369, 353, 377, 1479, 329,
	230, 354, 260, 301, 241, 243, 255, 262, 264, 266,
	267, 310, 311, 323, 342, 356, 357, 358, 259, 251,
	337, 252, 276, 253, 231, 344, 254, 233, 324, 361,
	0, 272, 333, 297, 234, 296, 325, 360, 359, 242,
	385, 391, 392, 397, 0, 398, 0, 0, 0, 406,
	411, 412, 413, 415, 416, 417, 418, 0, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 0, 390, 270,
	227, 228, 426, 256, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 389, 0, 0, 0, 419,
	425, 0, 0, 0, 0, 0, 424, 322, 0, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 371, 383, 401, 404, 0, 0, 0,
	232, 403, 0, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 399,
	306, 307, 308, 309, 273, 0, 249, 402, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 269, 275, 414,
	277, 248, 321, 271, 380, 284, 0, 407, 0, 408,
	0, 0, 0, 0, 313, 280, 281, 345, 285, 291,
	334, 379, 319, 339, 246, 370, 346, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	289, 0, 330, 268, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 0, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 0, 0, 223, 224, 225, 226, 355, 0,
	0, 386, 387, 388, 410, 372, 0, 423, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 347, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 244, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 352,
	368, 245, 343, 381, 250, 350, 240, 317, 340, 0,
	0, 237, 366, 349, 299, 282, 283, 236, 0, 335,
	261, 274, 258, 315, 0, 365, 393, 257, 384, 0,
	376, 239, 0, 375, 314, 362, 367, 300, 294, 238,
	364, 298, 293, 286, 265, 409, 278, 326, 292, 327,
	279, 304, 303, 305, 0, 0, 0, 0, 0, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	1188, 0, 0, 0, 351, 0, 0, 287, 0, 0,
	0, 394, 0, 338, 320, 0, 0, 0, 336, 290,
	363, 328, 369, 353, 377, 332, 329, 230, 354, 260,
	301, 241, 243, 255, 262, 264, 266, 267, 310, 311,
	323, 342, 356, 357, 358, 259, 251, 337, 252, 276,
	253, 231, 344, 254, 233, 324, 361, 0, 272, 333,
	297, 234, 296, 325, 360, 359, 242, 385, 391, 392,
	397, 0, 398, 0, 0, 0, 406, 411, 412, 413,
	415, 416, 417, 418, 0, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 0, 390, 270, 227, 228, 426,
	256, 316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 389, 0, 0, 0, 419, 425, 0, 0,
	0, 0, 0, 424, 322, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	371, 383, 401, 404, 0, 0, 0, 232, 403, 0,
	0, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 399, 306, 307, 308,
	309, 273, 0, 249, 402, 331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 269, 275, 414, 277, 248, 321,
	271, 380, 284, 0, 407, 0, 408, 0, 0, 0,
	0, 313, 280, 281, 345, 285, 291, 334, 379, 319,
	339, 246, 370, 346, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 289, 0, 330,
	268, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 0, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 223, 224, 225, 226, 355, 0, 0, 386, 387,
	388, 410, 372, 0, 423, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 347, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 244, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 352, 368, 245, 343,
	381, 250, 350, 240, 317, 340, 0, 0, 237, 366,
	349, 299, 282, 283, 236, 0, 335, 261, 274, 258,
	315, 0, 365, 393, 257, 384, 0, 376, 239, 0,
	375, 314, 362, 367, 300, 294, 238, 364, 298, 293,
	286, 265, 409, 278, 326, 292, 327, 279, 304, 303,
	305, 0, 0, 0, 0, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 0, 0, 0, 0,
	0, 351, 0, 0, 287, 0, 0, 0, 394, 0,
	338, 320, 0, 0, 0, 336, 290, 363, 328, 369,
	353, 377, 332, 329, 230, 354, 260, 301, 241, 243,
	255, 262, 264, 266, 267, 310, 311, 323, 342, 356,
	357, 358, 259, 251, 337, 252, 276, 253, 231, 344,
	254, 233, 324, 361, 0, 272, 333, 297, 234, 296,
	325, 360, 359, 242, 385, 391, 392, 397, 0, 398,
	0, 0, 0, 406, 411, 412, 413, 415, 416, 417,
	418, 0, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 0, 390, 270, 227, 228, 426, 256, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 389,
	0, 0, 0, 419, 425, 0, 0, 0, 0, 0,
	424, 322, 0, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 371, 383, 401,
	404, 0, 0, 0, 232, 403, 0, 0, 0, 0,
	0, 0, 0, 374, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 399, 306, 307, 308, 309, 273, 0,
	249, 402, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 269, 275, 414, 277, 248, 321, 271, 380, 284,
	0, 407, 0, 408, 0, 0, 0, 0, 313, 280,
	281, 345, 285, 291, 334, 379, 319, 339, 246, 370,
	346, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 697, 0,
	0, 0, 229, 0, 289, 0, 330, 268, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	0, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 0, 0, 223, 224,
	225, 226, 355, 0, 0, 386, 387, 388, 410, 372,
	0, 423, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 347, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 244,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 352, 368, 245, 343, 381, 250, 350,
	240, 317, 340, 0, 0, 237, 366, 349, 299, 282,
	283, 236, 0, 335, 261, 274, 258, 315, 0, 365,
	393, 257, 384, 0, 376, 239, 0, 375, 314, 362,
	367, 300, 294, 238, 364, 298, 293, 286, 265, 409,
	278, 326, 292, 327, 279, 304, 303, 305, 0, 0,
	0, 0, 0, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 287, 0, 0, 0, 394, 0, 338, 320, 0,
	0, 0, 336, 290, 363, 328, 369, 353, 377, 464,
	329, 230, 354, 260, 301, 241, 243, 255, 262, 264,
	266, 267, 310, 311, 323, 342, 356, 357, 358, 259,
	251, 337, 252, 276, 253, 231, 344, 254, 233, 324,
	361, 0, 272, 333, 297, 234, 296, 325, 360, 359,
	242, 385, 391, 392, 397, 0, 398, 0, 0, 0,
	406, 411, 412, 413, 415, 416, 417, 418, 0, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 0, 390,
	270, 227, 228, 426, 256, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 389, 0, 0, 0,
	419, 425, 0, 0, 0, 0, 0, 424, 322, 0,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 371, 383, 401, 404, 0, 0,
	0, 232, 403, 0, 0, 0, 0, 0, 0, 465,
	374, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	399, 306, 307, 308, 309, 273, 0, 249, 402, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 269, 275,
	414, 277, 248, 321, 271, 380, 284, 0, 407, 0,
	408, 0, 0, 0, 0, 313, 280, 281, 345, 285,
	291, 334, 379, 319, 339, 246, 370, 346, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 289, 0, 330, 268, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 223, 224, 225, 226, 355,
	0, 0, 386, 387, 388, 410, 372, 0, 423, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 347, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 244, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	352, 368, 245, 343, 381, 250, 350, 240, 317, 340,
	0, 0, 237, 366, 349, 299, 282, 283, 236, 0,
	335, 261, 274, 258, 315, 0, 365, 393, 257, 384,
	0, 376, 239, 0, 375, 314, 362, 367, 300, 294,
	238, 364, 298, 293, 286, 265, 409, 278, 326, 292,
	327, 279, 304, 303, 305, 0, 0, 0, 0, 0,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 378, 0,
	0, 0, 0, 0, 0, 351, 0, 0, 287, 0,
	0, 0, 394, 0, 338, 320, 0, 0, 0, 336,
	290, 363, 328, 369, 353, 377, 332, 329, 230, 354,
	260, 301, 241, 243, 255, 262, 264, 266, 267, 310,
	311, 323, 342, 356, 357, 358, 259, 251, 337, 252,
	276, 253, 231, 344, 254, 233, 324, 361, 0, 272,
	333, 297, 234, 296, 325, 360, 359, 242, 385, 391,
	392, 397, 0, 398, 0, 0, 0, 406, 411, 412,
	413, 415, 416, 417, 418, 0, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 0, 390, 270, 227, 228,
	426, 256, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 389, 0, 0, 0, 419, 425, 0,
	0, 0, 0, 0, 424, 322, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 371, 383, 401, 404, 0, 0, 0, 232, 403,
	0, 0, 0, 0, 0, 0, 0, 374, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 399, 306, 307,
	308, 309, 273, 0, 249, 402, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 269, 275, 414, 277, 248,
	321, 271, 380, 284, 0, 407, 0, 408, 0, 0,
	0, 0, 313, 280, 281, 345, 285, 291, 334, 379,
	319, 339, 246, 370, 346, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 289, 0,
	330, 268, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 0, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 223, 224, 225, 226, 355, 0, 0, 386,
	387, 388, 410, 372, 0, 423, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 263, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 347, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 244, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 352, 368, 245,
	343, 381, 250, 350, 240, 317, 340, 0, 0, 237,
	366, 349, 299, 282, 283, 236, 0, 335, 261, 274,
	258, 315, 0, 365, 393, 257, 384, 0, 376, 239,
	0, 375, 314, 362, 367, 300, 294, 238, 364, 298,
	293, 286, 265, 409, 278, 326, 292, 327, 279, 304,
	303, 305, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 351, 0, 0, 287, 0, 0, 0, 394,
	0, 338, 320, 0, 0, 0, 336, 290, 363, 328,
	369, 353, 377, 332, 329, 230, 354, 260, 301, 241,
	243, 255, 262, 264, 266, 267, 310, 311, 323, 342,
	356, 357, 358, 259, 251, 337, 252, 276, 253, 231,
	344, 254, 233, 324, 361, 0, 272, 333, 297, 234,
	296, 325, 360, 359, 242, 385, 391, 392, 397, 0,
	398, 0, 0, 0, 406, 411, 412, 413, 415, 416,
	417, 418, 0, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 0, 390, 270, 227, 228, 426, 256, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	389, 0, 0, 0, 419, 425, 0, 0, 0, 0,
	0, 424, 322, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 371, 383,
	401, 404, 0, 0, 0, 232, 403, 0, 0, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 399, 306, 307, 308, 309, 273,
	0, 249, 402, 331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 269, 275, 414, 277, 248, 321, 271, 380,
	284, 0, 407, 0, 408, 0, 0, 0, 0, 313,
	280, 281, 345, 285, 291, 334, 379, 319, 339, 246,
	370, 346, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 289, 0, 330, 268, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 223,
	224, 225, 226, 355, 0, 0, 386, 387, 388, 410,
	372, 0, 423, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 347, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	244, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 352, 368, 245, 343, 381, 250,
	350, 240, 317, 340, 0, 0, 237, 366, 349, 299,
	282, 283, 236, 0, 335, 261, 274, 258, 315, 0,
	365, 393, 257, 384, 0, 376, 239, 0, 375, 314,
	362, 367, 300, 294, 238, 364, 298, 293, 286, 265,
	409, 278, 326, 292, 327, 279, 304, 303, 305, 0,
	0, 0, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 0, 0, 0, 0, 0, 0, 351,
	0, 0, 287, 0, 0, 0, 394, 0, 338, 320,
	0, 0, 0, 336, 290, 363, 328, 369, 353, 377,
	332, 329, 230, 354, 260, 301, 241, 243, 255, 262,
	264, 266, 267, 310, 311, 323, 342, 356, 357, 358,
	259, 251, 337, 252, 276, 253, 231, 344, 254, 233,
	324, 361, 0, 272, 333, 297, 234, 296, 325, 360,
	359, 242, 385, 391, 392, 397, 0, 398, 0, 0,
	0, 406, 411, 412, 413, 415, 416, 417, 418, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	390, 270, 227, 228, 426, 256, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 389, 0, 0,
	0, 419, 425, 0, 0, 0, 0, 0, 424, 322,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 371, 383, 401, 404, 0,
	0, 0, 232, 403, 0, 0, 0, 0, 0, 0,
	0, 374, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 399, 306, 307, 308, 309, 273, 0, 249, 402,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 269,
	275, 414, 277, 248, 321, 271, 380, 284, 0, 407,
	0, 408, 0, 0, 0, 0, 313, 280, 281, 345,
	285, 291, 334, 379, 319, 339, 246, 370, 346, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 289, 0, 330, 268, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 0, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 0, 0, 223, 224, 225, 226,
	355, 0, 0, 386, 387, 388, 410, 372, 0, 423,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 347,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 244, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 352, 1145, 245, 343, 381, 250, 350, 240, 317,
	340, 0, 0, 237, 366, 349, 299, 282, 283, 236,
	0, 335, 261, 274, 258, 315, 0, 365, 393, 257,
	384, 0, 376, 239, 0, 375, 314, 362, 367, 300,
	294, 238, 364, 298, 293, 286, 265, 409, 278, 326,
	292, 327, 279, 304, 303, 305, 0, 0, 0, 0,
	0, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	0, 0, 0, 0, 0, 0, 351, 0, 0, 287,
	0, 0, 0, 394, 0, 338, 320, 0, 0, 0,
	336, 290, 363, 328, 369, 353, 377, 332, 329, 230,
	354, 260, 301, 241, 243, 255, 262, 264, 266, 267,
	310, 311, 323, 342, 356, 357, 358, 259, 251, 337,
	252, 276, 253, 231, 344, 254, 233, 324, 361, 0,
	272, 333, 297, 234, 296, 325, 360, 359, 242, 385,
	391, 392, 397, 0, 398, 0, 0, 0, 406, 411,
	412, 413, 415, 416, 417, 418, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 390, 270, 227,
	228, 426, 256, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 389, 0, 0, 0, 419, 425,
	0, 0, 0, 0, 0, 424, 322, 0, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 371, 383, 401, 404, 0, 0, 0, 232,
	403, 0, 0, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 399, 306,
	307, 308, 309, 273, 0, 249, 402, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 269, 275, 414, 277,
	248, 321, 271, 380, 284, 0, 407, 0, 408, 0,
	0, 0, 0, 313, 280, 281, 345, 285, 291, 334,
	379, 319, 339, 246, 370, 346, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 289,
	0, 330, 268, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 0, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 0, 0, 223, 224, 225, 226, 355, 0, 0,
	386, 387, 388, 410, 372, 0, 423, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 347, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 244, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 352, 1143,
	245, 343, 381, 250, 350, 240, 317, 340, 0, 0,
	237, 366, 349, 299, 282, 283, 236, 0, 335, 261,
	274, 258, 315, 0, 365, 393, 257, 384, 0, 376,
	239, 0, 375, 314, 362, 367, 300, 294, 238, 364,
	298, 293, 286, 265, 409, 278, 326, 292, 327, 279,
	304, 303, 305, 0, 0, 0, 0, 0, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 0, 0, 0,
	0, 0, 0, 351, 0, 0, 287, 0, 0, 0,
	394, 0, 338, 320, 0, 0, 0, 336, 290, 363,
	328, 369, 353, 377, 332, 329, 230, 354, 260, 301,
	241, 243, 255, 262, 264, 266, 267, 310, 311, 323,
	342, 356, 357, 358, 259, 251, 337, 252, 276, 253,
	231, 344, 254, 233, 324, 361, 0, 272, 333, 297,
	234, 296, 325, 360, 359, 242, 385, 391, 392, 397,
	0, 398, 0, 0, 0, 406, 411, 412, 413, 415,
	416, 417, 418, 0, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 0, 390, 270, 227, 228, 426, 256,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 389, 0, 0, 0, 419, 425, 0, 0, 0,
	0, 0, 424, 322, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 371,
	383, 401, 404, 0, 0, 0, 232, 403, 0, 0,
	0, 0, 0, 0, 0, 374, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 399, 306, 307, 308, 309,
	273, 0, 249, 402, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 269, 275, 414, 277, 248, 321, 271,
	380, 284, 0, 407, 0, 408, 0, 0, 0, 0,
	313, 280, 281, 345, 285, 291, 334, 379, 319, 339,
	246, 370, 346, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 289, 0, 330, 268,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 0, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 0, 0,
	223, 224, 225, 226, 355, 0, 0, 386, 387, 388,
	410, 372, 0, 423, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 347, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 0,
	0, 244, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 352, 368, 245, 343, 381,
	250, 350, 240, 317, 340, 0, 0, 237, 366, 349,
	299, 282, 283, 236, 0, 335, 261, 274, 258, 315,
	0, 365, 393, 257, 384, 0, 376, 239, 0, 375,
	314, 362, 367, 300, 294, 238, 364, 298, 293, 286,
	265, 409, 278, 326, 292, 327, 279, 304, 303, 305,
	0, 0, 0, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 378, 0, 0, 0, 0, 0, 0,
	351, 0, 0, 287, 0, 0, 0, 394, 0, 338,
	320, 0, 0, 0, 336, 290, 363, 328, 369, 353,
	377, 332, 329, 230, 354, 260, 301, 241, 243, 505,
	262, 264, 266, 267, 310, 311, 323, 342, 356, 357,
	358, 259, 251, 337, 252, 276, 253, 231, 344, 254,
	233, 324, 361, 0, 272, 333, 297, 234, 296, 325,
	360, 359, 242, 385, 391, 392, 397, 0, 398, 0,
	0, 0, 406, 411, 412, 413, 415, 416, 417, 418,
	0, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	0, 390, 270, 227, 228, 426, 256, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 389, 0,
	0, 0, 419, 425, 0, 0, 0, 0, 0, 424,
	322, 0, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 371, 383, 401, 404,
	0, 0, 0, 232, 403, 0, 0, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 399, 306, 307, 308, 309, 273, 0, 249,
	402, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	269, 275, 414, 277, 248, 321, 271, 380, 284, 1372,
	407, 157, 408, 49, 149, 126, 0, 313, 280, 281,
	345, 285, 291, 334, 379, 319, 339, 246, 370, 346,
	295, 150, 0, 0, 0, 0, 0, 0, 142, 0,
	0, 0, 151, 484, 222, 483, 490, 480, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 488, 0,
	489, 493, 0, 97, 475, 0, 0, 0, 0, 154,
	0, 229, 0, 289, 498, 330, 268, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 0,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 0, 223, 224, 225,
	226, 0, 0, 0, 386, 387, 388, 410, 372, 0,
	423, 157, 0, 49, 149, 126, 0, 0, 0, 0,
	0, 0, 113, 114, 0, 115, 116, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 142, 0,
	0, 1368, 151, 0, 0, 1365, 0, 0, 109, 1367,
	1364, 1366, 1370, 1371, 0, 0, 0, 1369, 0, 1538,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 148, 155, 1540, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 141, 140, 0, 0, 0, 0, 55,
	0, 2988, 476, 478, 477, 0, 0, 0, 0, 0,
	0, 1520, 482, 0, 0, 0, 739, 0, 0, 0,
	0, 0, 113, 114, 486, 115, 116, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 145,
	0, 0, 0, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1375, 1376, 1377, 1378, 1379, 1380,
	1373, 1374, 0, 152, 0, 0, 0, 0, 0, 0,
	125, 148, 155, 0, 95, 0, 0, 0, 0, 741,
	0, 105, 740, 0, 0, 146, 0, 106, 0, 0,
	0, 0, 147, 141, 140, 0, 0, 0, 0, 55,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 481, 485, 491,
	0, 492, 494, 0, 702, 495, 496, 497, 0, 0,
	499, 500, 1524, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 1528, 0, 0, 0, 0, 0, 0,
	48, 704, 0, 0, 0, 0, 0, 143, 144, 145,
	0, 0, 0, 1517, 0, 0, 0, 1519, 1521, 1523,
	0, 1525, 1526, 1527, 1529, 1530, 1531, 1533, 1534, 1535,
	1536, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 105, 0, 0, 0, 146, 0, 106, 0, 0,
	0, 725, 724, 0, 0, 0, 0, 0, 0, 1539,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 127, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 734,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 0, 730, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 38,
	0, 0, 0, 0, 0, 47, 5, 829, 0, 112,
	0, 0, 1532, 0, 731, 735, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 720, 0, 718, 722, 738, 0, 0, 0, 719,
	716, 715, 0, 721, 706, 707, 705, 708, 709, 710,
	711, 0, 736, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 829, 732, 733, 0, 0, 0,
	0, 0, 0, 934, 935, 936, 933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 817, 0, 0, 0, 0, 0, 0, 108, 38,
	0, 829, 0, 0, 0, 47, 0, 0, 0, 112,
	0, 837, 841, 843, 845, 847, 848, 850, 0, 854,
	851, 852, 853, 0, 0, 832, 833, 834, 835, 815,
	816, 838, 1372, 818, 0, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 830, 836, 1538, 817, 0,
	0, 0, 807, 727, 840, 842, 844, 846, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 837, 841,
	843, 845, 847, 848, 850, 0, 854, 851, 852, 853,
	0, 1540, 832, 833, 834, 835, 815, 816, 838, 0,
	818, 831, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 830, 836, 0, 817, 0, 0, 0, 0,
	0, 840, 842, 844, 846, 849, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 837, 841, 843, 845, 847,
	848, 850, 0, 854, 851, 852, 853, 0, 0, 832,
	833, 834, 835, 815, 816, 838, 0, 818, 831, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 830,
	836, 0, 0, 0, 1538, 0, 0, 0, 840, 842,
	844, 846, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1368, 0, 0, 0, 1365, 0,
	0, 1538, 1367, 1364, 1366, 1370, 1371, 0, 1540, 0,
	1369, 0, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2052,
	2053, 0, 0, 0, 0, 1540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1513, 1512, 1515, 0, 1511, 0, 0, 0, 0,
	1524, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 0, 0, 0, 1519, 1521, 1523, 0, 1525,
	1526, 1527, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2765, 0, 0, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1375, 1376, 1377,
	1378, 1379, 1380, 1373, 1374, 0, 839, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1524, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 1528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 839, 1524, 0, 0, 0, 1517, 0,
	0, 0, 1519, 1521, 1523, 1528, 1525, 1526, 1527, 1529,
	1530, 1531, 1533, 1534, 1535, 1536, 0, 0, 0, 0,
	1532, 0, 0, 0, 0, 1517, 0, 1522, 0, 1519,
	1521, 1523, 0, 1525, 1526, 1527, 1529, 1530, 1531, 1533,
	1534, 1535, 1536, 484, 0, 483, 490, 480, 0, 0,
	839, 0, 0, 0, 1539, 0, 0, 487, 488, 0,
	489, 493, 0, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 1539, 0, 0, 484, 0, 483, 490, 480, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 487, 488,
	0, 489, 493, 0, 502, 475, 0, 504, 1516, 0,
	0, 0, 503, 0, 0, 498, 0, 0, 1537, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 1532, 0, 0,
	0, 0, 0, 0, 1522, 502, 0, 0, 504, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1532, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 478, 477, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 470, 476, 478, 477, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 485, 491,
	0, 492, 494, 0, 0, 495, 496, 497, 0, 0,
	499, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 485,
	491, 0, 492, 494, 0, 0, 495, 496, 497, 0,
	0, 499, 500,
}

var yyPact = [...]int{
	34571, -1000, -1000, -1000, -301, 8827, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32572, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32572, -298, 32045,
	32045, -1000, -1000, 1896, -1000, 31518, 9900, 32572, 283, 279,
	32572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 519, -1000, 30991, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 489, 35683, 34153, 6708, -252,
	-1000, 2496, -107, 659, 669, 759, 759, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2450, 685, 30464, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34737, 171, 685,
	12535, -1, -10, 2496, 306, 193, -1000, 939, 34691, 151,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 6708, 6708, 8827, -308, 8827, 6708, 32572, 32572, -1000,
	-1000, -1000, -1000, 489, 35683, 6708, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -10, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35154, -1000, 1169, -1000, -1000, -1000, -1000, 2110, 1160, 1708,
	455, 32572, -1000, 1159, 455, -1000, -1000, -1000, 2496, 2496,
	-1000, 32572, 32572, 66, 1297, -1000, 316, 301, 288, 1151,
	-1000, -1000, -1000, -1000, -1000, -1000, 370, 2479, -1000, 32572,
	32572, 2117, 32572, -1000, 1440, 411, 35724, 2305, 830, 585,
	2154, -1000, -1000, 2109, -1000, 175, 187, 114, 268, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 180, -1000, 2356, -1000,
	-1000, 164, -1000, -1000, 158, -1000, -1000, -1000, -13, -1000,
	-1000, -1000, -1000, -1000, -1000, -114, -1000, -1000, 709, 1715,
	6708, -1000, 1376, -1000, 3527, -1000, -1000, -1000, -1000, 4063,
	8289, 8289, 8289, 8289, -1000, -1000, 1962, 6708, 2107, 2104,
	-1000, -1000, -1000, -1000, -1000, 1150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1706, 7762,
	-1000, 2102, 2098, 2089, 2088, 2085, 2080, 2077, 2074, 2073,
	2072, 2060, 2055, 2054, 2052, 1876, 9362, 2050, 1704, 1702,
	2049, 2048, 2045, 1701, 1876, 1876, 2044, 2043, 2036, 2034,
	2033, 2031, 2028, 2025, 2023, 2015, 2013, 2008, 1999, 1997,
	1996, 1995, 1994, 1989, 1988, 1986, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 870,
	-1000, 1984, 2271, 2385, 1904, 2448, 2401, 2384, 2346, 2334,
	1560, -1000, -1000, -1000, -150, -1000, -1000, 684, -1000, 602,
	-1000, 32572, 32572, 32572, 483, 483, 483, 483, 483, 508,
	483, 517, 516, 514, 483, -1000, -1000, -1000, -1000, -1000,
	-1000, 588, -1000, -1000, -1000, -1000, 965, 32572, -1000, 1923,
	1246, 2367, 447, 443, 429, 1246, 321, -1000, 1311, 1311,
	1311, 1311, 1246, 350, 422, 2385, 2385, -26, 1311, -40,
	1246, 1246, -40, 1246, 1246, 1246, 170, -295, -1000, -1000,
	-1000, 1311, 1311, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2350, 2345, 489, 32572, 100, 32572, 489, 489, 492, -57,
	33626, 33099, 1440, 408, 407, 975, 1256, -1000, 1284, 32572,
	32572, 1284, 1284, 16754, 16227, -1000, 32572, -1000, 2385, 1904,
	-1000, 1844, 2430, 1843, 1904, 489, 489, 489, 489, 489,
	489, 489, 489, 32572, 32572, 29937, 489, 5644, 5644, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8827, 1639,
	1554, 149, -73, -303, 182, -1000, -1000, 32572, 2253, 136,
	-1000, -1000, -1000, 1891, -1000, 1920, 1920, 1920, 1920, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1936, 1972,
	-1000, -1000, 1918, 1918, 1918, 1891, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1933, 1933, 1935, 1933, 32572, 6708, 32572, 2272, 292,
	1970, -1000, 32572, 289, 2385, 2271, 2385, -1000, -1000, 1149,
	1558, 1700, -1000, -1000, 316, 1183, -1000, 800, -1000, -1000,
	-1000, -1000, 32572, -114, 281, -1000, -1000, 1692, 1969, -1000,
	441, 797, 1096, -1000, 127, 34603, 25713, 1440, 25713, 32572,
	-1000, -1000, -1000, -1000, -1000, -1000, -14, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	153, -1000, 6708, 6708, 6708, 6708, 6708, -1000, 506, 7235,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8289, 8289, 8289,
	8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 8289, 1961,
	1332, 8289, 8289, 8289, 8289, 2430, 2636, 966, 215, -1000,
	-1000, -1000, -1000, -1000, 1321, 1715, 6708, 6708, 32572, -1000,
	35101, 6708, 6708, 34408, 6708, 2330, 6708, 6708, 6708, 1839,
	3008, 32572, 6708, -1000, 1830, 1829, -1000, -1000, 1451, 6708,
	-1000, -1000, 6708, -1000, -1000, 6708, 8289, 6708, -1000, -1000,
	-1000, 1948, 2330, 2330, 6708, 6708, 2330, 2330, 2330, 1291,
	2330, 2330, 2330, 2330, 2330, 2330, 2330, 2330, 1828, 1826,
	1824, 2385, -252, 5117, -1000, -258, 2271, 6708, -1000, -1000,
	6708, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1698,
	-76, 655, 600, 617, -1000, 2326, -1000, 1967, 1965, 1139,
	32572, 1315, 32572, 25713, 32572, 1440, 32572, 32572, 483, 483,
	483, 32572, 492, -1000, 32572, 965, 2323, 32572, 2467, 8289,
	8289, 29410, 1311, 1246, 1246, -1000, -1000, 32572, -1000, -1000,
	-1000, 1311, 32572, 1311, 1311, 2467, 1311, -1000, -1000, -1000,
	1246, 1246, -1000, -1000, -1000, -1000, 1311, 1311, -1000, -1000,
	2467, 32572, -33, 2467, 2467, -22, -1000, -1000, -1000, 32572,
	32572, 483, 32572, -1000, 32572, 32572, -1000, -1000, 32572, 35281,
	32572, 28883, 2342, -1000, 25713, 32572, 23605, -1000, 889, -1000,
	-85, -1000, -78, -57, 1284, -57, 1284, -1000, 438, 444,
	15173, 393, 25713, 3535, -1000, -1000, 1284, 1284, 3535, 3535,
	981, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 946, -1000,
	146, 2271, -1000, -1000, -1000, -1000, -1000, 32572, 32572, 25713,
	1440, 32572, 32572, 32572, 32572, -1000, 1964, -1000, 2286, 32572,
	1010, -1000, -1000, 12008, 1131, 1010, -1000, 1358, -1000, 6708,
	8827, -277, 6708, 8827, 8827, 6708, 8827, -1000, 6708, 133,
	-1000, -1000, -1000, -1000, 1557, -1000, 1547, -1000, -1000, -1000,
	1696, 1696, -1000, 1542, -1000, -1000, -1000, -1000, 1541, -1000,
	-1000, 1535, -1000, -1000, 1823, 709, -1000, 1694, 2143, -253,
	-1000, 14118, 32572, 32572, -1000, -1000, -253, -1000, 13590, 32572,
	2271, -1000, 2271, 32572, -1000, 2365, -1000, 316, 238, -1000,
	-1000, -1000, -1000, -1000, -1000, 1125, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 936, -1000, 32572, -1000, -1000,
	127, 25713, 26767, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	179, -1000, -1000, 168, -1000, 499, 104, 1182, -1000, -1000,
	103, 161, 535, 1715, -1000, 1368, 1368, 1333, -1000, 521,
	-1000, -1000, -1000, -1000, 1962, -1000, -1000, -1000, 2797, 2651,
	-1000, 1214, 1214, 986, 986, 986, 986, 986, 1243, 1243,
	-1000, -1000, -1000, 4063, 1961, 8289, 8289, 8289, 8289, 449,
	449, 2206, 3815, -1000, 6708, 1355, -1000, 6708, 1928, 1079,
	1102, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1819, 1818, 1857, 2477, 1816, 6708, -1000, -1000, 1179,
	1178, 1161, -1000, 1742, 6181, -1000, -1000, -1000, 1813, 1098,
	1812, -1000, -1000, -1000, 1811, 1156, 857, 1805, 3092, 1793,
	928, 6708, 6708, 1154, 1153, 6708, 6708, 6708, 6708, 1789,
	6708, 6708, 6708, 6708, 6708, 6708, 6708, 6708, 14, 14,
	14, -1000, -1000, 1146, -1000, 1715, -1000, 1688, -1000, 958,
	903, -1000, 1710, -1000, -1000, -1000, -1000, 647, 594, 680,
	32572, 762, 10427, 32572, 1923, 2282, 120, -1000, 922, -1000,
	104, -124, 719, 2113, 2476, 32572, 32572, 32572, 2316, 28356,
	-1000, 1959, 1142, -1000, -1000, 6708, -1000, -1000, 1951, 32572,
	32572, 2467, 2467, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	32572, 2467, 2467, 1246, 1311, -1000, -1000, 1311, -1000, -1000,
	1311, -1000, 1094, -1000, 32572, -1000, -1000, -1000, 1923, 902,
	-1000, 10954, 13062, 502, -1000, 497, 1221, 1221, 809, 1221,
	1221, 1221, 1221, 363, 360, 1221, 1221, 1221, 1221, 1221,
	1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1958,
	-1000, 116, 2337, 203, 199, 922, 218, 2778, 806, -1000,
	-1000, -1000, -1000, 18862, 18862, 14646, 18862, -1000, 1187, -57,
	-98, -1000, -1000, 889, 3535, 889, 3535, -1000, -1000, 496,
	-1000, -1000, 719, -1000, 32572, 32572, -1000, -1000, 1945, 1294,
	-1000, -1000, 9362, -1000, 3535, 3535, -1000, -1000, 19389, 32572,
	-1000, -115, -1000, -103, 2363, 884, -1000, -1000, 886, 719,
	2141, 884, 884, -1000, 10427, 32572, -1000, 2467, 5644, -1000,
	23605, -1000, -1000, 27821, -1000, 27294, 2467, 1307, -1000, 8827,
	1450, 145, -1000, 172, -312, 144, 1446, 143, 1715, -1000,
	-1000, 1783, 1782, 1127, -1000, 1119, 1781, 1095, 1091, -1000,
	-61, -1000, 2255, 744, -1000, 1943, -1000, 1083, 2226, -1000,
	883, -1000, 1293, 1080, -1000, 744, 1071, 2218, 883, 2363,
	-1000, 1076, 56, -1000, -1000, 32572, 1692, 1065, 26767, 810,
	-1000, 495, 1069, 1054, -1000, 25713, 159, 25713, -1000, 25713,
	-1000, -1000, 285, -1000, 32572, 2259, -1000, -1000, -1000, 1645,
	-326, -1000, -1000, -1000, -1000, -1000, 1055, -1000, 449, 449,
	2206, 3766, -1000, 8289, -1000, 8289, 2596, 1302, -1000, 6708,
	1409, 35097, 1261, 18335, 32572, -1000, -1000, 6708, 6708, -1000,
	2589, -1000, -1000, -1000, -1000, 6708, 6708, 1809, -1000, 32572,
	-1000, -1000, -1000, -1000, 18335, -1000, 8289, -1000, 6708, 845,
	2569, 14, 14, 2495, 2490, 2468, 1038, 14, 2432, 2419,
	2387, 2381, 2366, 2318, 2310, 2276, -1000, 1941, -1000, -1000,
	5117, -1000, -61, 6708, 6708, 6708, 2241, -1000, -1000, -1000,
	-1000, -1000, 592, 140, 1774, 876, -1000, -1000, 32572, -1000,
	-1000, -1000, 1773, 869, -1000, -1000, -1000, 35211, 1920, 1920,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1936,
	-1000, -1000, 1918, 1918, 1918, 1891, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1933, 1933, 1935, 1933, -1000,
	2307, -1000, 28, 1221, 425, 25713, 386, -1000, 32572, 2132,
	247, 2246, 32572, 1932, 1931, 1927, 274, 35211, 32572, 829,
	-1000, 1044, 34691, -1000, 32572, 1715, -1000, 1440, -1000, 1246,
	-1000, -1000, 2467, 985, -1000, -1000, 2467, 1246, 1246, 1311,
	32572, -1000, 2277, 35281, -1000, 2228, 32572, -1000, -1000, 35211,
	533, -1000, 641, 483, 32572, 1399, 641, 1388, 1926, -1000,
	-1000, -1000, 32572, 32572, -1000, 32572, 1387, 1385, -1000, 32572,
	32572, 1530, -1000, 1528, 1221, 1221, 1524, 1686, 1684, 1682,
	1221, 1221, 1522, 1680, 26240, 1521, 1520, 1511, 1532, 1678,
	599, 1527, 1493, 1490, 32572, 1924, 1614, 28, 1221, 198,
	32572, 1292, 425, 1564, 15700, 32572, 23605, 23605, 23605, 23605,
	-1000, 2182, 2180, -1000, 2204, 2168, 2192, 32572, 23605, 1923,
	-1000, 26240, -1000, -1000, -1000, 2430, 1028, 2339, 663, 6708,
	-1000, -1000, -97, -94, -1000, -1000, -1000, 25713, 1669, 393,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2494, 32572,
	32572, 1772, -1000, 2452, -1000, 844, -1000, -1000, 1040, -1000,
	2452, 1157, -304, 8827, 1295, 1104, -1000, 6708, 8827, 6708,
	-279, 186, -281, -1000, -1000, -1000, 1668, -1000, -1000, -1000,
	1504, -1000, 1502, 24, 43, 1382, -253, 5117, 299, 32572,
	-253, 32572, 5117, -1000, 32572, 290, -253, -1000, 32572, 1500,
	-1000, -1000, -1000, 2475, 25713, 1440, 1067, 25186, -1000, 163,
	-1000, 169, 430, 1666, -1000, 511, 101, -1000, 1270, 1645,
	-1000, -1000, -1000, 8289, -1000, -1000, -1000, -1000, 1715, 6708,
	1769, -1000, 664, 664, 1763, -1000, 1920, 1920, -1000, 1891,
	1918, 1891, 664, 664, 1762, -1000, 1656, 2254, -1000, 2162,
	2067, 6708, -1000, 1753, 3619, 819, -142, 14, -1000, -1000,
	-1000, 14, 14, 14, 14, -1000, 14, 14, 14, 14,
	14, 14, 14, 14, 457, -1000, 24, 1715, 1715, -1000,
	-1000, 2233, -1000, 1664, 1663, 762, 35211, 525, 10427, 2252,
	302, 1565, -1000, -1000, 24659, 417, -1000, -1000, -1000, 480,
	184, 1499, 401, -1000, 32572, 218, 32572, -1000, -1000, -1000,
	-1000, -1000, 2246, -1000, 732, 243, 11481, 11481, 11481, 249,
	1337, -1000, 455, 777, 1030, 23605, 32572, -1000, 23078, 1752,
	-1000, 719, 2467, -1000, 32572, -1000, 2467, 2467, 1246, -1000,
	302, -1000, -1000, -1000, 32572, 2228, 2752, -1000, 32572, -1000,
	32572, -1000, 32572, 32572, 483, 6708, -1000, -1000, -1000, 32572,
	-1000, 255, -1000, -1000, -1000, -1000, 18335, 18335, -1000, -1000,
	-1000, -1000, 1662, 1653, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 379, 32572, 1016, -1000,
	1228, 1565, 24659, 1223, 1284, 1652, 417, -1000, 1646, -1000,
	765, 32572, 32572, -1000, 837, -1000, 1222, 2116, 2126, 2116,
	-1000, -1000, -1000, -1000, 2176, -1000, 2166, -1000, -1000, 837,
	-1000, -1000, -1000, -1000, -1000, 663, -1000, 2361, 641, 641,
	641, 1751, -1000, -1000, -1000, 810, 1749, -1000, -1000, -1000,
	-1000, -1000, -1000, 2459, 2447, 24132, 2459, -1000, -304, 1301,
	-1000, 1343, 141, 1414, 32572, -1000, -1000, -1000, 1747, 1746,
	-260, 44, 2445, 2444, 2493, -1000, 1745, 794, -253, -1000,
	-1000, 744, -1000, -1000, -1000, -253, -1000, 744, -1000, -1000,
	1440, -1000, 166, -1000, -1000, -1000, -1000, -1000, -1000, 76,
	-1000, 32572, -1000, 1645, 1644, 94, -1000, 1715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6708, -1000, -1000, -1000, 1955, -1000, -1000,
	6708, 1743, 1624, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2451, -1000, 2443, -260,
	-1000, -1000, -1000, -1000, -1000, -1000, 35211, -1000, 2216, -1000,
	-1000, 1623, 98, -1000, -1000, -1000, 1618, 1616, 1498, -1000,
	-1000, 1485, 811, 107, -1000, -1000, -1000, -1000, -1000, -1000,
	1564, 1915, -1000, 1221, 1221, 1221, 32572, 1732, 781, -1000,
	-1000, -1000, -1000, 1731, 1730, 460, 1272, 1239, -1000, 1489,
	18862, 23605, 23078, 803, -1000, 1022, -1000, -1000, -1000, 2467,
	-1000, -1000, 2467, -1000, -1000, -1000, -1000, 2752, -1000, -1000,
	1349, 8289, -1000, -1000, 1615, 17808, 587, 597, 1914, -1000,
	333, 2485, -1000, 1380, 1378, -1000, 32572, -1000, 1911, -1000,
	1910, 1930, 287, 1908, 1906, 32572, 1949, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 376, 1008, -1000, 1614,
	1603, -1000, 98, 1599, 3535, -1000, -1000, -1000, 32572, 765,
	765, 2451, 32572, 5117, -1000, -1000, 6708, 1905, -1000, 6708,
	-1000, -1000, -1000, -1000, -1000, 1900, 2207, -1000, -1000, -1000,
	-1000, -1000, -1000, 6708, 6708, -1000, -1000, 479, 8827, -282,
	178, -1000, -1000, -1000, -262, 1598, -1000, -1000, 2435, 1596,
	1577, 32572, -1000, 744, 744, 719, -1000, -1000, -22, -1000,
	-1000, -1000, 1853, -1000, 1784, 14, -1000, 124, 6708, -262,
	-182, -1000, -1000, -1000, -1000, 272, -1000, -1000, 210, -1000,
	-1000, 1454, 446, -1000, -1000, 22024, 18335, 17808, 1594, -1000,
	35398, 11481, 153, 35398, 673, 1232, -1000, 1486, -1000, 1478,
	-1000, 2467, 803, 1022, -1000, -1000, 1013, -1000, -1000, -1000,
	-1000, 2206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1473, 1897, -77, -1000, -1000,
	1895, 22024, 22024, 340, 340, 22024, 22024, 1893, 522, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2385, -1000,
	-1000, 1715, 32572, 1715, 22551, -1000, 2434, 2433, 1715, 709,
	-1000, -304, 32572, 32572, -264, 1472, -1000, 1591, 36, -1000,
	-1000, 713, -266, 23, 54, -1000, -1000, -1000, 1719, -1000,
	464, -1000, -1000, -1000, 709, -264, 32572, 428, 1590, -1000,
	-1000, 209, -1000, -1000, 1001, -1000, 1891, 6708, -1000, -1000,
	-1000, 454, 35425, -1000, -1000, -1000, -22, 454, 421, 216,
	-1000, 1470, -1000, -1000, 2451, -1000, 1714, 6708, 1876, -177,
	22024, 990, 989, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	979, 977, 22024, -1000, -1000, -1000, 330, -1000, 957, 954,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1873, -1000, -1000,
	2431, -1000, 1586, 491, 35, 54, -1000, 2428, 30, 2427,
	2425, -1000, -1000, 469, -255, 12, 11, 10, -1000, -1000,
	-1000, 6708, -1000, 2273, -1000, -1000, 75, -1000, -1000, -1000,
	22024, 2269, 1771, 294, 2423, 35398, -1000, -1000, 294, -1000,
	267, -1000, 1140, -1000, 1468, -1000, 2385, -1000, 1754, -1000,
	2125, -1000, 130, 943, -1000, -1000, -1000, -1000, 933, -1000,
	-1000, -1000, 21497, 32572, 1577, -1000, 1872, 1455, 44, 33,
	2422, -1000, 1577, 2399, 1577, 1577, 1327, -1000, 8, 6,
	4, -1000, -1000, -1000, -1000, 1584, -1000, 219, -1000, -1000,
	2269, -1000, 2397, 327, -1000, -1000, -1000, -1000, 1444, -1000,
	-1000, 522, -1000, 2121, 2119, 2472, -1000, -1000, -1000, -1000,
	219, 219, 219, 219, 152, -1000, -1000, 924, -1000, -1000,
	2333, 17281, 21, -1000, -1000, -1000, 1583, -1000, 1577, -1000,
	-1000, 469, -1000, -1000, -1000, -1000, -1000, 1221, 1571, 232,
	-1000, -1000, -1000, 20970, 312, 328, 318, -1000, 445, -1000,
	-1000, -1000, -1000, 2483, -1000, 2481, 605, 605, -1000, -1000,
	32572, -1000, 32572, -1000, 918, -1000, -1000, -1000, 1021, -1000,
	-1000, -1000, -1000, -1000, 1443, -1000, 32572, -1000, 32572, 310,
	1441, 8289, 1869, 8289, 1868, 319, 1864, -1000, -1000, -1000,
	1475, 342, -1000, -1000, 700, -1000, 1207, -1000, 20443, 32572,
	-1000, -1000, 916, 1863, 2388, -1000, 3365, 32572, 3289, 32572,
	1856, 1110, 8289, -1000, -1000, -1000, 32572, 4590, -1000, 1018,
	-1000, -1000, 431, 304, -1000, 905, -1000, 904, 19916, 1417,
	2474, -1000, -1000, 1715, 32572, 877, -1000, 32572, 308, -1000,
	-1000, -1000, 859, -1000, -1000, -1000, -1000, 431, 2200, -1000,
	1369, -1000, -1000, 34743, 576, -1000, -1000, 34743, 303, -1000,
	448, 1849, -1000, -1000, 858, -1000, 32572, 622, 6708, -1000,
	303, 35398, -1000, 6708, 779, -1000, 35398, 756, -1000, -1000,
}

var yyPgo = [...]int{
	0, 142, 2517, 221, 147, 3096, 62, 220, 201, 198,
	217, 3089, 3085, 2264, 2262, 3084, 3078, 3077, 3075, 3074,
	3073, 3072, 3071, 3070, 3069, 3068, 3067, 3063, 3062, 3061,
	3060, 3057, 3056, 3054, 3053, 3052, 3051, 3049, 3048, 215,
	3045, 3044, 3042, 3040, 3039, 3038, 3037, 3036, 3034, 3033,
	3032, 3031, 3029, 3028, 3027, 3024, 3022, 3021, 3018, 3017,
	3015, 3013, 3012, 3011, 3010, 3007, 3002, 3001, 2999, 2998,
	194, 2996, 2260, 2995, 2993, 2989, 2988, 2987, 2984, 2982,
	219, 2981, 2980, 2979, 2977, 2975, 2974, 2973, 2972, 2971,
	2970, 2969, 216, 2966, 2964, 2962, 2961, 2960, 2956, 214,
	2955, 144, 166, 2954, 2953, 2952, 2951, 2949, 212, 189,
	49, 2947, 37, 2945, 196, 2943, 121, 2939, 122, 2937,
	2936, 2935, 2934, 2933, 2932, 2931, 2928, 2916, 2915, 2914,
	2913, 71, 2912, 99, 134, 165, 231, 425, 229, 224,
	160, 141, 75, 2911, 2288, 2910, 131, 200, 127, 20,
	2908, 152, 2906, 133, 31, 25, 223, 116, 40, 130,
	100, 2905, 192, 87, 84, 2904, 2900, 159, 225, 162,
	2899, 101, 2898, 2897, 2896, 2895, 177, 167, 2892, 2890,
	103, 2889, 2888, 114, 2887, 53, 175, 137, 172, 2886,
	403, 97, 90, 138, 2884, 2883, 85, 2881, 2879, 2878,
	2876, 155, 2873, 2872, 104, 72, 2871, 2870, 2869, 46,
	2867, 52, 2863, 47, 2861, 2859, 2858, 2857, 55, 2851,
	2850, 14, 19, 22, 2849, 21, 2846, 143, 2845, 2844,
	2840, 93, 2831, 2, 2828, 195, 54, 82, 124, 2827,
	372, 2826, 2823, 2820, 136, 2818, 361, 2816, 2810, 2809,
	2807, 2806, 76, 2804, 190, 36, 2803, 77, 112, 94,
	170, 182, 2801, 2800, 2799, 173, 79, 63, 0, 2798,
	129, 2796, 2795, 2789, 227, 2788, 205, 222, 140, 230,
	243, 146, 2787, 2786, 70, 2785, 132, 73, 43, 107,
	80, 15, 156, 2784, 368, 157, 2783, 183, 2769, 204,
	1, 117, 2765, 2764, 34, 234, 2763, 2762, 2760, 95,
	2758, 2757, 92, 102, 2756, 2755, 2754, 33, 2752, 29,
	27, 2751, 109, 2750, 211, 2748, 213, 119, 154, 149,
	126, 197, 203, 59, 60, 2747, 1232, 125, 78, 23,
	2745, 199, 2744, 169, 113, 2742, 68, 2741, 210, 324,
	184, 2740, 158, 8, 35, 28, 2738, 9, 2737, 111,
	188, 2736, 2735, 18, 42, 2732, 17, 2727, 2722, 2721,
	2720, 5, 2718, 2717, 2716, 4, 7, 2714, 3, 181,
	2711, 2710, 2709, 2708, 38, 106, 2707, 115, 150, 2706,
	2700, 74, 2699, 2697, 2696, 816, 2695, 2693, 2692, 2687,
	2686, 2680, 2679, 2675, 2674, 2672, 86, 44, 2671, 2669,
	2660, 2659, 64, 123, 2655, 2653, 2651, 2647, 30, 153,
	2642, 16, 2641, 26, 24, 32, 2640, 120, 2639, 12,
	161, 2634, 2632, 13, 2628, 2627, 10, 11, 2626, 2624,
	96, 2623, 69, 41, 139, 83, 2618, 66, 193, 118,
	2614, 2611, 218, 207, 180, 2610, 105, 206, 233, 2609,
	186, 2607, 2606, 2591, 2580, 2575, 2574, 758, 2570, 2565,
	202, 45, 67, 89, 2557, 2555, 2554, 65, 135, 91,
	88, 164, 2551, 171, 2549, 2547, 81, 2545, 2542, 2541,
	2539, 2538, 163, 2534, 2533, 168, 209, 2531, 2529, 2528,
	2521, 226, 228, 2520,
}

//line mysql_sql.y:9642
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 491, 499, 499, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 106, 489, 489, 489, 490, 490, 103, 123,
	122, 125, 125, 124, 124, 121, 121, 117, 120, 120,
	119, 119, 118, 113, 115, 115, 114, 116, 116, 104,
	92, 105, 439, 439, 438, 438, 437, 437, 392, 392,
	436, 436, 436, 435, 435, 435, 434, 434, 433, 433,
	432, 432, 430, 430, 431, 429, 428, 428, 428, 426,
	426, 426, 422, 422, 424, 423, 423, 425, 417, 417,
	420, 420, 418, 418, 418, 418, 421, 416, 416, 416,
	415, 415, 91, 91, 91, 338, 338, 90, 90, 352,
	352, 352, 352, 352, 350, 350, 350, 350, 350, 350,
	349, 349, 348, 348, 353, 353, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 81, 81, 81, 81,
	81, 86, 86, 86, 496, 496, 495, 495, 497, 497,
	497, 497, 498, 498, 84, 84, 84, 85, 347, 347,
	347, 82, 83, 83, 337, 337, 342, 342, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 346, 346, 346, 344, 344, 343, 343, 345, 345,
	75, 75, 75, 78, 77, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 76, 76, 76, 76, 76, 76,
	71, 71, 71, 71, 71, 70, 70, 72, 72, 334,
	334, 333, 87, 87, 88, 493, 493, 492, 494, 494,
	494, 494, 89, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 97, 97, 96, 98, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 463, 463, 463, 465, 465, 272, 273, 500, 275,
	271, 271, 271, 459, 459, 460, 461, 462, 462, 462,
	93, 11, 11, 11, 11, 11, 11, 69, 74, 226,
	226, 227, 227, 227, 227, 227, 227, 227, 231, 231,
	231, 230, 228, 228, 228, 228, 228, 228, 229, 232,
	232, 67, 73, 73, 73, 476, 476, 68, 483, 483,
	395, 395, 286, 286, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	399, 400, 282, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 46, 45, 45, 45, 323, 323, 44, 501, 501,
	261, 261, 56, 55, 48, 57, 58, 59, 60, 61,
	62, 43, 54, 54, 54, 54, 54, 54, 54, 54,
	65, 65, 411, 411, 503, 503, 503, 63, 64, 394,
	394, 394, 53, 52, 51, 50, 49, 49, 42, 42,
	41, 41, 47, 129, 130, 279, 279, 279, 281, 281,
	277, 502, 502, 366, 366, 280, 280, 40, 40, 40,
	40, 66, 278, 278, 260, 276, 276, 276, 12, 12,
	10, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 23, 24, 26, 331, 331, 328, 25,
	18, 17, 20, 16, 19, 21, 22, 22, 9, 9,
	9, 9, 13, 13, 14, 141, 141, 191, 191, 471,
	471, 467, 467, 468, 468, 468, 469, 469, 470, 470,
	99, 405, 405, 405, 405, 405, 405, 8, 163, 163,
	404, 404, 404, 404, 404, 404, 335, 335, 448, 448,
	448, 449, 162, 162, 157, 157, 406, 406, 301, 450,
	450, 414, 414, 413, 413, 412, 412, 160, 160, 161,
	161, 144, 144, 109, 109, 419, 419, 419, 419, 427,
	427, 391, 391, 218, 218, 255, 255, 256, 256, 134,
	134, 135, 135, 135, 135, 135, 135, 456, 456, 458,
	458, 457, 159, 159, 155, 155, 156, 156, 156, 154,
	154, 153, 152, 152, 151, 149, 149, 149, 150, 150,
	150, 167, 167, 137, 137, 137, 136, 136, 136, 136,
	136, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 138, 138, 464, 464, 464, 396, 396,
	396, 402, 402, 237, 237, 238, 238, 236, 236, 139,
	139, 140, 140, 140, 140, 235, 235, 234, 142, 142,
	148, 147, 147, 143, 143, 143, 143, 245, 245, 244,
	244, 244, 244, 102, 107, 107, 108, 166, 166, 243,
	242, 242, 242, 165, 165, 164, 164, 158, 158, 146,
	146, 146, 146, 241, 145, 239, 488, 488, 487, 487,
	486, 484, 484, 484, 485, 485, 485, 485, 441, 441,
	441, 441, 441, 266, 266, 266, 270, 270, 269, 269,
	269, 269, 269, 274, 7, 7, 7, 7, 7, 30,
	30, 30, 30, 30, 30, 30, 30, 36, 175, 176,
	37, 177, 177, 178, 178, 179, 179, 180, 181, 182,
	182, 182, 182, 35, 168, 168, 169, 169, 170, 170,
	171, 172, 172, 172, 174, 173, 34, 27, 472, 475,
	473, 473, 477, 477, 477, 478, 478, 478, 479, 479,
	28, 126, 131, 131, 128, 133, 133, 133, 133, 133,
	127, 474, 480, 480, 480, 332, 332, 329, 330, 330,
	327, 326, 326, 326, 482, 482, 481, 481, 481, 267,
	267, 29, 322, 322, 324, 325, 325, 325, 316, 316,
	316, 316, 33, 320, 320, 321, 321, 321, 321, 321,
	317, 317, 319, 319, 315, 315, 315, 315, 315, 32,
	132, 132, 314, 314, 312, 312, 310, 310, 311, 311,
	309, 309, 309, 313, 313, 31, 31, 31, 111, 110,
	110, 110, 258, 258, 257, 257, 112, 38, 203, 203,
	380, 380, 380, 380, 380, 398, 398, 398, 381, 381,
	381, 382, 382, 382, 383, 383, 383, 383, 383, 397,
	397, 354, 354, 355, 355, 355, 358, 358, 372, 372,
	373, 373, 371, 371, 378, 378, 377, 377, 376, 376,
	375, 375, 374, 374, 374, 374, 369, 369, 368, 368,
	356, 356, 356, 356, 356, 357, 357, 357, 367, 367,
	370, 370, 209, 209, 210, 210, 210, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 446, 446, 447, 212,
	212, 212, 216, 216, 216, 216, 216, 216, 211, 211,
	213, 213, 192, 192, 190, 190, 183, 183, 184, 184,
	185, 185, 185, 189, 189, 188, 188, 186, 186, 187,
	187, 187, 187, 340, 340, 444, 444, 445, 445, 440,
	440, 440, 443, 443, 443, 443, 443, 442, 442, 193,
	253, 253, 253, 268, 268, 268, 268, 252, 252, 252,
	208, 208, 207, 207, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 339,
	339, 283, 283, 284, 284, 225, 224, 224, 224, 224,
	224, 222, 223, 221, 221, 221, 221, 221, 220, 220,
	219, 219, 219, 318, 318, 217, 217, 215, 215, 215,
	214, 214, 214, 379, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 251, 251,
	251, 293, 293, 298, 298, 455, 455, 454, 194, 194,
	194, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	204, 204, 204, 363, 363, 363, 363, 364, 364, 364,
	364, 365, 365, 365, 361, 361, 362, 362, 302, 303,
	303, 403, 403, 359, 359, 360, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 410, 410, 410, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 466, 466, 466, 451, 451, 451, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 249, 249, 249,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 304, 304, 305, 305, 407,
	407, 407, 407, 407, 407, 408, 408, 409, 409, 409,
	409, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	291, 246, 246, 246, 306, 299, 299, 300, 300, 294,
	294, 294, 294, 294, 294, 294, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 295, 295,
	297, 297, 308, 308, 308, 307, 307, 307, 307, 307,
	307, 307, 206, 206, 206, 206, 288, 288, 288, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	196, 196, 196, 196, 200, 200, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	201, 201, 201, 201, 199, 199, 199, 199, 199, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 100, 101, 101, 198, 254,
	254, 384, 384, 387, 387, 385, 385, 386, 388, 388,
	388, 389, 389, 389, 390, 390, 390, 393, 393, 259,
	259, 259, 265, 265, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 7, 4, 1,
	3, 2, 2, 2, 1, 3, 3, 4, 0, 1,
	2, 1, 2, 2, 1, 2, 3, 2, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 2, 5, 5, 0, 2, 7, 0, 1,
	0, 1, 5, 5, 3, 3, 2, 4, 4, 4,
	4, 4, 1, 1, 1, 3, 3, 1, 1, 1,
	6, 8, 0, 1, 1, 1, 1, 5, 5, 0,
	1, 1, 3, 3, 3, 4, 6, 7, 4, 4,
	7, 8, 3, 3, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	4, 3, 1, 3, 1, 1, 3, 5, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 6, 3, 5, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 1, 3,
	2, 1, 5, 4, 4, 2, 0, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 1, 3, 4, 0,
	1, 0, 1, 1, 3, 1, 1, 0, 4, 1,
	3, 2, 1, 0, 8, 0, 4, 7, 4, 0,
	2, 0, 2, 0, 2, 0, 4, 1, 3, 1,
	1, 5, 3, 4, 6, 4, 5, 2, 3, 1,
	3, 6, 0, 3, 0, 1, 2, 4, 4, 0,
	1, 3, 1, 3, 3, 0, 1, 1, 0, 2,
	2, 0, 2, 3, 3, 3, 1, 3, 3, 3,
	3, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 7, 7, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 2, 0, 3, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 0, 1, 2, 4, 1, 3, 1,
	3, 2, 3, 1, 4, 3, 0, 1, 1, 2,
	5, 2, 2, 2, 0, 2, 3, 3, 0, 1,
	3, 1, 3, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 7, 1, 1,
	7, 1, 3, 0, 1, 1, 3, 1, 3, 0,
	1, 1, 1, 12, 1, 3, 0, 1, 1, 3,
	1, 1, 2, 4, 1, 1, 7, 7, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 0, 2,
	7, 8, 0, 2, 6, 0, 2, 2, 3, 3,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 0, 1, 1, 3, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 4, 1, 3, 3, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 7, 2, 1, 7,
	7, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 5, 6, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 1, 2, 3, 5, 1, 1,
	3, 0, 1, 0, 3, 0, 3, 3, 0, 3,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -491, -499, -2, -5, 555, -1, -4, -101, -75,
	-7, -103, -104, -8, -99, -9, -10, -12, -79, -94,
	-96, -98, -97, -39, -11, -93, -70, -71, -81, -87,
	-90, -91, -92, -105, -100, -102, -134, -106, 548, -76,
	-77, -78, -30, -29, -28, -27, -126, 554, 409, 12,
	458, -13, -14, -456, -15, 238, -271, -272, -273, -275,
	-500, -40, -41, -42, -49, -50, -51, -52, -53, -63,
	-64, -65, -43, -44, -45, -48, -46, -56, -55, -57,
	-58, -59, -60, -61, -62, -47, -129, -130, -66, -68,
	-67, -73, -69, -74, -128, 213, -72, 62, -82, -83,
	-84, -85, -86, -88, -89, 340, 346, 399, 547, 47,
	-135, -137, 558, 141, 142, 144, 145, -31, -32, -33,
	-34, -35, -36, -38, -37, 209, 14, 491, -16, -19,
	-17, -20, -18, -25, -26, -24, -21, -23, -127, -22,
	233, 232, 37, 296, 297, 298, 344, 231, 210, 13,
	30, 41, 322, -136, 68, 211, -138, 10, 560, -6,
	-3, -2, -113, -117, -121, -124, -125, -122, -123, -4,
	-101, 99, 223, 549, -268, 336, 550, 552, 551, 71,
	79, -262, -264, 340, 346, 547, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 461, 534, 535, 536, 537, 320, 321, 488,
	250, 274, 370, 277, 284, 141, 160, 154, 182, 174,
	149, 254, 289, 255, 78, 144, 444, 89, 421, 396,
	147, 269, 271, 273, 276, 256, 323, 170, 165, 268,
	252, 163, 257, 39, 258, 187, 259, 260, 493, 417,
	319, 423, 281, 394, 164, 418, 272, 420, 189, 193,
	435, 436, 158, 159, 425, 438, 186, 230, 42, 490,
	242, 439, 191, 185, 181, 447, 285, 283, 184, 157,
	180, 253, 51, 195, 194, 196, 390, 391, 392, 393,
	261, 262, 334, 434, 177, 166, 324, 150, 22, 442,
	237, 422, 347, 263, 278, 286, 190, 192, 244, 249,
	492, 398, 248, 282, 440, 162, 241, 270, 236, 443,
	151, 349, 264, 145, 275, 437, 446, 50, 362, 156,
	148, 227, 142, 246, 251, 11, 265, 266, 267, 288,
	287, 279, 178, 243, 183, 168, 155, 179, 143, 245,
	445, 363, 545, 322, 379, 176, 173, 247, 220, 441,
	424, 146, 383, 364, 171, 290, 541, 542, 543, 335,
	318, 291, 292, 169, 234, 415, 416, 293, 295, 389,
	311, 365, 397, 371, 366, 202, 299, 427, 429, 188,
	544, 300, 301, 302, 419, 303, 304, 305, 306, 339,
	-345, -343, -268, 547, 346, 340, 322, -177, -268, 559,
	-144, 38, -190, -268, -144, -72, -14, -13, -136, -137,
	-190, 217, -276, 23, 394, -80, 395, 213, 68, -268,
	-9, -92, -8, -99, -70, -134, 399, -274, -268, 296,
	296, -274, 217, -268, 248, 378, -395, 223, -349, -322,
	249, -348, -324, -351, -325, 31, 209, 211, 210, 245,
	14, 344, 219, 12, 10, 345, 231, 24, 25, 27,
	13, 346, 348, 28, 349, 352, 353, 354, 41, 357,
	358, 238, 71, 79, 74, 256, -176, -268, -300, -294,
	96, 239, -296, -289, -290, -292, -436, -430, -287, 68,
	123, 124, 131, 97, -291, -379, 35, 99, 498, 459,
	-247, -248, -249, -250, -251, -268, -431, -429, 74, 80,
	83, 86, 87, 85, 84, 167, 82, 75, 135, 136,
	-137, 71, -451, 506, -263, 527, 534, 535, 536, 537,
	526, 47, -401, -409, 216, -407, 134, 172, 234, 168,
	12, 129, 389, 169, 503, 523, 461, 507, 530, 500,
	501, 495, 496, 497, 499, 508, 510, 522, -410, 518,
	528, 529, 516, 531, 532, 533, 73, 72, 521, 520,
	509, 504, 505, 511, 494, 502, 512, 513, 519, 524,
	525, 328, 89, 329, 330, 451, 323, 331, 223, 394,
	56, 332, 333, 334, 335, 336, 458, 337, 57, 338,
	327, 238, 379, 339, 171, 188, 463, 462, 464, 455,
	452, 450, 453, 454, 456, 457, 514, 515, 517, -107,
	-108, 539, -153, -154, -240, 19, 6, 7, 8, 9,
	-489, 396, 492, 146, 143, -336, 146, 95, 151, 150,
	-336, 299, 244, 341, 220, 320, 379, 303, 248, -316,
	-314, -397, 293, 289, 218, 228, 227, 90, 451, 216,
	355, -467, -468, 206, 207, 208, -458, 484, -457, -268,
	330, 26, 217, 341, 244, 429, 427, 428, 430, 431,
	432, 433, -54, -411, -394, 424, 423, -280, 416, 422,
	414, 426, 417, 321, 305, 304, 209, 556, 485, -259,
	365, 397, 448, 449, 342, 398, 435, 437, 418, 89,
	175, 172, 220, 217, 320, 451, 379, 303, -467, 143,
	435, 437, 248, 378, 40, -342, 389, -341, -343, 436,
	447, 72, 73, 434, -259, 89, 415, 415, -154, -240,
	-153, -135, -137, -102, -456, 218, 320, 379, 248, 219,
	217, 220, 451, 296, 341, 244, 303, -396, -464, 31,
	-402, 203, 204, 205, 32, 33, -1, 103, 560, -294,
	-294, -6, 561, -6, -294, -268, -268, 138, -196, -200,
	-197, -199, -198, -202, -201, 172, 173, 134, 176, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 30,
	188, 234, 168, 169, 170, 171, 189, 154, 174, 489,
	197, 155, 198, 156, 199, 157, 200, 158, 159, 201,
	160, 163, 164, 165, 162, 137, 68, 137, 74, -160,
	240, -190, 137, -160, -154, -153, -154, -190, -252, -268,
	396, 106, -80, -80, 395, -459, -460, -461, -463, 213,
	395, 394, 137, 256, 15, -274, -274, 66, -190, -324,
	248, -349, -322, 35, 65, 138, 221, 138, 65, 68,
	342, 320, 379, 343, 451, 217, 355, 220, 248, 356,
	320, 379, 217, 220, 451, 248, 320, 217, 220, 379,
	248, 356, 414, 415, 220, 26, 347, 350, 351, 415,
	-415, 447, 138, 95, 92, 93, 94, -294, 113, -307,
	106, 107, 108, 109, 110, 111, 112, 120, 119, 130,
	123, 124, 125, 126, 127, 128, 129, 121, 122, 116,
	96, 114, 118, 115, 98, -137, -294, -300, 47, -292,
	-292, -292, -292, -379, -298, -294, 68, 68, 137, 74,
	-294, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, -408, 68, 68, -304, -305, 68, 68,
	-287, -252, 68, 74, 74, 68, 68, 68, 74, -305,
	-305, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, -154, 138, 68, -109, 38, -156, 21, -138, -137,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 80,
	440, 491, 149, 150, 151, -175, -268, -177, -168, -268,
	-312, 223, -312, -312, -312, -312, 219, -312, 217, 217,
	217, -312, -469, 153, 138, -458, -159, 68, -279, 114,
	118, 23, 246, 246, 246, -279, 283, -501, -502, 15,
	116, -277, -502, -277, -277, -279, -503, 219, 425, 42,
	247, 246, -155, -156, -155, 419, 415, -366, 420, 421,
	-281, -502, -280, -279, -279, -280, -279, -279, -279, 217,
	220, 451, 303, 557, -501, -501, 30, 30, -395, -190,
	-395, 485, -260, -268, -395, -395, -470, 222, -496, -495,
	438, -498, 440, 143, -343, 143, -343, -324, 248, 248,
	138, 106, 23, -344, 106, 117, -343, -343, -344, -344,
	-211, 40, -267, 134, -268, 74, -211, 40, -493, -492,
	-190, -155, -138, -137, 69, 69, 69, -395, -395, -395,
	-395, -395, -395, -395, -395, -274, -168, -177, 223, -395,
	-139, -140, 125, -294, -268, -139, -3, -115, -114, 100,
	101, 103, 550, 336, 549, 553, 547, -343, 40, -390,
	363, 362, -384, -386, 68, -385, 68, -385, -385, -385,
	68, 68, -387, 68, -387, -387, -384, -388, 68, -388,
	-389, 68, -388, -268, -299, -300, -268, 38, -404, 47,
	-134, 68, 30, 68, -268, -405, 47, -134, 68, 30,
	-155, -109, -156, 137, 80, 74, -80, 69, 138, -462,
	86, 87, -465, 186, 178, -268, -95, 74, -7, -8,
	-9, -10, -39, -70, -134, -432, -430, 68, 31, 388,
	65, 15, -350, 217, 451, 341, 244, 220, 320, -348,
	-331, -328, -326, -267, -324, -327, -326, -353, -252, 415,
	-110, 400, 295, -294, -294, -294, -294, -294, 85, 96,
	318, 86, 87, -289, -308, 31, 291, 292, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	-297, -306, -379, 68, 116, 114, 118, 115, 98, -292,
	-292, -290, -290, 69, 138, -455, -454, 100, -294, -294,
	-268, -452, -453, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 332, 327, 333, 331, 323, 339,
	334, 335, 171, 482, 483, 476, 477, 478, 479, 480,
	481, -299, -299, -294, -452, -299, -246, 32, 31, -300,
	-300, -300, 69, -294, -466, 316, 315, 317, -157, -268,
	-299, 69, 69, 69, 80, -300, -300, -299, -290, -299,
	-453, -246, -246, -300, -300, -246, -246, -246, -246, 125,
	-246, -246, -246, -246, -246, -246, -246, -246, 69, 69,
	69, -155, -108, -413, -412, -294, 40, 540, -109, -294,
	-152, -151, -294, -490, 74, 441, 442, 147, 150, 149,
	34, 68, 68, 137, -190, 96, -472, -268, -332, -329,
	-326, -268, -322, -268, -268, -312, -312, -312, -190, -470,
	-457, 34, -158, -268, -236, 16, -292, -292, -326, 248,
	-501, -279, -279, -261, -260, -281, -276, -281, -281, -236,
	-502, -279, -279, -281, -277, -236, -268, 415, -236, -236,
	-366, -278, -268, -278, -312, -260, -261, -261, -190, -226,
	-227, 214, 211, 210, -233, 212, 360, 250, -313, 254,
	78, 255, 396, 256, 219, 258, 259, 260, 230, 261,
	262, 263, 389, 264, 265, 266, 267, 343, 6, 306,
	40, -472, -472, 30, 30, -332, -268, -147, -142, -146,
	-143, -148, -239, -241, -145, 68, -190, -137, -268, 138,
	439, 441, 442, -496, -344, -496, -344, 31, 388, -347,
	388, 31, -322, -341, 435, 437, -337, 74, 389, -327,
	-346, 65, 134, -412, -344, -344, -346, -346, 133, 138,
	-494, 440, 441, 206, -109, -192, -190, -472, -331, -322,
	-268, -192, -192, -268, 68, 35, -268, -235, 138, -234,
	15, -269, -268, 34, 74, 137, -235, -116, -114, 102,
	-294, -6, 549, -294, -6, -6, -294, -6, -294, -393,
	364, 80, 80, -254, 74, -254, 80, 80, 80, 69,
	74, -335, 65, -406, -301, -450, 539, -162, 69, -157,
	-448, -449, -157, -161, -268, -406, -162, 69, -448, -109,
	-109, -268, 23, -80, -460, 137, 138, -158, -350, -330,
	-327, -352, 125, -268, -338, 138, 491, 562, 72, 221,
	-482, -481, 380, 69, 138, -416, 222, 458, 74, 563,
	202, 85, 318, 86, 87, -379, -300, -297, -292, -292,
	-290, -290, -295, 235, -295, 95, -294, -293, -454, 102,
	-294, 34, 138, 66, 137, 69, 69, 15, 15, 69,
	-294, 69, 69, 69, 69, 15, 15, -294, 69, 137,
	69, 69, 69, 69, 66, 69, 138, 69, 138, -300,
	-294, 69, 69, -294, -294, -294, -300, 69, -294, -294,
	-294, -294, -294, -294, -294, -294, -360, 410, -360, -360,
	138, 69, 74, 138, 22, 138, -149, 36, 37, 148,
	151, 151, 150, -176, -178, -179, -180, -181, -182, 116,
	139, 140, -169, -170, -171, -172, -196, -252, 173, 176,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 234, 168, 169, 170, 171, 189, 154, 174, 155,
	156, 157, 158, 159, 160, 163, 164, 165, 162, -268,
	-159, 35, -475, 367, -483, 138, 40, -481, 451, -315,
	66, -132, 15, -190, -190, -190, -203, 34, 15, -141,
	-191, -268, 68, 69, 138, -294, -323, 66, -268, -261,
	-236, -236, -190, -268, -236, -236, -279, -281, -281, -277,
	137, -260, -159, 138, -189, -193, 225, -186, -188, -252,
	-284, -187, 228, -445, 226, 224, 90, 229, 280, 91,
	219, -228, 219, 91, -268, 225, 229, 224, -229, 219,
	221, -265, 106, -265, -259, 133, -265, -265, -265, -265,
	257, 257, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, 68, -476, 367, 30,
	326, 326, -483, -133, 320, 30, -242, -243, -244, -245,
	54, 58, 60, 55, 56, 57, 61, 30, 138, -266,
	-270, 34, -268, 74, -266, -137, -142, -147, -266, 68,
	-495, -497, 443, 440, 446, -346, -346, 221, 68, 106,
	-346, -346, 40, -267, -492, 447, 441, -167, 23, 138,
	65, -169, -177, -236, -140, -142, -268, 74, -268, 125,
	-236, 103, -6, 101, -120, -119, -118, 104, 547, 553,
	103, 103, 103, 69, 69, 69, 138, 69, 69, 69,
	138, 69, 138, -419, 420, 39, 138, 68, 69, 138,
	47, 138, 106, 69, 138, 69, 47, -167, 137, 396,
	-268, -430, 69, -352, 138, 221, 137, 137, -328, 346,
	-267, -330, 20, 491, -252, 38, -258, -257, 74, 563,
	69, -295, -295, 95, -292, -289, 69, 103, -294, 101,
	-194, -196, 362, 363, -195, -201, 134, 172, 234, 171,
	170, 168, 362, 363, -211, -268, -294, -294, 69, -294,
	-294, 15, -268, -211, -290, -294, -154, 69, -359, -360,
	-359, 69, 69, 69, 69, -359, 69, 69, 69, 69,
	69, 69, 69, 69, 68, -412, -419, -294, -294, -151,
	-150, 43, 151, 354, 69, 138, -252, 69, 138, -196,
	34, -478, 422, 369, -265, -286, -285, 322, 41, -399,
	389, 375, 376, -329, 248, -268, 65, 310, 311, 312,
	313, -310, -311, -309, -313, -472, 68, 68, 68, -380,
	300, -196, -190, -141, -268, 15, 138, -471, 137, -1,
	-268, -322, -279, -236, -502, -236, -279, -279, -281, -268,
	34, -227, -231, 44, 46, -193, -196, -187, -444, -445,
	-312, -268, 91, -444, 91, 68, -268, -268, -268, 91,
	91, -268, -230, -278, 80, 80, -265, -265, 80, 74,
	74, 74, -265, -265, 80, 74, -270, 80, 80, 80,
	80, 40, 74, -216, 40, 268, 272, 269, 270, 271,
	80, 40, 80, 40, 80, 40, -268, 68, -446, -447,
	74, -478, -265, 326, -343, 106, -286, -131, 78, 31,
	-163, 214, 211, -472, -334, -333, -252, -146, -146, -146,
	-146, 54, 54, 54, 59, 54, 59, 54, -244, -334,
	-148, -159, -270, 69, -488, -487, -486, -484, 62, 222,
	63, -299, 440, 444, 445, -330, -282, 74, -337, 13,
	-190, -190, 69, -238, 17, 137, -238, 99, -6, -116,
	-118, -294, -6, -294, 549, 336, 550, 74, 80, 80,
	-427, 406, 401, 403, 91, -301, -414, -413, 47, -134,
	-157, -406, -449, -412, -268, 47, -134, -406, -268, 80,
	15, -327, -322, 125, 125, -268, 347, -338, 74, 368,
	74, 217, 564, 138, 106, -258, -289, -294, 69, -204,
	159, 158, -204, 69, -385, -385, -384, -387, -384, -204,
	-204, 69, 69, 23, 69, 69, 69, -294, 69, 69,
	138, -403, 460, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -303, -302, 240, -427,
	44, 45, 74, 74, -180, -196, 215, -171, 40, -134,
	-479, 78, -473, 74, -268, -480, 78, 370, 136, 324,
	40, 371, 372, 386, 319, 80, 80, 377, -474, -268,
	-133, -190, -309, -259, 133, 259, 303, -183, -184, -185,
	-193, -186, -188, -183, -183, -381, 302, 20, 80, 124,
	-160, 66, 137, -142, -191, -268, 125, 69, -236, -268,
	-236, -236, -279, -134, -252, -231, -208, -207, -205, 85,
	96, 40, 360, -206, 78, 133, 273, 251, 274, -225,
	-283, 65, 366, 224, 90, 91, 348, -284, -442, -268,
	-440, -442, -268, -440, -440, -312, -294, -268, -232, 308,
	309, -211, -211, 74, 74, -212, 251, -192, 69, 138,
	106, -479, -473, 106, -344, 74, -480, 74, 138, -163,
	-163, -236, 138, 106, -165, -164, 65, 66, -166, 65,
	-164, 54, 54, -236, -486, -485, 23, -445, -445, -445,
	69, 69, -237, 18, 20, 125, -237, 103, 101, 103,
	103, -268, 69, 69, -391, 541, -423, -425, 401, 20,
	20, 13, 69, -406, -406, -322, -338, 389, -190, -257,
	74, 564, -294, 69, -294, 69, 74, -154, 20, -391,
	-173, -196, -287, 74, -477, 380, 74, 74, 80, 40,
	80, 136, 373, -400, -131, 68, -265, -265, -265, -268,
	69, 138, 69, 69, -382, 239, 80, 124, 80, 124,
	80, -266, -142, -268, -236, -471, 137, -236, -236, -205,
	85, -290, 74, -213, -267, 134, -214, 40, 272, 268,
	-215, 40, 252, 253, -217, 68, 280, 13, 91, 91,
	-190, 68, 68, 66, 290, 68, 68, -442, 69, 252,
	253, 69, -447, 74, -477, 74, -346, -472, -154, -333,
	-412, -294, 68, -294, 68, 54, 19, 17, -294, -300,
	223, -6, 550, 336, -218, 542, 74, 20, 74, -421,
	74, -334, -112, -417, -366, 69, 69, -359, -362, -361,
	-365, 407, 282, 413, -300, -218, 490, 20, 491, 323,
	40, 80, 40, 374, -317, -319, -252, 68, -211, -213,
	74, -209, -210, -233, -185, -111, -110, -209, -383, 142,
	80, 124, 80, 80, -236, -236, 80, 68, -407, -318,
	68, -317, -317, -443, 310, 311, 312, 314, 313, -443,
	-317, -317, 68, -340, -339, 281, 96, -155, -158, -441,
	-268, 224, 20, 20, -268, -268, -255, 543, 80, 74,
	403, -392, 544, -426, 406, -420, -418, 401, 402, 403,
	404, 69, -364, 98, 373, 377, -288, -291, 80, 83,
	167, 136, -255, -174, -268, 74, 368, 74, 323, 69,
	138, -384, -294, -354, 240, 138, -233, -112, -354, -398,
	150, 301, 491, 80, 124, 80, -154, 69, -294, -304,
	-220, -219, 487, -317, 69, 69, 69, 69, -317, 281,
	69, 69, 138, 68, 20, 74, -428, 222, -424, -425,
	405, -418, 20, 403, 20, 20, -363, -364, 377, -288,
	-291, 539, 411, 411, 411, 34, 389, -320, -319, -149,
	69, -355, 289, 20, -233, -355, 301, 80, 124, 80,
	-155, 69, -224, -222, -223, 65, 418, 278, 279, 69,
	-320, -320, -320, -320, 69, -268, 224, -256, -268, -421,
	-435, 68, 80, -423, -422, -424, 20, -421, 20, -421,
	-421, 95, 412, 412, 412, 74, -321, 230, 78, 491,
	308, 309, -149, 20, -356, 282, 283, -357, -370, 285,
	80, -339, -223, 65, -222, 65, 14, 13, -225, 69,
	138, -439, 30, 69, -434, -433, -253, -429, -268, 406,
	407, 74, -421, -363, -265, 74, 307, -252, 68, -368,
	286, 68, -366, 68, -366, 91, 311, -221, 275, 276,
	30, 150, -221, -268, -438, -437, -436, 69, 138, 137,
	80, -268, -353, -358, 287, 80, -290, 68, -290, 68,
	-367, 284, 68, 85, 40, 277, 138, 106, -433, -268,
	69, -372, 68, 20, 69, -353, 69, -353, 68, 106,
	-290, -437, 40, -294, 137, -373, -371, 240, -357, 69,
	69, 69, -353, 80, 69, -268, 69, 138, -268, -369,
	288, 69, -371, -374, 47, 80, -378, -375, 68, -233,
	242, 116, -378, -233, -377, -376, 287, 243, 68, 69,
	138, -268, 239, 68, -300, -376, -375, -300, 69, 69,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 774, 775, 776, 777, 778, 0, 0, 0,
	0, 548, 549, 0, 520, 0, 0, 0, 0, 0,
	0, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 351,
	352, 353, 354, 355, 356, 0, 285, 281, 206, 207,
	208, 209, 210, 292, 293, 390, 0, 0, 0, 0,
	629, -2, 53, 274, 0, 265, 265, 779, 780, 781,
	782, 783, 784, 785, 786, -2, 561, 0, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	340, 341, 342, 336, 337, 339, 338, -2, 0, 561,
	0, 0, 0, 649, 0, 0, 666, 688, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1073,
	1074, 1075, 1076, -2, 1550, 1528, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	0, 258, 256, 1528, 1550, 1610, 1643, 0, 791, 0,
	607, 0, 612, 1034, 607, 286, 550, 551, 649, 649,
	518, 0, 322, 0, 1541, 326, 0, 0, 0, 515,
	316, 317, 318, 319, 320, 321, 0, 0, 773, 0,
	0, 312, 0, 280, 1601, 0, 0, 0, 0, 0,
	0, 150, 862, 152, 864, 156, 163, 0, 0, 168,
	169, 172, 173, 174, 175, 176, 0, 180, 0, 182,
	185, 0, 187, 188, 0, 191, 192, 193, 0, 203,
	204, 205, 865, 866, 867, -2, 81, 789, 1465, 1357,
	0, 1364, 1365, 1376, 1387, 1146, 1147, 1148, 1149, 0,
	0, 0, 0, 0, 1156, 1157, 0, 1173, 1704, 0,
	1163, 1164, 1165, 1166, 1167, 90, 102, 103, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 0, 1330,
	1133, 1073, 0, 1712, 0, 1732, 1737, 1738, 1739, 1740,
	1731, 0, 0, 1315, 0, 1305, 0, 0, -2, -2,
	0, 0, 1669, -2, 1709, 1728, 1736, 1713, 1735, 1706,
	1707, 1701, 1702, 1703, 1705, 1714, 1716, 1727, 0, 1723,
	1733, 1734, 0, 0, 0, 0, 104, 105, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1321, -2, 1323, 1324, 1326, -2, 1328, 1329, -2,
	1332, 1333, 1334, -2, -2, 1337, 1338, 1339, 1340, 1341,
	1342, 1345, -2, -2, -2, -2, 1317, 1318, 1319, 1320,
	1309, 1310, 1311, 1312, 1313, 1314, -2, -2, -2, 649,
	724, 0, -2, 0, 0, 0, 671, 674, 677, 680,
	0, 54, 55, 275, 276, 264, 266, 0, 270, 0,
	263, 0, 0, 0, 894, 894, 894, 894, 894, 0,
	894, 0, 0, 0, 894, 869, 870, 871, 892, 893,
	940, 566, 562, 563, 564, 565, 637, 0, 639, 642,
	495, 442, 0, 0, 0, 495, 0, 456, 448, 0,
	0, 0, 495, 0, 0, 644, 644, 0, 498, 505,
	495, 495, -2, 495, 495, 495, 0, 0, 462, 463,
	464, 448, 448, 467, 468, 469, 480, 481, 506, 1489,
	0, 0, 390, 0, 390, 0, 390, 390, 568, 1638,
	1548, 1615, 1601, 0, 0, 231, 1669, 236, 0, 1549,
	1564, 0, 0, 1582, 0, -2, 0, 302, 644, 0,
	650, 0, 649, 0, 0, 390, 390, 390, 390, 390,
	390, 390, 390, 0, 0, 0, 390, 0, 0, 689,
	690, 685, 686, 687, 691, 692, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 60, 59, 0, 1466, 1484,
	1421, 1422, 1423, 1471, 1425, 1475, 1475, 1475, 1475, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 0, 0,
	1464, 1444, 1473, 1473, 1473, 1471, 1468, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1478, 1478, 1481, 1478, 0, 1355, 0, 0, 0,
	0, 611, 0, 0, 644, -2, 0, 519, 323, 1077,
	0, 0, 327, 328, 0, 0, 343, 0, 346, 331,
	332, 333, 0, 130, 0, 314, 315, 0, 0, 282,
	0, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	160, 157, 164, 167, 177, 184, 0, 196, 198, 201,
	158, 165, 170, 171, 178, 199, 159, 161, 162, 166,
	200, 202, 179, 183, 197, 181, 186, 189, 190, 195,
	0, 131, 0, 0, 0, 0, 0, 1363, 0, 0,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1357, 0, 0, 1152,
	1153, 1154, 1155, 1158, 0, 1174, 0, 0, 0, 1419,
	0, 1355, 1355, 0, 1355, 1351, 0, 0, 0, 0,
	0, 0, 1355, 1291, 0, 0, 1293, 1306, 0, 0,
	1295, 1296, 0, 1299, 1300, 1355, 0, 1355, 1304, 1287,
	1288, 0, 1351, 1351, 0, 0, 1351, 1351, 1351, 1351,
	1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 0, 0,
	0, 644, 0, 0, 632, 0, 613, 0, 668, 670,
	0, 672, 673, 675, 676, 678, 679, 681, 682, 56,
	0, 0, 268, 0, 273, 0, 788, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 894, 894,
	894, 0, 568, 567, 0, 638, 0, 0, 697, 0,
	0, 0, 448, 495, 495, 454, 455, 450, 449, 501,
	502, 498, 0, 498, 498, 697, 0, 474, 475, 476,
	495, 495, 482, 645, 483, 484, 498, 0, 503, 504,
	697, 0, 0, 697, 697, 0, 492, 493, 494, 0,
	0, 894, 0, 511, 450, 450, 1490, 1491, 0, 903,
	0, 0, 0, 514, 0, 0, 0, 569, 211, 214,
	0, 217, 0, 1638, 0, 1638, 0, 224, 0, 0,
	0, 0, 0, 0, 254, 255, 0, 0, 0, 0,
	245, 248, 1028, 1029, 859, 860, 249, 250, 294, 295,
	0, 613, 667, 669, 663, 664, 665, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 546, 0, 0,
	705, 699, 701, 768, 90, 705, 8, 77, 74, 0,
	19, 0, 0, 19, 19, 0, 19, 259, 0, 1487,
	1485, 1486, 1424, 1472, 0, 1449, 0, 1450, 1451, 1452,
	0, 0, 1445, 0, 1446, 1447, 1448, 1440, 0, 1441,
	1442, 0, 1443, 257, 0, 1356, 792, 0, 586, 599,
	581, 0, 588, 0, 1035, 570, 599, 572, 0, 588,
	613, 635, 613, 0, 324, 0, 329, 0, 0, 345,
	347, 348, 349, 334, 335, 516, 310, 311, 303, 304,
	305, 306, 307, 308, 309, 313, 100, 0, 283, 284,
	0, 0, 0, 144, 145, 146, 147, 148, 149, 151,
	135, 536, 538, 851, 863, 0, 854, 0, 154, 194,
	127, 0, 0, 1358, 1359, 1360, 1361, 1362, 1366, 0,
	1368, 1370, 1372, 1374, 0, 1392, -2, -2, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1377, 1390, 1391, 0, 0, 0, 0, 0, 0, 1388,
	1388, 1383, 0, 1150, 0, 1171, 1175, 0, 0, 0,
	91, 1350, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 0, 0, 1357, 0, 0, 0, 1352, 1353, 0,
	0, 0, 1246, 0, 0, 1252, 1253, 1254, 0, 594,
	0, 1316, 1292, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 723, 725, 0, 603, 605, 606, 0, 633, 646,
	651, 652, 655, 52, 57, 277, 278, 0, 0, 272,
	0, -2, 806, 0, 642, 0, 0, 818, 388, 845,
	0, 0, 861, 884, 890, 0, 0, 0, 918, 0,
	640, 0, 0, 737, 441, 0, 496, 497, 445, 1601,
	450, 697, 697, 457, 451, 458, 500, 459, 460, 461,
	0, 697, 697, 495, 498, 485, 499, 498, 488, 489,
	0, 507, 512, 508, 0, 510, 465, 466, 642, 358,
	359, 0, 0, 0, 364, 0, 1492, 1492, 0, 1492,
	1492, 1492, 1492, 0, 0, 1492, 1492, 1492, 1492, 1492,
	1492, 1492, 1492, 1492, 1492, 1492, 1492, 1492, 1492, 0,
	904, 385, 0, 0, 0, 388, 835, 710, 0, 711,
	712, 708, 739, 763, 763, 0, 763, 743, 1034, 0,
	0, 222, 223, 212, 0, 213, 0, 225, 226, 0,
	228, 229, 230, 237, 1548, 1615, 232, 234, 0, 0,
	238, 251, 252, 253, 0, 0, 243, 244, 0, 0,
	297, 298, 300, 0, 661, 533, 1032, 534, 535, 539,
	0, 541, 542, 543, 806, 0, 840, 697, 0, 706,
	0, 702, 769, 0, 771, 0, 697, 0, 75, 19,
	0, 68, 65, 0, 0, 0, 0, 0, 1467, 1420,
	1488, 0, 0, 0, 1469, 0, 0, 0, 0, 58,
	615, 577, 0, 580, 596, 0, 600, 0, 0, 592,
	585, 589, 0, 0, 609, 571, 0, 0, 576, 661,
	636, 1078, 0, 330, 344, 0, 0, 0, 0, 138,
	848, 0, 139, 143, 133, 0, 0, 0, 853, 0,
	850, 855, 0, 153, 0, 0, 128, 129, 909, 914,
	0, 1367, 1369, 1371, 1373, 1375, 0, 1378, 1388, 1388,
	1384, 0, 1379, 0, 1381, 0, 1358, 0, 1176, 0,
	0, 0, 0, 0, 0, 1236, 1237, 0, 0, 1241,
	0, 1243, 1244, 1245, 1247, 0, 0, 0, 1251, 0,
	1290, 1308, 1294, 1297, 0, 1301, 0, 1303, 0, 649,
	0, 1213, 1213, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 0, 0, 1168, 0, 1169, 1170,
	0, 726, 615, 0, 0, 0, 658, 656, 657, 279,
	267, 269, 0, 0, 0, 794, 795, 797, 0, 800,
	801, 802, 0, 807, 808, 810, 811, 0, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1533,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 805,
	0, 895, 825, 1492, 392, 0, 0, 847, 0, 0,
	0, -2, 0, 0, 0, 0, 920, 0, 0, 0,
	555, 559, 23, 643, 0, 698, 443, 0, 444, 495,
	452, 453, 697, 1034, 477, 478, 697, 495, 495, 498,
	0, 509, 0, 903, 361, 368, 0, 1043, 1044, 0,
	0, 1048, 1055, 894, 1103, 0, 1055, 0, 0, 1057,
	1058, 362, 0, 0, 374, 0, 0, 0, 363, 0,
	0, 0, 1493, 0, 1492, 1492, 0, 0, 0, 0,
	1492, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 825, 1492, 0,
	0, 0, 392, 832, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 729, 0, 0, 0, 0, 0, 642,
	764, 0, 766, 767, 741, -2, 0, 710, 746, 1355,
	215, 216, 0, 0, 221, 239, 241, 0, 0, 0,
	240, 242, 246, 247, 296, 299, 301, 631, 0, 0,
	0, 0, 547, 695, 700, 707, 770, 772, 91, 703,
	695, 0, 78, 19, 77, 69, 70, 0, 19, 0,
	0, 0, 0, 1477, 1476, 1462, 0, 1463, 1474, 1479,
	0, 1482, 0, 619, 0, 0, 599, 601, 0, 0,
	599, 0, 0, 608, 0, 0, 599, 634, 0, 0,
	517, 101, 350, 0, 0, 0, 0, 0, 537, 0,
	852, 135, 0, 0, 155, 0, 0, 912, 0, 914,
	1354, 1380, 1382, 0, 1389, 1385, 1151, 1159, 1172, 0,
	0, 1178, 1190, 1190, 0, 1181, 1475, 1475, 1184, 1471,
	1473, 1471, 1190, 1190, 0, 92, 0, 0, 1242, 0,
	0, 0, 595, 0, 0, 0, 1211, 1213, 1218, 1214,
	1219, 1213, 1213, 1213, 1213, 1224, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1209, 604, 619, 647, 648, 653,
	654, 0, 271, 0, 0, 799, 0, 0, 0, 812,
	0, 828, 826, 827, 0, 842, 393, 394, 395, 396,
	0, 0, 0, 846, 0, 835, 0, 885, 886, 887,
	888, 889, -2, 898, 0, 0, 1036, 1036, 1036, 928,
	0, 919, 607, 0, -2, 0, 0, 557, 0, 0,
	738, 446, 697, 470, 0, 486, 697, 697, 495, 513,
	0, 360, 366, 369, 0, 368, -2, 1047, 1067, 1056,
	1067, 1104, 1067, 1067, 894, 0, 372, 373, 375, 0,
	377, 0, 365, 371, 987, 988, 0, 0, 991, 992,
	993, 994, 0, 0, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1022, 1023, 1024, 1025, 1026, 1027,
	1007, 1008, 1009, 1010, 1011, 1012, 1019, 0, 0, 1016,
	0, 828, 0, 0, 0, 0, 842, 834, 0, 836,
	837, 0, 0, 578, 697, 289, 0, 733, 727, 0,
	716, 731, 732, 719, 0, 721, 0, 717, 718, 697,
	709, 740, 765, 742, 745, 747, 748, 754, 0, 0,
	0, 0, 218, 219, 220, 227, 0, 412, 233, 662,
	1033, 540, 545, 693, 0, 0, 693, 73, 76, 0,
	71, 0, 0, 0, 0, 63, 61, 1470, 0, 0,
	621, 115, 0, 0, 0, 597, 0, 602, 599, 584,
	593, 583, 590, 591, 610, 599, 575, 574, 1079, 325,
	0, 849, 135, 140, 141, 142, 136, 134, 856, 0,
	858, 0, 910, 914, 0, 0, 1386, 1177, 1160, 1179,
	1191, 1192, 1180, 1161, 1182, 1183, 1185, 1186, 1187, 1188,
	1189, 1162, 1238, 0, 1240, 1248, 1249, 0, 1298, 1302,
	0, 0, 0, 1217, 1220, 1221, 1222, 1223, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 649, 1210, 0, 621,
	659, 660, 787, 790, 796, 798, 0, 809, 0, 816,
	817, 0, 0, 820, 821, 830, 0, 0, 0, 398,
	399, 0, 0, 0, 411, 407, 408, 409, 389, 841,
	832, 0, 899, 1492, 1492, 1492, 0, 0, 1037, 1038,
	1040, 1041, 1042, 0, 0, 931, 0, 0, 922, 0,
	763, 0, 0, 697, 556, 559, 560, 641, 447, 697,
	490, 487, 697, 357, 370, 367, 1069, -2, 1082, 1084,
	0, 0, 1087, 1088, 0, 0, 0, 0, 1125, 1094,
	0, 0, 1098, 0, 1404, 1405, 0, 1102, 0, 1068,
	0, 1059, 1068, 0, 0, 1067, 0, 376, 378, 379,
	380, 989, 990, 995, 996, 1013, 0, 0, 1015, 0,
	0, 381, 0, 0, 0, 382, 387, 833, 0, 838,
	839, 649, 0, 0, 713, 734, 0, 0, 714, 0,
	715, 720, 722, 288, 749, 0, 0, 751, 752, 753,
	744, 235, 683, 0, 0, 704, 684, 0, 19, 0,
	0, 66, 1480, 1483, 623, 0, 620, 116, 0, 0,
	0, 0, 598, 582, 573, 137, 132, 857, 118, 913,
	915, 911, 0, 1250, 0, 1213, 1212, 1206, 0, 623,
	0, 815, 813, 829, 819, 0, 843, 844, 0, 400,
	401, 0, 404, 410, 831, 0, 0, 0, 0, 891,
	-2, 0, 0, -2, 934, 0, 929, 0, 921, 0,
	924, 697, 697, -2, 553, 558, 0, 471, 491, 1083,
	1085, 1086, 1089, 1090, 1030, 1031, 1091, 1130, 1131, 1132,
	1092, 1127, 1128, 1129, 1093, 0, 0, 0, 1402, 1403,
	1123, 0, 0, 0, 0, 0, 0, 0, 1053, 1020,
	1021, 1014, 1017, 1018, 386, 383, 384, 579, 644, 290,
	291, 735, 0, 728, 758, 755, 0, 0, 694, 696,
	67, 72, 0, 0, 625, 0, 622, 0, 616, 618,
	126, 587, 88, 109, 0, 1239, 1289, 1216, 0, 1207,
	0, 1201, 1202, 1203, 1208, 625, 0, 0, 0, 397,
	402, 0, 405, 406, 0, 880, 1471, 0, 900, 901,
	902, 941, -2, 984, 1039, 906, 118, 941, 925, 0,
	932, 0, 930, 923, 649, 554, 0, 0, 1305, 1118,
	0, 0, 0, 1060, 1062, 1063, 1064, 1065, 1066, 1061,
	0, 0, 0, 1052, 1054, 1099, 0, 287, 0, 0,
	759, 761, 756, 757, 62, 64, 79, 0, 624, 117,
	0, 80, 0, 106, 0, 119, 120, 0, 0, 0,
	0, 1215, 1204, 0, 0, 0, 0, 0, 1406, 1407,
	1408, 0, 614, 0, 814, 822, 0, 824, 403, 873,
	0, 655, 0, 943, 0, 903, 986, 908, 943, 917,
	0, 927, 0, 936, 0, 933, 644, 1126, 0, 1097,
	1106, 1119, 0, 0, 873, 873, 873, 873, 0, 1100,
	736, 750, 0, 0, 0, 89, 93, 0, 115, 112,
	0, 121, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 1197, 1198, 1199, 1200, 0, 823, 872, 881, 882,
	655, 905, 0, 980, 985, 907, 926, 935, 0, 938,
	552, 1095, 1105, 1107, 1108, 0, 1120, 1121, 1122, 1124,
	1045, 1046, 1049, 1050, 0, 760, 762, 0, 627, 617,
	82, 0, 0, 110, 111, 113, 0, 122, 0, 124,
	125, 0, 1194, 1195, 1196, 803, 874, 1492, 0, 0,
	878, 879, 883, 0, 968, 0, 0, 974, 0, 981,
	937, 1096, 1109, 0, 1110, 0, 0, 0, 1051, 626,
	0, 916, 0, 94, 0, 96, 98, 99, 1070, 107,
	108, 114, 123, 1205, 0, 876, 0, 944, 0, 946,
	0, 0, 0, 0, 0, 978, 0, 1111, 1113, 1114,
	0, 0, 1112, 628, 83, 84, 0, 95, 0, 0,
	875, 877, 0, 948, 0, 969, 0, 0, 0, 0,
	0, 0, 0, 1115, 1117, 1116, 0, 0, 97, 1071,
	945, 942, 0, 980, 970, 0, 972, 0, 0, 0,
	0, 85, 86, 87, 0, 0, 950, 0, 966, 971,
	973, 975, 0, 979, 977, 1072, 949, 0, 962, 947,
	0, 976, 951, -2, 0, 967, 952, -2, 0, 960,
	0, 0, 953, 961, 0, 956, 0, 0, 0, 955,
	0, -2, 963, 0, 0, 957, -2, 0, 965, 964,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 97, 3, 3, 3, 128, 120, 3,
	68, 69, 125, 123, 138, 124, 137, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 561, 560,
	107, 106, 108, 3, 562, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 563, 119, 564, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 98, 99, 100, 101, 102, 103, 104,
	105, 109, 110, 111, 112, 113, 114, 115, 116, 117,
	118, 121, 122, 127, 129, 132, 133, 134, 135, 136,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:724
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:731
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:737
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:745
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:751
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:755
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:828
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:848
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:854
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:861
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:869
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:875
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:884
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:902
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:910
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:936
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:946
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:962
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:976
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:982
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:986
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1001
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1015
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1034
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1040
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1061
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1085
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1091
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1095
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1108
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1120
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1142
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1155
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1161
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1170
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1181
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1185
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1191
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1195
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1201
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1205
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1211
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1235
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1254
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1271
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1286
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1298
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1305
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1314
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1338
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1342
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1348
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1354
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1372
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1389
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1412
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1416
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1420
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1435
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1459
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1548
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1552
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1556
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1560
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1564
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1568
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1575
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1579
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1601
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1605
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1611
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1615
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1619
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1631
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1635
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1639
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1820
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1827
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1844
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1848
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1854
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1861
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1877
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1881
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1891
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1897
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1920
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1954
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1987
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1991
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1997
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2005
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2014
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2062
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2099
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2107
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2130
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2134
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2138
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2144
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2154
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2158
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2164
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2168
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2185
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2190
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2194
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2198
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2202
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2206
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2210
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2218
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2263
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2276
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2300
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2322
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2326
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2332
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2348
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2352
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2358
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2364
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2368
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2382
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2394
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2437
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2459
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2489
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2530
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2534
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2540
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2551
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2552
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2553
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2573
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2584
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2593
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2597
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2603
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2614
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2618
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2622
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2626
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2645
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2651
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2667
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2675
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2689
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2710
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2718
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2727
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2731
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2738
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2750
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2779
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2796
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2816
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2820
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2829
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2849
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2853
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2857
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2861
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2873
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2897
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2911
		{
			yyVAL.item = nil
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2916
		{
			yyVAL.item = nil
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2955
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2964
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2981
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2992
		{
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2996
		{
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3041
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3053
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3065
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3074
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3082
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3098
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3102
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3115
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3125
		{
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3127
		{
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3159
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3169
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3254
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3272
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3276
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3280
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3285
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3289
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3295
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3308
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3312
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3347
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3353
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3359
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3363
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3367
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3377
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3427
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3431
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3437
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3455
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3477
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3483
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3516
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3521
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3528
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3544
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3557
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3568
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3572
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3578
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3583
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3590
		{
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3592
		{
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3595
		{
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3604
		{
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3608
		{
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3613
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3622
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3635
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3643
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3650
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3657
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3687
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3691
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3697
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3710
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3718
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3732
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3751
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3755
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3764
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3768
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3774
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3783
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3787
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3793
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3797
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3803
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3807
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3813
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3818
		{
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3829
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3833
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3840
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3849
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3855
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3859
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3865
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3869
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3878
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3891
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3898
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3905
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3923
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3942
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3948
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3959
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3972
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3976
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3981
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3985
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3992
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3997
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4004
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4010
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4014
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4026
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4030
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4036
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4043
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4052
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4056
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4062
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4074
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4083
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4089
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4097
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4106
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4118
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4122
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4128
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4133
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4137
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4141
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4146
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4150
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4154
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4163
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4171
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4175
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4179
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4193
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4197
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4207
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4217
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4239
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4255
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4264
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4280
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4288
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4320
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4338
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4363
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4367
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4371
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4380
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4384
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4397
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4415
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4421
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4425
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4431
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4435
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4440
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4444
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4449
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4457
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4463
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4471
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4489
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4504
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4513
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4532
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4536
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4546
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4550
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4554
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4558
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4574
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4578
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4584
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4594
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4600
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4606
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4624
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4634
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4640
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4644
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4650
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4654
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4664
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4677
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4689
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4702
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4720
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4724
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4740
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4744
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4748
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4753
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4757
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4761
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4765
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4774
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4778
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4782
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4786
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4791
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4799
		{
			yyVAL.str = yyDollar[2].str
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4805
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4811
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4815
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4819
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4823
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4827
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4833
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4866
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4876
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4882
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4898
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:4903
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4909
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4916
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:4920
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:4932
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4937
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4941
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4945
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4956
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4968
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4973
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4979
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4986
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4990
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5006
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5016
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5022
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5028
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5039
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5051
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5057
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5067
		{
			yyVAL.str = yyDollar[1].str
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5071
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5077
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5090
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5098
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5104
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5111
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5119
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5125
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5134
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5146
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5157
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5161
		{
			yyVAL.str = yyDollar[2].str
		}
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5181
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5187
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5193
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5199
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5208
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5217
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5222
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5236
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5342
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5346
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5352
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5362
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5366
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5372
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5382
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5386
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5390
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5399
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5405
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5412
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5418
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5427
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5434
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5443
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5447
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5453
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5471
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5480
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5498
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5521
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5543
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5547
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5551
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5559
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5565
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5569
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5575
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5580
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5593
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5597
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5601
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5607
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5622
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5632
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5636
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5645
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5651
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5655
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5665
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5669
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5684
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5696
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5705
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5718
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5725
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5735
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5754
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5758
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5763
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5767
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5774
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5785
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5798
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5812
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5820
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5834
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5848
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5852
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5856
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5864
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5871
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5882
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5889
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5896
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5900
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5921
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5941
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5962
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5973
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5986
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5992
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5996
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6002
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6011
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6025
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6031
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6035
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6041
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6057
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6061
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6070
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6075
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6079
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6084
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6088
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6098
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6102
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6113
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6121
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6129
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6137
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6157
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6177
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6181
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6186
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6190
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6199
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6205
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6209
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6213
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6219
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6231
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6235
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6239
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6244
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6248
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6252
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6256
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6260
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6264
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6268
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6272
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6276
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6280
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6288
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6292
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6300
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6304
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6308
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6316
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6324
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6328
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6332
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6339
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6343
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6349
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6354
		{
			yyVAL.str = ""
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6358
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6362
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6372
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6376
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6380
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6384
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6388
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6402
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6406
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6415
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6420
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6426
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6433
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6437
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6443
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6447
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6451
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6457
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6461
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6467
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6476
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6501
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6515
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6521
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6530
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6539
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6549
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6557
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6563
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6567
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6577
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6583
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6589
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6603
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6607
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:6613
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6637
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6641
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6645
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:6659
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6668
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6674
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:6678
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6684
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6688
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6692
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6696
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6700
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6704
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6725
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6737
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6750
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6760
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6765
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6769
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6775
		{
			yyVAL.str = ""
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6779
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6785
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6797
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6804
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6811
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6818
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6825
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6834
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6840
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6882
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6891
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6896
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6900
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6916
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6922
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6926
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6938
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6942
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6946
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6950
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6954
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6958
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6962
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6966
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6970
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6976
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6980
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6984
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7004
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7008
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7016
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7020
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7025
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7033
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7038
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7042
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7051
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7055
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7059
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7063
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7067
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7073
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7081
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7102
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7111
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7117
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7121
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7127
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7136
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7148
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7220
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7249
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7264
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7281
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7296
		{
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7303
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7307
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7311
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7317
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7321
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7325
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7329
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7335
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7349
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7357
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7371
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7378
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7387
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7392
		{
			yyVAL.str = ","
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7396
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7408
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7434
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7445
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7455
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7464
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7483
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7493
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7503
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7533
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7553
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7563
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7583
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7593
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7618
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7626
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7634
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7642
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7652
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7660
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7669
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7677
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7685
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7693
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7701
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7722
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7734
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7745
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7803
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7815
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7838
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7853
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7860
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7872
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7880
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7890
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7900
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7908
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7919
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7928
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7937
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7945
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7955
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7963
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7977
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7987
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8006
		{
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8008
		{
		}
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8049
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8060
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8064
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8068
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8074
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8083
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8089
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8093
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8100
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8104
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8108
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8116
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8120
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8124
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8128
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8134
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8138
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8142
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8146
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8150
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8154
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8158
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8162
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8166
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8170
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8178
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8182
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8186
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8190
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8194
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8198
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8202
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8206
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8210
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8214
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8224
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8230
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8234
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8241
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8245
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8249
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8255
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8259
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8263
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8267
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8271
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8275
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8279
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8285
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8289
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8293
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8297
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8303
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8316
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8321
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8327
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8331
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8344
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8349
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8353
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8357
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8361
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8365
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8369
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8383
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8387
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8394
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8405
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8410
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8416
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8428
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8440
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8452
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8465
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8597
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8624
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8666
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8714
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8743
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8763
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8783
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8895
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8907
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8919
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8943
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8967
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8979
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8992
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9020
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9028
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9037
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9047
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9070
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9075
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9081
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9088
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9092
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9097
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9101
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9107
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9113
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9120
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9127
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9136
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9143
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9150
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9173
		{
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9175
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9185
		{
			yyVAL.str = ""
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9189
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

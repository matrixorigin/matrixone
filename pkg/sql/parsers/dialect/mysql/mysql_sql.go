// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const QUOTE_ID = 57418
const INTEGRAL = 57419
const HEX = 57420
const BIT_LITERAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const NULL = 57424
const TRUE = 57425
const FALSE = 57426
const LOWER_THAN_CHARSET = 57427
const CHARSET = 57428
const UNIQUE = 57429
const KEY = 57430
const OR = 57431
const PIPE_CONCAT = 57432
const XOR = 57433
const AND = 57434
const NOT = 57435
const BETWEEN = 57436
const CASE = 57437
const WHEN = 57438
const THEN = 57439
const ELSE = 57440
const END = 57441
const LOWER_THAN_EQ = 57442
const LE = 57443
const GE = 57444
const NE = 57445
const NULL_SAFE_EQUAL = 57446
const IS = 57447
const LIKE = 57448
const REGEXP = 57449
const IN = 57450
const ASSIGNMENT = 57451
const ILIKE = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_BINARY = 57460
const INTERVAL = 57461
const BEGIN = 57462
const START = 57463
const TRANSACTION = 57464
const COMMIT = 57465
const ROLLBACK = 57466
const WORK = 57467
const CONSISTENT = 57468
const SNAPSHOT = 57469
const CHAIN = 57470
const NO = 57471
const RELEASE = 57472
const PRIORITY = 57473
const QUICK = 57474
const BIT = 57475
const TINYINT = 57476
const SMALLINT = 57477
const MEDIUMINT = 57478
const INT = 57479
const INTEGER = 57480
const BIGINT = 57481
const INTNUM = 57482
const REAL = 57483
const DOUBLE = 57484
const FLOAT_TYPE = 57485
const DECIMAL = 57486
const NUMERIC = 57487
const DECIMAL_VALUE = 57488
const TIME = 57489
const TIMESTAMP = 57490
const DATETIME = 57491
const YEAR = 57492
const CHAR = 57493
const VARCHAR = 57494
const BOOL = 57495
const CHARACTER = 57496
const VARBINARY = 57497
const NCHAR = 57498
const TEXT = 57499
const TINYTEXT = 57500
const MEDIUMTEXT = 57501
const LONGTEXT = 57502
const BLOB = 57503
const TINYBLOB = 57504
const MEDIUMBLOB = 57505
const LONGBLOB = 57506
const JSON = 57507
const ENUM = 57508
const UUID = 57509
const GEOMETRY = 57510
const POINT = 57511
const LINESTRING = 57512
const POLYGON = 57513
const GEOMETRYCOLLECTION = 57514
const MULTIPOINT = 57515
const MULTILINESTRING = 57516
const MULTIPOLYGON = 57517
const INT1 = 57518
const INT2 = 57519
const INT3 = 57520
const INT4 = 57521
const INT8 = 57522
const S3OPTION = 57523
const SQL_SMALL_RESULT = 57524
const SQL_BIG_RESULT = 57525
const SQL_BUFFER_RESULT = 57526
const LOW_PRIORITY = 57527
const HIGH_PRIORITY = 57528
const DELAYED = 57529
const CREATE = 57530
const ALTER = 57531
const DROP = 57532
const RENAME = 57533
const ANALYZE = 57534
const ADD = 57535
const RETURNS = 57536
const SCHEMA = 57537
const TABLE = 57538
const SEQUENCE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const CONSTRAINT = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const FOREIGN = 57550
const KEY_BLOCK_SIZE = 57551
const SHOW = 57552
const DESCRIBE = 57553
const EXPLAIN = 57554
const DATE = 57555
const ESCAPE = 57556
const REPAIR = 57557
const OPTIMIZE = 57558
const TRUNCATE = 57559
const MAXVALUE = 57560
const PARTITION = 57561
const REORGANIZE = 57562
const LESS = 57563
const THAN = 57564
const PROCEDURE = 57565
const TRIGGER = 57566
const STATUS = 57567
const VARIABLES = 57568
const ROLE = 57569
const PROXY = 57570
const AVG_ROW_LENGTH = 57571
const STORAGE = 57572
const DISK = 57573
const MEMORY = 57574
const CHECKSUM = 57575
const COMPRESSION = 57576
const DATA = 57577
const DIRECTORY = 57578
const DELAY_KEY_WRITE = 57579
const ENCRYPTION = 57580
const ENGINE = 57581
const MAX_ROWS = 57582
const MIN_ROWS = 57583
const PACK_KEYS = 57584
const ROW_FORMAT = 57585
const STATS_AUTO_RECALC = 57586
const STATS_PERSISTENT = 57587
const STATS_SAMPLE_PAGES = 57588
const DYNAMIC = 57589
const COMPRESSED = 57590
const REDUNDANT = 57591
const COMPACT = 57592
const FIXED = 57593
const COLUMN_FORMAT = 57594
const AUTO_RANDOM = 57595
const RESTRICT = 57596
const CASCADE = 57597
const ACTION = 57598
const PARTIAL = 57599
const SIMPLE = 57600
const CHECK = 57601
const ENFORCED = 57602
const RANGE = 57603
const LIST = 57604
const ALGORITHM = 57605
const LINEAR = 57606
const PARTITIONS = 57607
const SUBPARTITION = 57608
const SUBPARTITIONS = 57609
const CLUSTER = 57610
const TYPE = 57611
const ANY = 57612
const SOME = 57613
const EXTERNAL = 57614
const LOCALFILE = 57615
const URL = 57616
const PREPARE = 57617
const DEALLOCATE = 57618
const RESET = 57619
const EXTENSION = 57620
const INCREMENT = 57621
const CYCLE = 57622
const MINVALUE = 57623
const PROPERTIES = 57624
const PARSER = 57625
const VISIBLE = 57626
const INVISIBLE = 57627
const BTREE = 57628
const HASH = 57629
const RTREE = 57630
const BSI = 57631
const ZONEMAP = 57632
const LEADING = 57633
const BOTH = 57634
const TRAILING = 57635
const UNKNOWN = 57636
const EXPIRE = 57637
const ACCOUNT = 57638
const ACCOUNTS = 57639
const UNLOCK = 57640
const DAY = 57641
const NEVER = 57642
const PUMP = 57643
const MYSQL_COMPATBILITY_MODE = 57644
const SECOND = 57645
const ASCII = 57646
const COALESCE = 57647
const COLLATION = 57648
const HOUR = 57649
const MICROSECOND = 57650
const MINUTE = 57651
const MONTH = 57652
const QUARTER = 57653
const REPEAT = 57654
const REVERSE = 57655
const ROW_COUNT = 57656
const WEEK = 57657
const REVOKE = 57658
const FUNCTION = 57659
const PRIVILEGES = 57660
const TABLESPACE = 57661
const EXECUTE = 57662
const SUPER = 57663
const GRANT = 57664
const OPTION = 57665
const REFERENCES = 57666
const REPLICATION = 57667
const SLAVE = 57668
const CLIENT = 57669
const USAGE = 57670
const RELOAD = 57671
const FILE = 57672
const TEMPORARY = 57673
const ROUTINE = 57674
const EVENT = 57675
const SHUTDOWN = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const ENGINES = 57683
const LOW_CARDINALITY = 57684
const ADMIN_NAME = 57685
const RANDOM = 57686
const SUSPEND = 57687
const ATTRIBUTE = 57688
const HISTORY = 57689
const REUSE = 57690
const CURRENT = 57691
const OPTIONAL = 57692
const FAILED_LOGIN_ATTEMPTS = 57693
const PASSWORD_LOCK_TIME = 57694
const UNBOUNDED = 57695
const SECONDARY = 57696
const USER = 57697
const IDENTIFIED = 57698
const CIPHER = 57699
const ISSUER = 57700
const X509 = 57701
const SUBJECT = 57702
const SAN = 57703
const REQUIRE = 57704
const SSL = 57705
const NONE = 57706
const PASSWORD = 57707
const MAX_QUERIES_PER_HOUR = 57708
const MAX_UPDATES_PER_HOUR = 57709
const MAX_CONNECTIONS_PER_HOUR = 57710
const MAX_USER_CONNECTIONS = 57711
const FORMAT = 57712
const VERBOSE = 57713
const CONNECTION = 57714
const TRIGGERS = 57715
const PROFILES = 57716
const LOAD = 57717
const INFILE = 57718
const TERMINATED = 57719
const OPTIONALLY = 57720
const ENCLOSED = 57721
const ESCAPED = 57722
const STARTING = 57723
const LINES = 57724
const ROWS = 57725
const IMPORT = 57726
const MODUMP = 57727
const OVER = 57728
const PRECEDING = 57729
const FOLLOWING = 57730
const GROUPS = 57731
const DATABASES = 57732
const TABLES = 57733
const EXTENDED = 57734
const FULL = 57735
const PROCESSLIST = 57736
const FIELDS = 57737
const COLUMNS = 57738
const OPEN = 57739
const ERRORS = 57740
const WARNINGS = 57741
const INDEXES = 57742
const SCHEMAS = 57743
const NODE = 57744
const LOCKS = 57745
const TABLE_NUMBER = 57746
const COLUMN_NUMBER = 57747
const TABLE_VALUES = 57748
const NAMES = 57749
const GLOBAL = 57750
const SESSION = 57751
const ISOLATION = 57752
const LEVEL = 57753
const READ = 57754
const WRITE = 57755
const ONLY = 57756
const REPEATABLE = 57757
const COMMITTED = 57758
const UNCOMMITTED = 57759
const SERIALIZABLE = 57760
const LOCAL = 57761
const EVENTS = 57762
const PLUGINS = 57763
const CURRENT_TIMESTAMP = 57764
const DATABASE = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const UTC_DATE = 57769
const UTC_TIME = 57770
const UTC_TIMESTAMP = 57771
const REPLACE = 57772
const CONVERT = 57773
const SEPARATOR = 57774
const TIMESTAMPDIFF = 57775
const CURRENT_DATE = 57776
const CURRENT_USER = 57777
const CURRENT_ROLE = 57778
const SECOND_MICROSECOND = 57779
const MINUTE_MICROSECOND = 57780
const MINUTE_SECOND = 57781
const HOUR_MICROSECOND = 57782
const HOUR_SECOND = 57783
const HOUR_MINUTE = 57784
const DAY_MICROSECOND = 57785
const DAY_SECOND = 57786
const DAY_MINUTE = 57787
const DAY_HOUR = 57788
const YEAR_MONTH = 57789
const SQL_TSI_HOUR = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_MONTH = 57793
const SQL_TSI_QUARTER = 57794
const SQL_TSI_YEAR = 57795
const SQL_TSI_SECOND = 57796
const SQL_TSI_MINUTE = 57797
const RECURSIVE = 57798
const CONFIG = 57799
const DRAINER = 57800
const MATCH = 57801
const AGAINST = 57802
const BOOLEAN = 57803
const LANGUAGE = 57804
const WITH = 57805
const QUERY = 57806
const EXPANSION = 57807
const ADDDATE = 57808
const BIT_AND = 57809
const BIT_OR = 57810
const BIT_XOR = 57811
const CAST = 57812
const COUNT = 57813
const APPROX_COUNT_DISTINCT = 57814
const APPROX_PERCENTILE = 57815
const CURDATE = 57816
const CURTIME = 57817
const DATE_ADD = 57818
const DATE_SUB = 57819
const EXTRACT = 57820
const GROUP_CONCAT = 57821
const MAX = 57822
const MID = 57823
const MIN = 57824
const NOW = 57825
const POSITION = 57826
const SESSION_USER = 57827
const STD = 57828
const STDDEV = 57829
const MEDIAN = 57830
const STDDEV_POP = 57831
const STDDEV_SAMP = 57832
const SUBDATE = 57833
const SUBSTR = 57834
const SUBSTRING = 57835
const SUM = 57836
const SYSDATE = 57837
const SYSTEM_USER = 57838
const TRANSLATE = 57839
const TRIM = 57840
const VARIANCE = 57841
const VAR_POP = 57842
const VAR_SAMP = 57843
const AVG = 57844
const NEXTVAL = 57845
const ARROW = 57846
const ROW = 57847
const OUTFILE = 57848
const HEADER = 57849
const MAX_FILE_SIZE = 57850
const FORCE_QUOTE = 57851
const PARALLEL = 57852
const UNUSED = 57853
const BINDINGS = 57854
const DO = 57855
const DECLARE = 57856
const KILL = 57857
const QUERY_RESULT = 57858

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"NEXTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8791

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 95,
	21, 564,
	-2, 545,
	-1, 104,
	215, 756,
	-2, 825,
	-1, 123,
	42, 395,
	215, 395,
	242, 402,
	243, 402,
	417, 395,
	-2, 425,
	-1, 442,
	291, 93,
	393, 93,
	-2, 1389,
	-1, 501,
	67, 1195,
	-2, 1529,
	-1, 502,
	67, 1213,
	-2, 1500,
	-1, 506,
	67, 1214,
	-2, 1528,
	-1, 528,
	67, 1127,
	-2, 1583,
	-1, 529,
	67, 1128,
	-2, 1582,
	-1, 530,
	67, 1129,
	-2, 1572,
	-1, 531,
	67, 1547,
	-2, 1567,
	-1, 532,
	67, 1548,
	-2, 1568,
	-1, 533,
	67, 1549,
	-2, 1574,
	-1, 534,
	67, 1550,
	-2, 1557,
	-1, 535,
	67, 1551,
	-2, 1565,
	-1, 536,
	67, 1552,
	-2, 1575,
	-1, 537,
	67, 1553,
	-2, 1576,
	-1, 538,
	67, 1554,
	-2, 1581,
	-1, 539,
	67, 1555,
	-2, 1586,
	-1, 540,
	67, 1556,
	-2, 1587,
	-1, 542,
	67, 1192,
	-2, 1381,
	-1, 549,
	67, 1201,
	-2, 1407,
	-1, 553,
	67, 1205,
	-2, 1446,
	-1, 554,
	67, 1206,
	-2, 1524,
	-1, 562,
	67, 1216,
	-2, 1509,
	-1, 564,
	67, 1218,
	-2, 1519,
	-1, 565,
	67, 1219,
	-2, 1542,
	-1, 576,
	67, 1108,
	-2, 1577,
	-1, 577,
	67, 1109,
	-2, 1578,
	-1, 578,
	67, 1110,
	-2, 1579,
	-1, 585,
	21, 565,
	-2, 528,
	-1, 641,
	412, 425,
	413, 425,
	-2, 396,
	-1, 687,
	104, 1381,
	115, 1381,
	135, 1381,
	-2, 1356,
	-1, 724,
	21, 565,
	-2, 528,
	-1, 824,
	21, 564,
	-2, 1016,
	-1, 1154,
	67, 1263,
	-2, 1526,
	-1, 1155,
	67, 1264,
	-2, 1527,
	-1, 1317,
	1, 782,
	68, 782,
	534, 782,
	-2, 789,
	-1, 1361,
	1, 308,
	68, 308,
	534, 308,
	-2, 789,
	-1, 1599,
	68, 1342,
	136, 1342,
	-2, 1511,
	-1, 1600,
	68, 1342,
	136, 1342,
	-2, 1510,
	-1, 1601,
	68, 1320,
	136, 1320,
	-2, 1497,
	-1, 1602,
	68, 1321,
	136, 1321,
	-2, 1502,
	-1, 1603,
	68, 1322,
	136, 1322,
	-2, 1434,
	-1, 1604,
	68, 1323,
	136, 1323,
	-2, 1428,
	-1, 1605,
	68, 1324,
	136, 1324,
	-2, 1372,
	-1, 1606,
	68, 1325,
	136, 1325,
	-2, 1499,
	-1, 1607,
	68, 1326,
	136, 1326,
	-2, 1432,
	-1, 1608,
	68, 1327,
	136, 1327,
	-2, 1427,
	-1, 1609,
	68, 1328,
	136, 1328,
	-2, 1420,
	-1, 1611,
	68, 1331,
	136, 1331,
	-2, 1542,
	-1, 1612,
	68, 1311,
	136, 1311,
	-2, 1529,
	-1, 1613,
	68, 1340,
	136, 1340,
	-2, 1500,
	-1, 1614,
	68, 1340,
	136, 1340,
	-2, 1528,
	-1, 1615,
	68, 1340,
	136, 1340,
	-2, 1390,
	-1, 1616,
	68, 1338,
	136, 1338,
	-2, 1519,
	-1, 1617,
	68, 1335,
	136, 1335,
	-2, 1412,
	-1, 1618,
	67, 1293,
	68, 1293,
	136, 1293,
	355, 1293,
	356, 1293,
	357, 1293,
	-2, 1371,
	-1, 1619,
	67, 1294,
	68, 1294,
	136, 1294,
	355, 1294,
	356, 1294,
	357, 1294,
	-2, 1373,
	-1, 1620,
	67, 1297,
	68, 1297,
	136, 1297,
	355, 1297,
	356, 1297,
	357, 1297,
	-2, 1501,
	-1, 1621,
	67, 1299,
	68, 1299,
	136, 1299,
	355, 1299,
	356, 1299,
	357, 1299,
	-2, 1484,
	-1, 1622,
	67, 1301,
	68, 1301,
	136, 1301,
	355, 1301,
	356, 1301,
	357, 1301,
	-2, 1433,
	-1, 1623,
	67, 1303,
	68, 1303,
	136, 1303,
	355, 1303,
	356, 1303,
	357, 1303,
	-2, 1416,
	-1, 1624,
	67, 1304,
	68, 1304,
	136, 1304,
	355, 1304,
	356, 1304,
	357, 1304,
	-2, 1417,
	-1, 1625,
	67, 1306,
	68, 1306,
	136, 1306,
	355, 1306,
	356, 1306,
	357, 1306,
	-2, 1370,
	-1, 1626,
	68, 1345,
	136, 1345,
	355, 1345,
	356, 1345,
	357, 1345,
	-2, 1395,
	-1, 1627,
	68, 1345,
	136, 1345,
	355, 1345,
	356, 1345,
	357, 1345,
	-2, 1408,
	-1, 1628,
	68, 1348,
	136, 1348,
	355, 1348,
	356, 1348,
	357, 1348,
	-2, 1391,
	-1, 1629,
	68, 1345,
	136, 1345,
	355, 1345,
	356, 1345,
	357, 1345,
	-2, 1469,
	-1, 1642,
	1, 783,
	68, 783,
	534, 783,
	-2, 789,
	-1, 1749,
	21, 564,
	-2, 656,
	-1, 1931,
	65, 471,
	136, 471,
	-2, 920,
	-1, 1948,
	276, 984,
	-2, 963,
	-1, 2187,
	276, 984,
	-2, 964,
	-1, 2314,
	88, 789,
	131, 789,
	168, 789,
	171, 789,
	-2, 868,
	-1, 2317,
	88, 789,
	131, 789,
	168, 789,
	171, 789,
	-2, 868,
	-1, 2327,
	65, 471,
	136, 471,
	-2, 921,
	-1, 2409,
	88, 789,
	131, 789,
	168, 789,
	171, 789,
	-2, 869,
	-1, 2702,
	68, 840,
	136, 840,
	-2, 789,
	-1, 2706,
	68, 840,
	136, 840,
	-2, 789,
	-1, 2720,
	68, 844,
	136, 844,
	-2, 789,
	-1, 2725,
	68, 845,
	136, 845,
	-2, 789,
}

const yyPrivate = 57344

const yyLast = 31016

var yyAct = [...]int{
	471, 1362, 2706, 1220, 2714, 2705, 2681, 1135, 453, 2660,
	451, 2584, 473, 2634, 2384, 2516, 2623, 2262, 2456, 2199,
	2538, 2440, 2406, 2558, 2539, 1589, 2510, 2523, 2263, 2527,
	992, 2404, 2405, 586, 852, 2475, 1283, 2454, 2450, 144,
	144, 498, 1325, 1934, 2428, 144, 388, 395, 2408, 2164,
	395, 1138, 1780, 2006, 1077, 1423, 2298, 2007, 1999, 2209,
	2310, 1468, 455, 2188, 1743, 1679, 1041, 1393, 1821, 1597,
	2260, 1788, 1492, 1789, 2254, 406, 2028, 1401, 2237, 400,
	2143, 2140, 1440, 1131, 2208, 2138, 1652, 718, 2048, 1595,
	954, 444, 1279, 581, 1820, 445, 2162, 2089, 1488, 1274,
	1684, 1475, 1416, 450, 1469, 1293, 2042, 622, 1862, 1487,
	1219, 1396, 692, 1744, 969, 1732, 143, 143, 1476, 971,
	1904, 1952, 379, 393, 31, 1900, 1651, 1337, 1680, 686,
	3, 581, 1313, 696, 42, 1301, 392, 19, 1394, 1365,
	716, 1783, 1134, 144, 1643, 695, 30, 889, 1327, 389,
	8, 1489, 452, 1520, 1129, 390, 6, 454, 1068, 391,
	7, 1338, 1474, 1593, 1050, 1635, 1420, 690, 1336, 982,
	1335, 1499, 443, 1184, 1577, 462, 1168, 1120, 384, 42,
	94, 735, 934, 1463, 1445, 1128, 2409, 678, 1751, 1351,
	1312, 1698, 381, 1033, 1020, 978, 486, 95, 621, 408,
	1284, 1190, 583, 679, 1189, 16, 9, 409, 585, 993,
	1067, 952, 133, 4, 136, 637, 619, 394, 2083, 2083,
	720, 1506, 1823, 139, 1496, 137, 138, 38, 125, 105,
	2506, 2451, 1781, 2261, 1297, 2567, 1471, 584, 847, 378,
	853, 2575, 95, 2397, 2483, 130, 137, 594, 755, 1808,
	1816, 1493, 118, 645, 2396, 377, 131, 137, 2492, 2112,
	404, 93, 31, 137, 1504, 1767, 790, 398, 1022, 715,
	1404, 1405, 42, 1434, 1210, 19, 78, 1005, 1768, 989,
	1006, 137, 134, 2619, 30, 2617, 137, 2484, 8, 660,
	1902, 137, 659, 93, 6, 1784, 580, 137, 7, 38,
	125, 105, 137, 1080, 38, 125, 105, 137, 137, 38,
	125, 105, 998, 999, 134, 693, 140, 2270, 655, 1023,
	134, 996, 2063, 2461, 995, 998, 999, 93, 1087, 1073,
	571, 694, 570, 572, 573, 95, 574, 575, 134, 595,
	2542, 2543, 1901, 134, 1084, 1347, 1137, 783, 134, 788,
	689, 688, 126, 127, 134, 128, 129, 2568, 2569, 134,
	1105, 405, 1863, 610, 134, 1086, 2638, 2639, 2511, 2512,
	2513, 2514, 2508, 2560, 701, 1121, 700, 702, 1125, 2264,
	2049, 144, 728, 2560, 2050, 2563, 2051, 2453, 2264, 661,
	2574, 1803, 738, 729, 2522, 1417, 1907, 395, 395, 2278,
	144, 1140, 1124, 2299, 727, 699, 793, 794, 795, 792,
	587, 723, 725, 1409, 1116, 1500, 2402, 2152, 2154, 2306,
	104, 124, 135, 1206, 76, 1413, 776, 1203, 1725, 777,
	2467, 1205, 1202, 1204, 1208, 1209, 1574, 771, 2078, 1207,
	772, 1634, 123, 117, 116, 2460, 2144, 1895, 663, 44,
	2206, 2462, 987, 704, 1268, 1267, 738, 779, 726, 1813,
	826, 722, 786, 787, 439, 2577, 2578, 441, 774, 2149,
	2150, 758, 440, 2076, 697, 1126, 2541, 746, 785, 750,
	2612, 2480, 2003, 2470, 2151, 1727, 612, 2621, 607, 2399,
	598, 724, 104, 1505, 135, 705, 1123, 609, 608, 1793,
	1432, 1433, 2168, 1139, 1007, 2148, 2531, 119, 120, 121,
	1927, 397, 1225, 396, 123, 1016, 662, 2355, 601, 42,
	42, 2616, 2698, 1146, 1149, 1150, 775, 2528, 2715, 2647,
	132, 2586, 2348, 698, 1147, 2654, 977, 769, 781, 782,
	2499, 1509, 1511, 1512, 691, 2658, 2582, 2583, 88, 2586,
	1079, 2223, 122, 2442, 89, 1915, 1916, 1917, 1918, 606,
	1708, 2339, 780, 605, 731, 732, 1707, 1913, 693, 596,
	740, 739, 1213, 1214, 1215, 1216, 1217, 1218, 1211, 1212,
	446, 1029, 95, 95, 694, 778, 2343, 599, 2361, 2362,
	1028, 748, 1494, 1494, 1009, 1494, 770, 951, 953, 2146,
	403, 703, 1122, 991, 990, 976, 975, 90, 597, 747,
	828, 829, 830, 831, 743, 744, 931, 37, 2716, 2282,
	2082, 622, 613, 2429, 2430, 2431, 2433, 2432, 998, 999,
	998, 999, 2481, 2319, 740, 739, 2722, 693, 2682, 832,
	2476, 2290, 719, 1521, 2576, 2482, 600, 2710, 955, 883,
	404, 2557, 1021, 824, 988, 755, 997, 1809, 2626, 1758,
	1497, 144, 39, 1018, 773, 1688, 959, 994, 2081, 963,
	1906, 2134, 2030, 2032, 962, 1692, 961, 1685, 1688, 399,
	733, 581, 581, 581, 1507, 1508, 1045, 1045, 1495, 144,
	956, 957, 958, 584, 960, 106, 2091, 2090, 964, 1074,
	966, 2622, 2034, 2398, 1418, 395, 953, 1071, 1071, 2155,
	1817, 616, 617, 618, 611, 1755, 106, 1984, 2468, 2570,
	2571, 1052, 1082, 1910, 1911, 1026, 2079, 106, 1757, 1756,
	1407, 1408, 2145, 106, 1754, 2441, 754, 1909, 1014, 39,
	1024, 1025, 1103, 2403, 39, 91, 92, 96, 863, 864,
	1148, 106, 985, 1047, 1088, 1045, 106, 1045, 728, 1001,
	1002, 106, 1004, 1410, 1117, 749, 1051, 106, 1510, 1043,
	1043, 2709, 106, 656, 2627, 1412, 1406, 106, 106, 665,
	1136, 666, 2147, 2415, 939, 2341, 2676, 669, 691, 2340,
	1689, 979, 983, 983, 2344, 2345, 936, 2728, 1098, 1099,
	1691, 984, 938, 1689, 2721, 1695, 1693, 585, 1682, 979,
	1694, 979, 1683, 1686, 2727, 1782, 1921, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 2031,
	2173, 1017, 1637, 1179, 1180, 668, 2718, 968, 1188, 671,
	670, 791, 1078, 1008, 1796, 1010, 1085, 2234, 1235, 1228,
	755, 2315, 2699, 658, 1000, 1133, 657, 1003, 1550, 1241,
	1242, 1549, 1118, 1583, 1687, 791, 1112, 42, 2694, 1808,
	2685, 1244, 1249, 1250, 752, 1800, 42, 1039, 1040, 1111,
	1742, 1027, 791, 581, 1036, 1037, 1038, 1102, 1054, 1897,
	1770, 1493, 1108, 378, 1588, 1101, 2684, 1130, 1107, 2624,
	2625, 1933, 1151, 1114, 2719, 1554, 1053, 1089, 656, 377,
	2665, 1587, 1094, 1770, 1484, 95, 1328, 1066, 1072, 95,
	1502, 1430, 1065, 1328, 967, 1269, 1182, 1030, 1636, 791,
	95, 1290, 2662, 2305, 753, 1090, 2695, 585, 1502, 95,
	1922, 1985, 1987, 1988, 1989, 1986, 753, 2596, 1110, 1109,
	2549, 1702, 1221, 1127, 1224, 144, 1106, 1311, 1045, 1236,
	1316, 1317, 1291, 1132, 1502, 144, 1234, 2544, 622, 1531,
	1243, 1326, 1245, 1177, 1178, 1045, 2501, 1741, 1502, 1018,
	793, 794, 795, 792, 388, 708, 713, 714, 658, 1294,
	1272, 657, 1275, 1276, 1170, 793, 794, 795, 792, 808,
	2663, 1281, 1282, 2693, 2500, 2497, 1352, 1352, 2496, 1018,
	2495, 1018, 2494, 2664, 144, 2597, 1311, 1311, 2472, 980,
	1045, 1403, 1350, 1932, 1429, 1586, 2471, 2388, 796, 2363,
	1310, 581, 1308, 1045, 1315, 2472, 1742, 825, 764, 762,
	1530, 766, 1321, 2234, 2502, 834, 2225, 1223, 793, 794,
	795, 792, 1318, 1319, 1320, 2053, 2330, 1448, 2174, 1311,
	1045, 2025, 1439, 144, 144, 1443, 839, 1246, 588, 767,
	2044, 1450, 1656, 2472, 1886, 144, 2472, 1884, 2472, 1882,
	2472, 1235, 1467, 1742, 1935, 1811, 1264, 1235, 1235, 1388,
	1389, 1357, 1479, 2110, 2472, 2054, 1334, 1770, 1354, 1119,
	1314, 1880, 1868, 1810, 1824, 1414, 588, 1802, 1672, 1806,
	1343, 1344, 1340, 667, 2226, 1545, 1326, 1331, 981, 1298,
	1045, 1491, 2178, 2054, 1345, 1329, 1330, 1532, 1286, 1742,
	1289, 1419, 1436, 1483, 1341, 1292, 1438, 979, 759, 721,
	1441, 1441, 1887, 1798, 1933, 1885, 1442, 1881, 1342, 1453,
	1348, 1349, 1441, 710, 711, 712, 1794, 1456, 1485, 983,
	1322, 761, 1314, 1307, 1091, 1790, 1323, 1346, 1655, 1881,
	791, 1333, 791, 765, 768, 1514, 1339, 1656, 1446, 1355,
	930, 1356, 474, 483, 1584, 791, 1518, 1519, 475, 837,
	482, 476, 480, 479, 477, 478, 1353, 760, 1558, 1465,
	1557, 1361, 1130, 741, 721, 1465, 1427, 1428, 1548, 1392,
	1391, 1791, 1840, 1539, 1501, 614, 1095, 1402, 1415, 2073,
	755, 1753, 2677, 932, 1795, 980, 2532, 2674, 1032, 42,
	1424, 1425, 1426, 1791, 2169, 1435, 1656, 2416, 929, 926,
	927, 928, 484, 672, 1845, 1437, 1844, 1843, 1841, 1185,
	1309, 1555, 1583, 1227, 1226, 972, 1699, 1454, 1562, 973,
	1013, 693, 1015, 2235, 1019, 763, 791, 693, 791, 2533,
	1472, 1477, 481, 1478, 1481, 1034, 791, 694, 1482, 2322,
	2417, 791, 1502, 694, 1096, 2230, 1035, 1070, 1070, 721,
	2227, 2084, 95, 2170, 2320, 2004, 1486, 1801, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1760, 444, 728, 1630, 1031,
	1842, 809, 810, 811, 812, 813, 814, 815, 808, 144,
	144, 144, 2323, 1653, 981, 730, 1516, 1517, 1513, 1598,
	1831, 2609, 1522, 1660, 1018, 792, 2171, 2321, 1185, 1663,
	1527, 664, 2351, 1665, 2350, 1255, 2052, 1962, 1170, 1515,
	1176, 1961, 693, 795, 792, 1018, 1956, 1526, 1951, 2334,
	728, 2704, 2688, 1697, 2648, 1173, 1175, 1172, 824, 1174,
	2657, 2643, 1141, 1142, 1143, 1144, 1145, 2600, 2587, 1247,
	1248, 2534, 1678, 1251, 1252, 1253, 1254, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 2400, 1645, 1646, 1647, 1746,
	1746, 1403, 1746, 811, 812, 813, 814, 815, 808, 1675,
	793, 794, 795, 792, 2656, 2485, 1186, 1187, 439, 1833,
	1664, 441, 1222, 1631, 1590, 1591, 440, 1229, 2422, 2419,
	1045, 144, 2418, 2324, 2401, 1846, 1847, 799, 800, 801,
	802, 803, 804, 805, 797, 728, 2303, 1071, 1239, 1403,
	2302, 2153, 1775, 1579, 1777, 2129, 2128, 1644, 1995, 1240,
	2103, 2069, 1235, 1311, 1748, 1668, 1752, 1598, 1750, 2046,
	1993, 1541, 1674, 1979, 1669, 1670, 2536, 1978, 1592, 793,
	794, 795, 792, 1662, 1804, 2304, 1638, 1491, 793, 794,
	795, 792, 1666, 1667, 1045, 1701, 1045, 1994, 1045, 793,
	794, 795, 792, 728, 1661, 2102, 1977, 1974, 1051, 1992,
	1968, 1965, 983, 1765, 1295, 1991, 1774, 1964, 1299, 1792,
	1671, 1302, 1786, 1673, 1540, 1818, 1582, 1581, 793, 794,
	795, 792, 1045, 1849, 807, 806, 816, 817, 809, 810,
	811, 812, 813, 814, 815, 808, 1856, 793, 794, 795,
	792, 1045, 1529, 1552, 1990, 1580, 1700, 1728, 1703, 1704,
	1705, 1706, 2526, 1858, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1576, 1814,
	1981, 693, 1575, 1092, 949, 793, 794, 795, 792, 1860,
	2139, 1761, 1762, 1763, 1772, 1766, 2385, 1749, 1848, 1835,
	2640, 2611, 2572, 1779, 2555, 1773, 2391, 1815, 1771, 793,
	794, 795, 792, 2717, 1295, 1043, 2469, 1857, 2452, 1980,
	1295, 1295, 2383, 2381, 1787, 2367, 2365, 1829, 2000, 793,
	794, 795, 792, 2336, 1043, 2390, 1130, 1045, 1807, 1888,
	2360, 2313, 1805, 2301, 2300, 1402, 2297, 2287, 1812, 2281,
	1822, 1931, 2231, 2221, 2220, 2133, 2127, 1937, 793, 794,
	795, 792, 2284, 793, 794, 795, 792, 1864, 1898, 2080,
	1825, 1826, 1869, 1946, 1828, 2047, 2037, 1855, 1839, 2106,
	1982, 1975, 1950, 1971, 2673, 793, 794, 795, 792, 1970,
	2105, 1969, 1958, 1959, 1960, 527, 526, 2515, 1963, 1585,
	1276, 1578, 793, 794, 795, 792, 1457, 1281, 1282, 1455,
	1304, 1093, 1746, 793, 794, 795, 792, 862, 858, 1928,
	857, 838, 1996, 717, 1892, 2487, 2317, 1889, 1929, 2316,
	728, 1403, 1403, 1403, 1403, 1938, 589, 590, 591, 592,
	2314, 2292, 728, 1403, 2291, 2286, 1746, 2274, 1948, 588,
	2253, 2252, 2008, 793, 794, 795, 792, 2179, 137, 1045,
	2108, 125, 105, 1524, 2008, 2101, 1528, 2093, 2088, 1912,
	144, 144, 2041, 1896, 1920, 1954, 1883, 1930, 31, 1314,
	1879, 1939, 1644, 1878, 1953, 1936, 1953, 1919, 42, 1943,
	1944, 19, 1235, 1563, 1553, 2021, 2059, 2104, 1056, 1945,
	30, 1235, 1551, 2068, 8, 1547, 1538, 1955, 1949, 1045,
	6, 1543, 2075, 1940, 7, 134, 137, 1942, 1546, 1544,
	793, 794, 795, 792, 1537, 1976, 1903, 1941, 1286, 1556,
	1289, 1534, 1559, 1560, 1561, 1533, 1238, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 2055, 1572, 2039, 2040, 2005,
	2001, 95, 1877, 1294, 2022, 1237, 2020, 2067, 2023, 2024,
	1057, 2065, 585, 2038, 2033, 1055, 1876, 2667, 2035, 2009,
	2010, 2011, 2012, 134, 2655, 793, 794, 795, 792, 2652,
	2096, 1535, 2098, 2650, 2599, 2072, 2045, 2503, 2077, 793,
	794, 795, 792, 1966, 1967, 854, 1271, 2438, 728, 1972,
	1973, 2060, 2066, 2062, 2142, 2426, 2423, 2071, 2374, 1657,
	2056, 2372, 2358, 2357, 2157, 144, 2356, 2002, 2085, 2353,
	1598, 2347, 2064, 2308, 728, 728, 728, 1402, 1402, 1402,
	1402, 2086, 2114, 1403, 1653, 2092, 2177, 2097, 1280, 1402,
	2094, 2095, 2181, 1273, 2099, 2100, 1678, 1678, 1678, 2058,
	970, 1997, 2210, 2212, 1957, 2210, 2210, 793, 794, 795,
	792, 1925, 2217, 1924, 2592, 1875, 1923, 1045, 1045, 1285,
	2113, 1288, 1277, 1797, 2115, 2116, 2117, 2118, 2130, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2135, 793, 794,
	795, 792, 2158, 855, 1759, 95, 1723, 1654, 144, 1171,
	2175, 134, 1462, 2142, 1444, 1295, 1295, 1295, 1306, 1278,
	1115, 1081, 2211, 933, 2207, 881, 880, 2172, 1874, 879,
	2176, 2165, 2166, 2137, 878, 877, 876, 1070, 875, 874,
	873, 872, 871, 2218, 2219, 870, 2590, 1873, 869, 2213,
	2214, 793, 794, 795, 792, 1849, 868, 2215, 867, 866,
	1043, 1043, 2540, 1872, 865, 1311, 861, 860, 859, 1311,
	793, 794, 795, 792, 856, 2184, 851, 850, 848, 847,
	846, 2185, 845, 844, 843, 1441, 793, 794, 795, 792,
	2224, 842, 144, 841, 2229, 840, 2232, 2228, 2180, 836,
	2242, 835, 2182, 2183, 757, 2354, 95, 2238, 2239, 1659,
	2259, 1640, 745, 2241, 2246, 1914, 1769, 1459, 1832, 756,
	2244, 2243, 2159, 2160, 2161, 1871, 1850, 1851, 2014, 2272,
	2258, 2017, 1853, 1854, 1870, 2275, 2018, 2013, 2269, 1402,
	2273, 2249, 2250, 2251, 2703, 1859, 2057, 2015, 793, 794,
	795, 792, 2016, 1799, 95, 2277, 2276, 793, 794, 795,
	792, 2019, 2280, 1738, 1739, 2233, 2377, 1894, 2376, 2279,
	1045, 1045, 1461, 77, 1295, 2131, 2132, 1890, 1891, 1302,
	2245, 41, 40, 1746, 1403, 2327, 2136, 2268, 1460, 2271,
	816, 817, 809, 810, 811, 812, 813, 814, 815, 808,
	1210, 1387, 2375, 1265, 1867, 1785, 1045, 1590, 1591, 2296,
	141, 2293, 2335, 1819, 2295, 1866, 374, 144, 1632, 935,
	1075, 751, 2521, 1947, 375, 376, 2212, 793, 794, 795,
	792, 2329, 1899, 1865, 1649, 1324, 2309, 1305, 793, 794,
	795, 792, 1227, 1226, 2631, 728, 1726, 2325, 1861, 1390,
	373, 2326, 1012, 1043, 2311, 2689, 793, 794, 795, 792,
	95, 2333, 95, 2207, 947, 948, 2337, 2008, 945, 946,
	2379, 793, 794, 795, 792, 943, 944, 2368, 728, 1011,
	1734, 1737, 1738, 1739, 1735, 2359, 1736, 1740, 784, 2311,
	941, 942, 2248, 1480, 2352, 2364, 2366, 974, 937, 588,
	2008, 2370, 2369, 2668, 807, 806, 816, 817, 809, 810,
	811, 812, 813, 814, 815, 808, 2606, 2604, 2580, 728,
	2565, 2564, 2562, 2380, 2529, 2504, 728, 2449, 2043, 2448,
	2394, 2386, 2393, 2382, 2328, 2266, 2265, 2256, 940, 2070,
	2331, 2255, 2387, 2332, 2389, 1328, 1536, 1852, 1678, 1206,
	2594, 2593, 2593, 1203, 742, 2594, 2395, 1205, 1202, 1204,
	1208, 1209, 2349, 2267, 728, 1207, 986, 728, 728, 728,
	793, 794, 795, 792, 49, 2410, 2413, 1431, 2412, 1049,
	1402, 2329, 1, 1326, 1303, 2446, 593, 2026, 1295, 1830,
	2027, 2247, 1295, 1181, 2029, 2427, 1498, 1724, 2435, 2436,
	2437, 2424, 1633, 2156, 965, 2392, 615, 2466, 2463, 2443,
	2434, 1230, 793, 794, 795, 792, 793, 794, 795, 792,
	1100, 1697, 707, 737, 2087, 2444, 806, 816, 817, 809,
	810, 811, 812, 813, 814, 815, 808, 728, 1097, 589,
	590, 591, 592, 736, 2464, 734, 2107, 1729, 1183, 728,
	488, 1470, 588, 2473, 1998, 2445, 2630, 2659, 2598, 2478,
	2477, 2633, 1113, 472, 2486, 2556, 2507, 2602, 2493, 2489,
	1734, 1737, 1738, 1739, 1735, 2509, 1736, 1740, 2455, 1503,
	2498, 789, 2061, 728, 2420, 2421, 633, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1213, 1214,
	1215, 1216, 1217, 1218, 1211, 1212, 521, 496, 849, 2525,
	1083, 1076, 2111, 2550, 2553, 2524, 709, 495, 2530, 2307,
	1908, 2479, 604, 706, 634, 1573, 1827, 2535, 2505, 2554,
	1266, 1287, 2545, 2546, 2547, 2548, 1270, 2414, 2318, 2167,
	1926, 2713, 2702, 2566, 2680, 2671, 2561, 2559, 2216, 807,
	806, 816, 817, 809, 810, 811, 812, 813, 814, 815,
	808, 2666, 2579, 2585, 2697, 2615, 2653, 2459, 2588, 2457,
	2591, 2458, 2646, 2589, 2581, 410, 1411, 579, 676, 2595,
	2439, 1458, 411, 1658, 2573, 2425, 2601, 2605, 602, 2607,
	2608, 728, 1639, 2603, 807, 806, 816, 817, 809, 810,
	811, 812, 813, 814, 815, 808, 603, 1642, 2629, 1641,
	2637, 2618, 2620, 2613, 1152, 798, 1169, 2288, 904, 2289,
	833, 2628, 2636, 2644, 449, 728, 1525, 461, 1905, 2200,
	2036, 2641, 2645, 48, 47, 2642, 46, 45, 2649, 1449,
	2651, 148, 490, 147, 2552, 2635, 470, 1136, 469, 468,
	2661, 467, 1733, 1731, 1730, 1398, 1397, 1447, 1690, 1358,
	2537, 728, 2490, 728, 2491, 2346, 1983, 2342, 2670, 2338,
	2672, 2222, 2186, 2187, 2637, 2679, 2675, 2193, 1648, 888,
	884, 886, 887, 1136, 728, 1136, 2636, 2678, 885, 1838,
	2683, 2687, 1834, 2696, 2283, 2661, 2690, 1676, 1677, 2163,
	950, 2285, 2465, 2294, 2700, 1596, 1136, 1594, 2240, 2236,
	1466, 1300, 2701, 904, 2708, 1893, 1399, 1395, 2712, 2411,
	892, 582, 2711, 32, 27, 5, 2720, 29, 28, 14,
	15, 2723, 2708, 2725, 2724, 13, 2726, 2712, 912, 916,
	918, 920, 922, 923, 925, 1104, 929, 926, 927, 928,
	12, 18, 907, 908, 909, 910, 890, 891, 913, 26,
	893, 25, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 905, 911, 24, 819, 2610, 823, 87, 86,
	23, 915, 917, 919, 921, 924, 85, 84, 83, 82,
	22, 11, 820, 822, 818, 81, 821, 807, 806, 816,
	817, 809, 810, 811, 812, 813, 814, 815, 808, 80,
	79, 21, 75, 73, 20, 892, 74, 71, 906, 882,
	72, 59, 58, 57, 69, 68, 1295, 67, 66, 2371,
	65, 64, 2373, 912, 916, 918, 920, 922, 923, 925,
	2669, 929, 926, 927, 928, 632, 2378, 907, 908, 909,
	910, 890, 891, 913, 56, 893, 55, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 905, 911, 2109,
	54, 904, 53, 70, 63, 62, 915, 917, 919, 921,
	924, 61, 60, 52, 51, 50, 103, 102, 101, 807,
	806, 816, 817, 809, 810, 811, 812, 813, 814, 815,
	808, 100, 99, 98, 97, 33, 34, 1523, 35, 36,
	113, 112, 114, 906, 115, 110, 108, 111, 807, 806,
	816, 817, 809, 810, 811, 812, 813, 814, 815, 808,
	807, 806, 816, 817, 809, 810, 811, 812, 813, 814,
	815, 808, 109, 1836, 1837, 807, 806, 816, 817, 809,
	810, 811, 812, 813, 814, 815, 808, 107, 43, 10,
	17, 2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 912, 916, 918, 920, 922, 923, 925, 2474, 929,
	926, 927, 928, 0, 0, 907, 908, 909, 910, 890,
	891, 913, 0, 893, 2488, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 905, 911, 0, 0, 0,
	0, 0, 0, 0, 915, 917, 919, 921, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2520, 0, 0, 0, 316, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 914, 0, 0, 0,
	0, 906, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 223, 0, 0, 248, 0, 0, 0, 494,
	0, 0, 308, 262, 0, 0, 0, 0, 550, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 2520, 0,
	456, 0, 0, 487, 527, 526, 474, 483, 0, 0,
	204, 146, 475, 0, 482, 476, 480, 479, 477, 478,
	0, 542, 0, 0, 0, 0, 0, 0, 447, 460,
	2517, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 914, 0, 0, 457, 458, 0, 0, 0, 0,
	504, 0, 459, 0, 0, 499, 484, 485, 0, 0,
	195, 313, 329, 205, 304, 342, 210, 311, 200, 277,
	300, 0, 0, 197, 327, 310, 259, 242, 243, 196,
	2520, 295, 221, 234, 217, 275, 481, 502, 506, 216,
	564, 500, 337, 199, 0, 336, 274, 323, 328, 260,
	254, 198, 325, 258, 253, 246, 225, 565, 238, 286,
	252, 287, 239, 264, 263, 265, 0, 0, 0, 0,
	0, 365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 339,
	0, 0, 548, 0, 0, 0, 312, 0, 2692, 247,
	0, 0, 0, 501, 0, 298, 280, 561, 448, 0,
	296, 250, 324, 288, 330, 314, 338, 292, 289, 190,
	315, 219, 261, 201, 203, 215, 222, 224, 226, 227,
	270, 271, 283, 303, 317, 318, 319, 218, 211, 297,
	212, 236, 213, 191, 305, 214, 193, 284, 322, 914,
	232, 293, 257, 194, 256, 285, 321, 320, 202, 346,
	352, 353, 357, 0, 358, 0, 0, 0, 366, 370,
	371, 372, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 351, 230, 187, 188, 334, 546,
	276, 0, 0, 560, 541, 543, 544, 547, 551, 552,
	553, 554, 555, 557, 559, 563, 301, 0, 0, 0,
	0, 0, 241, 282, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 332,
	344, 361, 364, 0, 0, 0, 192, 363, 0, 2518,
	0, 0, 0, 2519, 0, 562, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 505, 266, 267, 268, 269,
	549, 0, 209, 362, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 229, 235, 0, 237, 208, 281, 231, 341,
	244, 0, 367, 0, 0, 0, 0, 273, 240, 306,
	245, 251, 294, 340, 279, 299, 206, 331, 307, 255,
	0, 0, 571, 545, 570, 572, 573, 569, 574, 575,
	556, 466, 0, 509, 567, 566, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 249, 0, 290, 228, 534, 514, 515, 516,
	465, 517, 512, 513, 535, 507, 531, 532, 489, 510,
	518, 530, 519, 533, 536, 537, 576, 577, 525, 578,
	522, 538, 529, 528, 520, 508, 539, 540, 493, 491,
	523, 524, 511, 492, 316, 503, 0, 347, 348, 349,
	369, 333, 0, 220, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 223, 0, 0, 248, 0, 0, 0, 494,
	0, 0, 308, 262, 0, 0, 0, 0, 550, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 0, 0, 487, 527, 526, 474, 483, 0, 0,
	204, 146, 475, 0, 482, 476, 480, 479, 477, 478,
	0, 542, 0, 0, 0, 0, 0, 0, 447, 460,
	0, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 0, 0, 0, 0,
	504, 0, 459, 0, 0, 499, 484, 485, 0, 0,
	195, 313, 329, 205, 304, 342, 210, 311, 200, 277,
	300, 0, 0, 197, 327, 310, 259, 242, 243, 196,
	0, 295, 221, 234, 217, 275, 481, 502, 506, 216,
	564, 500, 337, 199, 0, 336, 274, 323, 328, 260,
	254, 198, 325, 258, 253, 246, 225, 565, 238, 286,
	252, 287, 239, 264, 263, 265, 0, 0, 0, 0,
	0, 365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 339,
	0, 0, 548, 0, 0, 0, 312, 0, 0, 247,
	0, 0, 0, 501, 0, 298, 280, 561, 448, 0,
	296, 250, 324, 288, 330, 314, 338, 292, 289, 190,
	315, 219, 261, 201, 203, 215, 222, 224, 226, 227,
	270, 271, 283, 303, 317, 318, 319, 218, 211, 297,
	212, 236, 213, 191, 305, 214, 193, 284, 322, 0,
	232, 293, 257, 194, 256, 285, 321, 320, 202, 346,
	352, 353, 357, 0, 358, 0, 0, 0, 366, 370,
	371, 372, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 1232, 1231, 1233, 351, 230, 187, 188, 334, 546,
	276, 0, 0, 560, 541, 543, 544, 547, 551, 552,
	553, 554, 555, 557, 559, 563, 301, 0, 0, 0,
	0, 0, 241, 282, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 332,
	344, 361, 364, 0, 0, 0, 192, 363, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 505, 266, 267, 268, 269,
	549, 0, 209, 362, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 229, 235, 0, 237, 208, 281, 231, 341,
	244, 0, 367, 0, 0, 0, 0, 273, 240, 306,
	245, 251, 294, 340, 279, 299, 206, 331, 307, 255,
	0, 0, 571, 545, 570, 572, 573, 569, 574, 575,
	556, 466, 0, 509, 567, 566, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 249, 0, 290, 228, 534, 514, 515, 516,
	465, 517, 512, 513, 535, 507, 531, 532, 489, 510,
	518, 530, 519, 533, 536, 537, 576, 577, 525, 578,
	522, 538, 529, 528, 520, 508, 539, 540, 493, 491,
	523, 524, 511, 492, 316, 503, 0, 347, 348, 349,
	369, 333, 0, 220, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 223, 0, 0, 248, 0, 0, 0, 494,
	0, 0, 308, 262, 0, 0, 0, 0, 550, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 0, 0, 487, 527, 526, 474, 483, 0, 0,
	204, 146, 475, 0, 482, 476, 480, 479, 477, 478,
	0, 542, 0, 0, 0, 0, 0, 0, 447, 460,
	0, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 0, 0, 0, 0,
	504, 0, 459, 0, 0, 499, 484, 485, 0, 0,
	195, 313, 329, 205, 304, 342, 210, 311, 200, 277,
	300, 0, 0, 197, 327, 310, 259, 242, 243, 196,
	0, 295, 221, 234, 217, 275, 481, 502, 506, 216,
	564, 500, 337, 199, 0, 336, 274, 323, 328, 260,
	254, 198, 325, 258, 253, 246, 225, 565, 238, 286,
	252, 287, 239, 264, 263, 265, 0, 0, 0, 0,
	0, 365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 339,
	0, 0, 548, 0, 0, 0, 312, 0, 0, 247,
	0, 0, 0, 501, 0, 298, 280, 561, 448, 0,
	296, 250, 324, 288, 330, 314, 338, 292, 289, 190,
	315, 219, 261, 201, 203, 215, 222, 224, 226, 227,
	270, 271, 283, 303, 317, 318, 319, 218, 211, 297,
	212, 236, 213, 191, 305, 214, 193, 284, 322, 0,
	232, 293, 257, 194, 256, 285, 321, 320, 202, 346,
	352, 353, 357, 0, 358, 0, 0, 0, 366, 370,
	371, 372, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 351, 230, 187, 188, 334, 546,
	276, 0, 0, 560, 541, 543, 544, 547, 551, 552,
	553, 554, 555, 557, 559, 563, 301, 0, 0, 0,
	0, 0, 241, 282, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 332,
	344, 361, 364, 0, 0, 0, 192, 363, 0, 2518,
	0, 0, 0, 2519, 0, 562, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 505, 266, 267, 268, 269,
	549, 0, 209, 362, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 229, 235, 0, 237, 208, 281, 231, 341,
	244, 0, 367, 0, 0, 0, 0, 273, 240, 306,
	245, 251, 294, 340, 279, 299, 206, 331, 307, 255,
	0, 0, 571, 545, 570, 572, 573, 569, 574, 575,
	556, 466, 0, 509, 567, 566, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 249, 0, 290, 228, 534, 514, 515, 516,
	465, 517, 512, 513, 535, 507, 531, 532, 489, 510,
	518, 530, 519, 533, 536, 537, 576, 577, 525, 578,
	522, 538, 529, 528, 520, 508, 539, 540, 493, 491,
	523, 524, 511, 492, 316, 503, 0, 347, 348, 349,
	369, 333, 0, 220, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 0,
	0, 0, 223, 1296, 0, 248, 0, 0, 0, 494,
	0, 0, 308, 262, 0, 0, 0, 0, 550, 558,
	0, 0, 0, 0, 0, 0, 0, 1421, 0, 0,
	456, 0, 0, 487, 527, 526, 474, 483, 0, 0,
	204, 146, 475, 0, 482, 476, 480, 479, 477, 478,
	0, 542, 0, 0, 0, 0, 0, 0, 447, 460,
	0, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 0, 0, 0, 0,
	504, 0, 459, 0, 0, 1422, 484, 485, 0, 0,
	195, 313, 329, 205, 304, 342, 210, 311, 200, 277,
	300, 0, 0, 197, 327, 310, 259, 242, 243, 196,
	0, 295, 221, 234, 217, 275, 481, 502, 506, 216,
	564, 500, 337, 199, 0, 336, 274, 323, 328, 260,
	254, 198, 325, 258, 253, 246, 225, 565, 238, 286,
	252, 287, 239, 264, 263, 265, 0, 0, 0, 0,
	0, 365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 0, 0, 0, 339,
	0, 0, 548, 0, 0, 0, 312, 0, 0, 247,
	0, 0, 0, 501, 0, 298, 280, 561, 448, 0,
	296, 250, 324, 288, 330, 314, 338, 292, 289, 190,
	315, 219, 261, 201, 203, 215, 222, 224, 226, 227,
	270, 271, 283, 303, 317, 318, 319, 218, 211, 297,
	212, 236, 213, 191, 305, 214, 193, 284, 322, 0,
	232, 293, 257, 194, 256, 285, 321, 320, 202, 346,
	352, 353, 357, 0, 358, 0, 0, 0, 366, 370,
	371, 372, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 351, 230, 187, 188, 334, 546,
	276, 0, 0, 560, 541, 543, 544, 547, 551, 552,
	553, 554, 555, 557, 559, 563, 301, 0, 0, 0,
	0, 0, 241, 282, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 332,
	344, 361, 364, 0, 0, 0, 192, 363, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 505, 266, 267, 268, 269,
	549, 0, 209, 362, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 229, 235, 0, 237, 208, 281, 231, 341,
	244, 0, 367, 0, 0, 0, 0, 273, 240, 306,
	245, 251, 294, 340, 279, 299, 206, 331, 307, 255,
	0, 0, 571, 545, 570, 572, 573, 569, 574, 575,
	556, 466, 0, 509, 567, 566, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 249, 0, 290, 228, 534, 514, 515, 516,
	465, 517, 512, 513, 535, 507, 531, 532, 489, 510,
	518, 530, 519, 533, 536, 537, 576, 577, 525, 578,
	522, 538, 529, 528, 520, 508, 539, 540, 493, 491,
	523, 524, 511, 492, 137, 316, 503, 347, 348, 349,
	369, 333, 0, 220, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	827, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 106, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 2691, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 1296, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 1069, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 0, 0, 0, 347, 348,
	349, 369, 333, 0, 220, 316, 503, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 0,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 1154, 1155, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 447,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 448,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 316, 503, 0, 347, 348,
	349, 369, 333, 0, 220, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 223, 0, 0, 248, 0, 0, 0,
	494, 0, 0, 308, 262, 0, 0, 0, 0, 550,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 487, 527, 526, 474, 483, 0,
	0, 204, 146, 475, 0, 482, 476, 480, 479, 477,
	478, 0, 542, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 0, 0, 0,
	0, 504, 0, 459, 0, 0, 499, 484, 485, 0,
	0, 195, 313, 329, 205, 304, 342, 210, 311, 200,
	277, 300, 0, 0, 197, 327, 310, 259, 242, 243,
	196, 0, 295, 221, 234, 217, 275, 481, 502, 506,
	216, 564, 500, 337, 199, 0, 336, 274, 323, 328,
	260, 254, 198, 325, 258, 253, 246, 225, 565, 238,
	286, 252, 287, 239, 264, 263, 265, 0, 0, 0,
	0, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	339, 0, 0, 548, 0, 0, 0, 312, 0, 0,
	247, 0, 0, 0, 501, 0, 298, 280, 561, 0,
	0, 296, 250, 324, 288, 330, 314, 338, 292, 289,
	190, 315, 219, 261, 201, 203, 215, 222, 224, 226,
	227, 270, 271, 283, 303, 317, 318, 319, 218, 211,
	297, 212, 236, 213, 191, 305, 214, 193, 284, 322,
	0, 232, 293, 257, 194, 256, 285, 321, 320, 202,
	346, 352, 353, 357, 0, 358, 0, 0, 0, 366,
	370, 371, 372, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 351, 230, 187, 188, 334,
	546, 276, 0, 0, 560, 541, 543, 544, 547, 551,
	552, 553, 554, 555, 557, 559, 563, 301, 0, 0,
	0, 0, 0, 241, 282, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	332, 344, 361, 364, 0, 0, 0, 192, 363, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 505, 266, 267, 268,
	269, 549, 0, 209, 362, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 229, 235, 0, 237, 208, 281, 231,
	341, 244, 0, 367, 0, 0, 0, 0, 273, 240,
	306, 245, 251, 294, 340, 279, 299, 206, 331, 307,
	255, 0, 0, 571, 545, 570, 572, 573, 569, 574,
	575, 556, 466, 0, 509, 567, 566, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 249, 0, 290, 228, 534, 514, 515,
	516, 465, 517, 512, 513, 535, 507, 531, 532, 489,
	510, 518, 530, 519, 533, 536, 537, 576, 577, 525,
	578, 522, 538, 529, 528, 520, 508, 539, 540, 493,
	491, 523, 524, 511, 492, 0, 0, 0, 347, 348,
	349, 369, 333, 0, 220, 137, 316, 38, 125, 105,
	0, 0, 0, 0, 0, 0, 0, 278, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 308, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 204, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 313, 329, 205, 304, 342, 210, 311,
	200, 277, 300, 0, 0, 197, 327, 310, 259, 242,
	243, 196, 0, 295, 221, 234, 217, 275, 0, 326,
	354, 216, 345, 0, 337, 199, 0, 336, 274, 323,
	328, 260, 254, 198, 325, 258, 253, 246, 225, 368,
	238, 286, 252, 287, 239, 264, 263, 265, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 247, 0, 0, 0, 355, 0, 298, 280, 0,
	0, 0, 296, 250, 324, 288, 330, 314, 338, 292,
	289, 190, 315, 219, 261, 201, 203, 215, 222, 224,
	226, 227, 270, 271, 283, 303, 317, 318, 319, 218,
	211, 297, 212, 236, 213, 191, 305, 214, 193, 284,
	322, 0, 232, 293, 257, 194, 256, 285, 321, 320,
	202, 346, 352, 353, 357, 0, 358, 0, 0, 0,
	366, 370, 371, 372, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 351, 230, 187, 188,
	334, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 350, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 241, 282, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 332, 344, 361, 364, 0, 0, 0, 192, 363,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 359, 266, 267,
	268, 269, 383, 385, 209, 362, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 229, 235, 0, 237, 208, 281,
	231, 341, 244, 0, 367, 0, 0, 0, 0, 273,
	240, 306, 245, 251, 294, 340, 279, 299, 206, 331,
	307, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 249, 106, 290, 228, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 186, 316, 0, 0, 347,
	348, 349, 369, 333, 0, 220, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 308, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 204, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 0, 195, 313, 329, 205, 304, 342, 210, 311,
	200, 277, 300, 0, 0, 1618, 1620, 1621, 1622, 1623,
	1624, 1625, 0, 1629, 1626, 1627, 1628, 275, 0, 1613,
	1614, 1615, 1616, 890, 1599, 1619, 0, 1600, 274, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1617, 286, 252, 287, 239, 264, 263, 265, 915, 917,
	919, 921, 924, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 247, 0, 0, 0, 1612, 0, 298, 280, 0,
	0, 0, 296, 250, 324, 288, 330, 314, 338, 292,
	289, 190, 315, 219, 261, 201, 203, 215, 222, 224,
	226, 227, 270, 271, 283, 303, 317, 318, 319, 218,
	211, 297, 212, 236, 213, 191, 305, 214, 193, 284,
	322, 0, 232, 293, 257, 194, 256, 285, 321, 320,
	202, 346, 352, 353, 357, 0, 358, 0, 0, 0,
	366, 370, 371, 372, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 351, 230, 187, 188,
	334, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 350, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 241, 282, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 332, 344, 361, 364, 0, 0, 0, 192, 363,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 359, 266, 267,
	268, 269, 233, 0, 209, 362, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 229, 235, 0, 237, 208, 281,
	231, 341, 244, 0, 367, 0, 0, 0, 0, 273,
	240, 306, 245, 251, 294, 340, 279, 299, 206, 331,
	307, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 914, 249, 0, 290, 228, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 186, 316, 0, 0, 347,
	348, 349, 369, 333, 0, 220, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 308, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 204, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 1685, 1688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 313, 329, 205, 304, 342, 210, 311,
	200, 277, 300, 0, 0, 197, 327, 310, 259, 242,
	243, 196, 0, 295, 221, 234, 217, 275, 0, 326,
	354, 216, 345, 0, 337, 199, 0, 336, 274, 323,
	328, 260, 254, 198, 325, 258, 253, 246, 225, 368,
	238, 286, 252, 287, 239, 264, 263, 265, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 339, 0, 0, 0, 1682, 0, 1681, 312, 1683,
	1686, 247, 0, 0, 0, 355, 0, 298, 280, 0,
	0, 0, 296, 250, 324, 288, 330, 314, 338, 292,
	289, 190, 315, 219, 261, 201, 203, 215, 222, 224,
	226, 227, 270, 271, 283, 303, 317, 318, 319, 218,
	211, 297, 212, 236, 213, 191, 305, 214, 193, 284,
	322, 1687, 232, 293, 257, 194, 256, 285, 321, 320,
	202, 346, 352, 353, 357, 0, 358, 0, 0, 0,
	366, 370, 371, 372, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 351, 230, 187, 188,
	334, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 350, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 241, 282, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 332, 344, 361, 364, 0, 0, 0, 192, 363,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 359, 266, 267,
	268, 269, 233, 0, 209, 362, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 229, 235, 0, 237, 208, 281,
	231, 341, 244, 0, 367, 0, 0, 0, 0, 273,
	240, 306, 245, 251, 294, 340, 279, 299, 206, 331,
	307, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 249, 0, 290, 228, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 186, 316, 0, 0, 347,
	348, 349, 369, 333, 0, 220, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1451,
	0, 0, 0, 0, 223, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 308, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 1452, 0,
	0, 0, 204, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 793, 794, 795, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 313, 329, 205, 304, 342, 210, 311,
	200, 277, 300, 0, 0, 197, 327, 310, 259, 242,
	243, 196, 0, 295, 221, 234, 217, 275, 0, 326,
	354, 216, 345, 0, 337, 199, 0, 336, 274, 323,
	328, 260, 254, 198, 325, 258, 253, 246, 225, 368,
	238, 286, 252, 287, 239, 264, 263, 265, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 247, 0, 0, 0, 355, 0, 298, 280, 0,
	0, 0, 296, 250, 324, 288, 330, 314, 338, 292,
	289, 190, 315, 219, 261, 201, 203, 215, 222, 224,
	226, 227, 270, 271, 283, 303, 317, 318, 319, 218,
	211, 297, 212, 236, 213, 191, 305, 214, 193, 284,
	322, 0, 232, 293, 257, 194, 256, 285, 321, 320,
	202, 346, 352, 353, 357, 0, 358, 0, 0, 0,
	366, 370, 371, 372, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 351, 230, 187, 188,
	334, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 350, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 241, 282, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 332, 344, 361, 364, 0, 0, 0, 192, 363,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 359, 266, 267,
	268, 269, 233, 0, 209, 362, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 229, 235, 0, 237, 208, 281,
	231, 341, 244, 0, 367, 0, 0, 0, 0, 273,
	240, 306, 245, 251, 294, 340, 279, 299, 206, 331,
	307, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 249, 0, 290, 228, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 186, 316, 0, 0, 347,
	348, 349, 369, 333, 0, 220, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 675, 0, 248, 0, 0,
	0, 0, 0, 0, 308, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 683, 684, 0, 0,
	0, 0, 204, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 313, 329, 205, 304, 342, 210, 311,
	200, 277, 300, 0, 0, 197, 327, 310, 259, 242,
	243, 196, 0, 295, 221, 234, 217, 275, 0, 326,
	354, 216, 345, 658, 337, 199, 657, 336, 274, 323,
	328, 260, 254, 198, 325, 258, 253, 246, 225, 368,
	238, 286, 252, 287, 239, 264, 263, 265, 0, 0,
	0, 0, 0, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 247, 0, 0, 0, 355, 0, 298, 280, 0,
	0, 0, 296, 250, 324, 288, 330, 314, 338, 673,
	289, 190, 315, 219, 261, 201, 203, 215, 222, 224,
	226, 227, 270, 271, 283, 303, 317, 318, 319, 218,
	211, 297, 212, 236, 213, 191, 305, 214, 193, 284,
	322, 0, 232, 293, 257, 194, 256, 285, 321, 320,
	202, 346, 352, 353, 357, 0, 358, 0, 0, 0,
	366, 370, 371, 372, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 0, 0, 351, 230, 187, 188,
	334, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 350, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 241, 282, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 332, 344, 361, 364, 0, 0, 0, 192, 363,
	0, 0, 0, 0, 0, 0, 674, 335, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 677, 266, 267,
	268, 269, 233, 0, 209, 362, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 229, 235, 0, 237, 208, 281,
	231, 341, 244, 0, 367, 0, 0, 0, 0, 685,
	680, 681, 245, 251, 294, 340, 279, 299, 206, 331,
	307, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 249, 0, 290, 228, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	0, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 186, 137, 316, 0, 347,
	348, 349, 369, 333, 0, 220, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 93, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 1473, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 106, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 137, 316, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 248,
	0, 0, 0, 93, 0, 0, 308, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 1464, 0, 145, 0, 0,
	0, 0, 0, 0, 204, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 313, 329, 205, 304, 342,
	210, 311, 200, 277, 300, 0, 0, 197, 327, 310,
	259, 242, 243, 196, 0, 295, 221, 234, 217, 275,
	0, 326, 354, 216, 345, 0, 337, 199, 0, 336,
	274, 323, 328, 260, 254, 198, 325, 258, 253, 246,
	225, 368, 238, 286, 252, 287, 239, 264, 263, 265,
	0, 0, 0, 0, 0, 365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 247, 0, 0, 0, 355, 0, 298,
	280, 0, 0, 0, 296, 250, 324, 288, 330, 314,
	338, 292, 289, 190, 315, 219, 261, 201, 203, 215,
	222, 224, 226, 227, 270, 271, 283, 303, 317, 318,
	319, 218, 211, 297, 212, 236, 213, 191, 305, 214,
	193, 284, 322, 0, 232, 293, 257, 194, 256, 285,
	321, 320, 202, 346, 352, 353, 357, 0, 358, 0,
	0, 0, 366, 370, 371, 372, 0, 0, 0, 0,
	0, 360, 0, 0, 0, 0, 0, 0, 351, 230,
	187, 188, 334, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 350, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 241, 282, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 332, 344, 361, 364, 0, 0, 0,
	192, 363, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 359,
	266, 267, 268, 269, 233, 0, 209, 362, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 229, 235, 0, 237,
	208, 281, 231, 341, 244, 0, 367, 0, 0, 0,
	0, 273, 240, 306, 245, 251, 294, 340, 279, 299,
	206, 331, 307, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 249, 106, 290, 228,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 0, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 186, 137, 316,
	0, 347, 348, 349, 369, 333, 0, 220, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 93, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1400, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 106, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 683,
	684, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 658, 337, 199, 657,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 685, 680, 681, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 1048, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 1042, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2632, 0, 145, 527,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2312, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1747, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 1764, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2686, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 527,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2614, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 2551, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2407, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 2447, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1400, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 2141, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1046, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1747, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 316,
	0, 0, 347, 348, 349, 369, 333, 0, 220, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 308, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 1776, 0, 0, 0, 204, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 313, 329, 205, 304,
	342, 210, 311, 200, 277, 300, 0, 0, 197, 327,
	310, 259, 242, 243, 196, 0, 295, 221, 234, 217,
	275, 0, 326, 354, 216, 345, 0, 337, 199, 0,
	336, 274, 323, 328, 260, 254, 198, 325, 258, 253,
	246, 225, 368, 238, 286, 252, 287, 239, 264, 263,
	265, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 247, 0, 0, 0, 355, 0,
	298, 280, 0, 0, 0, 296, 250, 324, 288, 330,
	314, 338, 292, 289, 190, 315, 219, 261, 201, 203,
	215, 222, 224, 226, 227, 270, 271, 283, 303, 317,
	318, 319, 218, 211, 297, 212, 236, 213, 191, 305,
	214, 193, 284, 322, 0, 232, 293, 257, 194, 256,
	285, 321, 320, 202, 346, 352, 353, 357, 0, 358,
	0, 0, 0, 366, 370, 371, 372, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 351,
	230, 187, 188, 334, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 350, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 241, 282, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 332, 344, 361, 364, 0, 0,
	0, 192, 363, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	359, 266, 267, 268, 269, 233, 0, 209, 362, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 229, 235, 0,
	237, 208, 281, 231, 341, 244, 0, 367, 0, 0,
	0, 0, 273, 240, 306, 245, 251, 294, 340, 279,
	299, 206, 331, 307, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 249, 0, 290,
	228, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 0, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 186, 0,
	0, 0, 347, 348, 349, 369, 333, 316, 220, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 1046,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	1332, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	401, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 402, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 215, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 316, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 308, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 204, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 313, 329, 205, 304, 342, 210,
	311, 200, 277, 300, 0, 0, 197, 327, 310, 259,
	242, 243, 196, 0, 295, 221, 234, 217, 275, 0,
	326, 354, 216, 345, 0, 337, 199, 0, 336, 274,
	323, 328, 260, 254, 198, 325, 258, 253, 246, 225,
	368, 238, 286, 252, 287, 239, 264, 263, 265, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 247, 0, 0, 0, 355, 0, 298, 280,
	0, 0, 0, 296, 250, 324, 288, 330, 314, 338,
	292, 289, 190, 315, 219, 261, 201, 203, 442, 222,
	224, 226, 227, 270, 271, 283, 303, 317, 318, 319,
	218, 211, 297, 212, 236, 213, 191, 305, 214, 193,
	284, 322, 0, 232, 293, 257, 194, 256, 285, 321,
	320, 202, 346, 352, 353, 357, 0, 358, 0, 0,
	0, 366, 370, 371, 372, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 351, 230, 187,
	188, 334, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 350, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 241, 282, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 332, 344, 361, 364, 0, 0, 0, 192,
	363, 0, 793, 794, 795, 792, 0, 0, 335, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 359, 266,
	267, 268, 269, 233, 0, 209, 362, 291, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 229, 235, 0, 237, 208,
	281, 231, 341, 244, 0, 367, 0, 0, 0, 0,
	273, 240, 306, 245, 251, 294, 340, 279, 299, 206,
	331, 307, 255, 0, 0, 0, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 249, 0, 290, 228, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 0, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 186, 0, 0, 0,
	347, 348, 349, 369, 333, 0, 220, 0, 0, 0,
	658, 0, 0, 657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1385, 643, 0, 0,
	0, 0, 0, 0, 0, 625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1206, 0, 1385,
	0, 1203, 0, 0, 0, 1205, 1202, 1204, 1208, 1209,
	1387, 0, 648, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2707, 0, 0, 421, 0, 420, 427, 417, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 424, 425, 0,
	426, 430, 0, 0, 412, 0, 642, 1385, 0, 0,
	0, 0, 0, 0, 435, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 626, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1387, 0, 439, 0, 0, 441, 0, 0, 0,
	646, 440, 0, 0, 0, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1213, 1214, 1215, 1216,
	1217, 1218, 1211, 1212, 0, 0, 0, 0, 1367, 0,
	0, 0, 647, 652, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1360, 0, 639,
	1359, 641, 655, 0, 0, 1371, 638, 636, 635, 0,
	640, 627, 628, 629, 630, 631, 1375, 653, 654, 0,
	1385, 0, 0, 0, 0, 0, 0, 0, 1371, 649,
	650, 0, 0, 0, 0, 0, 1364, 1696, 0, 1375,
	1366, 1368, 1370, 0, 1372, 1373, 1374, 1376, 1377, 1378,
	1380, 1381, 1382, 1383, 1387, 0, 0, 0, 0, 1364,
	0, 0, 0, 1366, 1368, 1370, 644, 1372, 1373, 1374,
	1376, 1377, 1378, 1380, 1381, 1382, 1383, 0, 413, 415,
	414, 0, 0, 0, 0, 0, 0, 0, 419, 1386,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 1386, 0, 416, 0, 1371, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 1384, 1375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 0, 1364, 0, 1384,
	0, 1366, 1368, 1370, 0, 1372, 1373, 1374, 1376, 1377,
	1378, 1380, 1381, 1382, 1383, 0, 1363, 421, 0, 420,
	427, 417, 1379, 0, 0, 0, 0, 0, 0, 1369,
	0, 424, 425, 0, 426, 430, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 435, 0,
	1386, 0, 1369, 0, 0, 0, 0, 0, 0, 0,
	418, 422, 428, 0, 429, 431, 0, 0, 432, 433,
	434, 0, 0, 436, 437, 0, 0, 439, 0, 1371,
	441, 0, 0, 0, 0, 440, 0, 1384, 0, 0,
	1375, 0, 0, 2191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 0, 0, 0, 0,
	1364, 0, 0, 0, 1366, 1368, 1370, 2201, 1372, 1373,
	1374, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 0, 0,
	2194, 0, 0, 1379, 0, 0, 0, 2189, 0, 0,
	1369, 0, 2204, 2205, 0, 0, 0, 0, 2190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1386, 421, 0, 420, 427, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 425,
	0, 426, 430, 0, 2195, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 435, 0, 0, 0, 0,
	1384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 415, 414, 0, 0, 1363, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 1379, 0, 416, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2203, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2196, 2198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 422, 428, 0, 429, 431,
	0, 0, 432, 433, 434, 0, 0, 436, 437, 413,
	415, 414, 0, 0, 0, 0, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 2206, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2192, 0, 0, 0,
	0, 0, 2202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 422, 428, 0, 429, 431, 0, 0, 432,
	433, 434, 0, 0, 436, 437,
}

var yyPact = [...]int{
	215, -1000, -308, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -217, 28566, 28566,
	-1000, -1000, 1748, -1000, 28056, 9685, 29076, 221, 219, 29076,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 466, -1000, 27546, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 431, 30233,
	29586, 7634, 29076, -285, -1000, 2423, -142, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 274, 509, 27036, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29952, 76, 509, 637, 642, 693, 693,
	11725, -57, -58, 2423, 281, 161, -1000, 954, 215, 29076,
	1650, 406, 29076, -1000, 1069, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 406, -1000, -1000, -1000, 2423, 2423, -1000,
	29076, 29076, 4, 1221, -1000, 297, 292, 247, 1068, -1000,
	-1000, -1000, -1000, -1000, 2329, -1000, 29076, 29076, 2037, 29076,
	-1000, 1348, 347, 30517, 2176, 810, 519, 2045, -1000, -1000,
	2027, -1000, 136, 825, 224, 213, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 131, -1000, 2252, -1000, -1000, 138, -1000,
	-1000, 119, -1000, -1000, -1000, -59, -1000, -1000, -1000, -1000,
	-1000, -1000, -170, -1000, -1000, 705, 1397, 7634, -1000, 1333,
	-1000, 2670, -1000, -1000, -1000, -1000, 5074, 9164, 9164, 9164,
	9164, -1000, -1000, 1934, 7634, 2024, 2022, -1000, -1000, -1000,
	-1000, 1054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1648, 8654, -1000, 2018, 2016, 2014,
	2007, 2006, 2005, 2003, 2002, 2001, 2000, 1999, 1828, 1926,
	1997, 1647, 1645, 1991, 1990, 1989, 1644, 1828, 1828, 1987,
	1982, 1981, 1979, 1971, 1968, 1965, 1964, 1963, 1962, 1961,
	1959, 1958, 1957, 1952, 1949, 1948, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2673,
	-1000, 1045, 1087, -1000, 1946, 2171, 2267, 1806, 2308, 2249,
	2234, 2227, 2223, 1505, -1000, -1000, 29076, 29076, 429, 429,
	429, 429, 451, 429, 463, 461, 456, 429, -1000, -1000,
	-1000, -1000, -1000, -1000, 551, -1000, -1000, -1000, -1000, 788,
	29076, -1000, 1883, 1143, 2264, 364, 363, 257, -1000, 1210,
	1210, 1210, 1143, 237, 361, 2267, 2267, -87, -92, 1143,
	1143, -92, 1143, 64, -1000, -1000, -1000, 1210, 352, 1210,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2239, 2212, 431,
	29076, 41, 29076, 431, 434, -1000, -161, -1000, -1000, 595,
	-1000, 578, -1000, 1348, 346, 337, 791, 1205, -1000, 1171,
	29076, 29076, 29076, 1171, 1171, 14788, 14278, -1000, 29076, -1000,
	2267, 1806, -1000, 1797, 1730, 1792, 1806, 431, 431, 431,
	431, 431, 431, 431, 29076, 29076, 6604, 6604, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 291, 2172, 236, 1944,
	-1000, 29076, 298, 2267, 2171, 2267, -1000, -1000, 1029, 1504,
	1638, -1000, -1000, 297, 1148, -1000, 713, -1000, -1000, -1000,
	-1000, 29076, 287, -1000, -1000, 1624, 1943, -1000, 383, 798,
	1084, -1000, 162, 30664, 23458, 1348, 23458, 29076, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -62, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 110,
	-1000, 7634, 7634, 7634, 7634, 7634, -1000, 439, 8144, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9164, 9164, 9164, 9164,
	9164, 9164, 9164, 9164, 9164, 9164, 9164, 9164, 1932, 1253,
	9164, 9164, 9164, 9164, 1730, 2315, 790, 171, -1000, -1000,
	-1000, -1000, -1000, 1150, 1397, 7634, 7634, 29076, -1000, 29861,
	7634, 7634, 2023, 7634, 2201, 7634, 3543, 29076, 7634, -1000,
	1787, 1768, -1000, -1000, 1380, 7634, 7634, -1000, -1000, 7634,
	9164, 7634, -1000, -1000, -1000, 107, 2201, 2201, 7634, 7634,
	2201, 2201, 2201, 1222, 2201, 2201, 2201, 2201, 2201, 2201,
	2201, 2201, 29076, 2153, 99, -1000, -1000, -1000, 1829, -1000,
	1876, 1876, 1876, 1876, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1905, 1942, -1000, -1000, 1871, 1871, 1871,
	1829, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1902, 1902, 1904, 1902,
	29076, 2267, -285, 6094, -1000, -289, 2171, 7634, -1000, -1000,
	7634, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1637,
	2193, -1000, 1941, 1028, 29076, 1155, 29076, 23458, 1348, 29076,
	29076, 429, 429, 429, 29076, 434, -1000, 29076, 788, 2191,
	29076, 2319, 9164, 9164, 26526, 1210, 1143, -1000, 29076, -1000,
	-1000, -1000, 1210, 29076, 1210, 2319, 1210, -1000, -1000, -1000,
	1143, 1143, -1000, -1000, -1000, -1000, 1210, 1210, -1000, -1000,
	-63, 2319, 2319, -100, -1000, 29076, 29076, 429, 29076, -1000,
	29076, -1000, -1000, 29076, 30150, 29076, 29076, 2209, -1000, 23458,
	21418, -1000, -160, 633, 584, 586, -1000, -1000, 382, 394,
	13768, 322, 23458, 4563, -1000, -1000, 1171, 1171, 1171, 4563,
	4563, 893, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 785,
	-1000, 71, 2171, -1000, -1000, -1000, -1000, -1000, 29076, 23458,
	1348, 29076, 29076, 29076, 29076, -1000, 1937, 1042, -1000, -1000,
	11215, 1014, 1042, 1636, 29076, 1633, 2043, 2132, -1000, 1935,
	12747, 29076, -1000, -1000, -286, -1000, 12236, 29076, 2171, -1000,
	2171, 29076, -1000, 2260, -1000, 297, 183, -1000, -1000, -1000,
	-1000, -1000, -1000, 998, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 778, -1000, 29076, -1000, -1000, 162, 23458,
	24478, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 115, -1000,
	-1000, 153, -1000, 443, 42, 1146, -1000, -1000, 46, 148,
	487, 1397, -1000, 1260, 1260, 1241, -1000, 457, -1000, -1000,
	-1000, -1000, 1934, -1000, -1000, -1000, 2061, 2298, -1000, 1280,
	1280, 871, 871, 871, 871, 871, 1190, 1190, -1000, -1000,
	-1000, 5074, 1932, 9164, 9164, 9164, 9164, 412, 412, 2818,
	2803, -1000, 7634, 1239, -1000, 7634, 1518, 904, 992, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1767,
	705, 1763, 1866, 2321, 1756, 7634, -1000, -1000, 1145, 1456,
	7124, -1000, -1000, -1000, 1751, 980, 1750, -1000, -1000, -1000,
	1737, 1140, 793, 1734, 1417, 1726, 769, 7634, 7634, 1132,
	1130, 7634, 7634, 7634, 7634, 1725, 7634, 7634, 7634, 7634,
	7634, 7634, 7634, 7634, -1000, 7634, 79, -1000, -1000, -1000,
	-1000, 1503, -1000, 1499, -1000, -1000, -1000, 1628, 1628, -1000,
	1476, -1000, -1000, -1000, -1000, 1448, -1000, -1000, 1447, -1000,
	-1000, -1000, -1000, 1116, -1000, 1397, -1000, 1626, -1000, 889,
	758, -1000, 1388, -1000, -1000, 29076, 10195, 29076, 1883, 2173,
	81, -1000, 792, -1000, 42, 714, 2036, 2151, 29076, 29076,
	29076, 2190, 26016, -1000, 1930, 1100, -1000, -1000, 7634, -1000,
	-1000, 2034, 29076, 29076, 2319, -1000, -1000, -1000, 29076, -1000,
	-1000, -1000, 29076, 2319, 2319, 1143, 1210, 1210, -1000, -1000,
	1210, -1000, 973, -1000, 29076, -1000, -1000, 1883, -1000, 10705,
	585, 30261, -1000, 1152, 1152, 820, 1152, 1152, 1152, 1152,
	313, 307, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1929, -1000, 68, 2206,
	166, 792, 2407, 947, -1000, -1000, -1000, -1000, 16318, 16318,
	13258, 16318, -1000, 1154, -1000, -1000, 590, 568, 582, -1000,
	-1000, 442, -1000, -1000, 714, -1000, -1000, -1000, 1927, 1201,
	-1000, -1000, 1926, -1000, 4563, 4563, 4563, -1000, -1000, 17338,
	29076, -1000, -171, -1000, -152, -1000, -1000, 755, 714, 2042,
	754, -1000, 754, -1000, 10195, 2319, 6604, -1000, 21418, -1000,
	-1000, 25498, -1000, 24988, 2319, -293, 777, -117, -1000, 2156,
	-286, 29076, 29076, 1097, 185, -1000, 1088, -1000, 708, -1000,
	1906, -1000, 1075, 2097, 739, -1000, 1193, -1000, -1000, 972,
	2, -1000, -1000, 29076, 1624, 1041, 24478, 733, -1000, 440,
	968, 950, -1000, 23458, 120, 23458, -1000, 23458, -1000, -1000,
	230, -1000, 29076, 2165, -1000, -1000, -1000, 1577, -314, -1000,
	-1000, -1000, -1000, -1000, 1036, -1000, 412, 412, 2818, 2422,
	-1000, 9164, -1000, 9164, 2311, 1228, -1000, 7634, 1319, 2578,
	1080, 16828, 29076, -1000, -1000, 7634, 7634, -1000, 2269, -1000,
	-1000, 7634, 7634, 1662, -1000, 29076, -1000, -1000, -1000, -1000,
	16828, -1000, 9164, -1000, 7634, 1049, 2170, -41, -41, 2155,
	2137, 2126, 1034, -41, 2056, 2047, 1985, 1969, 1950, 1897,
	1798, 1784, 1397, -1000, -1000, 1715, 1712, 1033, -1000, 1011,
	1708, 1009, 1006, 6094, -1000, -117, 7634, 7634, 7634, 2114,
	-1000, -1000, 100, 1705, 753, -1000, -1000, -1000, 2831, 1876,
	1876, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1905, -1000, -1000, 1871, 1871, 1871, 1829, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1902, 1902, 1904, 1902,
	-1000, 2188, -1000, -72, 1152, 355, 23458, 323, -1000, 2041,
	252, -1000, 2151, -1000, 685, 1899, 1896, 1894, 214, 2831,
	29076, 1008, -1000, 949, 215, -1000, 29076, 1397, -1000, 1348,
	-1000, 1143, -1000, -1000, 2319, 1004, -1000, -1000, 2319, 1143,
	1143, 1210, 29076, -1000, 2179, -1000, -1000, -1000, 2831, 588,
	-1000, 29076, 1268, 575, 429, 575, 1266, 1887, -1000, -1000,
	-1000, 29076, 29076, 29076, 1261, 1257, 30374, -1000, 1438, -1000,
	1432, 1152, 1152, 1431, 1618, 1616, 1610, 1152, 1152, 1428,
	1608, 23968, 1427, 1398, 1394, 1540, 1607, 677, 1475, 1430,
	1418, 29076, 1884, 1555, -72, 1152, 163, 1191, 355, 29076,
	21418, 21418, 21418, 21418, -1000, 2074, 2065, -1000, 2084, 2068,
	2098, 29076, 21418, 1883, -1000, 23968, -1000, -1000, -1000, 1730,
	993, 2217, 611, 7634, -1000, -1000, -1000, 555, 23458, 1603,
	322, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29076,
	29076, 1704, 2301, -1000, 744, -1000, -1000, 935, -1000, 2301,
	-1000, 1390, 1602, -19, -10, 1256, 708, 739, 987, -1000,
	185, 29076, 2090, 1882, -1000, 29076, -286, 6094, 276, -286,
	29076, 6094, 29076, 1382, -1000, -1000, -1000, 2314, 23458, 1348,
	1096, 22948, -1000, 133, -1000, 113, 365, 1596, -1000, 455,
	83, -1000, 1187, 1577, -1000, -1000, -1000, 9164, -1000, -1000,
	-1000, -1000, 1397, 7634, 1700, -1000, 542, 542, 1699, -1000,
	1876, 1876, -1000, 1829, 1871, 1829, 542, 542, 1697, -1000,
	1437, 1729, -1000, 1622, 1611, 7634, -1000, 1692, 2791, 957,
	-190, -41, -1000, 1865, -1000, -41, -41, -41, -41, -1000,
	-41, -41, -41, -41, -41, -41, -41, -41, -1000, -1000,
	-1000, 1583, -1000, -1000, -1000, 1377, -1000, 1376, -1000, -19,
	1397, 1397, -1000, -1000, 2121, 1582, 460, 10195, 2136, 253,
	1513, -1000, -1000, 22438, 369, -1000, -1000, -1000, 465, 105,
	1372, 339, -1000, 29076, 29076, -1000, -1000, -1000, -1000, -1000,
	1152, 1152, 1152, 10705, 10705, 10705, 204, 1214, -1000, 406,
	765, 923, 21418, 29076, -1000, 20908, 1689, -1000, 714, 2319,
	-1000, 29076, -1000, 2319, 2319, 1143, -1000, 253, 30563, -1000,
	-1000, 29076, 29076, -1000, 29076, 29076, 429, 7634, -1000, -1000,
	-1000, 29076, -1000, -1000, -1000, -1000, 16828, 16828, -1000, -1000,
	-1000, -1000, 1581, 1580, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 304, 29076, 978, -1000,
	1186, 1513, 22438, 1181, 1579, 369, 907, -1000, 1159, 2033,
	2039, 2033, -1000, -1000, -1000, -1000, 2058, -1000, 2057, -1000,
	-1000, 907, -1000, -1000, -1000, -1000, -1000, 611, -1000, 2259,
	575, 575, 575, 1683, -1000, 733, 1682, -1000, -1000, -1000,
	-1000, -1000, 2313, 2307, 21928, 2313, -1000, -293, -291, -6,
	2306, 2305, 2340, 253, 29076, 271, -1000, -286, 29076, -1000,
	-1000, 1679, 727, -286, -1000, 708, -1000, -1000, -1000, -1000,
	1348, -1000, 112, -1000, -1000, -1000, -1000, -1000, -1000, 17,
	-1000, 29076, -1000, 1577, 1576, 82, -1000, 1397, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7634, -1000, -1000, -1000, 1594, -1000, -1000,
	7634, 1677, 1574, -1000, 405, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1676, 1673,
	-291, -1000, -1000, -1000, 2831, -1000, 1109, -1000, -1000, 1573,
	30, -1000, -1000, -1000, 1571, 1570, 1371, -1000, -1000, 1406,
	799, 53, -1000, -1000, -1000, -1000, -1000, -1000, 1856, 16828,
	15808, 1568, 1672, 715, -1000, 1661, 1658, 398, 1215, 1200,
	-1000, 1354, 16318, 21418, 20908, 900, -1000, 921, -1000, -1000,
	-1000, 2319, -1000, -1000, 2319, -1000, -1000, 30563, -1000, -1000,
	1275, 9164, -1000, -1000, 1560, 15808, 521, 546, 1854, -1000,
	256, 2339, -1000, 1254, 1252, -1000, 29076, -1000, 1852, 2030,
	231, 1849, -1000, 1846, 1845, 29076, 1572, -1000, -1000, -1000,
	-1000, -1000, -1000, 340, 961, -1000, 1555, 1553, -1000, 30,
	1552, -1000, -1000, 2270, 29076, 6094, -1000, -1000, 7634, 1844,
	-1000, 7634, -1000, -1000, -1000, -1000, -1000, 1841, 2139, -1000,
	-1000, -1000, -1000, -1000, -1000, 7634, 7634, -1000, -1000, -1000,
	-293, 1550, -1000, -1000, 2303, 1549, 1523, 29076, -1000, -1000,
	-286, -1000, 708, 959, -1000, 708, 714, -1000, -1000, 185,
	-1000, -1000, -1000, 1567, -1000, 1538, -41, -1000, 2270, -1000,
	2300, -1000, -1000, -293, -225, -1000, -1000, -1000, -1000, 223,
	-1000, -1000, 173, -1000, -1000, 1355, 376, -1000, 19888, -1000,
	-1000, -1000, -1000, -1000, 30374, 10705, 110, 30374, 645, 1158,
	-1000, 1353, -1000, 1350, -1000, 2319, 900, 921, -1000, -1000,
	999, -1000, -1000, -1000, -1000, 2818, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1349, 1839, -109,
	-1000, -1000, 1838, 19888, 320, 320, 19888, 19888, 19888, 1830,
	458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2267, -1000,
	-1000, 1397, 29076, 1397, 20398, -1000, 2299, 2297, 1397, 705,
	-295, -1000, 1545, -9, -1000, -1000, 711, 708, -1000, -100,
	-1000, -1000, -1000, 45, 7634, -295, 29076, 357, 1543, -1000,
	-1000, 167, -1000, -1000, 958, -1000, 1829, 7634, 404, 30261,
	-1000, -1000, -100, 404, 335, 165, -1000, 1336, -1000, -1000,
	2270, -1000, 1657, 7634, 1828, -218, 19888, 944, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 942, 940, 937, 19888, -1000,
	-1000, -1000, 263, -1000, 936, 908, -1000, -1000, -1000, -1000,
	-1000, 1820, -1000, 2295, -297, -27, -26, 1629, -1000, 3033,
	-1000, -1000, -1000, 705, -1000, 2178, -1000, -1000, 12, -1000,
	-1000, -1000, 19888, 2161, 1494, 242, 2294, -1000, 242, -1000,
	209, -1000, 1147, -1000, 1302, -1000, 2267, -1000, 1408, -1000,
	1988, -1000, 66, 899, -1000, -1000, -1000, -1000, 882, -1000,
	-1000, -1000, 19378, 29076, 1523, -1000, 1531, 433, -15, -26,
	-1000, 2292, -11, 2291, 2290, -1000, -1000, 4053, -287, -47,
	315, 1529, -1000, 164, -1000, -1000, 2161, -1000, 2288, 268,
	-1000, -1000, -1000, 1299, -1000, -1000, 458, -1000, 1972, 1900,
	2327, -1000, -1000, -1000, -1000, 164, 164, 164, 164, 109,
	-1000, -1000, 879, -1000, -1000, -1000, 1817, 1298, -6, -25,
	2287, -1000, 1523, 2286, 1523, 1523, 1237, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1152, 1528, 180, -1000, -1000, -1000,
	18868, 239, 218, 216, -1000, 397, -1000, -1000, -1000, -1000,
	2332, -1000, 2328, 628, 628, -1000, -1000, 29076, 2204, 15298,
	-33, -1000, -1000, -1000, 1527, -1000, 1523, -1000, -1000, 4053,
	1292, -1000, 29076, -1000, 29076, 246, 1285, 9164, 1816, 9164,
	1812, 255, 1807, -1000, -1000, -1000, 1330, 272, -1000, -1000,
	-1000, 29076, -1000, 864, -1000, -1000, -1000, 878, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 842, 1800, 2273, -1000, 2762,
	29076, 2467, 29076, 1617, 1123, 9164, -1000, -1000, -1000, 650,
	-1000, 1118, -1000, 18358, 29076, -1000, -1000, 402, 250, -1000,
	828, -1000, 802, 17848, 1283, 2177, 29076, 5584, -1000, 868,
	800, -1000, 29076, 238, -1000, -1000, -1000, 784, -1000, -1000,
	-1000, -1000, 1397, 29076, -1000, 402, 2088, -1000, 1282, -1000,
	-1000, -1000, 30173, 533, -1000, -1000, 30173, 245, -1000, 379,
	1546, -1000, -1000, 768, -1000, 29076, 569, 7634, -1000, 245,
	30374, -1000, 7634, 746, -1000, 30374, 729, -1000, -1000,
}

var yyPgo = [...]int{
	0, 130, 2951, 213, 155, 149, 206, 2950, 2949, 2172,
	2171, 2948, 2947, 2932, 2907, 2906, 2905, 2904, 2902, 2901,
	2900, 2899, 2898, 2896, 2895, 2894, 2893, 2892, 2891, 2878,
	2877, 2876, 205, 2875, 2874, 2873, 2872, 2871, 2865, 2864,
	2863, 2862, 2860, 2846, 2844, 2835, 2821, 2820, 2818, 2817,
	2815, 2814, 2813, 2812, 2811, 2810, 2807, 2806, 136, 2804,
	2163, 2803, 2802, 2801, 2800, 2799, 2785, 2781, 178, 2780,
	2779, 2778, 2777, 2776, 2770, 2769, 2768, 2764, 2751, 2749,
	2741, 2740, 2735, 2725, 2720, 2719, 159, 2718, 2717, 145,
	2715, 2714, 2713, 2711, 202, 182, 51, 2709, 37, 123,
	180, 212, 196, 214, 210, 158, 126, 67, 2707, 2200,
	2706, 138, 188, 111, 25, 2705, 135, 2701, 112, 33,
	30, 209, 118, 42, 114, 87, 2700, 183, 54, 71,
	78, 2699, 2698, 211, 163, 2697, 89, 2695, 2693, 2692,
	2690, 172, 96, 2689, 49, 2688, 128, 77, 86, 82,
	2687, 2682, 2679, 69, 2678, 2672, 2671, 2670, 147, 2669,
	2668, 97, 63, 2667, 2663, 2662, 48, 186, 66, 2661,
	60, 2659, 2657, 2656, 2655, 52, 2654, 2652, 16, 20,
	24, 2650, 19, 2649, 2648, 1, 2647, 184, 148, 74,
	106, 2646, 410, 2645, 2644, 2643, 115, 2642, 512, 2641,
	2639, 2638, 2636, 22, 2635, 174, 38, 2634, 68, 94,
	129, 168, 170, 2633, 2632, 2631, 191, 64, 83, 0,
	2629, 113, 2627, 2626, 2624, 217, 2623, 192, 169, 189,
	119, 215, 127, 2620, 2619, 65, 2618, 120, 62, 103,
	10, 2617, 152, 2616, 580, 153, 2614, 176, 2610, 110,
	3, 104, 2609, 2607, 34, 240, 2606, 2605, 2604, 144,
	2599, 2597, 90, 139, 2596, 2582, 2578, 31, 2575, 32,
	27, 2574, 75, 2573, 207, 2572, 142, 98, 154, 132,
	109, 185, 190, 57, 53, 2571, 1113, 102, 72, 21,
	2570, 187, 2568, 203, 193, 2567, 166, 2566, 199, 361,
	177, 2565, 151, 7, 35, 29, 2564, 11, 2562, 108,
	2561, 2559, 15, 2557, 18, 2556, 2555, 2554, 2553, 6,
	2551, 2534, 2532, 2, 4, 2531, 5, 175, 2530, 2529,
	2528, 2527, 36, 99, 2526, 92, 200, 2521, 2520, 70,
	2518, 2515, 2514, 600, 2513, 2512, 2511, 2510, 2509, 2507,
	2506, 2502, 2501, 2500, 61, 41, 2498, 2497, 2496, 2476,
	55, 105, 2472, 2471, 2469, 2468, 26, 141, 2465, 14,
	2457, 17, 23, 28, 2456, 88, 2455, 12, 157, 2453,
	2452, 13, 2451, 2448, 8, 9, 2447, 2446, 84, 2445,
	59, 44, 121, 100, 2444, 58, 162, 101, 2441, 2440,
	204, 201, 173, 2438, 133, 198, 216, 2435, 181, 2433,
	2428, 2413, 2412, 2410, 2401, 1215, 2396, 2394, 194, 43,
	73, 81, 2393, 2392, 2387, 56, 125, 85, 80, 171,
	2386, 165, 2384, 2381, 76, 2380, 2377, 2376, 2374, 2372,
	164, 2369, 2367, 2364, 195, 161, 2356,
}

//line mysql_sql.y:8791
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 439, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 92, 437, 437, 437, 438, 438,
	90, 90, 90, 79, 91, 387, 387, 386, 386, 385,
	385, 340, 340, 384, 384, 384, 383, 383, 383, 382,
	382, 381, 381, 380, 380, 378, 378, 379, 377, 376,
	376, 376, 374, 374, 374, 370, 370, 372, 371, 371,
	373, 365, 365, 368, 368, 366, 366, 366, 366, 369,
	364, 364, 364, 363, 363, 78, 78, 78, 288, 288,
	77, 77, 302, 302, 302, 302, 302, 300, 300, 300,
	300, 300, 300, 299, 299, 298, 298, 303, 303, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	69, 69, 69, 69, 72, 72, 72, 73, 297, 297,
	297, 70, 71, 71, 287, 287, 292, 292, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	296, 296, 296, 294, 294, 293, 293, 295, 295, 63,
	63, 63, 66, 65, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 64, 64, 64, 64, 64, 64, 59,
	59, 59, 59, 59, 58, 58, 60, 60, 284, 284,
	283, 74, 74, 75, 441, 441, 440, 442, 442, 442,
	442, 76, 82, 82, 82, 82, 82, 82, 82, 81,
	81, 84, 84, 83, 85, 68, 68, 68, 68, 68,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 411,
	411, 411, 413, 413, 223, 224, 443, 226, 222, 222,
	222, 407, 407, 408, 409, 410, 410, 410, 80, 7,
	7, 7, 7, 7, 57, 62, 183, 183, 183, 184,
	184, 184, 184, 184, 55, 61, 61, 424, 424, 56,
	431, 431, 343, 343, 237, 237, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 347, 348, 233, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 39, 38, 38, 38,
	273, 273, 37, 444, 444, 212, 212, 46, 47, 48,
	49, 50, 51, 36, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 54, 54, 359, 359, 446, 446, 446,
	52, 53, 342, 342, 342, 44, 43, 42, 41, 41,
	35, 35, 34, 34, 40, 230, 230, 230, 232, 232,
	228, 445, 445, 314, 314, 231, 231, 33, 33, 33,
	229, 229, 211, 227, 227, 227, 8, 8, 6, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 18, 20,
	281, 281, 278, 19, 14, 13, 16, 12, 15, 17,
	5, 5, 5, 5, 9, 9, 10, 106, 106, 148,
	148, 419, 419, 415, 415, 416, 416, 416, 417, 417,
	418, 418, 86, 353, 353, 353, 353, 353, 353, 4,
	128, 128, 129, 129, 352, 352, 352, 352, 352, 352,
	352, 285, 285, 396, 396, 396, 397, 127, 127, 122,
	122, 354, 354, 251, 398, 398, 362, 362, 361, 361,
	360, 360, 125, 125, 126, 126, 109, 109, 95, 95,
	367, 367, 367, 367, 375, 375, 339, 339, 175, 175,
	206, 206, 207, 207, 99, 99, 100, 100, 100, 100,
	100, 100, 404, 404, 406, 406, 405, 124, 124, 120,
	120, 121, 121, 121, 119, 119, 118, 117, 117, 116,
	114, 114, 114, 115, 115, 115, 102, 102, 102, 101,
	101, 101, 101, 101, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 103, 103, 412, 412,
	412, 344, 344, 344, 350, 350, 189, 189, 190, 190,
	188, 188, 104, 104, 105, 105, 105, 105, 187, 187,
	186, 107, 107, 113, 112, 112, 108, 108, 108, 108,
	197, 197, 196, 196, 196, 196, 89, 93, 93, 94,
	132, 132, 195, 194, 194, 194, 131, 131, 130, 130,
	123, 123, 111, 111, 111, 111, 193, 110, 191, 436,
	436, 435, 435, 434, 432, 432, 432, 433, 433, 433,
	433, 389, 389, 389, 389, 389, 217, 217, 217, 221,
	221, 220, 220, 220, 220, 220, 225, 3, 3, 3,
	3, 24, 24, 24, 24, 24, 24, 24, 30, 140,
	141, 29, 133, 133, 134, 134, 135, 135, 136, 137,
	137, 137, 139, 138, 28, 21, 420, 423, 421, 421,
	425, 425, 425, 426, 426, 426, 427, 427, 22, 422,
	428, 428, 428, 282, 282, 279, 280, 280, 277, 276,
	276, 276, 430, 430, 429, 429, 429, 218, 218, 23,
	272, 272, 274, 275, 275, 275, 266, 266, 266, 266,
	27, 270, 270, 271, 271, 271, 271, 271, 267, 267,
	269, 269, 265, 265, 265, 265, 265, 26, 264, 264,
	262, 262, 260, 260, 261, 261, 259, 259, 259, 263,
	263, 25, 25, 25, 97, 96, 96, 96, 209, 209,
	208, 208, 98, 31, 160, 160, 328, 328, 328, 328,
	328, 346, 346, 346, 329, 329, 329, 330, 330, 330,
	331, 331, 331, 331, 331, 345, 345, 304, 304, 305,
	305, 305, 308, 308, 320, 320, 321, 321, 319, 319,
	326, 326, 325, 325, 324, 324, 323, 323, 322, 322,
	322, 322, 317, 317, 316, 316, 306, 306, 306, 306,
	306, 307, 307, 307, 315, 315, 318, 318, 166, 166,
	167, 167, 167, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 394, 394, 395, 169, 169, 169, 173, 173,
	173, 173, 173, 173, 168, 168, 170, 170, 149, 149,
	147, 147, 142, 142, 143, 143, 144, 144, 145, 145,
	146, 146, 146, 146, 146, 146, 290, 290, 392, 392,
	393, 393, 388, 388, 388, 391, 391, 391, 391, 391,
	390, 390, 150, 204, 204, 204, 219, 219, 219, 219,
	203, 203, 203, 165, 165, 164, 164, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 289, 289, 234, 234, 235, 235, 182, 181,
	181, 181, 181, 181, 179, 180, 178, 178, 178, 178,
	178, 177, 177, 176, 176, 176, 268, 268, 174, 174,
	172, 172, 172, 171, 171, 171, 327, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	243, 243, 248, 248, 403, 403, 402, 151, 151, 151,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 161,
	161, 161, 312, 312, 312, 312, 312, 313, 313, 313,
	310, 310, 311, 311, 252, 253, 253, 351, 351, 309,
	309, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 358, 358,
	358, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 414, 414, 414, 399, 399, 399,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 201,
	201, 201, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 254, 254, 255, 255, 355,
	355, 355, 355, 355, 355, 356, 356, 357, 357, 357,
	357, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 349,
	241, 198, 198, 198, 256, 249, 249, 250, 250, 244,
	244, 244, 244, 244, 244, 244, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 245, 245,
	247, 247, 258, 258, 258, 257, 257, 257, 257, 257,
	257, 257, 163, 163, 163, 163, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 153, 153, 153,
	153, 157, 157, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 158, 158, 158,
	158, 156, 156, 156, 156, 156, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 87, 88, 88, 155, 205, 205, 332, 332,
	335, 335, 333, 333, 334, 336, 336, 336, 337, 337,
	337, 338, 338, 338, 341, 341, 210, 210, 210, 216,
	216, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 11, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 2, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 3, 3, 2, 4, 4, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 2, 2, 0, 1, 4, 2, 4, 1,
	5, 3, 2, 1, 2, 2, 4, 4, 5, 2,
	1, 3, 4, 4, 1, 2, 9, 7, 1, 3,
	3, 1, 1, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 2, 4, 3, 3, 1, 1, 1, 1, 1,
	2, 3, 4, 7, 2, 3, 3, 4, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 7, 4, 2, 2, 1, 2,
	2, 2, 3, 2, 7, 7, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 3, 2,
	4, 4, 4, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 3, 0, 2, 2, 0, 2,
	2, 1, 1, 1, 1, 0, 1, 4, 4, 5,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 3, 1, 4, 6, 4, 4, 4, 3, 6,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	0, 4, 1, 3, 3, 1, 5, 6, 5, 5,
	3, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 7, 7, 1, 4, 1, 1,
	3, 4, 3, 0, 1, 1, 0, 2, 7, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 11, 9, 11, 2, 2, 4, 5, 1, 3,
	0, 3, 5, 10, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 3, 2, 4, 3, 0, 1, 0, 6, 0,
	3, 5, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 1, 5, 6,
	4, 1, 1, 2, 0, 1, 1, 2, 5, 0,
	1, 1, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 2, 2, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 3, 5, 2, 2, 2, 2, 1,
	1, 2, 5, 6, 6, 6, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 5, 0, 1, 3, 0, 1, 0, 2, 0,
	6, 8, 6, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -439, -2, -1, -3, -90, -4, -86, -5, -6,
	-8, -67, -81, -83, -85, -84, -32, -7, -80, -58,
	-59, -63, -69, -74, -77, -78, -79, -91, -87, -88,
	-89, -99, -92, -24, -23, -22, -21, 402, 12, 447,
	-9, -10, -404, -11, 234, -222, -223, -224, -226, -443,
	-33, -34, -35, -41, -42, -43, -44, -52, -53, -54,
	-36, -37, -38, -39, -46, -47, -48, -49, -50, -51,
	-40, -56, -55, -61, -57, -62, 209, -60, 61, -64,
	-65, -66, -70, -71, -72, -73, -75, -76, 333, 339,
	392, 530, 531, 46, -100, -102, 532, -25, -26, -27,
	-28, -29, -30, -31, 205, 14, 480, -12, -15, -13,
	-16, -14, -19, -20, -18, -17, 229, 228, 37, 292,
	293, 294, 337, 227, 206, 13, 137, 138, 140, 141,
	30, 41, 315, -101, 67, 207, -103, 10, 534, 440,
	533, -109, 38, -147, -219, 70, 78, -213, -215, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 450, 520, 313, 314, 477,
	246, 270, 363, 273, 280, 137, 156, 150, 178, 170,
	145, 250, 285, 251, 77, 140, 433, 88, 413, 389,
	143, 265, 267, 269, 272, 252, 166, 161, 264, 248,
	530, 159, 253, 39, 254, 183, 255, 256, 482, 409,
	312, 415, 277, 387, 160, 410, 268, 412, 185, 189,
	425, 339, 154, 155, 417, 427, 182, 226, 42, 479,
	238, 428, 187, 181, 177, 436, 281, 279, 180, 153,
	176, 249, 50, 191, 190, 192, 383, 384, 385, 386,
	257, 258, 327, 424, 173, 162, 317, 146, 22, 431,
	233, 414, 340, 259, 274, 282, 186, 188, 240, 245,
	481, 391, 244, 278, 429, 158, 237, 266, 232, 432,
	147, 333, 342, 260, 141, 271, 426, 435, 49, 355,
	152, 144, 223, 138, 242, 247, 11, 261, 262, 263,
	284, 283, 275, 174, 239, 179, 164, 151, 175, 139,
	241, 434, 356, 528, 315, 372, 172, 169, 243, 216,
	430, 416, 142, 376, 357, 167, 286, 524, 525, 526,
	328, 311, 287, 288, 165, 230, 408, 289, 291, 382,
	304, 358, 390, 364, 359, 198, 295, 419, 184, 527,
	296, 297, 298, -109, -60, -10, -9, -101, -102, -147,
	213, -227, 23, 387, -68, 388, 209, 67, -219, -5,
	-4, -86, -58, -99, -225, -219, 292, 292, -225, 213,
	-219, 244, 371, -343, 219, -299, -272, 245, -298, -274,
	-301, -275, 31, 205, 207, 206, 241, 14, 337, 215,
	12, 10, 338, 227, 24, 25, 27, 13, 339, 341,
	28, 342, 345, 346, 347, 41, 350, 351, 234, 70,
	78, 73, 252, -141, -219, -250, -244, 95, 235, -246,
	-239, -240, -242, -384, -378, -238, 67, 121, 122, 129,
	96, -241, -327, 35, 98, 487, 448, -199, -200, -201,
	-202, -219, -379, -377, 73, 79, 82, 85, 86, 84,
	83, 163, 81, 74, 133, 134, -102, 70, -399, 495,
	-214, 516, 520, 515, 46, -349, -357, 212, -355, 132,
	168, 230, 164, 12, 127, 382, 165, 492, 512, 450,
	496, 519, 489, 490, 484, 485, 486, 488, 497, 499,
	511, -358, 507, 517, 518, 505, 72, 71, 510, 509,
	498, 493, 494, 500, 483, 491, 501, 502, 508, 513,
	514, 321, 88, 322, 323, 440, 316, 324, 219, 387,
	55, 325, 326, 327, 328, 329, 447, 330, 56, 331,
	320, 234, 372, 332, 167, 184, 452, 451, 453, 444,
	441, 439, 442, 443, 445, 446, 503, 504, 506, -295,
	-293, -219, -93, -94, 522, -118, -119, -192, 19, 6,
	7, 8, 9, -437, 389, 481, 295, 334, 216, 313,
	372, 244, -266, -264, -345, 289, 285, 214, 224, 223,
	89, 440, 212, 348, -415, -416, 202, 203, 204, -406,
	473, -405, -219, 323, 26, 213, 334, 419, 420, 421,
	422, 423, -45, -359, -342, 416, 415, -231, 414, 407,
	418, 409, 314, 205, 474, -210, 358, 390, 240, 437,
	438, 335, 391, 425, 426, 410, 88, 171, 168, 216,
	213, 313, 440, 372, -415, 142, 139, -286, 142, 94,
	147, 146, -286, 244, 371, 40, -292, 382, -291, -293,
	425, 426, 436, 71, 72, 424, -210, 88, 408, 408,
	-119, -192, -118, -100, -102, -89, -404, 313, 372, 244,
	215, 213, 216, 440, 292, 334, -344, -412, 31, -350,
	199, 200, 201, 32, 33, -1, -219, 73, -125, 236,
	-147, 135, -125, -119, -118, -119, -147, -203, -219, 389,
	104, -68, -68, 388, -407, -408, -409, -411, 209, 388,
	387, 135, 15, -225, -225, 65, -147, -274, 244, -299,
	-272, 35, 64, 136, 217, 136, 64, 67, 335, 313,
	372, 336, 214, 440, 213, 348, 216, 244, 349, 313,
	372, 213, 216, 440, 244, 313, 213, 216, 372, 244,
	349, 407, 408, 216, 26, 340, 343, 344, 408, -363,
	436, 136, 94, 91, 92, 93, -244, 111, -257, 104,
	105, 106, 107, 108, 109, 110, 118, 117, 128, 121,
	122, 123, 124, 125, 126, 127, 119, 120, 114, 95,
	112, 116, 113, 97, -102, -244, -250, 46, -242, -242,
	-242, -242, -327, -248, -244, 67, 67, 135, 73, -244,
	67, 67, 67, 67, 67, 67, 67, 67, 67, -356,
	67, 67, -254, -255, 67, 67, 67, 73, 73, 67,
	67, 67, 73, -255, -255, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 136, -153, -157, -154, -156, -155, -159, -158,
	168, 169, 132, 172, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 30, 184, 230, 164, 165, 166,
	167, 185, 150, 170, 478, 193, 151, 194, 152, 195,
	153, 196, 154, 155, 197, 156, 159, 160, 161, 158,
	135, -119, 136, 67, -95, 38, -121, 21, -103, -102,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 79,
	-140, -219, -133, -219, -262, 219, -262, -262, -262, 215,
	-262, 213, 213, 213, -262, -417, 149, 136, -406, -124,
	67, -230, 112, 116, 23, 242, 242, 279, -444, -445,
	15, 114, -228, -445, -228, -230, -446, 215, 417, 42,
	243, 242, -120, -121, -120, 411, 408, -314, 412, 413,
	-231, -230, -230, -231, -230, 213, 216, 440, -444, 242,
	-444, 30, 30, -343, -147, -343, 474, -211, -219, -343,
	-418, 218, 429, 480, 145, 146, 147, -274, 244, 244,
	136, 104, 23, -294, 104, 115, -293, -293, -293, -294,
	-294, -168, 40, -218, 132, -219, 73, -168, 40, -441,
	-440, -147, -120, -103, -102, 68, 68, 68, -343, -343,
	-343, -343, -343, -343, -343, -225, -133, -104, -105, 123,
	-244, -219, -104, 38, 408, 38, -352, -128, -99, 314,
	67, 67, -219, -353, 46, -99, 67, 30, -120, -95,
	-121, 135, 79, 73, -68, 68, 136, -410, 85, 86,
	-413, 182, 174, -219, -82, 73, -3, -4, -5, -6,
	-32, -58, -99, -380, -378, 67, 31, 381, 64, 15,
	-300, 213, 440, 334, 240, 216, 313, -298, -281, -278,
	-276, -218, -274, -277, -276, -303, -203, 408, -96, 393,
	291, -244, -244, -244, -244, -244, 84, 95, 311, 85,
	86, -239, -258, 31, 287, 288, -240, -240, -240, -240,
	-240, -240, -240, -240, -240, -240, -240, -240, -247, -256,
	-327, 67, 114, 112, 116, 113, 97, -242, -242, -240,
	-240, 68, 136, -403, -402, 99, -244, -244, -219, -400,
	-401, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 325, 320, 326, 324, 316, 332, 327, 328,
	167, 471, 472, 465, 466, 467, 468, 469, 470, -249,
	-250, -249, -244, -400, -249, -198, 32, 31, -250, -244,
	-414, 309, 308, 310, -122, -219, -249, 68, 68, 68,
	79, -250, -250, -249, -240, -249, -401, -198, -198, -250,
	-250, -198, -198, -198, -198, 123, -198, -198, -198, -198,
	-198, -198, -198, -198, -293, 40, -338, 356, 355, -332,
	-334, 67, -333, 67, -333, -333, -333, 67, 67, -335,
	67, -335, -335, -332, -336, 67, -336, -337, 67, -336,
	-219, -120, -94, -361, -360, -244, 40, 523, -95, -244,
	-117, -116, -244, -438, 73, 34, 67, 135, -147, 95,
	-420, -219, -282, -279, -276, -272, -219, -219, -262, -262,
	-262, -147, -418, -405, 34, -123, -219, -188, 16, -242,
	-242, -276, 244, -444, -230, -212, -211, -232, -445, -227,
	-232, -188, -445, -230, -230, -232, -228, 408, -188, -188,
	-314, -229, -219, -229, -262, -212, -212, -147, -183, 210,
	207, -167, -185, 353, 246, -263, 250, 77, 251, 389,
	252, 215, 254, 255, 256, 226, 257, 258, 259, 382,
	260, 261, 262, 263, 336, 6, 299, 40, -420, -420,
	30, -282, -112, -107, -111, -108, -113, -191, -193, -110,
	67, -147, -102, -219, 430, 431, 143, 146, 145, 31,
	381, -297, 381, 31, -272, -291, -287, 73, 382, -277,
	-296, 64, 132, -360, -294, -294, -294, -296, -296, 131,
	136, -442, 429, 430, 202, -95, -420, -281, -272, -219,
	-149, -147, -149, -219, 67, -187, 136, -186, 15, -220,
	-219, 34, 73, 135, -187, 73, -149, 73, -285, 64,
	46, 30, 67, -127, 68, -122, -126, -219, -354, -251,
	-398, 522, -127, 68, -396, -397, -122, -95, -95, -219,
	23, -68, -408, 135, 136, -123, -300, -280, -277, -302,
	123, -219, -288, 136, 480, 535, 71, 217, -430, -429,
	373, 68, 136, -364, 218, 447, 73, 536, 198, 84,
	311, 85, 86, -327, -250, -247, -242, -242, -240, -240,
	-245, 231, -245, 94, -244, -243, -402, 101, -244, 34,
	136, 65, 135, 68, 68, 15, 15, 68, -244, 68,
	68, 15, 15, -244, 68, 135, 68, 68, 68, 68,
	65, 68, 136, 68, 136, -250, -244, 68, 68, -244,
	-244, -244, -250, 68, -244, -244, -244, -244, -244, -244,
	-244, -244, -244, -341, 357, 79, 79, -205, 73, -205,
	79, 79, 79, 136, 68, 73, 136, 22, 136, -114,
	36, 37, -141, -134, -135, -136, -137, -153, -203, 169,
	172, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 230, 164, 165, 166, 167, 185, 150, 170,
	151, 152, 153, 154, 155, 156, 159, 160, 161, 158,
	-219, -124, 35, -423, 360, -431, 136, 40, -429, -265,
	65, -260, -261, -259, -263, -147, -147, -147, -160, 34,
	15, -106, -148, -219, 67, 68, 136, -244, -273, 65,
	-219, -212, -188, -219, -147, -219, -188, -188, -230, -232,
	-232, -228, 135, -211, -124, -144, -150, -145, -203, -235,
	-146, 222, 220, 224, -393, 89, 225, 276, 90, 215,
	-184, 215, 90, 221, 225, 220, 136, -185, -216, 104,
	-216, -210, 131, -216, -216, -216, -216, 253, 253, -216,
	-216, -216, -216, -216, -216, -216, -216, -216, -216, -216,
	-216, -216, -216, 67, -424, 360, 30, 319, -431, 30,
	-194, -195, -196, -197, 53, 57, 59, 54, 55, 56,
	60, 30, 136, -217, -221, 34, -219, 73, -217, -102,
	-107, -112, -217, 67, 144, 147, 147, 146, 217, 67,
	104, -296, -296, -296, 40, -218, -440, 436, 430, 64,
	136, -134, -188, -105, -107, -219, 73, -219, 123, -188,
	-175, 525, 38, -367, 412, 39, -354, -396, -129, -420,
	68, 136, -128, 314, 68, 136, 136, 67, 68, 46,
	136, 104, 135, 389, -219, -378, 68, -302, 136, 217,
	135, 135, -278, 339, -218, -280, 20, 480, -203, 38,
	-209, -208, 73, 536, 68, -245, -245, 94, -242, -239,
	68, 102, -244, 100, -151, -153, 355, 356, -152, -158,
	132, 168, 230, 167, 166, 164, 355, 356, -168, -219,
	-244, -244, 68, -244, -244, 15, -219, -168, -240, -244,
	-119, 68, -309, 403, -309, 68, 68, 68, 68, -309,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 136, 68, 68, 68, 136, 68, 136, -360, -367,
	-244, -244, -116, -115, 43, 347, 68, 136, -153, 34,
	-426, 414, 362, -216, -237, -236, 315, 41, -347, 382,
	368, 369, -279, 244, 64, 303, 304, 305, 306, -259,
	-210, 131, 255, 67, 67, 67, -328, 296, -153, -147,
	-106, -219, 15, 136, -419, 135, -1, -219, -272, -230,
	-188, -445, -188, -230, -230, -232, -219, 34, -153, -146,
	-219, 90, -392, -393, -262, -392, 90, 67, -219, -219,
	-219, 90, 90, -185, 79, 79, -216, -216, 79, 73,
	73, 73, -216, -216, 79, 73, -221, 79, 79, 79,
	79, 40, 73, -173, 40, 264, 268, 265, 266, 267,
	79, 40, 79, 40, 79, 40, -219, 67, -394, -395,
	73, -426, -216, 319, 104, -237, -284, -283, -203, -111,
	-111, -111, -111, 53, 53, 53, 58, 53, 58, 53,
	-196, -284, -113, -124, -221, 68, -436, -435, -434, -432,
	61, 218, 62, -249, 147, -280, -233, 73, -287, -147,
	-147, 68, -190, 17, 135, -190, 79, 73, -375, 399,
	394, 396, 90, 68, 136, -128, -122, 46, 67, -219,
	-251, -362, -361, 46, -99, -354, -397, -360, -219, 79,
	15, -277, -272, 123, 123, -219, 340, -288, 73, 361,
	73, 213, 537, 136, 104, -209, -239, -244, 68, -161,
	155, 154, -161, 68, -333, -333, -332, -335, -332, -161,
	-161, 68, 68, 23, 68, 68, 68, -244, 68, 68,
	136, -351, 449, -309, 67, -309, -309, -309, -309, -309,
	-309, -309, -309, -309, -309, -309, -309, 73, 79, 79,
	-375, 44, 45, 73, 211, -136, 40, -99, -427, 77,
	-421, 73, -219, -428, 77, 363, 134, 317, 40, 364,
	365, 379, 312, 79, 79, 370, -422, -219, -147, -216,
	-216, -216, -142, -143, -144, -142, -142, -329, 298, 20,
	79, 122, -125, 65, 135, -107, -148, -219, 123, 68,
	-188, -219, -188, -188, -230, -99, -165, -164, -162, 84,
	95, 40, 353, -163, 77, 131, 269, 247, 270, -182,
	-234, 64, 359, 220, 89, 90, 341, -235, -388, -390,
	-219, -390, -219, -388, -388, -262, -244, -219, -168, -168,
	73, 73, -169, 247, -149, 68, 136, 104, -427, -421,
	104, 73, -428, -188, 136, 104, -131, -130, 64, 65,
	-132, 64, -130, 53, 53, -188, -434, -433, 23, -393,
	-393, -393, 68, 68, -189, 18, 20, 123, -189, -175,
	-339, 524, -371, -373, 394, 20, 20, 13, -99, -420,
	46, -99, -354, -129, 68, -354, -272, -288, 382, -147,
	-208, 73, 537, -244, 68, -244, 68, 73, -253, -252,
	236, 68, 68, -339, -138, -153, -238, 73, -425, 373,
	73, 73, 79, 40, 79, 134, 366, -348, 67, -168,
	-170, -218, 132, 73, 68, 136, 68, 68, -330, 235,
	79, 122, 79, 122, 79, -217, -107, -219, -188, -419,
	135, -188, -188, -162, 84, -240, 73, -170, -171, 40,
	268, 264, -172, 40, 248, 249, -174, 67, 276, 13,
	90, 90, -147, 67, 65, 286, 67, 67, 67, -390,
	68, 248, 249, 68, -395, 73, -425, 73, -119, -283,
	-360, -244, 67, -244, 67, 53, 19, 17, -244, -250,
	-175, 73, 20, 73, -369, 73, -284, -354, 68, -128,
	68, 68, -309, -119, 20, -175, 479, 20, 480, 316,
	40, 79, 40, 367, -267, -269, -203, 67, -166, -167,
	-144, -97, -96, -166, -331, 138, 79, 122, 79, 79,
	-188, -188, 79, 67, -355, -268, 67, -267, -391, 303,
	304, 305, 307, 306, -391, -267, -267, -267, 67, -290,
	-289, 277, 95, -120, -123, -389, -219, 220, 20, 20,
	-206, 526, 73, 396, -98, -365, -314, -311, -310, -313,
	400, 278, 406, -250, -206, -139, -219, 73, 361, 73,
	316, 68, 136, -332, -244, -304, 236, -98, -304, -346,
	146, 297, 480, 79, 122, 79, -119, 68, -244, -254,
	-177, -176, 476, -267, 68, 68, 68, 68, -267, 277,
	68, 68, 136, 67, 20, -340, 527, -374, 399, -368,
	-366, 394, 395, 396, 397, 68, -312, 97, 366, 370,
	-244, 34, 382, -270, -269, -114, 68, -305, 285, 20,
	-305, 297, 79, 122, 79, -120, 68, -181, -179, -180,
	64, 410, 274, 275, 68, -270, -270, -270, -270, 68,
	-219, 220, -207, -219, -369, 73, -376, 218, -372, -373,
	398, -366, 20, 396, 20, 20, -312, 522, 404, 405,
	404, 405, 73, -271, 226, 77, 480, 301, 302, -114,
	20, -306, 278, 279, -307, -318, 281, 79, -289, -180,
	64, -179, 64, 14, 13, -182, 68, 136, -383, 67,
	79, -371, -370, -372, 20, -369, 20, -369, -369, 94,
	-216, 73, 300, -203, 67, -316, 282, 67, -314, 67,
	-314, 90, 304, -178, 271, 272, 30, 146, -178, -219,
	-387, 30, 68, -382, -381, -204, -377, -219, 399, 400,
	73, -369, -312, 79, -219, -303, -308, 283, 79, -240,
	67, -240, 67, -315, 280, 67, 84, 40, 273, -386,
	-385, -384, 68, 136, 135, 68, -320, 67, 20, 68,
	-303, 68, -303, 67, 104, -240, 136, 104, -381, -219,
	-321, -319, 236, -307, 68, 68, 68, -303, 79, 68,
	-385, 40, -244, 135, 68, 136, -219, -317, 284, 68,
	-219, -319, -322, 46, 79, -326, -323, 67, -185, 238,
	114, -326, -185, -325, -324, 283, 239, 67, 68, 136,
	-219, 235, 67, -250, -324, -323, -250, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 687, 688, 689, 690, 0, 0, 0,
	460, 461, 0, 438, 0, 0, 0, 0, 0, 0,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 299, 300, 301, 302, 303, 0, 234, 230, 209,
	210, 211, 170, 171, 172, 173, 241, 242, 322, 0,
	0, 0, 0, 0, 544, -2, 35, 691, 692, 693,
	694, 695, 696, 697, -2, 473, 0, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 288, 289, 290, 284,
	285, 287, 286, -2, 0, 473, 223, 0, 214, 214,
	0, 0, 0, 564, 0, 0, 579, 601, 33, 0,
	0, 522, 0, 527, 920, 956, 957, 958, 959, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 522, 235, 462, 463, 564, 564, 436,
	0, 270, 0, 1407, 274, 0, 0, 0, 433, 265,
	266, 267, 268, 269, 0, 686, 0, 0, 261, 0,
	229, 1466, 0, 0, 0, 0, 0, 0, 113, 750,
	115, 752, 119, 126, 0, 0, 132, 133, 136, 137,
	138, 139, 140, 0, 144, 0, 146, 149, 0, 151,
	152, 0, 155, 156, 157, 0, 167, 168, 169, 753,
	754, 755, -2, 44, 700, 1332, 1227, 0, 1234, 1235,
	1246, 1257, 1029, 1030, 1031, 1032, 0, 0, 0, 0,
	0, 1039, 1040, 0, 1052, 1561, 0, 1046, 1047, 1048,
	1049, 53, 65, 66, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 0, 1200, 1016, 956, 0, 1569,
	0, 1589, 1594, 1588, 0, 0, 1185, 0, 1175, 0,
	0, -2, -2, 0, 0, 1533, -2, 1566, 1585, 1593,
	1570, 1592, 1563, 1564, 1558, 1559, 1560, 1562, 1571, 1573,
	1584, 0, 1580, 1590, 1591, 0, 67, 68, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1191, -2, 1193, 1194, 1196, 1197, 1198, 1199, -2,
	1202, 1203, 1204, -2, -2, 1207, 1208, 1209, 1210, 1211,
	1212, 1215, -2, 1217, -2, -2, 1187, 1188, 1189, 1190,
	1179, 1180, 1181, 1182, 1183, 1184, -2, -2, -2, 0,
	207, 205, 564, 637, 0, -2, 0, 0, 0, 584,
	587, 590, 593, 0, 36, 37, 0, 0, 780, 780,
	780, 780, 0, 780, 0, 0, 0, 780, 757, 758,
	759, 778, 779, 826, 478, 474, 475, 476, 477, 552,
	0, 554, 557, 415, 367, 0, 0, 0, 379, 373,
	0, 0, 415, 0, 0, 559, 559, 0, 425, 415,
	415, -2, 415, 0, 384, 385, 386, 373, 0, 373,
	390, 391, 392, 403, 404, 426, 1356, 0, 0, 322,
	0, 322, 0, 322, 480, 224, 225, 213, 215, 0,
	219, 0, 212, 1466, 0, 0, 181, 1533, 186, 0,
	1414, 1480, 1429, 0, 0, 1447, 0, -2, 0, 251,
	559, 0, 565, 0, 564, 0, 0, 322, 322, 322,
	322, 322, 322, 322, 0, 0, 0, 0, 602, 603,
	598, 599, 600, 604, 605, 3, 0, 0, 490, 0,
	526, 0, 0, 559, -2, 0, 437, 271, 960, 0,
	0, 275, 276, 0, 0, 291, 0, 294, 279, 280,
	281, 0, 0, 263, 264, 0, 0, 231, 0, 0,
	0, 323, 0, 0, 0, 0, 0, 0, 123, 120,
	127, 130, 131, 141, 148, 0, 160, 162, 165, 121,
	128, 134, 135, 142, 163, 122, 124, 125, 129, 164,
	166, 143, 147, 161, 145, 150, 153, 154, 159, 0,
	94, 0, 0, 0, 0, 0, 1233, 0, 0, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1227, 0, 0, 1035, 1036,
	1037, 1038, 1041, 0, 1053, 0, 0, 0, 1286, 0,
	1225, 1225, 0, 1225, 1221, 0, 0, 0, 1225, 1163,
	0, 0, 1165, 1176, 0, 0, 0, 1169, 1170, 1225,
	0, 1225, 1174, 1159, 1160, 0, 1221, 1221, 0, 0,
	1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,
	1221, 1221, 0, 1333, 1351, 1288, 1289, 1290, 1338, 1292,
	1342, 1342, 1342, 1342, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 0, 0, 1331, 1311, 1340, 1340, 1340,
	1338, 1335, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1345, 1345, 1348, 1345,
	0, 559, 0, 0, 547, 0, 528, 0, 581, 583,
	0, 585, 586, 588, 589, 591, 592, 594, 595, 38,
	0, 699, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 780, 780, 780, 0, 480, 479, 0, 553, 0,
	0, 610, 0, 0, 0, 373, 415, 378, 375, 374,
	421, 422, 418, 0, 418, 610, 0, 397, 398, 399,
	415, 415, 405, 560, 406, 407, 418, 0, 423, 424,
	0, 610, 610, 0, 414, 0, 0, 780, 375, 388,
	375, 1357, 1358, 0, 789, 0, 0, 0, 432, 0,
	0, 481, 0, 0, 217, 0, 222, 174, 0, 0,
	0, 0, 0, 0, 203, 204, 0, 0, 0, 0,
	0, 194, 197, 914, 915, 747, 748, 198, 199, 243,
	244, 0, 528, 580, 582, 576, 577, 578, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 618, 612, 614,
	681, 53, 618, 0, 0, 0, 501, 0, 495, 0,
	0, 0, 921, 482, 514, 484, 0, 503, 528, 550,
	528, 0, 272, 0, 277, 0, 0, 293, 295, 296,
	297, 282, 283, 434, 259, 260, 252, 253, 254, 255,
	256, 257, 258, 262, 63, 0, 232, 233, 0, 0,
	0, 107, 108, 109, 110, 111, 112, 114, 98, 450,
	452, 739, 751, 0, 742, 0, 117, 158, 90, 0,
	0, 1228, 1229, 1230, 1231, 1232, 1236, 0, 1238, 1240,
	1242, 1244, 0, 1262, -2, -2, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1247, 1260,
	1261, 0, 0, 0, 0, 0, 0, 1258, 1258, 1253,
	0, 1033, 0, 1050, 1054, 0, 0, 0, 54, 1220,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 0,
	1226, 0, 1227, 0, 0, 0, 1222, 1223, 0, 0,
	0, 1124, 1125, 1126, 0, 509, 0, 1186, 1164, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 1354, 1352, 1353, 1291,
	1339, 0, 1316, 0, 1317, 1318, 1319, 0, 0, 1312,
	0, 1313, 1314, 1315, 1307, 0, 1308, 1309, 0, 1310,
	206, 636, 638, 0, 518, 520, 521, 0, 548, 561,
	566, 567, 570, 34, 39, 0, 704, 0, 557, 0,
	0, 716, 320, 733, 0, 749, 772, -2, 0, 0,
	0, 804, 0, 555, 0, 0, 650, 366, 0, 416,
	417, 370, 1466, 375, 610, 380, 376, 381, 0, 420,
	382, 383, 0, 610, 610, 415, 418, 418, 410, 411,
	0, 427, 430, 428, 0, 387, 389, 557, 305, 0,
	0, -2, 870, 1359, 1359, 0, 1359, 1359, 1359, 1359,
	0, 0, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
	1359, 1359, 1359, 1359, 1359, 1359, 0, 790, 317, 0,
	0, 320, 623, 0, 624, 625, 621, 652, 676, 676,
	0, 676, 656, 920, 226, 227, 0, 0, 221, 175,
	176, 0, 178, 179, 180, 187, 182, 184, 0, 0,
	188, 200, 201, 202, 0, 0, 0, 192, 193, 0,
	0, 246, 247, 249, 0, 546, 448, 449, 453, 0,
	455, 918, 456, 457, 704, 610, 0, 619, 0, 615,
	682, 0, 684, 0, 610, 538, 0, 530, 489, 0,
	514, 503, 0, 0, 490, 507, 0, 524, 483, 511,
	0, 515, 0, 0, 488, 504, 0, 549, 551, 961,
	0, 278, 292, 0, 0, 0, 0, 101, 736, 0,
	102, 106, 96, 0, 0, 0, 741, 0, 738, 743,
	0, 116, 0, 0, 91, 92, 795, 800, 0, 1237,
	1239, 1241, 1243, 1245, 0, 1248, 1258, 1258, 1254, 0,
	1249, 0, 1251, 0, 1228, 0, 1055, 0, 0, 0,
	0, 0, 0, 1111, 1112, 0, 0, 1116, 0, 1118,
	1119, 0, 0, 0, 1123, 0, 1162, 1178, 1166, 1167,
	0, 1171, 0, 1173, 0, 564, 0, 1089, 1089, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 1287, 1355, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 639, 530, 0, 0, 0, 573,
	571, 572, 0, 0, 705, 706, 708, 709, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1399, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	703, 0, 781, 723, 1359, 324, 0, 0, 735, 0,
	0, 777, -2, 784, 0, 0, 0, 0, 806, 0,
	0, 0, 467, 471, 33, 558, 0, 611, 368, 0,
	369, 415, 377, 419, 610, 920, 400, 401, 610, 415,
	415, 418, 0, 429, 0, 306, 926, 927, 0, 0,
	929, 986, 0, 938, 780, 938, 0, 0, 940, 941,
	307, 0, 0, 0, 0, 0, 789, 872, 0, 1360,
	0, 1359, 1359, 0, 0, 0, 0, 1359, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 1359, 0, 0, 324, 0,
	0, 0, 0, 0, 643, 0, 0, 642, 0, 0,
	0, 0, 0, 557, 677, 0, 679, 680, 654, -2,
	0, 623, 659, 1225, 228, 216, 218, 0, 0, 0,
	0, 189, 190, 191, 195, 196, 245, 248, 250, 0,
	0, 0, 608, 613, 620, 683, 685, 54, 616, 608,
	40, 0, 0, 534, 0, 0, 494, 500, 0, 492,
	490, 0, 0, 0, 523, 0, 514, 516, 0, 514,
	0, 0, 0, 0, 435, 64, 298, 0, 0, 0,
	0, 0, 451, 0, 740, 98, 0, 0, 118, 0,
	0, 798, 0, 800, 1224, 1250, 1252, 0, 1259, 1255,
	1034, 1042, 1051, 0, 0, 1057, 1069, 1069, 0, 1060,
	1342, 1342, 1063, 1338, 1340, 1338, 1069, 1069, 0, 55,
	0, 0, 1117, 0, 0, 0, 510, 0, 0, 0,
	1087, 1089, 1093, 0, 1094, 1089, 1089, 1089, 1089, 1099,
	1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1344, 1343,
	1329, 0, 1330, 1341, 1346, 0, 1349, 0, 519, 534,
	562, 563, 568, 569, 0, 0, 0, 0, 710, 0,
	726, 724, 725, 0, 730, 325, 326, 327, 328, 0,
	0, 0, 734, 0, 0, 773, 774, 775, 776, 785,
	1359, 1359, 1359, 922, 922, 922, 814, 0, 805, 522,
	0, -2, 0, 0, 469, 0, 0, 651, 371, 610,
	393, 0, 408, 610, 610, 415, 431, 0, -2, 928,
	987, 950, 950, 939, 950, 950, 780, 0, 309, 310,
	311, 0, 313, 871, 873, 874, 0, 0, 877, 878,
	879, 880, 0, 0, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 908, 909, 910, 911, 912, 913,
	893, 894, 895, 896, 897, 898, 905, 0, 0, 902,
	0, 726, 0, 0, 0, 730, 610, 238, 0, 646,
	640, 0, 629, 644, 645, 632, 0, 634, 0, 630,
	631, 610, 622, 653, 678, 655, 658, 660, 661, 667,
	0, 0, 0, 0, 220, 177, 0, 344, 183, 454,
	919, 459, 606, 0, 0, 606, 539, 538, 536, 78,
	0, 0, 0, 491, 0, 0, 508, 514, 0, 525,
	512, 0, 517, 514, 487, 486, 505, 506, 962, 273,
	0, 737, 98, 103, 104, 105, 99, 97, 744, 0,
	746, 0, 796, 800, 0, 0, 1256, 1056, 1043, 1058,
	1070, 1071, 1059, 1044, 1061, 1062, 1064, 1065, 1066, 1067,
	1068, 1045, 1113, 0, 1115, 1120, 1121, 0, 1168, 1172,
	0, 0, 0, 1092, 1085, 1095, 1096, 1097, 1098, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1337, 0, 0,
	536, 574, 575, 698, 0, 707, 0, 714, 715, 0,
	0, 718, 719, 728, 0, 0, 0, 330, 331, 0,
	0, 0, 343, 339, 340, 341, 321, 729, 0, 0,
	0, 0, 0, 923, 924, 0, 0, 817, 0, 0,
	808, 0, 676, 0, 0, 610, 468, 471, 472, 556,
	372, 610, 412, 409, 610, 304, 952, -2, 965, 967,
	0, 0, 970, 971, 0, 0, 0, 0, 1008, 977,
	0, 0, 981, 0, 1274, 1275, 0, 985, 0, 942,
	951, 0, 951, 0, 0, 950, 0, 312, 875, 876,
	881, 882, 899, 0, 0, 901, 0, 0, 314, 0,
	0, 315, 319, 564, 0, 0, 626, 647, 0, 0,
	627, 0, 628, 633, 635, 237, 662, 0, 0, 664,
	665, 666, 657, 185, 596, 0, 0, 617, 597, 41,
	538, 0, 535, 79, 0, 0, 0, 0, 496, 493,
	514, 499, 498, 0, 513, 485, 100, 95, 745, 490,
	799, 801, 797, 0, 1122, 0, 1089, 1088, 564, 1086,
	0, 1347, 1350, 538, 0, 713, 711, 727, 717, 0,
	731, 732, 0, 332, 333, 0, 336, 342, 0, 786,
	787, 916, 917, 788, -2, 0, 0, -2, 820, 0,
	815, 0, 807, 0, 810, 610, 610, -2, 465, 470,
	0, 394, 413, 966, 968, 969, 972, 973, 974, 1013,
	1014, 1015, 975, 1010, 1011, 1012, 976, 0, 0, 0,
	1272, 1273, 1006, 0, 0, 0, 0, 0, 0, 0,
	936, 906, 907, 900, 903, 904, 318, 316, 559, 239,
	240, 648, 0, 641, 671, 668, 0, 0, 607, 609,
	540, 537, 0, 531, 533, 89, 502, 497, 491, 81,
	1114, 1161, 1091, 1082, 0, 540, 0, 0, 0, 329,
	334, 0, 337, 338, 0, 768, 1338, 0, 827, -2,
	925, 792, 81, 827, 811, 0, 818, 0, 816, 809,
	564, 466, 0, 0, 1175, 1001, 0, 0, 943, 945,
	946, 947, 948, 949, 944, 0, 0, 0, 0, 935,
	937, 982, 0, 236, 0, 0, 672, 674, 669, 670,
	42, 0, 80, 0, 51, 72, 0, 0, 1083, 0,
	1077, 1078, 1079, 1084, 529, 0, 712, 720, 0, 722,
	335, 761, 0, 570, 0, 829, 0, 794, 829, 803,
	0, 813, 0, 822, 0, 819, 559, 1009, 0, 980,
	989, 1002, 0, 0, 761, 761, 761, 761, 0, 983,
	649, 663, 0, 0, 0, 43, 0, 69, 0, 82,
	83, 0, 0, 0, 0, 1090, 1080, 0, 0, 0,
	0, 0, 721, 760, 769, 770, 570, 791, 0, 866,
	793, 812, 821, 0, 824, 464, 978, 988, 990, 991,
	0, 1003, 1004, 1005, 1007, 930, 931, 932, 933, 0,
	673, 675, 0, 542, 532, 52, 56, 0, 78, 75,
	0, 84, 0, 0, 0, 0, 0, 1072, 1073, 1075,
	1074, 1076, 701, 762, 1359, 0, 0, 766, 767, 771,
	0, 854, 0, 0, 860, 0, 867, 823, 979, 992,
	0, 993, 0, 0, 0, 934, 541, 0, 45, 0,
	0, 73, 74, 76, 0, 85, 0, 87, 88, 0,
	0, 764, 0, 830, 0, 832, 0, 0, 0, 0,
	0, 864, 0, 994, 996, 997, 0, 0, 995, 543,
	802, 0, 57, 0, 59, 61, 62, 953, 70, 71,
	77, 86, 1081, 763, 765, 0, 834, 0, 855, 0,
	0, 0, 0, 0, 0, 0, 998, 1000, 999, 46,
	47, 0, 58, 0, 0, 831, 828, 0, 866, 856,
	0, 858, 0, 0, 0, 0, 0, 0, 60, 954,
	0, 836, 0, 852, 857, 859, 861, 0, 865, 863,
	48, 49, 50, 0, 835, 0, 848, 833, 0, 862,
	955, 837, -2, 0, 853, 838, -2, 0, 846, 0,
	0, 839, 847, 0, 842, 0, 0, 0, 841, 0,
	-2, 849, 0, 0, 843, -2, 0, 851, 850,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 96, 3, 3, 3, 126, 118, 3,
	67, 68, 123, 121, 136, 122, 135, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 534,
	105, 104, 106, 3, 535, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 536, 117, 537, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 97, 98, 99, 100, 101, 102, 103, 107,
	108, 109, 110, 111, 112, 113, 114, 115, 116, 119,
	120, 125, 127, 130, 131, 132, 133, 134, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:650
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:656
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:691
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:696
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:702
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:722
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:728
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:735
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:743
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:749
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:767
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:824
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:830
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:834
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:840
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:847
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:855
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:859
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:873
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:877
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:881
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:894
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:900
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:909
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:920
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:924
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:930
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:934
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:940
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:944
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:950
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:974
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:993
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:997
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1001
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1010
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1025
		{
			yyVAL.str = ""
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1032
		{
			yyVAL.str = yyDollar[3].str
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1037
		{
			yyVAL.str = "\n"
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1044
		{
			yyVAL.str = yyDollar[3].str
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1053
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1077
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1093
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1111
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1128
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1151
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1159
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1164
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1174
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1187
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1198
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1211
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1225
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1238
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1251
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1257
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1263
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1270
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1278
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1314
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1318
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1340
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1344
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1350
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1354
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1358
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1362
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1366
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1370
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1374
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1378
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1382
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1386
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1390
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1394
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1398
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_SEQUENCE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1402
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1406
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1410
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1414
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1418
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1422
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1426
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1430
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1434
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1438
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1442
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1446
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1450
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1454
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1458
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1462
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1466
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1470
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1474
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1478
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1482
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1486
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1490
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1494
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1498
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1502
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1506
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1510
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1514
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1518
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1522
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1526
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1530
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1534
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1538
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1542
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1546
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1550
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1569
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1585
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1615
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1619
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1623
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1629
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1635
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1646
		{
			yyVAL.str = yyDollar[3].str
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1652
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1656
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1662
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1670
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1679
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1687
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1695
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1718
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1741
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1748
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1755
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1770
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1777
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1786
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1794
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1800
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1804
		{
			yyVAL.str = yyDollar[1].str
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1810
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1814
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1820
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1824
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1835
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1841
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1846
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1858
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1862
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1866
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1870
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1901
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1906
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1919
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1925
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1939
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1956
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1967
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1978
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1982
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1988
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1998
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2004
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2008
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2014
		{
			yyLOCAL = tree.TableLock{*yyDollar[1].tableNameUnion(), yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2020
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2024
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2028
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2032
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2056
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2060
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2066
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2070
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2076
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2082
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2092
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2106
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2110
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2114
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2118
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2126
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2134
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2144
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2185
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2189
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2195
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2206
		{
			yyVAL.str = "true"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2207
		{
			yyVAL.str = "false"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2208
		{
			yyVAL.str = yyDollar[1].str
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.AlterTable{
				Table:   *yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2247
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(opt)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2254
		{
			yyLOCAL = []tree.AlterTableOption{tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2258
		{
			opts := make([]tree.AlterTableOption, len(yyDollar[1].tableOptionsUnion()))
			for i, opt := range yyDollar[1].tableOptionsUnion() {
				opts[i] = tree.AlterTableOption(opt)
			}
			yyLOCAL = opts
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2296
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2334
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2340
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2351
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2366
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2375
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2380
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2384
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2440
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2444
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2452
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2456
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2460
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2466
		{
			yyVAL.item = nil
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2471
		{
			yyVAL.item = nil
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2529
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2540
		{
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2544
		{
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2558
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2564
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2570
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2576
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2582
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2597
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2601
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2605
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2609
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2613
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2621
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2635
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2642
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2652
		{
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2654
		{
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2673
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2682
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2696
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2702
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2708
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2724
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2736
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2740
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2758
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2772
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2790
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2794
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2800
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2813
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2817
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2823
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2828
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2832
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2838
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2842
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2848
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2854
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2858
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2862
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2868
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2872
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2892
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2910
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2914
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2920
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2938
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2966
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2972
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2983
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2988
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2995
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3011
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3024
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3035
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3039
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3045
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3050
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3057
		{
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3059
		{
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3062
		{
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3071
		{
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3075
		{
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3080
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3089
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3102
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3110
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3124
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3144
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3157
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3163
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3167
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3173
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3194
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3203
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3219
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3239
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3243
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3252
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3256
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3271
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3275
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3281
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3285
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3291
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3295
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3301
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3306
		{
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3317
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3321
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3337
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3343
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3347
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3353
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3357
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3393
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3411
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3430
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3436
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3447
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3460
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3464
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3469
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3473
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3480
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3485
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3510
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3540
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3544
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3550
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3562
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3571
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3594
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3600
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3610
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3616
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3629
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3634
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3638
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3648
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3652
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3656
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3670
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3773
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3789
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3805
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3815
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3826
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3840
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3844
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3848
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3857
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3861
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3874
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3879
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3883
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3892
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3898
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3902
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3908
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3912
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3917
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3921
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3926
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3934
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3948
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3956
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3966
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3981
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3990
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3999
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4009
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4013
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4023
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4027
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4031
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4035
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4041
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4051
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4055
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4061
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4071
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4077
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4083
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4087
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4101
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4107
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4111
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4117
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4121
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4127
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4131
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4141
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4154
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4160
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4166
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4179
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4197
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4201
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4207
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4217
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4221
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4230
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4234
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4238
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4242
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4251
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4255
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4259
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4263
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4268
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4272
		{
			yyVAL.str = yyDollar[1].str
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4276
		{
			yyVAL.str = yyDollar[2].str
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4282
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4288
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4292
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4296
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4300
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4304
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4310
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4351
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4357
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 701:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4364
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4376
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4381
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4387
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4398
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4424
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4430
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4436
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4459
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4465
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4479
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4485
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4492
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4498
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4506
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4512
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4527
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4533
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4554
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4559
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4565
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4573
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4679
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4683
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4689
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4699
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4703
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4719
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4736
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4742
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4755
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4764
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4771
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4780
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4784
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4804
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4808
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4812
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4817
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4821
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4825
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4829
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4835
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4858
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4902
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4906
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4912
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4922
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4926
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4930
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4934
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4938
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4944
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4971
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4977
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4981
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4987
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4991
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4995
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5010
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5022
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5031
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5044
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5051
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5061
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5080
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5084
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5089
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5093
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5124
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5138
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5146
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5153
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:5167
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5190
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:5197
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5208
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:5215
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5226
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5233
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5240
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:5247
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:5267
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5281
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:5288
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5299
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5312
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5318
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:5322
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5328
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:5337
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5351
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5357
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:5361
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5367
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5374
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5383
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5387
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5396
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5401
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5405
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5410
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5414
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5424
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5428
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5439
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5455
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5463
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5474
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5483
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5493
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5503
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5507
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5525
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5531
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5535
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5539
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5545
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5549
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5557
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5565
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5570
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5578
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5586
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5590
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5594
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5598
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5606
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5610
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5614
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5618
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5626
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5630
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5634
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5638
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5642
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5646
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5650
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5658
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5665
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5669
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5680
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5684
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5688
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5694
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5698
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5702
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5706
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5714
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5728
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5732
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5741
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5746
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5752
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5759
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5763
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5769
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5773
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5779
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				case *tree.ForeignKey:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5791
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5797
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5806
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5815
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5838
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5857
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5865
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5871
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5885
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5891
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5897
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5911
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5915
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5931
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5935
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5941
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5949
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5953
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5967
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5976
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5982
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5986
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5992
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6000
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6004
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6008
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6012
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6017
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6021
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6025
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6029
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6033
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6037
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6041
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6045
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6058
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6064
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6073
		{
			yyVAL.str = ""
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6083
		{
			yyVAL.str = ""
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6087
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:6093
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6112
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6119
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:6133
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6142
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6148
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6154
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6158
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6162
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6166
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:6170
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6175
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6182
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6186
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:6190
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6199
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6204
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6208
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:6224
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6230
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6234
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6238
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6242
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6246
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6250
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6254
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6258
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6262
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6266
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6270
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6278
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6296
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6300
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6304
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6308
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6312
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6316
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6320
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6324
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6328
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6333
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6341
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6346
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6359
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6363
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6367
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6371
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6380
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6395
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6399
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6405
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6415
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6432
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6449
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6462
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6475
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6487
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6516
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6531
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6563
		{
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6569
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6573
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6577
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6587
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6609
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6616
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6629
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6636
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6641
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6645
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6650
		{
			yyVAL.str = ","
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6654
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6673
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6684
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6694
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6703
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6712
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6722
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6732
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6742
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6752
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6762
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6772
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6782
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6802
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6812
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6822
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6832
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6849
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6857
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6873
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6881
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6908
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6916
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6927
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6937
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6949
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6960
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7018
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7030
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7042
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7053
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7061
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7075
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7087
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7095
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7103
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7114
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7123
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7132
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7140
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7150
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7158
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7172
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7182
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7201
		{
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7203
		{
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7244
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7259
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:7269
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7278
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7288
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7295
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7303
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7357
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7361
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7365
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7373
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7377
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7381
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7385
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7389
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7393
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7397
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7405
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7409
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7419
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7425
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7429
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7440
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7444
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7458
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7480
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7484
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7488
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7492
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7498
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7502
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7515
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7520
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7540
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7565
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7576
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7581
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7587
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7611
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7623
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7662
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7675
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7688
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7714
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7740
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7753
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7768
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7791
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7829
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7877
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7894
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7906
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7926
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7946
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7966
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7995
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8008
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8021
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8034
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8058
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8082
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8094
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8106
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8130
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8155
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8168
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8183
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8191
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:8200
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8233
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:8238
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8244
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8251
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8255
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8260
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8264
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:8270
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8276
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8283
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8290
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8299
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default scale for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8306
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:8313
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8322
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8326
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8336
		{
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:8338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8348
		{
			yyVAL.str = ""
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

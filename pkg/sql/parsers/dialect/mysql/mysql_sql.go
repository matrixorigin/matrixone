// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const S3OPTION = 57521
const SQL_SMALL_RESULT = 57522
const SQL_BIG_RESULT = 57523
const SQL_BUFFER_RESULT = 57524
const LOW_PRIORITY = 57525
const HIGH_PRIORITY = 57526
const DELAYED = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const RETURNS = 57534
const SCHEMA = 57535
const TABLE = 57536
const INDEX = 57537
const VIEW = 57538
const TO = 57539
const IGNORE = 57540
const IF = 57541
const PRIMARY = 57542
const COLUMN = 57543
const CONSTRAINT = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const FOREIGN = 57547
const KEY_BLOCK_SIZE = 57548
const SHOW = 57549
const DESCRIBE = 57550
const EXPLAIN = 57551
const DATE = 57552
const ESCAPE = 57553
const REPAIR = 57554
const OPTIMIZE = 57555
const TRUNCATE = 57556
const MAXVALUE = 57557
const PARTITION = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const STATUS = 57564
const VARIABLES = 57565
const ROLE = 57566
const PROXY = 57567
const AVG_ROW_LENGTH = 57568
const STORAGE = 57569
const DISK = 57570
const MEMORY = 57571
const CHECKSUM = 57572
const COMPRESSION = 57573
const DATA = 57574
const DIRECTORY = 57575
const DELAY_KEY_WRITE = 57576
const ENCRYPTION = 57577
const ENGINE = 57578
const MAX_ROWS = 57579
const MIN_ROWS = 57580
const PACK_KEYS = 57581
const ROW_FORMAT = 57582
const STATS_AUTO_RECALC = 57583
const STATS_PERSISTENT = 57584
const STATS_SAMPLE_PAGES = 57585
const DYNAMIC = 57586
const COMPRESSED = 57587
const REDUNDANT = 57588
const COMPACT = 57589
const FIXED = 57590
const COLUMN_FORMAT = 57591
const AUTO_RANDOM = 57592
const RESTRICT = 57593
const CASCADE = 57594
const ACTION = 57595
const PARTIAL = 57596
const SIMPLE = 57597
const CHECK = 57598
const ENFORCED = 57599
const RANGE = 57600
const LIST = 57601
const ALGORITHM = 57602
const LINEAR = 57603
const PARTITIONS = 57604
const SUBPARTITION = 57605
const SUBPARTITIONS = 57606
const CLUSTER = 57607
const TYPE = 57608
const ANY = 57609
const SOME = 57610
const EXTERNAL = 57611
const LOCALFILE = 57612
const URL = 57613
const PREPARE = 57614
const DEALLOCATE = 57615
const RESET = 57616
const EXTENSION = 57617
const PROPERTIES = 57618
const PARSER = 57619
const VISIBLE = 57620
const INVISIBLE = 57621
const BTREE = 57622
const HASH = 57623
const RTREE = 57624
const BSI = 57625
const ZONEMAP = 57626
const LEADING = 57627
const BOTH = 57628
const TRAILING = 57629
const UNKNOWN = 57630
const EXPIRE = 57631
const ACCOUNT = 57632
const ACCOUNTS = 57633
const UNLOCK = 57634
const DAY = 57635
const NEVER = 57636
const PUMP = 57637
const SECOND = 57638
const ASCII = 57639
const COALESCE = 57640
const COLLATION = 57641
const HOUR = 57642
const MICROSECOND = 57643
const MINUTE = 57644
const MONTH = 57645
const QUARTER = 57646
const REPEAT = 57647
const REVERSE = 57648
const ROW_COUNT = 57649
const WEEK = 57650
const REVOKE = 57651
const FUNCTION = 57652
const PRIVILEGES = 57653
const TABLESPACE = 57654
const EXECUTE = 57655
const SUPER = 57656
const GRANT = 57657
const OPTION = 57658
const REFERENCES = 57659
const REPLICATION = 57660
const SLAVE = 57661
const CLIENT = 57662
const USAGE = 57663
const RELOAD = 57664
const FILE = 57665
const TEMPORARY = 57666
const ROUTINE = 57667
const EVENT = 57668
const SHUTDOWN = 57669
const NULLX = 57670
const AUTO_INCREMENT = 57671
const APPROXNUM = 57672
const SIGNED = 57673
const UNSIGNED = 57674
const ZEROFILL = 57675
const ENGINES = 57676
const LOW_CARDINALITY = 57677
const ADMIN_NAME = 57678
const RANDOM = 57679
const SUSPEND = 57680
const ATTRIBUTE = 57681
const HISTORY = 57682
const REUSE = 57683
const CURRENT = 57684
const OPTIONAL = 57685
const FAILED_LOGIN_ATTEMPTS = 57686
const PASSWORD_LOCK_TIME = 57687
const UNBOUNDED = 57688
const SECONDARY = 57689
const USER = 57690
const IDENTIFIED = 57691
const CIPHER = 57692
const ISSUER = 57693
const X509 = 57694
const SUBJECT = 57695
const SAN = 57696
const REQUIRE = 57697
const SSL = 57698
const NONE = 57699
const PASSWORD = 57700
const MAX_QUERIES_PER_HOUR = 57701
const MAX_UPDATES_PER_HOUR = 57702
const MAX_CONNECTIONS_PER_HOUR = 57703
const MAX_USER_CONNECTIONS = 57704
const FORMAT = 57705
const VERBOSE = 57706
const CONNECTION = 57707
const TRIGGERS = 57708
const PROFILES = 57709
const LOAD = 57710
const INFILE = 57711
const TERMINATED = 57712
const OPTIONALLY = 57713
const ENCLOSED = 57714
const ESCAPED = 57715
const STARTING = 57716
const LINES = 57717
const ROWS = 57718
const IMPORT = 57719
const MODUMP = 57720
const OVER = 57721
const PRECEDING = 57722
const FOLLOWING = 57723
const GROUPS = 57724
const DATABASES = 57725
const TABLES = 57726
const EXTENDED = 57727
const FULL = 57728
const PROCESSLIST = 57729
const FIELDS = 57730
const COLUMNS = 57731
const OPEN = 57732
const ERRORS = 57733
const WARNINGS = 57734
const INDEXES = 57735
const SCHEMAS = 57736
const NODE = 57737
const LOCKS = 57738
const TABLE_NUMBER = 57739
const COLUMN_NUMBER = 57740
const TABLE_VALUES = 57741
const NAMES = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const LOCAL = 57754
const EVENTS = 57755
const PLUGINS = 57756
const CURRENT_TIMESTAMP = 57757
const DATABASE = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const SEPARATOR = 57767
const TIMESTAMPDIFF = 57768
const CURRENT_DATE = 57769
const CURRENT_USER = 57770
const CURRENT_ROLE = 57771
const SECOND_MICROSECOND = 57772
const MINUTE_MICROSECOND = 57773
const MINUTE_SECOND = 57774
const HOUR_MICROSECOND = 57775
const HOUR_SECOND = 57776
const HOUR_MINUTE = 57777
const DAY_MICROSECOND = 57778
const DAY_SECOND = 57779
const DAY_MINUTE = 57780
const DAY_HOUR = 57781
const YEAR_MONTH = 57782
const SQL_TSI_HOUR = 57783
const SQL_TSI_DAY = 57784
const SQL_TSI_WEEK = 57785
const SQL_TSI_MONTH = 57786
const SQL_TSI_QUARTER = 57787
const SQL_TSI_YEAR = 57788
const SQL_TSI_SECOND = 57789
const SQL_TSI_MINUTE = 57790
const RECURSIVE = 57791
const CONFIG = 57792
const DRAINER = 57793
const MATCH = 57794
const AGAINST = 57795
const BOOLEAN = 57796
const LANGUAGE = 57797
const WITH = 57798
const QUERY = 57799
const EXPANSION = 57800
const ADDDATE = 57801
const BIT_AND = 57802
const BIT_OR = 57803
const BIT_XOR = 57804
const CAST = 57805
const COUNT = 57806
const APPROX_COUNT_DISTINCT = 57807
const APPROX_PERCENTILE = 57808
const CURDATE = 57809
const CURTIME = 57810
const DATE_ADD = 57811
const DATE_SUB = 57812
const EXTRACT = 57813
const GROUP_CONCAT = 57814
const MAX = 57815
const MID = 57816
const MIN = 57817
const NOW = 57818
const POSITION = 57819
const SESSION_USER = 57820
const STD = 57821
const STDDEV = 57822
const MEDIAN = 57823
const STDDEV_POP = 57824
const STDDEV_SAMP = 57825
const SUBDATE = 57826
const SUBSTR = 57827
const SUBSTRING = 57828
const SUM = 57829
const SYSDATE = 57830
const SYSTEM_USER = 57831
const TRANSLATE = 57832
const TRIM = 57833
const VARIANCE = 57834
const VAR_POP = 57835
const VAR_SAMP = 57836
const AVG = 57837
const ARROW = 57838
const ROW = 57839
const OUTFILE = 57840
const HEADER = 57841
const MAX_FILE_SIZE = 57842
const FORCE_QUOTE = 57843
const UNUSED = 57844
const BINDINGS = 57845
const DO = 57846
const DECLARE = 57847
const KILL = 57848
const QUERY_RESULT = 57849

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8370

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 91,
	21, 532,
	-2, 513,
	-1, 99,
	212, 731,
	-2, 778,
	-1, 118,
	42, 365,
	212, 365,
	239, 372,
	240, 372,
	410, 365,
	-2, 393,
	-1, 426,
	288, 89,
	386, 89,
	-2, 1519,
	-1, 485,
	67, 1146,
	-2, 1659,
	-1, 486,
	67, 1164,
	-2, 1630,
	-1, 490,
	67, 1165,
	-2, 1658,
	-1, 512,
	67, 1079,
	-2, 1707,
	-1, 513,
	67, 1080,
	-2, 1706,
	-1, 514,
	67, 1081,
	-2, 1696,
	-1, 515,
	67, 1671,
	-2, 1691,
	-1, 516,
	67, 1672,
	-2, 1692,
	-1, 517,
	67, 1673,
	-2, 1698,
	-1, 518,
	67, 1674,
	-2, 1681,
	-1, 519,
	67, 1675,
	-2, 1689,
	-1, 520,
	67, 1676,
	-2, 1699,
	-1, 521,
	67, 1677,
	-2, 1700,
	-1, 522,
	67, 1678,
	-2, 1705,
	-1, 523,
	67, 1679,
	-2, 1710,
	-1, 524,
	67, 1680,
	-2, 1711,
	-1, 526,
	67, 1143,
	-2, 1511,
	-1, 533,
	67, 1152,
	-2, 1537,
	-1, 537,
	67, 1156,
	-2, 1576,
	-1, 538,
	67, 1157,
	-2, 1654,
	-1, 546,
	67, 1167,
	-2, 1639,
	-1, 548,
	67, 1169,
	-2, 1649,
	-1, 560,
	67, 1061,
	-2, 1701,
	-1, 561,
	67, 1062,
	-2, 1702,
	-1, 562,
	67, 1063,
	-2, 1703,
	-1, 569,
	21, 533,
	-2, 496,
	-1, 623,
	405, 393,
	406, 393,
	-2, 366,
	-1, 666,
	103, 1511,
	114, 1511,
	133, 1511,
	-2, 1305,
	-1, 706,
	21, 533,
	-2, 496,
	-1, 805,
	21, 532,
	-2, 968,
	-1, 1126,
	67, 1212,
	-2, 1656,
	-1, 1127,
	67, 1213,
	-2, 1657,
	-1, 1287,
	1, 757,
	68, 757,
	525, 757,
	-2, 764,
	-1, 1413,
	133, 1315,
	-2, 1313,
	-1, 1415,
	133, 657,
	-2, 1310,
	-1, 1416,
	133, 658,
	-2, 1311,
	-1, 1709,
	68, 1291,
	134, 1291,
	-2, 1641,
	-1, 1710,
	68, 1287,
	134, 1287,
	-2, 1640,
	-1, 1711,
	68, 1269,
	134, 1269,
	-2, 1627,
	-1, 1712,
	68, 1270,
	134, 1270,
	-2, 1632,
	-1, 1713,
	68, 1271,
	134, 1271,
	-2, 1564,
	-1, 1714,
	68, 1272,
	134, 1272,
	-2, 1558,
	-1, 1715,
	68, 1273,
	134, 1273,
	-2, 1502,
	-1, 1716,
	68, 1274,
	134, 1274,
	-2, 1629,
	-1, 1717,
	68, 1275,
	134, 1275,
	-2, 1562,
	-1, 1718,
	68, 1276,
	134, 1276,
	-2, 1557,
	-1, 1719,
	68, 1277,
	134, 1277,
	-2, 1550,
	-1, 1721,
	68, 1260,
	134, 1260,
	-2, 1659,
	-1, 1722,
	68, 1289,
	134, 1289,
	-2, 1630,
	-1, 1723,
	68, 1289,
	134, 1289,
	-2, 1658,
	-1, 1724,
	68, 1289,
	134, 1289,
	-2, 1520,
	-1, 1725,
	68, 1287,
	134, 1287,
	-2, 1649,
	-1, 1726,
	68, 1284,
	134, 1284,
	-2, 1542,
	-1, 1727,
	67, 1242,
	68, 1242,
	134, 1242,
	348, 1242,
	349, 1242,
	350, 1242,
	-2, 1501,
	-1, 1728,
	67, 1243,
	68, 1243,
	134, 1243,
	348, 1243,
	349, 1243,
	350, 1243,
	-2, 1503,
	-1, 1729,
	67, 1246,
	68, 1246,
	134, 1246,
	348, 1246,
	349, 1246,
	350, 1246,
	-2, 1631,
	-1, 1730,
	67, 1248,
	68, 1248,
	134, 1248,
	348, 1248,
	349, 1248,
	350, 1248,
	-2, 1614,
	-1, 1731,
	67, 1250,
	68, 1250,
	134, 1250,
	348, 1250,
	349, 1250,
	350, 1250,
	-2, 1563,
	-1, 1732,
	67, 1252,
	68, 1252,
	134, 1252,
	348, 1252,
	349, 1252,
	350, 1252,
	-2, 1546,
	-1, 1733,
	67, 1253,
	68, 1253,
	134, 1253,
	348, 1253,
	349, 1253,
	350, 1253,
	-2, 1547,
	-1, 1734,
	67, 1255,
	68, 1255,
	134, 1255,
	348, 1255,
	349, 1255,
	350, 1255,
	-2, 1500,
	-1, 1735,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1525,
	-1, 1736,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1538,
	-1, 1737,
	68, 1297,
	134, 1297,
	348, 1297,
	349, 1297,
	350, 1297,
	-2, 1521,
	-1, 1738,
	68, 1294,
	134, 1294,
	348, 1294,
	349, 1294,
	350, 1294,
	-2, 1599,
	-1, 1752,
	1, 758,
	68, 758,
	525, 758,
	-2, 764,
	-1, 1808,
	21, 532,
	-2, 624,
	-1, 1986,
	65, 439,
	134, 439,
	-2, 873,
	-1, 2266,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 821,
	-1, 2268,
	273, 936,
	-2, 915,
	-1, 2296,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 821,
	-1, 2299,
	65, 439,
	134, 439,
	-2, 874,
	-1, 2340,
	87, 764,
	129, 764,
	166, 764,
	169, 764,
	-2, 822,
	-1, 2368,
	273, 936,
	-2, 916,
	-1, 2783,
	68, 793,
	134, 793,
	-2, 764,
	-1, 2787,
	68, 793,
	134, 793,
	-2, 764,
	-1, 2801,
	68, 797,
	134, 797,
	-2, 764,
	-1, 2806,
	68, 798,
	134, 798,
	-2, 764,
}

const yyPrivate = 57344

const yyLast = 30229

var yyAct = [...]int{
	457, 2341, 2787, 1191, 2795, 2786, 2763, 1106, 2628, 438,
	2407, 2710, 2752, 436, 459, 1805, 2667, 2693, 2593, 2694,
	2380, 2528, 2573, 2331, 833, 1699, 2323, 2405, 1371, 1015,
	2597, 2534, 2406, 2231, 1102, 971, 2581, 483, 2430, 137,
	137, 1801, 570, 1245, 2445, 137, 373, 380, 2390, 2329,
	380, 2291, 2422, 665, 1293, 2339, 2389, 2148, 2369, 1989,
	1961, 140, 1295, 1836, 1405, 1048, 1109, 378, 31, 2144,
	1337, 2153, 1359, 2279, 2229, 1329, 385, 1399, 2007, 1800,
	440, 2149, 391, 2272, 1707, 1877, 428, 1604, 1844, 565,
	1845, 430, 2223, 2206, 2028, 2164, 1705, 949, 1760, 2048,
	1243, 2161, 604, 2159, 700, 2093, 1876, 1410, 2142, 136,
	136, 435, 1248, 1262, 1413, 364, 1407, 2042, 1406, 1352,
	1600, 1332, 669, 951, 1400, 937, 565, 1789, 1599, 2006,
	1963, 1958, 673, 42, 1305, 1759, 137, 3, 1190, 1270,
	377, 19, 374, 8, 375, 6, 1330, 1919, 694, 869,
	672, 30, 1105, 1306, 376, 7, 2344, 1753, 1100, 1283,
	1839, 1601, 437, 1039, 1632, 439, 1703, 1356, 1745, 667,
	90, 1303, 626, 961, 1611, 693, 1302, 427, 42, 396,
	1687, 472, 91, 1140, 1154, 1615, 369, 447, 1091, 717,
	1376, 1394, 914, 1803, 695, 388, 657, 1007, 1099, 31,
	1810, 1319, 1282, 366, 957, 603, 702, 1160, 994, 567,
	1161, 394, 16, 1253, 569, 972, 393, 658, 379, 9,
	1038, 4, 126, 619, 363, 932, 129, 91, 601, 1879,
	2086, 2086, 1618, 1608, 132, 131, 2423, 1837, 2230, 934,
	1266, 2618, 828, 1402, 568, 130, 578, 38, 120, 100,
	737, 834, 2398, 130, 130, 1864, 38, 120, 100, 1872,
	1605, 2337, 130, 130, 42, 362, 2646, 130, 383, 692,
	935, 2656, 19, 936, 8, 996, 6, 773, 1092, 1181,
	1096, 771, 30, 1058, 770, 130, 7, 38, 120, 100,
	1616, 968, 130, 130, 130, 983, 1840, 984, 670, 1055,
	1340, 1341, 127, 89, 1095, 1960, 564, 2682, 636, 671,
	1051, 127, 130, 91, 38, 120, 100, 1076, 1044, 127,
	1057, 1181, 977, 978, 127, 133, 997, 1315, 2238, 2063,
	89, 975, 125, 2680, 974, 977, 978, 1108, 579, 113,
	2697, 2698, 127, 764, 775, 776, 777, 774, 89, 127,
	127, 127, 555, 769, 554, 556, 557, 1959, 558, 559,
	1920, 2439, 745, 75, 747, 2521, 137, 710, 2428, 127,
	2619, 2620, 2671, 2672, 1097, 2049, 2524, 709, 2431, 2432,
	2433, 2434, 380, 380, 2050, 137, 2051, 2425, 752, 390,
	753, 2232, 748, 1111, 1094, 1859, 711, 2596, 2246, 1353,
	1966, 2173, 2280, 1612, 1349, 705, 707, 2175, 1345, 1087,
	571, 1196, 2403, 720, 2287, 2165, 1784, 2655, 755, 1743,
	641, 2502, 1684, 1952, 1177, 2081, 2387, 1174, 1237, 1236,
	1869, 1176, 1173, 1175, 1179, 1180, 708, 121, 122, 1178,
	123, 124, 2079, 424, 766, 807, 425, 99, 2169, 128,
	740, 2505, 2170, 2171, 590, 728, 767, 768, 741, 2400,
	1849, 966, 2707, 704, 720, 2684, 1177, 2172, 118, 1174,
	382, 732, 2696, 1176, 1173, 1175, 1179, 1180, 642, 2438,
	743, 1178, 381, 2496, 750, 2440, 706, 2535, 2780, 2658,
	2659, 1110, 746, 749, 2796, 2718, 1622, 1624, 1625, 757,
	1093, 758, 2679, 42, 42, 99, 119, 128, 2630, 73,
	2725, 1118, 1121, 1122, 956, 1617, 742, 985, 1974, 1975,
	1976, 1977, 1119, 2458, 2653, 936, 118, 112, 111, 760,
	762, 763, 2489, 44, 2774, 2626, 2627, 668, 2630, 2558,
	2167, 2755, 751, 670, 2582, 2583, 2584, 2586, 2585, 2595,
	2457, 1050, 91, 91, 671, 429, 2480, 713, 714, 2686,
	2687, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1184, 1185, 1186, 1187, 1188, 1189, 1182, 1183,
	2636, 931, 933, 2484, 744, 1917, 722, 721, 1972, 1606,
	1003, 114, 115, 116, 1606, 756, 1002, 730, 729, 1606,
	725, 726, 987, 604, 955, 809, 810, 811, 812, 911,
	754, 2797, 670, 954, 1184, 1185, 1186, 1187, 1188, 1189,
	1182, 1183, 2764, 805, 2250, 2085, 970, 969, 83, 2446,
	761, 2258, 117, 701, 84, 2803, 813, 722, 721, 1633,
	938, 2030, 2032, 976, 2519, 977, 978, 2791, 863, 637,
	389, 2621, 2622, 759, 973, 2756, 715, 431, 995, 967,
	565, 565, 565, 1865, 1817, 1019, 1019, 2657, 1965, 737,
	1609, 977, 978, 1325, 2685, 39, 2157, 1277, 941, 2089,
	2084, 1045, 380, 933, 1042, 1042, 1619, 85, 1607, 568,
	944, 1980, 2176, 943, 2166, 1021, 86, 37, 384, 1017,
	1017, 1354, 2503, 1023, 1053, 2399, 2082, 2138, 101, 1620,
	939, 940, 1873, 942, 772, 39, 101, 101, 1623, 2168,
	1969, 1970, 2095, 2094, 1074, 101, 101, 2034, 639, 2594,
	101, 638, 2404, 1120, 1968, 946, 1814, 1019, 964, 1019,
	710, 1059, 39, 843, 844, 980, 981, 1348, 101, 736,
	1107, 1346, 1088, 919, 1000, 101, 101, 101, 1816, 1815,
	2559, 2561, 2562, 2563, 2560, 958, 962, 962, 1049, 2790,
	1069, 1070, 1056, 668, 1343, 101, 1344, 2482, 731, 2753,
	2754, 2481, 958, 1813, 958, 1342, 916, 963, 2485, 2486,
	998, 999, 1083, 644, 569, 2031, 2154, 2157, 918, 2158,
	2802, 645, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1981, 2809, 1660, 1149, 1150, 1659,
	1159, 1296, 2186, 87, 88, 92, 598, 599, 600, 1205,
	2737, 948, 2808, 986, 1987, 988, 648, 992, 993, 1112,
	1211, 2799, 637, 2781, 979, 1838, 1798, 982, 42, 2776,
	1025, 2767, 1218, 1219, 1213, 363, 2766, 42, 1073, 1104,
	1013, 1014, 572, 565, 1001, 1082, 1072, 1079, 773, 1078,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1010, 1011, 1012,
	991, 773, 91, 647, 2452, 773, 91, 650, 649, 1101,
	2741, 1988, 1123, 1085, 2712, 1024, 362, 91, 773, 1060,
	1036, 2704, 1065, 1852, 2699, 1043, 91, 2800, 1037, 1614,
	2688, 1259, 1238, 2661, 1856, 2777, 1244, 1614, 1296, 737,
	2158, 639, 1614, 1061, 638, 2151, 2651, 2267, 569, 2152,
	2155, 1379, 1747, 1089, 1252, 1090, 1693, 1081, 1280, 1799,
	1019, 1826, 734, 1287, 1080, 1204, 1077, 1260, 604, 1103,
	1799, 1294, 1098, 1988, 1019, 2650, 1614, 1286, 1304, 2649,
	2713, 1864, 1192, 373, 1195, 1148, 959, 2507, 1206, 1697,
	2507, 1241, 685, 690, 691, 1799, 1826, 912, 1212, 2662,
	1214, 2156, 2648, 2638, 1320, 1320, 1263, 1304, 1142, 1304,
	1954, 2514, 2507, 1280, 1019, 1339, 2513, 775, 776, 777,
	774, 1250, 1251, 735, 1826, 565, 1318, 1019, 460, 469,
	2506, 2327, 735, 461, 1605, 468, 462, 466, 465, 463,
	464, 2507, 2053, 1285, 1698, 2507, 1746, 1309, 1279, 2025,
	1280, 1019, 1194, 1370, 137, 137, 2203, 775, 776, 777,
	774, 2114, 1381, 1316, 1317, 1664, 137, 1943, 2507, 2639,
	1377, 694, 1205, 1398, 737, 1596, 1215, 2515, 1205, 1205,
	1941, 1278, 1764, 1373, 960, 1939, 470, 1937, 1925, 1288,
	1289, 678, 677, 679, 1387, 1365, 2507, 2054, 1415, 1301,
	1233, 1696, 1881, 1326, 703, 1862, 1350, 1294, 2054, 1854,
	778, 1019, 1284, 1311, 1312, 1799, 467, 695, 1308, 806,
	947, 676, 1152, 1004, 1372, 1372, 1298, 815, 958, 1267,
	1313, 1322, 2286, 1944, 1369, 1297, 1372, 2761, 1850, 1310,
	1367, 1255, 1261, 1258, 1416, 1846, 1942, 1355, 1763, 821,
	962, 1938, 1812, 1938, 773, 2714, 1694, 1668, 687, 688,
	689, 1597, 2302, 1896, 2187, 2044, 1284, 1627, 773, 681,
	1314, 1764, 593, 1291, 1290, 1847, 1990, 1667, 1613, 1300,
	1630, 1631, 1867, 1323, 1066, 1324, 1307, 674, 1396, 909,
	906, 907, 908, 1866, 1396, 1901, 1338, 1900, 1899, 1897,
	1858, 1363, 1364, 1101, 1851, 1780, 1321, 682, 1656, 1644,
	2078, 1847, 1595, 582, 1764, 1328, 1327, 2191, 703, 42,
	1384, 1351, 1693, 773, 1276, 1062, 910, 819, 1360, 1361,
	1362, 1374, 723, 703, 790, 646, 1366, 952, 1643, 2076,
	1665, 2750, 670, 773, 1614, 675, 596, 1672, 670, 1368,
	1067, 1198, 1197, 671, 1385, 959, 1008, 1603, 2738, 671,
	1898, 2077, 1962, 775, 776, 777, 774, 1009, 91, 1403,
	1006, 2640, 1408, 1593, 1409, 2204, 1414, 1594, 1216, 1217,
	2087, 1857, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 595, 428, 710, 1739, 1598, 137,
	1147, 1819, 712, 1887, 592, 591, 1708, 1642, 1602, 137,
	137, 1761, 1281, 680, 1155, 1145, 1146, 1144, 1621, 2675,
	1155, 1304, 1638, 777, 774, 585, 774, 2492, 1629, 2475,
	2491, 1773, 1626, 640, 670, 793, 794, 795, 796, 797,
	790, 1224, 694, 1304, 2276, 805, 2271, 606, 1628, 2691,
	1005, 2052, 1142, 960, 2773, 2569, 2785, 1339, 1637, 2160,
	651, 1041, 1041, 2770, 2567, 1209, 589, 643, 2735, 1741,
	588, 775, 776, 777, 774, 1210, 580, 2719, 2610, 1756,
	1757, 1902, 1903, 2565, 1770, 2575, 1019, 2553, 695, 2552,
	2551, 583, 2801, 2568, 1774, 1775, 710, 2772, 1042, 2641,
	1339, 1772, 2566, 1831, 2548, 1833, 1708, 2542, 637, 2555,
	2539, 581, 2401, 1205, 1280, 2107, 1806, 1806, 2284, 1806,
	1824, 2564, 2538, 1740, 2283, 590, 2174, 775, 776, 777,
	774, 2133, 1809, 1652, 2132, 1807, 1889, 1811, 791, 792,
	793, 794, 795, 796, 797, 790, 2072, 2554, 1689, 584,
	2402, 1113, 1114, 1115, 1116, 1117, 2285, 1776, 1911, 1828,
	2106, 2046, 1692, 1691, 1754, 1700, 1701, 1690, 1835, 1777,
	1778, 1686, 1702, 1685, 1063, 1830, 1647, 1843, 929, 1748,
	2706, 1848, 775, 776, 777, 774, 1651, 639, 2690, 1842,
	638, 2778, 962, 2574, 1156, 1157, 1158, 1769, 2324, 1768,
	424, 1193, 1771, 425, 2673, 1199, 2600, 2634, 775, 776,
	777, 774, 1779, 2633, 1781, 2623, 1785, 594, 2556, 775,
	776, 777, 774, 2549, 624, 2545, 2544, 670, 775, 776,
	777, 774, 607, 775, 776, 777, 774, 2543, 1808, 2504,
	2477, 1782, 2501, 1640, 2424, 696, 697, 698, 1820, 1821,
	1822, 775, 776, 777, 774, 2322, 2320, 2294, 629, 2282,
	2281, 1829, 1827, 2278, 775, 776, 777, 774, 2249, 2372,
	788, 798, 799, 791, 792, 793, 794, 795, 796, 797,
	790, 1338, 781, 782, 783, 784, 785, 786, 787, 779,
	1878, 1264, 2137, 2382, 2131, 1268, 2116, 2083, 1271, 775,
	776, 777, 774, 2047, 2037, 1695, 2375, 511, 510, 2333,
	1688, 1388, 2370, 1386, 2178, 1273, 1860, 2385, 2386, 2332,
	1064, 842, 838, 2371, 2527, 837, 1019, 820, 1019, 2253,
	1019, 775, 776, 777, 774, 710, 699, 605, 2296, 2295,
	2266, 775, 776, 777, 774, 1874, 2110, 2260, 608, 632,
	2259, 775, 776, 777, 774, 2242, 2222, 2221, 2376, 2192,
	2115, 2112, 1870, 130, 1019, 1905, 120, 100, 775, 776,
	777, 774, 627, 775, 776, 777, 774, 1912, 2109, 2105,
	2097, 1019, 2092, 2041, 2108, 1264, 1953, 1940, 1936, 1934,
	1935, 1264, 1264, 1904, 1933, 1673, 1914, 1663, 1017, 1661,
	775, 776, 777, 774, 628, 633, 775, 776, 777, 774,
	1913, 775, 776, 777, 774, 1017, 775, 776, 777, 774,
	127, 621, 1658, 623, 636, 1657, 1655, 1649, 620, 618,
	617, 1932, 622, 609, 610, 611, 612, 613, 1646, 634,
	635, 1645, 1208, 1207, 1028, 1891, 2384, 1931, 2150, 130,
	1026, 630, 631, 775, 776, 777, 774, 2798, 1871, 2749,
	2743, 137, 2726, 2723, 2721, 835, 1885, 1019, 1930, 775,
	776, 777, 774, 2378, 2213, 1929, 2609, 2591, 1101, 1986,
	1863, 2579, 1861, 2576, 1868, 1992, 1945, 2571, 625, 1252,
	775, 776, 777, 774, 2516, 2377, 2379, 775, 776, 777,
	774, 2001, 1928, 137, 1240, 2499, 127, 710, 1339, 1339,
	1339, 1339, 1895, 1955, 1882, 2498, 1884, 2008, 2497, 710,
	1339, 2494, 2488, 2473, 775, 776, 777, 774, 1979, 2008,
	1635, 1956, 2313, 1639, 2311, 2289, 1921, 2277, 1019, 950,
	2118, 1926, 1249, 1242, 2058, 1983, 137, 137, 1982, 1984,
	31, 1957, 1254, 1257, 1246, 1995, 1250, 1251, 1949, 1997,
	1853, 817, 1818, 2387, 2024, 2004, 1927, 1762, 1205, 1143,
	1993, 127, 2059, 2002, 1650, 2373, 1946, 1205, 1654, 1393,
	1375, 2383, 1275, 1247, 1806, 1019, 1086, 1052, 775, 776,
	777, 774, 913, 861, 2070, 1666, 860, 859, 1669, 1670,
	1671, 858, 857, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 856, 1682, 1994, 1985, 42, 2039, 2040, 2023, 1284,
	1991, 1998, 1999, 19, 855, 8, 1971, 6, 854, 1754,
	1978, 853, 2055, 30, 2000, 2003, 2005, 7, 852, 851,
	2071, 2022, 2064, 850, 849, 2020, 1263, 1996, 2021, 848,
	2067, 569, 847, 2065, 2009, 2010, 2011, 2012, 846, 2038,
	2098, 845, 841, 2100, 91, 2102, 2035, 840, 2075, 839,
	1255, 2033, 1258, 2045, 1765, 710, 836, 832, 710, 2080,
	831, 829, 2163, 828, 2056, 1708, 2068, 2062, 2147, 1338,
	1338, 1338, 1338, 2069, 137, 2066, 2771, 2060, 1924, 827,
	826, 1338, 825, 710, 710, 2074, 2088, 824, 1339, 1761,
	823, 2190, 1923, 2147, 2147, 2090, 822, 2194, 2099, 2096,
	775, 776, 777, 774, 818, 2163, 816, 739, 2103, 2104,
	2207, 2208, 2495, 2101, 775, 776, 777, 774, 1264, 1264,
	1264, 1767, 1750, 789, 788, 798, 799, 791, 792, 793,
	794, 795, 796, 797, 790, 1041, 91, 727, 2731, 2729,
	2180, 2181, 2182, 2695, 2179, 1905, 2134, 573, 574, 575,
	576, 2139, 2210, 1973, 2141, 1280, 1825, 2193, 1390, 1280,
	572, 2195, 2196, 2188, 738, 2019, 2117, 1795, 1796, 2202,
	2119, 2120, 2121, 2122, 1922, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2017, 2214, 137, 2212, 2189, 2018, 2185,
	137, 2183, 2184, 1918, 2784, 2014, 775, 776, 777, 774,
	2198, 2201, 2218, 2219, 2220, 2211, 2200, 2199, 2015, 1027,
	2013, 2228, 2316, 2016, 2315, 775, 776, 777, 774, 2057,
	1392, 2236, 2215, 2239, 2197, 798, 799, 791, 792, 793,
	794, 795, 796, 797, 790, 2240, 1391, 1855, 2227, 1951,
	2140, 2243, 1755, 1908, 1234, 2237, 1841, 2241, 2314, 2135,
	2136, 2270, 1886, 1700, 1701, 2247, 2244, 1880, 74, 41,
	2251, 1641, 40, 2245, 1875, 775, 776, 777, 774, 1338,
	915, 134, 2248, 1046, 775, 776, 777, 774, 1744, 733,
	2533, 1019, 1019, 775, 776, 777, 774, 1339, 2299, 789,
	788, 798, 799, 791, 792, 793, 794, 795, 796, 797,
	790, 359, 360, 2305, 710, 361, 2265, 1292, 1662, 2261,
	2290, 358, 1274, 2664, 2008, 1017, 2292, 1151, 1198, 1197,
	990, 2264, 989, 2263, 2273, 917, 2273, 927, 928, 2318,
	2269, 765, 2268, 925, 926, 91, 1205, 91, 2275, 775,
	776, 777, 774, 923, 924, 2307, 2217, 1806, 921, 922,
	2301, 2300, 1791, 1794, 1795, 1796, 1792, 2303, 1793, 1797,
	2304, 1592, 2298, 2255, 953, 2297, 2744, 2624, 710, 2614,
	2612, 2536, 2391, 2393, 2306, 2391, 2391, 2309, 2147, 2274,
	2526, 2525, 2308, 2523, 573, 574, 575, 576, 2517, 2421,
	710, 2420, 2335, 2319, 2321, 2234, 1888, 572, 572, 2334,
	2325, 2233, 2225, 920, 2224, 1906, 1907, 2043, 1296, 2073,
	1909, 1910, 1294, 2328, 2418, 1648, 2326, 2733, 2732, 2733,
	724, 2392, 1915, 2732, 2490, 2336, 2388, 965, 2235, 49,
	1, 2394, 2395, 2338, 1272, 577, 1389, 2366, 2444, 2441,
	2026, 2027, 2448, 2415, 2216, 2029, 1610, 1783, 1742, 2177,
	945, 1264, 2411, 597, 1947, 1948, 1271, 1200, 1071, 2301,
	2412, 2413, 2410, 684, 719, 1068, 2416, 718, 1338, 716,
	1153, 474, 1401, 2414, 2572, 2417, 2663, 1019, 2426, 2709,
	2608, 2666, 2747, 1084, 458, 2518, 2476, 2427, 137, 2442,
	2520, 2429, 2330, 2061, 615, 505, 481, 2393, 2451, 830,
	1054, 1047, 2396, 2449, 2450, 1916, 2453, 2454, 2455, 2456,
	686, 2292, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2388, 2474, 2478, 789,
	788, 798, 799, 791, 792, 793, 794, 795, 796, 797,
	790, 480, 2288, 1967, 683, 2500, 616, 91, 1683, 2537,
	1235, 2508, 801, 1256, 804, 2512, 2511, 1239, 2493, 2794,
	2510, 2783, 2762, 2742, 2629, 2779, 2678, 1786, 2522, 802,
	803, 800, 2570, 789, 788, 798, 799, 791, 792, 793,
	794, 795, 796, 797, 790, 2724, 2437, 91, 2435, 2436,
	1791, 1794, 1795, 1796, 1792, 710, 1793, 1797, 710, 710,
	710, 2717, 2625, 2550, 395, 1347, 563, 655, 710, 2745,
	2592, 1264, 2540, 2541, 1766, 1264, 2603, 2606, 2546, 2547,
	2654, 2578, 2580, 1806, 586, 2588, 2589, 2590, 2577, 1749,
	587, 1752, 1751, 2587, 2599, 1124, 780, 1141, 2256, 2257,
	2598, 1019, 1019, 2601, 2607, 814, 434, 2091, 2602, 1636,
	2613, 2617, 2615, 2616, 2611, 446, 789, 788, 798, 799,
	791, 792, 793, 794, 795, 796, 797, 790, 1964, 2111,
	2631, 2632, 137, 2381, 2036, 1017, 1017, 48, 47, 46,
	710, 45, 1380, 1411, 476, 139, 1412, 2605, 2668, 456,
	455, 454, 710, 453, 1790, 1788, 1787, 1334, 1333, 1378,
	2637, 2692, 2643, 2644, 2645, 2487, 2557, 2647, 2483, 2479,
	2670, 2635, 2340, 2367, 2368, 2374, 868, 864, 866, 2652,
	867, 865, 1894, 1890, 2669, 710, 2660, 2145, 2146, 2143,
	930, 2443, 2262, 1706, 1704, 2676, 2209, 2205, 1397, 1269,
	1950, 2674, 1372, 1335, 1331, 2409, 566, 32, 27, 5,
	2681, 2683, 29, 28, 14, 406, 15, 405, 412, 402,
	13, 1075, 2689, 2708, 12, 18, 26, 25, 24, 409,
	410, 23, 411, 415, 2711, 82, 397, 81, 710, 2700,
	2701, 2702, 2703, 80, 79, 2716, 420, 22, 1107, 11,
	78, 884, 77, 76, 2720, 21, 2722, 2715, 789, 788,
	798, 799, 791, 792, 793, 794, 795, 796, 797, 790,
	2727, 20, 2730, 2728, 2670, 2740, 2705, 72, 70, 71,
	59, 58, 710, 2736, 710, 2734, 57, 69, 2669, 2746,
	2739, 2748, 1107, 68, 1107, 67, 66, 65, 64, 614,
	2751, 56, 55, 54, 53, 63, 2757, 2711, 62, 2758,
	710, 61, 60, 2765, 52, 51, 50, 2769, 98, 97,
	1107, 96, 2775, 95, 94, 2252, 93, 33, 34, 35,
	36, 108, 2254, 107, 109, 884, 110, 105, 103, 106,
	104, 102, 43, 10, 2782, 2789, 17, 2, 0, 2793,
	0, 872, 0, 2792, 0, 0, 0, 0, 0, 0,
	0, 0, 2804, 2789, 2806, 2805, 0, 2807, 2793, 892,
	896, 898, 900, 902, 903, 905, 0, 909, 906, 907,
	908, 0, 0, 887, 888, 889, 890, 870, 871, 893,
	0, 873, 0, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 885, 891, 0, 0, 0, 398, 400,
	399, 0, 895, 897, 899, 901, 904, 404, 0, 0,
	0, 0, 1264, 0, 0, 2310, 0, 0, 2312, 408,
	0, 0, 0, 0, 0, 872, 423, 0, 0, 862,
	0, 0, 2317, 401, 0, 0, 0, 0, 886, 0,
	0, 0, 0, 892, 896, 898, 900, 902, 903, 905,
	2113, 909, 906, 907, 908, 0, 884, 887, 888, 889,
	890, 870, 871, 893, 0, 873, 0, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 885, 891, 0,
	0, 0, 0, 0, 0, 2397, 895, 897, 899, 901,
	904, 0, 0, 0, 0, 0, 0, 789, 788, 798,
	799, 791, 792, 793, 794, 795, 796, 797, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	0, 0, 886, 0, 0, 403, 407, 413, 0, 414,
	416, 0, 0, 417, 418, 419, 0, 0, 421, 422,
	789, 788, 798, 799, 791, 792, 793, 794, 795, 796,
	797, 790, 0, 0, 0, 0, 872, 0, 0, 1892,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 892, 896, 898, 900, 902, 903,
	905, 0, 909, 906, 907, 908, 0, 0, 887, 888,
	889, 890, 870, 871, 893, 0, 873, 0, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 885, 891,
	1634, 0, 0, 0, 0, 0, 2509, 895, 897, 899,
	901, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 788, 798, 799, 791, 792, 793, 794,
	795, 796, 797, 790, 0, 2532, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 1569, 0,
	0, 1516, 307, 1474, 1529, 1447, 1463, 1537, 1464, 1465,
	1502, 1426, 1484, 269, 1461, 0, 0, 0, 0, 0,
	0, 1519, 1418, 1450, 1451, 1420, 1457, 1421, 1448, 1476,
	214, 1446, 1487, 239, 1499, 1460, 1481, 1535, 0, 0,
	299, 253, 0, 0, 1479, 1521, 1482, 1507, 1473, 1503,
	1434, 1495, 1530, 1462, 0, 1500, 1531, 0, 0, 0,
	0, 696, 697, 698, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 1498, 1525, 1459, 0, 198, 1528,
	1480, 1501, 0, 2532, 1419, 1496, 0, 1424, 1427, 1536,
	1523, 1454, 1455, 0, 0, 0, 0, 894, 0, 0,
	0, 1477, 1483, 1504, 1470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 0, 1492, 0, 0, 0,
	1429, 1425, 0, 1475, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 1568, 188,
	318, 301, 250, 233, 234, 187, 2760, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 1428, 328, 190,
	1563, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 1547, 1548, 1549, 1550, 1551, 356, 1559, 1560,
	0, 1564, 1565, 1566, 1433, 0, 1453, 1505, 0, 1417,
	1591, 1514, 1522, 1472, 330, 1524, 1469, 1468, 1554, 0,
	1553, 303, 1555, 1556, 238, 1520, 1449, 1458, 346, 1456,
	289, 271, 1526, 1491, 1567, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 1552, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 1561, 0, 1562, 342, 221, 178, 179,
	325, 0, 267, 0, 1517, 1422, 1432, 1430, 1466, 1493,
	1494, 263, 341, 1509, 1513, 1510, 1538, 292, 0, 0,
	0, 0, 0, 232, 273, 1511, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1423, 0, 300,
	323, 335, 352, 355, 1570, 1571, 1572, 183, 354, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 326, 1467, 1440, 1478,
	334, 1443, 1441, 1508, 1442, 1497, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 1488, 1471, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1489, 1581, 1582, 1583, 1584,
	1585, 1445, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 1515, 1586, 1587, 1588, 1589, 1590, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 1439, 1444, 1438, 1485, 1486, 1532, 1533,
	1534, 1506, 1431, 1518, 0, 1435, 1437, 1436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 307, 487,
	1490, 180, 0, 240, 1539, 281, 219, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 479, 0, 0, 299, 253, 0, 0,
	0, 0, 534, 542, 0, 1557, 1558, 338, 339, 340,
	324, 0, 211, 1580, 441, 0, 0, 473, 511, 510,
	460, 469, 0, 0, 195, 461, 0, 468, 462, 466,
	465, 463, 464, 0, 526, 0, 0, 0, 0, 0,
	0, 432, 445, 2529, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 488, 0, 444, 0, 0, 451, 470, 471,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 467, 486,
	490, 207, 548, 484, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 549,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	330, 0, 0, 532, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 485, 0, 289, 271, 545, 433,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 530, 267, 0,
	544, 525, 527, 528, 531, 535, 536, 537, 538, 539,
	541, 543, 547, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 2530, 0, 0, 0,
	2531, 0, 546, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 489, 257, 258, 259, 260, 533, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 555,
	529, 554, 556, 557, 553, 558, 559, 540, 452, 0,
	493, 551, 550, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 518, 498, 499, 500, 450, 501, 496,
	497, 519, 491, 515, 516, 475, 494, 502, 514, 503,
	517, 520, 521, 560, 561, 509, 562, 506, 522, 513,
	512, 504, 492, 523, 524, 478, 477, 507, 508, 495,
	307, 487, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 479, 0, 0, 299, 253,
	0, 0, 0, 0, 534, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 441, 0, 0, 473,
	511, 510, 460, 469, 0, 0, 195, 461, 0, 468,
	462, 466, 465, 463, 464, 0, 526, 0, 0, 0,
	0, 0, 0, 432, 445, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 488, 0, 444, 0, 0, 451,
	470, 471, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	467, 486, 490, 207, 548, 484, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 549, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 330, 0, 0, 532, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 485, 0, 289, 271,
	545, 433, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 1202, 1201, 1203, 342, 221, 178, 179, 325, 530,
	267, 0, 544, 525, 527, 528, 531, 535, 536, 537,
	538, 539, 541, 543, 547, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 489, 257, 258, 259, 260, 533,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 555, 529, 554, 556, 557, 553, 558, 559, 540,
	452, 0, 493, 551, 550, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 518, 498, 499, 500, 450,
	501, 496, 497, 519, 491, 515, 516, 475, 494, 502,
	514, 503, 517, 520, 521, 560, 561, 509, 562, 506,
	522, 513, 512, 504, 492, 523, 524, 478, 477, 507,
	508, 495, 307, 487, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 432, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 433, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	2530, 0, 0, 0, 2531, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 555, 529, 554, 556, 557, 553, 558,
	559, 540, 452, 0, 493, 551, 550, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 518, 498, 499,
	500, 450, 501, 496, 497, 519, 491, 515, 516, 475,
	494, 502, 514, 503, 517, 520, 521, 560, 561, 509,
	562, 506, 522, 513, 512, 504, 492, 523, 524, 478,
	477, 507, 508, 495, 307, 487, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 214, 1265, 0, 239, 0, 0, 0, 479,
	0, 0, 299, 253, 0, 0, 0, 0, 534, 542,
	0, 0, 0, 0, 0, 0, 0, 1357, 0, 0,
	441, 0, 0, 473, 511, 510, 460, 469, 0, 0,
	195, 461, 0, 468, 462, 466, 465, 463, 464, 0,
	526, 0, 0, 0, 0, 0, 0, 432, 445, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 488, 0,
	444, 0, 0, 1358, 470, 471, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 467, 486, 490, 207, 548, 484,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 549, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 330, 0, 0, 532,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	485, 0, 289, 271, 545, 433, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 530, 267, 0, 544, 525, 527, 528,
	531, 535, 536, 537, 538, 539, 541, 543, 547, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 489, 257,
	258, 259, 260, 533, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 555, 529, 554, 556, 557,
	553, 558, 559, 540, 452, 0, 493, 551, 550, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 518,
	498, 499, 500, 450, 501, 496, 497, 519, 491, 515,
	516, 475, 494, 502, 514, 503, 517, 520, 521, 560,
	561, 509, 562, 506, 522, 513, 512, 504, 492, 523,
	524, 478, 477, 507, 508, 495, 130, 307, 487, 338,
	339, 340, 324, 0, 211, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 448, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 808, 0, 0, 299, 253, 0, 0, 0,
	0, 534, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 473, 511, 510, 460,
	469, 0, 0, 195, 461, 0, 468, 462, 466, 465,
	463, 464, 0, 526, 0, 0, 0, 0, 0, 0,
	432, 445, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 443, 0, 0, 0,
	0, 488, 0, 444, 0, 0, 451, 470, 471, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 467, 486, 490,
	207, 548, 484, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 549, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 330,
	0, 0, 532, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 485, 0, 289, 271, 545, 433, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 530, 267, 0, 544,
	525, 527, 528, 531, 535, 536, 537, 538, 539, 541,
	543, 547, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 489, 257, 258, 259, 260, 533, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 555, 529,
	554, 556, 557, 553, 558, 559, 540, 452, 0, 493,
	551, 550, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 101,
	281, 219, 518, 498, 499, 500, 450, 501, 496, 497,
	519, 491, 515, 516, 475, 494, 502, 514, 503, 517,
	520, 521, 560, 561, 509, 562, 506, 522, 513, 512,
	504, 492, 523, 524, 478, 477, 507, 508, 495, 307,
	487, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 448, 0, 0, 0, 214, 2759, 0,
	239, 0, 0, 0, 479, 0, 0, 299, 253, 0,
	0, 0, 0, 534, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 0, 473, 511,
	510, 460, 469, 0, 0, 195, 461, 0, 468, 462,
	466, 465, 463, 464, 0, 526, 0, 0, 0, 0,
	0, 0, 432, 445, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 443, 0,
	0, 0, 0, 488, 0, 444, 0, 0, 451, 470,
	471, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 467,
	486, 490, 207, 548, 484, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	549, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 330, 0, 0, 532, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 485, 0, 289, 271, 545,
	433, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 530, 267,
	0, 544, 525, 527, 528, 531, 535, 536, 537, 538,
	539, 541, 543, 547, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 489, 257, 258, 259, 260, 533, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	555, 529, 554, 556, 557, 553, 558, 559, 540, 452,
	0, 493, 551, 550, 552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 518, 498, 499, 500, 450, 501,
	496, 497, 519, 491, 515, 516, 475, 494, 502, 514,
	503, 517, 520, 521, 560, 561, 509, 562, 506, 522,
	513, 512, 504, 492, 523, 524, 478, 477, 507, 508,
	495, 307, 487, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 214,
	1265, 0, 239, 0, 0, 0, 479, 0, 0, 299,
	253, 0, 0, 0, 0, 534, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	473, 511, 510, 460, 469, 0, 0, 195, 461, 0,
	468, 462, 466, 465, 463, 464, 0, 526, 0, 0,
	0, 0, 0, 0, 432, 445, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	443, 0, 0, 0, 0, 488, 0, 444, 0, 0,
	451, 470, 471, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 467, 486, 490, 207, 548, 484, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 549, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 330, 0, 0, 532, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 485, 0, 289,
	271, 545, 433, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	530, 267, 0, 544, 525, 527, 528, 531, 535, 536,
	537, 538, 539, 541, 543, 547, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 489, 257, 258, 259, 260,
	533, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 555, 529, 554, 556, 557, 553, 558, 559,
	540, 452, 0, 493, 551, 550, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 518, 498, 499, 500,
	450, 501, 496, 497, 519, 491, 515, 516, 475, 494,
	502, 514, 503, 517, 520, 521, 560, 561, 509, 562,
	506, 522, 513, 512, 504, 492, 523, 524, 478, 477,
	507, 508, 495, 307, 487, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 448, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 479, 0,
	0, 299, 253, 0, 0, 0, 0, 534, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 441,
	0, 0, 473, 511, 510, 460, 469, 0, 0, 195,
	461, 0, 468, 462, 466, 465, 463, 464, 0, 526,
	0, 0, 0, 0, 0, 0, 432, 445, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 443, 1040, 0, 0, 0, 488, 0, 444,
	0, 0, 451, 470, 471, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 467, 486, 490, 207, 548, 484, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 549, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 330, 0, 0, 532, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 485,
	0, 289, 271, 545, 433, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 530, 267, 0, 544, 525, 527, 528, 531,
	535, 536, 537, 538, 539, 541, 543, 547, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 489, 257, 258,
	259, 260, 533, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 555, 529, 554, 556, 557, 553,
	558, 559, 540, 452, 0, 493, 551, 550, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 518, 498,
	499, 500, 450, 501, 496, 497, 519, 491, 515, 516,
	475, 494, 502, 514, 503, 517, 520, 521, 560, 561,
	509, 562, 506, 522, 513, 512, 504, 492, 523, 524,
	478, 477, 507, 508, 495, 0, 0, 0, 338, 339,
	340, 324, 0, 211, 307, 487, 0, 0, 1653, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 479,
	0, 0, 299, 253, 0, 0, 0, 0, 534, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 473, 511, 510, 460, 469, 0, 0,
	195, 461, 0, 468, 462, 466, 465, 463, 464, 0,
	526, 0, 0, 0, 0, 0, 0, 432, 445, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 443, 0, 0, 0, 0, 488, 0,
	444, 0, 0, 451, 470, 471, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 467, 486, 490, 207, 548, 484,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 549, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 330, 0, 0, 532,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	485, 0, 289, 271, 545, 433, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 530, 267, 0, 544, 525, 527, 528,
	531, 535, 536, 537, 538, 539, 541, 543, 547, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 489, 257,
	258, 259, 260, 533, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 555, 529, 554, 556, 557,
	553, 558, 559, 540, 452, 0, 493, 551, 550, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 518,
	498, 499, 500, 450, 501, 496, 497, 519, 491, 515,
	516, 475, 494, 502, 514, 503, 517, 520, 521, 560,
	561, 509, 562, 506, 522, 513, 512, 504, 492, 523,
	524, 478, 477, 507, 508, 495, 307, 487, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	448, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 479, 0, 0, 299, 253, 0, 0, 0, 0,
	534, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 473, 511, 510, 460, 469,
	0, 0, 195, 461, 0, 468, 462, 466, 465, 463,
	464, 0, 526, 0, 0, 0, 0, 0, 0, 432,
	445, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 443, 0, 0, 0, 0,
	488, 0, 444, 0, 0, 451, 470, 471, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 467, 486, 490, 207,
	548, 484, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 549, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 330, 0,
	0, 532, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 485, 0, 289, 271, 545, 433, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 530, 267, 0, 544, 525,
	527, 528, 531, 535, 536, 537, 538, 539, 541, 543,
	547, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	489, 257, 258, 259, 260, 533, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 555, 529, 554,
	556, 557, 553, 558, 559, 540, 452, 0, 493, 551,
	550, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 518, 498, 499, 500, 450, 501, 496, 497, 519,
	491, 515, 516, 475, 494, 502, 514, 503, 517, 520,
	521, 560, 561, 509, 562, 506, 522, 513, 512, 504,
	492, 523, 524, 478, 477, 507, 508, 495, 307, 487,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 0,
	0, 0, 448, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 479, 0, 0, 299, 253, 0, 0,
	0, 0, 534, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 473, 511, 510,
	460, 469, 0, 0, 195, 461, 0, 468, 462, 466,
	465, 463, 464, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 445, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 443, 0, 0,
	0, 0, 488, 0, 444, 0, 0, 451, 470, 471,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 467, 486,
	490, 207, 548, 484, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 549,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	330, 0, 0, 532, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 485, 0, 289, 271, 545, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 1126, 1127, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 530, 267, 0,
	544, 525, 527, 528, 531, 535, 536, 537, 538, 539,
	541, 543, 547, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 489, 257, 258, 259, 260, 533, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 555,
	529, 554, 556, 557, 553, 558, 559, 540, 452, 0,
	493, 551, 550, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 518, 498, 499, 500, 450, 501, 496,
	497, 519, 491, 515, 516, 475, 494, 502, 514, 503,
	517, 520, 521, 560, 561, 509, 562, 506, 522, 513,
	512, 504, 492, 523, 524, 478, 477, 507, 508, 495,
	307, 487, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 479, 0, 0, 299, 253,
	0, 0, 0, 0, 534, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	511, 510, 460, 469, 0, 0, 195, 461, 0, 468,
	462, 466, 465, 463, 464, 0, 526, 0, 0, 0,
	0, 0, 0, 432, 445, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 443,
	0, 0, 0, 0, 488, 0, 444, 0, 0, 451,
	470, 471, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	467, 486, 490, 207, 548, 484, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 549, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 330, 0, 0, 532, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 485, 0, 289, 271,
	545, 433, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 530,
	267, 0, 544, 525, 527, 528, 531, 535, 536, 537,
	538, 539, 541, 543, 547, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 489, 257, 258, 259, 260, 533,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 555, 529, 554, 556, 557, 553, 558, 559, 540,
	452, 0, 493, 551, 550, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 518, 498, 499, 500, 450,
	501, 496, 497, 519, 491, 515, 516, 475, 494, 502,
	514, 503, 517, 520, 521, 560, 561, 509, 562, 506,
	522, 513, 512, 504, 492, 523, 524, 478, 477, 507,
	508, 495, 307, 487, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 479, 0, 0,
	299, 253, 0, 0, 0, 0, 534, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 0,
	0, 473, 511, 510, 460, 469, 0, 0, 195, 461,
	0, 468, 462, 466, 465, 463, 464, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 445, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 0, 0, 0, 0, 488, 0, 444, 0,
	0, 451, 470, 471, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 467, 486, 490, 207, 548, 484, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 549, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 330, 0, 0, 532, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 485, 0,
	289, 271, 545, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 530, 267, 0, 544, 525, 527, 528, 531, 535,
	536, 537, 538, 539, 541, 543, 547, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 489, 257, 258, 259,
	260, 533, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 555, 529, 554, 556, 557, 553, 558,
	559, 540, 452, 0, 493, 551, 550, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 518, 498, 499,
	500, 450, 501, 496, 497, 519, 491, 515, 516, 475,
	494, 502, 514, 503, 517, 520, 521, 560, 561, 509,
	562, 506, 522, 513, 512, 504, 492, 523, 524, 478,
	477, 507, 508, 495, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 0, 1738,
	1735, 1736, 1737, 266, 0, 1722, 1723, 1724, 1725, 870,
	1709, 1728, 0, 1710, 265, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 885, 1726, 277, 243, 278,
	230, 255, 254, 256, 895, 897, 899, 901, 904, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	1721, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 894, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 0, 0, 0, 338,
	339, 340, 324, 0, 211, 130, 307, 38, 120, 100,
	0, 0, 0, 0, 0, 0, 0, 269, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 368, 370, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 101, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 2154, 2157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2158,
	330, 0, 0, 0, 2151, 0, 2150, 303, 2152, 2155,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	2156, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 1383, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 775,
	776, 777, 774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 654, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 662, 663, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 639, 328, 190,
	638, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 652, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 653, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 656, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 664, 659,
	660, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 130, 307, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	89, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 1404, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 101, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 130, 307, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 89, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 1395, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	101, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	130, 307, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 89, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 101, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 662, 663, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 639, 328,
	190, 638, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 664,
	659, 660, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 1022, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1020, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 1016, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 1020,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2665, 0, 138, 511,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 1020, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 1020, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2293, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 1823, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 1020, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2768, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 511,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2677, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2408,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 2604, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 2419, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 307, 0, 0, 338, 339, 340, 324,
	0, 211, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 299, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 304, 320,
	196, 295, 333, 201, 302, 191, 268, 291, 0, 0,
	188, 318, 301, 250, 233, 234, 187, 0, 286, 212,
	225, 208, 266, 0, 317, 345, 207, 336, 0, 328,
	190, 0, 327, 265, 314, 319, 251, 245, 189, 316,
	249, 244, 237, 216, 0, 229, 277, 243, 278, 230,
	255, 254, 256, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 303, 0, 0, 238, 0, 0, 0, 346,
	0, 289, 271, 0, 0, 0, 287, 241, 315, 279,
	321, 305, 329, 283, 280, 181, 306, 210, 252, 192,
	194, 206, 213, 215, 217, 218, 261, 262, 274, 294,
	308, 309, 310, 209, 202, 288, 203, 227, 204, 182,
	296, 205, 184, 275, 313, 0, 223, 284, 248, 185,
	247, 276, 312, 311, 193, 337, 343, 344, 348, 0,
	349, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	351, 0, 0, 0, 0, 0, 0, 342, 221, 178,
	179, 325, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 341, 0, 0, 0, 0, 292, 0,
	0, 0, 0, 0, 232, 273, 0, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 323, 335, 352, 355, 0, 0, 0, 183, 354,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 334, 0, 0, 0, 0, 0, 350, 257, 258,
	259, 260, 224, 0, 200, 353, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 220, 226, 0, 228, 199, 272,
	222, 332, 235, 0, 0, 0, 0, 0, 0, 264,
	231, 297, 236, 242, 285, 331, 270, 290, 197, 322,
	298, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 240, 0, 281, 219, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	0, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 307, 0, 0, 338, 339,
	340, 324, 0, 211, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 2162, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 240, 0, 281, 219,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 0, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 307, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 299, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 1020,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 304, 320, 196, 295, 333, 201, 302, 191,
	268, 291, 0, 0, 188, 318, 301, 250, 233, 234,
	187, 0, 286, 212, 225, 208, 266, 0, 317, 345,
	207, 336, 0, 328, 190, 0, 327, 265, 314, 319,
	251, 245, 189, 316, 249, 244, 237, 216, 0, 229,
	277, 243, 278, 230, 255, 254, 256, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 303, 0, 0, 238,
	0, 0, 0, 346, 0, 289, 271, 0, 0, 0,
	287, 241, 315, 279, 321, 305, 329, 283, 280, 181,
	306, 210, 252, 192, 194, 206, 213, 215, 217, 218,
	261, 262, 274, 294, 308, 309, 310, 209, 202, 288,
	203, 227, 204, 182, 296, 205, 184, 275, 313, 0,
	223, 284, 248, 185, 247, 276, 312, 311, 193, 337,
	343, 344, 348, 0, 349, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 351, 0, 0, 0, 0, 0,
	0, 342, 221, 178, 179, 325, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 341, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 0, 232, 273,
	0, 293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 323, 335, 352, 355, 0,
	0, 0, 183, 354, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 334, 0, 0, 0, 0,
	0, 350, 257, 258, 259, 260, 224, 0, 200, 353,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 220, 226,
	0, 228, 199, 272, 222, 332, 235, 0, 0, 0,
	0, 0, 0, 264, 231, 297, 236, 242, 285, 331,
	270, 290, 197, 322, 298, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 240, 0,
	281, 219, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 307,
	0, 0, 338, 339, 340, 324, 0, 211, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 299, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 304, 320, 196, 295, 333, 201,
	302, 191, 268, 291, 0, 0, 188, 318, 301, 250,
	233, 234, 187, 0, 286, 212, 225, 208, 266, 0,
	317, 345, 207, 336, 0, 328, 190, 0, 327, 265,
	314, 319, 251, 245, 189, 316, 249, 244, 237, 216,
	0, 229, 277, 243, 278, 230, 255, 254, 256, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 303, 0,
	0, 238, 0, 0, 0, 346, 0, 289, 271, 0,
	0, 0, 287, 241, 315, 279, 321, 305, 329, 283,
	280, 181, 306, 210, 252, 192, 194, 206, 213, 215,
	217, 218, 261, 262, 274, 294, 308, 309, 310, 209,
	202, 288, 203, 227, 204, 182, 296, 205, 184, 275,
	313, 0, 223, 284, 248, 185, 247, 276, 312, 311,
	193, 337, 343, 344, 348, 0, 349, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 0, 0, 342, 221, 178, 179, 325, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 341,
	0, 0, 0, 0, 292, 0, 0, 0, 0, 0,
	232, 273, 0, 293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 323, 335, 352,
	355, 0, 0, 0, 183, 354, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 350, 257, 258, 259, 260, 224, 0,
	200, 353, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	220, 226, 0, 228, 199, 272, 222, 332, 235, 0,
	0, 0, 0, 0, 0, 264, 231, 297, 236, 242,
	285, 331, 270, 290, 197, 322, 298, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	240, 0, 281, 219, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 0, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 307, 0, 0, 338, 339, 340, 324, 0, 211,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 299,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 1832, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 304, 320, 196, 295,
	333, 201, 302, 191, 268, 291, 0, 0, 188, 318,
	301, 250, 233, 234, 187, 0, 286, 212, 225, 208,
	266, 0, 317, 345, 207, 336, 0, 328, 190, 0,
	327, 265, 314, 319, 251, 245, 189, 316, 249, 244,
	237, 216, 0, 229, 277, 243, 278, 230, 255, 254,
	256, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	303, 0, 0, 238, 0, 0, 0, 346, 0, 289,
	271, 0, 0, 0, 287, 241, 315, 279, 321, 305,
	329, 283, 280, 181, 306, 210, 252, 192, 194, 206,
	213, 215, 217, 218, 261, 262, 274, 294, 308, 309,
	310, 209, 202, 288, 203, 227, 204, 182, 296, 205,
	184, 275, 313, 0, 223, 284, 248, 185, 247, 276,
	312, 311, 193, 337, 343, 344, 348, 0, 349, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 0, 342, 221, 178, 179, 325,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 341, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 232, 273, 0, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 323,
	335, 352, 355, 0, 0, 0, 183, 354, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 350, 257, 258, 259, 260,
	224, 0, 200, 353, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 220, 226, 0, 228, 199, 272, 222, 332,
	235, 0, 0, 0, 0, 0, 0, 264, 231, 297,
	236, 242, 285, 331, 270, 290, 197, 322, 298, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 240, 0, 281, 219, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 0, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 0, 0, 0, 338, 339, 340, 324,
	307, 211, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 1020, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 1299, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 386, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 387,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 240, 0, 281,
	219, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 0, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 307, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 299, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 304, 320, 196, 295, 333, 201, 302,
	191, 268, 291, 0, 0, 188, 318, 301, 250, 233,
	234, 187, 0, 286, 212, 225, 208, 266, 0, 317,
	345, 207, 336, 0, 328, 190, 0, 327, 265, 314,
	319, 251, 245, 189, 316, 249, 244, 237, 216, 0,
	229, 277, 243, 278, 230, 255, 254, 256, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	330, 0, 0, 0, 0, 0, 0, 303, 0, 0,
	238, 0, 0, 0, 346, 0, 289, 271, 0, 0,
	0, 287, 241, 315, 279, 321, 305, 329, 283, 280,
	181, 306, 210, 252, 192, 194, 206, 213, 215, 217,
	218, 261, 262, 274, 294, 308, 309, 310, 209, 202,
	288, 203, 227, 204, 182, 296, 205, 184, 275, 313,
	0, 223, 284, 248, 185, 247, 276, 312, 311, 193,
	337, 343, 344, 348, 0, 349, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 351, 0, 0, 0, 0,
	0, 0, 342, 221, 178, 179, 325, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 341, 0,
	0, 0, 0, 292, 0, 0, 0, 0, 0, 232,
	273, 0, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 323, 335, 352, 355,
	0, 0, 0, 183, 354, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 334, 0, 0, 0,
	0, 0, 350, 257, 258, 259, 260, 224, 0, 200,
	353, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 220,
	226, 0, 228, 199, 272, 222, 332, 235, 0, 0,
	0, 0, 0, 0, 264, 231, 297, 236, 242, 285,
	331, 270, 290, 197, 322, 298, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 240,
	0, 281, 219, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 0, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	307, 0, 0, 338, 339, 340, 324, 0, 211, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 214, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 299, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 304, 320, 196, 295, 333,
	201, 302, 191, 268, 291, 0, 0, 188, 318, 301,
	250, 233, 234, 187, 0, 286, 212, 225, 208, 266,
	0, 317, 345, 207, 336, 0, 328, 190, 0, 327,
	265, 314, 319, 251, 245, 189, 316, 249, 244, 237,
	216, 0, 229, 277, 243, 278, 230, 255, 254, 256,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 303,
	0, 0, 238, 0, 0, 0, 346, 0, 289, 271,
	0, 0, 0, 287, 241, 315, 279, 321, 305, 329,
	283, 280, 181, 306, 210, 252, 192, 194, 206, 213,
	215, 217, 218, 261, 262, 274, 294, 308, 309, 310,
	209, 202, 288, 203, 227, 204, 182, 296, 205, 184,
	275, 313, 0, 223, 284, 248, 185, 247, 276, 312,
	311, 193, 337, 343, 344, 348, 0, 349, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 351, 0, 0,
	0, 0, 0, 0, 342, 221, 178, 179, 325, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	341, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 232, 273, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 323, 335,
	352, 355, 0, 0, 0, 183, 354, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 334, 0,
	0, 0, 0, 0, 350, 257, 258, 259, 260, 224,
	0, 200, 353, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 220, 226, 0, 228, 199, 272, 222, 332, 235,
	0, 0, 0, 0, 0, 0, 264, 231, 297, 236,
	242, 285, 331, 270, 290, 197, 322, 298, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 240, 0, 281, 219, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 0, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 307, 0, 0, 338, 339, 340, 324, 0,
	211, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	299, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 304, 320, 196,
	295, 333, 201, 302, 191, 268, 291, 0, 0, 188,
	318, 301, 250, 233, 234, 187, 0, 286, 212, 225,
	208, 266, 0, 317, 345, 207, 336, 0, 328, 190,
	0, 327, 265, 314, 319, 251, 245, 189, 316, 249,
	244, 237, 216, 0, 229, 277, 243, 278, 230, 255,
	254, 256, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 303, 0, 0, 238, 0, 0, 0, 346, 0,
	289, 271, 0, 0, 0, 287, 241, 315, 279, 321,
	305, 329, 283, 280, 181, 306, 210, 252, 192, 194,
	206, 213, 215, 217, 218, 261, 262, 274, 294, 308,
	309, 310, 209, 202, 288, 203, 227, 204, 182, 296,
	205, 184, 275, 313, 0, 223, 284, 248, 185, 247,
	276, 312, 311, 193, 337, 343, 344, 348, 0, 349,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 351,
	0, 0, 0, 0, 0, 0, 342, 221, 178, 179,
	325, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 341, 0, 0, 0, 0, 292, 0, 0,
	0, 0, 0, 232, 273, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	323, 335, 352, 355, 0, 0, 0, 183, 354, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	334, 0, 0, 0, 0, 0, 350, 257, 258, 259,
	260, 224, 0, 200, 353, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 220, 226, 0, 228, 199, 272, 222,
	332, 235, 0, 0, 0, 0, 0, 0, 264, 231,
	297, 236, 242, 285, 331, 270, 290, 197, 322, 298,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 240, 0, 281, 219, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 0,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 307, 0, 0, 338, 339, 340,
	324, 0, 211, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 426, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 0, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 0, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 0, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 0, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 307, 0, 0, 338,
	339, 340, 324, 0, 211, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 214, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 299, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 697, 698, 1804, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 304, 320, 196, 295, 333, 201, 302, 191, 268,
	291, 0, 0, 188, 318, 301, 250, 233, 234, 187,
	0, 286, 212, 225, 208, 266, 0, 317, 345, 207,
	336, 0, 328, 190, 0, 327, 265, 314, 319, 251,
	245, 189, 316, 249, 244, 237, 216, 0, 229, 277,
	243, 278, 230, 255, 254, 256, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 303, 0, 0, 238, 0,
	0, 0, 346, 0, 289, 271, 0, 0, 0, 287,
	241, 315, 279, 321, 305, 329, 283, 280, 181, 306,
	210, 252, 192, 194, 206, 213, 215, 217, 218, 261,
	262, 274, 294, 308, 309, 310, 209, 202, 288, 203,
	227, 204, 182, 296, 205, 184, 275, 313, 0, 223,
	284, 248, 185, 247, 276, 312, 311, 193, 337, 343,
	344, 348, 0, 349, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 351, 0, 0, 0, 0, 0, 0,
	342, 221, 178, 179, 325, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 341, 0, 0, 0,
	0, 292, 0, 0, 0, 0, 0, 232, 273, 0,
	293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 323, 335, 352, 355, 0, 0,
	0, 183, 354, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	350, 257, 258, 259, 260, 224, 0, 200, 353, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 220, 226, 0,
	228, 199, 272, 222, 332, 235, 0, 0, 0, 0,
	0, 0, 264, 231, 297, 236, 242, 285, 331, 270,
	290, 197, 322, 298, 246, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 299, 253, 180, 0, 240, 0, 281,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 697, 698, 1804, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 324, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	304, 320, 196, 295, 333, 201, 302, 191, 268, 291,
	0, 0, 188, 318, 301, 250, 233, 234, 187, 0,
	286, 212, 225, 208, 266, 0, 317, 345, 207, 336,
	0, 328, 190, 0, 327, 265, 314, 319, 251, 245,
	189, 316, 249, 244, 237, 216, 0, 229, 277, 243,
	278, 230, 255, 254, 256, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 303, 0, 0, 238, 0, 0,
	0, 346, 0, 289, 271, 0, 0, 0, 287, 241,
	315, 279, 321, 305, 329, 283, 280, 181, 306, 210,
	252, 192, 194, 206, 213, 215, 217, 218, 261, 262,
	274, 294, 308, 309, 310, 209, 202, 288, 203, 227,
	204, 182, 296, 205, 184, 275, 313, 0, 223, 284,
	248, 185, 247, 276, 312, 311, 193, 337, 343, 344,
	348, 0, 349, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 351, 0, 0, 0, 0, 0, 0, 342,
	221, 178, 179, 325, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 341, 0, 0, 0, 0,
	292, 0, 0, 0, 0, 0, 232, 273, 0, 293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 323, 335, 352, 355, 0, 0, 0,
	183, 354, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 334, 0, 0, 0, 0, 0, 350,
	257, 258, 259, 260, 224, 0, 200, 353, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 220, 226, 0, 228,
	199, 272, 222, 332, 235, 0, 0, 0, 0, 0,
	0, 264, 231, 297, 236, 242, 285, 331, 270, 290,
	197, 322, 298, 246, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 299, 253, 180, 0, 240, 0, 281, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 697, 698, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 324, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 304,
	320, 196, 295, 333, 201, 302, 191, 268, 291, 0,
	0, 188, 318, 301, 250, 233, 234, 187, 0, 286,
	212, 225, 208, 266, 0, 317, 345, 207, 336, 0,
	328, 190, 0, 327, 265, 314, 319, 251, 245, 189,
	316, 249, 244, 237, 216, 0, 229, 277, 243, 278,
	230, 255, 254, 256, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 775, 776, 777,
	774, 0, 0, 303, 0, 0, 238, 0, 0, 0,
	346, 0, 289, 271, 0, 0, 0, 287, 241, 315,
	279, 321, 305, 329, 283, 280, 181, 306, 210, 252,
	192, 194, 206, 213, 215, 217, 218, 261, 262, 274,
	294, 308, 309, 310, 209, 202, 288, 203, 227, 204,
	182, 296, 205, 184, 275, 313, 0, 223, 284, 248,
	185, 247, 276, 312, 311, 193, 337, 343, 344, 348,
	0, 349, 1181, 0, 0, 357, 0, 0, 0, 0,
	0, 351, 0, 0, 0, 0, 2364, 0, 342, 221,
	178, 179, 325, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 341, 0, 0, 0, 0, 292,
	0, 0, 0, 0, 0, 232, 273, 0, 293, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 323, 335, 352, 355, 0, 0, 0, 183,
	354, 0, 0, 0, 0, 0, 0, 2788, 326, 0,
	0, 0, 334, 0, 0, 0, 0, 2346, 350, 257,
	258, 259, 260, 224, 0, 200, 353, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 220, 226, 0, 228, 199,
	272, 222, 332, 235, 0, 0, 2364, 0, 0, 0,
	264, 231, 297, 236, 242, 285, 331, 270, 290, 197,
	322, 298, 246, 0, 0, 0, 0, 1177, 0, 0,
	1174, 0, 0, 0, 1176, 1173, 1175, 1179, 1180, 0,
	1755, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2364, 0, 0,
	0, 0, 0, 180, 0, 240, 0, 281, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 2346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2350, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 324, 2354, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2346, 0,
	0, 0, 0, 2343, 2447, 0, 0, 2345, 2347, 2349,
	0, 2351, 2352, 2353, 2355, 2356, 2357, 2359, 2360, 2361,
	2362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1184, 1185, 1186, 1187, 1188,
	1189, 1182, 1183, 2365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 0, 405,
	412, 402, 2350, 0, 0, 0, 0, 0, 0, 2363,
	0, 409, 410, 2354, 411, 415, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 0, 2342, 0, 420, 0,
	0, 0, 0, 2343, 0, 0, 0, 2345, 2347, 2349,
	0, 2351, 2352, 2353, 2355, 2356, 2357, 2359, 2360, 2361,
	2362, 0, 0, 2350, 0, 2358, 0, 424, 0, 0,
	425, 0, 2348, 0, 2354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2365, 2343, 0, 0, 0, 2345, 2347,
	2349, 0, 2351, 2352, 2353, 2355, 2356, 2357, 2359, 2360,
	2361, 2362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 0, 405, 412, 402, 2363,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	0, 411, 415, 0, 2365, 397, 2342, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2358, 0, 0, 0, 0,
	2363, 0, 2348, 0, 424, 0, 0, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2342, 0, 0,
	398, 400, 399, 0, 0, 0, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 2358, 0, 423, 0,
	0, 0, 0, 2348, 0, 401, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 400, 399,
	0, 0, 0, 0, 0, 0, 404, 403, 407, 413,
	0, 414, 416, 0, 0, 417, 418, 419, 408, 0,
	421, 422, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 407, 413, 0, 414, 416,
	0, 0, 417, 418, 419, 0, 0, 421, 422,
}

var yyPact = [...]int{
	302, -1000, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -199, 26819, 26819,
	-1000, -1000, 1633, -1000, 26317, 10745, 27321, 193, 181, 27321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 487, -1000, 25815, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 434, 29767, 27823, 306, 8225, 27321, -270,
	-1000, 2278, -136, -1000, -1000, -1000, -1000, -1000, -1000, 1064,
	626, 25313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1301, 113,
	626, 653, 664, 743, 743, 12251, 2278, 284, 860, -1000,
	941, 302, 29163, 1543, 400, 27321, -1000, 1080, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 400, -1000,
	-1000, -1000, 2278, 2278, -1000, 27321, 27321, 14, 1179, -1000,
	235, 275, 257, 1079, -1000, -1000, -1000, -1000, -1000, 2305,
	-1000, 27321, 27321, 1972, 27321, -1000, 1410, 356, 29884, 2144,
	878, 535, 2000, -1000, -1000, 1940, -1000, 122, 151, 177,
	288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 130, -1000,
	2205, -1000, -1000, 111, -1000, -1000, 120, -1000, -1000, -1000,
	-48, -1000, -1000, -1000, -1000, -1000, -148, -1000, -1000, -148,
	734, 1563, 8225, -1000, 1459, -1000, 2358, -1000, -1000, -1000,
	-1000, 5706, 9731, 9731, 9731, 9731, -1000, -1000, 1784, 8225,
	1939, 1774, 1937, -1000, -1000, -1000, -1000, 1074, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1534, 9229, -1000, 1929, 1923, 1920, 1915, 1913, 1912, 1896,
	1894, 1893, 1890, 1678, 1889, 1532, 1529, 1882, 1880, 1875,
	1528, 1678, 1678, 1874, 1871, 1865, 1862, 1857, 1856, 1852,
	1851, 1844, 1841, 1837, 1824, 1815, 1814, 1810, 1809, 1806,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2745, -1000, 1073, 843, -1000, 1805, 2132,
	2204, 1719, 2283, 2217, 2212, 2202, 2196, 1380, -1000, -1000,
	27321, 27321, 59, 424, 424, 424, 466, 424, 482, 479,
	-1000, -1000, -1000, -1000, -1000, -1000, 588, -1000, -1000, -1000,
	-1000, 966, 27321, -1000, 1752, 1106, 2241, 374, 365, 238,
	-1000, 1220, 1220, 1220, 1106, 249, 387, 2204, 2204, -70,
	-95, 1106, 1106, -95, 84, -1000, -1000, -1000, 1220, 363,
	1220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2192, 2190,
	-193, 434, 434, 443, -1000, -147, -1000, -1000, 647, -1000,
	609, -1000, 1410, 355, 349, 969, 1227, -1000, 1133, 27321,
	27321, 27321, 1133, 1133, 15266, 14764, -1000, 2204, 1719, -1000,
	1662, 2041, 1656, 1719, 434, 434, 434, 434, 434, 434,
	434, 27321, 27321, 7212, 7212, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 280, -1000, -1000, -1000, -1000, -1000, 2135,
	243, 1800, -1000, 27321, 253, 2204, 2132, 2204, -1000, -1000,
	1072, 1376, 1527, -1000, -1000, 235, 1096, -1000, 686, -1000,
	-1000, -1000, -1000, 27321, 244, -1000, -1000, 1516, 1799, -1000,
	378, 869, 920, -1000, 67, 2645, 22796, 1410, 22796, 27321,
	-1000, -1000, -1000, -1000, -1000, -1000, -64, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	105, -1000, 105, 8225, 8225, 8225, 8225, 8225, -1000, 428,
	8727, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9731, 9731,
	9731, 9731, 9731, 9731, 9731, 9731, 9731, 9731, 9731, 9731,
	1782, 1184, 9731, 9731, 9731, 2041, 2149, 968, 175, -1000,
	-1000, -1000, -1000, -1000, 1196, 1563, 8225, 8225, 8225, 27321,
	-1000, 29287, 8225, 8225, 114, 8225, 2187, 4199, 27321, 8225,
	-1000, 1655, 1654, -1000, -1000, 1277, 8225, -1000, -1000, 8225,
	9731, 8225, -1000, -1000, -1000, 156, 2187, 2187, 8225, 8225,
	2187, 2187, 2187, 1200, 2187, 2187, 2187, 2187, 2187, 2187,
	2187, 2187, 27321, 2104, 80, -1000, -1000, -1000, 1717, -1000,
	1756, 1756, 1717, 1717, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1767, 1796, -1000, -1000, 1755, 1755, 1755,
	1717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1765, 1765, 1766, 1765,
	27321, 2204, -270, 6710, -1000, -275, 2132, 8225, -1000, -1000,
	8225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1522,
	2178, -1000, 1795, 1071, 464, 424, -1000, 27321, 1198, 22796,
	1410, 1455, 27321, 424, 424, 443, -1000, 27321, 966, 2173,
	27321, 2292, 9731, 24811, 1220, 1106, -1000, 27321, -1000, -1000,
	-1000, 1220, 27321, 1220, 2292, 1220, -1000, -1000, -1000, 1106,
	1106, -1000, -1000, -1000, -1000, 1220, 1220, -1000, -1000, -74,
	2292, 2292, -83, 27321, 27321, 424, 27321, -1000, 27321, -1000,
	-1000, 460, 27321, 22796, 21290, -1000, -123, 644, 630, 633,
	-1000, -1000, 377, 373, 14262, 326, 22796, 5203, -1000, -1000,
	1133, 1133, 1133, 5203, 5203, 946, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2132, -1000, -1000, -1000, -1000, -1000, 27321,
	22796, 1410, 27321, 27321, 27321, 29163, -1000, 1793, 916, -1000,
	-1000, 11749, 1067, 916, 1520, 27321, 1518, 1994, 2090, -1000,
	1792, 13257, 27321, -1000, -1000, -271, -1000, 12754, 27321, 2132,
	-1000, 2132, 3241, -1000, 2238, -1000, 235, 206, -1000, -1000,
	-1000, -1000, -1000, -1000, 1059, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 921, -1000, 27321, -1000, -1000, 67,
	22796, 1167, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 126,
	-1000, -1000, 162, -1000, 456, 37, 1090, -1000, -1000, 75,
	159, 513, 75, 1563, -1000, 1211, 1211, 1213, -1000, 413,
	-1000, -1000, -1000, -1000, 1784, -1000, -1000, -1000, 2008, 1434,
	-1000, 1194, 1194, 1088, 1088, 1088, 1088, 1088, 1299, 1299,
	-1000, -1000, -1000, 5706, 1782, 9731, 9731, 9731, 411, 2583,
	2967, -1000, 8225, 1202, -1000, 8225, 1489, 2093, 1153, 1056,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1653, 734, 1650, 1441, 2300, 1639, 8225, -1000, -1000, 1398,
	7723, -1000, -1000, -1000, 1638, 1055, 1637, -1000, -1000, -1000,
	1634, 751, 1611, 2074, 1609, 911, 8225, 8225, 1089, 1069,
	8225, 8225, 8225, 8225, 1607, 8225, 8225, 8225, 8225, 8225,
	8225, 8225, 8225, -1000, 8225, 72, -1000, -1000, -1000, -1000,
	1375, -1000, 1373, -1000, -1000, -1000, 1517, 1517, -1000, 1369,
	-1000, -1000, -1000, -1000, 1365, -1000, -1000, 1364, -1000, -1000,
	-1000, -1000, 1068, -1000, 1563, -1000, 1512, -1000, 947, 890,
	-1000, 1409, -1000, -1000, 27321, 10233, 27321, 424, 27321, 66,
	-1000, 2143, 892, -1000, 37, 785, 1957, 2102, 27321, 27321,
	24309, -1000, 1780, 1060, -1000, -1000, 8225, -1000, 1956, 1410,
	27321, 2292, -1000, -1000, -1000, -1000, 29163, -1000, -1000, -1000,
	27321, 2292, 2292, 1106, 1220, 1220, -1000, -1000, 1220, -1000,
	1052, -1000, 27321, -1000, -1000, 434, 63, 892, 2437, 816,
	-1000, -1000, -1000, -1000, 28325, 28325, 13760, 28325, -1000, 1065,
	-1000, -1000, 641, 591, 614, -1000, -1000, 450, -1000, -1000,
	785, -1000, -1000, -1000, 1775, 1178, -1000, -1000, 1774, -1000,
	5203, 5203, 5203, -1000, -1000, 17274, -1000, -1000, 880, 785,
	1992, 870, -1000, 870, -1000, 10233, 2292, 7212, -1000, 21290,
	-1000, -1000, 23800, -1000, 23298, 2292, -280, 807, -109, -1000,
	2107, -271, 27321, 27321, 1057, 152, -1000, 1050, -1000, 769,
	-1000, 1773, -1000, 1021, 2091, 780, -1000, 1158, -1000, -1000,
	-1000, 1047, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13, -1000, -1000, 27321, 1516, 1017, 1167, 827,
	-1000, 449, 1040, 1029, -1000, 22796, 98, 22796, -1000, 22796,
	-1000, -1000, 239, -1000, 27321, 2126, -1000, -1000, -1000, 1497,
	-298, 2119, -1000, -1000, -1000, -1000, -1000, 1014, -1000, 411,
	2583, 2875, -1000, 9731, 9731, 2084, 1182, -1000, 8225, 1317,
	2661, -1000, 1013, 16270, 27321, -1000, -1000, 8225, 8225, -1000,
	2075, -1000, 8225, 8225, 1423, -1000, 27321, -1000, -1000, -1000,
	16270, -1000, 9731, -1000, 8225, 143, 2025, -36, -36, 2006,
	1924, 1910, 1000, -36, 1778, 1714, 1687, 1680, 1659, 1643,
	1606, 1601, 1563, -1000, -1000, 1602, 1600, 999, -1000, 997,
	1599, 992, 979, 6710, -1000, -109, 8225, 8225, 8225, 2096,
	-1000, -1000, 83, 1598, 856, -1000, -1000, -1000, 2876, 1756,
	1717, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1767, -1000, 1755, 1755, 1755, 1717, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1765, 1765, 1766, 1765, -1000,
	27321, 1764, -50, 1139, -1000, 359, 22796, 347, -1000, 1989,
	221, -1000, 2102, -1000, 562, -1000, 1761, 1758, 27321, 819,
	-1000, 1023, 302, -1000, 27321, 1563, -1000, 1410, -1000, 1106,
	-1000, -1000, 2292, 951, -1000, -1000, 2292, 1106, 1106, 1220,
	27321, -1000, 27321, -50, 1139, 359, 27321, 21290, 21290, 21290,
	21290, -1000, 2057, 2042, -1000, 2055, 2030, 2012, 27321, 21290,
	1752, -1000, 28744, -1000, -1000, -1000, -1000, -1000, 2041, 961,
	2199, 580, 8225, -1000, -1000, -1000, 582, 22796, 1511, 326,
	-1000, -1000, -1000, -1000, -1000, 27321, 27321, 1595, 2290, -1000,
	841, -1000, -1000, 1012, -1000, 2290, -1000, 1363, 1510, -17,
	-3, 1242, 769, 780, 954, -1000, 152, 27321, 2073, 1757,
	-1000, 27321, -271, 6710, 283, -271, 27321, 6710, 3241, 1348,
	-1000, -1000, -1000, 2294, 22796, 1410, 1098, 1120, -1000, 109,
	-1000, 121, 352, 1504, -1000, 469, 97, -1000, 1157, 1497,
	468, -1000, -1000, 9731, -1000, -1000, -1000, -1000, 1563, 8225,
	1594, -1000, 570, 570, 1592, -1000, 1717, 1756, -1000, 1717,
	1755, 1717, 570, 570, 1591, -1000, 1372, 1596, -1000, 1590,
	1558, 8225, -1000, 1573, 2832, 907, 1572, 1503, -36, -1000,
	1753, -1000, -36, -36, -36, -36, -1000, -36, -36, -36,
	-36, -36, -36, -36, -36, -1000, -1000, -1000, 1501, -1000,
	-1000, -1000, 1336, -1000, 1333, -1000, -17, 1563, 1563, -1000,
	-1000, 2105, 1499, 498, 10233, 2100, 1752, 11247, 1262, -1000,
	-1000, 22294, -1000, 338, -1000, -1000, -1000, 408, 95, 1328,
	329, -1000, 1524, 27321, -1000, -1000, -1000, -1000, -1000, 1139,
	1139, 1139, 11247, 11247, 400, 757, 1011, 21290, 27321, -1000,
	20788, 1571, -1000, 785, 2292, -1000, 27321, -1000, 2292, 2292,
	1106, -1000, 1752, 1262, 22294, 338, 902, -1000, 1152, 1946,
	1988, 1946, -1000, -1000, -1000, -1000, 2033, -1000, 1701, -1000,
	-1000, 902, -1000, -1000, -1000, -1000, -1000, 580, -1000, 2223,
	587, 587, 587, 1569, -1000, 827, 1568, -1000, -1000, -1000,
	-1000, -1000, 2286, 2282, 21792, 2286, -1000, -280, -278, 4,
	2281, 2275, 2315, 252, 27321, 282, -1000, -271, 27321, -1000,
	-1000, 1567, 802, -271, -1000, 769, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1410, -1000, 116, -1000, -1000, -1000, -1000,
	-1000, -1000, 23, -1000, 27321, -1000, 1497, 1475, 96, 27321,
	-1000, 1563, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8225, -1000, -1000,
	-1000, 1541, -1000, -1000, 8225, -36, -1000, -1000, 398, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1562, 1559, -278, -1000, -1000, -1000, 2876, -1000,
	935, 2172, 1552, 793, -1000, -1000, -1000, 2876, 708, -1000,
	27321, 1237, 587, 424, 587, 1235, 1750, -1000, -1000, -1000,
	1470, 36, -1000, -1000, -1000, 1467, 1466, 1326, -1000, -1000,
	1358, 980, 55, -1000, -1000, -1000, -1000, -1000, -1000, 1748,
	16270, 16772, 1464, 1551, 1550, 28325, 21290, 20788, 805, -1000,
	1009, -1000, -1000, -1000, 2292, -1000, -1000, 2292, 2169, -1000,
	36, -1000, 2279, 27321, 6710, -1000, -1000, 8225, 1747, -1000,
	8225, -1000, -1000, -1000, -1000, -1000, 1745, 2095, -1000, -1000,
	-1000, -1000, -1000, -1000, 8225, 8225, -1000, -1000, -1000, -280,
	1463, -1000, 2274, 1462, 1405, 27321, -1000, -1000, -271, -1000,
	769, 943, -1000, 769, 785, -1000, -1000, 152, -1000, -1000,
	-1000, -83, 1531, -1000, 1521, -1000, 2279, -1000, 2272, -1000,
	-1000, -280, -211, -1000, -1000, 252, 29621, 11247, 1509, -1000,
	-1000, 27321, 27321, -1000, 27321, 27321, 424, 8225, -1000, -1000,
	232, -1000, -1000, 149, -1000, -1000, 1352, 372, -1000, 19282,
	-1000, -1000, -1000, -1000, -1000, 105, 29621, 2292, 805, 1009,
	-1000, -1000, 1076, -1000, -1000, 252, -1000, 2204, -1000, -1000,
	1563, 27321, 1563, 20286, -1000, 2271, 2269, 1563, 734, -282,
	-1000, 1451, -2, -1000, -1000, 780, 769, -1000, -83, -1000,
	-24, -9, -1000, -1000, 86, 8225, -282, 27321, -1000, 396,
	29570, -1000, 1139, 1139, 755, 1139, 1139, 1139, 1139, 300,
	273, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 1139, 1139, 1736, -1000, -1000, 1509, -1000,
	-1000, 1226, 9731, -1000, -1000, 1447, 16772, 516, 543, 1735,
	-1000, 259, 2311, -1000, 1221, 1218, -1000, 27321, -1000, 1734,
	1947, 200, 1731, -1000, 1728, 1718, 27321, 1454, 348, 1446,
	-1000, -1000, 141, -1000, -1000, 942, -1000, 1717, 8225, -1000,
	-83, 396, 2279, -1000, -1000, -1000, 928, 923, -1000, -1000,
	-1000, -1000, -1000, 1707, -1000, 2268, -1000, 429, -26, -9,
	-1000, 2263, -13, 2261, 2260, 1536, -1000, 3697, -1000, -1000,
	-1000, 734, -1000, 2146, -1000, 205, 2251, 29621, -1000, 1324,
	1312, 1139, 1139, 1309, 1444, 1433, 1432, 1139, 1139, 1306,
	1430, 28744, 1292, 1291, 1289, 1349, 1425, 499, 1323, 1304,
	1295, 27321, 1700, 1400, -1000, -1000, 2583, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1287, 1696,
	-80, -1000, -1000, 1694, 19282, 247, 247, 19282, 19282, 19282,
	1690, 455, -1000, 22, -1000, -1000, -1000, 19282, 2117, 1418,
	-1000, 205, 2204, -1000, -1000, 19784, 27321, 1405, 1689, 1280,
	4, 2250, -1000, 1405, 2249, 1405, 1405, -1000, -1000, 4701,
	-273, -27, 254, 1422, -1000, 2247, 260, -1000, -1000, -1000,
	16270, 16270, -1000, -1000, -1000, -1000, 1420, 1414, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	336, 27321, 915, -1000, 1148, 1311, 8225, 1678, -203, 19282,
	914, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 891, 887,
	858, 19282, -1000, -1000, -1000, 250, -1000, 194, -1000, -1000,
	2117, -1000, -1000, -1000, -1000, 845, -1000, -1000, 2183, 15768,
	-20, -1000, 1411, -1000, 1405, -1000, -1000, 1206, -1000, -1000,
	-1000, -1000, -1000, -1000, 18780, 223, 266, 240, -1000, 376,
	-1000, -1000, -1000, -1000, -1000, -1000, 314, 842, -1000, 1400,
	1395, -1000, 1261, -1000, 1979, -1000, 69, 836, -1000, -1000,
	-1000, -1000, 833, -1000, -1000, 1139, 1387, 168, -1000, -1000,
	-1000, -1000, 27321, -1000, 27321, -1000, 826, -1000, -1000, -1000,
	1002, -1000, -1000, -1000, -1000, 4701, -1000, 27321, 215, 1279,
	9731, 1677, 9731, 1676, 233, 1675, -1000, -1000, -1000, -1000,
	-1000, 455, -1000, 1975, 1974, 2304, -1000, -1000, -1000, -1000,
	194, 194, 194, 194, 92, 1270, -1000, 1455, -1000, 696,
	-1000, 1135, -1000, 18278, 27321, -1000, 822, 1673, 2246, -1000,
	2441, 27321, 2314, 27321, 1672, 1118, 9731, -1000, -1000, 2306,
	-1000, 2309, 511, 511, -1000, -1000, -1000, 27321, 6208, -1000,
	984, -1000, -1000, 389, 230, -1000, 788, -1000, 783, 17776,
	1265, 1908, -1000, -1000, -1000, 1294, 264, -1000, -1000, -1000,
	1563, 27321, 781, -1000, 1401, 207, -1000, -1000, -1000, 775,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 389, 2048, -1000,
	1258, -1000, -1000, 29460, 534, -1000, -1000, 29460, 214, -1000,
	375, 1670, -1000, -1000, 773, -1000, 1302, 568, 8225, -1000,
	214, 29621, -1000, 8225, 764, -1000, 29621, 747, -1000, -1000,
}

var yyPgo = [...]int{
	0, 137, 2787, 221, 144, 142, 219, 2786, 2783, 2162,
	2159, 2782, 2781, 2780, 2779, 2778, 2777, 2776, 2774, 2773,
	2771, 2770, 2769, 2768, 2767, 2766, 2764, 2763, 2761, 2759,
	2758, 212, 2756, 2755, 2754, 2752, 2751, 2748, 2745, 2744,
	2743, 2742, 2741, 2739, 2738, 2737, 2736, 2735, 2733, 2727,
	2726, 2721, 2720, 2719, 2718, 2717, 140, 2711, 2158, 2695,
	2693, 2692, 2690, 2689, 186, 2687, 2684, 2683, 2677, 2675,
	2671, 2668, 2667, 2666, 2665, 2664, 2661, 2660, 2656, 2654,
	154, 2653, 2652, 150, 2649, 2648, 2647, 2646, 209, 192,
	66, 2645, 49, 67, 170, 222, 181, 226, 220, 163,
	135, 75, 2644, 2171, 2643, 146, 200, 121, 25, 2640,
	139, 2639, 122, 42, 35, 215, 116, 54, 97, 104,
	2638, 191, 65, 88, 93, 2637, 2636, 225, 166, 2634,
	96, 2633, 2632, 2631, 2630, 177, 108, 2629, 69, 2628,
	81, 70, 98, 28, 2627, 2623, 2622, 84, 2621, 2620,
	2618, 2617, 149, 2616, 105, 58, 2615, 2614, 2613, 55,
	2612, 29, 2611, 51, 2609, 2608, 2606, 2605, 63, 2604,
	2603, 12, 17, 19, 2601, 20, 1, 2599, 190, 62,
	92, 117, 2598, 410, 2597, 2596, 2595, 127, 2594, 411,
	2593, 2591, 2590, 2589, 10, 2588, 180, 52, 2587, 85,
	106, 2586, 53, 171, 176, 2585, 2584, 114, 61, 60,
	107, 2583, 2582, 79, 193, 15, 34, 0, 175, 41,
	2581, 2579, 2578, 218, 2577, 203, 173, 201, 123, 223,
	134, 2574, 2573, 57, 2568, 130, 80, 111, 13, 2555,
	162, 2549, 657, 164, 2546, 183, 2545, 138, 3, 124,
	2539, 2538, 24, 251, 2537, 2536, 2535, 157, 2532, 2531,
	125, 156, 2530, 2529, 2524, 27, 2521, 32, 30, 2520,
	82, 2514, 211, 179, 152, 120, 158, 159, 128, 198,
	202, 78, 129, 1215, 119, 87, 18, 2510, 196, 2507,
	217, 197, 2506, 167, 2505, 216, 389, 188, 2504, 161,
	7, 44, 31, 2502, 8, 2501, 147, 2489, 2488, 21,
	2486, 23, 2485, 2466, 2465, 2464, 6, 2463, 2462, 2461,
	2, 4, 2459, 5, 187, 43, 100, 2457, 112, 213,
	2453, 2450, 74, 2448, 2446, 195, 2444, 1193, 2443, 2442,
	2441, 2410, 2405, 2401, 2400, 77, 37, 2399, 2396, 2395,
	2394, 72, 113, 2393, 284, 185, 2392, 38, 160, 2391,
	26, 2390, 33, 2387, 99, 2385, 14, 165, 2384, 2383,
	16, 2381, 2380, 9, 11, 2379, 2376, 56, 2375, 48,
	36, 83, 71, 2374, 22, 64, 118, 2372, 2371, 207,
	210, 184, 2370, 132, 205, 228, 2369, 189, 2367, 2365,
	2364, 2363, 2358, 239, 2357, 1226, 2353, 2350, 208, 59,
	90, 101, 2349, 2348, 2347, 73, 131, 103, 95, 174,
	2346, 168, 2345, 2344, 94, 2341, 2340, 2336, 2335, 2334,
	2330, 2329, 204, 153, 2327,
}

//line mysql_sql.y:8370
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowFrameUnion() *tree.WindowFrame {
	v, _ := st.union.(*tree.WindowFrame)
	return v
}

func (st *yySymType) windowFrameBoundUnion() tree.WindowFrameBound {
	v, _ := st.union.(tree.WindowFrameBound)
	return v
}

func (st *yySymType) windowFrameUnitUnion() tree.WindowFrameUnits {
	v, _ := st.union.(tree.WindowFrameUnits)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 430, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 86, 428, 428, 428, 429, 429,
	84, 84, 84, 73, 72, 85, 376, 376, 375, 375,
	374, 374, 373, 373, 373, 372, 372, 372, 371, 371,
	370, 370, 369, 369, 367, 367, 368, 366, 365, 365,
	365, 363, 363, 361, 361, 362, 362, 356, 356, 359,
	359, 357, 357, 357, 357, 360, 355, 355, 355, 354,
	354, 71, 71, 71, 285, 285, 70, 70, 299, 299,
	299, 299, 299, 297, 297, 297, 297, 297, 297, 296,
	296, 295, 295, 300, 300, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 65, 65, 65, 65, 68,
	68, 68, 69, 294, 294, 294, 66, 67, 67, 284,
	284, 289, 289, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 293, 293, 293, 291, 291,
	290, 290, 292, 292, 59, 59, 59, 62, 61, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 60, 60,
	60, 60, 60, 60, 57, 57, 57, 57, 57, 56,
	56, 58, 58, 282, 282, 281, 76, 76, 76, 76,
	76, 76, 76, 75, 75, 78, 78, 77, 79, 64,
	64, 64, 64, 64, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 400, 400, 400, 402, 402, 221, 222,
	431, 224, 220, 220, 220, 396, 396, 397, 398, 399,
	399, 399, 74, 7, 7, 7, 55, 53, 414, 414,
	54, 421, 421, 335, 335, 235, 235, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 338, 339, 231, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 38, 37, 37, 37,
	271, 271, 36, 432, 432, 204, 204, 44, 45, 46,
	47, 48, 49, 35, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 52, 52, 350, 350, 434, 434, 434,
	50, 51, 334, 334, 334, 42, 41, 40, 39, 39,
	34, 34, 33, 33, 228, 228, 230, 230, 226, 433,
	433, 311, 311, 229, 229, 32, 32, 32, 227, 227,
	203, 225, 225, 225, 8, 8, 6, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 18, 20, 279, 279,
	276, 19, 14, 13, 16, 12, 15, 17, 5, 5,
	5, 5, 9, 9, 10, 100, 100, 142, 142, 409,
	409, 405, 405, 406, 406, 406, 407, 407, 408, 408,
	80, 344, 344, 344, 344, 344, 344, 4, 122, 122,
	123, 123, 343, 343, 343, 343, 343, 343, 343, 427,
	427, 385, 385, 385, 386, 121, 121, 116, 116, 345,
	345, 249, 387, 387, 353, 353, 352, 352, 351, 351,
	119, 119, 120, 120, 103, 103, 89, 89, 358, 358,
	358, 358, 364, 364, 332, 332, 168, 168, 197, 197,
	198, 198, 93, 93, 94, 94, 94, 94, 94, 94,
	393, 393, 395, 395, 394, 118, 118, 114, 114, 115,
	115, 115, 113, 113, 112, 111, 111, 110, 108, 108,
	108, 109, 109, 109, 96, 96, 96, 95, 95, 95,
	95, 95, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 97, 97, 401, 401, 401, 336,
	336, 336, 341, 341, 180, 180, 181, 181, 179, 179,
	98, 98, 99, 99, 99, 99, 178, 178, 177, 101,
	101, 107, 106, 106, 102, 102, 102, 102, 188, 188,
	187, 187, 187, 187, 83, 87, 87, 88, 126, 126,
	186, 185, 185, 185, 125, 125, 124, 124, 117, 117,
	105, 105, 105, 105, 184, 104, 182, 426, 426, 425,
	425, 424, 422, 422, 422, 423, 423, 423, 423, 378,
	378, 378, 378, 378, 213, 213, 213, 219, 219, 212,
	212, 212, 212, 212, 223, 218, 218, 214, 214, 215,
	215, 215, 3, 3, 3, 3, 24, 24, 24, 24,
	24, 24, 30, 134, 135, 29, 127, 127, 128, 128,
	129, 129, 130, 131, 131, 131, 133, 132, 28, 403,
	403, 21, 410, 413, 411, 411, 415, 415, 415, 416,
	416, 416, 417, 417, 22, 412, 418, 418, 418, 280,
	280, 277, 278, 278, 275, 274, 274, 274, 420, 420,
	419, 419, 419, 216, 216, 23, 270, 270, 272, 273,
	273, 264, 264, 264, 264, 27, 268, 268, 269, 269,
	269, 269, 269, 265, 265, 267, 267, 263, 263, 263,
	263, 263, 26, 262, 262, 260, 260, 258, 258, 259,
	259, 257, 257, 257, 261, 261, 25, 25, 25, 91,
	90, 90, 90, 200, 200, 199, 199, 92, 337, 337,
	301, 301, 302, 302, 302, 305, 305, 317, 317, 318,
	318, 316, 316, 323, 323, 322, 322, 321, 321, 320,
	320, 319, 319, 319, 319, 314, 314, 313, 313, 303,
	303, 303, 303, 303, 304, 304, 304, 312, 312, 315,
	315, 159, 159, 160, 160, 160, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 383, 383, 384, 162, 162,
	162, 166, 166, 166, 166, 166, 166, 161, 161, 163,
	163, 143, 143, 141, 141, 136, 136, 137, 137, 138,
	138, 139, 139, 140, 140, 140, 140, 140, 140, 287,
	287, 381, 381, 382, 382, 377, 377, 377, 380, 380,
	380, 380, 380, 379, 379, 144, 195, 195, 195, 217,
	217, 217, 194, 194, 194, 158, 158, 157, 157, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 286, 286, 232, 232, 233, 233,
	175, 174, 174, 174, 174, 174, 172, 173, 171, 171,
	171, 171, 171, 170, 170, 169, 169, 169, 266, 266,
	167, 167, 165, 165, 165, 164, 164, 164, 324, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 241, 241, 246, 246, 392, 392, 391,
	145, 145, 145, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 154, 154, 154, 309, 309, 309, 309, 309,
	310, 310, 310, 307, 307, 308, 308, 250, 251, 251,
	342, 342, 306, 306, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 349, 349, 349, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 404, 404, 404, 388,
	388, 388, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 192, 192, 192, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 252, 252, 253, 253,
	346, 346, 346, 346, 346, 346, 347, 347, 348, 348,
	348, 348, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 239, 189, 189, 189, 254, 247, 247, 248, 248,
	242, 242, 242, 242, 242, 242, 242, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 243, 243, 245,
	245, 256, 256, 256, 255, 255, 255, 255, 255, 255,
	255, 156, 156, 156, 156, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 147, 147, 147, 147,
	151, 151, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 152, 152, 152, 152,
	150, 150, 150, 150, 150, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 81, 82, 82, 149, 196, 196, 325, 325, 328,
	328, 326, 326, 327, 329, 329, 329, 330, 330, 330,
	331, 331, 331, 333, 333, 202, 202, 202, 209, 209,
	201, 201, 210, 210, 211, 211, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 0, 1, 1, 0, 1,
	6, 8, 10, 9, 10, 2, 0, 2, 1, 3,
	3, 3, 1, 3, 5, 0, 2, 3, 1, 3,
	1, 1, 1, 3, 1, 1, 1, 1, 0, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 2, 1,
	2, 3, 4, 3, 3, 1, 0, 1, 1, 0,
	1, 8, 5, 7, 0, 3, 8, 5, 1, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 4, 1, 3, 1, 2, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 2, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 6, 1, 1, 1, 2, 4, 6, 1,
	4, 1, 3, 3, 4, 4, 4, 3, 3, 2,
	4, 4, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 2, 2, 0,
	1, 4, 2, 4, 1, 5, 3, 2, 1, 2,
	2, 4, 4, 5, 2, 1, 3, 4, 4, 1,
	2, 9, 7, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 2, 3, 4, 7, 2, 3,
	3, 4, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 2, 1, 1,
	1, 1, 6, 1, 1, 1, 9, 7, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 3, 2,
	4, 4, 4, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 8, 0, 1, 1, 1, 1,
	5, 5, 0, 1, 1, 3, 3, 3, 6, 7,
	4, 4, 7, 8, 0, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 3,
	1, 4, 6, 4, 4, 4, 3, 6, 1, 1,
	2, 2, 11, 8, 9, 1, 3, 2, 4, 0,
	2, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	4, 2, 1, 5, 4, 4, 2, 5, 0, 4,
	1, 3, 3, 1, 5, 6, 5, 5, 3, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 4, 3, 4, 5, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 1, 12, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 9, 0,
	1, 7, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 0, 2, 7, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 5, 1, 1, 0, 3, 0, 1, 1,
	2, 4, 4, 4, 0, 1, 11, 9, 11, 2,
	2, 4, 5, 1, 3, 0, 3, 5, 0, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 0, 1, 1, 3, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 4, 1, 3, 3, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 1, 7, 7, 7, 7, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 1, 3, 1, 3, 5, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 2, 2, 1,
	5, 6, 4, 1, 1, 2, 0, 1, 1, 2,
	5, 0, 1, 1, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 2, 2, 0, 3,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 3, 5, 2, 2, 2,
	2, 1, 1, 2, 5, 6, 4, 6, 6, 1,
	1, 1, 1, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 5, 0, 1, 3, 0, 1,
	0, 2, 0, 6, 7, 6, 5, 5, 6, 6,
	6, 6, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 6,
	2, 2, 4, 6, 4, 2, 0, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 0, 1, 1, 3,
	3, 3, 3, 3, 2, 1, 1, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 1, 3, 4,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -430, -2, -1, -3, -84, -4, -80, -5, -6,
	-8, -63, -75, -77, -79, -78, -31, -7, -74, -56,
	-57, -59, -65, -70, -71, -72, -73, -85, -81, -82,
	-83, -93, -86, -24, -23, -22, -21, 395, 12, 440,
	-9, -10, -393, -11, 231, -220, -221, -222, -224, -431,
	-32, -33, -34, -39, -40, -41, -42, -50, -51, -52,
	-35, -36, -37, -38, -44, -45, -46, -47, -48, -49,
	-54, -53, -55, 207, -58, 61, -60, -61, -62, -66,
	-67, -68, -69, 326, 332, 385, 394, 521, 522, 46,
	-94, -96, 523, -25, -26, -27, -28, -29, -30, 203,
	14, 473, -12, -15, -13, -16, -14, -19, -20, -18,
	-17, 226, 225, 37, 289, 290, 291, 330, 224, 204,
	13, 135, 136, 138, 139, 30, -95, 67, 205, -97,
	10, 525, 433, 524, -103, 38, -141, -217, 70, -205,
	-208, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 443, 307, 308,
	470, 243, 267, 356, 270, 277, 135, 154, 148, 176,
	168, 143, 247, 282, 248, 77, 138, 426, 87, 406,
	382, 141, 262, 264, 266, 269, 249, 164, 159, 261,
	245, 521, 157, 250, 39, 251, 181, 252, 253, 475,
	402, 306, 408, 274, 380, 158, 403, 265, 405, 183,
	187, 418, 332, 152, 153, 410, 420, 180, 223, 42,
	472, 235, 421, 185, 179, 175, 429, 278, 276, 178,
	151, 174, 246, 50, 189, 188, 190, 376, 377, 378,
	379, 254, 255, 320, 417, 171, 160, 311, 144, 22,
	424, 230, 407, 333, 256, 271, 279, 184, 186, 237,
	242, 474, 384, 241, 275, 422, 156, 234, 263, 229,
	425, 145, 326, 335, 257, 139, 268, 419, 428, 49,
	348, 150, 142, 220, 136, 239, 244, 11, 258, 259,
	260, 281, 280, 272, 172, 236, 177, 162, 149, 173,
	137, 238, 427, 349, 519, 309, 365, 170, 167, 240,
	213, 423, 409, 140, 369, 350, 165, 283, 516, 517,
	518, 321, 305, 284, 285, 163, 227, 401, 286, 288,
	375, 298, 351, 383, 357, 352, 196, 292, -103, -58,
	-10, -9, -95, -96, -141, 211, -225, 23, 380, -64,
	381, 207, 67, -217, -5, -4, -80, -56, -93, -223,
	-217, 289, 289, -223, 211, -217, 241, 364, -335, 216,
	-296, -270, 242, -295, -272, -298, -273, 31, 203, 205,
	204, 238, 14, 330, 212, 12, 10, 331, 224, 24,
	25, 27, 13, 332, 334, 28, 335, 338, 339, 340,
	41, 343, 344, 231, 70, 73, 249, -135, -217, 249,
	-248, -242, 94, 232, -244, -237, -238, -240, -373, -367,
	-236, 67, 119, 120, 127, 95, -239, -324, 35, 97,
	480, 130, 441, -190, -191, -192, -193, -217, -368, -366,
	73, 78, 81, 84, 85, 83, 82, 161, 80, 74,
	131, 132, -96, 70, -388, 488, -206, 509, 508, 46,
	-340, -348, 210, -346, 166, 227, 162, 12, 125, 375,
	163, 485, 505, 443, 489, 512, 482, 483, 477, 478,
	479, 481, 490, 492, 504, -349, 500, 510, 511, 498,
	72, 71, 503, 502, 491, 486, 487, 493, 476, 484,
	494, 495, 501, 506, 507, 314, 87, 315, 316, 433,
	310, 317, 216, 380, 55, 318, 319, 320, 321, 322,
	440, 323, 56, 324, 313, 231, 365, 325, 165, 182,
	445, 444, 446, 437, 434, 432, 435, 436, 438, 439,
	496, 497, 499, -292, -290, -217, -87, -88, 514, -112,
	-113, -183, 19, 6, 7, 8, 9, -428, 382, 474,
	292, 327, -337, 307, 365, 241, -264, -262, 286, 282,
	341, 221, 220, 88, 433, 210, -405, -406, 200, 201,
	202, -395, 466, -394, -217, 316, 26, 211, 327, 412,
	413, 414, 415, 416, -43, -350, -334, 409, 408, -229,
	407, 400, 411, 402, 203, 467, -202, 351, 383, 237,
	430, 431, 328, 384, 418, 419, 403, 87, 169, 166,
	-337, 307, 365, -405, 140, 137, -283, 140, 93, 145,
	144, -283, 241, 364, 40, -289, 375, -288, -290, 418,
	419, 429, 71, 72, 417, -202, 87, -113, -183, -112,
	-94, -96, -83, -393, 307, 365, 241, 212, 211, 213,
	433, 289, 327, -336, -401, 31, -341, 197, 198, 199,
	32, 33, -1, -218, -215, -208, 70, 71, 72, 73,
	-119, 233, -141, 133, -119, -113, -112, -113, -141, -194,
	-217, 382, 103, -64, -64, 381, -396, -397, -398, -400,
	207, 381, 380, 133, 15, -223, -223, 65, -141, -272,
	241, -296, -270, 35, 64, 134, 214, 134, 64, 67,
	328, 307, 365, 329, 433, 211, 341, 213, 241, 342,
	307, 365, 211, 213, 433, 241, 307, 211, 213, 365,
	241, 342, 400, 401, 213, 26, 333, 336, 337, 401,
	-354, 429, -354, 134, 93, 90, 91, 92, -242, 110,
	-255, 103, 104, 105, 106, 107, 108, 109, 116, 115,
	126, 119, 120, 121, 122, 123, 124, 125, 117, 118,
	113, 94, 111, 112, 96, -96, -242, -248, 46, -240,
	-240, -240, -240, -324, -246, -242, 67, 67, 67, 133,
	73, -242, 67, 67, 67, 67, 67, 67, 67, 67,
	-347, 67, 67, -252, -253, 67, 67, 73, 73, 67,
	67, 67, 73, -253, -253, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -147, -151, -148, -150, -149, -153, -152,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 227, 162, 163, 164,
	165, 183, 148, 168, 471, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -113, 134, 67, -89, 38, -115, 21, -97, -96,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 78,
	-134, -217, -127, -217, -403, 211, 466, -260, 216, -260,
	-260, 212, -260, 211, 211, -407, 147, 134, -395, -118,
	67, -228, 111, 23, 239, 239, 276, -432, -433, 15,
	113, -226, -433, -226, -228, -434, 212, 410, 42, 240,
	239, -114, -115, -114, 404, 401, -311, 405, 406, -229,
	-228, -228, -229, 211, 213, 433, -432, 239, -432, 30,
	30, -403, -335, -335, -408, 215, 422, 473, 143, 144,
	145, -272, 241, 241, 134, 103, 23, -291, 103, 114,
	-290, -290, -290, -291, -291, -161, 40, -216, 130, -217,
	73, -161, 40, -114, -97, -96, 68, 68, 68, -335,
	-335, -335, -335, -335, -335, -335, -223, -127, -98, -99,
	121, -242, -217, -98, 38, 401, 38, -343, -122, -93,
	308, 67, 67, -217, -344, 46, -93, 67, 30, -114,
	-89, -115, 133, 78, 73, -64, 68, 134, -399, 84,
	85, -402, 180, 172, -217, -76, 73, -3, -4, -5,
	-6, -31, -56, -93, -369, -367, 67, 31, 374, 64,
	15, -297, 211, 433, 327, 237, 213, 307, -295, -279,
	-276, -274, -216, -272, -275, -274, -300, -194, 401, -90,
	386, 288, -90, -242, -242, -242, -242, -242, 83, 94,
	305, 84, 85, -237, -256, 31, 284, 285, -238, -238,
	-238, -238, -238, -238, -238, -238, -238, -238, -238, -238,
	-245, -254, -324, 67, 113, 111, 112, 96, -240, -238,
	-238, 68, 134, -392, -391, 98, -242, -242, -242, -217,
	-389, -390, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 318, 313, 319, 317, 310, 325, 320,
	321, 165, 464, 465, 458, 459, 460, 461, 462, 463,
	-247, -248, -247, -242, -389, -247, -189, 32, 31, -242,
	-404, 303, 302, 304, -116, -217, -247, 68, 68, 68,
	78, -248, -247, -238, -247, -390, -189, -189, -248, -248,
	-189, -189, -189, -189, 121, -189, -189, -189, -189, -189,
	-189, -189, -189, -290, 40, -331, 349, 348, -325, -327,
	67, -326, 67, -326, -325, -325, 67, 67, -328, 67,
	-328, -328, -325, -329, 67, -329, -330, 67, -329, -217,
	-114, -88, -352, -351, -242, 40, 515, -89, -242, -111,
	-110, -242, -429, 73, 34, 67, 133, 213, -260, -410,
	-217, 94, -280, -277, -274, -270, -215, -217, -260, -260,
	-408, -394, 34, -117, -217, -179, 16, -240, -274, 241,
	-432, -228, -204, -203, -217, -230, -433, -225, -230, -179,
	-433, -228, -228, -230, -226, 401, -179, -179, -311, -227,
	-217, -227, -260, -204, -204, 213, -410, -280, -106, -101,
	-105, -102, -107, -182, -184, -104, 67, -141, -96, -217,
	423, 424, 141, 144, 143, 31, 374, -294, 374, 31,
	-270, -288, -284, 73, 375, -275, -293, 64, 130, -351,
	-291, -291, -291, -293, -293, 129, -89, -410, -279, -270,
	-217, -143, -141, -143, -218, 67, -178, 134, -177, 15,
	-212, -217, 34, 73, 133, -178, 73, -143, 73, -427,
	64, 46, 30, 67, -121, 68, -116, -120, -217, -345,
	-249, -387, 514, -121, 68, -385, -386, -116, -89, -89,
	-210, -211, -201, -207, -214, -215, -208, 208, 31, 93,
	34, 36, 314, 346, 96, 130, 20, 97, 166, 129,
	316, 441, 315, 203, 59, 444, 446, 445, 434, 432,
	367, 371, 373, 370, 433, 400, 40, 14, 37, 225,
	32, 33, 123, 205, 100, 101, 228, 35, 226, 85,
	44, 23, 62, 15, 17, 18, 317, 366, 216, 215,
	113, 386, 212, 57, 12, 132, 38, 110, 368, 53,
	89, 45, 55, 111, 21, 435, 436, 41, 385, 394,
	469, 232, 125, 318, 319, 60, 94, 374, 83, 43,
	64, 90, 19, 58, 112, 206, 440, 56, 372, 322,
	324, 334, 466, 323, 210, 411, 10, 313, 442, 30,
	224, 54, 211, 99, 214, 84, 231, 6, 88, 13,
	61, 65, 437, 438, 439, 46, 98, 16, 325, 473,
	387, 388, 389, 390, 391, 392, 393, 191, 192, 193,
	194, 195, 273, 219, 217, 221, 222, 514, 515, 197,
	198, 302, 304, 169, 200, 201, 202, 233, 147, 7,
	353, 354, 355, 358, 359, 360, 361, 362, 363, 364,
	522, 395, 396, 397, 398, 399, 412, 413, 414, 415,
	416, 209, 23, -64, -397, 133, 134, -117, -297, -278,
	-275, -299, 121, 70, -285, 134, 473, 526, 71, 214,
	-420, -419, 366, 68, 134, -355, 215, 440, 73, 527,
	196, -355, 83, 305, 84, 85, -324, -248, -245, -240,
	-238, -238, -243, 228, 93, -242, -241, -391, 100, -242,
	34, 68, 134, 65, 133, 68, 68, 15, 15, 68,
	-242, 68, 15, 15, -242, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -248, -242, 68, 68, -242,
	-242, -242, -248, 68, -242, -242, -242, -242, -242, -242,
	-242, -242, -242, -333, 350, 78, 78, -196, 73, -196,
	78, 78, 78, 134, 68, 73, 134, 22, 134, -108,
	36, 37, -135, -128, -129, -130, -131, -147, -194, 167,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 227, 162, 163, 164, 165, 183, 148, 168, 149,
	150, 151, 152, 153, 154, 157, 158, 159, 156, -217,
	-260, -141, -413, 353, 35, -421, 134, 40, -419, -263,
	65, -258, -259, -257, -261, 40, -141, -141, 15, -100,
	-142, -217, 67, 68, 134, -242, -271, 65, -273, -204,
	-179, -218, -141, -217, -179, -179, -228, -230, -230, -226,
	133, -203, -335, -414, 353, -421, 30, -185, -186, -187,
	-188, 53, 57, 59, 54, 55, 56, 60, 30, 134,
	-213, -219, 34, -214, 73, -215, -208, -213, -96, -101,
	-106, -213, 67, 142, 145, 145, 144, 214, 67, 103,
	-293, -293, -293, 40, -216, 64, 134, -128, -179, -99,
	-101, -217, 73, -217, 121, -179, -168, 517, 38, -358,
	405, 39, -345, -385, -123, -410, 68, 134, -122, 308,
	68, 134, 134, 67, 68, 46, 134, 103, 133, 382,
	-217, -367, 68, -299, 134, 214, 133, 133, -276, 332,
	-216, -278, 20, 473, -194, 38, -200, -199, 73, 527,
	38, 68, -243, 93, -240, -237, 68, 101, -242, 99,
	-145, -147, 348, 349, -146, -152, 130, 166, 227, 165,
	164, 162, 348, 349, -161, -217, -242, -242, 68, -242,
	-242, 15, -217, -161, -238, -242, -342, 442, 68, -306,
	396, -306, 68, 68, 68, 68, -306, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 134, 68,
	68, 68, 134, 68, 134, -351, -358, -242, -242, -110,
	-109, 43, 340, 68, 134, -147, -141, 67, -416, 407,
	355, -209, 103, -235, -234, 309, 41, -338, 375, 361,
	362, -277, 241, 64, 297, 298, 299, 300, -257, -202,
	129, 252, 67, 67, -141, -100, -217, 15, 134, -409,
	133, -1, -217, -270, -228, -179, -433, -179, -228, -228,
	-230, -217, -141, -416, -209, -235, -282, -281, -194, -105,
	-105, -105, -105, 53, 53, 53, 58, 53, 58, 53,
	-187, -282, -107, -118, -219, 68, -426, -425, -424, -422,
	61, 215, 62, -247, 145, -278, -231, 73, -284, -141,
	-141, 68, -181, 17, 133, -181, 78, 73, -364, 392,
	387, 389, 89, 68, 134, -122, -116, 46, 67, -217,
	-249, -353, -352, 46, -93, -345, -386, -351, -210, -207,
	-215, -208, 78, 15, -275, -270, 121, 121, 70, 333,
	-285, 73, 354, 73, 211, 528, 134, 103, -200, 211,
	-237, -242, 68, -154, 153, 152, -154, 68, -325, -326,
	-325, -328, -325, -154, -154, 68, 68, 23, 68, 68,
	68, -242, 68, 68, 134, 68, 73, -306, 67, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, 73, 78, 78, -364, 44, 45, 73, 209, -130,
	40, -118, -136, -137, -138, -144, -139, -194, -233, -140,
	219, 217, 221, -382, 88, 222, 273, 89, 212, -417,
	77, -411, 73, -217, -418, 77, 356, 132, 311, 40,
	357, 358, 372, 306, 78, 78, 363, -412, 70, -141,
	-209, -209, -209, -136, -136, -119, 65, 133, -101, -142,
	-217, 121, 68, -179, -217, -179, -179, -228, -118, -417,
	-411, -418, -179, 134, 103, -125, -124, 64, 65, -126,
	64, -124, 53, 53, -179, -424, -423, 23, -382, -382,
	-382, 68, 68, -180, 18, 20, 121, -180, -168, -332,
	516, -362, 387, 20, 20, 13, -93, -410, 46, -93,
	-345, -123, 68, -345, -270, -285, 375, -141, -199, 73,
	528, -141, -242, 68, -242, -306, -251, -250, 233, 68,
	68, -332, -132, -147, -236, 34, 68, 134, -147, -140,
	-217, 89, -381, -382, -260, -381, 89, 67, 73, -415,
	366, 73, 73, 78, 40, 78, 132, 359, -339, 67,
	-161, -163, -216, 130, 73, 68, 68, -213, -101, -217,
	-179, -409, 133, -179, -179, 34, -415, -113, -281, -351,
	-242, 67, -242, 67, 53, 19, 17, -242, -248, -168,
	73, 20, 73, -360, 73, -385, -345, 68, -122, -92,
	-356, -311, 68, 68, -113, 20, -168, 472, -93, -159,
	-160, -176, 346, 243, -261, 247, 77, 248, 382, 249,
	212, 251, 252, 253, 223, 254, 255, 256, 375, 257,
	258, 259, 260, 329, 6, 293, -138, -158, -157, -155,
	83, 94, 40, 346, -156, 77, 129, 266, 244, 267,
	-175, -232, 64, 352, 217, 88, 89, 334, -233, -377,
	-379, -217, -379, -217, -377, -377, -260, -242, 20, 473,
	310, 40, 78, 40, 360, -265, -267, -194, 67, -91,
	-90, -159, -179, -179, -93, -114, -117, -378, -217, 217,
	20, 20, -197, 518, 73, 389, -92, -363, 392, -359,
	-357, 387, 388, 389, 390, -308, -307, -310, 393, 275,
	399, -248, -197, -133, -217, -301, 233, 134, -176, -209,
	-209, -202, 129, -209, -209, -209, -209, 250, 250, -209,
	-209, -209, -209, -209, -209, -209, -209, -209, -209, -209,
	-209, -209, -209, 67, -155, 83, -238, 73, -163, -164,
	40, 265, 261, -165, 40, 245, 246, -167, 67, 273,
	13, 89, 89, -141, 67, 65, 283, 67, 67, 67,
	-379, 68, 73, 354, 73, 310, 68, 134, -325, -242,
	-92, -301, -113, 68, 68, 134, 67, 20, -365, 215,
	-361, 391, -357, 20, 389, 20, 20, 68, -309, 96,
	359, 363, -242, 34, -302, 282, 20, -176, 78, 78,
	-209, -209, 78, 73, 73, 73, -209, -209, 78, 73,
	-219, 78, 78, 78, 78, 40, 73, -166, 40, 261,
	265, 262, 263, 264, 78, 40, 78, 40, 78, 40,
	-217, 67, -383, -384, 73, 78, 67, -346, -266, 67,
	-265, -380, 297, 298, 299, 301, 300, -380, -265, -265,
	-265, 67, -287, -286, 274, 94, 375, -268, -267, -108,
	68, -302, -114, -217, 217, -198, -217, -360, -372, 67,
	78, -362, 20, -360, 20, -360, -360, -309, 514, 397,
	398, 397, 398, 73, 20, -303, 275, 276, -304, -315,
	278, -161, -161, 73, 73, -162, 244, -143, 68, 134,
	103, 68, -242, -252, -170, -169, 469, -265, 68, 68,
	68, 68, -265, 274, -269, 223, 77, 473, 295, 296,
	-108, 68, 134, -376, 30, 68, -371, -370, -195, -366,
	-217, 392, 393, 73, -360, 93, -194, 67, -313, 279,
	67, -311, 67, -311, 89, 298, 245, 246, 68, -384,
	73, 68, -174, -172, -173, 64, 403, 271, 272, 68,
	-268, -268, -268, -268, 68, -209, 73, 294, -217, -375,
	-374, -373, 68, 134, 133, -309, -300, -305, 280, 78,
	-238, 67, -238, 67, -312, 277, 67, -286, -173, 64,
	-172, 64, 14, 13, -175, 78, -215, 134, 103, -370,
	-217, 68, -317, 67, 20, 68, -300, 68, -300, 67,
	103, -238, -171, 268, 269, 30, 144, -171, -374, 40,
	-242, 133, -318, -316, 233, -304, 68, 68, 68, -300,
	78, 68, 83, 40, 270, -217, 68, 134, 70, -314,
	281, 68, -316, -319, 46, 78, -323, -320, 67, -176,
	235, 113, -323, -176, -322, -321, 280, 236, 67, 68,
	134, 70, 232, 67, -248, -321, -320, -248, 68, 68,
}

var yyDef = [...]int{
	33, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 662, 663, 664, 665, 0, 0, 0,
	428, 429, 0, 406, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 327, 328, 329, 330, 331, 332, 333, 334, 335,
	283, 284, 285, 0, 229, 225, 204, 205, 206, 165,
	166, 167, 168, 293, 0, 0, 0, 0, 0, 0,
	512, -2, 35, 666, 667, 668, 669, 670, 671, -2,
	441, 0, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 272, 273, 274, 268, 269, 271, 270, -2, 778,
	441, 218, 0, 209, 209, 0, 532, 0, 0, 547,
	569, 33, 0, 0, 490, 0, 495, 873, 909, 910,
	911, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 490, 230,
	430, 431, 532, 532, 404, 0, 254, 0, 1537, 258,
	0, 0, 0, 401, 249, 250, 251, 252, 253, 0,
	654, 0, 0, 245, 0, 224, 1596, 0, 0, 0,
	0, 0, 0, 109, 726, 111, 728, 115, 122, 0,
	0, 127, 128, 131, 132, 133, 134, 135, 0, 139,
	0, 141, 144, 0, 146, 147, 0, 150, 151, 152,
	0, 162, 163, 164, 729, 730, -2, 45, 674, 89,
	1281, 1178, 0, 1185, 1186, 1197, 1206, 981, 982, 983,
	984, 0, 0, 0, 0, 0, 991, 992, 0, 1005,
	1685, 0, 0, 999, 1000, 1001, 1002, 52, 64, 65,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	0, 1151, 968, 909, 0, 1693, 0, 1713, 1712, 0,
	0, 1136, 0, 1126, 0, -2, -2, 0, 0, 1663,
	-2, 1690, 1709, 1717, 1694, 1716, 1687, 1688, 1682, 1683,
	1684, 1686, 1695, 1697, 1708, 0, 1704, 1714, 1715, 0,
	66, 67, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1142, -2, 1144, 1145, 1147,
	1148, 1149, 1150, -2, 1153, 1154, 1155, -2, -2, 1158,
	1159, 1160, 1161, 1162, 1163, 1166, -2, 1168, -2, 1170,
	1138, 1139, 1140, 1141, 1130, 1131, 1132, 1133, 1134, 1135,
	-2, -2, -2, 0, 202, 200, 532, 605, 0, -2,
	0, 0, 0, 552, 555, 558, 561, 0, 36, 37,
	0, 0, 689, 755, 755, 755, 0, 755, 0, 0,
	779, 732, 733, 734, 753, 754, 446, 442, 443, 444,
	445, 520, 0, 522, 525, 384, 337, 0, 0, 0,
	349, 343, 0, 0, 384, 0, 0, 527, 527, 0,
	393, 384, 384, -2, 0, 354, 355, 356, 343, 0,
	343, 360, 361, 362, 373, 374, 394, 1305, 0, 0,
	689, 293, 293, 448, 219, 220, 208, 210, 0, 214,
	0, 207, 1596, 0, 0, 176, 1663, 181, 0, 1544,
	1610, 1559, 0, 0, 1577, 0, -2, 527, 0, 533,
	0, 532, 0, 0, 293, 293, 293, 293, 293, 293,
	293, 0, 0, 0, 0, 570, 571, 566, 567, 568,
	572, 573, 3, 0, 655, 656, 659, 660, 661, 0,
	458, 0, 494, 0, 0, 527, -2, 0, 405, 255,
	912, 0, 0, 259, 260, 0, 0, 275, 0, 278,
	263, 264, 265, 0, 0, 247, 248, 0, 0, 226,
	0, 0, 0, 294, 0, 0, 0, 0, 0, 0,
	119, 116, 123, 126, 136, 143, 0, 155, 157, 160,
	117, 124, 129, 130, 137, 158, 118, 120, 121, 125,
	159, 161, 138, 142, 156, 140, 145, 148, 149, 154,
	0, 90, 0, 0, 0, 0, 0, 0, 1184, 0,
	0, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1178, 0, 0, 987,
	988, 989, 990, 993, 0, 1006, 0, 0, 0, 0,
	1235, 0, 1176, 1176, 0, 1176, 1172, 0, 0, 1176,
	1115, 0, 0, 1117, 1127, 0, 0, 1120, 1121, 1176,
	0, 1176, 1125, 1111, 1112, 0, 1172, 1172, 0, 0,
	1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
	1172, 1172, 0, 1282, 1300, 1237, 1238, 1239, 1287, 1241,
	1291, 1291, 1287, 1287, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 0, 0, 1280, 1260, 1289, 1289, 1289,
	1287, 1284, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1294, 1294, 1297, 1294,
	0, 527, 0, 0, 515, 0, 496, 0, 549, 551,
	0, 553, 554, 556, 557, 559, 560, 562, 563, 38,
	0, 673, 0, 676, 0, 755, 690, 0, 0, 0,
	0, 0, 0, 755, 755, 448, 447, 0, 521, 0,
	0, 578, 0, 0, 343, 384, 348, 345, 344, 389,
	390, 386, 0, 386, 578, 0, 367, 368, 369, 384,
	384, 375, 528, 376, 377, 386, 0, 391, 392, 0,
	578, 578, 0, 0, 0, 755, 345, 358, 345, 1306,
	1307, 0, 0, 0, 0, 449, 0, 0, 212, 0,
	217, 169, 0, 0, 0, 0, 0, 0, 198, 199,
	0, 0, 0, 0, 0, 189, 192, 867, 868, 723,
	724, 193, 194, 496, 548, 550, 544, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 426, 0, 586, 580,
	582, 649, 52, 586, 0, 0, 0, 469, 0, 463,
	0, 0, 0, 874, 450, 482, 452, 0, 471, 496,
	518, 496, 0, 256, 0, 261, 0, 0, 277, 279,
	280, 281, 266, 267, 402, 243, 244, 236, 237, 238,
	239, 240, 241, 242, 246, 62, 0, 227, 228, 0,
	0, 0, 103, 104, 105, 106, 107, 108, 110, 94,
	418, 420, 715, 727, 0, 718, 0, 113, 153, 86,
	0, 0, 86, 1179, 1180, 1181, 1182, 1183, 1187, 0,
	1189, 1191, 1193, 1195, 0, 1211, -2, -2, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	1198, 1209, 1210, 0, 0, 0, 0, 0, 1207, 1202,
	0, 985, 0, 1003, 1007, 0, 0, 0, 0, 53,
	1171, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	0, 1177, 0, 1178, 0, 0, 0, 1173, 1174, 0,
	0, 1076, 1077, 1078, 0, 477, 0, 1137, 1116, 1128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 1303, 1301, 1302, 1240, 1288,
	0, 1265, 0, 1266, 1267, 1268, 0, 0, 1261, 0,
	1262, 1263, 1264, 1256, 0, 1257, 1258, 0, 1259, 201,
	604, 606, 0, 486, 488, 489, 0, 516, 529, 534,
	535, 538, 34, 39, 0, 678, 0, 755, 0, 0,
	692, 0, 291, 709, 0, 725, 747, -2, 0, 0,
	0, 523, 0, 0, 618, 336, 0, 385, 340, 1596,
	345, 578, 350, 346, 400, 351, 0, 388, 352, 353,
	0, 578, 578, 384, 386, 386, 380, 381, 0, 395,
	398, 396, 0, 357, 359, 293, 288, 291, 591, 0,
	592, 593, 589, 620, 644, 644, 0, 644, 624, 873,
	221, 222, 0, 0, 216, 170, 171, 0, 173, 174,
	175, 182, 177, 179, 0, 0, 183, 195, 196, 197,
	0, 0, 0, 187, 188, 0, 514, 416, 417, 421,
	0, 423, 871, 424, 425, 678, 578, 0, 587, 0,
	583, 650, 0, 652, 0, 578, 506, 0, 498, 457,
	0, 482, 471, 0, 0, 458, 475, 0, 492, 451,
	479, 0, 483, 0, 0, 456, 472, 0, 517, 519,
	913, 0, 1312, -2, 1314, -2, -2, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 0, 262, 276, 0, 0, 0, 0, 97,
	712, 0, 98, 102, 92, 0, 0, 0, 717, 0,
	714, 719, 0, 112, 0, 0, 87, 88, 770, 775,
	0, 0, 1188, 1190, 1192, 1194, 1196, 0, 1199, 1207,
	1203, 0, 1200, 0, 0, 1179, 0, 1008, 0, 0,
	0, 996, 0, 0, 0, 1064, 1065, 0, 0, 1069,
	0, 1071, 0, 0, 0, 1075, 0, 1114, 1129, 1118,
	0, 1122, 0, 1124, 0, 1040, 0, 1042, 1042, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 1236, 1304, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 607, 498, 0, 0, 0, 541,
	539, 540, 0, 0, 679, 680, 682, 683, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1529, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 677,
	0, 0, 699, 1308, 756, 295, 0, 0, 711, 0,
	0, 752, -2, 759, 0, 765, 0, 0, 0, 0,
	435, 439, 33, 526, 0, 579, 338, 0, 339, 384,
	347, 387, 578, 873, 370, 371, 578, 384, 384, 386,
	0, 397, 0, 699, 1308, 295, 0, 0, 0, 0,
	0, 611, 0, 0, 610, 0, 0, 0, 0, 0,
	525, 645, 0, 647, 648, 657, 658, 622, -2, 0,
	591, 627, 1176, 223, 211, 213, 0, 0, 0, 0,
	184, 185, 186, 190, 191, 0, 0, 0, 576, 581,
	588, 651, 653, 53, 584, 576, 40, 0, 0, 502,
	0, 0, 462, 468, 0, 460, 458, 0, 0, 0,
	491, 0, 482, 484, 0, 482, 0, 0, 0, 0,
	403, 63, 282, 0, 0, 0, 0, 0, 419, 0,
	716, 94, 0, 0, 114, 0, 0, 773, 0, 775,
	0, 1175, 1201, 0, 1208, 1204, 986, 994, 1004, 0,
	0, 1010, 1022, 1022, 0, 1013, 1287, 1291, 1016, 1287,
	1289, 1287, 1022, 1022, 0, 54, 0, 0, 1070, 0,
	0, 0, 478, 0, 0, 0, 0, 0, 1042, 1046,
	0, 1047, 1042, 1042, 1042, 1042, 1052, 1042, 1042, 1042,
	1042, 1042, 1042, 1042, 1042, 1293, 1292, 1278, 0, 1279,
	1290, 1295, 0, 1298, 0, 487, 502, 530, 531, 536,
	537, 0, 0, 0, 0, 684, 525, 875, 702, 700,
	701, 0, 1309, 706, 296, 297, 298, 299, 0, 0,
	0, 710, 0, 0, 748, 749, 750, 751, 760, 1308,
	1308, 1308, 875, 875, 490, 0, -2, 0, 0, 437,
	0, 0, 619, 341, 578, 363, 0, 378, 578, 578,
	384, 399, 525, 702, 0, 706, 578, 233, 0, 614,
	608, 0, 597, 612, 613, 600, 0, 602, 0, 598,
	599, 578, 590, 621, 646, 623, 626, 628, 629, 635,
	0, 0, 0, 0, 215, 172, 0, 315, 178, 422,
	872, 427, 574, 0, 0, 574, 507, 506, 504, 75,
	0, 0, 0, 459, 0, 0, 476, 482, 0, 493,
	480, 0, 485, 482, 455, 454, 473, 474, 914, 1313,
	1310, 1311, 257, 0, 713, 94, 99, 100, 101, 95,
	93, 720, 0, 722, 0, 771, 775, 0, 0, 0,
	1205, 1009, 995, 1011, 1023, 1024, 1012, 997, 1014, 1015,
	1017, 1018, 1019, 1020, 1021, 998, 1066, 0, 1068, 1072,
	1073, 0, 1119, 1123, 0, 1042, 1041, 1045, 1038, 1048,
	1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1286, 0, 0, 504, 542, 543, 672, 0, 681,
	0, 0, 0, 876, 877, 879, 880, 0, 0, 882,
	938, 0, 891, 755, 891, 0, 0, 893, 894, 691,
	0, 0, 694, 695, 704, 0, 0, 0, 301, 302,
	0, 0, 0, 314, 310, 311, 312, 292, 705, 0,
	0, 0, 0, 0, 0, 644, 0, 0, 578, 436,
	439, 440, 524, 342, 578, 382, 379, 578, 0, 287,
	0, 290, 532, 0, 0, 594, 615, 0, 0, 595,
	0, 596, 601, 603, 232, 630, 0, 0, 632, 633,
	634, 625, 180, 564, 0, 0, 585, 565, 41, 506,
	0, 503, 0, 0, 0, 471, 464, 461, 482, 467,
	466, 0, 481, 453, 96, 91, 721, 458, 774, 776,
	772, 77, 0, 1074, 0, 1044, 532, 1039, 0, 1296,
	1299, 506, 0, 687, 685, 0, -2, 0, -2, 881,
	939, 903, 903, 892, 903, 903, 755, 0, 703, 693,
	0, 707, 708, 0, 303, 304, 0, 307, 313, 0,
	761, 762, 869, 870, 763, 0, -2, 578, 578, -2,
	433, 438, 0, 364, 383, 0, 289, 527, 234, 235,
	616, 0, 609, 639, 636, 0, 0, 575, 577, 508,
	505, 0, 499, 501, 85, 470, 465, 459, 77, 43,
	71, 0, 1067, 1113, 1035, 0, 508, 0, 688, 780,
	-2, 823, 1308, 1308, 0, 1308, 1308, 1308, 1308, 0,
	0, 1308, 1308, 1308, 1308, 1308, 1308, 1308, 1308, 1308,
	1308, 1308, 1308, 1308, 1308, 0, 878, 905, -2, 917,
	919, 0, 0, 922, 923, 0, 0, 0, 0, 960,
	929, 0, 0, 933, 0, 1223, 1224, 0, 937, 0,
	895, 904, 0, 904, 0, 0, 903, 0, 0, 0,
	300, 305, 0, 308, 309, 0, 743, 1287, 0, 767,
	77, 780, 532, 434, 286, 231, 0, 0, 640, 642,
	637, 638, 42, 0, 76, 0, 44, 68, 73, 78,
	79, 0, 0, 0, 0, 0, 1036, 0, 1030, 1031,
	1032, 1037, 497, 0, 686, 782, 0, 764, 825, 0,
	0, 1308, 1308, 0, 0, 0, 0, 1308, 1308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 920, 921, 924, 925, 926,
	965, 966, 967, 927, 962, 963, 964, 928, 0, 0,
	0, 1221, 1222, 958, 0, 0, 0, 0, 0, 0,
	0, 889, 696, 0, 698, 306, 736, 0, 538, 0,
	769, 782, 527, 617, 631, 0, 0, 0, 55, 0,
	75, 0, 80, 0, 0, 0, 0, 1043, 1033, 0,
	0, 0, 0, 0, 766, 0, 819, 824, 826, 827,
	0, 0, 830, 831, 832, 833, 0, 0, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 861, 862,
	863, 864, 865, 866, 846, 847, 848, 849, 850, 851,
	858, 0, 0, 855, 0, 0, 0, 1126, 953, 0,
	0, 896, 898, 899, 900, 901, 902, 897, 0, 0,
	0, 0, 888, 890, 934, 0, 697, 735, 744, 745,
	538, 768, 432, 641, 643, 0, 510, 500, 46, 0,
	0, 72, 0, 81, 0, 83, 84, 0, 1025, 1026,
	1028, 1027, 1029, 675, 0, 807, 0, 0, 813, 0,
	820, 828, 829, 834, 835, 852, 0, 0, 854, 0,
	0, 961, 0, 932, 941, 954, 0, 0, 736, 736,
	736, 736, 0, 935, 737, 1308, 0, 0, 741, 742,
	746, 509, 0, 777, 0, 56, 0, 58, 60, 61,
	906, 69, 70, 74, 82, 0, 783, 0, 785, 0,
	0, 0, 0, 0, 817, 0, 859, 860, 853, 856,
	857, 930, 940, 942, 943, 0, 955, 956, 957, 959,
	883, 884, 885, 886, 0, 0, 739, 0, 511, 47,
	48, 0, 57, 0, 0, 1034, 0, 787, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 931, 944, 0,
	945, 0, 0, 0, 887, 738, 740, 0, 0, 59,
	907, 784, 781, 0, 819, 809, 0, 811, 0, 0,
	0, 0, 946, 948, 949, 0, 0, 947, 49, 50,
	51, 0, 0, 789, 0, 805, 810, 812, 814, 0,
	818, 816, 950, 952, 951, 908, 788, 0, 801, 786,
	0, 815, 790, -2, 0, 806, 791, -2, 0, 799,
	0, 0, 792, 800, 0, 795, 0, 0, 0, 794,
	0, -2, 802, 0, 0, 796, -2, 0, 804, 803,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 525,
	104, 103, 105, 3, 526, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 527, 115, 528, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:621
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:627
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:662
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:667
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:673
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:693
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:699
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:706
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:714
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:720
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:729
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				OutFile:      yyDollar[5].str,
				MaxFileSize:  int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:738
		{
			yyLOCAL = &tree.MoDump{
				DumpDatabase: true,
				Database:     tree.Identifier(yyDollar[3].str),
				Tables:       yyDollar[5].tableNamesUnion(),
				OutFile:      yyDollar[7].str,
				MaxFileSize:  int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:748
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				DumpDatabase: false,
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:769
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:781
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
				Accounts:          yyDollar[9].identifierListUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[10].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:794
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:811
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:815
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:821
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:828
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:837
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:841
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:845
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:864
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:873
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:884
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:888
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:894
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:898
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:904
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:908
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:914
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:938
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:961
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:965
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:982
		{
			yyVAL.str = ""
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:986
		{
			yyVAL.str = yyDollar[3].str
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:991
		{
			yyVAL.str = "\n"
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:995
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1004
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1028
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1032
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1038
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1044
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1062
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1079
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1102
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1110
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1125
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1138
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1149
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1176
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1189
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1202
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1208
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1214
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1221
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1229
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1238
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1242
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1246
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1250
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1254
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1258
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1265
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1269
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1275
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1282
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1291
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1295
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1381
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1385
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1389
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1393
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1397
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1401
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1405
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1409
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1413
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1417
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1421
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1425
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1429
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1433
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1437
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1441
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1445
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1449
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1453
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1457
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1461
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1465
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1469
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1473
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1477
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1481
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1485
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1489
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1493
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1497
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1523
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1532
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1562
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1570
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1576
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1586
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1593
		{
			yyVAL.str = yyDollar[3].str
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1599
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1603
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1609
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1626
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1634
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1642
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1665
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1688
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1695
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1702
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1710
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1717
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1724
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1747
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1751
		{
			yyVAL.str = yyDollar[1].str
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1758
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1764
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1768
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1779
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1785
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1790
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1794
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1798
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1806
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1810
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1814
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1818
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1822
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1828
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1832
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1836
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1869
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1911
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1926
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1932
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1944
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1954
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1976
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1992
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2004
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2008
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2012
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2020
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2028
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2038
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2079
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2083
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2089
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2095
		{
			yyVAL.str = yyDollar[1].str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2100
		{
			yyVAL.str = "true"
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2101
		{
			yyVAL.str = "false"
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2107
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2119
		{
			yyLOCAL = &tree.AlterView{
				Name:      yyDollar[6].tableNameUnion(),
				ColNames:  yyDollar[7].identifierListUnion(),
				AsSource:  yyDollar[9].selectUnion(),
				Temporary: yyDollar[2].boolValUnion(),
				IfExists:  yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2142
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2148
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2159
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2179
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2183
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2192
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2212
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2216
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2220
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2224
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2228
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2236
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2244
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2248
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2252
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2256
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2274
		{
			yyVAL.item = nil
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2279
		{
			yyVAL.item = nil
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2319
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].str)}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2336
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2347
		{
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2351
		{
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.ShowFunctionStatus{
				Like:  yyDollar[4].comparisionExprUnion(),
				Where: yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2383
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2389
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2404
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2416
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2420
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2424
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2428
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].str), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].str), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2459
		{
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2461
		{
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2489
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2493
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2497
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2515
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2547
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2553
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2565
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2582
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2587
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2591
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2597
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2620
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2625
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2629
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2635
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2639
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2648
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2652
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2656
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2662
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2666
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2686
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2695
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2704
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2708
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2714
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2723
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2732
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2742
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2748
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2766
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2777
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2782
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2789
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2805
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2818
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2829
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2833
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2839
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2844
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2851
		{
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2853
		{
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2856
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2865
		{
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2869
		{
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2883
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2896
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2904
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2918
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2938
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2951
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2957
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2961
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2967
		{
			vc := tree.NewValuesClause(yyDollar[3].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2975
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2988
		{
			vc := tree.NewValuesClause(yyDollar[6].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2997
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Accounts: yyDollar[3].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.Insert{
				Columns:  yyDollar[2].identifierListUnion(),
				Accounts: yyDollar[4].identifierListUnion(),
				Rows:     yyDollar[5].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3013
		{
			if yyDollar[3].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[3].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns:  identList,
				Accounts: yyDollar[1].identifierListUnion(),
				Rows:     tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:3037
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3060
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3064
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3070
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3079
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3083
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3093
		{
			yyVAL.str = yyDollar[3].str
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3099
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3103
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3109
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3114
		{
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3125
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3129
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3145
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3151
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3155
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3161
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3165
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3194
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3201
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:3219
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3238
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:3244
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3251
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3255
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3268
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3272
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3277
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3281
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3288
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3293
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3348
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3352
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3358
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3370
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3379
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3389
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3402
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3408
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3414
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3418
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3429
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3433
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3437
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3442
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3446
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3450
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3464
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3478
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3492
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3502
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3549
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3557
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3573
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3597
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3613
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3634
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3652
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3673
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3682
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3697
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3701
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3707
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3711
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3715
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3719
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3724
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3732
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3738
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3746
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3764
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3788
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3797
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3807
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3811
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3821
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3825
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3829
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3833
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3839
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3849
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3853
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3859
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3869
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3875
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3881
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3885
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3889
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3899
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3909
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3915
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3919
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3925
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3929
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3939
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3952
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3958
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3964
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3977
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3995
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3999
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4005
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4019
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4023
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4028
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4032
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4036
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4040
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4049
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4053
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4057
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4061
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4066
		{
			yyVAL.str = ""
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4070
		{
			yyVAL.str = yyDollar[1].str
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4074
		{
			yyVAL.str = yyDollar[2].str
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4083
		{
			yyVAL.str = ""
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4087
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4091
		{
			yyVAL.str = yyDollar[2].str
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4095
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4099
		{
			yyVAL.str = yyDollar[2].str
		}
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 675:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4170
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4175
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4181
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4188
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4192
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4198
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4204
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4208
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4212
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4218
		{
			yyVAL.str = yyDollar[1].str
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:4224
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4230
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[6].tableNameUnion(),
				ColNames:    yyDollar[7].identifierListUnion(),
				AsSource:    yyDollar[9].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4241
		{
		}
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4246
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4274
		{
			yyVAL.str = yyDollar[1].str
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4284
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4291
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4297
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4305
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4311
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4318
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4326
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4332
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4353
		{
			yyVAL.str = yyDollar[1].str
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4358
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4364
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4372
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4478
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4482
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4488
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4498
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4502
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4522
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4535
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4554
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4567
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4576
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4580
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4586
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4603
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4607
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4611
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4615
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4621
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4644
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4670
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4688
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4692
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4698
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4703
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4712
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4716
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4720
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4724
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4744
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4757
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4763
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4767
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4777
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4796
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4817
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4830
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.ExternParam{
				Option: yyDollar[3].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4851
		{
			yyLOCAL = &tree.ExternParam{
				ScanType: tree.S3,
				Option:   yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4860
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4864
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4869
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4873
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4880
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4895
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4904
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4918
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:4925
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4936
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4949
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4955
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4959
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4974
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4988
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4994
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4998
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5004
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:5011
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5020
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5024
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5033
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5038
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:5042
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5047
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5051
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5061
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5065
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5076
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5084
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5092
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5111
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:5130
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5140
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5144
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5162
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5168
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5172
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5176
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5182
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5194
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5198
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5206
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5210
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5222
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5226
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5230
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5234
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5238
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5246
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5258
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5262
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5266
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5270
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5274
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5278
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5282
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5286
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5301
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5305
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5311
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5316
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5320
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5324
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5330
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5334
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5338
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5342
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5346
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5350
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5368
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5377
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5382
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5388
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5395
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5399
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5409
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5415
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5425
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5431
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5440
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5449
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5472
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5481
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5491
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5499
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5505
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5519
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5525
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5531
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5545
		{
			yyVAL.str = ""
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5552
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5558
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5566
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5577
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5581
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5585
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5594
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5600
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5604
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5614
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5618
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5622
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5626
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5630
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5638
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5642
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5646
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5650
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5654
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5658
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5662
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5675
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5690
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5700
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5704
		{
			yyVAL.str = yyDollar[2].str
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5722
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5729
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5736
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5743
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5750
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5759
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5765
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5792
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5799
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5803
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5807
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5816
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5821
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5825
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5847
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5851
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5855
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5859
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5863
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5867
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5871
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5875
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5895
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5901
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5905
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5909
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5913
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5917
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5929
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5933
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5941
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5945
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5950
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5958
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5962
		{
			locale := ""
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: "BINARY",
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			})
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5974
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5978
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5987
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5991
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5995
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5999
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6008
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6017
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6023
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:6027
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:6033
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6043
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6060
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6077
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6090
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6103
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6115
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6129
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6159
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6191
		{
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6197
		{
			yyLOCAL = &tree.WindowFrameBoundCurrentRow{}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6201
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6205
		{
			yyLOCAL = &tree.WindowFrameBoundPreceding{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.WindowFrameBound
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.WindowFrameBoundFollowing{
				Expr: yyDollar[1].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6223
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_ROWS
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6227
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_RANGE
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.WindowFrameUnits
//line mysql_sql.y:6231
		{
			yyLOCAL = tree.WIN_FRAME_UNIT_GROUPS
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[2].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.WindowFrame{
				Unit:       yyDollar[1].windowFrameUnitUnion(),
				StartBound: yyDollar[3].windowFrameBoundUnion(),
				EndBound:   yyDollar[5].windowFrameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.WindowFrame
//line mysql_sql.y:6257
		{
			yyLOCAL = yyDollar[1].windowFrameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6264
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6273
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6278
		{
			yyVAL.str = ","
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6282
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				WindowFrame: yyDollar[5].windowFrameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[7].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6350
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6360
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6380
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6390
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6400
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6410
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6430
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6440
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6460
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6477
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6485
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6493
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6501
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6509
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6526
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6535
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6543
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6551
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6560
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6569
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6591
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6627
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6639
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6651
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6661
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6669
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6676
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6683
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6695
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6703
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6714
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6723
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6732
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6740
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6750
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6758
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6772
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6782
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6801
		{
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6803
		{
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6868
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6877
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6887
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6902
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6910
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6914
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6918
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6922
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6928
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6932
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6936
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6940
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6944
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6952
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6956
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6976
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6980
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7010
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7016
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7020
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7031
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7049
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7053
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7057
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7061
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7071
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7075
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7079
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7083
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7093
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7106
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7111
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7115
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7119
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7131
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7145
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7149
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7156
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7167
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7172
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7190
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7202
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7253
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7266
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7279
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7292
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7305
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7318
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7331
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7344
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7359
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7382
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7416
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7464
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7481
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7493
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7513
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7533
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7657
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7681
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7770
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7778
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7787
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7797
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7820
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7825
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7831
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7838
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7842
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7847
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7851
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7857
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7863
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7870
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7877
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7886
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7893
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7900
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7923
		{
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7935
		{
			yyVAL.str = ""
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7939
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

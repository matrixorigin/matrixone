// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const SCHEMA = 57533
const TABLE = 57534
const INDEX = 57535
const VIEW = 57536
const TO = 57537
const IGNORE = 57538
const IF = 57539
const PRIMARY = 57540
const COLUMN = 57541
const CONSTRAINT = 57542
const SPATIAL = 57543
const FULLTEXT = 57544
const FOREIGN = 57545
const KEY_BLOCK_SIZE = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const MAXVALUE = 57555
const PARTITION = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const STATUS = 57562
const VARIABLES = 57563
const ROLE = 57564
const PROXY = 57565
const AVG_ROW_LENGTH = 57566
const STORAGE = 57567
const DISK = 57568
const MEMORY = 57569
const CHECKSUM = 57570
const COMPRESSION = 57571
const DATA = 57572
const DIRECTORY = 57573
const DELAY_KEY_WRITE = 57574
const ENCRYPTION = 57575
const ENGINE = 57576
const MAX_ROWS = 57577
const MIN_ROWS = 57578
const PACK_KEYS = 57579
const ROW_FORMAT = 57580
const STATS_AUTO_RECALC = 57581
const STATS_PERSISTENT = 57582
const STATS_SAMPLE_PAGES = 57583
const DYNAMIC = 57584
const COMPRESSED = 57585
const REDUNDANT = 57586
const COMPACT = 57587
const FIXED = 57588
const COLUMN_FORMAT = 57589
const AUTO_RANDOM = 57590
const RESTRICT = 57591
const CASCADE = 57592
const ACTION = 57593
const PARTIAL = 57594
const SIMPLE = 57595
const CHECK = 57596
const ENFORCED = 57597
const RANGE = 57598
const LIST = 57599
const ALGORITHM = 57600
const LINEAR = 57601
const PARTITIONS = 57602
const SUBPARTITION = 57603
const SUBPARTITIONS = 57604
const TYPE = 57605
const ANY = 57606
const SOME = 57607
const EXTERNAL = 57608
const LOCALFILE = 57609
const URL = 57610
const PREPARE = 57611
const DEALLOCATE = 57612
const PROPERTIES = 57613
const PARSER = 57614
const VISIBLE = 57615
const INVISIBLE = 57616
const BTREE = 57617
const HASH = 57618
const RTREE = 57619
const BSI = 57620
const ZONEMAP = 57621
const LEADING = 57622
const BOTH = 57623
const TRAILING = 57624
const UNKNOWN = 57625
const EXPIRE = 57626
const ACCOUNT = 57627
const UNLOCK = 57628
const DAY = 57629
const NEVER = 57630
const PUMP = 57631
const SECOND = 57632
const ASCII = 57633
const COALESCE = 57634
const COLLATION = 57635
const HOUR = 57636
const MICROSECOND = 57637
const MINUTE = 57638
const MONTH = 57639
const QUARTER = 57640
const REPEAT = 57641
const REVERSE = 57642
const ROW_COUNT = 57643
const WEEK = 57644
const REVOKE = 57645
const FUNCTION = 57646
const PRIVILEGES = 57647
const TABLESPACE = 57648
const EXECUTE = 57649
const SUPER = 57650
const GRANT = 57651
const OPTION = 57652
const REFERENCES = 57653
const REPLICATION = 57654
const SLAVE = 57655
const CLIENT = 57656
const USAGE = 57657
const RELOAD = 57658
const FILE = 57659
const TEMPORARY = 57660
const ROUTINE = 57661
const EVENT = 57662
const SHUTDOWN = 57663
const NULLX = 57664
const AUTO_INCREMENT = 57665
const APPROXNUM = 57666
const SIGNED = 57667
const UNSIGNED = 57668
const ZEROFILL = 57669
const ENGINES = 57670
const LOW_CARDINALITY = 57671
const ADMIN_NAME = 57672
const RANDOM = 57673
const SUSPEND = 57674
const ATTRIBUTE = 57675
const HISTORY = 57676
const REUSE = 57677
const CURRENT = 57678
const OPTIONAL = 57679
const FAILED_LOGIN_ATTEMPTS = 57680
const PASSWORD_LOCK_TIME = 57681
const UNBOUNDED = 57682
const SECONDARY = 57683
const USER = 57684
const IDENTIFIED = 57685
const CIPHER = 57686
const ISSUER = 57687
const X509 = 57688
const SUBJECT = 57689
const SAN = 57690
const REQUIRE = 57691
const SSL = 57692
const NONE = 57693
const PASSWORD = 57694
const MAX_QUERIES_PER_HOUR = 57695
const MAX_UPDATES_PER_HOUR = 57696
const MAX_CONNECTIONS_PER_HOUR = 57697
const MAX_USER_CONNECTIONS = 57698
const FORMAT = 57699
const VERBOSE = 57700
const CONNECTION = 57701
const TRIGGERS = 57702
const PROFILES = 57703
const LOAD = 57704
const INFILE = 57705
const TERMINATED = 57706
const OPTIONALLY = 57707
const ENCLOSED = 57708
const ESCAPED = 57709
const STARTING = 57710
const LINES = 57711
const ROWS = 57712
const IMPORT = 57713
const FROM_JSONLINE = 57714
const MODUMP = 57715
const DATABASES = 57716
const TABLES = 57717
const EXTENDED = 57718
const FULL = 57719
const PROCESSLIST = 57720
const FIELDS = 57721
const COLUMNS = 57722
const OPEN = 57723
const ERRORS = 57724
const WARNINGS = 57725
const INDEXES = 57726
const SCHEMAS = 57727
const NAMES = 57728
const GLOBAL = 57729
const SESSION = 57730
const ISOLATION = 57731
const LEVEL = 57732
const READ = 57733
const WRITE = 57734
const ONLY = 57735
const REPEATABLE = 57736
const COMMITTED = 57737
const UNCOMMITTED = 57738
const SERIALIZABLE = 57739
const LOCAL = 57740
const EVENTS = 57741
const PLUGINS = 57742
const CURRENT_TIMESTAMP = 57743
const DATABASE = 57744
const CURRENT_TIME = 57745
const LOCALTIME = 57746
const LOCALTIMESTAMP = 57747
const UTC_DATE = 57748
const UTC_TIME = 57749
const UTC_TIMESTAMP = 57750
const REPLACE = 57751
const CONVERT = 57752
const SEPARATOR = 57753
const TIMESTAMPDIFF = 57754
const CURRENT_DATE = 57755
const CURRENT_USER = 57756
const CURRENT_ROLE = 57757
const SECOND_MICROSECOND = 57758
const MINUTE_MICROSECOND = 57759
const MINUTE_SECOND = 57760
const HOUR_MICROSECOND = 57761
const HOUR_SECOND = 57762
const HOUR_MINUTE = 57763
const DAY_MICROSECOND = 57764
const DAY_SECOND = 57765
const DAY_MINUTE = 57766
const DAY_HOUR = 57767
const YEAR_MONTH = 57768
const SQL_TSI_HOUR = 57769
const SQL_TSI_DAY = 57770
const SQL_TSI_WEEK = 57771
const SQL_TSI_MONTH = 57772
const SQL_TSI_QUARTER = 57773
const SQL_TSI_YEAR = 57774
const SQL_TSI_SECOND = 57775
const SQL_TSI_MINUTE = 57776
const RECURSIVE = 57777
const CONFIG = 57778
const DRAINER = 57779
const MATCH = 57780
const AGAINST = 57781
const BOOLEAN = 57782
const LANGUAGE = 57783
const WITH = 57784
const QUERY = 57785
const EXPANSION = 57786
const ADDDATE = 57787
const BIT_AND = 57788
const BIT_OR = 57789
const BIT_XOR = 57790
const CAST = 57791
const COUNT = 57792
const APPROX_COUNT_DISTINCT = 57793
const APPROX_PERCENTILE = 57794
const CURDATE = 57795
const CURTIME = 57796
const DATE_ADD = 57797
const DATE_SUB = 57798
const EXTRACT = 57799
const GROUP_CONCAT = 57800
const MAX = 57801
const MID = 57802
const MIN = 57803
const NOW = 57804
const POSITION = 57805
const SESSION_USER = 57806
const STD = 57807
const STDDEV = 57808
const STDDEV_POP = 57809
const STDDEV_SAMP = 57810
const SUBDATE = 57811
const SUBSTR = 57812
const SUBSTRING = 57813
const SUM = 57814
const SYSDATE = 57815
const SYSTEM_USER = 57816
const TRANSLATE = 57817
const TRIM = 57818
const VARIANCE = 57819
const VAR_POP = 57820
const VAR_SAMP = 57821
const AVG = 57822
const MO_SHOW_VISIBLE_BIN = 57823
const JSON_EXTRACT = 57824
const ARROW = 57825
const UNNEST = 57826
const GENERATE_SERIES = 57827
const ROW = 57828
const OUTFILE = 57829
const HEADER = 57830
const MAX_FILE_SIZE = 57831
const FORCE_QUOTE = 57832
const UNUSED = 57833
const BINDINGS = 57834
const DO = 57835
const DECLARE = 57836

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"MODUMP",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"MO_SHOW_VISIBLE_BIN",
	"JSON_EXTRACT",
	"ARROW",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:7861

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 80,
	21, 494,
	-2, 475,
	-1, 85,
	210, 676,
	-2, 720,
	-1, 102,
	42, 334,
	210, 334,
	237, 341,
	238, 341,
	401, 334,
	-2, 362,
	-1, 461,
	67, 1064,
	-2, 1564,
	-1, 462,
	67, 1082,
	-2, 1535,
	-1, 467,
	67, 1083,
	-2, 1563,
	-1, 487,
	67, 997,
	-2, 1613,
	-1, 488,
	67, 998,
	-2, 1612,
	-1, 489,
	67, 1574,
	-2, 1597,
	-1, 490,
	67, 1575,
	-2, 1598,
	-1, 491,
	67, 1576,
	-2, 1604,
	-1, 492,
	67, 1577,
	-2, 1587,
	-1, 493,
	67, 1578,
	-2, 1595,
	-1, 494,
	67, 1579,
	-2, 1605,
	-1, 495,
	67, 1580,
	-2, 1606,
	-1, 496,
	67, 1581,
	-2, 1611,
	-1, 497,
	67, 1582,
	-2, 1616,
	-1, 498,
	67, 1583,
	-2, 1617,
	-1, 501,
	67, 1586,
	-2, 1624,
	-1, 503,
	67, 1061,
	-2, 1416,
	-1, 510,
	67, 1070,
	-2, 1442,
	-1, 514,
	67, 1074,
	-2, 1481,
	-1, 515,
	67, 1075,
	-2, 1559,
	-1, 523,
	67, 1085,
	-2, 1544,
	-1, 525,
	67, 1087,
	-2, 1554,
	-1, 537,
	67, 978,
	-2, 1607,
	-1, 538,
	67, 979,
	-2, 1608,
	-1, 539,
	67, 980,
	-2, 1609,
	-1, 546,
	21, 495,
	-2, 458,
	-1, 588,
	396, 362,
	397, 362,
	-2, 335,
	-1, 630,
	103, 1416,
	114, 1416,
	133, 1416,
	-2, 1222,
	-1, 667,
	21, 495,
	-2, 458,
	-1, 765,
	21, 494,
	-2, 907,
	-1, 1066,
	67, 1130,
	-2, 1561,
	-1, 1067,
	67, 1131,
	-2, 1562,
	-1, 1220,
	1, 702,
	68, 702,
	512, 702,
	-2, 709,
	-1, 1337,
	133, 1232,
	-2, 1230,
	-1, 1339,
	133, 619,
	-2, 1227,
	-1, 1340,
	133, 620,
	-2, 1228,
	-1, 1626,
	1, 703,
	68, 703,
	512, 703,
	-2, 709,
	-1, 1677,
	21, 494,
	-2, 585,
	-1, 1836,
	65, 406,
	134, 406,
	-2, 812,
	-1, 2071,
	87, 709,
	129, 709,
	166, 709,
	169, 709,
	-2, 760,
	-1, 2073,
	271, 875,
	-2, 854,
	-1, 2103,
	65, 406,
	134, 406,
	-2, 813,
	-1, 2137,
	87, 709,
	129, 709,
	166, 709,
	169, 709,
	-2, 761,
	-1, 2165,
	271, 875,
	-2, 855,
	-1, 2555,
	68, 732,
	134, 732,
	-2, 709,
	-1, 2560,
	68, 732,
	134, 732,
	-2, 709,
	-1, 2576,
	68, 736,
	134, 736,
	-2, 709,
	-1, 2581,
	68, 737,
	134, 737,
	-2, 709,
}

const yyPrivate = 57344

const yyLast = 26700

var yyAct = [...]int{
	433, 2560, 1130, 2562, 2569, 2559, 2532, 413, 1047, 2204,
	2398, 415, 2520, 2478, 435, 2435, 1674, 2177, 2463, 2371,
	2462, 2375, 2351, 2123, 2202, 791, 1610, 1298, 2133, 959,
	2203, 2359, 2065, 1043, 913, 1670, 120, 120, 459, 2220,
	2096, 629, 120, 353, 360, 2121, 360, 547, 1225, 1970,
	2166, 447, 80, 1839, 2186, 1050, 123, 1966, 2187, 1255,
	900, 1705, 1323, 1176, 1854, 364, 2077, 358, 29, 1263,
	820, 1286, 1518, 1971, 2042, 1875, 889, 1316, 542, 407,
	1975, 2024, 1986, 661, 1981, 1633, 1186, 1931, 575, 1812,
	1669, 343, 370, 1964, 80, 1179, 1334, 1325, 1317, 1227,
	1337, 412, 1514, 1200, 1279, 119, 119, 1889, 1324, 1258,
	542, 344, 1513, 1853, 633, 1256, 1658, 1809, 3, 120,
	1632, 1814, 2141, 356, 7, 636, 39, 1216, 1208, 1236,
	1627, 357, 18, 656, 1046, 826, 1545, 1515, 981, 1283,
	416, 1041, 79, 1619, 591, 414, 1616, 1249, 354, 8,
	1238, 902, 346, 1248, 1525, 1094, 1080, 1529, 631, 355,
	6, 1032, 424, 635, 349, 655, 678, 80, 39, 1598,
	1672, 1320, 1302, 657, 1237, 1212, 1040, 621, 871, 1679,
	408, 1215, 1244, 29, 928, 574, 938, 1099, 663, 1191,
	622, 544, 1100, 372, 914, 546, 951, 15, 1129, 9,
	4, 980, 359, 110, 584, 113, 2546, 572, 2444, 2573,
	1532, 2125, 367, 1522, 115, 373, 2227, 1706, 2064, 1204,
	1319, 545, 792, 114, 114, 114, 35, 104, 86, 114,
	697, 2426, 114, 114, 654, 35, 104, 86, 114, 7,
	114, 39, 940, 342, 2195, 999, 1726, 18, 362, 2416,
	1519, 1734, 1530, 114, 634, 35, 104, 86, 992, 1906,
	116, 996, 731, 925, 8, 926, 1811, 887, 541, 1267,
	1268, 1800, 2451, 730, 989, 6, 1899, 641, 640, 642,
	111, 111, 998, 910, 601, 2449, 111, 1017, 1240, 111,
	111, 919, 920, 941, 724, 991, 532, 111, 531, 533,
	534, 917, 535, 536, 916, 919, 920, 639, 1049, 2218,
	111, 729, 2466, 2467, 705, 1810, 707, 986, 2439, 2440,
	2221, 2222, 2223, 2224, 1957, 2304, 1958, 2307, 1959, 2229,
	712, 1033, 713, 1037, 2066, 1051, 1721, 672, 1276, 1280,
	2374, 2054, 1817, 1995, 708, 2085, 120, 671, 564, 1272,
	369, 1526, 605, 1997, 644, 2092, 670, 1036, 1028, 1617,
	715, 1595, 360, 2200, 120, 1987, 2288, 1920, 1922, 2184,
	637, 1175, 1174, 548, 726, 2425, 681, 403, 727, 728,
	404, 1731, 700, 2291, 1135, 841, 2197, 2476, 361, 1991,
	666, 668, 2453, 1992, 1993, 1825, 1826, 1827, 1828, 1058,
	1061, 1062, 80, 80, 635, 2282, 2551, 701, 1994, 606,
	1059, 1535, 1537, 1538, 2570, 669, 85, 2486, 112, 2493,
	2448, 767, 665, 710, 1038, 681, 2400, 638, 703, 2396,
	2397, 2373, 2400, 688, 2423, 2275, 102, 2465, 2244, 2543,
	706, 709, 2243, 1035, 2428, 2429, 406, 405, 1823, 2455,
	2456, 908, 2360, 2361, 2362, 2364, 2363, 932, 667, 2406,
	692, 1546, 912, 911, 702, 1531, 947, 2533, 566, 2523,
	765, 946, 690, 927, 722, 723, 39, 39, 563, 562,
	711, 1989, 905, 2571, 632, 829, 2564, 643, 2266, 819,
	2270, 890, 2232, 662, 368, 634, 2302, 602, 2578, 557,
	2336, 1979, 939, 849, 853, 855, 857, 859, 860, 862,
	888, 866, 863, 864, 865, 674, 675, 844, 845, 846,
	847, 827, 828, 850, 704, 830, 1727, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 842, 848, 1831,
	714, 1034, 697, 560, 683, 682, 852, 854, 856, 858,
	861, 1877, 1879, 1687, 1523, 1520, 1210, 893, 897, 1927,
	1925, 634, 555, 895, 686, 768, 769, 770, 771, 363,
	1882, 1520, 1933, 1932, 575, 1520, 604, 1686, 1685, 603,
	843, 689, 1684, 2524, 569, 570, 571, 2545, 772, 2443,
	738, 868, 2124, 683, 682, 561, 2454, 944, 676, 766,
	876, 919, 920, 1270, 1816, 1271, 2563, 774, 918, 2372,
	942, 943, 800, 2427, 919, 920, 1060, 1683, 915, 556,
	696, 1269, 1980, 608, 542, 542, 542, 778, 1536, 963,
	963, 609, 1998, 891, 892, 1281, 894, 1667, 1988, 1010,
	1011, 2289, 909, 1923, 2505, 360, 984, 984, 2584, 36,
	1837, 1533, 1976, 1979, 1990, 1521, 1820, 1821, 2583, 965,
	1832, 2577, 961, 961, 2574, 994, 967, 2007, 2552, 36,
	1819, 987, 87, 87, 87, 1275, 1228, 2201, 87, 565,
	732, 87, 87, 2196, 969, 1015, 1273, 87, 343, 87,
	1735, 802, 803, 2271, 2272, 1029, 1714, 963, 2529, 963,
	671, 1000, 87, 1878, 1707, 2521, 2522, 2268, 733, 1048,
	717, 2267, 718, 80, 733, 1228, 632, 80, 691, 2337,
	2339, 2340, 2341, 2338, 733, 1305, 2547, 1014, 80, 990,
	2575, 906, 2536, 997, 1528, 1013, 1838, 80, 922, 923,
	720, 1668, 873, 602, 612, 735, 736, 737, 734, 697,
	546, 1709, 1573, 1024, 875, 1572, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 929, 1838,
	929, 1089, 1090, 2535, 1980, 2072, 549, 2480, 1098, 1973,
	933, 899, 1031, 1974, 1977, 2238, 1604, 1145, 1052, 1952,
	921, 611, 2548, 924, 1668, 614, 613, 1151, 1528, 1726,
	1696, 1045, 39, 716, 2473, 2468, 1153, 1608, 2457, 1157,
	1158, 39, 851, 2445, 954, 955, 956, 1023, 936, 937,
	542, 733, 604, 957, 958, 603, 983, 983, 1026, 1668,
	2421, 1042, 945, 2021, 1020, 1978, 1621, 721, 968, 1528,
	342, 1006, 1063, 2481, 1303, 1019, 1001, 979, 985, 1696,
	972, 973, 974, 975, 976, 977, 978, 1519, 1609, 2420,
	719, 1030, 2419, 1002, 647, 652, 653, 1577, 1197, 2418,
	2293, 2293, 1510, 898, 1696, 735, 736, 737, 734, 2446,
	546, 2408, 1092, 1022, 1144, 1021, 1018, 2299, 2298, 1039,
	1213, 869, 963, 1182, 1183, 1220, 2293, 2292, 948, 575,
	2091, 697, 1226, 1198, 2040, 963, 2482, 2106, 1088, 2039,
	1219, 1190, 2008, 1044, 1053, 1054, 1055, 1056, 1057, 1607,
	1891, 1872, 1840, 1082, 1181, 2293, 1245, 1245, 2293, 1250,
	1620, 695, 1188, 1189, 1250, 2293, 1796, 1213, 963, 120,
	1729, 1794, 1201, 1792, 694, 1790, 1780, 2409, 1243, 542,
	1740, 963, 1724, 2300, 1637, 1718, 1096, 1097, 1716, 1711,
	1728, 1132, 903, 2293, 1211, 1720, 1139, 1636, 1605, 1133,
	733, 1580, 1221, 1213, 963, 733, 1297, 120, 120, 1131,
	1651, 1134, 1579, 1569, 1307, 1218, 1146, 1668, 120, 1556,
	1264, 1509, 1145, 1145, 1327, 656, 1152, 1155, 1154, 1145,
	1145, 1292, 1797, 1527, 1247, 1300, 1232, 1795, 610, 1791,
	1171, 1791, 733, 1007, 695, 1313, 733, 1919, 1637, 1310,
	1339, 1712, 1241, 1242, 1717, 1712, 1217, 1003, 1226, 649,
	650, 651, 963, 1637, 1604, 657, 750, 733, 867, 1230,
	1277, 777, 684, 635, 664, 2012, 1299, 1299, 733, 1229,
	635, 1202, 1205, 1282, 1193, 1206, 1196, 1299, 1209, 80,
	1340, 1199, 1331, 1234, 1235, 1137, 1136, 1296, 1918, 1528,
	1517, 1917, 1217, 930, 1328, 567, 1511, 952, 1555, 1008,
	929, 2558, 1233, 1222, 1223, 1087, 1540, 1251, 953, 1322,
	1231, 2518, 1746, 1239, 1543, 1544, 1322, 1290, 1291, 2509,
	1085, 1086, 1084, 735, 736, 737, 734, 950, 1042, 1246,
	2506, 1813, 1252, 2410, 2310, 2022, 1095, 615, 1254, 1253,
	1926, 1516, 1715, 1689, 577, 673, 1278, 735, 736, 737,
	734, 2261, 1202, 39, 634, 765, 1748, 1945, 1202, 1202,
	1095, 634, 1551, 1807, 1301, 1214, 1293, 1554, 1294, 734,
	1295, 1287, 1288, 1289, 2278, 1163, 737, 734, 1311, 753,
	754, 755, 756, 757, 750, 1584, 2277, 2081, 2076, 1138,
	1329, 931, 1507, 1149, 1338, 1508, 1895, 2557, 2539, 1332,
	607, 1333, 1944, 1150, 2503, 602, 2347, 949, 2487, 2384,
	1156, 2565, 1512, 1159, 1160, 1161, 1162, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 735, 736, 737, 734, 2542, 2353,
	1534, 120, 120, 751, 752, 753, 754, 755, 756, 757,
	750, 1565, 120, 1634, 2346, 1982, 634, 1539, 1611, 1612,
	2345, 1542, 1250, 2331, 120, 735, 736, 737, 734, 2330,
	353, 1541, 2329, 1755, 2326, 2320, 2553, 1082, 1250, 1550,
	2317, 2541, 2316, 2088, 656, 741, 742, 743, 744, 745,
	746, 747, 739, 120, 604, 2460, 1996, 603, 2344, 866,
	863, 864, 865, 1548, 1564, 1760, 1552, 1759, 1758, 1756,
	1613, 1615, 735, 736, 737, 734, 2343, 735, 736, 737,
	734, 1630, 1955, 963, 657, 1954, 735, 736, 737, 734,
	589, 2333, 1913, 1642, 984, 2378, 120, 578, 1893, 1700,
	1603, 1702, 1120, 1602, 1677, 2530, 1562, 1675, 1675, 1563,
	1675, 1567, 1678, 1601, 2342, 2198, 1694, 735, 736, 737,
	734, 1597, 1596, 594, 1643, 1644, 2287, 1578, 1757, 2332,
	1581, 1582, 1583, 1628, 1004, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1676, 1593, 1680, 1600, 2483, 1264, 735, 736,
	737, 734, 2475, 2199, 403, 1699, 2089, 404, 1647, 1771,
	1649, 2459, 1622, 749, 748, 758, 759, 751, 752, 753,
	754, 755, 756, 757, 750, 1641, 2352, 2134, 1645, 2441,
	2128, 2404, 1648, 2403, 1650, 1652, 2391, 1654, 2334, 1653,
	2127, 2327, 1697, 1646, 2090, 634, 2323, 2322, 576, 1638,
	2321, 1704, 735, 736, 737, 734, 2290, 2263, 1239, 2228,
	597, 2225, 735, 736, 737, 734, 2132, 1690, 1691, 1692,
	2130, 800, 758, 759, 751, 752, 753, 754, 755, 756,
	757, 750, 1698, 592, 735, 736, 737, 734, 2099, 2059,
	1559, 1116, 2087, 2086, 1113, 1761, 1762, 1948, 1115, 1112,
	1114, 1118, 1119, 1947, 2083, 2056, 1117, 1953, 1202, 1202,
	1202, 735, 736, 737, 734, 593, 598, 1924, 1894, 735,
	736, 737, 734, 1946, 983, 735, 736, 737, 734, 586,
	1885, 588, 601, 1738, 1787, 1606, 585, 583, 582, 2576,
	587, 1599, 599, 600, 1312, 735, 736, 737, 734, 1786,
	1722, 486, 485, 2549, 595, 596, 735, 736, 737, 734,
	963, 1005, 963, 1553, 963, 735, 736, 737, 734, 671,
	801, 735, 736, 737, 734, 658, 659, 660, 1736, 749,
	748, 758, 759, 751, 752, 753, 754, 755, 756, 757,
	750, 590, 796, 1785, 795, 1732, 963, 1764, 1575, 2411,
	2000, 2540, 2100, 2071, 2062, 114, 2061, 2049, 104, 86,
	1772, 2041, 2013, 1950, 963, 735, 736, 737, 734, 735,
	736, 737, 734, 1774, 1943, 1763, 1935, 1930, 1793, 961,
	1789, 1123, 1124, 1125, 1126, 1127, 1128, 1121, 1122, 1788,
	1585, 1576, 1574, 1773, 1784, 1571, 1570, 961, 749, 748,
	758, 759, 751, 752, 753, 754, 755, 756, 757, 750,
	1783, 963, 111, 114, 1750, 1568, 735, 736, 737, 734,
	1561, 1558, 1836, 1557, 1148, 1147, 1733, 970, 1842, 2572,
	2517, 2511, 735, 736, 737, 734, 2494, 2491, 2489, 1744,
	1725, 1723, 1850, 793, 1042, 2383, 671, 120, 120, 120,
	120, 1730, 2369, 2357, 2161, 1855, 2354, 2349, 671, 120,
	1830, 2311, 1178, 2285, 1806, 2284, 1798, 1855, 2283, 1741,
	111, 2280, 2274, 2259, 1880, 1881, 901, 80, 963, 2114,
	1754, 2112, 1743, 2094, 2082, 1187, 120, 120, 1629, 1782,
	1180, 1834, 1833, 29, 1808, 1710, 1688, 1871, 1264, 1264,
	1264, 1264, 1682, 1145, 1681, 1145, 1635, 1083, 1905, 111,
	1264, 735, 736, 737, 734, 2561, 1192, 963, 1675, 1195,
	1870, 1185, 1747, 1843, 1184, 2143, 1027, 1911, 1803, 993,
	1765, 1766, 1845, 870, 818, 1846, 1769, 1770, 1822, 1628,
	817, 816, 1835, 815, 1841, 1217, 814, 1829, 1775, 7,
	813, 39, 812, 80, 811, 1887, 1888, 18, 810, 809,
	80, 1851, 1856, 1857, 1858, 1859, 1852, 1912, 1869, 1900,
	1849, 1868, 1201, 1867, 8, 1202, 1907, 1904, 1801, 1802,
	1209, 1902, 546, 1844, 1886, 6, 808, 1908, 807, 1847,
	1883, 1848, 806, 805, 804, 799, 1921, 2515, 1896, 671,
	1901, 798, 1892, 1985, 1898, 797, 794, 1909, 1969, 1936,
	1916, 1910, 1938, 1903, 1940, 120, 790, 789, 787, 1915,
	786, 785, 784, 783, 671, 782, 781, 780, 120, 1634,
	1934, 2011, 779, 1969, 1928, 776, 1939, 1781, 775, 1941,
	1942, 1779, 1937, 699, 749, 748, 758, 759, 751, 752,
	753, 754, 755, 756, 757, 750, 2025, 2026, 2147, 735,
	736, 737, 734, 735, 736, 737, 734, 2281, 1640, 2151,
	550, 551, 552, 553, 1624, 687, 2499, 2497, 2464, 1264,
	2028, 1202, 1764, 549, 2001, 1824, 1202, 2009, 1695, 2140,
	1315, 698, 2031, 2142, 2144, 2146, 2030, 2148, 2149, 2150,
	2152, 2153, 2154, 2156, 2157, 2158, 2159, 1861, 2006, 1860,
	2002, 2003, 2004, 2556, 2010, 1864, 120, 2005, 120, 1929,
	1865, 1866, 1862, 1664, 1665, 2019, 2018, 1863, 1719, 2117,
	2029, 2116, 971, 1713, 2014, 1805, 2162, 2015, 2016, 1629,
	2033, 1172, 1949, 2020, 1960, 1961, 2047, 1708, 2036, 2037,
	2038, 1739, 63, 1778, 120, 38, 37, 2046, 2032, 1777,
	1611, 1612, 1963, 2075, 1737, 2115, 872, 2050, 117, 1618,
	693, 2160, 2230, 1962, 2051, 735, 736, 737, 734, 2053,
	1224, 735, 736, 737, 734, 2055, 1776, 2057, 2139, 1137,
	1136, 2017, 339, 963, 963, 340, 341, 2052, 120, 2103,
	884, 885, 882, 883, 80, 338, 880, 881, 735, 736,
	737, 734, 671, 878, 879, 2432, 935, 2155, 725, 934,
	2069, 1855, 2095, 2070, 2145, 2035, 961, 2097, 874, 1506,
	2073, 904, 2512, 2080, 2074, 2388, 2386, 2119, 1228, 1145,
	2314, 2312, 2079, 2309, 2308, 2078, 2306, 2078, 2216, 1264,
	2215, 2131, 2068, 1675, 2067, 2105, 1768, 2102, 2108, 2044,
	877, 549, 2043, 671, 1890, 2138, 1767, 2188, 2190, 1914,
	2188, 2188, 1969, 1745, 2501, 2500, 2109, 1560, 735, 736,
	737, 734, 685, 2500, 2110, 671, 1091, 2101, 735, 736,
	737, 734, 2501, 2126, 2276, 735, 736, 737, 734, 2104,
	2048, 2120, 907, 1226, 45, 2213, 1, 2107, 735, 736,
	737, 734, 1742, 2185, 1314, 2129, 2058, 1873, 1874, 2034,
	2163, 2135, 1876, 2060, 2191, 2192, 2189, 1524, 2084, 1999,
	1547, 2234, 1983, 2210, 749, 748, 758, 759, 751, 752,
	753, 754, 755, 756, 757, 750, 2207, 2105, 2193, 896,
	568, 2211, 749, 748, 758, 759, 751, 752, 753, 754,
	755, 756, 757, 750, 963, 1140, 886, 2262, 550, 551,
	552, 553, 1012, 2237, 646, 120, 1660, 1663, 1664, 1665,
	1661, 549, 1662, 1666, 2190, 680, 1009, 679, 677, 1093,
	449, 2208, 2209, 1202, 1318, 2350, 2111, 2097, 2212, 2113,
	2431, 2477, 2382, 2434, 2264, 2185, 2260, 1025, 434, 2301,
	1956, 2217, 2513, 2303, 2118, 2219, 1799, 2122, 1897, 2235,
	2236, 580, 2239, 2240, 2241, 2242, 481, 2315, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2286, 2296, 2279, 457, 2297, 788, 2348, 2305,
	995, 988, 648, 2194, 456, 2093, 1655, 1818, 2294, 749,
	748, 758, 759, 751, 752, 753, 754, 755, 756, 757,
	750, 671, 80, 2328, 671, 671, 671, 554, 645, 1660,
	1663, 1664, 1665, 1661, 671, 1662, 1666, 581, 2313, 1594,
	2063, 2380, 1173, 1194, 1675, 2358, 1177, 2568, 2366, 2367,
	2368, 2555, 2393, 2531, 2365, 2355, 2510, 2399, 2550, 963,
	963, 2377, 2447, 2492, 2376, 2485, 2395, 2318, 2319, 2231,
	374, 1274, 2379, 2324, 2325, 2387, 2385, 2389, 2390, 540,
	619, 2394, 2370, 375, 1639, 2424, 2356, 558, 2401, 2402,
	120, 1623, 961, 961, 559, 1626, 1625, 1064, 671, 748,
	758, 759, 751, 752, 753, 754, 755, 756, 757, 750,
	671, 740, 1081, 773, 411, 1549, 423, 2407, 417, 1815,
	2178, 2413, 2417, 1884, 2438, 44, 2295, 43, 42, 1306,
	1335, 451, 122, 1336, 2422, 2392, 2226, 2436, 2437, 432,
	431, 430, 429, 1659, 1657, 2430, 1656, 1260, 1259, 1304,
	2461, 2414, 2415, 2273, 2335, 2269, 2265, 2442, 2405, 1299,
	2450, 2452, 2137, 2136, 2164, 2165, 2171, 825, 821, 823,
	824, 822, 2458, 1753, 1749, 1967, 1968, 1965, 2027, 2023,
	2469, 2470, 2471, 2472, 2479, 1326, 761, 2484, 764, 1207,
	1804, 1261, 1257, 2206, 543, 5, 28, 2488, 27, 2490,
	26, 14, 13, 762, 763, 760, 1016, 749, 748, 758,
	759, 751, 752, 753, 754, 755, 756, 757, 750, 12,
	2495, 2496, 2438, 2508, 2498, 17, 25, 24, 23, 1951,
	671, 2502, 671, 2504, 22, 71, 2437, 2507, 2514, 1048,
	2516, 1048, 2519, 70, 69, 68, 21, 11, 67, 66,
	65, 20, 19, 60, 2525, 2474, 61, 2479, 671, 2526,
	55, 54, 53, 2534, 579, 52, 2538, 1048, 51, 50,
	2544, 49, 59, 58, 57, 2412, 749, 748, 758, 759,
	751, 752, 753, 754, 755, 756, 757, 750, 56, 48,
	47, 46, 84, 83, 82, 2554, 81, 30, 31, 32,
	33, 94, 93, 95, 2567, 91, 2566, 89, 92, 90,
	88, 40, 10, 16, 2, 2579, 0, 0, 2581, 0,
	2580, 2582, 0, 0, 0, 2567, 1451, 1493, 0, 0,
	1440, 289, 1398, 1453, 1371, 1387, 1461, 1388, 1389, 1426,
	1350, 1408, 251, 1385, 0, 0, 0, 0, 0, 0,
	1443, 1342, 1374, 1375, 1344, 1381, 1345, 1372, 1400, 196,
	1370, 1411, 221, 1423, 1384, 1405, 1459, 0, 0, 281,
	235, 0, 0, 1403, 1445, 1406, 1431, 1397, 1427, 1358,
	1419, 1454, 1386, 0, 1424, 1455, 0, 0, 0, 0,
	658, 659, 660, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 1422, 1449, 1383, 0, 180, 1452, 1404,
	1425, 0, 0, 1343, 1420, 0, 1348, 1351, 1460, 1447,
	1378, 1379, 0, 0, 0, 0, 0, 2528, 0, 0,
	1401, 1407, 1428, 1394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1376, 0, 1416, 0, 0, 0, 1353,
	1349, 0, 1399, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 1492, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 1352, 310, 173, 1487,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 1471, 1472, 1473, 1474, 1475, 1483, 1484, 0, 1488,
	1489, 1490, 1357, 0, 1377, 1429, 0, 1341, 1438, 1446,
	1396, 312, 1448, 1393, 1392, 1478, 0, 1477, 285, 1479,
	1480, 220, 1444, 1373, 1382, 328, 1380, 271, 253, 1450,
	1415, 1491, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 1476, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 1485, 0, 1486,
	324, 203, 162, 307, 0, 249, 0, 1441, 1346, 1356,
	1354, 1390, 1417, 1418, 245, 323, 1433, 1437, 1434, 1462,
	274, 0, 0, 0, 0, 0, 214, 255, 1435, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 282, 305, 317, 334, 337, 1494, 1495, 1496,
	166, 336, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 308,
	1391, 1364, 1402, 316, 1367, 1365, 1432, 1366, 1421, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 1412,
	1395, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1413, 0,
	1505, 1369, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 1439, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 1363, 1368,
	1362, 1409, 1410, 1456, 1457, 1458, 1430, 1355, 1442, 0,
	1359, 1361, 1360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1436, 289, 463, 1414, 163, 0, 222, 1463,
	263, 201, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 425, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 455, 0,
	0, 281, 235, 0, 0, 0, 0, 511, 519, 0,
	0, 0, 0, 1481, 1482, 320, 321, 322, 306, 418,
	193, 1504, 448, 486, 485, 436, 445, 0, 0, 177,
	437, 0, 444, 438, 442, 441, 439, 440, 0, 503,
	0, 0, 0, 0, 0, 0, 409, 422, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 420, 0, 0, 0, 0, 464, 0, 421,
	0, 0, 466, 0, 446, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 443, 462, 467, 189, 525, 460, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 526, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 312, 0, 0, 509, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 461, 0, 271,
	253, 522, 410, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 1142,
	1141, 1143, 324, 203, 162, 307, 507, 249, 0, 521,
	502, 504, 505, 508, 512, 513, 514, 515, 516, 518,
	520, 524, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 465, 239, 240, 241, 242, 510, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	532, 506, 531, 533, 534, 530, 535, 536, 517, 428,
	0, 470, 528, 527, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 492, 474, 475, 476, 427, 477,
	472, 473, 493, 468, 489, 490, 450, 453, 478, 139,
	479, 491, 494, 495, 537, 538, 539, 482, 496, 488,
	487, 480, 469, 497, 498, 454, 452, 483, 484, 471,
	501, 0, 0, 499, 500, 289, 463, 320, 321, 322,
	306, 0, 193, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 425,
	0, 0, 0, 196, 1203, 0, 221, 0, 0, 0,
	455, 0, 0, 281, 235, 0, 0, 0, 0, 511,
	519, 0, 0, 0, 0, 0, 0, 0, 1284, 0,
	0, 418, 0, 0, 448, 486, 485, 436, 445, 0,
	0, 177, 437, 0, 444, 438, 442, 441, 439, 440,
	0, 503, 0, 0, 0, 0, 0, 0, 409, 422,
	0, 426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 0, 0, 0, 0, 464,
	0, 421, 0, 0, 1285, 0, 446, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 443, 462, 467, 189, 525,
	460, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 526, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 0, 312, 0, 0, 509, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 461,
	0, 271, 253, 522, 410, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 507, 249,
	0, 521, 502, 504, 505, 508, 512, 513, 514, 515,
	516, 518, 520, 524, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 465, 239, 240, 241, 242, 510, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 532, 506, 531, 533, 534, 530, 535, 536,
	517, 428, 0, 470, 528, 527, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 492, 474, 475, 476,
	427, 477, 472, 473, 493, 468, 489, 490, 450, 453,
	478, 139, 479, 491, 494, 495, 537, 538, 539, 482,
	496, 488, 487, 480, 469, 497, 498, 454, 452, 483,
	484, 471, 501, 0, 0, 499, 500, 0, 0, 320,
	321, 322, 306, 0, 193, 114, 289, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 455, 0, 0, 281, 235, 0, 0, 0, 0,
	511, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 448, 486, 485, 436, 445,
	0, 0, 177, 437, 0, 444, 438, 442, 441, 439,
	440, 0, 503, 0, 0, 0, 0, 0, 0, 409,
	422, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 420, 0, 0, 0, 0,
	464, 0, 421, 0, 0, 466, 0, 446, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 443, 462, 467, 189,
	525, 460, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 526, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 312, 0, 0, 509,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	461, 0, 271, 253, 522, 410, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 507,
	249, 0, 521, 502, 504, 505, 508, 512, 513, 514,
	515, 516, 518, 520, 524, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 465, 239, 240, 241, 242, 510,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 532, 506, 531, 533, 534, 530, 535,
	536, 517, 428, 0, 470, 528, 527, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 87, 263, 201, 492, 474, 475,
	476, 427, 477, 472, 473, 493, 468, 489, 490, 450,
	453, 478, 139, 479, 491, 494, 495, 537, 538, 539,
	482, 496, 488, 487, 480, 469, 497, 498, 454, 452,
	483, 484, 471, 501, 0, 0, 499, 500, 289, 463,
	320, 321, 322, 306, 0, 193, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 0, 0, 0, 196, 2527, 0, 221,
	0, 0, 0, 455, 0, 0, 281, 235, 0, 0,
	0, 0, 511, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 448, 486, 485,
	436, 445, 0, 0, 177, 437, 0, 444, 438, 442,
	441, 439, 440, 0, 503, 0, 0, 0, 0, 0,
	0, 409, 422, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 420, 0, 0,
	0, 0, 464, 0, 421, 0, 0, 466, 0, 446,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 443, 462,
	467, 189, 525, 460, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 526,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 312, 0,
	0, 509, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 461, 0, 271, 253, 522, 410, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 507, 249, 0, 521, 502, 504, 505, 508, 512,
	513, 514, 515, 516, 518, 520, 524, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 465, 239, 240, 241,
	242, 510, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 532, 506, 531, 533, 534,
	530, 535, 536, 517, 428, 0, 470, 528, 527, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 492,
	474, 475, 476, 427, 477, 472, 473, 493, 468, 489,
	490, 450, 453, 478, 139, 479, 491, 494, 495, 537,
	538, 539, 482, 496, 488, 487, 480, 469, 497, 498,
	454, 452, 483, 484, 471, 501, 0, 0, 499, 500,
	289, 463, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 196, 1203,
	0, 221, 0, 0, 0, 455, 0, 0, 281, 235,
	0, 0, 0, 0, 511, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 448,
	486, 485, 436, 445, 0, 0, 177, 437, 0, 444,
	438, 442, 441, 439, 440, 0, 503, 0, 0, 0,
	0, 0, 0, 409, 422, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 0, 0, 0, 464, 0, 421, 0, 0, 466,
	0, 446, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	443, 462, 467, 189, 525, 460, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 526, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	312, 0, 0, 509, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 461, 0, 271, 253, 522, 410,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 507, 249, 0, 521, 502, 504, 505,
	508, 512, 513, 514, 515, 516, 518, 520, 524, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 465, 239,
	240, 241, 242, 510, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 532, 506, 531,
	533, 534, 530, 535, 536, 517, 428, 0, 470, 528,
	527, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 492, 474, 475, 476, 427, 477, 472, 473, 493,
	468, 489, 490, 450, 453, 478, 139, 479, 491, 494,
	495, 537, 538, 539, 482, 496, 488, 487, 480, 469,
	497, 498, 454, 452, 483, 484, 471, 501, 0, 0,
	499, 500, 289, 463, 320, 321, 322, 306, 0, 193,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 455, 0, 0,
	281, 235, 0, 0, 0, 0, 511, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 448, 486, 485, 436, 445, 0, 0, 177, 437,
	0, 444, 438, 442, 441, 439, 440, 0, 503, 0,
	0, 0, 0, 0, 0, 409, 422, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 420, 982, 0, 0, 0, 464, 0, 421, 0,
	0, 466, 0, 446, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 443, 462, 467, 189, 525, 460, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 526, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 312, 0, 0, 509, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 461, 0, 271, 253,
	522, 410, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 507, 249, 0, 521, 502,
	504, 505, 508, 512, 513, 514, 515, 516, 518, 520,
	524, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	465, 239, 240, 241, 242, 510, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 532,
	506, 531, 533, 534, 530, 535, 536, 517, 428, 0,
	470, 528, 527, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 492, 474, 475, 476, 427, 477, 472,
	473, 493, 468, 489, 490, 450, 453, 478, 139, 479,
	491, 494, 495, 537, 538, 539, 482, 496, 488, 487,
	480, 469, 497, 498, 454, 452, 483, 484, 471, 501,
	0, 0, 499, 500, 0, 0, 320, 321, 322, 306,
	0, 193, 289, 463, 0, 0, 1566, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 455, 0, 0,
	281, 235, 0, 0, 0, 0, 511, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 448, 486, 485, 436, 445, 0, 0, 177, 437,
	0, 444, 438, 442, 441, 439, 440, 0, 503, 0,
	0, 0, 0, 0, 0, 409, 422, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 420, 0, 0, 0, 0, 464, 0, 421, 0,
	0, 466, 0, 446, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 443, 462, 467, 189, 525, 460, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 526, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 312, 0, 0, 509, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 461, 0, 271, 253,
	522, 410, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 507, 249, 0, 521, 502,
	504, 505, 508, 512, 513, 514, 515, 516, 518, 520,
	524, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	465, 239, 240, 241, 242, 510, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 532,
	506, 531, 533, 534, 530, 535, 536, 517, 428, 0,
	470, 528, 527, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 492, 474, 475, 476, 427, 477, 472,
	473, 493, 468, 489, 490, 450, 453, 478, 139, 479,
	491, 494, 495, 537, 538, 539, 482, 496, 488, 487,
	480, 469, 497, 498, 454, 452, 483, 484, 471, 501,
	0, 0, 499, 500, 289, 463, 320, 321, 322, 306,
	0, 193, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 455,
	0, 0, 281, 235, 0, 0, 0, 0, 511, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 448, 486, 485, 436, 445, 0, 0,
	177, 437, 0, 444, 438, 442, 441, 439, 440, 0,
	503, 0, 0, 0, 0, 0, 0, 409, 422, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 420, 0, 0, 0, 0, 464, 0,
	421, 0, 0, 466, 0, 446, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 443, 462, 467, 189, 525, 460,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 526, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 312, 0, 0, 509, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 461, 0,
	271, 253, 522, 410, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 507, 249, 0,
	521, 502, 504, 505, 508, 512, 513, 514, 515, 516,
	518, 520, 524, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 465, 239, 240, 241, 242, 510, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 532, 506, 531, 533, 534, 530, 535, 536, 517,
	428, 0, 470, 528, 527, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 492, 474, 475, 476, 427,
	477, 472, 473, 493, 468, 489, 490, 450, 453, 478,
	139, 479, 491, 494, 495, 537, 538, 539, 482, 496,
	488, 487, 480, 469, 497, 498, 454, 452, 483, 484,
	471, 501, 0, 0, 499, 500, 289, 463, 320, 321,
	322, 306, 0, 193, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 1065, 0, 0, 0,
	425, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 455, 0, 0, 281, 235, 0, 0, 0, 0,
	511, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 448, 486, 485, 436, 445,
	0, 0, 177, 437, 0, 444, 438, 442, 441, 439,
	440, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	422, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 420, 0, 0, 0, 0,
	464, 0, 421, 0, 0, 466, 0, 446, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 443, 462, 467, 189,
	525, 460, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 526, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 312, 0, 0, 509,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	461, 0, 271, 253, 522, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 1066, 1067, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 507,
	249, 0, 521, 502, 504, 505, 508, 512, 513, 514,
	515, 516, 518, 520, 524, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 465, 239, 240, 241, 242, 510,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 532, 506, 531, 533, 534, 530, 535,
	536, 517, 428, 0, 470, 528, 527, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 492, 474, 475,
	476, 427, 477, 472, 473, 493, 468, 489, 490, 450,
	453, 478, 139, 479, 491, 494, 495, 537, 538, 539,
	482, 496, 488, 487, 480, 469, 497, 498, 454, 452,
	483, 484, 471, 501, 0, 0, 499, 500, 289, 463,
	320, 321, 322, 306, 0, 193, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 455, 0, 0, 281, 235, 0, 0,
	0, 0, 511, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 448, 486, 485,
	436, 445, 0, 0, 177, 437, 0, 444, 438, 442,
	441, 439, 440, 0, 503, 0, 0, 0, 0, 0,
	0, 409, 422, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 420, 0, 0,
	0, 0, 464, 0, 421, 0, 0, 466, 0, 446,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 443, 462,
	467, 189, 525, 460, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 526,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 312, 0,
	0, 509, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 461, 0, 271, 253, 522, 410, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 507, 249, 0, 521, 502, 504, 505, 508, 512,
	513, 514, 515, 516, 518, 520, 524, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 523, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 465, 239, 240, 241,
	242, 510, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 532, 506, 531, 533, 534,
	530, 535, 536, 517, 428, 0, 470, 528, 527, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 492,
	474, 475, 476, 427, 477, 472, 473, 493, 468, 489,
	490, 450, 453, 478, 139, 479, 491, 494, 495, 537,
	538, 539, 482, 496, 488, 487, 480, 469, 497, 498,
	454, 452, 483, 484, 471, 501, 0, 0, 499, 500,
	289, 463, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 455, 0, 0, 281, 235,
	0, 0, 0, 0, 511, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 448,
	486, 485, 436, 445, 0, 0, 177, 437, 0, 444,
	438, 442, 441, 439, 440, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 422, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 0, 0, 0, 464, 0, 421, 0, 0, 466,
	0, 446, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	443, 462, 467, 189, 525, 460, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 526, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	312, 0, 0, 509, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 461, 0, 271, 253, 522, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 507, 249, 0, 521, 502, 504, 505,
	508, 512, 513, 514, 515, 516, 518, 520, 524, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 465, 239,
	240, 241, 242, 510, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 532, 506, 531,
	533, 534, 530, 535, 536, 517, 428, 0, 470, 528,
	527, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 492, 474, 475, 476, 427, 477, 472, 473, 493,
	468, 489, 490, 450, 453, 478, 139, 479, 491, 494,
	495, 537, 538, 539, 482, 496, 488, 487, 480, 469,
	497, 498, 454, 452, 483, 484, 471, 501, 0, 0,
	499, 500, 0, 0, 320, 321, 322, 306, 0, 193,
	114, 289, 35, 104, 86, 0, 0, 0, 0, 0,
	0, 0, 251, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 0,
	121, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 351, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 348, 350, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 87,
	263, 201, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 161, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 1976, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1980,
	312, 0, 0, 0, 1973, 0, 1972, 285, 1974, 1977,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	1978, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 161, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1308, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 1309, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 735, 736,
	737, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 161, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 618, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 626, 627,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 604, 310, 173, 603, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 616, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 617, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 620, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	628, 623, 624, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 161, 114, 289, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 0, 0, 121, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 87, 263, 201, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 161, 114, 289, 1265, 1266, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 1330, 0, 121, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 0, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 87, 263, 201, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 161, 114, 289, 0, 0, 0, 0,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 1321, 0, 121, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 87, 263, 201, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 161, 0, 289, 0, 0, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 626, 627, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 604,
	310, 173, 603, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 628, 623, 624, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 161, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 0, 289, 1265, 1266, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 966, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 964, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 962, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 161,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	960, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 964, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 161, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2433, 0, 121,
	486, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 161, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 964, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 161, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	964, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2098, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 161, 0, 289, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 1693, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 964,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 161, 0, 289, 0, 0, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2537, 0, 121, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 0, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 161, 0, 289, 0, 0, 0, 0,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 486, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 161, 0, 289, 0, 0, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2205, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 0,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 161, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 2381, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 2214, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 161,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 161, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 161, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 1984, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 161, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 0,
	964, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 161, 0, 289, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 124, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 161, 0, 289, 0, 0, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 0, 1701, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 0, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 124, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 161, 0, 289, 0, 0, 0, 1631,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 161, 0, 289, 0, 0, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 0,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 1614, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 161, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 124, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	365, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 366,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 124, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 161,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 161, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 124, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 161, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 161, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 659, 660,
	1673, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 251,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 659, 660,
	1673, 0, 0, 163, 177, 222, 0, 263, 201, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 251,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 659, 660,
	0, 0, 0, 163, 177, 222, 0, 263, 201, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 114, 249, 35, 104, 86, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 109, 0, 214, 255, 0, 275, 0, 98, 0,
	0, 0, 0, 0, 0, 0, 0, 78, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 64, 0, 0, 0, 308, 0, 111, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 841, 0,
	0, 0, 0, 0, 0, 0, 105, 106, 0, 107,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 736,
	737, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 103, 112, 0, 62, 0, 0,
	841, 0, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 0, 0, 102, 97, 96, 0, 0, 829, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 849, 853, 855, 857,
	859, 860, 862, 1120, 866, 863, 864, 865, 0, 0,
	844, 845, 846, 847, 827, 828, 850, 0, 830, 0,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	842, 848, 0, 0, 0, 0, 0, 99, 100, 852,
	854, 856, 858, 861, 0, 0, 1120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 843, 0, 101, 0, 73, 849, 853,
	855, 857, 859, 860, 862, 0, 866, 863, 864, 865,
	0, 0, 844, 845, 846, 847, 827, 828, 850, 0,
	830, 0, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 842, 848, 0, 0, 0, 0, 0, 0,
	0, 852, 854, 856, 858, 861, 0, 0, 0, 0,
	74, 2161, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 34, 1116, 0, 0, 1113, 0, 0, 0, 1115,
	1112, 1114, 1118, 1119, 0, 843, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 36, 0, 0,
	2161, 0, 0, 0, 0, 1116, 0, 0, 1113, 0,
	1751, 1752, 1115, 1112, 1114, 1118, 1119, 0, 0, 0,
	1117, 0, 2143, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2143, 0, 0, 0, 0, 0, 0, 0, 2233,
	0, 76, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1123, 1124, 1125, 1126, 1127, 1128, 1121, 1122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1123, 1124, 1125, 1126, 1127,
	1128, 1121, 1122, 0, 385, 2147, 384, 391, 381, 0,
	0, 0, 0, 0, 0, 0, 2151, 0, 388, 389,
	0, 390, 394, 0, 0, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 2140, 0, 0, 0,
	2142, 2144, 2146, 0, 2148, 2149, 2150, 2152, 2153, 2154,
	2156, 2157, 2158, 2159, 2147, 0, 385, 851, 384, 391,
	381, 0, 0, 0, 403, 2151, 0, 404, 0, 0,
	388, 389, 0, 390, 394, 0, 0, 376, 0, 0,
	0, 0, 0, 2162, 0, 2140, 0, 399, 2169, 2142,
	2144, 2146, 0, 2148, 2149, 2150, 2152, 2153, 2154, 2156,
	2157, 2158, 2159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2179, 0, 0, 0, 403, 0, 2160, 404,
	0, 0, 0, 0, 0, 2172, 0, 0, 0, 0,
	0, 2167, 2162, 0, 0, 2139, 2182, 2183, 0, 0,
	0, 385, 2168, 384, 391, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 389, 0, 390, 394,
	0, 0, 376, 0, 2155, 0, 0, 2160, 0, 0,
	0, 2145, 399, 0, 0, 0, 0, 2173, 0, 0,
	0, 0, 0, 0, 2139, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 379, 378, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 2155, 0, 0, 387, 0, 0, 0,
	2145, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 379,
	378, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 2181, 0, 1972, 0, 0, 387, 0,
	0, 0, 0, 0, 0, 402, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	2175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2174, 2176, 0, 0, 0, 0, 382, 386,
	392, 0, 393, 395, 0, 0, 396, 397, 398, 0,
	0, 400, 401, 377, 379, 378, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 0, 0, 0, 0,
	402, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	382, 386, 392, 0, 393, 395, 2184, 0, 396, 397,
	398, 0, 0, 400, 401, 0, 0, 0, 2170, 0,
	0, 0, 0, 0, 2180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 386, 392, 0, 393,
	395, 0, 0, 396, 397, 398, 0, 0, 400, 401,
}

var yyPact = [...]int{
	25651, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -159, 23619, 23619, -1000, -1000, 1555,
	-1000, 23130, 8460, 24108, 102, 24108, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 360, -1000, 22641, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 280, 26224, 200, 199, 6483, 24108, -282, -1000,
	2172, -1000, -1000, -1000, -1000, 260, 385, 22152, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1098, 50, 385, 483, 494, 651, 651, 9927,
	2172, 222, 68, -1000, 833, 25651, 25357, 262, 24108, -1000,
	911, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 262, -1000,
	-1000, -1000, 2172, 2172, -1000, 24108, 24108, -39, 1022, -1000,
	243, 223, 219, 909, -1000, -1000, -1000, -1000, -1000, 2077,
	-1000, 24108, 1820, 24108, -1000, 1294, 233, 26276, 1945, 880,
	408, 1837, -1000, -1000, 1786, -1000, 60, 105, 121, 501,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 83, -1000, 2002,
	-1000, -1000, 47, -1000, -1000, 48, -1000, -1000, -1000, -81,
	-1000, -1000, -1000, -1000, -1000, -153, -153, 574, 1145, 6483,
	-1000, 1152, -1000, 2352, -1000, -1000, -1000, -1000, 4015, 7959,
	7959, 7959, 7959, -1000, -1000, 1652, 6483, 1781, 1778, -1000,
	-1000, -1000, -1000, 908, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7467, -1000, 1775, 1770,
	1769, 1768, 1766, 1765, 1764, 1763, 1761, 1760, 1759, 1586,
	1749, 1481, 1479, 1748, 1744, 1738, 7959, 1457, 1586, 1586,
	1737, 1736, 1735, 1731, 1729, 1702, 1701, 1697, 1695, 1693,
	1689, 1686, 1684, 1683, 1677, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	355, -1000, 905, 757, -1000, 1676, 1938, 2017, 1613, 2050,
	1992, 1985, 1981, 1979, 58, 277, 277, 277, 347, 277,
	354, -1000, -1000, -1000, -1000, -1000, -1000, 411, -1000, -1000,
	-1000, -1000, 739, 24108, -1000, 1619, 851, 2018, 245, 851,
	241, 225, 2017, 2017, -91, -110, 851, 851, -110, 54,
	-1000, -1000, -1000, 1058, 220, 1058, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1999, 1996, 280, 280, 289, -1000, -166,
	-1000, -1000, 467, -1000, 452, -1000, 1294, 232, 227, 764,
	1084, -1000, 974, 24108, 24108, 24108, 974, 974, 13350, 12861,
	-1000, 2017, 1613, -1000, 1569, 1874, 1613, 280, 280, 280,
	280, 280, 280, 280, 24108, 5491, 5491, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 279, -1000, -1000, -1000, -1000,
	-1000, 228, 1672, -1000, 24108, 215, 2017, 1938, 2017, -1000,
	-1000, 894, 1266, 1448, -1000, -1000, 243, 945, -1000, 555,
	-1000, -1000, -1000, -1000, 24108, 214, -1000, 1440, 1669, -1000,
	327, 797, 767, -1000, 122, 26361, 19707, 1294, 19707, 24108,
	-1000, -1000, -1000, -1000, -1000, -1000, -84, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-45, -1000, -45, 6483, 6483, 6483, 6483, 6483, -1000, 316,
	6975, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7959, 7959,
	7959, 7959, 7959, 7959, 7959, 7959, 7959, 7959, 7959, 7959,
	1650, 989, 7959, 7959, 7959, 1874, 2028, 748, -1000, -1000,
	-1000, -1000, -1000, 1018, 1145, 6483, 6483, 24108, 25738, 6483,
	6483, 25781, 6483, 1968, 1968, 3022, 24108, 6483, -1000, 1567,
	1566, -1000, -1000, 1105, 6483, -1000, -1000, 6483, 7959, 6483,
	-1000, -1000, -1000, -1000, 1147, 1968, 6483, 6483, 1968, 1968,
	1968, 1034, 1968, 1968, 1968, 1968, 1968, 1968, 1968, 24108,
	1911, 29, -1000, -1000, -1000, 1605, -1000, 1633, 1633, 1605,
	1605, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1667, 1664, -1000, -1000, 1628, 1628, 1628, 1605, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1659, 1659, 1662, 1659, 24108, 2017, -282,
	4999, -1000, -285, 1938, 6483, -1000, -1000, 6483, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 345, 277, -1000, 24108,
	1051, 19707, 1294, 1465, 24108, 277, 289, -1000, 24108, 739,
	1956, 24108, 2032, 7959, 19707, 1058, 2032, 1058, -1000, -1000,
	-1000, 851, 851, -1000, -1000, -1000, -1000, 1058, 1058, -1000,
	-1000, -104, 2032, 2032, -105, 24108, 24108, 277, 24108, -1000,
	-1000, -1000, -1000, 24108, -1000, -1000, 24108, 19707, 12372, -1000,
	-140, 480, 459, 462, -1000, -1000, 318, 307, 11883, 266,
	19707, 3514, -1000, -1000, 974, 974, 974, 3514, 3514, 872,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1938, -1000, -1000,
	-1000, -1000, 24108, 19707, 1294, 24108, 24108, 24108, 25357, -1000,
	710, -1000, -1000, 9438, 886, 710, 1431, 24108, 1836, -283,
	-1000, 11394, 24108, 24108, -1000, -1000, -283, -1000, 10905, 24108,
	1938, -1000, 1938, 2580, -1000, 2016, -1000, 243, 170, -1000,
	-1000, -1000, -1000, -1000, -1000, 858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 738, -1000, 24108, -1000, -1000,
	122, 19707, 1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	116, -1000, -1000, 142, -1000, 342, -9, 935, -1000, -1000,
	39, 137, 39, 1145, -1000, 1064, 1064, 1056, -1000, 328,
	-1000, -1000, -1000, -1000, 1652, -1000, -1000, -1000, 1315, 2243,
	-1000, 1038, 1038, 910, 910, 910, 910, 910, 1094, 1094,
	-1000, -1000, -1000, 4015, 1650, 7959, 7959, 7959, 235, 1258,
	2047, -1000, 6483, 1042, -1000, 6483, 1489, 1013, 856, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1565,
	574, 1563, 1435, 2072, 1562, 6483, -1000, -1000, 6483, 1206,
	5991, -1000, -1000, -1000, 1557, 850, 1538, -1000, -1000, -1000,
	1537, 687, 1534, 1424, 1533, 733, 6483, 914, 903, 6483,
	6483, 6483, 6483, 1532, 6483, 6483, 6483, 6483, 6483, 6483,
	6483, -1000, 6483, 17, -1000, -1000, -1000, -1000, 1254, -1000,
	1253, -1000, -1000, -1000, 1428, 1428, -1000, 1245, -1000, -1000,
	-1000, -1000, 1235, -1000, -1000, 1232, -1000, -1000, -1000, -1000,
	900, -1000, 1145, -1000, 1422, -1000, 785, 724, -1000, 1192,
	21663, 24108, 12, -1000, 1944, 796, -1000, -9, 615, 1819,
	1909, 24108, 21174, -1000, 1649, 899, -1000, -1000, 6483, -1000,
	1813, 24108, -1000, 24108, 2032, 2032, 851, 25357, 1058, 24108,
	1058, -1000, -1000, 1058, -1000, 847, -1000, 24108, -1000, -1000,
	-1000, -1000, 12, 796, 2236, 607, -1000, -1000, -1000, -1000,
	24597, 24597, 10416, 24597, -1000, 1647, 1645, -1000, -1000, 475,
	437, 433, -1000, -1000, 341, -1000, -1000, 615, -1000, -1000,
	-1000, 1639, 1020, -1000, -1000, 7959, -1000, 3514, 3514, 3514,
	-1000, -1000, 15306, -1000, -1000, 723, 615, 1834, 715, -1000,
	715, -1000, 2032, 5491, -1000, 12372, -1000, -1000, 20685, -1000,
	20196, 2032, -289, 666, -1000, 1918, 617, -1000, 1638, -1000,
	891, 1897, -1000, 562, -1000, 1019, 890, -1000, 617, 887,
	1892, 562, -1000, -1000, -1000, 832, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -40, -1000, -1000, 24108,
	1440, 884, 1000, 665, -1000, 314, 827, 807, -1000, 19707,
	55, 19707, -1000, 19707, -1000, -1000, 231, -1000, 24108, 1936,
	-1000, -1000, -1000, 1420, 1923, -1000, -1000, -1000, -1000, -1000,
	882, -1000, 235, 1258, 2029, -1000, 7959, 7959, 2015, 991,
	-1000, 6483, 1037, 25748, 1113, 14328, 24108, -1000, -1000, 6483,
	6483, -1000, 2008, 1998, -1000, 6483, 6483, 1354, -1000, 24108,
	-1000, -1000, -1000, 14328, -1000, 7959, -1000, 6483, 1928, -1000,
	-1000, 1901, 1895, 1783, 878, -1000, 1779, 1631, 1552, 1536,
	1485, 1441, 1426, 1145, -1000, -1000, 1531, 1522, 877, -1000,
	875, 1520, 873, 868, 4999, -1000, -125, 6483, 6483, 6483,
	1902, -1000, -1000, 1619, 1049, 1637, -83, 1008, -1000, 301,
	19707, 209, -1000, 1831, 103, -1000, 1909, -1000, 410, -1000,
	1635, 24108, 635, -1000, 789, 25651, -1000, 24108, 1145, -1000,
	1294, 851, 2032, -1000, -1000, 2032, -1000, 851, -1000, 851,
	1058, 24108, -1000, -83, 301, 24108, 12372, 12372, 12372, 12372,
	-1000, 1866, 1864, -1000, 1879, 1872, 1878, 24108, 12372, 1619,
	-1000, 24977, -1000, -1000, -1000, -1000, -1000, 1874, 853, 2133,
	490, 6483, 6483, -1000, -1000, -1000, 425, 19707, 1417, 266,
	-1000, -1000, -1000, -1000, -1000, 24108, 24108, 2057, -1000, 695,
	-1000, -1000, 787, -1000, 2057, -1000, 1230, 1405, 1087, -283,
	4999, 230, 24108, -283, 24108, 4999, -1000, 24108, 213, -283,
	2580, 1224, -1000, -1000, -1000, 2064, 19707, 1294, 950, 947,
	-1000, 40, -1000, 112, 295, 1404, -1000, 351, 1017, 350,
	-1000, -1000, 7959, -1000, -1000, -1000, -1000, 1145, 6483, 1519,
	-1000, 420, 420, 1518, -1000, 1605, 1633, -1000, 1605, 1628,
	1605, 420, 420, 1516, -1000, 1114, 1415, -1000, -1000, 1395,
	1389, 6483, -1000, 1505, 2421, 655, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1394, -1000, -1000, -1000, 1217, -1000, 1214, -1000, -62,
	-55, 1145, 1145, -1000, -1000, 1910, 1949, 1937, 8949, 1148,
	-1000, -1000, 19218, -1000, 288, -1000, -1000, -1000, 349, 42,
	1188, 275, -1000, 1490, 24108, -1000, -1000, -1000, -1000, -1000,
	1008, 1008, 1008, 8949, 262, 602, 779, 12372, 24108, -1000,
	18240, 1504, -1000, 615, 2032, -1000, -1000, 2032, 2032, 851,
	-1000, 1148, 288, 699, -1000, 1012, 1802, 1826, 1802, -1000,
	-1000, -1000, -1000, 1853, -1000, 1849, -1000, -1000, 699, -1000,
	-1000, -1000, -1000, -1000, 490, -1000, 2012, 412, 412, 412,
	841, 836, -1000, 665, 1503, -1000, -1000, -1000, -1000, 2054,
	2049, 18729, 2054, -1000, -289, 2097, -1000, 1499, 652, -283,
	-1000, -1000, 617, -1000, -1000, -1000, -283, -1000, 617, -1000,
	-1000, -1000, -1000, -1000, 1294, -1000, 96, -1000, -1000, -1000,
	-1000, -1000, -1000, -28, -1000, 24108, 1392, 24108, -1000, 1145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 6483, -1000, -1000, -1000, 1381,
	-1000, -1000, 6483, -1000, 1498, 1496, -287, -47, 2044, 2042,
	-1000, -1000, 222, 24108, 1495, 641, -1000, -1000, -1000, 25830,
	564, -1000, 24108, 1079, 412, 277, 412, 1078, 1627, -1000,
	-1000, -1000, 1391, -15, -1000, -1000, -1000, 1380, 1379, 1175,
	-1000, -1000, 1326, 768, 2, -1000, -1000, -1000, -1000, -1000,
	-1000, 1626, 14328, 14817, 1375, 1494, 24597, 12372, 18240, 660,
	-1000, 774, -1000, -1000, -1000, -1000, -1000, 2032, -1000, -1000,
	2052, 24108, 4999, -1000, -1000, 6483, 1624, -1000, 6483, -1000,
	-1000, -1000, -1000, -1000, 1622, 1922, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6483, 6483, -1000, -1000, -1000, 24108, -1000,
	617, 617, 615, -1000, -1000, -105, 77, -105, 1332, -1000,
	1322, -1000, -1000, -289, 1357, -1000, 2041, 1353, 1314, -1000,
	1619, 26074, 8949, 26278, -1000, -1000, 24108, 24108, -1000, 24108,
	24108, 277, 6483, -1000, -1000, 224, -1000, -1000, 82, -1000,
	-1000, 1285, 323, -1000, 16773, -1000, -1000, -1000, -1000, -1000,
	-45, 2032, 660, 774, -1000, -1000, 924, -1000, 2017, -1000,
	-1000, 1145, 24108, 1145, 17751, -1000, 2040, 2038, 1145, 574,
	562, -1000, -77, -61, -1000, 1348, -1000, -1000, -1000, -291,
	-1000, 1346, -54, -1000, -1000, 1948, 261, 26025, -1000, 1008,
	1008, 656, 1008, 1008, 1008, 1008, 194, 190, 1008, 1008,
	1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
	1008, 1008, 1616, -1000, -1000, 26278, -1000, -1000, 1048, 7959,
	-1000, -1000, 1344, 14817, 448, 450, 1615, -1000, 164, 2091,
	-1000, 1077, 1065, -1000, 24108, -1000, 1614, 1812, 125, 1611,
	-1000, 1608, 1606, 24108, 1268, 293, 1343, -1000, -1000, 79,
	-1000, -1000, 829, -1000, 1605, 6483, -1000, -105, 2052, -1000,
	-1000, 820, 819, -1000, -1000, -1000, -1000, 283, -60, -61,
	-1000, 2036, -56, 2034, 2033, 1011, -1000, 1604, -1000, 2031,
	222, -1000, 2030, 26074, -1000, 1174, 1172, 1008, 1008, 1167,
	1337, 1334, 1333, 1008, 1008, 1166, 1328, 24977, 1164, 1161,
	1155, 1261, 1325, 460, 1246, 1190, 1146, 24108, 1600, 1313,
	-1000, -1000, 1258, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1131, 1599, -122, -1000, -1000, 1596,
	16773, 160, 160, 16773, 16773, 16773, 1595, 337, -1000, -29,
	-1000, -1000, -1000, 16773, 1934, 1237, -1000, 2017, -1000, -1000,
	17262, 1588, 1111, -47, 2026, -1000, 1314, 2025, 1314, 1314,
	1323, 24108, 1314, -1000, 156, -1000, -1000, -1000, 14328, 14328,
	-1000, -1000, -1000, -1000, 1320, 1318, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 217, 24108,
	813, -1000, 1010, 1491, 6483, 1586, -206, 16773, 801, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 794, 791, 762, 16773,
	-1000, -1000, -1000, 162, -1000, 154, -1000, -1000, 1934, -1000,
	-1000, -1000, 1995, 13839, -68, -1000, 1316, -1000, 1314, -1000,
	-1000, 74, 745, -1000, -1000, 143, 218, 205, -1000, 303,
	-1000, -1000, -1000, -1000, -1000, -1000, 206, 740, -1000, 1313,
	1298, -1000, 1197, -1000, 1824, -1000, 43, 737, -1000, -1000,
	-1000, -1000, 736, -1000, -1000, 1008, 1289, 98, -1000, -1000,
	-1000, -1000, 24108, -1000, 709, -1000, -1000, -1000, 773, -1000,
	-1000, -1000, -1000, -1000, 1283, -1000, 24108, 139, 1110, 7959,
	1581, 7959, 1580, 144, 1579, -1000, -1000, -1000, -1000, -1000,
	337, -1000, 1823, 1822, 2071, -1000, -1000, -1000, -1000, 154,
	154, 154, 154, 41, 1106, -1000, 1465, 510, -1000, 1007,
	-1000, 16284, 24108, 996, -1000, 1574, 2022, -1000, 2154, 24108,
	1739, 24108, 1573, 988, 7959, -1000, -1000, 2089, -1000, 2079,
	439, 439, -1000, -1000, -1000, 24108, 4507, -1000, 565, 1242,
	-1000, 236, 150, -1000, 705, -1000, 664, 15795, 1100, 1493,
	-1000, -1000, -1000, 1168, 171, -1000, -1000, -1000, 1145, 24108,
	72, 658, -1000, 1443, 127, -1000, -1000, -1000, 600, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1173, -1000, 236, 1877,
	-1000, 1099, -1000, 978, -1000, 1658, 373, -1000, 1118, -1000,
	1658, 136, -1000, 249, 1572, -306, -1000, -1000, 596, -1000,
	1429, 431, 6483, -1000, -1000, 136, 26074, -1000, 6483, 590,
	-1000, 26074, 580, -1000, -1000,
}

var yyPgo = [...]int{
	0, 118, 2574, 200, 159, 148, 199, 2573, 2572, 1966,
	1965, 2571, 2570, 2569, 2568, 2567, 2565, 2563, 2562, 2561,
	2560, 2559, 2558, 2557, 2556, 2554, 2553, 2552, 197, 2551,
	2550, 2549, 2548, 2534, 2533, 2532, 2531, 2529, 2528, 2525,
	2524, 2522, 2521, 2520, 2516, 2513, 131, 2512, 1962, 2511,
	2510, 2509, 2508, 2507, 164, 2506, 2505, 2504, 2503, 2495,
	2494, 2488, 2487, 2486, 2485, 2479, 2466, 2462, 2461, 123,
	2460, 2458, 2456, 2455, 2454, 191, 178, 55, 2453, 45,
	67, 142, 203, 51, 205, 201, 138, 120, 59, 2452,
	1978, 2451, 115, 179, 109, 26, 2450, 128, 2449, 114,
	47, 34, 194, 97, 48, 60, 83, 2445, 171, 81,
	2439, 2438, 93, 2437, 57, 2436, 73, 69, 85, 27,
	2435, 2434, 2433, 70, 2431, 2430, 2429, 2428, 135, 2427,
	87, 50, 2426, 2425, 2424, 2423, 2422, 29, 2418, 40,
	2416, 2415, 2414, 2413, 61, 2412, 2411, 12, 20, 18,
	2410, 17, 3, 2409, 172, 99, 74, 107, 2408, 373,
	2407, 2406, 2404, 116, 2403, 384, 2402, 2401, 2400, 2399,
	9, 2397, 169, 2396, 2395, 2393, 41, 147, 153, 2392,
	2391, 100, 56, 89, 96, 2390, 2389, 90, 170, 16,
	33, 0, 165, 35, 2388, 2387, 2385, 202, 152, 150,
	182, 151, 204, 129, 2383, 2380, 49, 2379, 121, 2378,
	101, 7, 2376, 145, 2375, 180, 136, 2374, 156, 2373,
	198, 2, 98, 25, 222, 2372, 2371, 2357, 130, 2356,
	2355, 76, 122, 2354, 2351, 2347, 24, 2346, 30, 21,
	2345, 92, 2344, 215, 2343, 134, 102, 141, 127, 112,
	176, 181, 64, 113, 1008, 104, 72, 19, 2342, 177,
	2340, 190, 196, 2339, 139, 2331, 193, 350, 161, 2330,
	137, 8, 2329, 2326, 10, 2325, 23, 2323, 2322, 2318,
	2317, 6, 2316, 2313, 2311, 1, 4, 2307, 5, 162,
	63, 95, 2306, 86, 189, 2303, 2302, 2300, 2299, 2297,
	212, 2288, 2287, 2267, 2265, 2264, 2262, 2261, 2260, 77,
	38, 2257, 2255, 2236, 2231, 71, 103, 2228, 273, 157,
	2227, 39, 2226, 2225, 28, 2223, 32, 2221, 2220, 2219,
	14, 140, 2218, 2217, 15, 2213, 2212, 11, 13, 2211,
	2210, 54, 2208, 58, 31, 66, 80, 2205, 22, 62,
	108, 2204, 2200, 187, 192, 155, 2199, 125, 185, 207,
	2198, 166, 2197, 2196, 2195, 2184, 2182, 2176, 2175, 1075,
	2160, 2159, 186, 53, 175, 2142, 2139, 146, 2138, 117,
	84, 82, 154, 2137, 143, 2132, 2129, 75, 2128, 2127,
	2124, 2116, 2114, 184, 174, 2112,
}

//line mysql_sql.y:7861
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 391, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 73, 73, 63, 62, 340, 340, 339, 339, 338,
	338, 337, 337, 337, 336, 336, 336, 335, 335, 334,
	334, 333, 333, 331, 331, 332, 330, 329, 329, 329,
	327, 327, 325, 325, 326, 326, 320, 320, 323, 323,
	321, 321, 321, 321, 324, 319, 319, 319, 318, 318,
	61, 61, 61, 256, 256, 60, 60, 270, 270, 270,
	270, 270, 268, 268, 268, 268, 268, 268, 267, 267,
	266, 266, 271, 271, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 55, 55, 55, 55, 58, 58,
	58, 59, 265, 265, 265, 56, 57, 57, 255, 255,
	260, 260, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 264, 264, 264, 262, 262, 261,
	261, 263, 263, 49, 49, 49, 52, 51, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 50, 50, 50,
	50, 50, 50, 47, 47, 47, 47, 47, 46, 46,
	48, 48, 253, 253, 252, 66, 66, 66, 66, 66,
	66, 66, 65, 65, 68, 68, 67, 54, 54, 54,
	54, 54, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 364, 364, 364, 366, 366, 195, 196, 392, 194,
	194, 194, 360, 360, 361, 362, 363, 363, 363, 64,
	7, 7, 44, 45, 384, 384, 300, 300, 208, 208,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 303, 304, 204, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 35, 34, 34, 242, 242, 33, 393,
	393, 178, 178, 32, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 43, 314, 314, 395, 395, 395, 41,
	42, 299, 299, 299, 39, 38, 37, 36, 36, 31,
	31, 30, 30, 201, 201, 203, 203, 199, 394, 394,
	276, 276, 202, 202, 29, 29, 29, 200, 200, 177,
	198, 198, 198, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 17, 19, 250, 250, 247, 18,
	14, 13, 16, 12, 15, 5, 5, 5, 5, 9,
	9, 10, 87, 87, 118, 118, 373, 373, 369, 369,
	370, 370, 370, 371, 371, 372, 372, 69, 308, 308,
	308, 308, 308, 308, 4, 307, 307, 307, 307, 307,
	307, 390, 390, 349, 349, 349, 350, 108, 108, 103,
	103, 309, 309, 222, 351, 351, 317, 317, 316, 316,
	315, 315, 106, 106, 107, 107, 90, 90, 76, 76,
	322, 322, 322, 322, 328, 328, 297, 297, 144, 144,
	173, 173, 174, 174, 80, 80, 81, 81, 81, 81,
	81, 81, 357, 357, 359, 359, 358, 105, 105, 101,
	101, 102, 102, 102, 100, 100, 99, 98, 98, 97,
	95, 95, 95, 96, 96, 96, 83, 83, 82, 82,
	82, 82, 82, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 84, 84, 365, 365, 365,
	301, 301, 301, 306, 306, 156, 156, 157, 157, 155,
	155, 85, 85, 86, 86, 86, 86, 154, 154, 153,
	88, 88, 94, 93, 93, 89, 89, 89, 89, 164,
	164, 163, 163, 163, 163, 72, 74, 74, 75, 111,
	111, 162, 161, 161, 161, 110, 110, 109, 109, 104,
	104, 92, 92, 92, 92, 160, 91, 91, 158, 389,
	389, 388, 388, 387, 385, 385, 385, 386, 386, 386,
	386, 342, 342, 342, 342, 342, 187, 187, 187, 193,
	193, 186, 186, 186, 186, 186, 197, 192, 192, 188,
	188, 189, 189, 189, 3, 3, 3, 3, 23, 23,
	23, 23, 27, 27, 367, 367, 20, 374, 377, 375,
	375, 378, 378, 378, 379, 379, 379, 380, 380, 21,
	376, 381, 381, 381, 251, 251, 248, 249, 249, 246,
	245, 245, 245, 383, 383, 382, 382, 382, 190, 190,
	22, 241, 241, 243, 244, 244, 235, 235, 235, 235,
	26, 239, 239, 240, 240, 240, 240, 240, 236, 236,
	238, 238, 234, 234, 234, 234, 234, 25, 233, 233,
	231, 231, 229, 229, 230, 230, 228, 228, 228, 232,
	232, 24, 24, 78, 77, 77, 77, 77, 77, 79,
	302, 302, 272, 272, 275, 275, 282, 282, 283, 283,
	281, 281, 288, 288, 287, 287, 286, 286, 285, 285,
	284, 284, 284, 284, 279, 279, 278, 278, 273, 273,
	273, 273, 273, 274, 274, 274, 277, 277, 280, 280,
	135, 135, 136, 136, 136, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 347, 347, 348, 138, 138, 138,
	142, 142, 142, 142, 142, 142, 137, 137, 139, 139,
	119, 119, 117, 117, 112, 112, 113, 113, 114, 114,
	115, 115, 116, 116, 116, 116, 116, 116, 258, 258,
	345, 345, 346, 346, 341, 341, 341, 344, 344, 344,
	344, 344, 343, 343, 120, 171, 171, 171, 191, 191,
	191, 170, 170, 170, 134, 134, 133, 133, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 257, 257, 205, 205, 206, 206, 151,
	150, 150, 150, 150, 150, 148, 149, 147, 147, 147,
	147, 147, 146, 146, 145, 145, 145, 237, 237, 143,
	143, 141, 141, 141, 140, 140, 140, 289, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 214, 214, 219, 219, 356, 356, 355, 121, 121,
	121, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	130, 130, 130, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 313, 313,
	313, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 368, 368, 368, 352, 352, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 168, 168,
	168, 167, 167, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 167, 223, 223, 224, 224, 310, 310,
	310, 310, 310, 310, 311, 311, 312, 312, 312, 312,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 212,
	165, 165, 165, 225, 220, 220, 221, 221, 215, 215,
	215, 215, 215, 215, 215, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 216, 216, 218, 218, 227,
	227, 227, 226, 226, 226, 226, 226, 226, 226, 132,
	132, 132, 132, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 123, 123, 123, 123, 127, 127, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 128, 128, 128, 128, 126, 126, 126,
	126, 126, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 70, 71,
	71, 125, 172, 172, 290, 290, 293, 293, 291, 291,
	292, 294, 294, 294, 295, 295, 295, 296, 296, 296,
	298, 298, 176, 176, 176, 183, 183, 175, 175, 184,
	184, 185, 185, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 0, 2, 7, 0,
	1, 0, 1, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 11, 0, 1, 7, 1, 4, 1,
	1, 3, 4, 3, 0, 1, 1, 0, 2, 7,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 5, 1, 1,
	0, 3, 0, 1, 1, 2, 4, 4, 4, 0,
	1, 10, 9, 2, 2, 6, 10, 14, 18, 5,
	0, 1, 0, 6, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	0, 1, 1, 3, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 4, 1, 3, 3, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 1, 7, 7, 7, 7, 8, 5, 0, 1,
	0, 1, 1, 1, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 5,
	6, 4, 1, 1, 2, 0, 1, 1, 2, 5,
	0, 1, 1, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 3, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 3, 5, 2, 2, 2, 2,
	1, 1, 2, 5, 6, 6, 6, 1, 1, 1,
	1, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 5, 4, 4, 5, 5, 5, 5,
	4, 5, 5, 5, 5, 5, 5, 5, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 5, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -391, -2, -1, -3, -73, -4, -69, -5, -6,
	-8, -53, -65, -67, -68, -28, -7, -64, -46, -47,
	-49, -55, -60, -61, -62, -63, -70, -71, -72, -80,
	-23, -22, -21, -20, 390, 12, 426, -9, -10, -357,
	-11, 229, -194, -195, -196, -392, -29, -30, -31, -36,
	-37, -38, -39, -41, -42, -43, -32, -33, -34, -35,
	-45, -44, 206, -48, 61, -50, -51, -52, -56, -57,
	-58, -59, 320, 326, 379, 388, 510, 511, 46, -81,
	-83, -24, -25, -26, -27, 202, 14, 459, -12, -15,
	-13, -16, -14, -18, -19, -17, 224, 223, 37, 286,
	287, 324, 222, 203, 13, 135, 136, 138, 139, 30,
	-82, 67, 204, -84, 10, 512, 419, -90, 38, -117,
	-191, 70, -179, -182, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	429, 498, 302, 456, 241, 265, 350, 268, 275, 135,
	154, 148, 176, 168, 143, 245, 246, 77, 138, 412,
	87, 397, 376, 141, 260, 262, 264, 267, 247, 164,
	159, 259, 243, 510, 157, 248, 39, 249, 181, 250,
	251, 461, 393, 301, 399, 272, 374, 158, 394, 263,
	396, 183, 187, 404, 326, 152, 153, 401, 406, 180,
	221, 42, 458, 233, 407, 185, 179, 175, 415, 276,
	274, 178, 151, 174, 244, 50, 189, 188, 190, 370,
	371, 372, 373, 252, 253, 314, 403, 171, 160, 305,
	144, 22, 410, 228, 398, 327, 254, 269, 277, 184,
	186, 235, 240, 460, 378, 239, 273, 408, 156, 232,
	261, 227, 411, 145, 320, 329, 255, 139, 266, 405,
	414, 49, 342, 150, 142, 218, 136, 237, 242, 11,
	256, 257, 258, 279, 278, 270, 172, 234, 177, 162,
	149, 173, 137, 236, 413, 343, 508, 303, 359, 170,
	167, 238, 211, 409, 400, 140, 363, 344, 165, 280,
	505, 506, 507, 315, 300, 281, 282, 163, 225, 392,
	283, 285, 369, 293, 345, 377, 351, 346, -90, -48,
	-10, -9, -82, -83, -117, 209, -198, 23, 374, -54,
	375, 206, 67, -191, -5, -4, -69, -46, -80, -197,
	-191, 286, -197, 209, -191, 239, 358, -300, 214, -267,
	-241, 240, -266, -243, -269, -244, 31, 202, 204, 203,
	236, 14, 324, 210, 12, 10, 325, 222, 24, 25,
	27, 13, 326, 328, 28, 329, 332, 333, 334, 41,
	337, 338, 229, 70, 73, 247, 247, -221, -215, 94,
	230, -217, -210, -211, -213, -337, -331, -209, 67, 119,
	120, 127, 95, -212, -289, 35, 97, 466, 427, -166,
	-167, -168, -169, -191, -332, -330, 73, 78, 81, 84,
	85, 83, 82, 161, 80, 74, 132, -83, 70, -352,
	474, -180, 494, 475, 493, 46, -305, -312, 208, -310,
	166, 225, 162, 12, 125, 369, 130, 163, 471, 490,
	429, 497, 468, 469, 463, 464, 465, 467, 476, 478,
	489, -313, 485, 495, 496, 72, 71, 488, 487, 472,
	473, 479, 462, 470, 480, 481, 486, 491, 492, 501,
	502, 498, 308, 87, 309, 310, 419, 304, 311, 214,
	374, 55, 312, 313, 314, 315, 316, 426, 317, 56,
	318, 307, 229, 359, 319, 165, 182, 431, 430, 432,
	423, 420, 418, 421, 422, 424, 425, 482, 483, 484,
	-263, -261, -191, -74, -75, 503, -99, -100, -159, 19,
	6, 7, 8, 9, -302, 302, 359, 239, -235, -233,
	283, 335, 219, 218, 88, 419, 208, -369, -370, 199,
	200, 201, -359, 452, -358, -191, 310, 26, 209, -40,
	-314, -299, 400, 399, -202, 398, 391, 402, 393, 202,
	453, -176, 345, 377, 235, 416, 417, 322, 378, 404,
	405, 394, 87, 169, 166, 302, 359, -369, 140, 137,
	-254, 140, 93, 145, 144, -254, 239, 358, 40, -260,
	369, -259, -261, 404, 405, 415, 71, 72, 403, -176,
	87, -100, -159, -99, -81, -83, -357, 302, 359, 239,
	210, 209, 211, 419, 286, -301, -365, 31, -306, 196,
	197, 198, 32, 33, -1, -192, -189, -182, 70, 71,
	72, -106, 231, -117, 133, -106, -100, -99, -100, -117,
	-170, -191, 376, 103, -54, -54, 375, -360, -361, -362,
	-364, 206, 375, 374, 133, 15, -197, 65, -117, -243,
	239, -267, -241, 35, 64, 134, 212, 134, 64, 67,
	322, 302, 359, 323, 419, 209, 335, 211, 239, 336,
	302, 359, 209, 211, 419, 239, 302, 209, 211, 359,
	239, 336, 391, 392, 211, 26, 327, 330, 331, 392,
	-318, 415, -318, 134, 93, 90, 91, 92, -215, 110,
	-226, 103, 104, 105, 106, 107, 108, 109, 116, 115,
	126, 119, 120, 121, 122, 123, 124, 125, 117, 118,
	113, 94, 111, 112, 96, -83, -215, -221, -213, -213,
	-213, -213, -289, -219, -215, 67, 67, 133, -215, 67,
	67, 67, 67, 67, 67, 67, 67, 67, -311, 67,
	67, -223, -224, 67, 67, 73, 73, 67, 67, 67,
	-213, 73, -224, -224, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 134,
	-123, -127, -124, -126, -125, -129, -128, 166, 167, 130,
	170, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 30, 182, 225, 162, 163, 164, 165, 183, 148,
	168, 457, 191, 149, 192, 150, 193, 151, 194, 152,
	153, 195, 154, 157, 158, 159, 156, 133, -100, 134,
	67, -76, 38, -102, 21, -84, -83, 20, 31, 32,
	31, 32, 31, 32, 31, 32, -367, 209, 452, -231,
	214, -231, -231, 210, -231, 209, -371, 147, 134, -359,
	-105, 67, -201, 111, 23, 237, -201, -395, 210, 401,
	42, 238, 237, -101, -102, -101, 395, 392, -276, 396,
	397, -202, -201, -201, -202, 209, 211, 419, -393, -394,
	15, 113, 237, -393, 30, 30, -300, -300, -372, 213,
	408, 459, 143, 144, 145, -243, 239, 239, 134, 103,
	23, -262, 103, 114, -261, -261, -261, -262, -262, -137,
	40, -190, 130, -191, 73, -137, 40, -101, -84, -83,
	68, 68, -300, -300, -300, -300, -300, -300, -300, -197,
	-85, -86, 121, -215, -191, -85, 38, 392, -307, 46,
	-80, 67, 30, 67, -191, -308, 46, -80, 67, 30,
	-101, -76, -102, 133, 78, 73, -54, 68, 134, -363,
	84, 85, -366, 180, 172, -191, -66, 73, -3, -4,
	-5, -6, -28, -46, -80, -333, -331, 67, 31, 368,
	64, 15, -268, 209, 419, 321, 235, 211, 302, -266,
	-250, -247, -245, -190, -243, -246, -245, -271, -170, 392,
	-77, 380, -77, -215, -215, -215, -215, -215, 83, 94,
	300, 84, 85, -210, -227, 31, 281, 282, -211, -211,
	-211, -211, -211, -211, -211, -211, -211, -211, -211, -211,
	-218, -225, -289, 67, 113, 111, 112, 96, -213, -211,
	-211, 68, 134, -356, -355, 98, -215, -215, -191, -353,
	-354, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 312, 307, 313, 311, 304, 319, 314, 315,
	165, 450, 451, 444, 445, 446, 447, 448, 449, -220,
	-221, -220, -215, -353, -220, -165, 32, 31, -165, -215,
	-368, 298, 297, 299, -103, -191, -220, 68, 68, 68,
	78, -221, -220, -211, -220, -354, -165, -221, -221, -165,
	-165, -165, -165, 121, -165, -165, -165, -165, -165, -165,
	-165, -261, 40, -296, 343, 342, -290, -292, 67, -291,
	67, -291, -290, -290, 67, 67, -293, 67, -293, -293,
	-290, -294, 67, -294, -295, 67, -294, -191, -101, -75,
	-316, -315, -215, 40, 504, -76, -215, -98, -97, -215,
	211, -231, -374, -191, 94, -251, -248, -245, -241, -189,
	-191, -231, -372, -358, 34, -104, -191, -155, 16, -213,
	-245, -393, -155, -394, -201, -201, -203, -394, -199, -394,
	392, -155, -155, -276, -200, -191, -200, -231, -178, -177,
	-191, -178, -374, -251, -93, -88, -92, -89, -94, -158,
	-160, -91, 67, -117, -83, 501, 502, 409, 410, 141,
	144, 143, 31, 368, -265, 368, 31, -241, -259, -255,
	73, 369, -246, -264, 64, 130, -315, -262, -262, -262,
	-264, -264, 129, -76, -374, -250, -241, -191, -119, -117,
	-119, -192, -154, 134, -153, 15, -186, -191, 34, 73,
	133, -154, 73, -119, -390, 64, -309, -222, -351, 503,
	-108, 68, -103, -349, -350, -103, -107, -191, -309, -108,
	68, -349, -76, -76, -184, -185, -175, -181, -188, -189,
	-182, 207, 31, 93, 34, 36, 308, 340, 96, 130,
	20, 97, 166, 129, 310, 427, 309, 202, 59, 430,
	432, 431, 420, 418, 361, 365, 367, 364, 419, 391,
	40, 14, 37, 223, 32, 33, 123, 204, 100, 101,
	226, 35, 224, 85, 44, 23, 62, 15, 17, 18,
	311, 360, 214, 213, 113, 380, 210, 57, 12, 132,
	38, 110, 362, 53, 89, 45, 55, 111, 21, 421,
	422, 41, 379, 388, 455, 230, 125, 312, 313, 60,
	94, 368, 83, 43, 64, 90, 19, 58, 112, 205,
	426, 56, 366, 316, 318, 328, 452, 317, 208, 402,
	10, 307, 428, 30, 222, 54, 209, 99, 212, 84,
	229, 6, 88, 13, 61, 65, 423, 424, 425, 46,
	98, 16, 319, 459, 381, 382, 383, 384, 385, 386,
	387, 191, 192, 193, 194, 195, 271, 217, 215, 219,
	220, 503, 504, 196, 197, 297, 299, 169, 199, 200,
	201, 231, 147, 7, 347, 348, 349, 352, 353, 354,
	355, 356, 357, 358, 511, 390, 23, -54, -361, 133,
	134, -104, -268, -249, -246, -270, 121, 70, -256, 134,
	459, 513, 71, 212, -383, -382, 360, 68, 134, -319,
	213, 426, 73, 514, -319, 83, 300, 84, 85, -289,
	-221, -218, -213, -211, -211, -216, 226, 93, -215, -214,
	-355, 100, -215, 34, 134, 65, 133, 68, 68, 15,
	15, 68, -215, -215, 68, 15, 15, -215, 68, 133,
	68, 68, 68, 65, 68, 134, 68, 134, -215, 68,
	68, -215, -215, -215, -221, 68, -215, -215, -215, -215,
	-215, -215, -215, -215, -298, 344, 78, 78, -172, 73,
	-172, 78, 78, 78, 134, 68, 73, 134, 22, 134,
	-95, 36, 37, -117, 214, -117, -377, 347, 35, -384,
	134, 40, -382, -234, 65, -229, -230, -228, -232, 40,
	-117, 15, -87, -118, -191, 67, 68, 134, -215, -242,
	65, -178, -117, -155, -155, -201, -192, -203, -198, -203,
	-199, 133, -177, -377, -384, 30, -161, -162, -163, -164,
	53, 57, 59, 54, 55, 56, 60, 30, 134, -187,
	-193, 34, -188, 73, -189, -182, -187, -83, -88, -93,
	-187, 67, 67, 142, 145, 145, 144, 212, 67, 103,
	-264, -264, -264, 40, -190, 64, 134, -155, -86, -88,
	-191, 73, -191, 121, -155, -144, 506, 38, 39, 134,
	67, 68, 134, 46, 134, 103, 68, 134, 68, 46,
	133, 376, -191, -331, 68, -270, 134, 212, 133, 133,
	-247, 326, -190, -249, 20, 459, -170, 38, 73, 38,
	68, -216, 93, -213, -210, 68, 101, -215, 99, -121,
	-123, 342, 343, -122, -128, 130, 166, 225, 165, 164,
	162, 342, 343, -137, -191, -215, -215, 68, 68, -215,
	-215, 15, -191, -137, -211, -215, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 134, 68, 68, 68, 134, 68, 134, -315, -322,
	396, -215, -215, -97, -96, 43, -105, 94, 67, -379,
	398, 349, -183, 103, -208, -207, 303, 41, -303, 369,
	355, 356, -248, 239, 64, 292, 293, 294, 295, -228,
	-176, 129, 250, 67, -117, -87, -191, 15, 134, -373,
	133, -1, -191, -241, -201, -155, -155, -201, -201, -203,
	-191, -379, -208, -253, -252, -170, -92, -92, -92, -92,
	53, 53, 53, 58, 53, 58, 53, -163, -253, -94,
	-105, -193, 68, -389, -388, -387, -385, 61, 213, 62,
	-221, -221, 145, -249, -204, 73, -255, -117, -117, -157,
	17, 133, -157, 78, 73, 89, -222, -317, -316, 46,
	-80, -103, -309, -350, -315, -191, 46, -80, -309, -184,
	-181, -189, -182, 78, 15, -246, -241, 121, 121, 70,
	327, -256, 73, 348, 73, 209, 103, 209, -210, -215,
	68, -130, 153, 152, -130, 68, -290, -291, -290, -293,
	-290, -130, -130, 68, 68, 23, 68, 68, 68, -215,
	68, 68, 134, 73, 78, 78, -328, 386, 381, 383,
	44, 45, 34, 35, -112, -113, -114, -120, -115, -170,
	-206, -116, 217, 215, 219, -346, 88, 220, 271, 89,
	210, -380, 77, -375, 73, -191, -381, 77, 350, 132,
	305, 40, 351, 352, 366, 301, 78, 78, 357, -376,
	70, -117, -183, -183, -183, -112, -106, 65, 133, -88,
	-118, -191, 121, 68, -155, -155, -155, -201, -380, -381,
	-155, 134, 103, -110, -109, 64, 65, -111, 64, -109,
	53, 53, -155, -387, -386, 23, -346, -346, -346, 68,
	68, 68, -156, 18, 20, 121, -156, -144, 13, 68,
	-309, -309, -241, -256, 369, -117, 73, -117, -215, 68,
	-215, 68, 68, -297, 505, -326, 381, 20, 20, -80,
	-117, 68, 134, -123, -116, -191, 89, -345, -346, -231,
	-345, 89, 67, 73, -378, 360, 73, 73, 78, 40,
	78, 132, 353, -304, 67, -137, -139, -190, 130, 73,
	68, -187, -88, -191, -155, -373, 133, -155, -100, -252,
	-315, -215, 67, -215, 67, 53, 19, 17, -215, -221,
	-349, -79, -320, -276, 515, 134, -79, 68, 68, -144,
	73, 20, 73, -324, 73, -105, -135, -136, -152, 340,
	241, -232, 245, 77, 246, 376, 247, 210, 249, 250,
	251, 221, 252, 253, 254, 369, 255, 256, 257, 258,
	323, 6, 288, -114, -134, -133, -131, 83, 94, 40,
	340, -132, 77, 129, 264, 242, 265, -151, -205, 64,
	346, 215, 88, 89, 328, -206, -341, -343, -191, -343,
	-191, -341, -341, -231, -215, 20, 459, 304, 40, 78,
	40, 354, -236, -238, -170, 67, -78, -77, -155, -155,
	-101, -104, -342, -191, 215, 20, 20, -327, 386, -323,
	-321, 381, 382, 383, 384, 73, -173, 507, 73, 383,
	34, -272, 231, 134, -152, -183, -183, -176, 129, -183,
	-183, -183, -183, 248, 248, -183, -183, -183, -183, -183,
	-183, -183, -183, -183, -183, -183, -183, -183, -183, 67,
	-131, 83, -211, 73, -139, -140, 40, 263, 259, -141,
	40, 243, 244, -143, 67, 271, 13, 89, 89, -117,
	67, 65, 280, 67, 67, 67, -343, 68, 73, 348,
	73, 304, 68, 134, -290, -215, -79, -100, 68, 68,
	134, -329, 213, -325, 385, -321, 20, 383, 20, 20,
	103, 67, 20, -80, 20, -152, 78, 78, -183, -183,
	78, 73, 73, 73, -183, -183, 78, 73, -193, 78,
	78, 78, 78, 40, 73, -142, 40, 259, 263, 260,
	261, 262, 78, 40, 78, 40, 78, 40, -191, 67,
	-347, -348, 73, 78, 67, -310, -237, 67, -236, -344,
	292, 293, 294, 296, 295, -344, -236, -236, -236, 67,
	-258, -257, 272, 94, 369, -239, -238, -95, 68, -101,
	-191, 215, -336, 67, 78, -326, 20, -324, 20, -324,
	-324, 73, -174, -191, -324, -273, 273, 274, -274, -280,
	276, -137, -137, 73, 73, -138, 242, -119, 68, 134,
	103, 68, -215, -223, -146, -145, 455, -236, 68, 68,
	68, 68, -236, 272, -240, 221, 77, 459, 290, 291,
	-95, -340, 30, 68, -335, -334, -171, -330, -191, 386,
	387, 73, -324, 515, 134, 68, 134, -278, 277, 67,
	-276, 67, -276, 89, 293, 243, 244, 68, -348, 73,
	68, -150, -148, -149, 64, 394, 269, 270, 68, -239,
	-239, -239, -239, 68, -183, 73, 289, -339, -338, -337,
	68, 134, 133, 73, -191, -275, 278, 78, -211, 67,
	-211, 67, -277, 275, 67, -257, -149, 64, -148, 64,
	14, 13, -151, 78, -189, 134, 103, -334, -191, 103,
	-282, 67, 20, 68, -271, 68, -271, 67, 103, -211,
	-147, 266, 267, 30, 144, -147, -338, 40, -215, 133,
	73, -283, -281, 231, -274, 68, 68, 68, -271, 78,
	68, 83, 40, 268, -191, 515, 134, 68, 134, 70,
	-279, 279, 68, 73, -281, -284, 46, 78, 103, -288,
	-285, 67, -152, 233, 113, 73, -288, -152, -287, -286,
	278, 234, 67, 515, 68, 134, 70, 230, 67, -221,
	-286, -285, -221, 68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	624, 625, 626, 627, 0, 0, 0, 395, 396, 0,
	375, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	270, 271, 0, 218, 214, 193, 194, 195, 154, 155,
	156, 157, 276, 0, 0, 0, 0, 0, 0, 474,
	-2, 628, 629, 630, 631, -2, 408, 0, 376, 377,
	378, 379, 380, 381, 382, 383, 259, 260, 261, 256,
	257, 258, -2, 0, 408, 207, 0, 198, 198, 0,
	494, 0, 0, 508, 530, 30, 0, 452, 0, 457,
	812, 848, 849, 850, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 452, 219,
	397, 398, 494, 494, 373, 0, 242, 0, 1442, 246,
	0, 0, 0, 370, 237, 238, 239, 240, 241, 0,
	616, 0, 234, 0, 213, 1501, 0, 0, 0, 0,
	0, 0, 98, 671, 100, 673, 104, 111, 0, 0,
	116, 117, 120, 121, 122, 123, 124, 0, 128, 0,
	130, 133, 0, 135, 136, 0, 139, 140, 141, 0,
	151, 152, 153, 674, 675, 78, 78, 1198, 1096, 0,
	1103, 1104, 1115, 1124, 920, 921, 922, 923, 0, 0,
	0, 0, 0, 930, 931, 0, 943, 1591, 0, 937,
	938, 939, 940, 41, 53, 54, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1069, 907, 848, 0,
	1599, 0, 1619, 1600, 1618, 0, 0, 1054, 0, 1044,
	0, -2, -2, 0, 0, 1568, 0, -2, 1596, 1615,
	1623, 1622, 1593, 1594, 1588, 1589, 1590, 1592, 1601, 1603,
	1614, 0, 1610, 1620, 1621, 55, 56, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1584,
	1585, -2, 1060, -2, 1062, 1063, 1065, 1066, 1067, 1068,
	-2, 1071, 1072, 1073, -2, -2, 1076, 1077, 1078, 1079,
	1080, 1081, 1084, -2, 1086, -2, 1088, 1056, 1057, 1058,
	1059, 1048, 1049, 1050, 1051, 1052, 1053, -2, -2, -2,
	0, 191, 189, 494, 566, 0, -2, 0, 0, 0,
	513, 516, 519, 522, 634, 700, 700, 700, 0, 700,
	0, 721, 677, 678, 679, 698, 699, 413, 409, 410,
	411, 412, 482, 0, 484, 487, 353, 314, 0, 353,
	0, 0, 489, 489, 0, 362, 353, 353, -2, 0,
	324, 325, 326, 319, 0, 319, 330, 331, 332, 342,
	343, 363, 1222, 0, 0, 276, 276, 415, 208, 209,
	197, 199, 0, 203, 0, 196, 1501, 0, 0, 165,
	1568, 170, 0, 1449, 1515, 1464, 0, 0, 1482, 0,
	-2, 489, 0, 495, 0, 494, 0, 276, 276, 276,
	276, 276, 276, 276, 0, 0, 0, 531, 532, 527,
	528, 529, 533, 534, 3, 0, 617, 618, 621, 622,
	623, 0, 0, 456, 0, 0, 489, -2, 0, 374,
	243, 851, 0, 0, 247, 248, 0, 0, 262, 0,
	265, 251, 252, 253, 0, 0, 236, 0, 0, 215,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	108, 105, 112, 115, 125, 132, 0, 144, 146, 149,
	106, 113, 118, 119, 126, 147, 107, 109, 110, 114,
	148, 150, 127, 131, 145, 129, 134, 137, 138, 143,
	0, 79, 0, 0, 0, 0, 0, 0, 1102, 0,
	0, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1096, 0, 926, 927,
	928, 929, 932, 0, 944, 0, 0, 0, 0, 1094,
	1094, 0, 1094, 1090, 1090, 0, 0, 1094, 1032, 0,
	0, 1034, 1045, 0, 0, 1037, 1038, 1094, 0, 1094,
	1042, 1043, 1028, 1029, 0, 1090, 0, 0, 1090, 1090,
	1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 0,
	1199, 1217, 1154, 1155, 1156, 1204, 1158, 1208, 1208, 1204,
	1204, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	0, 0, 1197, 1177, 1206, 1206, 1206, 1204, 1201, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1211, 1211, 1214, 1211, 0, 489, 0,
	0, 477, 0, 458, 0, 510, 512, 0, 514, 515,
	517, 518, 520, 521, 523, 524, 0, 700, 635, 0,
	0, 0, 0, 0, 0, 700, 415, 414, 0, 483,
	0, 0, 539, 0, 0, 319, 539, 0, 336, 337,
	338, 353, 353, 344, 490, 345, 346, 355, 0, 360,
	361, 0, 539, 539, 0, 0, 0, 700, 321, 320,
	358, 359, 328, 321, 1223, 1224, 0, 0, 0, 416,
	0, 0, 201, 0, 206, 158, 0, 0, 0, 0,
	0, 0, 187, 188, 0, 0, 0, 0, 0, 178,
	181, 806, 807, 668, 669, 182, 183, 458, 509, 511,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 394,
	547, 541, 543, 611, 41, 547, 0, 0, 431, 444,
	426, 0, 433, 0, 813, 417, 444, 419, 0, 433,
	458, 480, 458, 0, 244, 0, 249, 0, 0, 264,
	266, 267, 268, 254, 255, 371, 232, 233, 225, 226,
	227, 228, 229, 230, 231, 235, 51, 0, 216, 217,
	0, 0, 0, 92, 93, 94, 95, 96, 97, 99,
	83, 386, 388, 660, 672, 0, 663, 0, 102, 142,
	75, 0, 75, 1097, 1098, 1099, 1100, 1101, 1105, 0,
	1107, 1109, 1111, 1113, 0, 1129, -2, -2, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	1116, 1127, 1128, 0, 0, 0, 0, 0, 1125, 1120,
	0, 924, 0, 941, 945, 0, 0, 0, 42, 1089,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 0,
	1095, 0, 1096, 0, 0, 0, 1091, 1092, 0, 0,
	0, 994, 995, 996, 0, 439, 0, 1055, 1033, 1046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 1220, 1218, 1219, 1157, 1205, 0, 1182,
	0, 1183, 1184, 1185, 0, 0, 1178, 0, 1179, 1180,
	1181, 1173, 0, 1174, 1175, 0, 1176, 190, 565, 567,
	0, 448, 450, 451, 0, 478, 491, 496, 497, 500,
	0, 0, 0, 637, 0, 274, 654, 0, 670, 692,
	-2, 0, 0, 485, 0, 0, 579, 313, 0, 354,
	316, 321, 323, 0, 539, 539, 353, 0, 355, 0,
	355, 349, 350, 0, 364, 367, 365, 0, 327, 322,
	369, 329, 0, 274, 552, 0, 553, 554, 550, 581,
	606, 606, 0, 606, 585, 0, 0, 210, 211, 0,
	0, 205, 159, 160, 0, 162, 163, 164, 171, 166,
	168, 0, 0, 172, 184, 185, 186, 0, 0, 0,
	176, 177, 0, 476, 384, 385, 389, 0, 391, 810,
	392, 393, 539, 0, 548, 0, 544, 612, 0, 614,
	0, 539, 468, 0, 424, 0, 425, 441, 0, 445,
	0, 0, 437, 430, 434, 0, 0, 454, 418, 0,
	0, 423, 479, 481, 852, 0, 1229, -2, 1231, -2,
	-2, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 0, 250, 263, 0,
	0, 0, 0, 86, 657, 0, 87, 91, 81, 0,
	0, 0, 662, 0, 659, 664, 0, 101, 0, 0,
	76, 77, 714, 0, 0, 1106, 1108, 1110, 1112, 1114,
	0, 1117, 1125, 1121, 0, 1118, 0, 0, 1097, 0,
	946, 0, 0, 0, 0, 0, 0, 981, 982, 0,
	0, 986, 0, 0, 989, 0, 0, 0, 993, 0,
	1031, 1047, 1035, 0, 1039, 0, 1041, 0, 0, 964,
	965, 0, 0, 0, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 1200, 1153, 1221, 0, 0, 0, 1202,
	0, 0, 0, 0, 0, 568, 460, 0, 0, 0,
	503, 501, 502, 487, 0, 0, 644, 1225, 701, 278,
	0, 0, 656, 0, 0, 697, -2, 704, 0, 710,
	0, 0, 0, 402, 406, 30, 488, 0, 540, 315,
	0, 353, 539, 339, 340, 539, 356, 353, 357, 353,
	355, 0, 366, 644, 278, 0, 0, 0, 0, 0,
	572, 0, 0, 571, 0, 0, 0, 0, 0, 487,
	607, 0, 609, 610, 619, 620, 583, -2, 0, 552,
	589, 0, 0, 212, 200, 202, 0, 0, 0, 0,
	173, 174, 175, 179, 180, 0, 0, 537, 542, 549,
	613, 615, 42, 545, 537, 31, 0, 0, 0, 444,
	446, 0, 0, 444, 0, 0, 453, 0, 0, 444,
	0, 0, 372, 52, 269, 0, 0, 0, 0, 0,
	387, 0, 661, 83, 0, 0, 103, 0, 0, 0,
	1093, 1119, 0, 1126, 1122, 925, 933, 942, 0, 0,
	948, 960, 960, 0, 951, 1204, 1208, 954, 1204, 1206,
	1204, 960, 960, 0, 43, 0, 0, 987, 988, 0,
	0, 0, 440, 0, 0, 0, 963, 966, 967, 968,
	969, 971, 972, 973, 974, 975, 976, 977, 1210, 1209,
	1195, 0, 1196, 1207, 1212, 0, 1215, 0, 449, 464,
	0, 492, 493, 498, 499, 0, 0, 0, 814, 647,
	645, 646, 0, 1226, 651, 279, 280, 281, 282, 0,
	0, 0, 655, 0, 0, 693, 694, 695, 696, 705,
	1225, 1225, 1225, 814, 452, 0, -2, 0, 0, 404,
	0, 0, 580, 317, 539, 333, 347, 539, 539, 353,
	368, 647, 651, 539, 222, 0, 575, 569, 0, 558,
	573, 574, 561, 0, 563, 0, 559, 560, 539, 551,
	582, 608, 584, 588, 590, 591, 597, 0, 0, 0,
	0, 0, 204, 161, 0, 298, 167, 390, 811, 535,
	0, 0, 535, 469, 468, 0, 442, 0, 447, 444,
	429, 438, 428, 435, 436, 455, 444, 422, 421, 853,
	1230, 1227, 1228, 245, 0, 658, 83, 88, 89, 90,
	84, 82, 665, 0, 667, 0, 0, 0, 1123, 947,
	934, 949, 961, 962, 950, 935, 952, 953, 955, 956,
	957, 958, 959, 936, 983, 0, 985, 990, 991, 0,
	1036, 1040, 0, 1203, 0, 0, 466, 64, 0, 0,
	504, 505, 0, 0, 0, 815, 816, 818, 819, 0,
	0, 821, 877, 0, 830, 700, 830, 0, 0, 832,
	833, 636, 0, 0, 639, 640, 649, 0, 0, 0,
	284, 285, 0, 0, 0, 297, 293, 294, 295, 275,
	650, 0, 0, 0, 0, 0, 606, 0, 0, 539,
	403, 406, 407, 486, 318, 351, 348, 539, 272, 273,
	494, 0, 0, 555, 576, 0, 0, 556, 0, 557,
	562, 564, 221, 592, 0, 0, 594, 595, 596, 586,
	587, 169, 525, 0, 0, 546, 526, 32, 433, 443,
	427, 420, 85, 80, 666, 66, 0, 66, 0, 992,
	0, 1213, 1216, 468, 0, 465, 0, 0, 0, 632,
	487, -2, 0, -2, 820, 878, 842, 842, 831, 842,
	842, 700, 0, 648, 638, 0, 652, 653, 0, 286,
	287, 0, 290, 296, 0, 706, 707, 808, 809, 708,
	0, 539, 539, -2, 400, 405, 0, 352, 489, 223,
	224, 577, 0, 570, 601, 598, 0, 0, 536, 538,
	432, 34, 60, 0, 715, 0, 33, 984, 1030, 470,
	467, 0, 461, 463, 74, 0, 722, -2, 762, 1225,
	1225, 0, 1225, 1225, 1225, 1225, 0, 0, 1225, 1225,
	1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
	1225, 1225, 0, 817, 844, -2, 856, 858, 0, 0,
	861, 862, 0, 0, 0, 0, 899, 868, 0, 0,
	872, 0, 1141, 1142, 0, 876, 0, 834, 843, 0,
	843, 0, 0, 842, 0, 0, 0, 283, 288, 0,
	291, 292, 0, 688, 1204, 0, 712, 66, 494, 401,
	220, 0, 0, 602, 604, 599, 600, 57, 62, 67,
	68, 0, 0, 0, 0, 0, 459, 0, 65, 0,
	0, 711, 0, 709, 764, 0, 0, 1225, 1225, 0,
	0, 0, 0, 1225, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 859, 860, 863, 864, 865, 904, 905, 906, 866,
	901, 902, 903, 867, 0, 0, 0, 1139, 1140, 897,
	0, 0, 0, 0, 0, 0, 0, 828, 641, 0,
	643, 289, 681, 0, 500, 0, 713, 489, 578, 593,
	0, 44, 0, 64, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 633, 758, 763, 765, 766, 0, 0,
	769, 770, 771, 772, 0, 0, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 800, 801, 802, 803,
	804, 805, 785, 786, 787, 788, 789, 790, 797, 0,
	0, 794, 0, 0, 0, 1044, 892, 0, 0, 835,
	837, 838, 839, 840, 841, 836, 0, 0, 0, 0,
	827, 829, 873, 0, 642, 680, 689, 690, 500, 399,
	603, 605, 35, 0, 0, 61, 0, 70, 0, 72,
	73, 0, 0, 472, 462, 746, 0, 0, 752, 0,
	759, 767, 768, 773, 774, 791, 0, 0, 793, 0,
	0, 900, 0, 871, 880, 893, 0, 0, 681, 681,
	681, 681, 0, 874, 682, 1225, 0, 0, 686, 687,
	691, 719, 0, 45, 0, 47, 49, 50, 845, 58,
	59, 63, 71, 716, 0, 471, 0, 724, 0, 0,
	0, 0, 0, 756, 0, 798, 799, 792, 795, 796,
	869, 879, 881, 882, 0, 894, 895, 896, 898, 822,
	823, 824, 825, 0, 0, 684, 0, 36, 37, 0,
	46, 0, 0, 0, 473, 726, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 870, 883, 0, 884, 0,
	0, 0, 826, 683, 685, 0, 0, 48, 846, 0,
	723, 0, 758, 748, 0, 750, 0, 0, 0, 0,
	885, 887, 888, 0, 0, 886, 38, 39, 40, 0,
	0, 0, 728, 0, 744, 749, 751, 753, 0, 757,
	755, 889, 891, 890, 847, 717, 0, 727, 0, 740,
	725, 0, 754, 0, 729, -2, 0, 745, 0, 730,
	-2, 0, 738, 0, 0, 0, 731, 739, 0, 734,
	0, 0, 0, 718, 733, 0, -2, 741, 0, 0,
	735, -2, 0, 743, 742,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 512,
	104, 103, 105, 3, 513, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 514, 115, 515, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:587
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:593
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:626
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:630
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:637
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:645
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:658
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:670
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:685
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:691
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:695
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:701
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:708
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:717
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:721
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:725
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:738
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:744
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:753
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:764
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:768
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:774
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:778
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:784
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:788
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:794
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:818
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:837
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:845
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:854
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:862
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:866
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:871
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:875
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:884
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:908
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:912
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:918
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:924
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:942
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:959
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:986
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1005
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1018
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1029
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1056
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1069
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1088
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1094
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1109
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1118
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1122
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1126
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1130
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1134
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1138
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1145
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1149
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1171
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1175
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1181
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1185
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1189
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1193
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1197
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1201
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1205
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1209
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1213
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1217
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1221
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1225
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1229
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1233
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1237
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1241
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1245
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1249
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1253
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1257
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1261
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1265
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1269
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1273
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1277
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1281
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1285
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1289
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1293
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1297
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1301
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1305
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1309
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1313
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1317
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1321
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1325
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1329
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1333
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1337
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1341
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1345
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1349
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1353
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1357
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1361
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1365
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1369
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1373
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1377
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1389
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1396
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1403
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1412
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1442
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1446
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1450
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1462
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1473
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1479
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1483
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1497
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1506
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1522
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1545
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1568
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1575
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1582
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1631
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1638
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1644
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1648
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1659
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1670
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1674
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1678
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1682
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1686
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1690
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1694
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1698
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1702
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1708
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1712
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1716
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1720
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1725
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1730
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1736
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1743
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1749
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1756
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1763
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1773
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1780
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1791
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1802
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1806
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1812
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1824
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1830
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1860
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1878
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1882
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1894
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1902
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1950
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1954
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1966
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1971
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1972
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1973
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1978
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2001
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2034
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2062
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2070
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2074
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2078
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2082
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2086
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2090
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2098
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2102
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2106
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2116
		{
			yyVAL.item = nil
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2121
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2155
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2164
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2170
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2175
		{
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2179
		{
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2184
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2193
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2197
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2205
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2209
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2213
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2217
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2221
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2225
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2239
		{
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2241
		{
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2250
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2277
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2283
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2327
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2345
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2362
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2367
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2371
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2377
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2390
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2400
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2405
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2409
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2415
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2419
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2428
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2432
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2483
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2487
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2493
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2502
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2547
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2552
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2575
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2588
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2599
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2603
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2609
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2614
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2621
		{
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2623
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2626
		{
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2635
		{
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2639
		{
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2653
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2660
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2666
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2674
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2681
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2688
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2708
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2718
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2725
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2731
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2739
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2746
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2753
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2776
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2799
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2803
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2822
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2828
		{
			yyVAL.str = yyDollar[1].str
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2832
		{
			yyVAL.str = yyDollar[3].str
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2838
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2842
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2848
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2853
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2864
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2868
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2884
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2890
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2894
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2900
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2904
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2913
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2926
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2933
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2940
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2958
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2983
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2994
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3007
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3011
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3016
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3020
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3027
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3032
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3045
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3049
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3053
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3057
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3061
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3065
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3087
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3091
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3109
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3118
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3141
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3147
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3153
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3157
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3168
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3172
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3176
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3181
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3185
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3189
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3195
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3199
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3205
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3267
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3300
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3316
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3324
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3361
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3379
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3409
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3424
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3428
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3434
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3438
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3442
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3446
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3451
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3459
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3465
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3473
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3481
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3491
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3497
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3506
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3515
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3524
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3534
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3538
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3548
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3552
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3556
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3560
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3566
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3576
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3580
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3586
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3592
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3602
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3608
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3612
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3616
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3626
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3632
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3646
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3652
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3666
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3679
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3726
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3733
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3737
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3753
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3757
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3761
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3766
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3770
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3774
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3778
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3787
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3791
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3795
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3799
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3804
		{
			yyVAL.str = ""
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3808
		{
			yyVAL.str = yyDollar[1].str
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3812
		{
			yyVAL.str = yyDollar[2].str
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3821
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3825
		{
			yyVAL.str = yyDollar[1].str
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3829
		{
			yyVAL.str = yyDollar[2].str
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3833
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3837
		{
			yyVAL.str = yyDollar[2].str
		}
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3871
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3892
		{
		}
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3909
		{
			yyVAL.str = yyDollar[1].str
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:3915
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3925
		{
			yyVAL.str = yyDollar[1].str
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3929
		{
			yyVAL.str = yyDollar[1].str
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3935
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3942
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:3948
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3956
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3962
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:3969
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3977
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:3983
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3992
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4004
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4009
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4015
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4023
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4129
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4133
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4139
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4149
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4153
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4159
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4169
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4173
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4177
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4186
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4199
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4205
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4227
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4231
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4254
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4258
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4262
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4266
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4272
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4295
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4317
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4321
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4325
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4329
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4339
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4343
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4349
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4354
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4359
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4363
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4367
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4371
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4375
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4381
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4395
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4408
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4414
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4418
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4424
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4428
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4432
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4447
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4458
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4469
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4476
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4484
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4496
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4508
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4521
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4536
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4547
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4551
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4560
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4583
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4587
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4593
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4597
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4603
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4622
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4626
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4632
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4636
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4649
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4658
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4662
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4671
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4676
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4680
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4685
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4689
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4699
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4703
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4714
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4730
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4758
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4768
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4778
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4782
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4787
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4791
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4800
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4806
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4810
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4814
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4820
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4824
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4828
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4832
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4836
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4840
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4844
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4848
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4852
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4856
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4860
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4864
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4868
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4872
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4876
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4880
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4884
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4888
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4904
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4908
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4912
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4916
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4920
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4924
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4928
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:4932
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4939
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:4943
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:4949
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4954
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4958
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4962
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4968
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4972
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5002
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5006
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5015
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5020
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5037
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5043
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5047
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5053
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5063
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5069
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5078
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5087
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5110
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5119
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5129
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5143
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5157
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5163
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5169
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5183
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5190
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5204
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5232
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5238
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5242
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5248
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5252
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5264
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5288
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5296
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5313
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5323
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5328
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5332
		{
			yyVAL.str = yyDollar[1].str
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5338
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5342
		{
			yyVAL.str = yyDollar[2].str
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5348
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5360
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5367
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5374
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5381
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5388
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5397
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5403
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5409
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5417
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5421
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5430
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5437
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5445
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5454
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5459
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5463
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5479
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5485
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5493
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5501
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5509
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5517
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5525
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5533
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5539
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5543
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5547
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5551
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5559
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5563
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5571
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5579
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5583
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5588
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5600
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5604
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5613
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5617
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5621
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5625
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5638
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5647
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5653
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5657
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5663
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5673
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5690
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5707
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5745
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5759
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5774
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5789
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5821
		{
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5827
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5836
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5844
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5852
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5861
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5870
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5888
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5897
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5906
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5915
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5924
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5942
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5951
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5967
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5975
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5983
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5991
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:5999
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6008
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6016
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6025
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6034
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6042
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6050
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6059
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6068
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6125
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6149
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6159
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6193
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6201
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6212
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6221
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6230
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6238
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6248
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6256
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6264
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6278
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6288
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6307
		{
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6309
		{
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6350
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6360
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6364
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6368
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6374
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6379
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6383
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6389
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6393
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6400
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6404
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6408
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6416
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6420
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6424
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6434
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6438
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6442
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6446
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6450
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6454
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6458
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6462
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6466
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6470
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6478
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6482
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6486
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6490
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6494
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6498
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6502
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6506
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6516
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6522
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6526
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6533
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6537
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6541
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6547
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6551
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6555
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6559
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6563
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6567
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6571
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6577
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6581
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6585
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6589
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6599
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6612
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6617
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6621
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6625
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6629
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6633
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6637
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6657
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6668
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6673
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6728
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6741
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6754
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6780
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6860
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6883
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6917
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6965
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6982
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7014
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7034
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7054
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7083
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7096
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7109
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7122
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7134
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7146
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7194
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7206
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7218
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7271
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7279
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7288
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7298
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7321
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7326
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7332
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7339
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7343
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7348
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7352
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7364
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7378
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7387
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7394
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7424
		{
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7436
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7440
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}

/*
 * Copyright 2021 Matrix Origin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package group_concat;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "plan.proto";

option (gogoproto.sizer_all)                = false;
option (gogoproto.protosizer_all)           = true;
option (gogoproto.goproto_enum_prefix_all)  = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all)      = false;
option (gogoproto.goproto_sizecache_all)    = false;

message Argument {
    option (gogoproto.typedecl)    = false;
    bool Dist                      = 1;
    repeated plan.Expr GroupExpr   = 2 [(gogoproto.nullable) = true];
    repeated plan.Expr OrderByExpr = 3 [(gogoproto.nullable) = true];
    string Separator               = 4;
    int32 OrderId                  = 5;
}

message EncodeGroupConcat {
    option (gogoproto.typedecl) = false;
    bytes ResStrData            = 1;
    bytes InsertsStrData        = 2;
    Argument Arg                = 3 [(gogoproto.nullable) = true];
    repeated bytes Ityp         = 4 [
        (gogoproto.customtype) =
            "github.com/matrixorigin/matrixone/pkg/container/types.Type",
        (gogoproto.nullable) = false
    ];
    int32 Groups = 5 [(gogoproto.casttype) = "int"];
}

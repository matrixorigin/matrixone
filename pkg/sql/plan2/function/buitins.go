// Copyright 2021 - 2022 Matrix Origin
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package function

import (
	"github.com/matrixorigin/matrixone/pkg/container/types"
	"github.com/matrixorigin/matrixone/pkg/container/vector"
	"github.com/matrixorigin/matrixone/pkg/pb/plan"
	"github.com/matrixorigin/matrixone/pkg/sql/plan2/function/builtin/binary"
	"github.com/matrixorigin/matrixone/pkg/sql/plan2/function/builtin/unary"
	"github.com/matrixorigin/matrixone/pkg/vm/process2"
)

func initBuiltIns() {
	var err error

	for name, fs := range builtins {
		for _, f := range fs {
			err = appendFunction(name, f)
			if err != nil {
				panic(err)
			}
		}
	}
}

// builtins contains the builtin function indexed by function id.
var builtins = map[int][]Function{
	EXTRACT: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        UNKNOW_KIND_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_date},
			ReturnTyp:   types.T_date,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        UNKNOW_KIND_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_datetime},
			ReturnTyp:   types.T_datetime,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
	},
	YEAR: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_uint16,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_datetime},
			ReturnTyp:   types.T_uint16,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
	},
	SUBSTRING: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_int64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn: func(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
				panic("unimplement")
			},
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char, types.T_int64},
			ReturnTyp:   types.T_char,
			TypeCheckFn: strictTypeCheck,
			Fn: func(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
				panic("unimplement")
			},
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_int64, types.T_int64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
		{
			Index:       3,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char, types.T_int64, types.T_int64},
			ReturnTyp:   types.T_char,
			TypeCheckFn: strictTypeCheck,
			Fn:          nil,
		},
	},
}

// unaryBuiltins contains the unary builtin function indexed by function id.
var unaryBuiltins = map[int][]Function{
	ABS: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_int64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAbsInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_int64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAbsUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAbsFloat64,
		},
	},
	ACOS: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAcosInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAcosUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAcosFloat64,
		},
	},
	ATAN: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAtanInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAtanUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsAtanFloat64,
		},
	},
	BIN: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsBinInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsBinUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsBinFloat64,
		},
	},
	COS: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCostInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCostUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCostFloat64,
		},
	},
	COT: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCotInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCotUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsCotFloat64,
		},
	},
	DATE: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_date,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsDateDate,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_datetime},
			ReturnTyp:   types.T_date,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsDateDateTime,
		},
	},
	DAYOFYEAR: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_uint16,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsDayOfYear,
		},
	},
	EMPTY: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsEmpty,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsEmpty,
		},
	},
	EXP: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsExpInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsExpUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsExpFloat64,
		},
	},
	LENGTH: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_int64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLengthVarchar,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_int64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLengthChar,
		},
	},
	LENGTHUTF8: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_uint64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLengthUTF8,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_uint64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLengthUTF8,
		},
	},
	LN: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLnInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLnUInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLnFloat64,
		},
	},
	LOG: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLogInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLogUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLogFloat64,
		},
	},
	LTRIM: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLTrimVarchar,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_char,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsLTrimChar,
		},
	},
	MONTH: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsMonthDate,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_datetime},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsMonthDatetime,
		},
	},
	OCT: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsOctInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsOctUInt64,
		},
	},
	REVERSE: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsReverseVarchar,
		},
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_char,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsReverseChar,
		},
	},
	RTRIM: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsRTrimVarchar,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_char,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsRTrimChar,
		},
	},
	SIN: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinFloat64,
		},
	},
	SINH: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinhInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinhInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSinhFloat64,
		},
	},
	SPACE: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSpaceInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSpaceUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSpaceFloat64,
		},
		{
			Index:       3,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSpaceChar,
		},
		{
			Index:       4,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar},
			ReturnTyp:   types.T_varchar,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsSpaceVarchar,
		},
	},
	TAN: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_int64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsTanInt64,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_uint64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsTanUInt64,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_float64},
			ReturnTyp:   types.T_float64,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsTanFloat64,
		},
	},
	WEEKDAY: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsWeekDayDate,
		},
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_datetime},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsWeekDayDatetime,
		},
	},
	YEAR: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_date},
			ReturnTyp:   types.T_uint16,
			TypeCheckFn: strictTypeCheck,
			Fn:          unary.FdsYearDate,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_datetime},
			ReturnTyp:   types.T_uint16,
			TypeCheckFn: strictTypeCheck,
		},
	},
}

// binaryBuiltins contains the binary builtin function indexed by function id.
//var binaryBuiltins map[int][]Function{}
var binaryBuiltins map[int][]Function = map[int][]Function{
	ENDSWITH: {
		{
			Index:       0,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_varchar},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          binary.FdsEndsWith,
		},
		{
			Index:       1,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_char, types.T_char},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          binary.FdsEndsWith,
		},
		{
			Index:       2,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_char},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          binary.FdsEndsWith,
		},
		{
			Index:       3,
			Flag:        plan.Function_STRICT,
			Kind:        STANDARD_FUNCTION,
			Args:        []types.T{types.T_varchar, types.T_varchar},
			ReturnTyp:   types.T_uint8,
			TypeCheckFn: strictTypeCheck,
			Fn:          binary.FdsEndsWith,
		},
	},
}

// Copyright 2021 Matrix Origin
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// div.go is generated by div.template and overloadGenerate.go, do not edit it directly.

package operator

import (
	"github.com/matrixorigin/matrixone/pkg/container/vector"
	"github.com/matrixorigin/matrixone/pkg/vm/process2"
)

// div operator's evaluation for arguments: [Float32,Float32]
func FdsOpDivFloat32Float32(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
	//lv := vs[0]
	//rv := vs[1]
	//lc := lv.IsConstant()
	//rc := rv.IsConstant()
	return nil, nil
}

// div operator's evaluation for arguments: [Float64,Float64]
func FdsOpDivFloat64Float64(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
	//lv := vs[0]
	//rv := vs[1]
	//lc := lv.IsConstant()
	//rc := rv.IsConstant()
	return nil, nil

}

// div operator's evaluation for arguments: [decimal64,decimal64]
func FdsOpDivDecimal64Decimal64(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
	//lv := vs[0]
	//rv := vs[1]
	//lc := lv.IsConstant()
	//rc := rv.IsConstant()
	return nil, nil

}

// div operator's evaluation for arguments: [decimal128,decimal128]
func FdsOpDivDecimal128Decimal128(vs []*vector.Vector, proc *process.Process) (*vector.Vector, error) {
	//lv := vs[0]
	//rv := vs[1]
	//lc := lv.IsConstant()
	//rc := rv.IsConstant()
	return nil, nil

}

// +build amd64
// Code generated by command: go run avx2.go -out avx2.s. DO NOT EDIT.

#include "textflag.h"

// func findAvx2Asm(x []uint64, y uint64) int
// Requires: AVX, AVX2, BMI, SSE2
TEXT Â·findAvx2Asm(SB), NOSPLIT, $0-40
	MOVQ         x_base+0(FP), AX
	MOVQ         y+24(FP), CX
	MOVQ         x_len+8(FP), DX
	MOVQ         DX, BX
	MOVQ         CX, X0
	VPBROADCASTQ X0, Y0

loop:
	CMPQ      DX, $0x00000004
	JL        tailLoop
	VPCMPEQQ  (AX), Y0, Y1
	VMOVMSKPD Y1, BP
	TZCNTQ    BP, BP
	JNC       foundVector
	ADDQ      $0x00000020, AX
	SUBQ      $0x00000004, DX
	JMP       loop

tailLoop:
	CMPQ DX, $0x00000000
	JE   end
	CMPQ CX, (AX)
	JE   foundScalar
	ADDQ $0x00000008, AX
	DECQ DX
	JMP  tailLoop

foundVector:
	SUBQ DX, BX
	ADDQ BP, BX
	MOVQ BX, ret+32(FP)
	RET

foundScalar:
	SUBQ DX, BX
	MOVQ BX, ret+32(FP)
	RET

end:
	MOVQ $0xffffffffffffffff, BX
	MOVQ BX, ret+32(FP)
	RET

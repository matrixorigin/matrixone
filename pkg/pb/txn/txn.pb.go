// Copyright 2022 MatrixOrigin.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.6
// source: txn.proto

package txn

import (
	hlc "/hlc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TxnStatus transaction status
type TxnStatus int32

const (
	// Active is the state of transaction creation, in this state, can execute the
	// transaction Read/Write/Commit/Rollback.
	TxnStatus_Active TxnStatus = 0
	// Prepared for distributed transactions across DNs, a 2pc commit is performed,
	// and the prepared status means that the transaction on a DN was executed
	// successfully in the first phase.
	//
	// Note that this status needs to be logged to the LogService. Once the first
	// phase of a transaction is successful, data cannot be lost.
	TxnStatus_Prepared TxnStatus = 1
	// Committing for distributed transactions across DNs, once all DNs have completed
	// the first phase, the transaction enters the Committing state and initiates an
	// asynchronous process to handle the commit of temporary data.
	//
	// Note that when all DNs involved are in the prepared state, the distributed
	// transaction can be considered committed because all data has been written
	// successfully. The subsequent Committing process just explicitly converts these
	// writes into committed data.
	//
	// Note that the state exists only in memory and is not persisted to the LogService.
	// It can be restored through the Prepared state, if all(DN).Status == Prepared.
	TxnStatus_Committing TxnStatus = 2
	// Committed after the Committing phase has transformed all DN data involved into
	// committed data, the status of the distributed transaction is explicitly recorded
	// as Committed.
	//
	// Note that this status needs to be logged to the LogService
	TxnStatus_Committed TxnStatus = 3
	// Aborting a client initiating a Rollback call or a distributed transaction that has
	// any error in the first phase will enter the Aborting state. This state starts an
	// asynchronous task to clean up the temporary data written by the transaction.
	//
	// Note that the state exists only in memory and is not persisted to the LogService.
	// It can be restored through the Prepared state, if Any(DN).Status != Prepared.
	TxnStatus_Aborting TxnStatus = 4
	// Aborted after the Aborting phase, all data involved in the DN is cleaned up and
	// the transaction status is explicitly recorded as Aborted.
	//
	// Note that this status needs to be logged to the LogService
	TxnStatus_Aborted TxnStatus = 5
)

// Enum value maps for TxnStatus.
var (
	TxnStatus_name = map[int32]string{
		0: "Active",
		1: "Prepared",
		2: "Committing",
		3: "Committed",
		4: "Aborting",
		5: "Aborted",
	}
	TxnStatus_value = map[string]int32{
		"Active":     0,
		"Prepared":   1,
		"Committing": 2,
		"Committed":  3,
		"Aborting":   4,
		"Aborted":    5,
	}
)

func (x TxnStatus) Enum() *TxnStatus {
	p := new(TxnStatus)
	*p = x
	return p
}

func (x TxnStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxnStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_txn_proto_enumTypes[0].Descriptor()
}

func (TxnStatus) Type() protoreflect.EnumType {
	return &file_txn_proto_enumTypes[0]
}

func (x TxnStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxnStatus.Descriptor instead.
func (TxnStatus) EnumDescriptor() ([]byte, []int) {
	return file_txn_proto_rawDescGZIP(), []int{0}
}

type TxnMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TS *hlc.Timestamp `protobuf:"bytes,1,opt,name=TS,proto3" json:"TS,omitempty"`
}

func (x *TxnMeta) Reset() {
	*x = TxnMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_txn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnMeta) ProtoMessage() {}

func (x *TxnMeta) ProtoReflect() protoreflect.Message {
	mi := &file_txn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnMeta.ProtoReflect.Descriptor instead.
func (*TxnMeta) Descriptor() ([]byte, []int) {
	return file_txn_proto_rawDescGZIP(), []int{0}
}

func (x *TxnMeta) GetTS() *hlc.Timestamp {
	if x != nil {
		return x.TS
	}
	return nil
}

var File_txn_proto protoreflect.FileDescriptor

var file_txn_proto_rawDesc = []byte{
	0x0a, 0x09, 0x74, 0x78, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x07,
	0x54, 0x78, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x54, 0x53, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x02, 0x54, 0x53, 0x2a, 0x5f, 0x0a, 0x09, 0x54, 0x78, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x10, 0x05, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x74, 0x78, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_txn_proto_rawDescOnce sync.Once
	file_txn_proto_rawDescData = file_txn_proto_rawDesc
)

func file_txn_proto_rawDescGZIP() []byte {
	file_txn_proto_rawDescOnce.Do(func() {
		file_txn_proto_rawDescData = protoimpl.X.CompressGZIP(file_txn_proto_rawDescData)
	})
	return file_txn_proto_rawDescData
}

var file_txn_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_txn_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_txn_proto_goTypes = []interface{}{
	(TxnStatus)(0),        // 0: TxnStatus
	(*TxnMeta)(nil),       // 1: TxnMeta
	(*hlc.Timestamp)(nil), // 2: Timestamp
}
var file_txn_proto_depIdxs = []int32{
	2, // 0: TxnMeta.TS:type_name -> Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_txn_proto_init() }
func file_txn_proto_init() {
	if File_txn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_txn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_txn_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_txn_proto_goTypes,
		DependencyIndexes: file_txn_proto_depIdxs,
		EnumInfos:         file_txn_proto_enumTypes,
		MessageInfos:      file_txn_proto_msgTypes,
	}.Build()
	File_txn_proto = out.File
	file_txn_proto_rawDesc = nil
	file_txn_proto_goTypes = nil
	file_txn_proto_depIdxs = nil
}

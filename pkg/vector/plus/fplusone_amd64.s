// Code generated by command: go run fplusone_amd64.go -out fplusone_amd64.s. DO NOT EDIT.

#include "textflag.h"

// func fPlusOneAvx(x float64, y []float64, r []float64)
// Requires: AVX, AVX2, SSE2
TEXT Â·fPlusOneAvx(SB), NOSPLIT, $0-56
	MOVSD        x+0(FP), X0
	MOVQ         y_base+8(FP), AX
	MOVQ         r_base+32(FP), CX
	MOVQ         y_len+16(FP), DX
	VBROADCASTSD X0, Y0

blockloop:
	CMPQ    DX, $0x00000018
	JL      tailloop
	VADDPD  (AX), Y0, Y1
	VADDPD  32(AX), Y0, Y2
	VADDPD  64(AX), Y0, Y3
	VADDPD  96(AX), Y0, Y4
	VADDPD  128(AX), Y0, Y5
	VADDPD  160(AX), Y0, Y6
	VMOVUPD Y1, (CX)
	VMOVUPD Y2, 32(CX)
	VMOVUPD Y3, 64(CX)
	VMOVUPD Y4, 96(CX)
	VMOVUPD Y5, 128(CX)
	VMOVUPD Y6, 160(CX)
	ADDQ    $0x000000c0, AX
	ADDQ    $0x000000c0, CX
	SUBQ    $0x00000018, DX
	JMP     blockloop

tailloop:
	CMPQ    DX, $0x00000004
	JL      done
	VADDPD  (AX), Y0, Y1
	VMOVUPD Y1, (CX)
	ADDQ    $0x00000020, AX
	ADDQ    $0x00000020, CX
	SUBQ    $0x00000004, DX
	JMP     tailloop

done:
	RET
